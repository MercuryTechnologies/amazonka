-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-frauddetectorZSamazonka-frauddetector
@version 2.0


module Network.AWS.FraudDetector.Types.AsyncJobStatus
newtype AsyncJobStatus
AsyncJobStatus' :: Text -> AsyncJobStatus
[fromAsyncJobStatus] :: AsyncJobStatus -> Text
pattern AsyncJobStatus_CANCELED :: AsyncJobStatus
pattern AsyncJobStatus_CANCEL_IN_PROGRESS :: AsyncJobStatus
pattern AsyncJobStatus_COMPLETE :: AsyncJobStatus
pattern AsyncJobStatus_FAILED :: AsyncJobStatus
pattern AsyncJobStatus_IN_PROGRESS :: AsyncJobStatus
pattern AsyncJobStatus_IN_PROGRESS_INITIALIZING :: AsyncJobStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance GHC.Read.Read Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus
instance GHC.Show.Show Network.AWS.FraudDetector.Types.AsyncJobStatus.AsyncJobStatus


module Network.AWS.FraudDetector.Types.BatchCreateVariableError

-- | Provides the error of the batch create variable API.
--   
--   <i>See:</i> <a>newBatchCreateVariableError</a> smart constructor.
data BatchCreateVariableError
BatchCreateVariableError' :: Maybe Text -> Maybe Int -> Maybe Text -> BatchCreateVariableError

-- | The name.
[$sel:name:BatchCreateVariableError'] :: BatchCreateVariableError -> Maybe Text

-- | The error code.
[$sel:code:BatchCreateVariableError'] :: BatchCreateVariableError -> Maybe Int

-- | The error message.
[$sel:message:BatchCreateVariableError'] :: BatchCreateVariableError -> Maybe Text

-- | Create a value of <a>BatchCreateVariableError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_name</a> - The name.
--   
--   <a>$sel:code:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_code</a> - The error code.
--   
--   <a>$sel:message:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_message</a> - The error message.
newBatchCreateVariableError :: BatchCreateVariableError

-- | The name.
batchCreateVariableError_name :: Lens' BatchCreateVariableError (Maybe Text)

-- | The error code.
batchCreateVariableError_code :: Lens' BatchCreateVariableError (Maybe Int)

-- | The error message.
batchCreateVariableError_message :: Lens' BatchCreateVariableError (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.BatchCreateVariableError.BatchCreateVariableError
instance GHC.Show.Show Network.AWS.FraudDetector.Types.BatchCreateVariableError.BatchCreateVariableError
instance GHC.Read.Read Network.AWS.FraudDetector.Types.BatchCreateVariableError.BatchCreateVariableError
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.BatchCreateVariableError.BatchCreateVariableError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.BatchCreateVariableError.BatchCreateVariableError
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.BatchCreateVariableError.BatchCreateVariableError
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.BatchCreateVariableError.BatchCreateVariableError


module Network.AWS.FraudDetector.Types.BatchGetVariableError

-- | Provides the error of the batch get variable API.
--   
--   <i>See:</i> <a>newBatchGetVariableError</a> smart constructor.
data BatchGetVariableError
BatchGetVariableError' :: Maybe Text -> Maybe Int -> Maybe Text -> BatchGetVariableError

-- | The error name.
[$sel:name:BatchGetVariableError'] :: BatchGetVariableError -> Maybe Text

-- | The error code.
[$sel:code:BatchGetVariableError'] :: BatchGetVariableError -> Maybe Int

-- | The error message.
[$sel:message:BatchGetVariableError'] :: BatchGetVariableError -> Maybe Text

-- | Create a value of <a>BatchGetVariableError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_name</a> - The error name.
--   
--   <a>$sel:code:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_code</a> - The error code.
--   
--   <a>$sel:message:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_message</a> - The error message.
newBatchGetVariableError :: BatchGetVariableError

-- | The error name.
batchGetVariableError_name :: Lens' BatchGetVariableError (Maybe Text)

-- | The error code.
batchGetVariableError_code :: Lens' BatchGetVariableError (Maybe Int)

-- | The error message.
batchGetVariableError_message :: Lens' BatchGetVariableError (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.BatchGetVariableError.BatchGetVariableError
instance GHC.Show.Show Network.AWS.FraudDetector.Types.BatchGetVariableError.BatchGetVariableError
instance GHC.Read.Read Network.AWS.FraudDetector.Types.BatchGetVariableError.BatchGetVariableError
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.BatchGetVariableError.BatchGetVariableError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.BatchGetVariableError.BatchGetVariableError
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.BatchGetVariableError.BatchGetVariableError
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.BatchGetVariableError.BatchGetVariableError


module Network.AWS.FraudDetector.Types.BatchImport

-- | The batch import job details.
--   
--   <i>See:</i> <a>newBatchImport</a> smart constructor.
data BatchImport
BatchImport' :: Maybe Text -> Maybe Text -> Maybe AsyncJobStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> BatchImport

-- | The reason batch import job failed.
[$sel:failureReason:BatchImport'] :: BatchImport -> Maybe Text

-- | The ARN of the IAM role to use for this job request.
[$sel:iamRoleArn:BatchImport'] :: BatchImport -> Maybe Text

-- | The status of the batch import job.
[$sel:status:BatchImport'] :: BatchImport -> Maybe AsyncJobStatus

-- | The number of records processed by batch import job.
[$sel:processedRecordsCount:BatchImport'] :: BatchImport -> Maybe Int

-- | The total number of records in the batch import job.
[$sel:totalRecordsCount:BatchImport'] :: BatchImport -> Maybe Int

-- | The ID of the batch import job.
[$sel:jobId:BatchImport'] :: BatchImport -> Maybe Text

-- | The ARN of the batch import job.
[$sel:arn:BatchImport'] :: BatchImport -> Maybe Text

-- | Timestamp of when the batch import job started.
[$sel:startTime:BatchImport'] :: BatchImport -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:BatchImport'] :: BatchImport -> Maybe Text

-- | Timestamp of when batch import job completed.
[$sel:completionTime:BatchImport'] :: BatchImport -> Maybe Text

-- | The Amazon S3 location of your output file.
[$sel:outputPath:BatchImport'] :: BatchImport -> Maybe Text

-- | The Amazon S3 location of your data file for batch import.
[$sel:inputPath:BatchImport'] :: BatchImport -> Maybe Text

-- | The number of records that failed to import.
[$sel:failedRecordsCount:BatchImport'] :: BatchImport -> Maybe Int

-- | Create a value of <a>BatchImport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchImport'</a>,
--   <a>batchImport_failureReason</a> - The reason batch import job failed.
--   
--   <a>$sel:iamRoleArn:BatchImport'</a>, <a>batchImport_iamRoleArn</a> -
--   The ARN of the IAM role to use for this job request.
--   
--   <a>$sel:status:BatchImport'</a>, <a>batchImport_status</a> - The
--   status of the batch import job.
--   
--   <a>$sel:processedRecordsCount:BatchImport'</a>,
--   <a>batchImport_processedRecordsCount</a> - The number of records
--   processed by batch import job.
--   
--   <a>$sel:totalRecordsCount:BatchImport'</a>,
--   <a>batchImport_totalRecordsCount</a> - The total number of records in
--   the batch import job.
--   
--   <a>$sel:jobId:BatchImport'</a>, <a>batchImport_jobId</a> - The ID of
--   the batch import job.
--   
--   <a>$sel:arn:BatchImport'</a>, <a>batchImport_arn</a> - The ARN of the
--   batch import job.
--   
--   <a>$sel:startTime:BatchImport'</a>, <a>batchImport_startTime</a> -
--   Timestamp of when the batch import job started.
--   
--   <a>$sel:eventTypeName:BatchImport'</a>,
--   <a>batchImport_eventTypeName</a> - The name of the event type.
--   
--   <a>$sel:completionTime:BatchImport'</a>,
--   <a>batchImport_completionTime</a> - Timestamp of when batch import job
--   completed.
--   
--   <a>$sel:outputPath:BatchImport'</a>, <a>batchImport_outputPath</a> -
--   The Amazon S3 location of your output file.
--   
--   <a>$sel:inputPath:BatchImport'</a>, <a>batchImport_inputPath</a> - The
--   Amazon S3 location of your data file for batch import.
--   
--   <a>$sel:failedRecordsCount:BatchImport'</a>,
--   <a>batchImport_failedRecordsCount</a> - The number of records that
--   failed to import.
newBatchImport :: BatchImport

-- | The reason batch import job failed.
batchImport_failureReason :: Lens' BatchImport (Maybe Text)

-- | The ARN of the IAM role to use for this job request.
batchImport_iamRoleArn :: Lens' BatchImport (Maybe Text)

-- | The status of the batch import job.
batchImport_status :: Lens' BatchImport (Maybe AsyncJobStatus)

-- | The number of records processed by batch import job.
batchImport_processedRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The total number of records in the batch import job.
batchImport_totalRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The ID of the batch import job.
batchImport_jobId :: Lens' BatchImport (Maybe Text)

-- | The ARN of the batch import job.
batchImport_arn :: Lens' BatchImport (Maybe Text)

-- | Timestamp of when the batch import job started.
batchImport_startTime :: Lens' BatchImport (Maybe Text)

-- | The name of the event type.
batchImport_eventTypeName :: Lens' BatchImport (Maybe Text)

-- | Timestamp of when batch import job completed.
batchImport_completionTime :: Lens' BatchImport (Maybe Text)

-- | The Amazon S3 location of your output file.
batchImport_outputPath :: Lens' BatchImport (Maybe Text)

-- | The Amazon S3 location of your data file for batch import.
batchImport_inputPath :: Lens' BatchImport (Maybe Text)

-- | The number of records that failed to import.
batchImport_failedRecordsCount :: Lens' BatchImport (Maybe Int)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.BatchImport.BatchImport
instance GHC.Show.Show Network.AWS.FraudDetector.Types.BatchImport.BatchImport
instance GHC.Read.Read Network.AWS.FraudDetector.Types.BatchImport.BatchImport
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.BatchImport.BatchImport
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.BatchImport.BatchImport
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.BatchImport.BatchImport
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.BatchImport.BatchImport


module Network.AWS.FraudDetector.Types.BatchPrediction

-- | The batch prediction details.
--   
--   <i>See:</i> <a>newBatchPrediction</a> smart constructor.
data BatchPrediction
BatchPrediction' :: Maybe Text -> Maybe Text -> Maybe AsyncJobStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BatchPrediction

-- | The reason a batch prediction job failed.
[$sel:failureReason:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The ARN of the IAM role to use for this job request.
[$sel:iamRoleArn:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The batch prediction status.
[$sel:status:BatchPrediction'] :: BatchPrediction -> Maybe AsyncJobStatus

-- | The number of records processed by the batch prediction job.
[$sel:processedRecordsCount:BatchPrediction'] :: BatchPrediction -> Maybe Int

-- | The total number of records in the batch prediction job.
[$sel:totalRecordsCount:BatchPrediction'] :: BatchPrediction -> Maybe Int

-- | Timestamp of most recent heartbeat indicating the batch prediction job
--   was making progress.
[$sel:lastHeartbeatTime:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The job ID for the batch prediction.
[$sel:jobId:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The ARN of batch prediction job.
[$sel:arn:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | Timestamp of when the batch prediction job started.
[$sel:startTime:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | Timestamp of when the batch prediction job completed.
[$sel:completionTime:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The Amazon S3 location of your output file.
[$sel:outputPath:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The name of the detector.
[$sel:detectorName:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The detector version.
[$sel:detectorVersion:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The Amazon S3 location of your training file.
[$sel:inputPath:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | Create a value of <a>BatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchPrediction'</a>,
--   <a>batchPrediction_failureReason</a> - The reason a batch prediction
--   job failed.
--   
--   <a>$sel:iamRoleArn:BatchPrediction'</a>,
--   <a>batchPrediction_iamRoleArn</a> - The ARN of the IAM role to use for
--   this job request.
--   
--   <a>$sel:status:BatchPrediction'</a>, <a>batchPrediction_status</a> -
--   The batch prediction status.
--   
--   <a>$sel:processedRecordsCount:BatchPrediction'</a>,
--   <a>batchPrediction_processedRecordsCount</a> - The number of records
--   processed by the batch prediction job.
--   
--   <a>$sel:totalRecordsCount:BatchPrediction'</a>,
--   <a>batchPrediction_totalRecordsCount</a> - The total number of records
--   in the batch prediction job.
--   
--   <a>$sel:lastHeartbeatTime:BatchPrediction'</a>,
--   <a>batchPrediction_lastHeartbeatTime</a> - Timestamp of most recent
--   heartbeat indicating the batch prediction job was making progress.
--   
--   <a>$sel:jobId:BatchPrediction'</a>, <a>batchPrediction_jobId</a> - The
--   job ID for the batch prediction.
--   
--   <a>$sel:arn:BatchPrediction'</a>, <a>batchPrediction_arn</a> - The ARN
--   of batch prediction job.
--   
--   <a>$sel:startTime:BatchPrediction'</a>,
--   <a>batchPrediction_startTime</a> - Timestamp of when the batch
--   prediction job started.
--   
--   <a>$sel:eventTypeName:BatchPrediction'</a>,
--   <a>batchPrediction_eventTypeName</a> - The name of the event type.
--   
--   <a>$sel:completionTime:BatchPrediction'</a>,
--   <a>batchPrediction_completionTime</a> - Timestamp of when the batch
--   prediction job completed.
--   
--   <a>$sel:outputPath:BatchPrediction'</a>,
--   <a>batchPrediction_outputPath</a> - The Amazon S3 location of your
--   output file.
--   
--   <a>$sel:detectorName:BatchPrediction'</a>,
--   <a>batchPrediction_detectorName</a> - The name of the detector.
--   
--   <a>$sel:detectorVersion:BatchPrediction'</a>,
--   <a>batchPrediction_detectorVersion</a> - The detector version.
--   
--   <a>$sel:inputPath:BatchPrediction'</a>,
--   <a>batchPrediction_inputPath</a> - The Amazon S3 location of your
--   training file.
newBatchPrediction :: BatchPrediction

-- | The reason a batch prediction job failed.
batchPrediction_failureReason :: Lens' BatchPrediction (Maybe Text)

-- | The ARN of the IAM role to use for this job request.
batchPrediction_iamRoleArn :: Lens' BatchPrediction (Maybe Text)

-- | The batch prediction status.
batchPrediction_status :: Lens' BatchPrediction (Maybe AsyncJobStatus)

-- | The number of records processed by the batch prediction job.
batchPrediction_processedRecordsCount :: Lens' BatchPrediction (Maybe Int)

-- | The total number of records in the batch prediction job.
batchPrediction_totalRecordsCount :: Lens' BatchPrediction (Maybe Int)

-- | Timestamp of most recent heartbeat indicating the batch prediction job
--   was making progress.
batchPrediction_lastHeartbeatTime :: Lens' BatchPrediction (Maybe Text)

-- | The job ID for the batch prediction.
batchPrediction_jobId :: Lens' BatchPrediction (Maybe Text)

-- | The ARN of batch prediction job.
batchPrediction_arn :: Lens' BatchPrediction (Maybe Text)

-- | Timestamp of when the batch prediction job started.
batchPrediction_startTime :: Lens' BatchPrediction (Maybe Text)

-- | The name of the event type.
batchPrediction_eventTypeName :: Lens' BatchPrediction (Maybe Text)

-- | Timestamp of when the batch prediction job completed.
batchPrediction_completionTime :: Lens' BatchPrediction (Maybe Text)

-- | The Amazon S3 location of your output file.
batchPrediction_outputPath :: Lens' BatchPrediction (Maybe Text)

-- | The name of the detector.
batchPrediction_detectorName :: Lens' BatchPrediction (Maybe Text)

-- | The detector version.
batchPrediction_detectorVersion :: Lens' BatchPrediction (Maybe Text)

-- | The Amazon S3 location of your training file.
batchPrediction_inputPath :: Lens' BatchPrediction (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.BatchPrediction.BatchPrediction
instance GHC.Show.Show Network.AWS.FraudDetector.Types.BatchPrediction.BatchPrediction
instance GHC.Read.Read Network.AWS.FraudDetector.Types.BatchPrediction.BatchPrediction
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.BatchPrediction.BatchPrediction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.BatchPrediction.BatchPrediction
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.BatchPrediction.BatchPrediction
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.BatchPrediction.BatchPrediction


module Network.AWS.FraudDetector.Types.DataSource
newtype DataSource
DataSource' :: Text -> DataSource
[fromDataSource] :: DataSource -> Text
pattern DataSource_EVENT :: DataSource
pattern DataSource_EXTERNAL_MODEL_SCORE :: DataSource
pattern DataSource_MODEL_SCORE :: DataSource
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.DataSource.DataSource
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.DataSource.DataSource
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.DataSource.DataSource
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.DataSource.DataSource
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.DataSource.DataSource
instance GHC.Read.Read Network.AWS.FraudDetector.Types.DataSource.DataSource
instance GHC.Show.Show Network.AWS.FraudDetector.Types.DataSource.DataSource


module Network.AWS.FraudDetector.Types.DataType
newtype DataType
DataType' :: Text -> DataType
[fromDataType] :: DataType -> Text
pattern DataType_BOOLEAN :: DataType
pattern DataType_FLOAT :: DataType
pattern DataType_INTEGER :: DataType
pattern DataType_STRING :: DataType
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.DataType.DataType
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.DataType.DataType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.DataType.DataType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.DataType.DataType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.DataType.DataType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.DataType.DataType
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.DataType.DataType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.DataType.DataType
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.DataType.DataType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.DataType.DataType
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.DataType.DataType
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.DataType.DataType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.DataType.DataType
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.DataType.DataType
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.DataType.DataType
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.DataType.DataType
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.DataType.DataType
instance GHC.Read.Read Network.AWS.FraudDetector.Types.DataType.DataType
instance GHC.Show.Show Network.AWS.FraudDetector.Types.DataType.DataType


module Network.AWS.FraudDetector.Types.Detector

-- | The detector.
--   
--   <i>See:</i> <a>newDetector</a> smart constructor.
data Detector
Detector' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Detector

-- | Timestamp of when the detector was last updated.
[$sel:lastUpdatedTime:Detector'] :: Detector -> Maybe Text

-- | The detector ARN.
[$sel:arn:Detector'] :: Detector -> Maybe Text

-- | Timestamp of when the detector was created.
[$sel:createdTime:Detector'] :: Detector -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:Detector'] :: Detector -> Maybe Text

-- | The detector ID.
[$sel:detectorId:Detector'] :: Detector -> Maybe Text

-- | The detector description.
[$sel:description:Detector'] :: Detector -> Maybe Text

-- | Create a value of <a>Detector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Detector'</a>, <a>detector_lastUpdatedTime</a>
--   - Timestamp of when the detector was last updated.
--   
--   <a>$sel:arn:Detector'</a>, <a>detector_arn</a> - The detector ARN.
--   
--   <a>$sel:createdTime:Detector'</a>, <a>detector_createdTime</a> -
--   Timestamp of when the detector was created.
--   
--   <a>$sel:eventTypeName:Detector'</a>, <a>detector_eventTypeName</a> -
--   The name of the event type.
--   
--   <a>$sel:detectorId:Detector'</a>, <a>detector_detectorId</a> - The
--   detector ID.
--   
--   <a>$sel:description:Detector'</a>, <a>detector_description</a> - The
--   detector description.
newDetector :: Detector

-- | Timestamp of when the detector was last updated.
detector_lastUpdatedTime :: Lens' Detector (Maybe Text)

-- | The detector ARN.
detector_arn :: Lens' Detector (Maybe Text)

-- | Timestamp of when the detector was created.
detector_createdTime :: Lens' Detector (Maybe Text)

-- | The name of the event type.
detector_eventTypeName :: Lens' Detector (Maybe Text)

-- | The detector ID.
detector_detectorId :: Lens' Detector (Maybe Text)

-- | The detector description.
detector_description :: Lens' Detector (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Detector.Detector
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Detector.Detector
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Detector.Detector
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Detector.Detector
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Detector.Detector
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Detector.Detector
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Detector.Detector


module Network.AWS.FraudDetector.Types.DetectorVersionStatus
newtype DetectorVersionStatus
DetectorVersionStatus' :: Text -> DetectorVersionStatus
[fromDetectorVersionStatus] :: DetectorVersionStatus -> Text
pattern DetectorVersionStatus_ACTIVE :: DetectorVersionStatus
pattern DetectorVersionStatus_DRAFT :: DetectorVersionStatus
pattern DetectorVersionStatus_INACTIVE :: DetectorVersionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance GHC.Read.Read Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus
instance GHC.Show.Show Network.AWS.FraudDetector.Types.DetectorVersionStatus.DetectorVersionStatus


module Network.AWS.FraudDetector.Types.DetectorVersionSummary

-- | The summary of the detector version.
--   
--   <i>See:</i> <a>newDetectorVersionSummary</a> smart constructor.
data DetectorVersionSummary
DetectorVersionSummary' :: Maybe DetectorVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> DetectorVersionSummary

-- | The detector version status.
[$sel:status:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe DetectorVersionStatus

-- | Timestamp of when the detector version was last updated.
[$sel:lastUpdatedTime:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe Text

-- | The detector version ID.
[$sel:detectorVersionId:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe Text

-- | The detector version description.
[$sel:description:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe Text

-- | Create a value of <a>DetectorVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_status</a> - The detector version status.
--   
--   <a>$sel:lastUpdatedTime:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_lastUpdatedTime</a> - Timestamp of when the
--   detector version was last updated.
--   
--   <a>$sel:detectorVersionId:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_detectorVersionId</a> - The detector version
--   ID.
--   
--   <a>$sel:description:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_description</a> - The detector version
--   description.
newDetectorVersionSummary :: DetectorVersionSummary

-- | The detector version status.
detectorVersionSummary_status :: Lens' DetectorVersionSummary (Maybe DetectorVersionStatus)

-- | Timestamp of when the detector version was last updated.
detectorVersionSummary_lastUpdatedTime :: Lens' DetectorVersionSummary (Maybe Text)

-- | The detector version ID.
detectorVersionSummary_detectorVersionId :: Lens' DetectorVersionSummary (Maybe Text)

-- | The detector version description.
detectorVersionSummary_description :: Lens' DetectorVersionSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.DetectorVersionSummary.DetectorVersionSummary
instance GHC.Show.Show Network.AWS.FraudDetector.Types.DetectorVersionSummary.DetectorVersionSummary
instance GHC.Read.Read Network.AWS.FraudDetector.Types.DetectorVersionSummary.DetectorVersionSummary
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.DetectorVersionSummary.DetectorVersionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.DetectorVersionSummary.DetectorVersionSummary
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.DetectorVersionSummary.DetectorVersionSummary
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.DetectorVersionSummary.DetectorVersionSummary


module Network.AWS.FraudDetector.Types.Entity

-- | The entity details.
--   
--   <i>See:</i> <a>newEntity</a> smart constructor.
data Entity
Entity' :: Text -> Text -> Entity

-- | The entity type.
[$sel:entityType:Entity'] :: Entity -> Text

-- | The entity ID. If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
[$sel:entityId:Entity'] :: Entity -> Text

-- | Create a value of <a>Entity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityType:Entity'</a>, <a>entity_entityType</a> - The entity
--   type.
--   
--   <a>$sel:entityId:Entity'</a>, <a>entity_entityId</a> - The entity ID.
--   If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
newEntity :: Text -> Text -> Entity

-- | The entity type.
entity_entityType :: Lens' Entity Text

-- | The entity ID. If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
entity_entityId :: Lens' Entity Text
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Entity.Entity
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Entity.Entity
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Entity.Entity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Entity.Entity
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Entity.Entity
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Entity.Entity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.Entity.Entity


module Network.AWS.FraudDetector.Types.EntityType

-- | The entity type details.
--   
--   <i>See:</i> <a>newEntityType</a> smart constructor.
data EntityType
EntityType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EntityType

-- | Timestamp of when the entity type was last updated.
[$sel:lastUpdatedTime:EntityType'] :: EntityType -> Maybe Text

-- | The entity type ARN.
[$sel:arn:EntityType'] :: EntityType -> Maybe Text

-- | Timestamp of when the entity type was created.
[$sel:createdTime:EntityType'] :: EntityType -> Maybe Text

-- | The entity type name.
[$sel:name:EntityType'] :: EntityType -> Maybe Text

-- | The entity type description.
[$sel:description:EntityType'] :: EntityType -> Maybe Text

-- | Create a value of <a>EntityType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:EntityType'</a>,
--   <a>entityType_lastUpdatedTime</a> - Timestamp of when the entity type
--   was last updated.
--   
--   <a>$sel:arn:EntityType'</a>, <a>entityType_arn</a> - The entity type
--   ARN.
--   
--   <a>$sel:createdTime:EntityType'</a>, <a>entityType_createdTime</a> -
--   Timestamp of when the entity type was created.
--   
--   <a>$sel:name:EntityType'</a>, <a>entityType_name</a> - The entity type
--   name.
--   
--   <a>$sel:description:EntityType'</a>, <a>entityType_description</a> -
--   The entity type description.
newEntityType :: EntityType

-- | Timestamp of when the entity type was last updated.
entityType_lastUpdatedTime :: Lens' EntityType (Maybe Text)

-- | The entity type ARN.
entityType_arn :: Lens' EntityType (Maybe Text)

-- | Timestamp of when the entity type was created.
entityType_createdTime :: Lens' EntityType (Maybe Text)

-- | The entity type name.
entityType_name :: Lens' EntityType (Maybe Text)

-- | The entity type description.
entityType_description :: Lens' EntityType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.EntityType.EntityType
instance GHC.Show.Show Network.AWS.FraudDetector.Types.EntityType.EntityType
instance GHC.Read.Read Network.AWS.FraudDetector.Types.EntityType.EntityType
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.EntityType.EntityType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.EntityType.EntityType
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.EntityType.EntityType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.EntityType.EntityType


module Network.AWS.FraudDetector.Types.Event

-- | The event details.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe [Sensitive Entity] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> Maybe Text -> Event

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
[$sel:eventTimestamp:Event'] :: Event -> Maybe Text

-- | The event entities.
[$sel:entities:Event'] :: Event -> Maybe [Sensitive Entity]

-- | The timestamp associated with the label to update. The timestamp must
--   be specified using ISO 8601 standard in UTC.
[$sel:labelTimestamp:Event'] :: Event -> Maybe Text

-- | The event type.
[$sel:eventTypeName:Event'] :: Event -> Maybe Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
[$sel:eventVariables:Event'] :: Event -> Maybe (HashMap Text (Sensitive Text))

-- | The label associated with the event.
[$sel:currentLabel:Event'] :: Event -> Maybe Text

-- | The event ID.
[$sel:eventId:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTimestamp:Event'</a>, <a>event_eventTimestamp</a> - The
--   timestamp that defines when the event under evaluation occurred. The
--   timestamp must be specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:entities:Event'</a>, <a>event_entities</a> - The event
--   entities.
--   
--   <a>$sel:labelTimestamp:Event'</a>, <a>event_labelTimestamp</a> - The
--   timestamp associated with the label to update. The timestamp must be
--   specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:eventTypeName:Event'</a>, <a>event_eventTypeName</a> - The
--   event type.
--   
--   <a>$sel:eventVariables:Event'</a>, <a>event_eventVariables</a> - Names
--   of the event type's variables you defined in Amazon Fraud Detector to
--   represent data elements and their corresponding values for the event
--   you are sending for evaluation.
--   
--   <a>$sel:currentLabel:Event'</a>, <a>event_currentLabel</a> - The label
--   associated with the event.
--   
--   <a>$sel:eventId:Event'</a>, <a>event_eventId</a> - The event ID.
newEvent :: Event

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
event_eventTimestamp :: Lens' Event (Maybe Text)

-- | The event entities.
event_entities :: Lens' Event (Maybe [Entity])

-- | The timestamp associated with the label to update. The timestamp must
--   be specified using ISO 8601 standard in UTC.
event_labelTimestamp :: Lens' Event (Maybe Text)

-- | The event type.
event_eventTypeName :: Lens' Event (Maybe Text)

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
event_eventVariables :: Lens' Event (Maybe (HashMap Text Text))

-- | The label associated with the event.
event_currentLabel :: Lens' Event (Maybe Text)

-- | The event ID.
event_eventId :: Lens' Event (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Event.Event
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Event.Event
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Event.Event
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Event.Event
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Event.Event
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Event.Event


module Network.AWS.FraudDetector.Types.EventIngestion
newtype EventIngestion
EventIngestion' :: Text -> EventIngestion
[fromEventIngestion] :: EventIngestion -> Text
pattern EventIngestion_DISABLED :: EventIngestion
pattern EventIngestion_ENABLED :: EventIngestion
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance GHC.Read.Read Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion
instance GHC.Show.Show Network.AWS.FraudDetector.Types.EventIngestion.EventIngestion


module Network.AWS.FraudDetector.Types.ExternalEventsDetail

-- | Details for the external events data used for model version training.
--   
--   <i>See:</i> <a>newExternalEventsDetail</a> smart constructor.
data ExternalEventsDetail
ExternalEventsDetail' :: Text -> Text -> ExternalEventsDetail

-- | The Amazon S3 bucket location for the data.
[$sel:dataLocation:ExternalEventsDetail'] :: ExternalEventsDetail -> Text

-- | The ARN of the role that provides Amazon Fraud Detector access to the
--   data location.
[$sel:dataAccessRoleArn:ExternalEventsDetail'] :: ExternalEventsDetail -> Text

-- | Create a value of <a>ExternalEventsDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:ExternalEventsDetail'</a>,
--   <a>externalEventsDetail_dataLocation</a> - The Amazon S3 bucket
--   location for the data.
--   
--   <a>$sel:dataAccessRoleArn:ExternalEventsDetail'</a>,
--   <a>externalEventsDetail_dataAccessRoleArn</a> - The ARN of the role
--   that provides Amazon Fraud Detector access to the data location.
newExternalEventsDetail :: Text -> Text -> ExternalEventsDetail

-- | The Amazon S3 bucket location for the data.
externalEventsDetail_dataLocation :: Lens' ExternalEventsDetail Text

-- | The ARN of the role that provides Amazon Fraud Detector access to the
--   data location.
externalEventsDetail_dataAccessRoleArn :: Lens' ExternalEventsDetail Text
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ExternalEventsDetail.ExternalEventsDetail


module Network.AWS.FraudDetector.Types.FieldValidationMessage

-- | The message details.
--   
--   <i>See:</i> <a>newFieldValidationMessage</a> smart constructor.
data FieldValidationMessage
FieldValidationMessage' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FieldValidationMessage

-- | The message ID.
[$sel:identifier:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The message content.
[$sel:content:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The field name.
[$sel:fieldName:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The message title.
[$sel:title:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The message type.
[$sel:type':FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | Create a value of <a>FieldValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_identifier</a> - The message ID.
--   
--   <a>$sel:content:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_content</a> - The message content.
--   
--   <a>$sel:fieldName:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_fieldName</a> - The field name.
--   
--   <a>$sel:title:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_title</a> - The message title.
--   
--   <a>$sel:type':FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_type</a> - The message type.
newFieldValidationMessage :: FieldValidationMessage

-- | The message ID.
fieldValidationMessage_identifier :: Lens' FieldValidationMessage (Maybe Text)

-- | The message content.
fieldValidationMessage_content :: Lens' FieldValidationMessage (Maybe Text)

-- | The field name.
fieldValidationMessage_fieldName :: Lens' FieldValidationMessage (Maybe Text)

-- | The message title.
fieldValidationMessage_title :: Lens' FieldValidationMessage (Maybe Text)

-- | The message type.
fieldValidationMessage_type :: Lens' FieldValidationMessage (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.FieldValidationMessage.FieldValidationMessage
instance GHC.Show.Show Network.AWS.FraudDetector.Types.FieldValidationMessage.FieldValidationMessage
instance GHC.Read.Read Network.AWS.FraudDetector.Types.FieldValidationMessage.FieldValidationMessage
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.FieldValidationMessage.FieldValidationMessage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.FieldValidationMessage.FieldValidationMessage
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.FieldValidationMessage.FieldValidationMessage
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.FieldValidationMessage.FieldValidationMessage


module Network.AWS.FraudDetector.Types.FileValidationMessage

-- | The message details.
--   
--   <i>See:</i> <a>newFileValidationMessage</a> smart constructor.
data FileValidationMessage
FileValidationMessage' :: Maybe Text -> Maybe Text -> Maybe Text -> FileValidationMessage

-- | The message content.
[$sel:content:FileValidationMessage'] :: FileValidationMessage -> Maybe Text

-- | The message title.
[$sel:title:FileValidationMessage'] :: FileValidationMessage -> Maybe Text

-- | The message type.
[$sel:type':FileValidationMessage'] :: FileValidationMessage -> Maybe Text

-- | Create a value of <a>FileValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:FileValidationMessage'</a>,
--   <a>fileValidationMessage_content</a> - The message content.
--   
--   <a>$sel:title:FileValidationMessage'</a>,
--   <a>fileValidationMessage_title</a> - The message title.
--   
--   <a>$sel:type':FileValidationMessage'</a>,
--   <a>fileValidationMessage_type</a> - The message type.
newFileValidationMessage :: FileValidationMessage

-- | The message content.
fileValidationMessage_content :: Lens' FileValidationMessage (Maybe Text)

-- | The message title.
fileValidationMessage_title :: Lens' FileValidationMessage (Maybe Text)

-- | The message type.
fileValidationMessage_type :: Lens' FileValidationMessage (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.FileValidationMessage.FileValidationMessage
instance GHC.Show.Show Network.AWS.FraudDetector.Types.FileValidationMessage.FileValidationMessage
instance GHC.Read.Read Network.AWS.FraudDetector.Types.FileValidationMessage.FileValidationMessage
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.FileValidationMessage.FileValidationMessage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.FileValidationMessage.FileValidationMessage
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.FileValidationMessage.FileValidationMessage
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.FileValidationMessage.FileValidationMessage


module Network.AWS.FraudDetector.Types.DataValidationMetrics

-- | The model training validation messages.
--   
--   <i>See:</i> <a>newDataValidationMetrics</a> smart constructor.
data DataValidationMetrics
DataValidationMetrics' :: Maybe [FieldValidationMessage] -> Maybe [FileValidationMessage] -> DataValidationMetrics

-- | The field-specific model training validation messages.
[$sel:fieldLevelMessages:DataValidationMetrics'] :: DataValidationMetrics -> Maybe [FieldValidationMessage]

-- | The file-specific model training validation messages.
[$sel:fileLevelMessages:DataValidationMetrics'] :: DataValidationMetrics -> Maybe [FileValidationMessage]

-- | Create a value of <a>DataValidationMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fieldLevelMessages:DataValidationMetrics'</a>,
--   <a>dataValidationMetrics_fieldLevelMessages</a> - The field-specific
--   model training validation messages.
--   
--   <a>$sel:fileLevelMessages:DataValidationMetrics'</a>,
--   <a>dataValidationMetrics_fileLevelMessages</a> - The file-specific
--   model training validation messages.
newDataValidationMetrics :: DataValidationMetrics

-- | The field-specific model training validation messages.
dataValidationMetrics_fieldLevelMessages :: Lens' DataValidationMetrics (Maybe [FieldValidationMessage])

-- | The file-specific model training validation messages.
dataValidationMetrics_fileLevelMessages :: Lens' DataValidationMetrics (Maybe [FileValidationMessage])
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.DataValidationMetrics.DataValidationMetrics
instance GHC.Show.Show Network.AWS.FraudDetector.Types.DataValidationMetrics.DataValidationMetrics
instance GHC.Read.Read Network.AWS.FraudDetector.Types.DataValidationMetrics.DataValidationMetrics
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.DataValidationMetrics.DataValidationMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.DataValidationMetrics.DataValidationMetrics
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.DataValidationMetrics.DataValidationMetrics
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.DataValidationMetrics.DataValidationMetrics


module Network.AWS.FraudDetector.Types.IngestedEventStatistics

-- | Data about the stored events.
--   
--   <i>See:</i> <a>newIngestedEventStatistics</a> smart constructor.
data IngestedEventStatistics
IngestedEventStatistics' :: Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> IngestedEventStatistics

-- | The total size of the stored events.
[$sel:eventDataSizeInBytes:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Integer

-- | The newest stored event.
[$sel:mostRecentEvent:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Text

-- | Timestamp of when the stored event was last updated.
[$sel:lastUpdatedTime:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Text

-- | The number of stored events.
[$sel:numberOfEvents:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Integer

-- | The oldest stored event.
[$sel:leastRecentEvent:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Text

-- | Create a value of <a>IngestedEventStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventDataSizeInBytes:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_eventDataSizeInBytes</a> - The total size
--   of the stored events.
--   
--   <a>$sel:mostRecentEvent:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_mostRecentEvent</a> - The newest stored
--   event.
--   
--   <a>$sel:lastUpdatedTime:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_lastUpdatedTime</a> - Timestamp of when the
--   stored event was last updated.
--   
--   <a>$sel:numberOfEvents:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_numberOfEvents</a> - The number of stored
--   events.
--   
--   <a>$sel:leastRecentEvent:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_leastRecentEvent</a> - The oldest stored
--   event.
newIngestedEventStatistics :: IngestedEventStatistics

-- | The total size of the stored events.
ingestedEventStatistics_eventDataSizeInBytes :: Lens' IngestedEventStatistics (Maybe Integer)

-- | The newest stored event.
ingestedEventStatistics_mostRecentEvent :: Lens' IngestedEventStatistics (Maybe Text)

-- | Timestamp of when the stored event was last updated.
ingestedEventStatistics_lastUpdatedTime :: Lens' IngestedEventStatistics (Maybe Text)

-- | The number of stored events.
ingestedEventStatistics_numberOfEvents :: Lens' IngestedEventStatistics (Maybe Integer)

-- | The oldest stored event.
ingestedEventStatistics_leastRecentEvent :: Lens' IngestedEventStatistics (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.IngestedEventStatistics.IngestedEventStatistics
instance GHC.Show.Show Network.AWS.FraudDetector.Types.IngestedEventStatistics.IngestedEventStatistics
instance GHC.Read.Read Network.AWS.FraudDetector.Types.IngestedEventStatistics.IngestedEventStatistics
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.IngestedEventStatistics.IngestedEventStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.IngestedEventStatistics.IngestedEventStatistics
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.IngestedEventStatistics.IngestedEventStatistics
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.IngestedEventStatistics.IngestedEventStatistics


module Network.AWS.FraudDetector.Types.EventType

-- | The event type details.
--   
--   <i>See:</i> <a>newEventType</a> smart constructor.
data EventType
EventType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [Text] -> Maybe Text -> Maybe IngestedEventStatistics -> Maybe [Text] -> Maybe EventIngestion -> Maybe Text -> EventType

-- | Timestamp of when the event type was last updated.
[$sel:lastUpdatedTime:EventType'] :: EventType -> Maybe Text

-- | The entity type ARN.
[$sel:arn:EventType'] :: EventType -> Maybe Text

-- | Timestamp of when the event type was created.
[$sel:createdTime:EventType'] :: EventType -> Maybe Text

-- | The event type entity types.
[$sel:entityTypes:EventType'] :: EventType -> Maybe (NonEmpty Text)

-- | The event type event variables.
[$sel:eventVariables:EventType'] :: EventType -> Maybe [Text]

-- | The event type name.
[$sel:name:EventType'] :: EventType -> Maybe Text

-- | Data about the stored events.
[$sel:ingestedEventStatistics:EventType'] :: EventType -> Maybe IngestedEventStatistics

-- | The event type labels.
[$sel:labels:EventType'] :: EventType -> Maybe [Text]

-- | If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when you
--   generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
[$sel:eventIngestion:EventType'] :: EventType -> Maybe EventIngestion

-- | The event type description.
[$sel:description:EventType'] :: EventType -> Maybe Text

-- | Create a value of <a>EventType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:EventType'</a>,
--   <a>eventType_lastUpdatedTime</a> - Timestamp of when the event type
--   was last updated.
--   
--   <a>$sel:arn:EventType'</a>, <a>eventType_arn</a> - The entity type
--   ARN.
--   
--   <a>$sel:createdTime:EventType'</a>, <a>eventType_createdTime</a> -
--   Timestamp of when the event type was created.
--   
--   <a>$sel:entityTypes:EventType'</a>, <a>eventType_entityTypes</a> - The
--   event type entity types.
--   
--   <a>$sel:eventVariables:EventType'</a>, <a>eventType_eventVariables</a>
--   - The event type event variables.
--   
--   <a>$sel:name:EventType'</a>, <a>eventType_name</a> - The event type
--   name.
--   
--   <a>$sel:ingestedEventStatistics:EventType'</a>,
--   <a>eventType_ingestedEventStatistics</a> - Data about the stored
--   events.
--   
--   <a>$sel:labels:EventType'</a>, <a>eventType_labels</a> - The event
--   type labels.
--   
--   <a>$sel:eventIngestion:EventType'</a>, <a>eventType_eventIngestion</a>
--   - If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when
--   you generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
--   
--   <a>$sel:description:EventType'</a>, <a>eventType_description</a> - The
--   event type description.
newEventType :: EventType

-- | Timestamp of when the event type was last updated.
eventType_lastUpdatedTime :: Lens' EventType (Maybe Text)

-- | The entity type ARN.
eventType_arn :: Lens' EventType (Maybe Text)

-- | Timestamp of when the event type was created.
eventType_createdTime :: Lens' EventType (Maybe Text)

-- | The event type entity types.
eventType_entityTypes :: Lens' EventType (Maybe (NonEmpty Text))

-- | The event type event variables.
eventType_eventVariables :: Lens' EventType (Maybe [Text])

-- | The event type name.
eventType_name :: Lens' EventType (Maybe Text)

-- | Data about the stored events.
eventType_ingestedEventStatistics :: Lens' EventType (Maybe IngestedEventStatistics)

-- | The event type labels.
eventType_labels :: Lens' EventType (Maybe [Text])

-- | If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when you
--   generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
eventType_eventIngestion :: Lens' EventType (Maybe EventIngestion)

-- | The event type description.
eventType_description :: Lens' EventType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.EventType.EventType
instance GHC.Show.Show Network.AWS.FraudDetector.Types.EventType.EventType
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.EventType.EventType
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.EventType.EventType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.EventType.EventType


module Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow

-- | The start and stop time of the ingested events.
--   
--   <i>See:</i> <a>newIngestedEventsTimeWindow</a> smart constructor.
data IngestedEventsTimeWindow
IngestedEventsTimeWindow' :: Text -> Text -> IngestedEventsTimeWindow

-- | Timestamp of the first ingensted event.
[$sel:startTime:IngestedEventsTimeWindow'] :: IngestedEventsTimeWindow -> Text

-- | Timestamp of the final ingested event.
[$sel:endTime:IngestedEventsTimeWindow'] :: IngestedEventsTimeWindow -> Text

-- | Create a value of <a>IngestedEventsTimeWindow</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:IngestedEventsTimeWindow'</a>,
--   <a>ingestedEventsTimeWindow_startTime</a> - Timestamp of the first
--   ingensted event.
--   
--   <a>$sel:endTime:IngestedEventsTimeWindow'</a>,
--   <a>ingestedEventsTimeWindow_endTime</a> - Timestamp of the final
--   ingested event.
newIngestedEventsTimeWindow :: Text -> Text -> IngestedEventsTimeWindow

-- | Timestamp of the first ingensted event.
ingestedEventsTimeWindow_startTime :: Lens' IngestedEventsTimeWindow Text

-- | Timestamp of the final ingested event.
ingestedEventsTimeWindow_endTime :: Lens' IngestedEventsTimeWindow Text
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow
instance GHC.Show.Show Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow
instance GHC.Read.Read Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.IngestedEventsTimeWindow.IngestedEventsTimeWindow


module Network.AWS.FraudDetector.Types.IngestedEventsDetail

-- | The details of the ingested event.
--   
--   <i>See:</i> <a>newIngestedEventsDetail</a> smart constructor.
data IngestedEventsDetail
IngestedEventsDetail' :: IngestedEventsTimeWindow -> IngestedEventsDetail

-- | The start and stop time of the ingested events.
[$sel:ingestedEventsTimeWindow:IngestedEventsDetail'] :: IngestedEventsDetail -> IngestedEventsTimeWindow

-- | Create a value of <a>IngestedEventsDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestedEventsTimeWindow:IngestedEventsDetail'</a>,
--   <a>ingestedEventsDetail_ingestedEventsTimeWindow</a> - The start and
--   stop time of the ingested events.
newIngestedEventsDetail :: IngestedEventsTimeWindow -> IngestedEventsDetail

-- | The start and stop time of the ingested events.
ingestedEventsDetail_ingestedEventsTimeWindow :: Lens' IngestedEventsDetail IngestedEventsTimeWindow
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail
instance GHC.Show.Show Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail
instance GHC.Read.Read Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.IngestedEventsDetail.IngestedEventsDetail


module Network.AWS.FraudDetector.Types.KMSKey

-- | The KMS key details.
--   
--   <i>See:</i> <a>newKMSKey</a> smart constructor.
data KMSKey
KMSKey' :: Maybe Text -> KMSKey

-- | The encryption key ARN.
[$sel:kmsEncryptionKeyArn:KMSKey'] :: KMSKey -> Maybe Text

-- | Create a value of <a>KMSKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionKeyArn:KMSKey'</a>,
--   <a>kmsKey_kmsEncryptionKeyArn</a> - The encryption key ARN.
newKMSKey :: KMSKey

-- | The encryption key ARN.
kmsKey_kmsEncryptionKeyArn :: Lens' KMSKey (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.KMSKey.KMSKey
instance GHC.Show.Show Network.AWS.FraudDetector.Types.KMSKey.KMSKey
instance GHC.Read.Read Network.AWS.FraudDetector.Types.KMSKey.KMSKey
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.KMSKey.KMSKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.KMSKey.KMSKey
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.KMSKey.KMSKey
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.KMSKey.KMSKey


module Network.AWS.FraudDetector.Types.Label

-- | The label details.
--   
--   <i>See:</i> <a>newLabel</a> smart constructor.
data Label
Label' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Label

-- | Timestamp of when the label was last updated.
[$sel:lastUpdatedTime:Label'] :: Label -> Maybe Text

-- | The label ARN.
[$sel:arn:Label'] :: Label -> Maybe Text

-- | Timestamp of when the event type was created.
[$sel:createdTime:Label'] :: Label -> Maybe Text

-- | The label name.
[$sel:name:Label'] :: Label -> Maybe Text

-- | The label description.
[$sel:description:Label'] :: Label -> Maybe Text

-- | Create a value of <a>Label</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Label'</a>, <a>label_lastUpdatedTime</a> -
--   Timestamp of when the label was last updated.
--   
--   <a>$sel:arn:Label'</a>, <a>label_arn</a> - The label ARN.
--   
--   <a>$sel:createdTime:Label'</a>, <a>label_createdTime</a> - Timestamp
--   of when the event type was created.
--   
--   <a>$sel:name:Label'</a>, <a>label_name</a> - The label name.
--   
--   <a>$sel:description:Label'</a>, <a>label_description</a> - The label
--   description.
newLabel :: Label

-- | Timestamp of when the label was last updated.
label_lastUpdatedTime :: Lens' Label (Maybe Text)

-- | The label ARN.
label_arn :: Lens' Label (Maybe Text)

-- | Timestamp of when the event type was created.
label_createdTime :: Lens' Label (Maybe Text)

-- | The label name.
label_name :: Lens' Label (Maybe Text)

-- | The label description.
label_description :: Lens' Label (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Label.Label
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Label.Label
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Label.Label
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Label.Label
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Label.Label
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Label.Label
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Label.Label


module Network.AWS.FraudDetector.Types.Language
newtype Language
Language' :: Text -> Language
[fromLanguage] :: Language -> Text
pattern Language_DETECTORPL :: Language
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.Language.Language
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.Language.Language
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.Language.Language
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.Language.Language
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.Language.Language
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Language.Language
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.Language.Language
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.Language.Language
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.Language.Language
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.Language.Language
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.Language.Language
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.Language.Language
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Language.Language
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Language.Language
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Language.Language
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.Language.Language
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Language.Language
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Language.Language
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Language.Language


module Network.AWS.FraudDetector.Types.LogOddsMetric

-- | The log odds metric details.
--   
--   <i>See:</i> <a>newLogOddsMetric</a> smart constructor.
data LogOddsMetric
LogOddsMetric' :: Text -> Text -> Double -> LogOddsMetric

-- | The name of the variable.
[$sel:variableName:LogOddsMetric'] :: LogOddsMetric -> Text

-- | The type of variable.
[$sel:variableType:LogOddsMetric'] :: LogOddsMetric -> Text

-- | The relative importance of the variable. For more information, see
--   <a>Model variable importance</a>.
[$sel:variableImportance:LogOddsMetric'] :: LogOddsMetric -> Double

-- | Create a value of <a>LogOddsMetric</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableName:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableName</a> - The name of the variable.
--   
--   <a>$sel:variableType:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableType</a> - The type of variable.
--   
--   <a>$sel:variableImportance:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableImportance</a> - The relative importance of
--   the variable. For more information, see <a>Model variable
--   importance</a>.
newLogOddsMetric :: Text -> Text -> Double -> LogOddsMetric

-- | The name of the variable.
logOddsMetric_variableName :: Lens' LogOddsMetric Text

-- | The type of variable.
logOddsMetric_variableType :: Lens' LogOddsMetric Text

-- | The relative importance of the variable. For more information, see
--   <a>Model variable importance</a>.
logOddsMetric_variableImportance :: Lens' LogOddsMetric Double
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.LogOddsMetric.LogOddsMetric
instance GHC.Show.Show Network.AWS.FraudDetector.Types.LogOddsMetric.LogOddsMetric
instance GHC.Read.Read Network.AWS.FraudDetector.Types.LogOddsMetric.LogOddsMetric
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.LogOddsMetric.LogOddsMetric
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.LogOddsMetric.LogOddsMetric
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.LogOddsMetric.LogOddsMetric
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.LogOddsMetric.LogOddsMetric


module Network.AWS.FraudDetector.Types.MetricDataPoint

-- | Model performance metrics data points.
--   
--   <i>See:</i> <a>newMetricDataPoint</a> smart constructor.
data MetricDataPoint
MetricDataPoint' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> MetricDataPoint

-- | The percentage of fraud events correctly predicted as fraudulent as
--   compared to all events predicted as fraudulent.
[$sel:precision:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | The false positive rate. This is the percentage of total legitimate
--   events that are incorrectly predicted as fraud.
[$sel:fpr:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | The model threshold that specifies an acceptable fraud capture rate.
--   For example, a threshold of 500 means any model score 500 or above is
--   labeled as fraud.
[$sel:threshold:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | The true positive rate. This is the percentage of total fraud the
--   model detects. Also known as capture rate.
[$sel:tpr:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | Create a value of <a>MetricDataPoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:precision:MetricDataPoint'</a>,
--   <a>metricDataPoint_precision</a> - The percentage of fraud events
--   correctly predicted as fraudulent as compared to all events predicted
--   as fraudulent.
--   
--   <a>$sel:fpr:MetricDataPoint'</a>, <a>metricDataPoint_fpr</a> - The
--   false positive rate. This is the percentage of total legitimate events
--   that are incorrectly predicted as fraud.
--   
--   <a>$sel:threshold:MetricDataPoint'</a>,
--   <a>metricDataPoint_threshold</a> - The model threshold that specifies
--   an acceptable fraud capture rate. For example, a threshold of 500
--   means any model score 500 or above is labeled as fraud.
--   
--   <a>$sel:tpr:MetricDataPoint'</a>, <a>metricDataPoint_tpr</a> - The
--   true positive rate. This is the percentage of total fraud the model
--   detects. Also known as capture rate.
newMetricDataPoint :: MetricDataPoint

-- | The percentage of fraud events correctly predicted as fraudulent as
--   compared to all events predicted as fraudulent.
metricDataPoint_precision :: Lens' MetricDataPoint (Maybe Double)

-- | The false positive rate. This is the percentage of total legitimate
--   events that are incorrectly predicted as fraud.
metricDataPoint_fpr :: Lens' MetricDataPoint (Maybe Double)

-- | The model threshold that specifies an acceptable fraud capture rate.
--   For example, a threshold of 500 means any model score 500 or above is
--   labeled as fraud.
metricDataPoint_threshold :: Lens' MetricDataPoint (Maybe Double)

-- | The true positive rate. This is the percentage of total fraud the
--   model detects. Also known as capture rate.
metricDataPoint_tpr :: Lens' MetricDataPoint (Maybe Double)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.MetricDataPoint.MetricDataPoint
instance GHC.Show.Show Network.AWS.FraudDetector.Types.MetricDataPoint.MetricDataPoint
instance GHC.Read.Read Network.AWS.FraudDetector.Types.MetricDataPoint.MetricDataPoint
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.MetricDataPoint.MetricDataPoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.MetricDataPoint.MetricDataPoint
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.MetricDataPoint.MetricDataPoint
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.MetricDataPoint.MetricDataPoint


module Network.AWS.FraudDetector.Types.ModelEndpointDataBlob

-- | A pre-formed Amazon SageMaker model input you can include if your
--   detector version includes an imported Amazon SageMaker model endpoint
--   with pass-through input configuration.
--   
--   <i>See:</i> <a>newModelEndpointDataBlob</a> smart constructor.
data ModelEndpointDataBlob
ModelEndpointDataBlob' :: Maybe Base64 -> Maybe Text -> ModelEndpointDataBlob

-- | The byte buffer of the Amazon SageMaker model endpoint input data
--   blob.
[$sel:byteBuffer:ModelEndpointDataBlob'] :: ModelEndpointDataBlob -> Maybe Base64

-- | The content type of the Amazon SageMaker model endpoint input data
--   blob.
[$sel:contentType:ModelEndpointDataBlob'] :: ModelEndpointDataBlob -> Maybe Text

-- | Create a value of <a>ModelEndpointDataBlob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:byteBuffer:ModelEndpointDataBlob'</a>,
--   <a>modelEndpointDataBlob_byteBuffer</a> - The byte buffer of the
--   Amazon SageMaker model endpoint input data blob.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:contentType:ModelEndpointDataBlob'</a>,
--   <a>modelEndpointDataBlob_contentType</a> - The content type of the
--   Amazon SageMaker model endpoint input data blob.
newModelEndpointDataBlob :: ModelEndpointDataBlob

-- | The byte buffer of the Amazon SageMaker model endpoint input data
--   blob.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and
--   decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
modelEndpointDataBlob_byteBuffer :: Lens' ModelEndpointDataBlob (Maybe ByteString)

-- | The content type of the Amazon SageMaker model endpoint input data
--   blob.
modelEndpointDataBlob_contentType :: Lens' ModelEndpointDataBlob (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelEndpointDataBlob.ModelEndpointDataBlob
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelEndpointDataBlob.ModelEndpointDataBlob
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelEndpointDataBlob.ModelEndpointDataBlob
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelEndpointDataBlob.ModelEndpointDataBlob
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelEndpointDataBlob.ModelEndpointDataBlob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelEndpointDataBlob.ModelEndpointDataBlob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelEndpointDataBlob.ModelEndpointDataBlob


module Network.AWS.FraudDetector.Types.ModelEndpointStatus
newtype ModelEndpointStatus
ModelEndpointStatus' :: Text -> ModelEndpointStatus
[fromModelEndpointStatus] :: ModelEndpointStatus -> Text
pattern ModelEndpointStatus_ASSOCIATED :: ModelEndpointStatus
pattern ModelEndpointStatus_DISSOCIATED :: ModelEndpointStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelEndpointStatus.ModelEndpointStatus


module Network.AWS.FraudDetector.Types.ModelInputDataFormat
newtype ModelInputDataFormat
ModelInputDataFormat' :: Text -> ModelInputDataFormat
[fromModelInputDataFormat] :: ModelInputDataFormat -> Text
pattern ModelInputDataFormat_APPLICATION_JSON :: ModelInputDataFormat
pattern ModelInputDataFormat_TEXT_CSV :: ModelInputDataFormat
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelInputDataFormat.ModelInputDataFormat


module Network.AWS.FraudDetector.Types.ModelInputConfiguration

-- | The Amazon SageMaker model input configuration.
--   
--   <i>See:</i> <a>newModelInputConfiguration</a> smart constructor.
data ModelInputConfiguration
ModelInputConfiguration' :: Maybe ModelInputDataFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Bool -> ModelInputConfiguration

-- | The format of the model input configuration. The format differs
--   depending on if it is passed through to SageMaker or constructed by
--   Amazon Fraud Detector.
[$sel:format:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe ModelInputDataFormat

-- | The event type name.
[$sel:eventTypeName:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe Text

-- | Template for constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
[$sel:csvInputTemplate:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe Text

-- | Template for constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
[$sel:jsonInputTemplate:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe Text

-- | The event variables.
[$sel:useEventVariables:ModelInputConfiguration'] :: ModelInputConfiguration -> Bool

-- | Create a value of <a>ModelInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_format</a> - The format of the model input
--   configuration. The format differs depending on if it is passed through
--   to SageMaker or constructed by Amazon Fraud Detector.
--   
--   <a>$sel:eventTypeName:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_eventTypeName</a> - The event type name.
--   
--   <a>$sel:csvInputTemplate:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_csvInputTemplate</a> - Template for
--   constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
--   
--   <a>$sel:jsonInputTemplate:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_jsonInputTemplate</a> - Template for
--   constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
--   
--   <a>$sel:useEventVariables:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_useEventVariables</a> - The event
--   variables.
newModelInputConfiguration :: Bool -> ModelInputConfiguration

-- | The format of the model input configuration. The format differs
--   depending on if it is passed through to SageMaker or constructed by
--   Amazon Fraud Detector.
modelInputConfiguration_format :: Lens' ModelInputConfiguration (Maybe ModelInputDataFormat)

-- | The event type name.
modelInputConfiguration_eventTypeName :: Lens' ModelInputConfiguration (Maybe Text)

-- | Template for constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
modelInputConfiguration_csvInputTemplate :: Lens' ModelInputConfiguration (Maybe Text)

-- | Template for constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
modelInputConfiguration_jsonInputTemplate :: Lens' ModelInputConfiguration (Maybe Text)

-- | The event variables.
modelInputConfiguration_useEventVariables :: Lens' ModelInputConfiguration Bool
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelInputConfiguration.ModelInputConfiguration


module Network.AWS.FraudDetector.Types.ModelOutputDataFormat
newtype ModelOutputDataFormat
ModelOutputDataFormat' :: Text -> ModelOutputDataFormat
[fromModelOutputDataFormat] :: ModelOutputDataFormat -> Text
pattern ModelOutputDataFormat_APPLICATION_JSONLINES :: ModelOutputDataFormat
pattern ModelOutputDataFormat_TEXT_CSV :: ModelOutputDataFormat
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelOutputDataFormat.ModelOutputDataFormat


module Network.AWS.FraudDetector.Types.ModelOutputConfiguration

-- | Provides the Amazon Sagemaker model output configuration.
--   
--   <i>See:</i> <a>newModelOutputConfiguration</a> smart constructor.
data ModelOutputConfiguration
ModelOutputConfiguration' :: Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> ModelOutputDataFormat -> ModelOutputConfiguration

-- | A map of JSON keys in response from SageMaker to the Amazon Fraud
--   Detector variables.
[$sel:jsonKeyToVariableMap:ModelOutputConfiguration'] :: ModelOutputConfiguration -> Maybe (HashMap Text Text)

-- | A map of CSV index values in the SageMaker response to the Amazon
--   Fraud Detector variables.
[$sel:csvIndexToVariableMap:ModelOutputConfiguration'] :: ModelOutputConfiguration -> Maybe (HashMap Text Text)

-- | The format of the model output configuration.
[$sel:format:ModelOutputConfiguration'] :: ModelOutputConfiguration -> ModelOutputDataFormat

-- | Create a value of <a>ModelOutputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonKeyToVariableMap:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_jsonKeyToVariableMap</a> - A map of JSON
--   keys in response from SageMaker to the Amazon Fraud Detector
--   variables.
--   
--   <a>$sel:csvIndexToVariableMap:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_csvIndexToVariableMap</a> - A map of CSV
--   index values in the SageMaker response to the Amazon Fraud Detector
--   variables.
--   
--   <a>$sel:format:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_format</a> - The format of the model
--   output configuration.
newModelOutputConfiguration :: ModelOutputDataFormat -> ModelOutputConfiguration

-- | A map of JSON keys in response from SageMaker to the Amazon Fraud
--   Detector variables.
modelOutputConfiguration_jsonKeyToVariableMap :: Lens' ModelOutputConfiguration (Maybe (HashMap Text Text))

-- | A map of CSV index values in the SageMaker response to the Amazon
--   Fraud Detector variables.
modelOutputConfiguration_csvIndexToVariableMap :: Lens' ModelOutputConfiguration (Maybe (HashMap Text Text))

-- | The format of the model output configuration.
modelOutputConfiguration_format :: Lens' ModelOutputConfiguration ModelOutputDataFormat
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelOutputConfiguration.ModelOutputConfiguration


module Network.AWS.FraudDetector.Types.ModelSource
newtype ModelSource
ModelSource' :: Text -> ModelSource
[fromModelSource] :: ModelSource -> Text
pattern ModelSource_SAGEMAKER :: ModelSource
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelSource.ModelSource
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelSource.ModelSource


module Network.AWS.FraudDetector.Types.ExternalModelSummary

-- | The Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModelSummary</a> smart constructor.
data ExternalModelSummary
ExternalModelSummary' :: Maybe Text -> Maybe ModelSource -> ExternalModelSummary

-- | The endpoint of the Amazon SageMaker model.
[$sel:modelEndpoint:ExternalModelSummary'] :: ExternalModelSummary -> Maybe Text

-- | The source of the model.
[$sel:modelSource:ExternalModelSummary'] :: ExternalModelSummary -> Maybe ModelSource

-- | Create a value of <a>ExternalModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:ExternalModelSummary'</a>,
--   <a>externalModelSummary_modelEndpoint</a> - The endpoint of the Amazon
--   SageMaker model.
--   
--   <a>$sel:modelSource:ExternalModelSummary'</a>,
--   <a>externalModelSummary_modelSource</a> - The source of the model.
newExternalModelSummary :: ExternalModelSummary

-- | The endpoint of the Amazon SageMaker model.
externalModelSummary_modelEndpoint :: Lens' ExternalModelSummary (Maybe Text)

-- | The source of the model.
externalModelSummary_modelSource :: Lens' ExternalModelSummary (Maybe ModelSource)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ExternalModelSummary.ExternalModelSummary
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ExternalModelSummary.ExternalModelSummary
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ExternalModelSummary.ExternalModelSummary
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ExternalModelSummary.ExternalModelSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ExternalModelSummary.ExternalModelSummary
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ExternalModelSummary.ExternalModelSummary
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ExternalModelSummary.ExternalModelSummary


module Network.AWS.FraudDetector.Types.ExternalModelOutputs

-- | The fraud prediction scores from Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModelOutputs</a> smart constructor.
data ExternalModelOutputs
ExternalModelOutputs' :: Maybe ExternalModelSummary -> Maybe (HashMap Text Text) -> ExternalModelOutputs

-- | The Amazon SageMaker model.
[$sel:externalModel:ExternalModelOutputs'] :: ExternalModelOutputs -> Maybe ExternalModelSummary

-- | The fraud prediction scores from Amazon SageMaker model.
[$sel:outputs:ExternalModelOutputs'] :: ExternalModelOutputs -> Maybe (HashMap Text Text)

-- | Create a value of <a>ExternalModelOutputs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalModel:ExternalModelOutputs'</a>,
--   <a>externalModelOutputs_externalModel</a> - The Amazon SageMaker
--   model.
--   
--   <a>$sel:outputs:ExternalModelOutputs'</a>,
--   <a>externalModelOutputs_outputs</a> - The fraud prediction scores from
--   Amazon SageMaker model.
newExternalModelOutputs :: ExternalModelOutputs

-- | The Amazon SageMaker model.
externalModelOutputs_externalModel :: Lens' ExternalModelOutputs (Maybe ExternalModelSummary)

-- | The fraud prediction scores from Amazon SageMaker model.
externalModelOutputs_outputs :: Lens' ExternalModelOutputs (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ExternalModelOutputs.ExternalModelOutputs
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ExternalModelOutputs.ExternalModelOutputs
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ExternalModelOutputs.ExternalModelOutputs
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ExternalModelOutputs.ExternalModelOutputs
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ExternalModelOutputs.ExternalModelOutputs
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ExternalModelOutputs.ExternalModelOutputs
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ExternalModelOutputs.ExternalModelOutputs


module Network.AWS.FraudDetector.Types.ExternalModel

-- | The Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModel</a> smart constructor.
data ExternalModel
ExternalModel' :: Maybe Text -> Maybe ModelSource -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ModelEndpointStatus -> Maybe ModelOutputConfiguration -> Maybe Text -> Maybe ModelInputConfiguration -> ExternalModel

-- | The Amazon SageMaker model endpoints.
[$sel:modelEndpoint:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The source of the model.
[$sel:modelSource:ExternalModel'] :: ExternalModel -> Maybe ModelSource

-- | Timestamp of when the model was last updated.
[$sel:lastUpdatedTime:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The model ARN.
[$sel:arn:ExternalModel'] :: ExternalModel -> Maybe Text

-- | Timestamp of when the model was last created.
[$sel:createdTime:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The Amazon Fraud Detector status for the external model endpoint
[$sel:modelEndpointStatus:ExternalModel'] :: ExternalModel -> Maybe ModelEndpointStatus

-- | The output configuration.
[$sel:outputConfiguration:ExternalModel'] :: ExternalModel -> Maybe ModelOutputConfiguration

-- | The role used to invoke the model.
[$sel:invokeModelEndpointRoleArn:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The input configuration.
[$sel:inputConfiguration:ExternalModel'] :: ExternalModel -> Maybe ModelInputConfiguration

-- | Create a value of <a>ExternalModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:ExternalModel'</a>,
--   <a>externalModel_modelEndpoint</a> - The Amazon SageMaker model
--   endpoints.
--   
--   <a>$sel:modelSource:ExternalModel'</a>,
--   <a>externalModel_modelSource</a> - The source of the model.
--   
--   <a>$sel:lastUpdatedTime:ExternalModel'</a>,
--   <a>externalModel_lastUpdatedTime</a> - Timestamp of when the model was
--   last updated.
--   
--   <a>$sel:arn:ExternalModel'</a>, <a>externalModel_arn</a> - The model
--   ARN.
--   
--   <a>$sel:createdTime:ExternalModel'</a>,
--   <a>externalModel_createdTime</a> - Timestamp of when the model was
--   last created.
--   
--   <a>$sel:modelEndpointStatus:ExternalModel'</a>,
--   <a>externalModel_modelEndpointStatus</a> - The Amazon Fraud Detector
--   status for the external model endpoint
--   
--   <a>$sel:outputConfiguration:ExternalModel'</a>,
--   <a>externalModel_outputConfiguration</a> - The output configuration.
--   
--   <a>$sel:invokeModelEndpointRoleArn:ExternalModel'</a>,
--   <a>externalModel_invokeModelEndpointRoleArn</a> - The role used to
--   invoke the model.
--   
--   <a>$sel:inputConfiguration:ExternalModel'</a>,
--   <a>externalModel_inputConfiguration</a> - The input configuration.
newExternalModel :: ExternalModel

-- | The Amazon SageMaker model endpoints.
externalModel_modelEndpoint :: Lens' ExternalModel (Maybe Text)

-- | The source of the model.
externalModel_modelSource :: Lens' ExternalModel (Maybe ModelSource)

-- | Timestamp of when the model was last updated.
externalModel_lastUpdatedTime :: Lens' ExternalModel (Maybe Text)

-- | The model ARN.
externalModel_arn :: Lens' ExternalModel (Maybe Text)

-- | Timestamp of when the model was last created.
externalModel_createdTime :: Lens' ExternalModel (Maybe Text)

-- | The Amazon Fraud Detector status for the external model endpoint
externalModel_modelEndpointStatus :: Lens' ExternalModel (Maybe ModelEndpointStatus)

-- | The output configuration.
externalModel_outputConfiguration :: Lens' ExternalModel (Maybe ModelOutputConfiguration)

-- | The role used to invoke the model.
externalModel_invokeModelEndpointRoleArn :: Lens' ExternalModel (Maybe Text)

-- | The input configuration.
externalModel_inputConfiguration :: Lens' ExternalModel (Maybe ModelInputConfiguration)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ExternalModel.ExternalModel
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ExternalModel.ExternalModel
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ExternalModel.ExternalModel
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ExternalModel.ExternalModel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ExternalModel.ExternalModel
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ExternalModel.ExternalModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ExternalModel.ExternalModel


module Network.AWS.FraudDetector.Types.ModelTypeEnum
newtype ModelTypeEnum
ModelTypeEnum' :: Text -> ModelTypeEnum
[fromModelTypeEnum] :: ModelTypeEnum -> Text
pattern ModelTypeEnum_ONLINE_FRAUD_INSIGHTS :: ModelTypeEnum
pattern ModelTypeEnum_TRANSACTION_FRAUD_INSIGHTS :: ModelTypeEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelTypeEnum.ModelTypeEnum


module Network.AWS.FraudDetector.Types.Model

-- | The model.
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | The model type.
[$sel:modelType:Model'] :: Model -> Maybe ModelTypeEnum

-- | Timestamp of last time the model was updated.
[$sel:lastUpdatedTime:Model'] :: Model -> Maybe Text

-- | The model ID.
[$sel:modelId:Model'] :: Model -> Maybe Text

-- | The ARN of the model.
[$sel:arn:Model'] :: Model -> Maybe Text

-- | Timestamp of when the model was created.
[$sel:createdTime:Model'] :: Model -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:Model'] :: Model -> Maybe Text

-- | The model description.
[$sel:description:Model'] :: Model -> Maybe Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelType:Model'</a>, <a>model_modelType</a> - The model type.
--   
--   <a>$sel:lastUpdatedTime:Model'</a>, <a>model_lastUpdatedTime</a> -
--   Timestamp of last time the model was updated.
--   
--   <a>$sel:modelId:Model'</a>, <a>model_modelId</a> - The model ID.
--   
--   <a>$sel:arn:Model'</a>, <a>model_arn</a> - The ARN of the model.
--   
--   <a>$sel:createdTime:Model'</a>, <a>model_createdTime</a> - Timestamp
--   of when the model was created.
--   
--   <a>$sel:eventTypeName:Model'</a>, <a>model_eventTypeName</a> - The
--   name of the event type.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The model
--   description.
newModel :: Model

-- | The model type.
model_modelType :: Lens' Model (Maybe ModelTypeEnum)

-- | Timestamp of last time the model was updated.
model_lastUpdatedTime :: Lens' Model (Maybe Text)

-- | The model ID.
model_modelId :: Lens' Model (Maybe Text)

-- | The ARN of the model.
model_arn :: Lens' Model (Maybe Text)

-- | Timestamp of when the model was created.
model_createdTime :: Lens' Model (Maybe Text)

-- | The name of the event type.
model_eventTypeName :: Lens' Model (Maybe Text)

-- | The model description.
model_description :: Lens' Model (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Model.Model
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Model.Model
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Model.Model
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Model.Model
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Model.Model
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Model.Model
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Model.Model


module Network.AWS.FraudDetector.Types.ModelVersion

-- | The model version.
--   
--   <i>See:</i> <a>newModelVersion</a> smart constructor.
data ModelVersion
ModelVersion' :: Maybe Text -> Text -> ModelTypeEnum -> Text -> ModelVersion

-- | The model version ARN.
[$sel:arn:ModelVersion'] :: ModelVersion -> Maybe Text

-- | The model ID.
[$sel:modelId:ModelVersion'] :: ModelVersion -> Text

-- | The model type.
[$sel:modelType:ModelVersion'] :: ModelVersion -> ModelTypeEnum

-- | The model version number.
[$sel:modelVersionNumber:ModelVersion'] :: ModelVersion -> Text

-- | Create a value of <a>ModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ModelVersion'</a>, <a>modelVersion_arn</a> - The model
--   version ARN.
--   
--   <a>$sel:modelId:ModelVersion'</a>, <a>modelVersion_modelId</a> - The
--   model ID.
--   
--   <a>$sel:modelType:ModelVersion'</a>, <a>modelVersion_modelType</a> -
--   The model type.
--   
--   <a>$sel:modelVersionNumber:ModelVersion'</a>,
--   <a>modelVersion_modelVersionNumber</a> - The model version number.
newModelVersion :: Text -> ModelTypeEnum -> Text -> ModelVersion

-- | The model version ARN.
modelVersion_arn :: Lens' ModelVersion (Maybe Text)

-- | The model ID.
modelVersion_modelId :: Lens' ModelVersion Text

-- | The model type.
modelVersion_modelType :: Lens' ModelVersion ModelTypeEnum

-- | The model version number.
modelVersion_modelVersionNumber :: Lens' ModelVersion Text
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelVersion.ModelVersion


module Network.AWS.FraudDetector.Types.ModelScores

-- | The fraud prediction scores.
--   
--   <i>See:</i> <a>newModelScores</a> smart constructor.
data ModelScores
ModelScores' :: Maybe ModelVersion -> Maybe (HashMap Text Double) -> ModelScores

-- | The model version.
[$sel:modelVersion:ModelScores'] :: ModelScores -> Maybe ModelVersion

-- | The model's fraud prediction scores.
[$sel:scores:ModelScores'] :: ModelScores -> Maybe (HashMap Text Double)

-- | Create a value of <a>ModelScores</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelVersion:ModelScores'</a>, <a>modelScores_modelVersion</a>
--   - The model version.
--   
--   <a>$sel:scores:ModelScores'</a>, <a>modelScores_scores</a> - The
--   model's fraud prediction scores.
newModelScores :: ModelScores

-- | The model version.
modelScores_modelVersion :: Lens' ModelScores (Maybe ModelVersion)

-- | The model's fraud prediction scores.
modelScores_scores :: Lens' ModelScores (Maybe (HashMap Text Double))
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelScores.ModelScores
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelScores.ModelScores
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelScores.ModelScores
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelScores.ModelScores
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelScores.ModelScores
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelScores.ModelScores
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelScores.ModelScores


module Network.AWS.FraudDetector.Types.ModelVersionStatus
newtype ModelVersionStatus
ModelVersionStatus' :: Text -> ModelVersionStatus
[fromModelVersionStatus] :: ModelVersionStatus -> Text
pattern ModelVersionStatus_ACTIVE :: ModelVersionStatus
pattern ModelVersionStatus_INACTIVE :: ModelVersionStatus
pattern ModelVersionStatus_TRAINING_CANCELLED :: ModelVersionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelVersionStatus.ModelVersionStatus


module Network.AWS.FraudDetector.Types.Outcome

-- | The outcome.
--   
--   <i>See:</i> <a>newOutcome</a> smart constructor.
data Outcome
Outcome' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Outcome

-- | The timestamp when the outcome was last updated.
[$sel:lastUpdatedTime:Outcome'] :: Outcome -> Maybe Text

-- | The outcome ARN.
[$sel:arn:Outcome'] :: Outcome -> Maybe Text

-- | The timestamp when the outcome was created.
[$sel:createdTime:Outcome'] :: Outcome -> Maybe Text

-- | The outcome name.
[$sel:name:Outcome'] :: Outcome -> Maybe Text

-- | The outcome description.
[$sel:description:Outcome'] :: Outcome -> Maybe Text

-- | Create a value of <a>Outcome</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Outcome'</a>, <a>outcome_lastUpdatedTime</a> -
--   The timestamp when the outcome was last updated.
--   
--   <a>$sel:arn:Outcome'</a>, <a>outcome_arn</a> - The outcome ARN.
--   
--   <a>$sel:createdTime:Outcome'</a>, <a>outcome_createdTime</a> - The
--   timestamp when the outcome was created.
--   
--   <a>$sel:name:Outcome'</a>, <a>outcome_name</a> - The outcome name.
--   
--   <a>$sel:description:Outcome'</a>, <a>outcome_description</a> - The
--   outcome description.
newOutcome :: Outcome

-- | The timestamp when the outcome was last updated.
outcome_lastUpdatedTime :: Lens' Outcome (Maybe Text)

-- | The outcome ARN.
outcome_arn :: Lens' Outcome (Maybe Text)

-- | The timestamp when the outcome was created.
outcome_createdTime :: Lens' Outcome (Maybe Text)

-- | The outcome name.
outcome_name :: Lens' Outcome (Maybe Text)

-- | The outcome description.
outcome_description :: Lens' Outcome (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Outcome.Outcome
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Outcome.Outcome
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Outcome.Outcome
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Outcome.Outcome
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Outcome.Outcome
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Outcome.Outcome
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Outcome.Outcome


module Network.AWS.FraudDetector.Types.Rule

-- | A rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Text -> Text -> Text -> Rule

-- | The detector for which the rule is associated.
[$sel:detectorId:Rule'] :: Rule -> Text

-- | The rule ID.
[$sel:ruleId:Rule'] :: Rule -> Text

-- | The rule version.
[$sel:ruleVersion:Rule'] :: Rule -> Text

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:Rule'</a>, <a>rule_detectorId</a> - The detector
--   for which the rule is associated.
--   
--   <a>$sel:ruleId:Rule'</a>, <a>rule_ruleId</a> - The rule ID.
--   
--   <a>$sel:ruleVersion:Rule'</a>, <a>rule_ruleVersion</a> - The rule
--   version.
newRule :: Text -> Text -> Text -> Rule

-- | The detector for which the rule is associated.
rule_detectorId :: Lens' Rule Text

-- | The rule ID.
rule_ruleId :: Lens' Rule Text

-- | The rule version.
rule_ruleVersion :: Lens' Rule Text
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Rule.Rule
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Rule.Rule
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Rule.Rule
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Rule.Rule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Rule.Rule
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Rule.Rule
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Rule.Rule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.Rule.Rule


module Network.AWS.FraudDetector.Types.RuleDetail

-- | The details of the rule.
--   
--   <i>See:</i> <a>newRuleDetail</a> smart constructor.
data RuleDetail
RuleDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Language -> Maybe Text -> RuleDetail

-- | The rule version.
[$sel:ruleVersion:RuleDetail'] :: RuleDetail -> Maybe Text

-- | Timestamp of the last time the rule was updated.
[$sel:lastUpdatedTime:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule ARN.
[$sel:arn:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The timestamp of when the rule was created.
[$sel:createdTime:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule ID.
[$sel:ruleId:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule outcomes.
[$sel:outcomes:RuleDetail'] :: RuleDetail -> Maybe (NonEmpty Text)

-- | The detector for which the rule is associated.
[$sel:detectorId:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule expression.
[$sel:expression:RuleDetail'] :: RuleDetail -> Maybe (Sensitive Text)

-- | The rule language.
[$sel:language:RuleDetail'] :: RuleDetail -> Maybe Language

-- | The rule description.
[$sel:description:RuleDetail'] :: RuleDetail -> Maybe Text

-- | Create a value of <a>RuleDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleVersion:RuleDetail'</a>, <a>ruleDetail_ruleVersion</a> -
--   The rule version.
--   
--   <a>$sel:lastUpdatedTime:RuleDetail'</a>,
--   <a>ruleDetail_lastUpdatedTime</a> - Timestamp of the last time the
--   rule was updated.
--   
--   <a>$sel:arn:RuleDetail'</a>, <a>ruleDetail_arn</a> - The rule ARN.
--   
--   <a>$sel:createdTime:RuleDetail'</a>, <a>ruleDetail_createdTime</a> -
--   The timestamp of when the rule was created.
--   
--   <a>$sel:ruleId:RuleDetail'</a>, <a>ruleDetail_ruleId</a> - The rule
--   ID.
--   
--   <a>$sel:outcomes:RuleDetail'</a>, <a>ruleDetail_outcomes</a> - The
--   rule outcomes.
--   
--   <a>$sel:detectorId:RuleDetail'</a>, <a>ruleDetail_detectorId</a> - The
--   detector for which the rule is associated.
--   
--   <a>$sel:expression:RuleDetail'</a>, <a>ruleDetail_expression</a> - The
--   rule expression.
--   
--   <a>$sel:language:RuleDetail'</a>, <a>ruleDetail_language</a> - The
--   rule language.
--   
--   <a>$sel:description:RuleDetail'</a>, <a>ruleDetail_description</a> -
--   The rule description.
newRuleDetail :: RuleDetail

-- | The rule version.
ruleDetail_ruleVersion :: Lens' RuleDetail (Maybe Text)

-- | Timestamp of the last time the rule was updated.
ruleDetail_lastUpdatedTime :: Lens' RuleDetail (Maybe Text)

-- | The rule ARN.
ruleDetail_arn :: Lens' RuleDetail (Maybe Text)

-- | The timestamp of when the rule was created.
ruleDetail_createdTime :: Lens' RuleDetail (Maybe Text)

-- | The rule ID.
ruleDetail_ruleId :: Lens' RuleDetail (Maybe Text)

-- | The rule outcomes.
ruleDetail_outcomes :: Lens' RuleDetail (Maybe (NonEmpty Text))

-- | The detector for which the rule is associated.
ruleDetail_detectorId :: Lens' RuleDetail (Maybe Text)

-- | The rule expression.
ruleDetail_expression :: Lens' RuleDetail (Maybe Text)

-- | The rule language.
ruleDetail_language :: Lens' RuleDetail (Maybe Language)

-- | The rule description.
ruleDetail_description :: Lens' RuleDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.RuleDetail.RuleDetail
instance GHC.Show.Show Network.AWS.FraudDetector.Types.RuleDetail.RuleDetail
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.RuleDetail.RuleDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.RuleDetail.RuleDetail
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.RuleDetail.RuleDetail
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.RuleDetail.RuleDetail


module Network.AWS.FraudDetector.Types.RuleExecutionMode
newtype RuleExecutionMode
RuleExecutionMode' :: Text -> RuleExecutionMode
[fromRuleExecutionMode] :: RuleExecutionMode -> Text
pattern RuleExecutionMode_ALL_MATCHED :: RuleExecutionMode
pattern RuleExecutionMode_FIRST_MATCHED :: RuleExecutionMode
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance GHC.Read.Read Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode
instance GHC.Show.Show Network.AWS.FraudDetector.Types.RuleExecutionMode.RuleExecutionMode


module Network.AWS.FraudDetector.Types.RuleResult

-- | The rule results.
--   
--   <i>See:</i> <a>newRuleResult</a> smart constructor.
data RuleResult
RuleResult' :: Maybe Text -> Maybe [Text] -> RuleResult

-- | The rule ID that was matched, based on the rule execution mode.
[$sel:ruleId:RuleResult'] :: RuleResult -> Maybe Text

-- | The outcomes of the matched rule, based on the rule execution mode.
[$sel:outcomes:RuleResult'] :: RuleResult -> Maybe [Text]

-- | Create a value of <a>RuleResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleId:RuleResult'</a>, <a>ruleResult_ruleId</a> - The rule ID
--   that was matched, based on the rule execution mode.
--   
--   <a>$sel:outcomes:RuleResult'</a>, <a>ruleResult_outcomes</a> - The
--   outcomes of the matched rule, based on the rule execution mode.
newRuleResult :: RuleResult

-- | The rule ID that was matched, based on the rule execution mode.
ruleResult_ruleId :: Lens' RuleResult (Maybe Text)

-- | The outcomes of the matched rule, based on the rule execution mode.
ruleResult_outcomes :: Lens' RuleResult (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.RuleResult.RuleResult
instance GHC.Show.Show Network.AWS.FraudDetector.Types.RuleResult.RuleResult
instance GHC.Read.Read Network.AWS.FraudDetector.Types.RuleResult.RuleResult
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.RuleResult.RuleResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.RuleResult.RuleResult
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.RuleResult.RuleResult
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.RuleResult.RuleResult


module Network.AWS.FraudDetector.Types.Tag

-- | A key and value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | A value assigned to a tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - A value assigned to a tag
--   key.
newTag :: Text -> Text -> Tag

-- | A tag key.
tag_key :: Lens' Tag Text

-- | A value assigned to a tag key.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.Tag.Tag


module Network.AWS.FraudDetector.Types.TrainingDataSourceEnum
newtype TrainingDataSourceEnum
TrainingDataSourceEnum' :: Text -> TrainingDataSourceEnum
[fromTrainingDataSourceEnum] :: TrainingDataSourceEnum -> Text
pattern TrainingDataSourceEnum_EXTERNAL_EVENTS :: TrainingDataSourceEnum
pattern TrainingDataSourceEnum_INGESTED_EVENTS :: TrainingDataSourceEnum
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance GHC.Read.Read Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum
instance GHC.Show.Show Network.AWS.FraudDetector.Types.TrainingDataSourceEnum.TrainingDataSourceEnum


module Network.AWS.FraudDetector.Types.TrainingMetrics

-- | The training metric details.
--   
--   <i>See:</i> <a>newTrainingMetrics</a> smart constructor.
data TrainingMetrics
TrainingMetrics' :: Maybe Double -> Maybe [MetricDataPoint] -> TrainingMetrics

-- | The area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
[$sel:auc:TrainingMetrics'] :: TrainingMetrics -> Maybe Double

-- | The data points details.
[$sel:metricDataPoints:TrainingMetrics'] :: TrainingMetrics -> Maybe [MetricDataPoint]

-- | Create a value of <a>TrainingMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:auc:TrainingMetrics'</a>, <a>trainingMetrics_auc</a> - The
--   area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
--   
--   <a>$sel:metricDataPoints:TrainingMetrics'</a>,
--   <a>trainingMetrics_metricDataPoints</a> - The data points details.
newTrainingMetrics :: TrainingMetrics

-- | The area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
trainingMetrics_auc :: Lens' TrainingMetrics (Maybe Double)

-- | The data points details.
trainingMetrics_metricDataPoints :: Lens' TrainingMetrics (Maybe [MetricDataPoint])
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.TrainingMetrics.TrainingMetrics
instance GHC.Show.Show Network.AWS.FraudDetector.Types.TrainingMetrics.TrainingMetrics
instance GHC.Read.Read Network.AWS.FraudDetector.Types.TrainingMetrics.TrainingMetrics
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.TrainingMetrics.TrainingMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.TrainingMetrics.TrainingMetrics
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.TrainingMetrics.TrainingMetrics
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.TrainingMetrics.TrainingMetrics


module Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment
newtype UnlabeledEventsTreatment
UnlabeledEventsTreatment' :: Text -> UnlabeledEventsTreatment
[fromUnlabeledEventsTreatment] :: UnlabeledEventsTreatment -> Text
pattern UnlabeledEventsTreatment_FRAUD :: UnlabeledEventsTreatment
pattern UnlabeledEventsTreatment_IGNORE :: UnlabeledEventsTreatment
pattern UnlabeledEventsTreatment_LEGIT :: UnlabeledEventsTreatment
instance Network.AWS.Data.XML.ToXML Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Network.AWS.Data.XML.FromXML Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Network.AWS.Data.Headers.ToHeader Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Network.AWS.Data.Log.ToLog Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Network.AWS.Data.Text.ToText Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Network.AWS.Data.Text.FromText Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance GHC.Classes.Ord Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance GHC.Read.Read Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment
instance GHC.Show.Show Network.AWS.FraudDetector.Types.UnlabeledEventsTreatment.UnlabeledEventsTreatment


module Network.AWS.FraudDetector.Types.LabelSchema

-- | The label schema.
--   
--   <i>See:</i> <a>newLabelSchema</a> smart constructor.
data LabelSchema
LabelSchema' :: Maybe UnlabeledEventsTreatment -> HashMap Text (NonEmpty Text) -> LabelSchema

-- | The action to take for unlabeled events.
[$sel:unlabeledEventsTreatment:LabelSchema'] :: LabelSchema -> Maybe UnlabeledEventsTreatment

-- | The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
[$sel:labelMapper:LabelSchema'] :: LabelSchema -> HashMap Text (NonEmpty Text)

-- | Create a value of <a>LabelSchema</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlabeledEventsTreatment:LabelSchema'</a>,
--   <a>labelSchema_unlabeledEventsTreatment</a> - The action to take for
--   unlabeled events.
--   
--   <a>$sel:labelMapper:LabelSchema'</a>, <a>labelSchema_labelMapper</a> -
--   The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
newLabelSchema :: LabelSchema

-- | The action to take for unlabeled events.
labelSchema_unlabeledEventsTreatment :: Lens' LabelSchema (Maybe UnlabeledEventsTreatment)

-- | The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
labelSchema_labelMapper :: Lens' LabelSchema (HashMap Text (NonEmpty Text))
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema
instance GHC.Show.Show Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema
instance GHC.Read.Read Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.LabelSchema.LabelSchema


module Network.AWS.FraudDetector.Types.TrainingDataSchema

-- | The training data schema.
--   
--   <i>See:</i> <a>newTrainingDataSchema</a> smart constructor.
data TrainingDataSchema
TrainingDataSchema' :: [Text] -> LabelSchema -> TrainingDataSchema

-- | The training data schema variables.
[$sel:modelVariables:TrainingDataSchema'] :: TrainingDataSchema -> [Text]
[$sel:labelSchema:TrainingDataSchema'] :: TrainingDataSchema -> LabelSchema

-- | Create a value of <a>TrainingDataSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelVariables:TrainingDataSchema'</a>,
--   <a>trainingDataSchema_modelVariables</a> - The training data schema
--   variables.
--   
--   <a>$sel:labelSchema:TrainingDataSchema'</a>,
--   <a>trainingDataSchema_labelSchema</a> - Undocumented member.
newTrainingDataSchema :: LabelSchema -> TrainingDataSchema

-- | The training data schema variables.
trainingDataSchema_modelVariables :: Lens' TrainingDataSchema [Text]

-- | Undocumented member.
trainingDataSchema_labelSchema :: Lens' TrainingDataSchema LabelSchema
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema
instance GHC.Show.Show Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema
instance GHC.Read.Read Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.TrainingDataSchema.TrainingDataSchema


module Network.AWS.FraudDetector.Types.Variable

-- | The variable.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DataSource -> Maybe DataType -> Maybe Text -> Maybe Text -> Maybe Text -> Variable

-- | The time when variable was last updated.
[$sel:lastUpdatedTime:Variable'] :: Variable -> Maybe Text

-- | The ARN of the variable.
[$sel:arn:Variable'] :: Variable -> Maybe Text

-- | The time when the variable was created.
[$sel:createdTime:Variable'] :: Variable -> Maybe Text

-- | The name of the variable.
[$sel:name:Variable'] :: Variable -> Maybe Text

-- | The data source of the variable.
[$sel:dataSource:Variable'] :: Variable -> Maybe DataSource

-- | The data type of the variable. For more information see <a>Variable
--   types</a>.
[$sel:dataType:Variable'] :: Variable -> Maybe DataType

-- | The default value of the variable.
[$sel:defaultValue:Variable'] :: Variable -> Maybe Text

-- | The variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
[$sel:variableType:Variable'] :: Variable -> Maybe Text

-- | The description of the variable.
[$sel:description:Variable'] :: Variable -> Maybe Text

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Variable'</a>, <a>variable_lastUpdatedTime</a>
--   - The time when variable was last updated.
--   
--   <a>$sel:arn:Variable'</a>, <a>variable_arn</a> - The ARN of the
--   variable.
--   
--   <a>$sel:createdTime:Variable'</a>, <a>variable_createdTime</a> - The
--   time when the variable was created.
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
--   
--   <a>$sel:dataSource:Variable'</a>, <a>variable_dataSource</a> - The
--   data source of the variable.
--   
--   <a>$sel:dataType:Variable'</a>, <a>variable_dataType</a> - The data
--   type of the variable. For more information see <a>Variable types</a>.
--   
--   <a>$sel:defaultValue:Variable'</a>, <a>variable_defaultValue</a> - The
--   default value of the variable.
--   
--   <a>$sel:variableType:Variable'</a>, <a>variable_variableType</a> - The
--   variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
--   
--   <a>$sel:description:Variable'</a>, <a>variable_description</a> - The
--   description of the variable.
newVariable :: Variable

-- | The time when variable was last updated.
variable_lastUpdatedTime :: Lens' Variable (Maybe Text)

-- | The ARN of the variable.
variable_arn :: Lens' Variable (Maybe Text)

-- | The time when the variable was created.
variable_createdTime :: Lens' Variable (Maybe Text)

-- | The name of the variable.
variable_name :: Lens' Variable (Maybe Text)

-- | The data source of the variable.
variable_dataSource :: Lens' Variable (Maybe DataSource)

-- | The data type of the variable. For more information see <a>Variable
--   types</a>.
variable_dataType :: Lens' Variable (Maybe DataType)

-- | The default value of the variable.
variable_defaultValue :: Lens' Variable (Maybe Text)

-- | The variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
variable_variableType :: Lens' Variable (Maybe Text)

-- | The description of the variable.
variable_description :: Lens' Variable (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.Variable.Variable
instance GHC.Show.Show Network.AWS.FraudDetector.Types.Variable.Variable
instance GHC.Read.Read Network.AWS.FraudDetector.Types.Variable.Variable
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.Variable.Variable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.Variable.Variable
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.Variable.Variable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.Variable.Variable


module Network.AWS.FraudDetector.Types.VariableEntry

-- | A variable in the list of variables for the batch create variable
--   request.
--   
--   <i>See:</i> <a>newVariableEntry</a> smart constructor.
data VariableEntry
VariableEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VariableEntry

-- | The name of the variable.
[$sel:name:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The data source of the variable.
[$sel:dataSource:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The data type of the variable.
[$sel:dataType:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The default value of the variable.
[$sel:defaultValue:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The type of the variable. For more information see <a>Variable
--   types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
[$sel:variableType:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The description of the variable.
[$sel:description:VariableEntry'] :: VariableEntry -> Maybe Text

-- | Create a value of <a>VariableEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:VariableEntry'</a>, <a>variableEntry_name</a> - The name
--   of the variable.
--   
--   <a>$sel:dataSource:VariableEntry'</a>, <a>variableEntry_dataSource</a>
--   - The data source of the variable.
--   
--   <a>$sel:dataType:VariableEntry'</a>, <a>variableEntry_dataType</a> -
--   The data type of the variable.
--   
--   <a>$sel:defaultValue:VariableEntry'</a>,
--   <a>variableEntry_defaultValue</a> - The default value of the variable.
--   
--   <a>$sel:variableType:VariableEntry'</a>,
--   <a>variableEntry_variableType</a> - The type of the variable. For more
--   information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
--   
--   <a>$sel:description:VariableEntry'</a>,
--   <a>variableEntry_description</a> - The description of the variable.
newVariableEntry :: VariableEntry

-- | The name of the variable.
variableEntry_name :: Lens' VariableEntry (Maybe Text)

-- | The data source of the variable.
variableEntry_dataSource :: Lens' VariableEntry (Maybe Text)

-- | The data type of the variable.
variableEntry_dataType :: Lens' VariableEntry (Maybe Text)

-- | The default value of the variable.
variableEntry_defaultValue :: Lens' VariableEntry (Maybe Text)

-- | The type of the variable. For more information see <a>Variable
--   types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
variableEntry_variableType :: Lens' VariableEntry (Maybe Text)

-- | The description of the variable.
variableEntry_description :: Lens' VariableEntry (Maybe Text)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.VariableEntry.VariableEntry
instance GHC.Show.Show Network.AWS.FraudDetector.Types.VariableEntry.VariableEntry
instance GHC.Read.Read Network.AWS.FraudDetector.Types.VariableEntry.VariableEntry
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.VariableEntry.VariableEntry
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.VariableEntry.VariableEntry
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.VariableEntry.VariableEntry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.Types.VariableEntry.VariableEntry


module Network.AWS.FraudDetector.Types.VariableImportanceMetrics

-- | The variable importance metrics details.
--   
--   <i>See:</i> <a>newVariableImportanceMetrics</a> smart constructor.
data VariableImportanceMetrics
VariableImportanceMetrics' :: Maybe [LogOddsMetric] -> VariableImportanceMetrics

-- | List of variable metrics.
[$sel:logOddsMetrics:VariableImportanceMetrics'] :: VariableImportanceMetrics -> Maybe [LogOddsMetric]

-- | Create a value of <a>VariableImportanceMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logOddsMetrics:VariableImportanceMetrics'</a>,
--   <a>variableImportanceMetrics_logOddsMetrics</a> - List of variable
--   metrics.
newVariableImportanceMetrics :: VariableImportanceMetrics

-- | List of variable metrics.
variableImportanceMetrics_logOddsMetrics :: Lens' VariableImportanceMetrics (Maybe [LogOddsMetric])
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.VariableImportanceMetrics.VariableImportanceMetrics
instance GHC.Show.Show Network.AWS.FraudDetector.Types.VariableImportanceMetrics.VariableImportanceMetrics
instance GHC.Read.Read Network.AWS.FraudDetector.Types.VariableImportanceMetrics.VariableImportanceMetrics
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.VariableImportanceMetrics.VariableImportanceMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.VariableImportanceMetrics.VariableImportanceMetrics
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.VariableImportanceMetrics.VariableImportanceMetrics
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.VariableImportanceMetrics.VariableImportanceMetrics


module Network.AWS.FraudDetector.Types.TrainingResult

-- | The training result details.
--   
--   <i>See:</i> <a>newTrainingResult</a> smart constructor.
data TrainingResult
TrainingResult' :: Maybe DataValidationMetrics -> Maybe TrainingMetrics -> Maybe VariableImportanceMetrics -> TrainingResult

-- | The validation metrics.
[$sel:dataValidationMetrics:TrainingResult'] :: TrainingResult -> Maybe DataValidationMetrics

-- | The training metric details.
[$sel:trainingMetrics:TrainingResult'] :: TrainingResult -> Maybe TrainingMetrics

-- | The variable importance metrics.
[$sel:variableImportanceMetrics:TrainingResult'] :: TrainingResult -> Maybe VariableImportanceMetrics

-- | Create a value of <a>TrainingResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataValidationMetrics:TrainingResult'</a>,
--   <a>trainingResult_dataValidationMetrics</a> - The validation metrics.
--   
--   <a>$sel:trainingMetrics:TrainingResult'</a>,
--   <a>trainingResult_trainingMetrics</a> - The training metric details.
--   
--   <a>$sel:variableImportanceMetrics:TrainingResult'</a>,
--   <a>trainingResult_variableImportanceMetrics</a> - The variable
--   importance metrics.
newTrainingResult :: TrainingResult

-- | The validation metrics.
trainingResult_dataValidationMetrics :: Lens' TrainingResult (Maybe DataValidationMetrics)

-- | The training metric details.
trainingResult_trainingMetrics :: Lens' TrainingResult (Maybe TrainingMetrics)

-- | The variable importance metrics.
trainingResult_variableImportanceMetrics :: Lens' TrainingResult (Maybe VariableImportanceMetrics)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.TrainingResult.TrainingResult
instance GHC.Show.Show Network.AWS.FraudDetector.Types.TrainingResult.TrainingResult
instance GHC.Read.Read Network.AWS.FraudDetector.Types.TrainingResult.TrainingResult
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.TrainingResult.TrainingResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.TrainingResult.TrainingResult
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.TrainingResult.TrainingResult
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.TrainingResult.TrainingResult


module Network.AWS.FraudDetector.Types.ModelVersionDetail

-- | The details of the model version.
--   
--   <i>See:</i> <a>newModelVersionDetail</a> smart constructor.
data ModelVersionDetail
ModelVersionDetail' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TrainingDataSourceEnum -> Maybe Text -> Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe Text -> Maybe TrainingResult -> Maybe TrainingDataSchema -> ModelVersionDetail

-- | The status of the model version.
[$sel:status:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model type.
[$sel:modelType:ModelVersionDetail'] :: ModelVersionDetail -> Maybe ModelTypeEnum

-- | The timestamp when the model was last updated.
[$sel:lastUpdatedTime:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model ID.
[$sel:modelId:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model version ARN.
[$sel:arn:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model version training data source.
[$sel:trainingDataSource:ModelVersionDetail'] :: ModelVersionDetail -> Maybe TrainingDataSourceEnum

-- | The timestamp when the model was created.
[$sel:createdTime:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The external events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
[$sel:externalEventsDetail:ModelVersionDetail'] :: ModelVersionDetail -> Maybe ExternalEventsDetail

-- | The ingested events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
[$sel:ingestedEventsDetail:ModelVersionDetail'] :: ModelVersionDetail -> Maybe IngestedEventsDetail

-- | The model version number.
[$sel:modelVersionNumber:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The training results.
[$sel:trainingResult:ModelVersionDetail'] :: ModelVersionDetail -> Maybe TrainingResult

-- | The training data schema.
[$sel:trainingDataSchema:ModelVersionDetail'] :: ModelVersionDetail -> Maybe TrainingDataSchema

-- | Create a value of <a>ModelVersionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_status</a> - The status of the model version.
--   
--   <a>$sel:modelType:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelType</a> - The model type.
--   
--   <a>$sel:lastUpdatedTime:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_lastUpdatedTime</a> - The timestamp when the
--   model was last updated.
--   
--   <a>$sel:modelId:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelId</a> - The model ID.
--   
--   <a>$sel:arn:ModelVersionDetail'</a>, <a>modelVersionDetail_arn</a> -
--   The model version ARN.
--   
--   <a>$sel:trainingDataSource:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingDataSource</a> - The model version
--   training data source.
--   
--   <a>$sel:createdTime:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_createdTime</a> - The timestamp when the model
--   was created.
--   
--   <a>$sel:externalEventsDetail:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_externalEventsDetail</a> - The external events
--   data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
--   
--   <a>$sel:ingestedEventsDetail:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_ingestedEventsDetail</a> - The ingested events
--   data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:modelVersionNumber:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:trainingResult:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingResult</a> - The training results.
--   
--   <a>$sel:trainingDataSchema:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingDataSchema</a> - The training data
--   schema.
newModelVersionDetail :: ModelVersionDetail

-- | The status of the model version.
modelVersionDetail_status :: Lens' ModelVersionDetail (Maybe Text)

-- | The model type.
modelVersionDetail_modelType :: Lens' ModelVersionDetail (Maybe ModelTypeEnum)

-- | The timestamp when the model was last updated.
modelVersionDetail_lastUpdatedTime :: Lens' ModelVersionDetail (Maybe Text)

-- | The model ID.
modelVersionDetail_modelId :: Lens' ModelVersionDetail (Maybe Text)

-- | The model version ARN.
modelVersionDetail_arn :: Lens' ModelVersionDetail (Maybe Text)

-- | The model version training data source.
modelVersionDetail_trainingDataSource :: Lens' ModelVersionDetail (Maybe TrainingDataSourceEnum)

-- | The timestamp when the model was created.
modelVersionDetail_createdTime :: Lens' ModelVersionDetail (Maybe Text)

-- | The external events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
modelVersionDetail_externalEventsDetail :: Lens' ModelVersionDetail (Maybe ExternalEventsDetail)

-- | The ingested events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
modelVersionDetail_ingestedEventsDetail :: Lens' ModelVersionDetail (Maybe IngestedEventsDetail)

-- | The model version number.
modelVersionDetail_modelVersionNumber :: Lens' ModelVersionDetail (Maybe Text)

-- | The training results.
modelVersionDetail_trainingResult :: Lens' ModelVersionDetail (Maybe TrainingResult)

-- | The training data schema.
modelVersionDetail_trainingDataSchema :: Lens' ModelVersionDetail (Maybe TrainingDataSchema)
instance GHC.Generics.Generic Network.AWS.FraudDetector.Types.ModelVersionDetail.ModelVersionDetail
instance GHC.Show.Show Network.AWS.FraudDetector.Types.ModelVersionDetail.ModelVersionDetail
instance GHC.Read.Read Network.AWS.FraudDetector.Types.ModelVersionDetail.ModelVersionDetail
instance GHC.Classes.Eq Network.AWS.FraudDetector.Types.ModelVersionDetail.ModelVersionDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.FraudDetector.Types.ModelVersionDetail.ModelVersionDetail
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.Types.ModelVersionDetail.ModelVersionDetail
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.Types.ModelVersionDetail.ModelVersionDetail


module Network.AWS.FraudDetector.Types

-- | API version <tt>2019-11-15</tt> of the Amazon Fraud Detector SDK
--   configuration.
defaultService :: Service

-- | An exception indicating a specified value is not allowed.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating Amazon Fraud Detector does not have the needed
--   permissions. This can occur if you submit a request, such as
--   <tt>PutExternalModel</tt>, that specifies a role that is not in your
--   account.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating that the attached customer-owned (external)
--   model threw an exception when Amazon Fraud Detector invoked the model.
_ResourceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating there was a conflict during a delete
--   operation.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating a throttling error.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating an internal server error.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating the specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AsyncJobStatus
AsyncJobStatus' :: Text -> AsyncJobStatus
[fromAsyncJobStatus] :: AsyncJobStatus -> Text
pattern AsyncJobStatus_CANCELED :: AsyncJobStatus
pattern AsyncJobStatus_CANCEL_IN_PROGRESS :: AsyncJobStatus
pattern AsyncJobStatus_COMPLETE :: AsyncJobStatus
pattern AsyncJobStatus_FAILED :: AsyncJobStatus
pattern AsyncJobStatus_IN_PROGRESS :: AsyncJobStatus
pattern AsyncJobStatus_IN_PROGRESS_INITIALIZING :: AsyncJobStatus
newtype DataSource
DataSource' :: Text -> DataSource
[fromDataSource] :: DataSource -> Text
pattern DataSource_EVENT :: DataSource
pattern DataSource_EXTERNAL_MODEL_SCORE :: DataSource
pattern DataSource_MODEL_SCORE :: DataSource
newtype DataType
DataType' :: Text -> DataType
[fromDataType] :: DataType -> Text
pattern DataType_BOOLEAN :: DataType
pattern DataType_FLOAT :: DataType
pattern DataType_INTEGER :: DataType
pattern DataType_STRING :: DataType
newtype DetectorVersionStatus
DetectorVersionStatus' :: Text -> DetectorVersionStatus
[fromDetectorVersionStatus] :: DetectorVersionStatus -> Text
pattern DetectorVersionStatus_ACTIVE :: DetectorVersionStatus
pattern DetectorVersionStatus_DRAFT :: DetectorVersionStatus
pattern DetectorVersionStatus_INACTIVE :: DetectorVersionStatus
newtype EventIngestion
EventIngestion' :: Text -> EventIngestion
[fromEventIngestion] :: EventIngestion -> Text
pattern EventIngestion_DISABLED :: EventIngestion
pattern EventIngestion_ENABLED :: EventIngestion
newtype Language
Language' :: Text -> Language
[fromLanguage] :: Language -> Text
pattern Language_DETECTORPL :: Language
newtype ModelEndpointStatus
ModelEndpointStatus' :: Text -> ModelEndpointStatus
[fromModelEndpointStatus] :: ModelEndpointStatus -> Text
pattern ModelEndpointStatus_ASSOCIATED :: ModelEndpointStatus
pattern ModelEndpointStatus_DISSOCIATED :: ModelEndpointStatus
newtype ModelInputDataFormat
ModelInputDataFormat' :: Text -> ModelInputDataFormat
[fromModelInputDataFormat] :: ModelInputDataFormat -> Text
pattern ModelInputDataFormat_APPLICATION_JSON :: ModelInputDataFormat
pattern ModelInputDataFormat_TEXT_CSV :: ModelInputDataFormat
newtype ModelOutputDataFormat
ModelOutputDataFormat' :: Text -> ModelOutputDataFormat
[fromModelOutputDataFormat] :: ModelOutputDataFormat -> Text
pattern ModelOutputDataFormat_APPLICATION_JSONLINES :: ModelOutputDataFormat
pattern ModelOutputDataFormat_TEXT_CSV :: ModelOutputDataFormat
newtype ModelSource
ModelSource' :: Text -> ModelSource
[fromModelSource] :: ModelSource -> Text
pattern ModelSource_SAGEMAKER :: ModelSource
newtype ModelTypeEnum
ModelTypeEnum' :: Text -> ModelTypeEnum
[fromModelTypeEnum] :: ModelTypeEnum -> Text
pattern ModelTypeEnum_ONLINE_FRAUD_INSIGHTS :: ModelTypeEnum
pattern ModelTypeEnum_TRANSACTION_FRAUD_INSIGHTS :: ModelTypeEnum
newtype ModelVersionStatus
ModelVersionStatus' :: Text -> ModelVersionStatus
[fromModelVersionStatus] :: ModelVersionStatus -> Text
pattern ModelVersionStatus_ACTIVE :: ModelVersionStatus
pattern ModelVersionStatus_INACTIVE :: ModelVersionStatus
pattern ModelVersionStatus_TRAINING_CANCELLED :: ModelVersionStatus
newtype RuleExecutionMode
RuleExecutionMode' :: Text -> RuleExecutionMode
[fromRuleExecutionMode] :: RuleExecutionMode -> Text
pattern RuleExecutionMode_ALL_MATCHED :: RuleExecutionMode
pattern RuleExecutionMode_FIRST_MATCHED :: RuleExecutionMode
newtype TrainingDataSourceEnum
TrainingDataSourceEnum' :: Text -> TrainingDataSourceEnum
[fromTrainingDataSourceEnum] :: TrainingDataSourceEnum -> Text
pattern TrainingDataSourceEnum_EXTERNAL_EVENTS :: TrainingDataSourceEnum
pattern TrainingDataSourceEnum_INGESTED_EVENTS :: TrainingDataSourceEnum
newtype UnlabeledEventsTreatment
UnlabeledEventsTreatment' :: Text -> UnlabeledEventsTreatment
[fromUnlabeledEventsTreatment] :: UnlabeledEventsTreatment -> Text
pattern UnlabeledEventsTreatment_FRAUD :: UnlabeledEventsTreatment
pattern UnlabeledEventsTreatment_IGNORE :: UnlabeledEventsTreatment
pattern UnlabeledEventsTreatment_LEGIT :: UnlabeledEventsTreatment

-- | Provides the error of the batch create variable API.
--   
--   <i>See:</i> <a>newBatchCreateVariableError</a> smart constructor.
data BatchCreateVariableError
BatchCreateVariableError' :: Maybe Text -> Maybe Int -> Maybe Text -> BatchCreateVariableError

-- | The name.
[$sel:name:BatchCreateVariableError'] :: BatchCreateVariableError -> Maybe Text

-- | The error code.
[$sel:code:BatchCreateVariableError'] :: BatchCreateVariableError -> Maybe Int

-- | The error message.
[$sel:message:BatchCreateVariableError'] :: BatchCreateVariableError -> Maybe Text

-- | Create a value of <a>BatchCreateVariableError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_name</a> - The name.
--   
--   <a>$sel:code:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_code</a> - The error code.
--   
--   <a>$sel:message:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_message</a> - The error message.
newBatchCreateVariableError :: BatchCreateVariableError

-- | The name.
batchCreateVariableError_name :: Lens' BatchCreateVariableError (Maybe Text)

-- | The error code.
batchCreateVariableError_code :: Lens' BatchCreateVariableError (Maybe Int)

-- | The error message.
batchCreateVariableError_message :: Lens' BatchCreateVariableError (Maybe Text)

-- | Provides the error of the batch get variable API.
--   
--   <i>See:</i> <a>newBatchGetVariableError</a> smart constructor.
data BatchGetVariableError
BatchGetVariableError' :: Maybe Text -> Maybe Int -> Maybe Text -> BatchGetVariableError

-- | The error name.
[$sel:name:BatchGetVariableError'] :: BatchGetVariableError -> Maybe Text

-- | The error code.
[$sel:code:BatchGetVariableError'] :: BatchGetVariableError -> Maybe Int

-- | The error message.
[$sel:message:BatchGetVariableError'] :: BatchGetVariableError -> Maybe Text

-- | Create a value of <a>BatchGetVariableError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_name</a> - The error name.
--   
--   <a>$sel:code:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_code</a> - The error code.
--   
--   <a>$sel:message:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_message</a> - The error message.
newBatchGetVariableError :: BatchGetVariableError

-- | The error name.
batchGetVariableError_name :: Lens' BatchGetVariableError (Maybe Text)

-- | The error code.
batchGetVariableError_code :: Lens' BatchGetVariableError (Maybe Int)

-- | The error message.
batchGetVariableError_message :: Lens' BatchGetVariableError (Maybe Text)

-- | The batch import job details.
--   
--   <i>See:</i> <a>newBatchImport</a> smart constructor.
data BatchImport
BatchImport' :: Maybe Text -> Maybe Text -> Maybe AsyncJobStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> BatchImport

-- | The reason batch import job failed.
[$sel:failureReason:BatchImport'] :: BatchImport -> Maybe Text

-- | The ARN of the IAM role to use for this job request.
[$sel:iamRoleArn:BatchImport'] :: BatchImport -> Maybe Text

-- | The status of the batch import job.
[$sel:status:BatchImport'] :: BatchImport -> Maybe AsyncJobStatus

-- | The number of records processed by batch import job.
[$sel:processedRecordsCount:BatchImport'] :: BatchImport -> Maybe Int

-- | The total number of records in the batch import job.
[$sel:totalRecordsCount:BatchImport'] :: BatchImport -> Maybe Int

-- | The ID of the batch import job.
[$sel:jobId:BatchImport'] :: BatchImport -> Maybe Text

-- | The ARN of the batch import job.
[$sel:arn:BatchImport'] :: BatchImport -> Maybe Text

-- | Timestamp of when the batch import job started.
[$sel:startTime:BatchImport'] :: BatchImport -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:BatchImport'] :: BatchImport -> Maybe Text

-- | Timestamp of when batch import job completed.
[$sel:completionTime:BatchImport'] :: BatchImport -> Maybe Text

-- | The Amazon S3 location of your output file.
[$sel:outputPath:BatchImport'] :: BatchImport -> Maybe Text

-- | The Amazon S3 location of your data file for batch import.
[$sel:inputPath:BatchImport'] :: BatchImport -> Maybe Text

-- | The number of records that failed to import.
[$sel:failedRecordsCount:BatchImport'] :: BatchImport -> Maybe Int

-- | Create a value of <a>BatchImport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchImport'</a>,
--   <a>batchImport_failureReason</a> - The reason batch import job failed.
--   
--   <a>$sel:iamRoleArn:BatchImport'</a>, <a>batchImport_iamRoleArn</a> -
--   The ARN of the IAM role to use for this job request.
--   
--   <a>$sel:status:BatchImport'</a>, <a>batchImport_status</a> - The
--   status of the batch import job.
--   
--   <a>$sel:processedRecordsCount:BatchImport'</a>,
--   <a>batchImport_processedRecordsCount</a> - The number of records
--   processed by batch import job.
--   
--   <a>$sel:totalRecordsCount:BatchImport'</a>,
--   <a>batchImport_totalRecordsCount</a> - The total number of records in
--   the batch import job.
--   
--   <a>$sel:jobId:BatchImport'</a>, <a>batchImport_jobId</a> - The ID of
--   the batch import job.
--   
--   <a>$sel:arn:BatchImport'</a>, <a>batchImport_arn</a> - The ARN of the
--   batch import job.
--   
--   <a>$sel:startTime:BatchImport'</a>, <a>batchImport_startTime</a> -
--   Timestamp of when the batch import job started.
--   
--   <a>$sel:eventTypeName:BatchImport'</a>,
--   <a>batchImport_eventTypeName</a> - The name of the event type.
--   
--   <a>$sel:completionTime:BatchImport'</a>,
--   <a>batchImport_completionTime</a> - Timestamp of when batch import job
--   completed.
--   
--   <a>$sel:outputPath:BatchImport'</a>, <a>batchImport_outputPath</a> -
--   The Amazon S3 location of your output file.
--   
--   <a>$sel:inputPath:BatchImport'</a>, <a>batchImport_inputPath</a> - The
--   Amazon S3 location of your data file for batch import.
--   
--   <a>$sel:failedRecordsCount:BatchImport'</a>,
--   <a>batchImport_failedRecordsCount</a> - The number of records that
--   failed to import.
newBatchImport :: BatchImport

-- | The reason batch import job failed.
batchImport_failureReason :: Lens' BatchImport (Maybe Text)

-- | The ARN of the IAM role to use for this job request.
batchImport_iamRoleArn :: Lens' BatchImport (Maybe Text)

-- | The status of the batch import job.
batchImport_status :: Lens' BatchImport (Maybe AsyncJobStatus)

-- | The number of records processed by batch import job.
batchImport_processedRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The total number of records in the batch import job.
batchImport_totalRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The ID of the batch import job.
batchImport_jobId :: Lens' BatchImport (Maybe Text)

-- | The ARN of the batch import job.
batchImport_arn :: Lens' BatchImport (Maybe Text)

-- | Timestamp of when the batch import job started.
batchImport_startTime :: Lens' BatchImport (Maybe Text)

-- | The name of the event type.
batchImport_eventTypeName :: Lens' BatchImport (Maybe Text)

-- | Timestamp of when batch import job completed.
batchImport_completionTime :: Lens' BatchImport (Maybe Text)

-- | The Amazon S3 location of your output file.
batchImport_outputPath :: Lens' BatchImport (Maybe Text)

-- | The Amazon S3 location of your data file for batch import.
batchImport_inputPath :: Lens' BatchImport (Maybe Text)

-- | The number of records that failed to import.
batchImport_failedRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The batch prediction details.
--   
--   <i>See:</i> <a>newBatchPrediction</a> smart constructor.
data BatchPrediction
BatchPrediction' :: Maybe Text -> Maybe Text -> Maybe AsyncJobStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BatchPrediction

-- | The reason a batch prediction job failed.
[$sel:failureReason:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The ARN of the IAM role to use for this job request.
[$sel:iamRoleArn:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The batch prediction status.
[$sel:status:BatchPrediction'] :: BatchPrediction -> Maybe AsyncJobStatus

-- | The number of records processed by the batch prediction job.
[$sel:processedRecordsCount:BatchPrediction'] :: BatchPrediction -> Maybe Int

-- | The total number of records in the batch prediction job.
[$sel:totalRecordsCount:BatchPrediction'] :: BatchPrediction -> Maybe Int

-- | Timestamp of most recent heartbeat indicating the batch prediction job
--   was making progress.
[$sel:lastHeartbeatTime:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The job ID for the batch prediction.
[$sel:jobId:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The ARN of batch prediction job.
[$sel:arn:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | Timestamp of when the batch prediction job started.
[$sel:startTime:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | Timestamp of when the batch prediction job completed.
[$sel:completionTime:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The Amazon S3 location of your output file.
[$sel:outputPath:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The name of the detector.
[$sel:detectorName:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The detector version.
[$sel:detectorVersion:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | The Amazon S3 location of your training file.
[$sel:inputPath:BatchPrediction'] :: BatchPrediction -> Maybe Text

-- | Create a value of <a>BatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchPrediction'</a>,
--   <a>batchPrediction_failureReason</a> - The reason a batch prediction
--   job failed.
--   
--   <a>$sel:iamRoleArn:BatchPrediction'</a>,
--   <a>batchPrediction_iamRoleArn</a> - The ARN of the IAM role to use for
--   this job request.
--   
--   <a>$sel:status:BatchPrediction'</a>, <a>batchPrediction_status</a> -
--   The batch prediction status.
--   
--   <a>$sel:processedRecordsCount:BatchPrediction'</a>,
--   <a>batchPrediction_processedRecordsCount</a> - The number of records
--   processed by the batch prediction job.
--   
--   <a>$sel:totalRecordsCount:BatchPrediction'</a>,
--   <a>batchPrediction_totalRecordsCount</a> - The total number of records
--   in the batch prediction job.
--   
--   <a>$sel:lastHeartbeatTime:BatchPrediction'</a>,
--   <a>batchPrediction_lastHeartbeatTime</a> - Timestamp of most recent
--   heartbeat indicating the batch prediction job was making progress.
--   
--   <a>$sel:jobId:BatchPrediction'</a>, <a>batchPrediction_jobId</a> - The
--   job ID for the batch prediction.
--   
--   <a>$sel:arn:BatchPrediction'</a>, <a>batchPrediction_arn</a> - The ARN
--   of batch prediction job.
--   
--   <a>$sel:startTime:BatchPrediction'</a>,
--   <a>batchPrediction_startTime</a> - Timestamp of when the batch
--   prediction job started.
--   
--   <a>$sel:eventTypeName:BatchPrediction'</a>,
--   <a>batchPrediction_eventTypeName</a> - The name of the event type.
--   
--   <a>$sel:completionTime:BatchPrediction'</a>,
--   <a>batchPrediction_completionTime</a> - Timestamp of when the batch
--   prediction job completed.
--   
--   <a>$sel:outputPath:BatchPrediction'</a>,
--   <a>batchPrediction_outputPath</a> - The Amazon S3 location of your
--   output file.
--   
--   <a>$sel:detectorName:BatchPrediction'</a>,
--   <a>batchPrediction_detectorName</a> - The name of the detector.
--   
--   <a>$sel:detectorVersion:BatchPrediction'</a>,
--   <a>batchPrediction_detectorVersion</a> - The detector version.
--   
--   <a>$sel:inputPath:BatchPrediction'</a>,
--   <a>batchPrediction_inputPath</a> - The Amazon S3 location of your
--   training file.
newBatchPrediction :: BatchPrediction

-- | The reason a batch prediction job failed.
batchPrediction_failureReason :: Lens' BatchPrediction (Maybe Text)

-- | The ARN of the IAM role to use for this job request.
batchPrediction_iamRoleArn :: Lens' BatchPrediction (Maybe Text)

-- | The batch prediction status.
batchPrediction_status :: Lens' BatchPrediction (Maybe AsyncJobStatus)

-- | The number of records processed by the batch prediction job.
batchPrediction_processedRecordsCount :: Lens' BatchPrediction (Maybe Int)

-- | The total number of records in the batch prediction job.
batchPrediction_totalRecordsCount :: Lens' BatchPrediction (Maybe Int)

-- | Timestamp of most recent heartbeat indicating the batch prediction job
--   was making progress.
batchPrediction_lastHeartbeatTime :: Lens' BatchPrediction (Maybe Text)

-- | The job ID for the batch prediction.
batchPrediction_jobId :: Lens' BatchPrediction (Maybe Text)

-- | The ARN of batch prediction job.
batchPrediction_arn :: Lens' BatchPrediction (Maybe Text)

-- | Timestamp of when the batch prediction job started.
batchPrediction_startTime :: Lens' BatchPrediction (Maybe Text)

-- | The name of the event type.
batchPrediction_eventTypeName :: Lens' BatchPrediction (Maybe Text)

-- | Timestamp of when the batch prediction job completed.
batchPrediction_completionTime :: Lens' BatchPrediction (Maybe Text)

-- | The Amazon S3 location of your output file.
batchPrediction_outputPath :: Lens' BatchPrediction (Maybe Text)

-- | The name of the detector.
batchPrediction_detectorName :: Lens' BatchPrediction (Maybe Text)

-- | The detector version.
batchPrediction_detectorVersion :: Lens' BatchPrediction (Maybe Text)

-- | The Amazon S3 location of your training file.
batchPrediction_inputPath :: Lens' BatchPrediction (Maybe Text)

-- | The model training validation messages.
--   
--   <i>See:</i> <a>newDataValidationMetrics</a> smart constructor.
data DataValidationMetrics
DataValidationMetrics' :: Maybe [FieldValidationMessage] -> Maybe [FileValidationMessage] -> DataValidationMetrics

-- | The field-specific model training validation messages.
[$sel:fieldLevelMessages:DataValidationMetrics'] :: DataValidationMetrics -> Maybe [FieldValidationMessage]

-- | The file-specific model training validation messages.
[$sel:fileLevelMessages:DataValidationMetrics'] :: DataValidationMetrics -> Maybe [FileValidationMessage]

-- | Create a value of <a>DataValidationMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fieldLevelMessages:DataValidationMetrics'</a>,
--   <a>dataValidationMetrics_fieldLevelMessages</a> - The field-specific
--   model training validation messages.
--   
--   <a>$sel:fileLevelMessages:DataValidationMetrics'</a>,
--   <a>dataValidationMetrics_fileLevelMessages</a> - The file-specific
--   model training validation messages.
newDataValidationMetrics :: DataValidationMetrics

-- | The field-specific model training validation messages.
dataValidationMetrics_fieldLevelMessages :: Lens' DataValidationMetrics (Maybe [FieldValidationMessage])

-- | The file-specific model training validation messages.
dataValidationMetrics_fileLevelMessages :: Lens' DataValidationMetrics (Maybe [FileValidationMessage])

-- | The detector.
--   
--   <i>See:</i> <a>newDetector</a> smart constructor.
data Detector
Detector' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Detector

-- | Timestamp of when the detector was last updated.
[$sel:lastUpdatedTime:Detector'] :: Detector -> Maybe Text

-- | The detector ARN.
[$sel:arn:Detector'] :: Detector -> Maybe Text

-- | Timestamp of when the detector was created.
[$sel:createdTime:Detector'] :: Detector -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:Detector'] :: Detector -> Maybe Text

-- | The detector ID.
[$sel:detectorId:Detector'] :: Detector -> Maybe Text

-- | The detector description.
[$sel:description:Detector'] :: Detector -> Maybe Text

-- | Create a value of <a>Detector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Detector'</a>, <a>detector_lastUpdatedTime</a>
--   - Timestamp of when the detector was last updated.
--   
--   <a>$sel:arn:Detector'</a>, <a>detector_arn</a> - The detector ARN.
--   
--   <a>$sel:createdTime:Detector'</a>, <a>detector_createdTime</a> -
--   Timestamp of when the detector was created.
--   
--   <a>$sel:eventTypeName:Detector'</a>, <a>detector_eventTypeName</a> -
--   The name of the event type.
--   
--   <a>$sel:detectorId:Detector'</a>, <a>detector_detectorId</a> - The
--   detector ID.
--   
--   <a>$sel:description:Detector'</a>, <a>detector_description</a> - The
--   detector description.
newDetector :: Detector

-- | Timestamp of when the detector was last updated.
detector_lastUpdatedTime :: Lens' Detector (Maybe Text)

-- | The detector ARN.
detector_arn :: Lens' Detector (Maybe Text)

-- | Timestamp of when the detector was created.
detector_createdTime :: Lens' Detector (Maybe Text)

-- | The name of the event type.
detector_eventTypeName :: Lens' Detector (Maybe Text)

-- | The detector ID.
detector_detectorId :: Lens' Detector (Maybe Text)

-- | The detector description.
detector_description :: Lens' Detector (Maybe Text)

-- | The summary of the detector version.
--   
--   <i>See:</i> <a>newDetectorVersionSummary</a> smart constructor.
data DetectorVersionSummary
DetectorVersionSummary' :: Maybe DetectorVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> DetectorVersionSummary

-- | The detector version status.
[$sel:status:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe DetectorVersionStatus

-- | Timestamp of when the detector version was last updated.
[$sel:lastUpdatedTime:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe Text

-- | The detector version ID.
[$sel:detectorVersionId:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe Text

-- | The detector version description.
[$sel:description:DetectorVersionSummary'] :: DetectorVersionSummary -> Maybe Text

-- | Create a value of <a>DetectorVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_status</a> - The detector version status.
--   
--   <a>$sel:lastUpdatedTime:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_lastUpdatedTime</a> - Timestamp of when the
--   detector version was last updated.
--   
--   <a>$sel:detectorVersionId:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_detectorVersionId</a> - The detector version
--   ID.
--   
--   <a>$sel:description:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_description</a> - The detector version
--   description.
newDetectorVersionSummary :: DetectorVersionSummary

-- | The detector version status.
detectorVersionSummary_status :: Lens' DetectorVersionSummary (Maybe DetectorVersionStatus)

-- | Timestamp of when the detector version was last updated.
detectorVersionSummary_lastUpdatedTime :: Lens' DetectorVersionSummary (Maybe Text)

-- | The detector version ID.
detectorVersionSummary_detectorVersionId :: Lens' DetectorVersionSummary (Maybe Text)

-- | The detector version description.
detectorVersionSummary_description :: Lens' DetectorVersionSummary (Maybe Text)

-- | The entity details.
--   
--   <i>See:</i> <a>newEntity</a> smart constructor.
data Entity
Entity' :: Text -> Text -> Entity

-- | The entity type.
[$sel:entityType:Entity'] :: Entity -> Text

-- | The entity ID. If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
[$sel:entityId:Entity'] :: Entity -> Text

-- | Create a value of <a>Entity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityType:Entity'</a>, <a>entity_entityType</a> - The entity
--   type.
--   
--   <a>$sel:entityId:Entity'</a>, <a>entity_entityId</a> - The entity ID.
--   If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
newEntity :: Text -> Text -> Entity

-- | The entity type.
entity_entityType :: Lens' Entity Text

-- | The entity ID. If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
entity_entityId :: Lens' Entity Text

-- | The entity type details.
--   
--   <i>See:</i> <a>newEntityType</a> smart constructor.
data EntityType
EntityType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EntityType

-- | Timestamp of when the entity type was last updated.
[$sel:lastUpdatedTime:EntityType'] :: EntityType -> Maybe Text

-- | The entity type ARN.
[$sel:arn:EntityType'] :: EntityType -> Maybe Text

-- | Timestamp of when the entity type was created.
[$sel:createdTime:EntityType'] :: EntityType -> Maybe Text

-- | The entity type name.
[$sel:name:EntityType'] :: EntityType -> Maybe Text

-- | The entity type description.
[$sel:description:EntityType'] :: EntityType -> Maybe Text

-- | Create a value of <a>EntityType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:EntityType'</a>,
--   <a>entityType_lastUpdatedTime</a> - Timestamp of when the entity type
--   was last updated.
--   
--   <a>$sel:arn:EntityType'</a>, <a>entityType_arn</a> - The entity type
--   ARN.
--   
--   <a>$sel:createdTime:EntityType'</a>, <a>entityType_createdTime</a> -
--   Timestamp of when the entity type was created.
--   
--   <a>$sel:name:EntityType'</a>, <a>entityType_name</a> - The entity type
--   name.
--   
--   <a>$sel:description:EntityType'</a>, <a>entityType_description</a> -
--   The entity type description.
newEntityType :: EntityType

-- | Timestamp of when the entity type was last updated.
entityType_lastUpdatedTime :: Lens' EntityType (Maybe Text)

-- | The entity type ARN.
entityType_arn :: Lens' EntityType (Maybe Text)

-- | Timestamp of when the entity type was created.
entityType_createdTime :: Lens' EntityType (Maybe Text)

-- | The entity type name.
entityType_name :: Lens' EntityType (Maybe Text)

-- | The entity type description.
entityType_description :: Lens' EntityType (Maybe Text)

-- | The event details.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe [Sensitive Entity] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> Maybe Text -> Event

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
[$sel:eventTimestamp:Event'] :: Event -> Maybe Text

-- | The event entities.
[$sel:entities:Event'] :: Event -> Maybe [Sensitive Entity]

-- | The timestamp associated with the label to update. The timestamp must
--   be specified using ISO 8601 standard in UTC.
[$sel:labelTimestamp:Event'] :: Event -> Maybe Text

-- | The event type.
[$sel:eventTypeName:Event'] :: Event -> Maybe Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
[$sel:eventVariables:Event'] :: Event -> Maybe (HashMap Text (Sensitive Text))

-- | The label associated with the event.
[$sel:currentLabel:Event'] :: Event -> Maybe Text

-- | The event ID.
[$sel:eventId:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTimestamp:Event'</a>, <a>event_eventTimestamp</a> - The
--   timestamp that defines when the event under evaluation occurred. The
--   timestamp must be specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:entities:Event'</a>, <a>event_entities</a> - The event
--   entities.
--   
--   <a>$sel:labelTimestamp:Event'</a>, <a>event_labelTimestamp</a> - The
--   timestamp associated with the label to update. The timestamp must be
--   specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:eventTypeName:Event'</a>, <a>event_eventTypeName</a> - The
--   event type.
--   
--   <a>$sel:eventVariables:Event'</a>, <a>event_eventVariables</a> - Names
--   of the event type's variables you defined in Amazon Fraud Detector to
--   represent data elements and their corresponding values for the event
--   you are sending for evaluation.
--   
--   <a>$sel:currentLabel:Event'</a>, <a>event_currentLabel</a> - The label
--   associated with the event.
--   
--   <a>$sel:eventId:Event'</a>, <a>event_eventId</a> - The event ID.
newEvent :: Event

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
event_eventTimestamp :: Lens' Event (Maybe Text)

-- | The event entities.
event_entities :: Lens' Event (Maybe [Entity])

-- | The timestamp associated with the label to update. The timestamp must
--   be specified using ISO 8601 standard in UTC.
event_labelTimestamp :: Lens' Event (Maybe Text)

-- | The event type.
event_eventTypeName :: Lens' Event (Maybe Text)

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
event_eventVariables :: Lens' Event (Maybe (HashMap Text Text))

-- | The label associated with the event.
event_currentLabel :: Lens' Event (Maybe Text)

-- | The event ID.
event_eventId :: Lens' Event (Maybe Text)

-- | The event type details.
--   
--   <i>See:</i> <a>newEventType</a> smart constructor.
data EventType
EventType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [Text] -> Maybe Text -> Maybe IngestedEventStatistics -> Maybe [Text] -> Maybe EventIngestion -> Maybe Text -> EventType

-- | Timestamp of when the event type was last updated.
[$sel:lastUpdatedTime:EventType'] :: EventType -> Maybe Text

-- | The entity type ARN.
[$sel:arn:EventType'] :: EventType -> Maybe Text

-- | Timestamp of when the event type was created.
[$sel:createdTime:EventType'] :: EventType -> Maybe Text

-- | The event type entity types.
[$sel:entityTypes:EventType'] :: EventType -> Maybe (NonEmpty Text)

-- | The event type event variables.
[$sel:eventVariables:EventType'] :: EventType -> Maybe [Text]

-- | The event type name.
[$sel:name:EventType'] :: EventType -> Maybe Text

-- | Data about the stored events.
[$sel:ingestedEventStatistics:EventType'] :: EventType -> Maybe IngestedEventStatistics

-- | The event type labels.
[$sel:labels:EventType'] :: EventType -> Maybe [Text]

-- | If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when you
--   generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
[$sel:eventIngestion:EventType'] :: EventType -> Maybe EventIngestion

-- | The event type description.
[$sel:description:EventType'] :: EventType -> Maybe Text

-- | Create a value of <a>EventType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:EventType'</a>,
--   <a>eventType_lastUpdatedTime</a> - Timestamp of when the event type
--   was last updated.
--   
--   <a>$sel:arn:EventType'</a>, <a>eventType_arn</a> - The entity type
--   ARN.
--   
--   <a>$sel:createdTime:EventType'</a>, <a>eventType_createdTime</a> -
--   Timestamp of when the event type was created.
--   
--   <a>$sel:entityTypes:EventType'</a>, <a>eventType_entityTypes</a> - The
--   event type entity types.
--   
--   <a>$sel:eventVariables:EventType'</a>, <a>eventType_eventVariables</a>
--   - The event type event variables.
--   
--   <a>$sel:name:EventType'</a>, <a>eventType_name</a> - The event type
--   name.
--   
--   <a>$sel:ingestedEventStatistics:EventType'</a>,
--   <a>eventType_ingestedEventStatistics</a> - Data about the stored
--   events.
--   
--   <a>$sel:labels:EventType'</a>, <a>eventType_labels</a> - The event
--   type labels.
--   
--   <a>$sel:eventIngestion:EventType'</a>, <a>eventType_eventIngestion</a>
--   - If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when
--   you generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
--   
--   <a>$sel:description:EventType'</a>, <a>eventType_description</a> - The
--   event type description.
newEventType :: EventType

-- | Timestamp of when the event type was last updated.
eventType_lastUpdatedTime :: Lens' EventType (Maybe Text)

-- | The entity type ARN.
eventType_arn :: Lens' EventType (Maybe Text)

-- | Timestamp of when the event type was created.
eventType_createdTime :: Lens' EventType (Maybe Text)

-- | The event type entity types.
eventType_entityTypes :: Lens' EventType (Maybe (NonEmpty Text))

-- | The event type event variables.
eventType_eventVariables :: Lens' EventType (Maybe [Text])

-- | The event type name.
eventType_name :: Lens' EventType (Maybe Text)

-- | Data about the stored events.
eventType_ingestedEventStatistics :: Lens' EventType (Maybe IngestedEventStatistics)

-- | The event type labels.
eventType_labels :: Lens' EventType (Maybe [Text])

-- | If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when you
--   generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
eventType_eventIngestion :: Lens' EventType (Maybe EventIngestion)

-- | The event type description.
eventType_description :: Lens' EventType (Maybe Text)

-- | Details for the external events data used for model version training.
--   
--   <i>See:</i> <a>newExternalEventsDetail</a> smart constructor.
data ExternalEventsDetail
ExternalEventsDetail' :: Text -> Text -> ExternalEventsDetail

-- | The Amazon S3 bucket location for the data.
[$sel:dataLocation:ExternalEventsDetail'] :: ExternalEventsDetail -> Text

-- | The ARN of the role that provides Amazon Fraud Detector access to the
--   data location.
[$sel:dataAccessRoleArn:ExternalEventsDetail'] :: ExternalEventsDetail -> Text

-- | Create a value of <a>ExternalEventsDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:ExternalEventsDetail'</a>,
--   <a>externalEventsDetail_dataLocation</a> - The Amazon S3 bucket
--   location for the data.
--   
--   <a>$sel:dataAccessRoleArn:ExternalEventsDetail'</a>,
--   <a>externalEventsDetail_dataAccessRoleArn</a> - The ARN of the role
--   that provides Amazon Fraud Detector access to the data location.
newExternalEventsDetail :: Text -> Text -> ExternalEventsDetail

-- | The Amazon S3 bucket location for the data.
externalEventsDetail_dataLocation :: Lens' ExternalEventsDetail Text

-- | The ARN of the role that provides Amazon Fraud Detector access to the
--   data location.
externalEventsDetail_dataAccessRoleArn :: Lens' ExternalEventsDetail Text

-- | The Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModel</a> smart constructor.
data ExternalModel
ExternalModel' :: Maybe Text -> Maybe ModelSource -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ModelEndpointStatus -> Maybe ModelOutputConfiguration -> Maybe Text -> Maybe ModelInputConfiguration -> ExternalModel

-- | The Amazon SageMaker model endpoints.
[$sel:modelEndpoint:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The source of the model.
[$sel:modelSource:ExternalModel'] :: ExternalModel -> Maybe ModelSource

-- | Timestamp of when the model was last updated.
[$sel:lastUpdatedTime:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The model ARN.
[$sel:arn:ExternalModel'] :: ExternalModel -> Maybe Text

-- | Timestamp of when the model was last created.
[$sel:createdTime:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The Amazon Fraud Detector status for the external model endpoint
[$sel:modelEndpointStatus:ExternalModel'] :: ExternalModel -> Maybe ModelEndpointStatus

-- | The output configuration.
[$sel:outputConfiguration:ExternalModel'] :: ExternalModel -> Maybe ModelOutputConfiguration

-- | The role used to invoke the model.
[$sel:invokeModelEndpointRoleArn:ExternalModel'] :: ExternalModel -> Maybe Text

-- | The input configuration.
[$sel:inputConfiguration:ExternalModel'] :: ExternalModel -> Maybe ModelInputConfiguration

-- | Create a value of <a>ExternalModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:ExternalModel'</a>,
--   <a>externalModel_modelEndpoint</a> - The Amazon SageMaker model
--   endpoints.
--   
--   <a>$sel:modelSource:ExternalModel'</a>,
--   <a>externalModel_modelSource</a> - The source of the model.
--   
--   <a>$sel:lastUpdatedTime:ExternalModel'</a>,
--   <a>externalModel_lastUpdatedTime</a> - Timestamp of when the model was
--   last updated.
--   
--   <a>$sel:arn:ExternalModel'</a>, <a>externalModel_arn</a> - The model
--   ARN.
--   
--   <a>$sel:createdTime:ExternalModel'</a>,
--   <a>externalModel_createdTime</a> - Timestamp of when the model was
--   last created.
--   
--   <a>$sel:modelEndpointStatus:ExternalModel'</a>,
--   <a>externalModel_modelEndpointStatus</a> - The Amazon Fraud Detector
--   status for the external model endpoint
--   
--   <a>$sel:outputConfiguration:ExternalModel'</a>,
--   <a>externalModel_outputConfiguration</a> - The output configuration.
--   
--   <a>$sel:invokeModelEndpointRoleArn:ExternalModel'</a>,
--   <a>externalModel_invokeModelEndpointRoleArn</a> - The role used to
--   invoke the model.
--   
--   <a>$sel:inputConfiguration:ExternalModel'</a>,
--   <a>externalModel_inputConfiguration</a> - The input configuration.
newExternalModel :: ExternalModel

-- | The Amazon SageMaker model endpoints.
externalModel_modelEndpoint :: Lens' ExternalModel (Maybe Text)

-- | The source of the model.
externalModel_modelSource :: Lens' ExternalModel (Maybe ModelSource)

-- | Timestamp of when the model was last updated.
externalModel_lastUpdatedTime :: Lens' ExternalModel (Maybe Text)

-- | The model ARN.
externalModel_arn :: Lens' ExternalModel (Maybe Text)

-- | Timestamp of when the model was last created.
externalModel_createdTime :: Lens' ExternalModel (Maybe Text)

-- | The Amazon Fraud Detector status for the external model endpoint
externalModel_modelEndpointStatus :: Lens' ExternalModel (Maybe ModelEndpointStatus)

-- | The output configuration.
externalModel_outputConfiguration :: Lens' ExternalModel (Maybe ModelOutputConfiguration)

-- | The role used to invoke the model.
externalModel_invokeModelEndpointRoleArn :: Lens' ExternalModel (Maybe Text)

-- | The input configuration.
externalModel_inputConfiguration :: Lens' ExternalModel (Maybe ModelInputConfiguration)

-- | The fraud prediction scores from Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModelOutputs</a> smart constructor.
data ExternalModelOutputs
ExternalModelOutputs' :: Maybe ExternalModelSummary -> Maybe (HashMap Text Text) -> ExternalModelOutputs

-- | The Amazon SageMaker model.
[$sel:externalModel:ExternalModelOutputs'] :: ExternalModelOutputs -> Maybe ExternalModelSummary

-- | The fraud prediction scores from Amazon SageMaker model.
[$sel:outputs:ExternalModelOutputs'] :: ExternalModelOutputs -> Maybe (HashMap Text Text)

-- | Create a value of <a>ExternalModelOutputs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalModel:ExternalModelOutputs'</a>,
--   <a>externalModelOutputs_externalModel</a> - The Amazon SageMaker
--   model.
--   
--   <a>$sel:outputs:ExternalModelOutputs'</a>,
--   <a>externalModelOutputs_outputs</a> - The fraud prediction scores from
--   Amazon SageMaker model.
newExternalModelOutputs :: ExternalModelOutputs

-- | The Amazon SageMaker model.
externalModelOutputs_externalModel :: Lens' ExternalModelOutputs (Maybe ExternalModelSummary)

-- | The fraud prediction scores from Amazon SageMaker model.
externalModelOutputs_outputs :: Lens' ExternalModelOutputs (Maybe (HashMap Text Text))

-- | The Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModelSummary</a> smart constructor.
data ExternalModelSummary
ExternalModelSummary' :: Maybe Text -> Maybe ModelSource -> ExternalModelSummary

-- | The endpoint of the Amazon SageMaker model.
[$sel:modelEndpoint:ExternalModelSummary'] :: ExternalModelSummary -> Maybe Text

-- | The source of the model.
[$sel:modelSource:ExternalModelSummary'] :: ExternalModelSummary -> Maybe ModelSource

-- | Create a value of <a>ExternalModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:ExternalModelSummary'</a>,
--   <a>externalModelSummary_modelEndpoint</a> - The endpoint of the Amazon
--   SageMaker model.
--   
--   <a>$sel:modelSource:ExternalModelSummary'</a>,
--   <a>externalModelSummary_modelSource</a> - The source of the model.
newExternalModelSummary :: ExternalModelSummary

-- | The endpoint of the Amazon SageMaker model.
externalModelSummary_modelEndpoint :: Lens' ExternalModelSummary (Maybe Text)

-- | The source of the model.
externalModelSummary_modelSource :: Lens' ExternalModelSummary (Maybe ModelSource)

-- | The message details.
--   
--   <i>See:</i> <a>newFieldValidationMessage</a> smart constructor.
data FieldValidationMessage
FieldValidationMessage' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FieldValidationMessage

-- | The message ID.
[$sel:identifier:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The message content.
[$sel:content:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The field name.
[$sel:fieldName:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The message title.
[$sel:title:FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | The message type.
[$sel:type':FieldValidationMessage'] :: FieldValidationMessage -> Maybe Text

-- | Create a value of <a>FieldValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_identifier</a> - The message ID.
--   
--   <a>$sel:content:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_content</a> - The message content.
--   
--   <a>$sel:fieldName:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_fieldName</a> - The field name.
--   
--   <a>$sel:title:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_title</a> - The message title.
--   
--   <a>$sel:type':FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_type</a> - The message type.
newFieldValidationMessage :: FieldValidationMessage

-- | The message ID.
fieldValidationMessage_identifier :: Lens' FieldValidationMessage (Maybe Text)

-- | The message content.
fieldValidationMessage_content :: Lens' FieldValidationMessage (Maybe Text)

-- | The field name.
fieldValidationMessage_fieldName :: Lens' FieldValidationMessage (Maybe Text)

-- | The message title.
fieldValidationMessage_title :: Lens' FieldValidationMessage (Maybe Text)

-- | The message type.
fieldValidationMessage_type :: Lens' FieldValidationMessage (Maybe Text)

-- | The message details.
--   
--   <i>See:</i> <a>newFileValidationMessage</a> smart constructor.
data FileValidationMessage
FileValidationMessage' :: Maybe Text -> Maybe Text -> Maybe Text -> FileValidationMessage

-- | The message content.
[$sel:content:FileValidationMessage'] :: FileValidationMessage -> Maybe Text

-- | The message title.
[$sel:title:FileValidationMessage'] :: FileValidationMessage -> Maybe Text

-- | The message type.
[$sel:type':FileValidationMessage'] :: FileValidationMessage -> Maybe Text

-- | Create a value of <a>FileValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:FileValidationMessage'</a>,
--   <a>fileValidationMessage_content</a> - The message content.
--   
--   <a>$sel:title:FileValidationMessage'</a>,
--   <a>fileValidationMessage_title</a> - The message title.
--   
--   <a>$sel:type':FileValidationMessage'</a>,
--   <a>fileValidationMessage_type</a> - The message type.
newFileValidationMessage :: FileValidationMessage

-- | The message content.
fileValidationMessage_content :: Lens' FileValidationMessage (Maybe Text)

-- | The message title.
fileValidationMessage_title :: Lens' FileValidationMessage (Maybe Text)

-- | The message type.
fileValidationMessage_type :: Lens' FileValidationMessage (Maybe Text)

-- | Data about the stored events.
--   
--   <i>See:</i> <a>newIngestedEventStatistics</a> smart constructor.
data IngestedEventStatistics
IngestedEventStatistics' :: Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> IngestedEventStatistics

-- | The total size of the stored events.
[$sel:eventDataSizeInBytes:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Integer

-- | The newest stored event.
[$sel:mostRecentEvent:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Text

-- | Timestamp of when the stored event was last updated.
[$sel:lastUpdatedTime:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Text

-- | The number of stored events.
[$sel:numberOfEvents:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Integer

-- | The oldest stored event.
[$sel:leastRecentEvent:IngestedEventStatistics'] :: IngestedEventStatistics -> Maybe Text

-- | Create a value of <a>IngestedEventStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventDataSizeInBytes:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_eventDataSizeInBytes</a> - The total size
--   of the stored events.
--   
--   <a>$sel:mostRecentEvent:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_mostRecentEvent</a> - The newest stored
--   event.
--   
--   <a>$sel:lastUpdatedTime:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_lastUpdatedTime</a> - Timestamp of when the
--   stored event was last updated.
--   
--   <a>$sel:numberOfEvents:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_numberOfEvents</a> - The number of stored
--   events.
--   
--   <a>$sel:leastRecentEvent:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_leastRecentEvent</a> - The oldest stored
--   event.
newIngestedEventStatistics :: IngestedEventStatistics

-- | The total size of the stored events.
ingestedEventStatistics_eventDataSizeInBytes :: Lens' IngestedEventStatistics (Maybe Integer)

-- | The newest stored event.
ingestedEventStatistics_mostRecentEvent :: Lens' IngestedEventStatistics (Maybe Text)

-- | Timestamp of when the stored event was last updated.
ingestedEventStatistics_lastUpdatedTime :: Lens' IngestedEventStatistics (Maybe Text)

-- | The number of stored events.
ingestedEventStatistics_numberOfEvents :: Lens' IngestedEventStatistics (Maybe Integer)

-- | The oldest stored event.
ingestedEventStatistics_leastRecentEvent :: Lens' IngestedEventStatistics (Maybe Text)

-- | The details of the ingested event.
--   
--   <i>See:</i> <a>newIngestedEventsDetail</a> smart constructor.
data IngestedEventsDetail
IngestedEventsDetail' :: IngestedEventsTimeWindow -> IngestedEventsDetail

-- | The start and stop time of the ingested events.
[$sel:ingestedEventsTimeWindow:IngestedEventsDetail'] :: IngestedEventsDetail -> IngestedEventsTimeWindow

-- | Create a value of <a>IngestedEventsDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestedEventsTimeWindow:IngestedEventsDetail'</a>,
--   <a>ingestedEventsDetail_ingestedEventsTimeWindow</a> - The start and
--   stop time of the ingested events.
newIngestedEventsDetail :: IngestedEventsTimeWindow -> IngestedEventsDetail

-- | The start and stop time of the ingested events.
ingestedEventsDetail_ingestedEventsTimeWindow :: Lens' IngestedEventsDetail IngestedEventsTimeWindow

-- | The start and stop time of the ingested events.
--   
--   <i>See:</i> <a>newIngestedEventsTimeWindow</a> smart constructor.
data IngestedEventsTimeWindow
IngestedEventsTimeWindow' :: Text -> Text -> IngestedEventsTimeWindow

-- | Timestamp of the first ingensted event.
[$sel:startTime:IngestedEventsTimeWindow'] :: IngestedEventsTimeWindow -> Text

-- | Timestamp of the final ingested event.
[$sel:endTime:IngestedEventsTimeWindow'] :: IngestedEventsTimeWindow -> Text

-- | Create a value of <a>IngestedEventsTimeWindow</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:IngestedEventsTimeWindow'</a>,
--   <a>ingestedEventsTimeWindow_startTime</a> - Timestamp of the first
--   ingensted event.
--   
--   <a>$sel:endTime:IngestedEventsTimeWindow'</a>,
--   <a>ingestedEventsTimeWindow_endTime</a> - Timestamp of the final
--   ingested event.
newIngestedEventsTimeWindow :: Text -> Text -> IngestedEventsTimeWindow

-- | Timestamp of the first ingensted event.
ingestedEventsTimeWindow_startTime :: Lens' IngestedEventsTimeWindow Text

-- | Timestamp of the final ingested event.
ingestedEventsTimeWindow_endTime :: Lens' IngestedEventsTimeWindow Text

-- | The KMS key details.
--   
--   <i>See:</i> <a>newKMSKey</a> smart constructor.
data KMSKey
KMSKey' :: Maybe Text -> KMSKey

-- | The encryption key ARN.
[$sel:kmsEncryptionKeyArn:KMSKey'] :: KMSKey -> Maybe Text

-- | Create a value of <a>KMSKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionKeyArn:KMSKey'</a>,
--   <a>kmsKey_kmsEncryptionKeyArn</a> - The encryption key ARN.
newKMSKey :: KMSKey

-- | The encryption key ARN.
kmsKey_kmsEncryptionKeyArn :: Lens' KMSKey (Maybe Text)

-- | The label details.
--   
--   <i>See:</i> <a>newLabel</a> smart constructor.
data Label
Label' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Label

-- | Timestamp of when the label was last updated.
[$sel:lastUpdatedTime:Label'] :: Label -> Maybe Text

-- | The label ARN.
[$sel:arn:Label'] :: Label -> Maybe Text

-- | Timestamp of when the event type was created.
[$sel:createdTime:Label'] :: Label -> Maybe Text

-- | The label name.
[$sel:name:Label'] :: Label -> Maybe Text

-- | The label description.
[$sel:description:Label'] :: Label -> Maybe Text

-- | Create a value of <a>Label</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Label'</a>, <a>label_lastUpdatedTime</a> -
--   Timestamp of when the label was last updated.
--   
--   <a>$sel:arn:Label'</a>, <a>label_arn</a> - The label ARN.
--   
--   <a>$sel:createdTime:Label'</a>, <a>label_createdTime</a> - Timestamp
--   of when the event type was created.
--   
--   <a>$sel:name:Label'</a>, <a>label_name</a> - The label name.
--   
--   <a>$sel:description:Label'</a>, <a>label_description</a> - The label
--   description.
newLabel :: Label

-- | Timestamp of when the label was last updated.
label_lastUpdatedTime :: Lens' Label (Maybe Text)

-- | The label ARN.
label_arn :: Lens' Label (Maybe Text)

-- | Timestamp of when the event type was created.
label_createdTime :: Lens' Label (Maybe Text)

-- | The label name.
label_name :: Lens' Label (Maybe Text)

-- | The label description.
label_description :: Lens' Label (Maybe Text)

-- | The label schema.
--   
--   <i>See:</i> <a>newLabelSchema</a> smart constructor.
data LabelSchema
LabelSchema' :: Maybe UnlabeledEventsTreatment -> HashMap Text (NonEmpty Text) -> LabelSchema

-- | The action to take for unlabeled events.
[$sel:unlabeledEventsTreatment:LabelSchema'] :: LabelSchema -> Maybe UnlabeledEventsTreatment

-- | The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
[$sel:labelMapper:LabelSchema'] :: LabelSchema -> HashMap Text (NonEmpty Text)

-- | Create a value of <a>LabelSchema</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlabeledEventsTreatment:LabelSchema'</a>,
--   <a>labelSchema_unlabeledEventsTreatment</a> - The action to take for
--   unlabeled events.
--   
--   <a>$sel:labelMapper:LabelSchema'</a>, <a>labelSchema_labelMapper</a> -
--   The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
newLabelSchema :: LabelSchema

-- | The action to take for unlabeled events.
labelSchema_unlabeledEventsTreatment :: Lens' LabelSchema (Maybe UnlabeledEventsTreatment)

-- | The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
labelSchema_labelMapper :: Lens' LabelSchema (HashMap Text (NonEmpty Text))

-- | The log odds metric details.
--   
--   <i>See:</i> <a>newLogOddsMetric</a> smart constructor.
data LogOddsMetric
LogOddsMetric' :: Text -> Text -> Double -> LogOddsMetric

-- | The name of the variable.
[$sel:variableName:LogOddsMetric'] :: LogOddsMetric -> Text

-- | The type of variable.
[$sel:variableType:LogOddsMetric'] :: LogOddsMetric -> Text

-- | The relative importance of the variable. For more information, see
--   <a>Model variable importance</a>.
[$sel:variableImportance:LogOddsMetric'] :: LogOddsMetric -> Double

-- | Create a value of <a>LogOddsMetric</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableName:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableName</a> - The name of the variable.
--   
--   <a>$sel:variableType:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableType</a> - The type of variable.
--   
--   <a>$sel:variableImportance:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableImportance</a> - The relative importance of
--   the variable. For more information, see <a>Model variable
--   importance</a>.
newLogOddsMetric :: Text -> Text -> Double -> LogOddsMetric

-- | The name of the variable.
logOddsMetric_variableName :: Lens' LogOddsMetric Text

-- | The type of variable.
logOddsMetric_variableType :: Lens' LogOddsMetric Text

-- | The relative importance of the variable. For more information, see
--   <a>Model variable importance</a>.
logOddsMetric_variableImportance :: Lens' LogOddsMetric Double

-- | Model performance metrics data points.
--   
--   <i>See:</i> <a>newMetricDataPoint</a> smart constructor.
data MetricDataPoint
MetricDataPoint' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> MetricDataPoint

-- | The percentage of fraud events correctly predicted as fraudulent as
--   compared to all events predicted as fraudulent.
[$sel:precision:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | The false positive rate. This is the percentage of total legitimate
--   events that are incorrectly predicted as fraud.
[$sel:fpr:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | The model threshold that specifies an acceptable fraud capture rate.
--   For example, a threshold of 500 means any model score 500 or above is
--   labeled as fraud.
[$sel:threshold:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | The true positive rate. This is the percentage of total fraud the
--   model detects. Also known as capture rate.
[$sel:tpr:MetricDataPoint'] :: MetricDataPoint -> Maybe Double

-- | Create a value of <a>MetricDataPoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:precision:MetricDataPoint'</a>,
--   <a>metricDataPoint_precision</a> - The percentage of fraud events
--   correctly predicted as fraudulent as compared to all events predicted
--   as fraudulent.
--   
--   <a>$sel:fpr:MetricDataPoint'</a>, <a>metricDataPoint_fpr</a> - The
--   false positive rate. This is the percentage of total legitimate events
--   that are incorrectly predicted as fraud.
--   
--   <a>$sel:threshold:MetricDataPoint'</a>,
--   <a>metricDataPoint_threshold</a> - The model threshold that specifies
--   an acceptable fraud capture rate. For example, a threshold of 500
--   means any model score 500 or above is labeled as fraud.
--   
--   <a>$sel:tpr:MetricDataPoint'</a>, <a>metricDataPoint_tpr</a> - The
--   true positive rate. This is the percentage of total fraud the model
--   detects. Also known as capture rate.
newMetricDataPoint :: MetricDataPoint

-- | The percentage of fraud events correctly predicted as fraudulent as
--   compared to all events predicted as fraudulent.
metricDataPoint_precision :: Lens' MetricDataPoint (Maybe Double)

-- | The false positive rate. This is the percentage of total legitimate
--   events that are incorrectly predicted as fraud.
metricDataPoint_fpr :: Lens' MetricDataPoint (Maybe Double)

-- | The model threshold that specifies an acceptable fraud capture rate.
--   For example, a threshold of 500 means any model score 500 or above is
--   labeled as fraud.
metricDataPoint_threshold :: Lens' MetricDataPoint (Maybe Double)

-- | The true positive rate. This is the percentage of total fraud the
--   model detects. Also known as capture rate.
metricDataPoint_tpr :: Lens' MetricDataPoint (Maybe Double)

-- | The model.
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | The model type.
[$sel:modelType:Model'] :: Model -> Maybe ModelTypeEnum

-- | Timestamp of last time the model was updated.
[$sel:lastUpdatedTime:Model'] :: Model -> Maybe Text

-- | The model ID.
[$sel:modelId:Model'] :: Model -> Maybe Text

-- | The ARN of the model.
[$sel:arn:Model'] :: Model -> Maybe Text

-- | Timestamp of when the model was created.
[$sel:createdTime:Model'] :: Model -> Maybe Text

-- | The name of the event type.
[$sel:eventTypeName:Model'] :: Model -> Maybe Text

-- | The model description.
[$sel:description:Model'] :: Model -> Maybe Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelType:Model'</a>, <a>model_modelType</a> - The model type.
--   
--   <a>$sel:lastUpdatedTime:Model'</a>, <a>model_lastUpdatedTime</a> -
--   Timestamp of last time the model was updated.
--   
--   <a>$sel:modelId:Model'</a>, <a>model_modelId</a> - The model ID.
--   
--   <a>$sel:arn:Model'</a>, <a>model_arn</a> - The ARN of the model.
--   
--   <a>$sel:createdTime:Model'</a>, <a>model_createdTime</a> - Timestamp
--   of when the model was created.
--   
--   <a>$sel:eventTypeName:Model'</a>, <a>model_eventTypeName</a> - The
--   name of the event type.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The model
--   description.
newModel :: Model

-- | The model type.
model_modelType :: Lens' Model (Maybe ModelTypeEnum)

-- | Timestamp of last time the model was updated.
model_lastUpdatedTime :: Lens' Model (Maybe Text)

-- | The model ID.
model_modelId :: Lens' Model (Maybe Text)

-- | The ARN of the model.
model_arn :: Lens' Model (Maybe Text)

-- | Timestamp of when the model was created.
model_createdTime :: Lens' Model (Maybe Text)

-- | The name of the event type.
model_eventTypeName :: Lens' Model (Maybe Text)

-- | The model description.
model_description :: Lens' Model (Maybe Text)

-- | A pre-formed Amazon SageMaker model input you can include if your
--   detector version includes an imported Amazon SageMaker model endpoint
--   with pass-through input configuration.
--   
--   <i>See:</i> <a>newModelEndpointDataBlob</a> smart constructor.
data ModelEndpointDataBlob
ModelEndpointDataBlob' :: Maybe Base64 -> Maybe Text -> ModelEndpointDataBlob

-- | The byte buffer of the Amazon SageMaker model endpoint input data
--   blob.
[$sel:byteBuffer:ModelEndpointDataBlob'] :: ModelEndpointDataBlob -> Maybe Base64

-- | The content type of the Amazon SageMaker model endpoint input data
--   blob.
[$sel:contentType:ModelEndpointDataBlob'] :: ModelEndpointDataBlob -> Maybe Text

-- | Create a value of <a>ModelEndpointDataBlob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:byteBuffer:ModelEndpointDataBlob'</a>,
--   <a>modelEndpointDataBlob_byteBuffer</a> - The byte buffer of the
--   Amazon SageMaker model endpoint input data blob.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:contentType:ModelEndpointDataBlob'</a>,
--   <a>modelEndpointDataBlob_contentType</a> - The content type of the
--   Amazon SageMaker model endpoint input data blob.
newModelEndpointDataBlob :: ModelEndpointDataBlob

-- | The byte buffer of the Amazon SageMaker model endpoint input data
--   blob.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and
--   decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
modelEndpointDataBlob_byteBuffer :: Lens' ModelEndpointDataBlob (Maybe ByteString)

-- | The content type of the Amazon SageMaker model endpoint input data
--   blob.
modelEndpointDataBlob_contentType :: Lens' ModelEndpointDataBlob (Maybe Text)

-- | The Amazon SageMaker model input configuration.
--   
--   <i>See:</i> <a>newModelInputConfiguration</a> smart constructor.
data ModelInputConfiguration
ModelInputConfiguration' :: Maybe ModelInputDataFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Bool -> ModelInputConfiguration

-- | The format of the model input configuration. The format differs
--   depending on if it is passed through to SageMaker or constructed by
--   Amazon Fraud Detector.
[$sel:format:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe ModelInputDataFormat

-- | The event type name.
[$sel:eventTypeName:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe Text

-- | Template for constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
[$sel:csvInputTemplate:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe Text

-- | Template for constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
[$sel:jsonInputTemplate:ModelInputConfiguration'] :: ModelInputConfiguration -> Maybe Text

-- | The event variables.
[$sel:useEventVariables:ModelInputConfiguration'] :: ModelInputConfiguration -> Bool

-- | Create a value of <a>ModelInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_format</a> - The format of the model input
--   configuration. The format differs depending on if it is passed through
--   to SageMaker or constructed by Amazon Fraud Detector.
--   
--   <a>$sel:eventTypeName:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_eventTypeName</a> - The event type name.
--   
--   <a>$sel:csvInputTemplate:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_csvInputTemplate</a> - Template for
--   constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
--   
--   <a>$sel:jsonInputTemplate:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_jsonInputTemplate</a> - Template for
--   constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
--   
--   <a>$sel:useEventVariables:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_useEventVariables</a> - The event
--   variables.
newModelInputConfiguration :: Bool -> ModelInputConfiguration

-- | The format of the model input configuration. The format differs
--   depending on if it is passed through to SageMaker or constructed by
--   Amazon Fraud Detector.
modelInputConfiguration_format :: Lens' ModelInputConfiguration (Maybe ModelInputDataFormat)

-- | The event type name.
modelInputConfiguration_eventTypeName :: Lens' ModelInputConfiguration (Maybe Text)

-- | Template for constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
modelInputConfiguration_csvInputTemplate :: Lens' ModelInputConfiguration (Maybe Text)

-- | Template for constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
modelInputConfiguration_jsonInputTemplate :: Lens' ModelInputConfiguration (Maybe Text)

-- | The event variables.
modelInputConfiguration_useEventVariables :: Lens' ModelInputConfiguration Bool

-- | Provides the Amazon Sagemaker model output configuration.
--   
--   <i>See:</i> <a>newModelOutputConfiguration</a> smart constructor.
data ModelOutputConfiguration
ModelOutputConfiguration' :: Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> ModelOutputDataFormat -> ModelOutputConfiguration

-- | A map of JSON keys in response from SageMaker to the Amazon Fraud
--   Detector variables.
[$sel:jsonKeyToVariableMap:ModelOutputConfiguration'] :: ModelOutputConfiguration -> Maybe (HashMap Text Text)

-- | A map of CSV index values in the SageMaker response to the Amazon
--   Fraud Detector variables.
[$sel:csvIndexToVariableMap:ModelOutputConfiguration'] :: ModelOutputConfiguration -> Maybe (HashMap Text Text)

-- | The format of the model output configuration.
[$sel:format:ModelOutputConfiguration'] :: ModelOutputConfiguration -> ModelOutputDataFormat

-- | Create a value of <a>ModelOutputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonKeyToVariableMap:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_jsonKeyToVariableMap</a> - A map of JSON
--   keys in response from SageMaker to the Amazon Fraud Detector
--   variables.
--   
--   <a>$sel:csvIndexToVariableMap:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_csvIndexToVariableMap</a> - A map of CSV
--   index values in the SageMaker response to the Amazon Fraud Detector
--   variables.
--   
--   <a>$sel:format:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_format</a> - The format of the model
--   output configuration.
newModelOutputConfiguration :: ModelOutputDataFormat -> ModelOutputConfiguration

-- | A map of JSON keys in response from SageMaker to the Amazon Fraud
--   Detector variables.
modelOutputConfiguration_jsonKeyToVariableMap :: Lens' ModelOutputConfiguration (Maybe (HashMap Text Text))

-- | A map of CSV index values in the SageMaker response to the Amazon
--   Fraud Detector variables.
modelOutputConfiguration_csvIndexToVariableMap :: Lens' ModelOutputConfiguration (Maybe (HashMap Text Text))

-- | The format of the model output configuration.
modelOutputConfiguration_format :: Lens' ModelOutputConfiguration ModelOutputDataFormat

-- | The fraud prediction scores.
--   
--   <i>See:</i> <a>newModelScores</a> smart constructor.
data ModelScores
ModelScores' :: Maybe ModelVersion -> Maybe (HashMap Text Double) -> ModelScores

-- | The model version.
[$sel:modelVersion:ModelScores'] :: ModelScores -> Maybe ModelVersion

-- | The model's fraud prediction scores.
[$sel:scores:ModelScores'] :: ModelScores -> Maybe (HashMap Text Double)

-- | Create a value of <a>ModelScores</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelVersion:ModelScores'</a>, <a>modelScores_modelVersion</a>
--   - The model version.
--   
--   <a>$sel:scores:ModelScores'</a>, <a>modelScores_scores</a> - The
--   model's fraud prediction scores.
newModelScores :: ModelScores

-- | The model version.
modelScores_modelVersion :: Lens' ModelScores (Maybe ModelVersion)

-- | The model's fraud prediction scores.
modelScores_scores :: Lens' ModelScores (Maybe (HashMap Text Double))

-- | The model version.
--   
--   <i>See:</i> <a>newModelVersion</a> smart constructor.
data ModelVersion
ModelVersion' :: Maybe Text -> Text -> ModelTypeEnum -> Text -> ModelVersion

-- | The model version ARN.
[$sel:arn:ModelVersion'] :: ModelVersion -> Maybe Text

-- | The model ID.
[$sel:modelId:ModelVersion'] :: ModelVersion -> Text

-- | The model type.
[$sel:modelType:ModelVersion'] :: ModelVersion -> ModelTypeEnum

-- | The model version number.
[$sel:modelVersionNumber:ModelVersion'] :: ModelVersion -> Text

-- | Create a value of <a>ModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ModelVersion'</a>, <a>modelVersion_arn</a> - The model
--   version ARN.
--   
--   <a>$sel:modelId:ModelVersion'</a>, <a>modelVersion_modelId</a> - The
--   model ID.
--   
--   <a>$sel:modelType:ModelVersion'</a>, <a>modelVersion_modelType</a> -
--   The model type.
--   
--   <a>$sel:modelVersionNumber:ModelVersion'</a>,
--   <a>modelVersion_modelVersionNumber</a> - The model version number.
newModelVersion :: Text -> ModelTypeEnum -> Text -> ModelVersion

-- | The model version ARN.
modelVersion_arn :: Lens' ModelVersion (Maybe Text)

-- | The model ID.
modelVersion_modelId :: Lens' ModelVersion Text

-- | The model type.
modelVersion_modelType :: Lens' ModelVersion ModelTypeEnum

-- | The model version number.
modelVersion_modelVersionNumber :: Lens' ModelVersion Text

-- | The details of the model version.
--   
--   <i>See:</i> <a>newModelVersionDetail</a> smart constructor.
data ModelVersionDetail
ModelVersionDetail' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TrainingDataSourceEnum -> Maybe Text -> Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe Text -> Maybe TrainingResult -> Maybe TrainingDataSchema -> ModelVersionDetail

-- | The status of the model version.
[$sel:status:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model type.
[$sel:modelType:ModelVersionDetail'] :: ModelVersionDetail -> Maybe ModelTypeEnum

-- | The timestamp when the model was last updated.
[$sel:lastUpdatedTime:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model ID.
[$sel:modelId:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model version ARN.
[$sel:arn:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The model version training data source.
[$sel:trainingDataSource:ModelVersionDetail'] :: ModelVersionDetail -> Maybe TrainingDataSourceEnum

-- | The timestamp when the model was created.
[$sel:createdTime:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The external events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
[$sel:externalEventsDetail:ModelVersionDetail'] :: ModelVersionDetail -> Maybe ExternalEventsDetail

-- | The ingested events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
[$sel:ingestedEventsDetail:ModelVersionDetail'] :: ModelVersionDetail -> Maybe IngestedEventsDetail

-- | The model version number.
[$sel:modelVersionNumber:ModelVersionDetail'] :: ModelVersionDetail -> Maybe Text

-- | The training results.
[$sel:trainingResult:ModelVersionDetail'] :: ModelVersionDetail -> Maybe TrainingResult

-- | The training data schema.
[$sel:trainingDataSchema:ModelVersionDetail'] :: ModelVersionDetail -> Maybe TrainingDataSchema

-- | Create a value of <a>ModelVersionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_status</a> - The status of the model version.
--   
--   <a>$sel:modelType:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelType</a> - The model type.
--   
--   <a>$sel:lastUpdatedTime:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_lastUpdatedTime</a> - The timestamp when the
--   model was last updated.
--   
--   <a>$sel:modelId:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelId</a> - The model ID.
--   
--   <a>$sel:arn:ModelVersionDetail'</a>, <a>modelVersionDetail_arn</a> -
--   The model version ARN.
--   
--   <a>$sel:trainingDataSource:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingDataSource</a> - The model version
--   training data source.
--   
--   <a>$sel:createdTime:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_createdTime</a> - The timestamp when the model
--   was created.
--   
--   <a>$sel:externalEventsDetail:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_externalEventsDetail</a> - The external events
--   data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
--   
--   <a>$sel:ingestedEventsDetail:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_ingestedEventsDetail</a> - The ingested events
--   data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:modelVersionNumber:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:trainingResult:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingResult</a> - The training results.
--   
--   <a>$sel:trainingDataSchema:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingDataSchema</a> - The training data
--   schema.
newModelVersionDetail :: ModelVersionDetail

-- | The status of the model version.
modelVersionDetail_status :: Lens' ModelVersionDetail (Maybe Text)

-- | The model type.
modelVersionDetail_modelType :: Lens' ModelVersionDetail (Maybe ModelTypeEnum)

-- | The timestamp when the model was last updated.
modelVersionDetail_lastUpdatedTime :: Lens' ModelVersionDetail (Maybe Text)

-- | The model ID.
modelVersionDetail_modelId :: Lens' ModelVersionDetail (Maybe Text)

-- | The model version ARN.
modelVersionDetail_arn :: Lens' ModelVersionDetail (Maybe Text)

-- | The model version training data source.
modelVersionDetail_trainingDataSource :: Lens' ModelVersionDetail (Maybe TrainingDataSourceEnum)

-- | The timestamp when the model was created.
modelVersionDetail_createdTime :: Lens' ModelVersionDetail (Maybe Text)

-- | The external events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
modelVersionDetail_externalEventsDetail :: Lens' ModelVersionDetail (Maybe ExternalEventsDetail)

-- | The ingested events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
modelVersionDetail_ingestedEventsDetail :: Lens' ModelVersionDetail (Maybe IngestedEventsDetail)

-- | The model version number.
modelVersionDetail_modelVersionNumber :: Lens' ModelVersionDetail (Maybe Text)

-- | The training results.
modelVersionDetail_trainingResult :: Lens' ModelVersionDetail (Maybe TrainingResult)

-- | The training data schema.
modelVersionDetail_trainingDataSchema :: Lens' ModelVersionDetail (Maybe TrainingDataSchema)

-- | The outcome.
--   
--   <i>See:</i> <a>newOutcome</a> smart constructor.
data Outcome
Outcome' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Outcome

-- | The timestamp when the outcome was last updated.
[$sel:lastUpdatedTime:Outcome'] :: Outcome -> Maybe Text

-- | The outcome ARN.
[$sel:arn:Outcome'] :: Outcome -> Maybe Text

-- | The timestamp when the outcome was created.
[$sel:createdTime:Outcome'] :: Outcome -> Maybe Text

-- | The outcome name.
[$sel:name:Outcome'] :: Outcome -> Maybe Text

-- | The outcome description.
[$sel:description:Outcome'] :: Outcome -> Maybe Text

-- | Create a value of <a>Outcome</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Outcome'</a>, <a>outcome_lastUpdatedTime</a> -
--   The timestamp when the outcome was last updated.
--   
--   <a>$sel:arn:Outcome'</a>, <a>outcome_arn</a> - The outcome ARN.
--   
--   <a>$sel:createdTime:Outcome'</a>, <a>outcome_createdTime</a> - The
--   timestamp when the outcome was created.
--   
--   <a>$sel:name:Outcome'</a>, <a>outcome_name</a> - The outcome name.
--   
--   <a>$sel:description:Outcome'</a>, <a>outcome_description</a> - The
--   outcome description.
newOutcome :: Outcome

-- | The timestamp when the outcome was last updated.
outcome_lastUpdatedTime :: Lens' Outcome (Maybe Text)

-- | The outcome ARN.
outcome_arn :: Lens' Outcome (Maybe Text)

-- | The timestamp when the outcome was created.
outcome_createdTime :: Lens' Outcome (Maybe Text)

-- | The outcome name.
outcome_name :: Lens' Outcome (Maybe Text)

-- | The outcome description.
outcome_description :: Lens' Outcome (Maybe Text)

-- | A rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Text -> Text -> Text -> Rule

-- | The detector for which the rule is associated.
[$sel:detectorId:Rule'] :: Rule -> Text

-- | The rule ID.
[$sel:ruleId:Rule'] :: Rule -> Text

-- | The rule version.
[$sel:ruleVersion:Rule'] :: Rule -> Text

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:Rule'</a>, <a>rule_detectorId</a> - The detector
--   for which the rule is associated.
--   
--   <a>$sel:ruleId:Rule'</a>, <a>rule_ruleId</a> - The rule ID.
--   
--   <a>$sel:ruleVersion:Rule'</a>, <a>rule_ruleVersion</a> - The rule
--   version.
newRule :: Text -> Text -> Text -> Rule

-- | The detector for which the rule is associated.
rule_detectorId :: Lens' Rule Text

-- | The rule ID.
rule_ruleId :: Lens' Rule Text

-- | The rule version.
rule_ruleVersion :: Lens' Rule Text

-- | The details of the rule.
--   
--   <i>See:</i> <a>newRuleDetail</a> smart constructor.
data RuleDetail
RuleDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Language -> Maybe Text -> RuleDetail

-- | The rule version.
[$sel:ruleVersion:RuleDetail'] :: RuleDetail -> Maybe Text

-- | Timestamp of the last time the rule was updated.
[$sel:lastUpdatedTime:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule ARN.
[$sel:arn:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The timestamp of when the rule was created.
[$sel:createdTime:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule ID.
[$sel:ruleId:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule outcomes.
[$sel:outcomes:RuleDetail'] :: RuleDetail -> Maybe (NonEmpty Text)

-- | The detector for which the rule is associated.
[$sel:detectorId:RuleDetail'] :: RuleDetail -> Maybe Text

-- | The rule expression.
[$sel:expression:RuleDetail'] :: RuleDetail -> Maybe (Sensitive Text)

-- | The rule language.
[$sel:language:RuleDetail'] :: RuleDetail -> Maybe Language

-- | The rule description.
[$sel:description:RuleDetail'] :: RuleDetail -> Maybe Text

-- | Create a value of <a>RuleDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleVersion:RuleDetail'</a>, <a>ruleDetail_ruleVersion</a> -
--   The rule version.
--   
--   <a>$sel:lastUpdatedTime:RuleDetail'</a>,
--   <a>ruleDetail_lastUpdatedTime</a> - Timestamp of the last time the
--   rule was updated.
--   
--   <a>$sel:arn:RuleDetail'</a>, <a>ruleDetail_arn</a> - The rule ARN.
--   
--   <a>$sel:createdTime:RuleDetail'</a>, <a>ruleDetail_createdTime</a> -
--   The timestamp of when the rule was created.
--   
--   <a>$sel:ruleId:RuleDetail'</a>, <a>ruleDetail_ruleId</a> - The rule
--   ID.
--   
--   <a>$sel:outcomes:RuleDetail'</a>, <a>ruleDetail_outcomes</a> - The
--   rule outcomes.
--   
--   <a>$sel:detectorId:RuleDetail'</a>, <a>ruleDetail_detectorId</a> - The
--   detector for which the rule is associated.
--   
--   <a>$sel:expression:RuleDetail'</a>, <a>ruleDetail_expression</a> - The
--   rule expression.
--   
--   <a>$sel:language:RuleDetail'</a>, <a>ruleDetail_language</a> - The
--   rule language.
--   
--   <a>$sel:description:RuleDetail'</a>, <a>ruleDetail_description</a> -
--   The rule description.
newRuleDetail :: RuleDetail

-- | The rule version.
ruleDetail_ruleVersion :: Lens' RuleDetail (Maybe Text)

-- | Timestamp of the last time the rule was updated.
ruleDetail_lastUpdatedTime :: Lens' RuleDetail (Maybe Text)

-- | The rule ARN.
ruleDetail_arn :: Lens' RuleDetail (Maybe Text)

-- | The timestamp of when the rule was created.
ruleDetail_createdTime :: Lens' RuleDetail (Maybe Text)

-- | The rule ID.
ruleDetail_ruleId :: Lens' RuleDetail (Maybe Text)

-- | The rule outcomes.
ruleDetail_outcomes :: Lens' RuleDetail (Maybe (NonEmpty Text))

-- | The detector for which the rule is associated.
ruleDetail_detectorId :: Lens' RuleDetail (Maybe Text)

-- | The rule expression.
ruleDetail_expression :: Lens' RuleDetail (Maybe Text)

-- | The rule language.
ruleDetail_language :: Lens' RuleDetail (Maybe Language)

-- | The rule description.
ruleDetail_description :: Lens' RuleDetail (Maybe Text)

-- | The rule results.
--   
--   <i>See:</i> <a>newRuleResult</a> smart constructor.
data RuleResult
RuleResult' :: Maybe Text -> Maybe [Text] -> RuleResult

-- | The rule ID that was matched, based on the rule execution mode.
[$sel:ruleId:RuleResult'] :: RuleResult -> Maybe Text

-- | The outcomes of the matched rule, based on the rule execution mode.
[$sel:outcomes:RuleResult'] :: RuleResult -> Maybe [Text]

-- | Create a value of <a>RuleResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleId:RuleResult'</a>, <a>ruleResult_ruleId</a> - The rule ID
--   that was matched, based on the rule execution mode.
--   
--   <a>$sel:outcomes:RuleResult'</a>, <a>ruleResult_outcomes</a> - The
--   outcomes of the matched rule, based on the rule execution mode.
newRuleResult :: RuleResult

-- | The rule ID that was matched, based on the rule execution mode.
ruleResult_ruleId :: Lens' RuleResult (Maybe Text)

-- | The outcomes of the matched rule, based on the rule execution mode.
ruleResult_outcomes :: Lens' RuleResult (Maybe [Text])

-- | A key and value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | A value assigned to a tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - A value assigned to a tag
--   key.
newTag :: Text -> Text -> Tag

-- | A tag key.
tag_key :: Lens' Tag Text

-- | A value assigned to a tag key.
tag_value :: Lens' Tag Text

-- | The training data schema.
--   
--   <i>See:</i> <a>newTrainingDataSchema</a> smart constructor.
data TrainingDataSchema
TrainingDataSchema' :: [Text] -> LabelSchema -> TrainingDataSchema

-- | The training data schema variables.
[$sel:modelVariables:TrainingDataSchema'] :: TrainingDataSchema -> [Text]
[$sel:labelSchema:TrainingDataSchema'] :: TrainingDataSchema -> LabelSchema

-- | Create a value of <a>TrainingDataSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelVariables:TrainingDataSchema'</a>,
--   <a>trainingDataSchema_modelVariables</a> - The training data schema
--   variables.
--   
--   <a>$sel:labelSchema:TrainingDataSchema'</a>,
--   <a>trainingDataSchema_labelSchema</a> - Undocumented member.
newTrainingDataSchema :: LabelSchema -> TrainingDataSchema

-- | The training data schema variables.
trainingDataSchema_modelVariables :: Lens' TrainingDataSchema [Text]

-- | Undocumented member.
trainingDataSchema_labelSchema :: Lens' TrainingDataSchema LabelSchema

-- | The training metric details.
--   
--   <i>See:</i> <a>newTrainingMetrics</a> smart constructor.
data TrainingMetrics
TrainingMetrics' :: Maybe Double -> Maybe [MetricDataPoint] -> TrainingMetrics

-- | The area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
[$sel:auc:TrainingMetrics'] :: TrainingMetrics -> Maybe Double

-- | The data points details.
[$sel:metricDataPoints:TrainingMetrics'] :: TrainingMetrics -> Maybe [MetricDataPoint]

-- | Create a value of <a>TrainingMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:auc:TrainingMetrics'</a>, <a>trainingMetrics_auc</a> - The
--   area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
--   
--   <a>$sel:metricDataPoints:TrainingMetrics'</a>,
--   <a>trainingMetrics_metricDataPoints</a> - The data points details.
newTrainingMetrics :: TrainingMetrics

-- | The area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
trainingMetrics_auc :: Lens' TrainingMetrics (Maybe Double)

-- | The data points details.
trainingMetrics_metricDataPoints :: Lens' TrainingMetrics (Maybe [MetricDataPoint])

-- | The training result details.
--   
--   <i>See:</i> <a>newTrainingResult</a> smart constructor.
data TrainingResult
TrainingResult' :: Maybe DataValidationMetrics -> Maybe TrainingMetrics -> Maybe VariableImportanceMetrics -> TrainingResult

-- | The validation metrics.
[$sel:dataValidationMetrics:TrainingResult'] :: TrainingResult -> Maybe DataValidationMetrics

-- | The training metric details.
[$sel:trainingMetrics:TrainingResult'] :: TrainingResult -> Maybe TrainingMetrics

-- | The variable importance metrics.
[$sel:variableImportanceMetrics:TrainingResult'] :: TrainingResult -> Maybe VariableImportanceMetrics

-- | Create a value of <a>TrainingResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataValidationMetrics:TrainingResult'</a>,
--   <a>trainingResult_dataValidationMetrics</a> - The validation metrics.
--   
--   <a>$sel:trainingMetrics:TrainingResult'</a>,
--   <a>trainingResult_trainingMetrics</a> - The training metric details.
--   
--   <a>$sel:variableImportanceMetrics:TrainingResult'</a>,
--   <a>trainingResult_variableImportanceMetrics</a> - The variable
--   importance metrics.
newTrainingResult :: TrainingResult

-- | The validation metrics.
trainingResult_dataValidationMetrics :: Lens' TrainingResult (Maybe DataValidationMetrics)

-- | The training metric details.
trainingResult_trainingMetrics :: Lens' TrainingResult (Maybe TrainingMetrics)

-- | The variable importance metrics.
trainingResult_variableImportanceMetrics :: Lens' TrainingResult (Maybe VariableImportanceMetrics)

-- | The variable.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DataSource -> Maybe DataType -> Maybe Text -> Maybe Text -> Maybe Text -> Variable

-- | The time when variable was last updated.
[$sel:lastUpdatedTime:Variable'] :: Variable -> Maybe Text

-- | The ARN of the variable.
[$sel:arn:Variable'] :: Variable -> Maybe Text

-- | The time when the variable was created.
[$sel:createdTime:Variable'] :: Variable -> Maybe Text

-- | The name of the variable.
[$sel:name:Variable'] :: Variable -> Maybe Text

-- | The data source of the variable.
[$sel:dataSource:Variable'] :: Variable -> Maybe DataSource

-- | The data type of the variable. For more information see <a>Variable
--   types</a>.
[$sel:dataType:Variable'] :: Variable -> Maybe DataType

-- | The default value of the variable.
[$sel:defaultValue:Variable'] :: Variable -> Maybe Text

-- | The variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
[$sel:variableType:Variable'] :: Variable -> Maybe Text

-- | The description of the variable.
[$sel:description:Variable'] :: Variable -> Maybe Text

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Variable'</a>, <a>variable_lastUpdatedTime</a>
--   - The time when variable was last updated.
--   
--   <a>$sel:arn:Variable'</a>, <a>variable_arn</a> - The ARN of the
--   variable.
--   
--   <a>$sel:createdTime:Variable'</a>, <a>variable_createdTime</a> - The
--   time when the variable was created.
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
--   
--   <a>$sel:dataSource:Variable'</a>, <a>variable_dataSource</a> - The
--   data source of the variable.
--   
--   <a>$sel:dataType:Variable'</a>, <a>variable_dataType</a> - The data
--   type of the variable. For more information see <a>Variable types</a>.
--   
--   <a>$sel:defaultValue:Variable'</a>, <a>variable_defaultValue</a> - The
--   default value of the variable.
--   
--   <a>$sel:variableType:Variable'</a>, <a>variable_variableType</a> - The
--   variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
--   
--   <a>$sel:description:Variable'</a>, <a>variable_description</a> - The
--   description of the variable.
newVariable :: Variable

-- | The time when variable was last updated.
variable_lastUpdatedTime :: Lens' Variable (Maybe Text)

-- | The ARN of the variable.
variable_arn :: Lens' Variable (Maybe Text)

-- | The time when the variable was created.
variable_createdTime :: Lens' Variable (Maybe Text)

-- | The name of the variable.
variable_name :: Lens' Variable (Maybe Text)

-- | The data source of the variable.
variable_dataSource :: Lens' Variable (Maybe DataSource)

-- | The data type of the variable. For more information see <a>Variable
--   types</a>.
variable_dataType :: Lens' Variable (Maybe DataType)

-- | The default value of the variable.
variable_defaultValue :: Lens' Variable (Maybe Text)

-- | The variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
variable_variableType :: Lens' Variable (Maybe Text)

-- | The description of the variable.
variable_description :: Lens' Variable (Maybe Text)

-- | A variable in the list of variables for the batch create variable
--   request.
--   
--   <i>See:</i> <a>newVariableEntry</a> smart constructor.
data VariableEntry
VariableEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VariableEntry

-- | The name of the variable.
[$sel:name:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The data source of the variable.
[$sel:dataSource:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The data type of the variable.
[$sel:dataType:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The default value of the variable.
[$sel:defaultValue:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The type of the variable. For more information see <a>Variable
--   types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
[$sel:variableType:VariableEntry'] :: VariableEntry -> Maybe Text

-- | The description of the variable.
[$sel:description:VariableEntry'] :: VariableEntry -> Maybe Text

-- | Create a value of <a>VariableEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:VariableEntry'</a>, <a>variableEntry_name</a> - The name
--   of the variable.
--   
--   <a>$sel:dataSource:VariableEntry'</a>, <a>variableEntry_dataSource</a>
--   - The data source of the variable.
--   
--   <a>$sel:dataType:VariableEntry'</a>, <a>variableEntry_dataType</a> -
--   The data type of the variable.
--   
--   <a>$sel:defaultValue:VariableEntry'</a>,
--   <a>variableEntry_defaultValue</a> - The default value of the variable.
--   
--   <a>$sel:variableType:VariableEntry'</a>,
--   <a>variableEntry_variableType</a> - The type of the variable. For more
--   information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
--   
--   <a>$sel:description:VariableEntry'</a>,
--   <a>variableEntry_description</a> - The description of the variable.
newVariableEntry :: VariableEntry

-- | The name of the variable.
variableEntry_name :: Lens' VariableEntry (Maybe Text)

-- | The data source of the variable.
variableEntry_dataSource :: Lens' VariableEntry (Maybe Text)

-- | The data type of the variable.
variableEntry_dataType :: Lens' VariableEntry (Maybe Text)

-- | The default value of the variable.
variableEntry_defaultValue :: Lens' VariableEntry (Maybe Text)

-- | The type of the variable. For more information see <a>Variable
--   types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
variableEntry_variableType :: Lens' VariableEntry (Maybe Text)

-- | The description of the variable.
variableEntry_description :: Lens' VariableEntry (Maybe Text)

-- | The variable importance metrics details.
--   
--   <i>See:</i> <a>newVariableImportanceMetrics</a> smart constructor.
data VariableImportanceMetrics
VariableImportanceMetrics' :: Maybe [LogOddsMetric] -> VariableImportanceMetrics

-- | List of variable metrics.
[$sel:logOddsMetrics:VariableImportanceMetrics'] :: VariableImportanceMetrics -> Maybe [LogOddsMetric]

-- | Create a value of <a>VariableImportanceMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logOddsMetrics:VariableImportanceMetrics'</a>,
--   <a>variableImportanceMetrics_logOddsMetrics</a> - List of variable
--   metrics.
newVariableImportanceMetrics :: VariableImportanceMetrics

-- | List of variable metrics.
variableImportanceMetrics_logOddsMetrics :: Lens' VariableImportanceMetrics (Maybe [LogOddsMetric])


-- | Assigns tags to a resource.
module Network.AWS.FraudDetector.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The resource ARN.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The tags to assign to the resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The resource ARN.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the resource.
newTagResource :: Text -> TagResource

-- | The resource ARN.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tags to assign to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.TagResource.TagResource
instance GHC.Show.Show Network.AWS.FraudDetector.TagResource.TagResource
instance GHC.Read.Read Network.AWS.FraudDetector.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.FraudDetector.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.FraudDetector.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.FraudDetector.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.FraudDetector.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.TagResource.TagResource


-- | Stores events in Amazon Fraud Detector without generating fraud
--   predictions for those events. For example, you can use
--   <tt>SendEvent</tt> to upload a historical dataset, which you can then
--   later use to train a model.
module Network.AWS.FraudDetector.SendEvent

-- | <i>See:</i> <a>newSendEvent</a> smart constructor.
data SendEvent
SendEvent' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> HashMap Text (Sensitive Text) -> [Sensitive Entity] -> SendEvent

-- | The timestamp associated with the label. Required if specifying
--   <tt>assignedLabel</tt>.
[$sel:labelTimestamp:SendEvent'] :: SendEvent -> Maybe Text

-- | The label to associate with the event. Required if specifying
--   <tt>labelTimestamp</tt>.
[$sel:assignedLabel:SendEvent'] :: SendEvent -> Maybe Text

-- | The event ID to upload.
[$sel:eventId:SendEvent'] :: SendEvent -> Text

-- | The event type name of the event.
[$sel:eventTypeName:SendEvent'] :: SendEvent -> Text

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
[$sel:eventTimestamp:SendEvent'] :: SendEvent -> Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
[$sel:eventVariables:SendEvent'] :: SendEvent -> HashMap Text (Sensitive Text)

-- | An array of entities.
[$sel:entities:SendEvent'] :: SendEvent -> [Sensitive Entity]

-- | Create a value of <a>SendEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labelTimestamp:SendEvent'</a>, <a>sendEvent_labelTimestamp</a>
--   - The timestamp associated with the label. Required if specifying
--   <tt>assignedLabel</tt>.
--   
--   <a>$sel:assignedLabel:SendEvent'</a>, <a>sendEvent_assignedLabel</a> -
--   The label to associate with the event. Required if specifying
--   <tt>labelTimestamp</tt>.
--   
--   <a>$sel:eventId:SendEvent'</a>, <a>sendEvent_eventId</a> - The event
--   ID to upload.
--   
--   <a>$sel:eventTypeName:SendEvent'</a>, <a>sendEvent_eventTypeName</a> -
--   The event type name of the event.
--   
--   <a>$sel:eventTimestamp:SendEvent'</a>, <a>sendEvent_eventTimestamp</a>
--   - The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:eventVariables:SendEvent'</a>, <a>sendEvent_eventVariables</a>
--   - Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
--   
--   <a>$sel:entities:SendEvent'</a>, <a>sendEvent_entities</a> - An array
--   of entities.
newSendEvent :: Text -> Text -> Text -> SendEvent

-- | The timestamp associated with the label. Required if specifying
--   <tt>assignedLabel</tt>.
sendEvent_labelTimestamp :: Lens' SendEvent (Maybe Text)

-- | The label to associate with the event. Required if specifying
--   <tt>labelTimestamp</tt>.
sendEvent_assignedLabel :: Lens' SendEvent (Maybe Text)

-- | The event ID to upload.
sendEvent_eventId :: Lens' SendEvent Text

-- | The event type name of the event.
sendEvent_eventTypeName :: Lens' SendEvent Text

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
sendEvent_eventTimestamp :: Lens' SendEvent Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
sendEvent_eventVariables :: Lens' SendEvent (HashMap Text Text)

-- | An array of entities.
sendEvent_entities :: Lens' SendEvent [Entity]

-- | <i>See:</i> <a>newSendEventResponse</a> smart constructor.
data SendEventResponse
SendEventResponse' :: Int -> SendEventResponse

-- | The response's http status code.
[$sel:httpStatus:SendEventResponse'] :: SendEventResponse -> Int

-- | Create a value of <a>SendEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendEventResponse'</a>,
--   <a>sendEventResponse_httpStatus</a> - The response's http status code.
newSendEventResponse :: Int -> SendEventResponse

-- | The response's http status code.
sendEventResponse_httpStatus :: Lens' SendEventResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.SendEvent.SendEvent
instance GHC.Show.Show Network.AWS.FraudDetector.SendEvent.SendEvent
instance GHC.Classes.Eq Network.AWS.FraudDetector.SendEvent.SendEvent
instance GHC.Generics.Generic Network.AWS.FraudDetector.SendEvent.SendEventResponse
instance GHC.Show.Show Network.AWS.FraudDetector.SendEvent.SendEventResponse
instance GHC.Read.Read Network.AWS.FraudDetector.SendEvent.SendEventResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.SendEvent.SendEventResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.SendEvent.SendEvent
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.SendEvent.SendEventResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.SendEvent.SendEvent
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.SendEvent.SendEvent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.SendEvent.SendEvent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.SendEvent.SendEvent
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.SendEvent.SendEvent
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.SendEvent.SendEvent


-- | Creates or updates an outcome.
module Network.AWS.FraudDetector.PutOutcome

-- | <i>See:</i> <a>newPutOutcome</a> smart constructor.
data PutOutcome
PutOutcome' :: Maybe Text -> Maybe [Tag] -> Text -> PutOutcome

-- | The outcome description.
[$sel:description:PutOutcome'] :: PutOutcome -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:PutOutcome'] :: PutOutcome -> Maybe [Tag]

-- | The name of the outcome.
[$sel:name:PutOutcome'] :: PutOutcome -> Text

-- | Create a value of <a>PutOutcome</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutOutcome'</a>, <a>putOutcome_description</a> -
--   The outcome description.
--   
--   <a>$sel:tags:PutOutcome'</a>, <a>putOutcome_tags</a> - A collection of
--   key and value pairs.
--   
--   <a>$sel:name:PutOutcome'</a>, <a>putOutcome_name</a> - The name of the
--   outcome.
newPutOutcome :: Text -> PutOutcome

-- | The outcome description.
putOutcome_description :: Lens' PutOutcome (Maybe Text)

-- | A collection of key and value pairs.
putOutcome_tags :: Lens' PutOutcome (Maybe [Tag])

-- | The name of the outcome.
putOutcome_name :: Lens' PutOutcome Text

-- | <i>See:</i> <a>newPutOutcomeResponse</a> smart constructor.
data PutOutcomeResponse
PutOutcomeResponse' :: Int -> PutOutcomeResponse

-- | The response's http status code.
[$sel:httpStatus:PutOutcomeResponse'] :: PutOutcomeResponse -> Int

-- | Create a value of <a>PutOutcomeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutOutcomeResponse'</a>,
--   <a>putOutcomeResponse_httpStatus</a> - The response's http status
--   code.
newPutOutcomeResponse :: Int -> PutOutcomeResponse

-- | The response's http status code.
putOutcomeResponse_httpStatus :: Lens' PutOutcomeResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance GHC.Show.Show Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance GHC.Read.Read Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutOutcome.PutOutcomeResponse
instance GHC.Show.Show Network.AWS.FraudDetector.PutOutcome.PutOutcomeResponse
instance GHC.Read.Read Network.AWS.FraudDetector.PutOutcome.PutOutcomeResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutOutcome.PutOutcomeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutOutcome.PutOutcomeResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.PutOutcome.PutOutcome
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.PutOutcome.PutOutcome


-- | Creates or updates label. A label classifies an event as fraudulent or
--   legitimate. Labels are associated with event types and used to train
--   supervised machine learning models in Amazon Fraud Detector.
module Network.AWS.FraudDetector.PutLabel

-- | <i>See:</i> <a>newPutLabel</a> smart constructor.
data PutLabel
PutLabel' :: Maybe Text -> Maybe [Tag] -> Text -> PutLabel

-- | The label description.
[$sel:description:PutLabel'] :: PutLabel -> Maybe Text
[$sel:tags:PutLabel'] :: PutLabel -> Maybe [Tag]

-- | The label name.
[$sel:name:PutLabel'] :: PutLabel -> Text

-- | Create a value of <a>PutLabel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutLabel'</a>, <a>putLabel_description</a> - The
--   label description.
--   
--   <a>$sel:tags:PutLabel'</a>, <a>putLabel_tags</a> -
--   
--   <a>$sel:name:PutLabel'</a>, <a>putLabel_name</a> - The label name.
newPutLabel :: Text -> PutLabel

-- | The label description.
putLabel_description :: Lens' PutLabel (Maybe Text)

putLabel_tags :: Lens' PutLabel (Maybe [Tag])

-- | The label name.
putLabel_name :: Lens' PutLabel Text

-- | <i>See:</i> <a>newPutLabelResponse</a> smart constructor.
data PutLabelResponse
PutLabelResponse' :: Int -> PutLabelResponse

-- | The response's http status code.
[$sel:httpStatus:PutLabelResponse'] :: PutLabelResponse -> Int

-- | Create a value of <a>PutLabelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLabelResponse'</a>,
--   <a>putLabelResponse_httpStatus</a> - The response's http status code.
newPutLabelResponse :: Int -> PutLabelResponse

-- | The response's http status code.
putLabelResponse_httpStatus :: Lens' PutLabelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutLabel.PutLabel
instance GHC.Show.Show Network.AWS.FraudDetector.PutLabel.PutLabel
instance GHC.Read.Read Network.AWS.FraudDetector.PutLabel.PutLabel
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutLabel.PutLabel
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutLabel.PutLabelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.PutLabel.PutLabelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.PutLabel.PutLabelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutLabel.PutLabelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.PutLabel.PutLabel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutLabel.PutLabelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.PutLabel.PutLabel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutLabel.PutLabel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.PutLabel.PutLabel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.PutLabel.PutLabel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.PutLabel.PutLabel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.PutLabel.PutLabel


-- | Specifies the KMS key to be used to encrypt content in Amazon Fraud
--   Detector.
module Network.AWS.FraudDetector.PutKMSEncryptionKey

-- | <i>See:</i> <a>newPutKMSEncryptionKey</a> smart constructor.
data PutKMSEncryptionKey
PutKMSEncryptionKey' :: Text -> PutKMSEncryptionKey

-- | The KMS encryption key ARN.
[$sel:kmsEncryptionKeyArn:PutKMSEncryptionKey'] :: PutKMSEncryptionKey -> Text

-- | Create a value of <a>PutKMSEncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionKeyArn:PutKMSEncryptionKey'</a>,
--   <a>putKMSEncryptionKey_kmsEncryptionKeyArn</a> - The KMS encryption
--   key ARN.
newPutKMSEncryptionKey :: Text -> PutKMSEncryptionKey

-- | The KMS encryption key ARN.
putKMSEncryptionKey_kmsEncryptionKeyArn :: Lens' PutKMSEncryptionKey Text

-- | <i>See:</i> <a>newPutKMSEncryptionKeyResponse</a> smart constructor.
data PutKMSEncryptionKeyResponse
PutKMSEncryptionKeyResponse' :: Int -> PutKMSEncryptionKeyResponse

-- | The response's http status code.
[$sel:httpStatus:PutKMSEncryptionKeyResponse'] :: PutKMSEncryptionKeyResponse -> Int

-- | Create a value of <a>PutKMSEncryptionKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutKMSEncryptionKeyResponse'</a>,
--   <a>putKMSEncryptionKeyResponse_httpStatus</a> - The response's http
--   status code.
newPutKMSEncryptionKeyResponse :: Int -> PutKMSEncryptionKeyResponse

-- | The response's http status code.
putKMSEncryptionKeyResponse_httpStatus :: Lens' PutKMSEncryptionKeyResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance GHC.Show.Show Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance GHC.Read.Read Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKeyResponse
instance GHC.Show.Show Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKeyResponse
instance GHC.Read.Read Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKeyResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.PutKMSEncryptionKey.PutKMSEncryptionKey


-- | Creates or updates an Amazon SageMaker model endpoint. You can also
--   use this action to update the configuration of the model endpoint,
--   including the IAM role and/or the mapped variables.
module Network.AWS.FraudDetector.PutExternalModel

-- | <i>See:</i> <a>newPutExternalModel</a> smart constructor.
data PutExternalModel
PutExternalModel' :: Maybe [Tag] -> Text -> ModelSource -> Text -> ModelInputConfiguration -> ModelOutputConfiguration -> ModelEndpointStatus -> PutExternalModel

-- | A collection of key and value pairs.
[$sel:tags:PutExternalModel'] :: PutExternalModel -> Maybe [Tag]

-- | The model endpoints name.
[$sel:modelEndpoint:PutExternalModel'] :: PutExternalModel -> Text

-- | The source of the model.
[$sel:modelSource:PutExternalModel'] :: PutExternalModel -> ModelSource

-- | The IAM role used to invoke the model endpoint.
[$sel:invokeModelEndpointRoleArn:PutExternalModel'] :: PutExternalModel -> Text

-- | The model endpoint input configuration.
[$sel:inputConfiguration:PutExternalModel'] :: PutExternalModel -> ModelInputConfiguration

-- | The model endpoint output configuration.
[$sel:outputConfiguration:PutExternalModel'] :: PutExternalModel -> ModelOutputConfiguration

-- | The model endpoint’s status in Amazon Fraud Detector.
[$sel:modelEndpointStatus:PutExternalModel'] :: PutExternalModel -> ModelEndpointStatus

-- | Create a value of <a>PutExternalModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutExternalModel'</a>, <a>putExternalModel_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:modelEndpoint:PutExternalModel'</a>,
--   <a>putExternalModel_modelEndpoint</a> - The model endpoints name.
--   
--   <a>$sel:modelSource:PutExternalModel'</a>,
--   <a>putExternalModel_modelSource</a> - The source of the model.
--   
--   <a>$sel:invokeModelEndpointRoleArn:PutExternalModel'</a>,
--   <a>putExternalModel_invokeModelEndpointRoleArn</a> - The IAM role used
--   to invoke the model endpoint.
--   
--   <a>$sel:inputConfiguration:PutExternalModel'</a>,
--   <a>putExternalModel_inputConfiguration</a> - The model endpoint input
--   configuration.
--   
--   <a>$sel:outputConfiguration:PutExternalModel'</a>,
--   <a>putExternalModel_outputConfiguration</a> - The model endpoint
--   output configuration.
--   
--   <a>$sel:modelEndpointStatus:PutExternalModel'</a>,
--   <a>putExternalModel_modelEndpointStatus</a> - The model endpoint’s
--   status in Amazon Fraud Detector.
newPutExternalModel :: Text -> ModelSource -> Text -> ModelInputConfiguration -> ModelOutputConfiguration -> ModelEndpointStatus -> PutExternalModel

-- | A collection of key and value pairs.
putExternalModel_tags :: Lens' PutExternalModel (Maybe [Tag])

-- | The model endpoints name.
putExternalModel_modelEndpoint :: Lens' PutExternalModel Text

-- | The source of the model.
putExternalModel_modelSource :: Lens' PutExternalModel ModelSource

-- | The IAM role used to invoke the model endpoint.
putExternalModel_invokeModelEndpointRoleArn :: Lens' PutExternalModel Text

-- | The model endpoint input configuration.
putExternalModel_inputConfiguration :: Lens' PutExternalModel ModelInputConfiguration

-- | The model endpoint output configuration.
putExternalModel_outputConfiguration :: Lens' PutExternalModel ModelOutputConfiguration

-- | The model endpoint’s status in Amazon Fraud Detector.
putExternalModel_modelEndpointStatus :: Lens' PutExternalModel ModelEndpointStatus

-- | <i>See:</i> <a>newPutExternalModelResponse</a> smart constructor.
data PutExternalModelResponse
PutExternalModelResponse' :: Int -> PutExternalModelResponse

-- | The response's http status code.
[$sel:httpStatus:PutExternalModelResponse'] :: PutExternalModelResponse -> Int

-- | Create a value of <a>PutExternalModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutExternalModelResponse'</a>,
--   <a>putExternalModelResponse_httpStatus</a> - The response's http
--   status code.
newPutExternalModelResponse :: Int -> PutExternalModelResponse

-- | The response's http status code.
putExternalModelResponse_httpStatus :: Lens' PutExternalModelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance GHC.Show.Show Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance GHC.Read.Read Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutExternalModel.PutExternalModelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.PutExternalModel.PutExternalModelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.PutExternalModel.PutExternalModelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutExternalModel.PutExternalModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutExternalModel.PutExternalModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.PutExternalModel.PutExternalModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.PutExternalModel.PutExternalModel


-- | Creates or updates an event type. An event is a business activity that
--   is evaluated for fraud risk. With Amazon Fraud Detector, you generate
--   fraud predictions for events. An event type defines the structure for
--   an event sent to Amazon Fraud Detector. This includes the variables
--   sent as part of the event, the entity performing the event (such as a
--   customer), and the labels that classify the event. Example event types
--   include online payment transactions, account registrations, and
--   authentications.
module Network.AWS.FraudDetector.PutEventType

-- | <i>See:</i> <a>newPutEventType</a> smart constructor.
data PutEventType
PutEventType' :: Maybe [Text] -> Maybe EventIngestion -> Maybe Text -> Maybe [Tag] -> Text -> NonEmpty Text -> NonEmpty Text -> PutEventType

-- | The event type labels.
[$sel:labels:PutEventType'] :: PutEventType -> Maybe [Text]

-- | Specifies if ingenstion is enabled or disabled.
[$sel:eventIngestion:PutEventType'] :: PutEventType -> Maybe EventIngestion

-- | The description of the event type.
[$sel:description:PutEventType'] :: PutEventType -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:PutEventType'] :: PutEventType -> Maybe [Tag]

-- | The name.
[$sel:name:PutEventType'] :: PutEventType -> Text

-- | The event type variables.
[$sel:eventVariables:PutEventType'] :: PutEventType -> NonEmpty Text

-- | The entity type for the event type. Example entity types: customer,
--   merchant, account.
[$sel:entityTypes:PutEventType'] :: PutEventType -> NonEmpty Text

-- | Create a value of <a>PutEventType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labels:PutEventType'</a>, <a>putEventType_labels</a> - The
--   event type labels.
--   
--   <a>$sel:eventIngestion:PutEventType'</a>,
--   <a>putEventType_eventIngestion</a> - Specifies if ingenstion is
--   enabled or disabled.
--   
--   <a>$sel:description:PutEventType'</a>, <a>putEventType_description</a>
--   - The description of the event type.
--   
--   <a>$sel:tags:PutEventType'</a>, <a>putEventType_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:name:PutEventType'</a>, <a>putEventType_name</a> - The name.
--   
--   <a>$sel:eventVariables:PutEventType'</a>,
--   <a>putEventType_eventVariables</a> - The event type variables.
--   
--   <a>$sel:entityTypes:PutEventType'</a>, <a>putEventType_entityTypes</a>
--   - The entity type for the event type. Example entity types: customer,
--   merchant, account.
newPutEventType :: Text -> NonEmpty Text -> NonEmpty Text -> PutEventType

-- | The event type labels.
putEventType_labels :: Lens' PutEventType (Maybe [Text])

-- | Specifies if ingenstion is enabled or disabled.
putEventType_eventIngestion :: Lens' PutEventType (Maybe EventIngestion)

-- | The description of the event type.
putEventType_description :: Lens' PutEventType (Maybe Text)

-- | A collection of key and value pairs.
putEventType_tags :: Lens' PutEventType (Maybe [Tag])

-- | The name.
putEventType_name :: Lens' PutEventType Text

-- | The event type variables.
putEventType_eventVariables :: Lens' PutEventType (NonEmpty Text)

-- | The entity type for the event type. Example entity types: customer,
--   merchant, account.
putEventType_entityTypes :: Lens' PutEventType (NonEmpty Text)

-- | <i>See:</i> <a>newPutEventTypeResponse</a> smart constructor.
data PutEventTypeResponse
PutEventTypeResponse' :: Int -> PutEventTypeResponse

-- | The response's http status code.
[$sel:httpStatus:PutEventTypeResponse'] :: PutEventTypeResponse -> Int

-- | Create a value of <a>PutEventTypeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutEventTypeResponse'</a>,
--   <a>putEventTypeResponse_httpStatus</a> - The response's http status
--   code.
newPutEventTypeResponse :: Int -> PutEventTypeResponse

-- | The response's http status code.
putEventTypeResponse_httpStatus :: Lens' PutEventTypeResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutEventType.PutEventType
instance GHC.Show.Show Network.AWS.FraudDetector.PutEventType.PutEventType
instance GHC.Read.Read Network.AWS.FraudDetector.PutEventType.PutEventType
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutEventType.PutEventType
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutEventType.PutEventTypeResponse
instance GHC.Show.Show Network.AWS.FraudDetector.PutEventType.PutEventTypeResponse
instance GHC.Read.Read Network.AWS.FraudDetector.PutEventType.PutEventTypeResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutEventType.PutEventTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.PutEventType.PutEventType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutEventType.PutEventTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.PutEventType.PutEventType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutEventType.PutEventType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.PutEventType.PutEventType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.PutEventType.PutEventType
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.PutEventType.PutEventType
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.PutEventType.PutEventType


-- | Creates or updates an entity type. An entity represents who is
--   performing the event. As part of a fraud prediction, you pass the
--   entity ID to indicate the specific entity who performed the event. An
--   entity type classifies the entity. Example classifications include
--   customer, merchant, or account.
module Network.AWS.FraudDetector.PutEntityType

-- | <i>See:</i> <a>newPutEntityType</a> smart constructor.
data PutEntityType
PutEntityType' :: Maybe Text -> Maybe [Tag] -> Text -> PutEntityType

-- | The description.
[$sel:description:PutEntityType'] :: PutEntityType -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:PutEntityType'] :: PutEntityType -> Maybe [Tag]

-- | The name of the entity type.
[$sel:name:PutEntityType'] :: PutEntityType -> Text

-- | Create a value of <a>PutEntityType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutEntityType'</a>,
--   <a>putEntityType_description</a> - The description.
--   
--   <a>$sel:tags:PutEntityType'</a>, <a>putEntityType_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:name:PutEntityType'</a>, <a>putEntityType_name</a> - The name
--   of the entity type.
newPutEntityType :: Text -> PutEntityType

-- | The description.
putEntityType_description :: Lens' PutEntityType (Maybe Text)

-- | A collection of key and value pairs.
putEntityType_tags :: Lens' PutEntityType (Maybe [Tag])

-- | The name of the entity type.
putEntityType_name :: Lens' PutEntityType Text

-- | <i>See:</i> <a>newPutEntityTypeResponse</a> smart constructor.
data PutEntityTypeResponse
PutEntityTypeResponse' :: Int -> PutEntityTypeResponse

-- | The response's http status code.
[$sel:httpStatus:PutEntityTypeResponse'] :: PutEntityTypeResponse -> Int

-- | Create a value of <a>PutEntityTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutEntityTypeResponse'</a>,
--   <a>putEntityTypeResponse_httpStatus</a> - The response's http status
--   code.
newPutEntityTypeResponse :: Int -> PutEntityTypeResponse

-- | The response's http status code.
putEntityTypeResponse_httpStatus :: Lens' PutEntityTypeResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance GHC.Show.Show Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance GHC.Read.Read Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutEntityType.PutEntityTypeResponse
instance GHC.Show.Show Network.AWS.FraudDetector.PutEntityType.PutEntityTypeResponse
instance GHC.Read.Read Network.AWS.FraudDetector.PutEntityType.PutEntityTypeResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutEntityType.PutEntityTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutEntityType.PutEntityTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.PutEntityType.PutEntityType
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.PutEntityType.PutEntityType


-- | Creates or updates a detector.
module Network.AWS.FraudDetector.PutDetector

-- | <i>See:</i> <a>newPutDetector</a> smart constructor.
data PutDetector
PutDetector' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> PutDetector

-- | The description of the detector.
[$sel:description:PutDetector'] :: PutDetector -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:PutDetector'] :: PutDetector -> Maybe [Tag]

-- | The detector ID.
[$sel:detectorId:PutDetector'] :: PutDetector -> Text

-- | The name of the event type.
[$sel:eventTypeName:PutDetector'] :: PutDetector -> Text

-- | Create a value of <a>PutDetector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutDetector'</a>, <a>putDetector_description</a> -
--   The description of the detector.
--   
--   <a>$sel:tags:PutDetector'</a>, <a>putDetector_tags</a> - A collection
--   of key and value pairs.
--   
--   <a>$sel:detectorId:PutDetector'</a>, <a>putDetector_detectorId</a> -
--   The detector ID.
--   
--   <a>$sel:eventTypeName:PutDetector'</a>,
--   <a>putDetector_eventTypeName</a> - The name of the event type.
newPutDetector :: Text -> Text -> PutDetector

-- | The description of the detector.
putDetector_description :: Lens' PutDetector (Maybe Text)

-- | A collection of key and value pairs.
putDetector_tags :: Lens' PutDetector (Maybe [Tag])

-- | The detector ID.
putDetector_detectorId :: Lens' PutDetector Text

-- | The name of the event type.
putDetector_eventTypeName :: Lens' PutDetector Text

-- | <i>See:</i> <a>newPutDetectorResponse</a> smart constructor.
data PutDetectorResponse
PutDetectorResponse' :: Int -> PutDetectorResponse

-- | The response's http status code.
[$sel:httpStatus:PutDetectorResponse'] :: PutDetectorResponse -> Int

-- | Create a value of <a>PutDetectorResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutDetectorResponse'</a>,
--   <a>putDetectorResponse_httpStatus</a> - The response's http status
--   code.
newPutDetectorResponse :: Int -> PutDetectorResponse

-- | The response's http status code.
putDetectorResponse_httpStatus :: Lens' PutDetectorResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutDetector.PutDetector
instance GHC.Show.Show Network.AWS.FraudDetector.PutDetector.PutDetector
instance GHC.Read.Read Network.AWS.FraudDetector.PutDetector.PutDetector
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutDetector.PutDetector
instance GHC.Generics.Generic Network.AWS.FraudDetector.PutDetector.PutDetectorResponse
instance GHC.Show.Show Network.AWS.FraudDetector.PutDetector.PutDetectorResponse
instance GHC.Read.Read Network.AWS.FraudDetector.PutDetector.PutDetectorResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.PutDetector.PutDetectorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.PutDetector.PutDetector
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutDetector.PutDetectorResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.PutDetector.PutDetector
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.PutDetector.PutDetector
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.PutDetector.PutDetector
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.PutDetector.PutDetector
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.PutDetector.PutDetector
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.PutDetector.PutDetector


-- | Lists all tags associated with the resource. This is a paginated API.
--   To get the next page results, provide the pagination token from the
--   response as part of your request. A null pagination token fetches the
--   records from the beginning.
module Network.AWS.FraudDetector.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | The next token from the previous results.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | The ARN that specifies the resource whose tags you want to list.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The next token from the
--   previous results.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The maximum number of objects
--   to return for the request.
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN that specifies the
--   resource whose tags you want to list.
newListTagsForResource :: Text -> ListTagsForResource

-- | The next token from the previous results.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of objects to return for the request.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The ARN that specifies the resource whose tags you want to list.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The next token for subsequent requests.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The next token for
--   subsequent requests.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A collection of key and
--   value pairs.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The next token for subsequent requests.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A collection of key and value pairs.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.ListTagsForResource.ListTagsForResource


-- | Gets all of the variables or the specific variable. This is a
--   paginated API. Providing null <tt>maxSizePerPage</tt> results in
--   retrieving maximum of 100 records per page. If you provide
--   <tt>maxSizePerPage</tt> the value must be between 50 and 100. To get
--   the next page result, a provide a pagination token from
--   <tt>GetVariablesResult</tt> as part of your request. Null pagination
--   token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetVariables

-- | <i>See:</i> <a>newGetVariables</a> smart constructor.
data GetVariables
GetVariables' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetVariables

-- | The next page token of the get variable request.
[$sel:nextToken:GetVariables'] :: GetVariables -> Maybe Text

-- | The name of the variable.
[$sel:name:GetVariables'] :: GetVariables -> Maybe Text

-- | The max size per page determined for the get variable request.
[$sel:maxResults:GetVariables'] :: GetVariables -> Maybe Natural

-- | Create a value of <a>GetVariables</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetVariables'</a>, <a>getVariables_nextToken</a> -
--   The next page token of the get variable request.
--   
--   <a>$sel:name:GetVariables'</a>, <a>getVariables_name</a> - The name of
--   the variable.
--   
--   <a>$sel:maxResults:GetVariables'</a>, <a>getVariables_maxResults</a> -
--   The max size per page determined for the get variable request.
newGetVariables :: GetVariables

-- | The next page token of the get variable request.
getVariables_nextToken :: Lens' GetVariables (Maybe Text)

-- | The name of the variable.
getVariables_name :: Lens' GetVariables (Maybe Text)

-- | The max size per page determined for the get variable request.
getVariables_maxResults :: Lens' GetVariables (Maybe Natural)

-- | <i>See:</i> <a>newGetVariablesResponse</a> smart constructor.
data GetVariablesResponse
GetVariablesResponse' :: Maybe [Variable] -> Maybe Text -> Int -> GetVariablesResponse

-- | The names of the variables returned.
[$sel:variables:GetVariablesResponse'] :: GetVariablesResponse -> Maybe [Variable]

-- | The next page token to be used in subsequent requests.
[$sel:nextToken:GetVariablesResponse'] :: GetVariablesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetVariablesResponse'] :: GetVariablesResponse -> Int

-- | Create a value of <a>GetVariablesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:GetVariablesResponse'</a>,
--   <a>getVariablesResponse_variables</a> - The names of the variables
--   returned.
--   
--   <a>$sel:nextToken:GetVariables'</a>,
--   <a>getVariablesResponse_nextToken</a> - The next page token to be used
--   in subsequent requests.
--   
--   <a>$sel:httpStatus:GetVariablesResponse'</a>,
--   <a>getVariablesResponse_httpStatus</a> - The response's http status
--   code.
newGetVariablesResponse :: Int -> GetVariablesResponse

-- | The names of the variables returned.
getVariablesResponse_variables :: Lens' GetVariablesResponse (Maybe [Variable])

-- | The next page token to be used in subsequent requests.
getVariablesResponse_nextToken :: Lens' GetVariablesResponse (Maybe Text)

-- | The response's http status code.
getVariablesResponse_httpStatus :: Lens' GetVariablesResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetVariables.GetVariables
instance GHC.Show.Show Network.AWS.FraudDetector.GetVariables.GetVariables
instance GHC.Read.Read Network.AWS.FraudDetector.GetVariables.GetVariables
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetVariables.GetVariables
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetVariables.GetVariablesResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetVariables.GetVariablesResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetVariables.GetVariablesResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetVariables.GetVariablesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetVariables.GetVariables
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetVariables.GetVariablesResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetVariables.GetVariables
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetVariables.GetVariables
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetVariables.GetVariables
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetVariables.GetVariables
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetVariables.GetVariables
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetVariables.GetVariables


-- | Get all rules for a detector (paginated) if <tt>ruleId</tt> and
--   <tt>ruleVersion</tt> are not specified. Gets all rules for the
--   detector and the <tt>ruleId</tt> if present (paginated). Gets a
--   specific rule if both the <tt>ruleId</tt> and the <tt>ruleVersion</tt>
--   are specified.
--   
--   This is a paginated API. Providing null maxResults results in
--   retrieving maximum of 100 records per page. If you provide maxResults
--   the value must be between 50 and 100. To get the next page result, a
--   provide a pagination token from GetRulesResult as part of your
--   request. Null pagination token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetRules

-- | <i>See:</i> <a>newGetRules</a> smart constructor.
data GetRules
GetRules' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetRules

-- | The rule version.
[$sel:ruleVersion:GetRules'] :: GetRules -> Maybe Text

-- | The rule ID.
[$sel:ruleId:GetRules'] :: GetRules -> Maybe Text

-- | The next page token.
[$sel:nextToken:GetRules'] :: GetRules -> Maybe Text

-- | The maximum number of rules to return for the request.
[$sel:maxResults:GetRules'] :: GetRules -> Maybe Natural

-- | The detector ID.
[$sel:detectorId:GetRules'] :: GetRules -> Text

-- | Create a value of <a>GetRules</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleVersion:GetRules'</a>, <a>getRules_ruleVersion</a> - The
--   rule version.
--   
--   <a>$sel:ruleId:GetRules'</a>, <a>getRules_ruleId</a> - The rule ID.
--   
--   <a>$sel:nextToken:GetRules'</a>, <a>getRules_nextToken</a> - The next
--   page token.
--   
--   <a>$sel:maxResults:GetRules'</a>, <a>getRules_maxResults</a> - The
--   maximum number of rules to return for the request.
--   
--   <a>$sel:detectorId:GetRules'</a>, <a>getRules_detectorId</a> - The
--   detector ID.
newGetRules :: Text -> GetRules

-- | The rule version.
getRules_ruleVersion :: Lens' GetRules (Maybe Text)

-- | The rule ID.
getRules_ruleId :: Lens' GetRules (Maybe Text)

-- | The next page token.
getRules_nextToken :: Lens' GetRules (Maybe Text)

-- | The maximum number of rules to return for the request.
getRules_maxResults :: Lens' GetRules (Maybe Natural)

-- | The detector ID.
getRules_detectorId :: Lens' GetRules Text

-- | <i>See:</i> <a>newGetRulesResponse</a> smart constructor.
data GetRulesResponse
GetRulesResponse' :: Maybe [RuleDetail] -> Maybe Text -> Int -> GetRulesResponse

-- | The details of the requested rule.
[$sel:ruleDetails:GetRulesResponse'] :: GetRulesResponse -> Maybe [RuleDetail]

-- | The next page token to be used in subsequent requests.
[$sel:nextToken:GetRulesResponse'] :: GetRulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRulesResponse'] :: GetRulesResponse -> Int

-- | Create a value of <a>GetRulesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleDetails:GetRulesResponse'</a>,
--   <a>getRulesResponse_ruleDetails</a> - The details of the requested
--   rule.
--   
--   <a>$sel:nextToken:GetRules'</a>, <a>getRulesResponse_nextToken</a> -
--   The next page token to be used in subsequent requests.
--   
--   <a>$sel:httpStatus:GetRulesResponse'</a>,
--   <a>getRulesResponse_httpStatus</a> - The response's http status code.
newGetRulesResponse :: Int -> GetRulesResponse

-- | The details of the requested rule.
getRulesResponse_ruleDetails :: Lens' GetRulesResponse (Maybe [RuleDetail])

-- | The next page token to be used in subsequent requests.
getRulesResponse_nextToken :: Lens' GetRulesResponse (Maybe Text)

-- | The response's http status code.
getRulesResponse_httpStatus :: Lens' GetRulesResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetRules.GetRules
instance GHC.Show.Show Network.AWS.FraudDetector.GetRules.GetRules
instance GHC.Read.Read Network.AWS.FraudDetector.GetRules.GetRules
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetRules.GetRules
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetRules.GetRulesResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetRules.GetRulesResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetRules.GetRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetRules.GetRules
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetRules.GetRulesResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetRules.GetRules
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetRules.GetRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetRules.GetRules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetRules.GetRules
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetRules.GetRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetRules.GetRules


-- | Gets one or more outcomes. This is a paginated API. If you provide a
--   null <tt>maxResults</tt>, this actions retrieves a maximum of 100
--   records per page. If you provide a <tt>maxResults</tt>, the value must
--   be between 50 and 100. To get the next page results, provide the
--   pagination token from the <tt>GetOutcomesResult</tt> as part of your
--   request. A null pagination token fetches the records from the
--   beginning.
module Network.AWS.FraudDetector.GetOutcomes

-- | <i>See:</i> <a>newGetOutcomes</a> smart constructor.
data GetOutcomes
GetOutcomes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetOutcomes

-- | The next page token for the request.
[$sel:nextToken:GetOutcomes'] :: GetOutcomes -> Maybe Text

-- | The name of the outcome or outcomes to get.
[$sel:name:GetOutcomes'] :: GetOutcomes -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetOutcomes'] :: GetOutcomes -> Maybe Natural

-- | Create a value of <a>GetOutcomes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetOutcomes'</a>, <a>getOutcomes_nextToken</a> - The
--   next page token for the request.
--   
--   <a>$sel:name:GetOutcomes'</a>, <a>getOutcomes_name</a> - The name of
--   the outcome or outcomes to get.
--   
--   <a>$sel:maxResults:GetOutcomes'</a>, <a>getOutcomes_maxResults</a> -
--   The maximum number of objects to return for the request.
newGetOutcomes :: GetOutcomes

-- | The next page token for the request.
getOutcomes_nextToken :: Lens' GetOutcomes (Maybe Text)

-- | The name of the outcome or outcomes to get.
getOutcomes_name :: Lens' GetOutcomes (Maybe Text)

-- | The maximum number of objects to return for the request.
getOutcomes_maxResults :: Lens' GetOutcomes (Maybe Natural)

-- | <i>See:</i> <a>newGetOutcomesResponse</a> smart constructor.
data GetOutcomesResponse
GetOutcomesResponse' :: Maybe [Outcome] -> Maybe Text -> Int -> GetOutcomesResponse

-- | The outcomes.
[$sel:outcomes:GetOutcomesResponse'] :: GetOutcomesResponse -> Maybe [Outcome]

-- | The next page token for subsequent requests.
[$sel:nextToken:GetOutcomesResponse'] :: GetOutcomesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetOutcomesResponse'] :: GetOutcomesResponse -> Int

-- | Create a value of <a>GetOutcomesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outcomes:GetOutcomesResponse'</a>,
--   <a>getOutcomesResponse_outcomes</a> - The outcomes.
--   
--   <a>$sel:nextToken:GetOutcomes'</a>,
--   <a>getOutcomesResponse_nextToken</a> - The next page token for
--   subsequent requests.
--   
--   <a>$sel:httpStatus:GetOutcomesResponse'</a>,
--   <a>getOutcomesResponse_httpStatus</a> - The response's http status
--   code.
newGetOutcomesResponse :: Int -> GetOutcomesResponse

-- | The outcomes.
getOutcomesResponse_outcomes :: Lens' GetOutcomesResponse (Maybe [Outcome])

-- | The next page token for subsequent requests.
getOutcomesResponse_nextToken :: Lens' GetOutcomesResponse (Maybe Text)

-- | The response's http status code.
getOutcomesResponse_httpStatus :: Lens' GetOutcomesResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance GHC.Show.Show Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance GHC.Read.Read Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetOutcomes.GetOutcomesResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetOutcomes.GetOutcomesResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetOutcomes.GetOutcomesResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetOutcomes.GetOutcomesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetOutcomes.GetOutcomesResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetOutcomes.GetOutcomes
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetOutcomes.GetOutcomes


-- | Gets one or more models. Gets all models for the Amazon Web Services
--   account if no model type and no model id provided. Gets all models for
--   the Amazon Web Services account and model type, if the model type is
--   specified but model id is not provided. Gets a specific model if
--   (model type, model id) tuple is specified.
--   
--   This is a paginated API. If you provide a null <tt>maxResults</tt>,
--   this action retrieves a maximum of 10 records per page. If you provide
--   a <tt>maxResults</tt>, the value must be between 1 and 10. To get the
--   next page results, provide the pagination token from the response as
--   part of your request. A null pagination token fetches the records from
--   the beginning.
module Network.AWS.FraudDetector.GetModels

-- | <i>See:</i> <a>newGetModels</a> smart constructor.
data GetModels
GetModels' :: Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Natural -> GetModels

-- | The model type.
[$sel:modelType:GetModels'] :: GetModels -> Maybe ModelTypeEnum

-- | The model ID.
[$sel:modelId:GetModels'] :: GetModels -> Maybe Text

-- | The next token for the subsequent request.
[$sel:nextToken:GetModels'] :: GetModels -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetModels'] :: GetModels -> Maybe Natural

-- | Create a value of <a>GetModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelType:GetModels'</a>, <a>getModels_modelType</a> - The
--   model type.
--   
--   <a>$sel:modelId:GetModels'</a>, <a>getModels_modelId</a> - The model
--   ID.
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModels_nextToken</a> - The
--   next token for the subsequent request.
--   
--   <a>$sel:maxResults:GetModels'</a>, <a>getModels_maxResults</a> - The
--   maximum number of objects to return for the request.
newGetModels :: GetModels

-- | The model type.
getModels_modelType :: Lens' GetModels (Maybe ModelTypeEnum)

-- | The model ID.
getModels_modelId :: Lens' GetModels (Maybe Text)

-- | The next token for the subsequent request.
getModels_nextToken :: Lens' GetModels (Maybe Text)

-- | The maximum number of objects to return for the request.
getModels_maxResults :: Lens' GetModels (Maybe Natural)

-- | <i>See:</i> <a>newGetModelsResponse</a> smart constructor.
data GetModelsResponse
GetModelsResponse' :: Maybe [Model] -> Maybe Text -> Int -> GetModelsResponse

-- | The array of models.
[$sel:models:GetModelsResponse'] :: GetModelsResponse -> Maybe [Model]

-- | The next page token to be used in subsequent requests.
[$sel:nextToken:GetModelsResponse'] :: GetModelsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetModelsResponse'] :: GetModelsResponse -> Int

-- | Create a value of <a>GetModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:models:GetModelsResponse'</a>, <a>getModelsResponse_models</a>
--   - The array of models.
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModelsResponse_nextToken</a> -
--   The next page token to be used in subsequent requests.
--   
--   <a>$sel:httpStatus:GetModelsResponse'</a>,
--   <a>getModelsResponse_httpStatus</a> - The response's http status code.
newGetModelsResponse :: Int -> GetModelsResponse

-- | The array of models.
getModelsResponse_models :: Lens' GetModelsResponse (Maybe [Model])

-- | The next page token to be used in subsequent requests.
getModelsResponse_nextToken :: Lens' GetModelsResponse (Maybe Text)

-- | The response's http status code.
getModelsResponse_httpStatus :: Lens' GetModelsResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetModels.GetModels
instance GHC.Show.Show Network.AWS.FraudDetector.GetModels.GetModels
instance GHC.Read.Read Network.AWS.FraudDetector.GetModels.GetModels
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetModels.GetModels
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetModels.GetModelsResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetModels.GetModelsResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetModels.GetModelsResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetModels.GetModelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetModels.GetModels
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetModels.GetModelsResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetModels.GetModels
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetModels.GetModels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetModels.GetModels
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetModels.GetModels
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetModels.GetModels
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetModels.GetModels


-- | Gets the details of the specified model version.
module Network.AWS.FraudDetector.GetModelVersion

-- | <i>See:</i> <a>newGetModelVersion</a> smart constructor.
data GetModelVersion
GetModelVersion' :: Text -> ModelTypeEnum -> Text -> GetModelVersion

-- | The model ID.
[$sel:modelId:GetModelVersion'] :: GetModelVersion -> Text

-- | The model type.
[$sel:modelType:GetModelVersion'] :: GetModelVersion -> ModelTypeEnum

-- | The model version number.
[$sel:modelVersionNumber:GetModelVersion'] :: GetModelVersion -> Text

-- | Create a value of <a>GetModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModelVersion'</a>, <a>getModelVersion_modelId</a> -
--   The model ID.
--   
--   <a>$sel:modelType:GetModelVersion'</a>,
--   <a>getModelVersion_modelType</a> - The model type.
--   
--   <a>$sel:modelVersionNumber:GetModelVersion'</a>,
--   <a>getModelVersion_modelVersionNumber</a> - The model version number.
newGetModelVersion :: Text -> ModelTypeEnum -> Text -> GetModelVersion

-- | The model ID.
getModelVersion_modelId :: Lens' GetModelVersion Text

-- | The model type.
getModelVersion_modelType :: Lens' GetModelVersion ModelTypeEnum

-- | The model version number.
getModelVersion_modelVersionNumber :: Lens' GetModelVersion Text

-- | <i>See:</i> <a>newGetModelVersionResponse</a> smart constructor.
data GetModelVersionResponse
GetModelVersionResponse' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe TrainingDataSourceEnum -> Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe Text -> Maybe TrainingDataSchema -> Int -> GetModelVersionResponse

-- | The model version status.
--   
--   Possible values are:
--   
--   <ul>
--   <li><pre>TRAINING_IN_PROGRESS</pre></li>
--   <li><pre>TRAINING_COMPLETE</pre></li>
--   <li><pre>ACTIVATE_REQUESTED</pre></li>
--   <li><pre>ACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>ACTIVE</pre></li>
--   <li><pre>INACTIVATE_REQUESTED</pre></li>
--   <li><pre>INACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>INACTIVE</pre></li>
--   <li><pre>ERROR</pre></li>
--   </ul>
[$sel:status:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe Text

-- | The model type.
[$sel:modelType:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe ModelTypeEnum

-- | The model ID.
[$sel:modelId:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe Text

-- | The model version ARN.
[$sel:arn:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe Text

-- | The training data source.
[$sel:trainingDataSource:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe TrainingDataSourceEnum

-- | The details of the external events data used for training the model
--   version. This will be populated if the <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>
[$sel:externalEventsDetail:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe ExternalEventsDetail

-- | The details of the ingested events data used for training the model
--   version. This will be populated if the <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
[$sel:ingestedEventsDetail:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe IngestedEventsDetail

-- | The model version number.
[$sel:modelVersionNumber:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe Text

-- | The training data schema.
[$sel:trainingDataSchema:GetModelVersionResponse'] :: GetModelVersionResponse -> Maybe TrainingDataSchema

-- | The response's http status code.
[$sel:httpStatus:GetModelVersionResponse'] :: GetModelVersionResponse -> Int

-- | Create a value of <a>GetModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_status</a> - The model version status.
--   
--   Possible values are:
--   
--   <ul>
--   <li><pre>TRAINING_IN_PROGRESS</pre></li>
--   <li><pre>TRAINING_COMPLETE</pre></li>
--   <li><pre>ACTIVATE_REQUESTED</pre></li>
--   <li><pre>ACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>ACTIVE</pre></li>
--   <li><pre>INACTIVATE_REQUESTED</pre></li>
--   <li><pre>INACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>INACTIVE</pre></li>
--   <li><pre>ERROR</pre></li>
--   </ul>
--   
--   <a>$sel:modelType:GetModelVersion'</a>,
--   <a>getModelVersionResponse_modelType</a> - The model type.
--   
--   <a>$sel:modelId:GetModelVersion'</a>,
--   <a>getModelVersionResponse_modelId</a> - The model ID.
--   
--   <a>$sel:arn:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_arn</a> - The model version ARN.
--   
--   <a>$sel:trainingDataSource:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_trainingDataSource</a> - The training data
--   source.
--   
--   <a>$sel:externalEventsDetail:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_externalEventsDetail</a> - The details of
--   the external events data used for training the model version. This
--   will be populated if the <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>
--   
--   <a>$sel:ingestedEventsDetail:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_ingestedEventsDetail</a> - The details of
--   the ingested events data used for training the model version. This
--   will be populated if the <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:modelVersionNumber:GetModelVersion'</a>,
--   <a>getModelVersionResponse_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:trainingDataSchema:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_trainingDataSchema</a> - The training data
--   schema.
--   
--   <a>$sel:httpStatus:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_httpStatus</a> - The response's http status
--   code.
newGetModelVersionResponse :: Int -> GetModelVersionResponse

-- | The model version status.
--   
--   Possible values are:
--   
--   <ul>
--   <li><pre>TRAINING_IN_PROGRESS</pre></li>
--   <li><pre>TRAINING_COMPLETE</pre></li>
--   <li><pre>ACTIVATE_REQUESTED</pre></li>
--   <li><pre>ACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>ACTIVE</pre></li>
--   <li><pre>INACTIVATE_REQUESTED</pre></li>
--   <li><pre>INACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>INACTIVE</pre></li>
--   <li><pre>ERROR</pre></li>
--   </ul>
getModelVersionResponse_status :: Lens' GetModelVersionResponse (Maybe Text)

-- | The model type.
getModelVersionResponse_modelType :: Lens' GetModelVersionResponse (Maybe ModelTypeEnum)

-- | The model ID.
getModelVersionResponse_modelId :: Lens' GetModelVersionResponse (Maybe Text)

-- | The model version ARN.
getModelVersionResponse_arn :: Lens' GetModelVersionResponse (Maybe Text)

-- | The training data source.
getModelVersionResponse_trainingDataSource :: Lens' GetModelVersionResponse (Maybe TrainingDataSourceEnum)

-- | The details of the external events data used for training the model
--   version. This will be populated if the <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>
getModelVersionResponse_externalEventsDetail :: Lens' GetModelVersionResponse (Maybe ExternalEventsDetail)

-- | The details of the ingested events data used for training the model
--   version. This will be populated if the <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
getModelVersionResponse_ingestedEventsDetail :: Lens' GetModelVersionResponse (Maybe IngestedEventsDetail)

-- | The model version number.
getModelVersionResponse_modelVersionNumber :: Lens' GetModelVersionResponse (Maybe Text)

-- | The training data schema.
getModelVersionResponse_trainingDataSchema :: Lens' GetModelVersionResponse (Maybe TrainingDataSchema)

-- | The response's http status code.
getModelVersionResponse_httpStatus :: Lens' GetModelVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance GHC.Show.Show Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance GHC.Read.Read Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetModelVersion.GetModelVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetModelVersion.GetModelVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetModelVersion.GetModelVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetModelVersion.GetModelVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetModelVersion.GetModelVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetModelVersion.GetModelVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetModelVersion.GetModelVersion


-- | Gets all labels or a specific label if name is provided. This is a
--   paginated API. If you provide a null <tt>maxResults</tt>, this action
--   retrieves a maximum of 50 records per page. If you provide a
--   <tt>maxResults</tt>, the value must be between 10 and 50. To get the
--   next page results, provide the pagination token from the
--   <tt>GetGetLabelsResponse</tt> as part of your request. A null
--   pagination token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetLabels

-- | <i>See:</i> <a>newGetLabels</a> smart constructor.
data GetLabels
GetLabels' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetLabels

-- | The next token for the subsequent request.
[$sel:nextToken:GetLabels'] :: GetLabels -> Maybe Text

-- | The name of the label or labels to get.
[$sel:name:GetLabels'] :: GetLabels -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetLabels'] :: GetLabels -> Maybe Natural

-- | Create a value of <a>GetLabels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetLabels'</a>, <a>getLabels_nextToken</a> - The
--   next token for the subsequent request.
--   
--   <a>$sel:name:GetLabels'</a>, <a>getLabels_name</a> - The name of the
--   label or labels to get.
--   
--   <a>$sel:maxResults:GetLabels'</a>, <a>getLabels_maxResults</a> - The
--   maximum number of objects to return for the request.
newGetLabels :: GetLabels

-- | The next token for the subsequent request.
getLabels_nextToken :: Lens' GetLabels (Maybe Text)

-- | The name of the label or labels to get.
getLabels_name :: Lens' GetLabels (Maybe Text)

-- | The maximum number of objects to return for the request.
getLabels_maxResults :: Lens' GetLabels (Maybe Natural)

-- | <i>See:</i> <a>newGetLabelsResponse</a> smart constructor.
data GetLabelsResponse
GetLabelsResponse' :: Maybe Text -> Maybe [Label] -> Int -> GetLabelsResponse

-- | The next page token.
[$sel:nextToken:GetLabelsResponse'] :: GetLabelsResponse -> Maybe Text

-- | An array of labels.
[$sel:labels:GetLabelsResponse'] :: GetLabelsResponse -> Maybe [Label]

-- | The response's http status code.
[$sel:httpStatus:GetLabelsResponse'] :: GetLabelsResponse -> Int

-- | Create a value of <a>GetLabelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetLabels'</a>, <a>getLabelsResponse_nextToken</a> -
--   The next page token.
--   
--   <a>$sel:labels:GetLabelsResponse'</a>, <a>getLabelsResponse_labels</a>
--   - An array of labels.
--   
--   <a>$sel:httpStatus:GetLabelsResponse'</a>,
--   <a>getLabelsResponse_httpStatus</a> - The response's http status code.
newGetLabelsResponse :: Int -> GetLabelsResponse

-- | The next page token.
getLabelsResponse_nextToken :: Lens' GetLabelsResponse (Maybe Text)

-- | An array of labels.
getLabelsResponse_labels :: Lens' GetLabelsResponse (Maybe [Label])

-- | The response's http status code.
getLabelsResponse_httpStatus :: Lens' GetLabelsResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetLabels.GetLabels
instance GHC.Show.Show Network.AWS.FraudDetector.GetLabels.GetLabels
instance GHC.Read.Read Network.AWS.FraudDetector.GetLabels.GetLabels
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetLabels.GetLabels
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetLabels.GetLabelsResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetLabels.GetLabelsResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetLabels.GetLabelsResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetLabels.GetLabelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetLabels.GetLabels
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetLabels.GetLabelsResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetLabels.GetLabels
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetLabels.GetLabels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetLabels.GetLabels
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetLabels.GetLabels
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetLabels.GetLabels
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetLabels.GetLabels


-- | Gets the encryption key if a KMS key has been specified to be used to
--   encrypt content in Amazon Fraud Detector.
module Network.AWS.FraudDetector.GetKMSEncryptionKey

-- | <i>See:</i> <a>newGetKMSEncryptionKey</a> smart constructor.
data GetKMSEncryptionKey
GetKMSEncryptionKey' :: GetKMSEncryptionKey

-- | Create a value of <a>GetKMSEncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetKMSEncryptionKey :: GetKMSEncryptionKey

-- | <i>See:</i> <a>newGetKMSEncryptionKeyResponse</a> smart constructor.
data GetKMSEncryptionKeyResponse
GetKMSEncryptionKeyResponse' :: Maybe KMSKey -> Int -> GetKMSEncryptionKeyResponse

-- | The KMS encryption key.
[$sel:kmsKey:GetKMSEncryptionKeyResponse'] :: GetKMSEncryptionKeyResponse -> Maybe KMSKey

-- | The response's http status code.
[$sel:httpStatus:GetKMSEncryptionKeyResponse'] :: GetKMSEncryptionKeyResponse -> Int

-- | Create a value of <a>GetKMSEncryptionKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKey:GetKMSEncryptionKeyResponse'</a>,
--   <a>getKMSEncryptionKeyResponse_kmsKey</a> - The KMS encryption key.
--   
--   <a>$sel:httpStatus:GetKMSEncryptionKeyResponse'</a>,
--   <a>getKMSEncryptionKeyResponse_httpStatus</a> - The response's http
--   status code.
newGetKMSEncryptionKeyResponse :: Int -> GetKMSEncryptionKeyResponse

-- | The KMS encryption key.
getKMSEncryptionKeyResponse_kmsKey :: Lens' GetKMSEncryptionKeyResponse (Maybe KMSKey)

-- | The response's http status code.
getKMSEncryptionKeyResponse_httpStatus :: Lens' GetKMSEncryptionKeyResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance GHC.Show.Show Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance GHC.Read.Read Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKeyResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKeyResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKeyResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetKMSEncryptionKey.GetKMSEncryptionKey


-- | Gets the details for one or more Amazon SageMaker models that have
--   been imported into the service. This is a paginated API. If you
--   provide a null <tt>maxResults</tt>, this actions retrieves a maximum
--   of 10 records per page. If you provide a <tt>maxResults</tt>, the
--   value must be between 5 and 10. To get the next page results, provide
--   the pagination token from the <tt>GetExternalModelsResult</tt> as part
--   of your request. A null pagination token fetches the records from the
--   beginning.
module Network.AWS.FraudDetector.GetExternalModels

-- | <i>See:</i> <a>newGetExternalModels</a> smart constructor.
data GetExternalModels
GetExternalModels' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetExternalModels

-- | The Amazon SageMaker model endpoint.
[$sel:modelEndpoint:GetExternalModels'] :: GetExternalModels -> Maybe Text

-- | The next page token for the request.
[$sel:nextToken:GetExternalModels'] :: GetExternalModels -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetExternalModels'] :: GetExternalModels -> Maybe Natural

-- | Create a value of <a>GetExternalModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:GetExternalModels'</a>,
--   <a>getExternalModels_modelEndpoint</a> - The Amazon SageMaker model
--   endpoint.
--   
--   <a>$sel:nextToken:GetExternalModels'</a>,
--   <a>getExternalModels_nextToken</a> - The next page token for the
--   request.
--   
--   <a>$sel:maxResults:GetExternalModels'</a>,
--   <a>getExternalModels_maxResults</a> - The maximum number of objects to
--   return for the request.
newGetExternalModels :: GetExternalModels

-- | The Amazon SageMaker model endpoint.
getExternalModels_modelEndpoint :: Lens' GetExternalModels (Maybe Text)

-- | The next page token for the request.
getExternalModels_nextToken :: Lens' GetExternalModels (Maybe Text)

-- | The maximum number of objects to return for the request.
getExternalModels_maxResults :: Lens' GetExternalModels (Maybe Natural)

-- | <i>See:</i> <a>newGetExternalModelsResponse</a> smart constructor.
data GetExternalModelsResponse
GetExternalModelsResponse' :: Maybe Text -> Maybe [ExternalModel] -> Int -> GetExternalModelsResponse

-- | The next page token to be used in subsequent requests.
[$sel:nextToken:GetExternalModelsResponse'] :: GetExternalModelsResponse -> Maybe Text

-- | Gets the Amazon SageMaker models.
[$sel:externalModels:GetExternalModelsResponse'] :: GetExternalModelsResponse -> Maybe [ExternalModel]

-- | The response's http status code.
[$sel:httpStatus:GetExternalModelsResponse'] :: GetExternalModelsResponse -> Int

-- | Create a value of <a>GetExternalModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetExternalModels'</a>,
--   <a>getExternalModelsResponse_nextToken</a> - The next page token to be
--   used in subsequent requests.
--   
--   <a>$sel:externalModels:GetExternalModelsResponse'</a>,
--   <a>getExternalModelsResponse_externalModels</a> - Gets the Amazon
--   SageMaker models.
--   
--   <a>$sel:httpStatus:GetExternalModelsResponse'</a>,
--   <a>getExternalModelsResponse_httpStatus</a> - The response's http
--   status code.
newGetExternalModelsResponse :: Int -> GetExternalModelsResponse

-- | The next page token to be used in subsequent requests.
getExternalModelsResponse_nextToken :: Lens' GetExternalModelsResponse (Maybe Text)

-- | Gets the Amazon SageMaker models.
getExternalModelsResponse_externalModels :: Lens' GetExternalModelsResponse (Maybe [ExternalModel])

-- | The response's http status code.
getExternalModelsResponse_httpStatus :: Lens' GetExternalModelsResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance GHC.Show.Show Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance GHC.Read.Read Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetExternalModels.GetExternalModelsResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetExternalModels.GetExternalModelsResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetExternalModels.GetExternalModelsResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetExternalModels.GetExternalModelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetExternalModels.GetExternalModelsResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetExternalModels.GetExternalModels
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetExternalModels.GetExternalModels


-- | Gets all event types or a specific event type if name is provided.
--   This is a paginated API. If you provide a null <tt>maxResults</tt>,
--   this action retrieves a maximum of 10 records per page. If you provide
--   a <tt>maxResults</tt>, the value must be between 5 and 10. To get the
--   next page results, provide the pagination token from the
--   <tt>GetEventTypesResponse</tt> as part of your request. A null
--   pagination token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetEventTypes

-- | <i>See:</i> <a>newGetEventTypes</a> smart constructor.
data GetEventTypes
GetEventTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetEventTypes

-- | The next token for the subsequent request.
[$sel:nextToken:GetEventTypes'] :: GetEventTypes -> Maybe Text

-- | The name.
[$sel:name:GetEventTypes'] :: GetEventTypes -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetEventTypes'] :: GetEventTypes -> Maybe Natural

-- | Create a value of <a>GetEventTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEventTypes'</a>, <a>getEventTypes_nextToken</a> -
--   The next token for the subsequent request.
--   
--   <a>$sel:name:GetEventTypes'</a>, <a>getEventTypes_name</a> - The name.
--   
--   <a>$sel:maxResults:GetEventTypes'</a>, <a>getEventTypes_maxResults</a>
--   - The maximum number of objects to return for the request.
newGetEventTypes :: GetEventTypes

-- | The next token for the subsequent request.
getEventTypes_nextToken :: Lens' GetEventTypes (Maybe Text)

-- | The name.
getEventTypes_name :: Lens' GetEventTypes (Maybe Text)

-- | The maximum number of objects to return for the request.
getEventTypes_maxResults :: Lens' GetEventTypes (Maybe Natural)

-- | <i>See:</i> <a>newGetEventTypesResponse</a> smart constructor.
data GetEventTypesResponse
GetEventTypesResponse' :: Maybe [Sensitive EventType] -> Maybe Text -> Int -> GetEventTypesResponse

-- | An array of event types.
[$sel:eventTypes:GetEventTypesResponse'] :: GetEventTypesResponse -> Maybe [Sensitive EventType]

-- | The next page token.
[$sel:nextToken:GetEventTypesResponse'] :: GetEventTypesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetEventTypesResponse'] :: GetEventTypesResponse -> Int

-- | Create a value of <a>GetEventTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypes:GetEventTypesResponse'</a>,
--   <a>getEventTypesResponse_eventTypes</a> - An array of event types.
--   
--   <a>$sel:nextToken:GetEventTypes'</a>,
--   <a>getEventTypesResponse_nextToken</a> - The next page token.
--   
--   <a>$sel:httpStatus:GetEventTypesResponse'</a>,
--   <a>getEventTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetEventTypesResponse :: Int -> GetEventTypesResponse

-- | An array of event types.
getEventTypesResponse_eventTypes :: Lens' GetEventTypesResponse (Maybe [EventType])

-- | The next page token.
getEventTypesResponse_nextToken :: Lens' GetEventTypesResponse (Maybe Text)

-- | The response's http status code.
getEventTypesResponse_httpStatus :: Lens' GetEventTypesResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance GHC.Show.Show Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance GHC.Read.Read Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEventTypes.GetEventTypesResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetEventTypes.GetEventTypesResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEventTypes.GetEventTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEventTypes.GetEventTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetEventTypes.GetEventTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetEventTypes.GetEventTypes


-- | Evaluates an event against a detector version. If a version ID is not
--   provided, the detector’s (<tt>ACTIVE</tt>) version is used.
module Network.AWS.FraudDetector.GetEventPrediction

-- | <i>See:</i> <a>newGetEventPrediction</a> smart constructor.
data GetEventPrediction
GetEventPrediction' :: Maybe Text -> Maybe (Sensitive (HashMap Text ModelEndpointDataBlob)) -> Text -> Text -> Text -> [Sensitive Entity] -> Text -> HashMap Text (Sensitive Text) -> GetEventPrediction

-- | The detector version ID.
[$sel:detectorVersionId:GetEventPrediction'] :: GetEventPrediction -> Maybe Text

-- | The Amazon SageMaker model endpoint input data blobs.
[$sel:externalModelEndpointDataBlobs:GetEventPrediction'] :: GetEventPrediction -> Maybe (Sensitive (HashMap Text ModelEndpointDataBlob))

-- | The detector ID.
[$sel:detectorId:GetEventPrediction'] :: GetEventPrediction -> Text

-- | The unique ID used to identify the event.
[$sel:eventId:GetEventPrediction'] :: GetEventPrediction -> Text

-- | The event type associated with the detector specified for the
--   prediction.
[$sel:eventTypeName:GetEventPrediction'] :: GetEventPrediction -> Text

-- | The entity type (associated with the detector's event type) and
--   specific entity ID representing who performed the event. If an entity
--   id is not available, use "UNKNOWN."
[$sel:entities:GetEventPrediction'] :: GetEventPrediction -> [Sensitive Entity]

-- | Timestamp that defines when the event under evaluation occurred. The
--   timestamp must be specified using ISO 8601 standard in UTC.
[$sel:eventTimestamp:GetEventPrediction'] :: GetEventPrediction -> Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
--   
--   You must provide at least one eventVariable
--   
--   To ensure most accurate fraud prediction and to simplify your data
--   preparation, Amazon Fraud Detector will replace all missing variables
--   or values as follows:
--   
--   <b>For Amazon Fraud Detector trained models:</b>
--   
--   If a null value is provided explicitly for a variable or if a variable
--   is missing, model will replace the null value or the missing variable
--   (no variable name in the eventVariables map) with calculated default
--   mean/medians for numeric variables and with special values for
--   categorical variables.
--   
--   <b>For imported SageMaker models:</b>
--   
--   If a null value is provided explicitly for a variable, the model and
--   rules will use “null” as the value. If a variable is not provided (no
--   variable name in the eventVariables map), model and rules will use the
--   default value that is provided for the variable.
[$sel:eventVariables:GetEventPrediction'] :: GetEventPrediction -> HashMap Text (Sensitive Text)

-- | Create a value of <a>GetEventPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorVersionId:GetEventPrediction'</a>,
--   <a>getEventPrediction_detectorVersionId</a> - The detector version ID.
--   
--   <a>$sel:externalModelEndpointDataBlobs:GetEventPrediction'</a>,
--   <a>getEventPrediction_externalModelEndpointDataBlobs</a> - The Amazon
--   SageMaker model endpoint input data blobs.
--   
--   <a>$sel:detectorId:GetEventPrediction'</a>,
--   <a>getEventPrediction_detectorId</a> - The detector ID.
--   
--   <a>$sel:eventId:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventId</a> - The unique ID used to identify the
--   event.
--   
--   <a>$sel:eventTypeName:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventTypeName</a> - The event type associated
--   with the detector specified for the prediction.
--   
--   <a>$sel:entities:GetEventPrediction'</a>,
--   <a>getEventPrediction_entities</a> - The entity type (associated with
--   the detector's event type) and specific entity ID representing who
--   performed the event. If an entity id is not available, use "UNKNOWN."
--   
--   <a>$sel:eventTimestamp:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventTimestamp</a> - Timestamp that defines when
--   the event under evaluation occurred. The timestamp must be specified
--   using ISO 8601 standard in UTC.
--   
--   <a>$sel:eventVariables:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventVariables</a> - Names of the event type's
--   variables you defined in Amazon Fraud Detector to represent data
--   elements and their corresponding values for the event you are sending
--   for evaluation.
--   
--   You must provide at least one eventVariable
--   
--   To ensure most accurate fraud prediction and to simplify your data
--   preparation, Amazon Fraud Detector will replace all missing variables
--   or values as follows:
--   
--   <b>For Amazon Fraud Detector trained models:</b>
--   
--   If a null value is provided explicitly for a variable or if a variable
--   is missing, model will replace the null value or the missing variable
--   (no variable name in the eventVariables map) with calculated default
--   mean/medians for numeric variables and with special values for
--   categorical variables.
--   
--   <b>For imported SageMaker models:</b>
--   
--   If a null value is provided explicitly for a variable, the model and
--   rules will use “null” as the value. If a variable is not provided (no
--   variable name in the eventVariables map), model and rules will use the
--   default value that is provided for the variable.
newGetEventPrediction :: Text -> Text -> Text -> Text -> GetEventPrediction

-- | The detector version ID.
getEventPrediction_detectorVersionId :: Lens' GetEventPrediction (Maybe Text)

-- | The Amazon SageMaker model endpoint input data blobs.
getEventPrediction_externalModelEndpointDataBlobs :: Lens' GetEventPrediction (Maybe (HashMap Text ModelEndpointDataBlob))

-- | The detector ID.
getEventPrediction_detectorId :: Lens' GetEventPrediction Text

-- | The unique ID used to identify the event.
getEventPrediction_eventId :: Lens' GetEventPrediction Text

-- | The event type associated with the detector specified for the
--   prediction.
getEventPrediction_eventTypeName :: Lens' GetEventPrediction Text

-- | The entity type (associated with the detector's event type) and
--   specific entity ID representing who performed the event. If an entity
--   id is not available, use "UNKNOWN."
getEventPrediction_entities :: Lens' GetEventPrediction [Entity]

-- | Timestamp that defines when the event under evaluation occurred. The
--   timestamp must be specified using ISO 8601 standard in UTC.
getEventPrediction_eventTimestamp :: Lens' GetEventPrediction Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
--   
--   You must provide at least one eventVariable
--   
--   To ensure most accurate fraud prediction and to simplify your data
--   preparation, Amazon Fraud Detector will replace all missing variables
--   or values as follows:
--   
--   <b>For Amazon Fraud Detector trained models:</b>
--   
--   If a null value is provided explicitly for a variable or if a variable
--   is missing, model will replace the null value or the missing variable
--   (no variable name in the eventVariables map) with calculated default
--   mean/medians for numeric variables and with special values for
--   categorical variables.
--   
--   <b>For imported SageMaker models:</b>
--   
--   If a null value is provided explicitly for a variable, the model and
--   rules will use “null” as the value. If a variable is not provided (no
--   variable name in the eventVariables map), model and rules will use the
--   default value that is provided for the variable.
getEventPrediction_eventVariables :: Lens' GetEventPrediction (HashMap Text Text)

-- | <i>See:</i> <a>newGetEventPredictionResponse</a> smart constructor.
data GetEventPredictionResponse
GetEventPredictionResponse' :: Maybe [ModelScores] -> Maybe [ExternalModelOutputs] -> Maybe [RuleResult] -> Int -> GetEventPredictionResponse

-- | The model scores. Amazon Fraud Detector generates model scores between
--   0 and 1000, where 0 is low fraud risk and 1000 is high fraud risk.
--   Model scores are directly related to the false positive rate (FPR).
--   For example, a score of 600 corresponds to an estimated 10% false
--   positive rate whereas a score of 900 corresponds to an estimated 2%
--   false positive rate.
[$sel:modelScores:GetEventPredictionResponse'] :: GetEventPredictionResponse -> Maybe [ModelScores]

-- | The model scores for Amazon SageMaker models.
[$sel:externalModelOutputs:GetEventPredictionResponse'] :: GetEventPredictionResponse -> Maybe [ExternalModelOutputs]

-- | The results from the rules.
[$sel:ruleResults:GetEventPredictionResponse'] :: GetEventPredictionResponse -> Maybe [RuleResult]

-- | The response's http status code.
[$sel:httpStatus:GetEventPredictionResponse'] :: GetEventPredictionResponse -> Int

-- | Create a value of <a>GetEventPredictionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelScores:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_modelScores</a> - The model scores.
--   Amazon Fraud Detector generates model scores between 0 and 1000, where
--   0 is low fraud risk and 1000 is high fraud risk. Model scores are
--   directly related to the false positive rate (FPR). For example, a
--   score of 600 corresponds to an estimated 10% false positive rate
--   whereas a score of 900 corresponds to an estimated 2% false positive
--   rate.
--   
--   <a>$sel:externalModelOutputs:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_externalModelOutputs</a> - The model
--   scores for Amazon SageMaker models.
--   
--   <a>$sel:ruleResults:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_ruleResults</a> - The results from the
--   rules.
--   
--   <a>$sel:httpStatus:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_httpStatus</a> - The response's http
--   status code.
newGetEventPredictionResponse :: Int -> GetEventPredictionResponse

-- | The model scores. Amazon Fraud Detector generates model scores between
--   0 and 1000, where 0 is low fraud risk and 1000 is high fraud risk.
--   Model scores are directly related to the false positive rate (FPR).
--   For example, a score of 600 corresponds to an estimated 10% false
--   positive rate whereas a score of 900 corresponds to an estimated 2%
--   false positive rate.
getEventPredictionResponse_modelScores :: Lens' GetEventPredictionResponse (Maybe [ModelScores])

-- | The model scores for Amazon SageMaker models.
getEventPredictionResponse_externalModelOutputs :: Lens' GetEventPredictionResponse (Maybe [ExternalModelOutputs])

-- | The results from the rules.
getEventPredictionResponse_ruleResults :: Lens' GetEventPredictionResponse (Maybe [RuleResult])

-- | The response's http status code.
getEventPredictionResponse_httpStatus :: Lens' GetEventPredictionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance GHC.Show.Show Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEventPrediction.GetEventPredictionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetEventPrediction.GetEventPredictionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetEventPrediction.GetEventPredictionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEventPrediction.GetEventPredictionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEventPrediction.GetEventPredictionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetEventPrediction.GetEventPrediction


-- | Retrieves details of events stored with Amazon Fraud Detector. This
--   action does not retrieve prediction results.
module Network.AWS.FraudDetector.GetEvent

-- | <i>See:</i> <a>newGetEvent</a> smart constructor.
data GetEvent
GetEvent' :: Text -> Text -> GetEvent

-- | The ID of the event to retrieve.
[$sel:eventId:GetEvent'] :: GetEvent -> Text

-- | The event type of the event to retrieve.
[$sel:eventTypeName:GetEvent'] :: GetEvent -> Text

-- | Create a value of <a>GetEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventId:GetEvent'</a>, <a>getEvent_eventId</a> - The ID of the
--   event to retrieve.
--   
--   <a>$sel:eventTypeName:GetEvent'</a>, <a>getEvent_eventTypeName</a> -
--   The event type of the event to retrieve.
newGetEvent :: Text -> Text -> GetEvent

-- | The ID of the event to retrieve.
getEvent_eventId :: Lens' GetEvent Text

-- | The event type of the event to retrieve.
getEvent_eventTypeName :: Lens' GetEvent Text

-- | <i>See:</i> <a>newGetEventResponse</a> smart constructor.
data GetEventResponse
GetEventResponse' :: Maybe Event -> Int -> GetEventResponse

-- | The details of the event.
[$sel:event:GetEventResponse'] :: GetEventResponse -> Maybe Event

-- | The response's http status code.
[$sel:httpStatus:GetEventResponse'] :: GetEventResponse -> Int

-- | Create a value of <a>GetEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:GetEventResponse'</a>, <a>getEventResponse_event</a> -
--   The details of the event.
--   
--   <a>$sel:httpStatus:GetEventResponse'</a>,
--   <a>getEventResponse_httpStatus</a> - The response's http status code.
newGetEventResponse :: Int -> GetEventResponse

-- | The details of the event.
getEventResponse_event :: Lens' GetEventResponse (Maybe Event)

-- | The response's http status code.
getEventResponse_httpStatus :: Lens' GetEventResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEvent.GetEvent
instance GHC.Show.Show Network.AWS.FraudDetector.GetEvent.GetEvent
instance GHC.Read.Read Network.AWS.FraudDetector.GetEvent.GetEvent
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEvent.GetEvent
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEvent.GetEventResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetEvent.GetEventResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEvent.GetEventResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetEvent.GetEvent
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEvent.GetEventResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetEvent.GetEvent
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEvent.GetEvent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetEvent.GetEvent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetEvent.GetEvent
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetEvent.GetEvent
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetEvent.GetEvent


-- | Gets all entity types or a specific entity type if a name is
--   specified. This is a paginated API. If you provide a null
--   <tt>maxResults</tt>, this action retrieves a maximum of 10 records per
--   page. If you provide a <tt>maxResults</tt>, the value must be between
--   5 and 10. To get the next page results, provide the pagination token
--   from the <tt>GetEntityTypesResponse</tt> as part of your request. A
--   null pagination token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetEntityTypes

-- | <i>See:</i> <a>newGetEntityTypes</a> smart constructor.
data GetEntityTypes
GetEntityTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetEntityTypes

-- | The next token for the subsequent request.
[$sel:nextToken:GetEntityTypes'] :: GetEntityTypes -> Maybe Text

-- | The name.
[$sel:name:GetEntityTypes'] :: GetEntityTypes -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetEntityTypes'] :: GetEntityTypes -> Maybe Natural

-- | Create a value of <a>GetEntityTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEntityTypes'</a>, <a>getEntityTypes_nextToken</a>
--   - The next token for the subsequent request.
--   
--   <a>$sel:name:GetEntityTypes'</a>, <a>getEntityTypes_name</a> - The
--   name.
--   
--   <a>$sel:maxResults:GetEntityTypes'</a>,
--   <a>getEntityTypes_maxResults</a> - The maximum number of objects to
--   return for the request.
newGetEntityTypes :: GetEntityTypes

-- | The next token for the subsequent request.
getEntityTypes_nextToken :: Lens' GetEntityTypes (Maybe Text)

-- | The name.
getEntityTypes_name :: Lens' GetEntityTypes (Maybe Text)

-- | The maximum number of objects to return for the request.
getEntityTypes_maxResults :: Lens' GetEntityTypes (Maybe Natural)

-- | <i>See:</i> <a>newGetEntityTypesResponse</a> smart constructor.
data GetEntityTypesResponse
GetEntityTypesResponse' :: Maybe [EntityType] -> Maybe Text -> Int -> GetEntityTypesResponse

-- | An array of entity types.
[$sel:entityTypes:GetEntityTypesResponse'] :: GetEntityTypesResponse -> Maybe [EntityType]

-- | The next page token.
[$sel:nextToken:GetEntityTypesResponse'] :: GetEntityTypesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetEntityTypesResponse'] :: GetEntityTypesResponse -> Int

-- | Create a value of <a>GetEntityTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityTypes:GetEntityTypesResponse'</a>,
--   <a>getEntityTypesResponse_entityTypes</a> - An array of entity types.
--   
--   <a>$sel:nextToken:GetEntityTypes'</a>,
--   <a>getEntityTypesResponse_nextToken</a> - The next page token.
--   
--   <a>$sel:httpStatus:GetEntityTypesResponse'</a>,
--   <a>getEntityTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetEntityTypesResponse :: Int -> GetEntityTypesResponse

-- | An array of entity types.
getEntityTypesResponse_entityTypes :: Lens' GetEntityTypesResponse (Maybe [EntityType])

-- | The next page token.
getEntityTypesResponse_nextToken :: Lens' GetEntityTypesResponse (Maybe Text)

-- | The response's http status code.
getEntityTypesResponse_httpStatus :: Lens' GetEntityTypesResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance GHC.Show.Show Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance GHC.Read.Read Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypesResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypesResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypesResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetEntityTypes.GetEntityTypes


-- | Gets all detectors or a single detector if a <tt>detectorId</tt> is
--   specified. This is a paginated API. If you provide a null
--   <tt>maxResults</tt>, this action retrieves a maximum of 10 records per
--   page. If you provide a <tt>maxResults</tt>, the value must be between
--   5 and 10. To get the next page results, provide the pagination token
--   from the <tt>GetDetectorsResponse</tt> as part of your request. A null
--   pagination token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetDetectors

-- | <i>See:</i> <a>newGetDetectors</a> smart constructor.
data GetDetectors
GetDetectors' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetDetectors

-- | The next token for the subsequent request.
[$sel:nextToken:GetDetectors'] :: GetDetectors -> Maybe Text

-- | The detector ID.
[$sel:detectorId:GetDetectors'] :: GetDetectors -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetDetectors'] :: GetDetectors -> Maybe Natural

-- | Create a value of <a>GetDetectors</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectors'</a>, <a>getDetectors_nextToken</a> -
--   The next token for the subsequent request.
--   
--   <a>$sel:detectorId:GetDetectors'</a>, <a>getDetectors_detectorId</a> -
--   The detector ID.
--   
--   <a>$sel:maxResults:GetDetectors'</a>, <a>getDetectors_maxResults</a> -
--   The maximum number of objects to return for the request.
newGetDetectors :: GetDetectors

-- | The next token for the subsequent request.
getDetectors_nextToken :: Lens' GetDetectors (Maybe Text)

-- | The detector ID.
getDetectors_detectorId :: Lens' GetDetectors (Maybe Text)

-- | The maximum number of objects to return for the request.
getDetectors_maxResults :: Lens' GetDetectors (Maybe Natural)

-- | <i>See:</i> <a>newGetDetectorsResponse</a> smart constructor.
data GetDetectorsResponse
GetDetectorsResponse' :: Maybe Text -> Maybe [Detector] -> Int -> GetDetectorsResponse

-- | The next page token.
[$sel:nextToken:GetDetectorsResponse'] :: GetDetectorsResponse -> Maybe Text

-- | The detectors.
[$sel:detectors:GetDetectorsResponse'] :: GetDetectorsResponse -> Maybe [Detector]

-- | The response's http status code.
[$sel:httpStatus:GetDetectorsResponse'] :: GetDetectorsResponse -> Int

-- | Create a value of <a>GetDetectorsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectors'</a>,
--   <a>getDetectorsResponse_nextToken</a> - The next page token.
--   
--   <a>$sel:detectors:GetDetectorsResponse'</a>,
--   <a>getDetectorsResponse_detectors</a> - The detectors.
--   
--   <a>$sel:httpStatus:GetDetectorsResponse'</a>,
--   <a>getDetectorsResponse_httpStatus</a> - The response's http status
--   code.
newGetDetectorsResponse :: Int -> GetDetectorsResponse

-- | The next page token.
getDetectorsResponse_nextToken :: Lens' GetDetectorsResponse (Maybe Text)

-- | The detectors.
getDetectorsResponse_detectors :: Lens' GetDetectorsResponse (Maybe [Detector])

-- | The response's http status code.
getDetectorsResponse_httpStatus :: Lens' GetDetectorsResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance GHC.Show.Show Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance GHC.Read.Read Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetDetectors.GetDetectorsResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetDetectors.GetDetectorsResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetDetectors.GetDetectorsResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetDetectors.GetDetectorsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetDetectors.GetDetectorsResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetDetectors.GetDetectors
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetDetectors.GetDetectors


-- | Gets a particular detector version.
module Network.AWS.FraudDetector.GetDetectorVersion

-- | <i>See:</i> <a>newGetDetectorVersion</a> smart constructor.
data GetDetectorVersion
GetDetectorVersion' :: Text -> Text -> GetDetectorVersion

-- | The detector ID.
[$sel:detectorId:GetDetectorVersion'] :: GetDetectorVersion -> Text

-- | The detector version ID.
[$sel:detectorVersionId:GetDetectorVersion'] :: GetDetectorVersion -> Text

-- | Create a value of <a>GetDetectorVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:GetDetectorVersion'</a>,
--   <a>getDetectorVersion_detectorId</a> - The detector ID.
--   
--   <a>$sel:detectorVersionId:GetDetectorVersion'</a>,
--   <a>getDetectorVersion_detectorVersionId</a> - The detector version ID.
newGetDetectorVersion :: Text -> Text -> GetDetectorVersion

-- | The detector ID.
getDetectorVersion_detectorId :: Lens' GetDetectorVersion Text

-- | The detector version ID.
getDetectorVersion_detectorVersionId :: Lens' GetDetectorVersion Text

-- | <i>See:</i> <a>newGetDetectorVersionResponse</a> smart constructor.
data GetDetectorVersionResponse
GetDetectorVersionResponse' :: Maybe DetectorVersionStatus -> Maybe RuleExecutionMode -> Maybe Text -> Maybe Text -> Maybe [Rule] -> Maybe Text -> Maybe Text -> Maybe [ModelVersion] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> GetDetectorVersionResponse

-- | The status of the detector version.
[$sel:status:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe DetectorVersionStatus

-- | The execution mode of the rule in the dectector
--   
--   <tt>FIRST_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   <tt>ALL_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
[$sel:ruleExecutionMode:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe RuleExecutionMode

-- | The timestamp when the detector version was last updated.
[$sel:lastUpdatedTime:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe Text

-- | The detector version ARN.
[$sel:arn:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe Text

-- | The rules included in the detector version.
[$sel:rules:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe [Rule]

-- | The detector version ID.
[$sel:detectorVersionId:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe Text

-- | The timestamp when the detector version was created.
[$sel:createdTime:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe Text

-- | The model versions included in the detector version.
[$sel:modelVersions:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe [ModelVersion]

-- | The detector ID.
[$sel:detectorId:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe Text

-- | The Amazon SageMaker model endpoints included in the detector version.
[$sel:externalModelEndpoints:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe [Text]

-- | The detector version description.
[$sel:description:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDetectorVersionResponse'] :: GetDetectorVersionResponse -> Int

-- | Create a value of <a>GetDetectorVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_status</a> - The status of the detector
--   version.
--   
--   <a>$sel:ruleExecutionMode:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_ruleExecutionMode</a> - The execution
--   mode of the rule in the dectector
--   
--   <tt>FIRST_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   <tt>ALL_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
--   
--   <a>$sel:lastUpdatedTime:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_lastUpdatedTime</a> - The timestamp when
--   the detector version was last updated.
--   
--   <a>$sel:arn:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_arn</a> - The detector version ARN.
--   
--   <a>$sel:rules:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_rules</a> - The rules included in the
--   detector version.
--   
--   <a>$sel:detectorVersionId:GetDetectorVersion'</a>,
--   <a>getDetectorVersionResponse_detectorVersionId</a> - The detector
--   version ID.
--   
--   <a>$sel:createdTime:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_createdTime</a> - The timestamp when the
--   detector version was created.
--   
--   <a>$sel:modelVersions:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_modelVersions</a> - The model versions
--   included in the detector version.
--   
--   <a>$sel:detectorId:GetDetectorVersion'</a>,
--   <a>getDetectorVersionResponse_detectorId</a> - The detector ID.
--   
--   <a>$sel:externalModelEndpoints:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_externalModelEndpoints</a> - The Amazon
--   SageMaker model endpoints included in the detector version.
--   
--   <a>$sel:description:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_description</a> - The detector version
--   description.
--   
--   <a>$sel:httpStatus:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newGetDetectorVersionResponse :: Int -> GetDetectorVersionResponse

-- | The status of the detector version.
getDetectorVersionResponse_status :: Lens' GetDetectorVersionResponse (Maybe DetectorVersionStatus)

-- | The execution mode of the rule in the dectector
--   
--   <tt>FIRST_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   <tt>ALL_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
getDetectorVersionResponse_ruleExecutionMode :: Lens' GetDetectorVersionResponse (Maybe RuleExecutionMode)

-- | The timestamp when the detector version was last updated.
getDetectorVersionResponse_lastUpdatedTime :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The detector version ARN.
getDetectorVersionResponse_arn :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The rules included in the detector version.
getDetectorVersionResponse_rules :: Lens' GetDetectorVersionResponse (Maybe [Rule])

-- | The detector version ID.
getDetectorVersionResponse_detectorVersionId :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The timestamp when the detector version was created.
getDetectorVersionResponse_createdTime :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The model versions included in the detector version.
getDetectorVersionResponse_modelVersions :: Lens' GetDetectorVersionResponse (Maybe [ModelVersion])

-- | The detector ID.
getDetectorVersionResponse_detectorId :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The Amazon SageMaker model endpoints included in the detector version.
getDetectorVersionResponse_externalModelEndpoints :: Lens' GetDetectorVersionResponse (Maybe [Text])

-- | The detector version description.
getDetectorVersionResponse_description :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The response's http status code.
getDetectorVersionResponse_httpStatus :: Lens' GetDetectorVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance GHC.Show.Show Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance GHC.Read.Read Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetDetectorVersion.GetDetectorVersion


-- | Retrieves the status of a <tt>DeleteEventsByEventType</tt> action.
module Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus

-- | <i>See:</i> <a>newGetDeleteEventsByEventTypeStatus</a> smart
--   constructor.
data GetDeleteEventsByEventTypeStatus
GetDeleteEventsByEventTypeStatus' :: Text -> GetDeleteEventsByEventTypeStatus

-- | Name of event type for which to get the deletion status.
[$sel:eventTypeName:GetDeleteEventsByEventTypeStatus'] :: GetDeleteEventsByEventTypeStatus -> Text

-- | Create a value of <a>GetDeleteEventsByEventTypeStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:GetDeleteEventsByEventTypeStatus'</a>,
--   <a>getDeleteEventsByEventTypeStatus_eventTypeName</a> - Name of event
--   type for which to get the deletion status.
newGetDeleteEventsByEventTypeStatus :: Text -> GetDeleteEventsByEventTypeStatus

-- | Name of event type for which to get the deletion status.
getDeleteEventsByEventTypeStatus_eventTypeName :: Lens' GetDeleteEventsByEventTypeStatus Text

-- | <i>See:</i> <a>newGetDeleteEventsByEventTypeStatusResponse</a> smart
--   constructor.
data GetDeleteEventsByEventTypeStatusResponse
GetDeleteEventsByEventTypeStatusResponse' :: Maybe Text -> Maybe AsyncJobStatus -> Int -> GetDeleteEventsByEventTypeStatusResponse

-- | The event type name.
[$sel:eventTypeName:GetDeleteEventsByEventTypeStatusResponse'] :: GetDeleteEventsByEventTypeStatusResponse -> Maybe Text

-- | The deletion status.
[$sel:eventsDeletionStatus:GetDeleteEventsByEventTypeStatusResponse'] :: GetDeleteEventsByEventTypeStatusResponse -> Maybe AsyncJobStatus

-- | The response's http status code.
[$sel:httpStatus:GetDeleteEventsByEventTypeStatusResponse'] :: GetDeleteEventsByEventTypeStatusResponse -> Int

-- | Create a value of <a>GetDeleteEventsByEventTypeStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:GetDeleteEventsByEventTypeStatus'</a>,
--   <a>getDeleteEventsByEventTypeStatusResponse_eventTypeName</a> - The
--   event type name.
--   
--   
--   <a>$sel:eventsDeletionStatus:GetDeleteEventsByEventTypeStatusResponse'</a>,
--   <a>getDeleteEventsByEventTypeStatusResponse_eventsDeletionStatus</a> -
--   The deletion status.
--   
--   <a>$sel:httpStatus:GetDeleteEventsByEventTypeStatusResponse'</a>,
--   <a>getDeleteEventsByEventTypeStatusResponse_httpStatus</a> - The
--   response's http status code.
newGetDeleteEventsByEventTypeStatusResponse :: Int -> GetDeleteEventsByEventTypeStatusResponse

-- | The event type name.
getDeleteEventsByEventTypeStatusResponse_eventTypeName :: Lens' GetDeleteEventsByEventTypeStatusResponse (Maybe Text)

-- | The deletion status.
getDeleteEventsByEventTypeStatusResponse_eventsDeletionStatus :: Lens' GetDeleteEventsByEventTypeStatusResponse (Maybe AsyncJobStatus)

-- | The response's http status code.
getDeleteEventsByEventTypeStatusResponse_httpStatus :: Lens' GetDeleteEventsByEventTypeStatusResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance GHC.Show.Show Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance GHC.Read.Read Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatusResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatusResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatusResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetDeleteEventsByEventTypeStatus.GetDeleteEventsByEventTypeStatus


-- | Gets all batch prediction jobs or a specific job if you specify a job
--   ID. This is a paginated API. If you provide a null maxResults, this
--   action retrieves a maximum of 50 records per page. If you provide a
--   maxResults, the value must be between 1 and 50. To get the next page
--   results, provide the pagination token from the
--   GetBatchPredictionJobsResponse as part of your request. A null
--   pagination token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetBatchPredictionJobs

-- | <i>See:</i> <a>newGetBatchPredictionJobs</a> smart constructor.
data GetBatchPredictionJobs
GetBatchPredictionJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetBatchPredictionJobs

-- | The batch prediction job for which to get the details.
[$sel:jobId:GetBatchPredictionJobs'] :: GetBatchPredictionJobs -> Maybe Text

-- | The next token from the previous request.
[$sel:nextToken:GetBatchPredictionJobs'] :: GetBatchPredictionJobs -> Maybe Text

-- | The maximum number of objects to return for the request.
[$sel:maxResults:GetBatchPredictionJobs'] :: GetBatchPredictionJobs -> Maybe Natural

-- | Create a value of <a>GetBatchPredictionJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobs_jobId</a> - The batch prediction job for
--   which to get the details.
--   
--   <a>$sel:nextToken:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobs_nextToken</a> - The next token from the
--   previous request.
--   
--   <a>$sel:maxResults:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobs_maxResults</a> - The maximum number of
--   objects to return for the request.
newGetBatchPredictionJobs :: GetBatchPredictionJobs

-- | The batch prediction job for which to get the details.
getBatchPredictionJobs_jobId :: Lens' GetBatchPredictionJobs (Maybe Text)

-- | The next token from the previous request.
getBatchPredictionJobs_nextToken :: Lens' GetBatchPredictionJobs (Maybe Text)

-- | The maximum number of objects to return for the request.
getBatchPredictionJobs_maxResults :: Lens' GetBatchPredictionJobs (Maybe Natural)

-- | <i>See:</i> <a>newGetBatchPredictionJobsResponse</a> smart
--   constructor.
data GetBatchPredictionJobsResponse
GetBatchPredictionJobsResponse' :: Maybe [BatchPrediction] -> Maybe Text -> Int -> GetBatchPredictionJobsResponse

-- | An array containing the details of each batch prediction job.
[$sel:batchPredictions:GetBatchPredictionJobsResponse'] :: GetBatchPredictionJobsResponse -> Maybe [BatchPrediction]

-- | The next token for the subsequent request.
[$sel:nextToken:GetBatchPredictionJobsResponse'] :: GetBatchPredictionJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetBatchPredictionJobsResponse'] :: GetBatchPredictionJobsResponse -> Int

-- | Create a value of <a>GetBatchPredictionJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictions:GetBatchPredictionJobsResponse'</a>,
--   <a>getBatchPredictionJobsResponse_batchPredictions</a> - An array
--   containing the details of each batch prediction job.
--   
--   <a>$sel:nextToken:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobsResponse_nextToken</a> - The next token for
--   the subsequent request.
--   
--   <a>$sel:httpStatus:GetBatchPredictionJobsResponse'</a>,
--   <a>getBatchPredictionJobsResponse_httpStatus</a> - The response's http
--   status code.
newGetBatchPredictionJobsResponse :: Int -> GetBatchPredictionJobsResponse

-- | An array containing the details of each batch prediction job.
getBatchPredictionJobsResponse_batchPredictions :: Lens' GetBatchPredictionJobsResponse (Maybe [BatchPrediction])

-- | The next token for the subsequent request.
getBatchPredictionJobsResponse_nextToken :: Lens' GetBatchPredictionJobsResponse (Maybe Text)

-- | The response's http status code.
getBatchPredictionJobsResponse_httpStatus :: Lens' GetBatchPredictionJobsResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance GHC.Show.Show Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance GHC.Read.Read Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobsResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobsResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobsResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetBatchPredictionJobs.GetBatchPredictionJobs


-- | Gets all batch import jobs or a specific job of the specified ID. This
--   is a paginated API. If you provide a null <tt>maxResults</tt>, this
--   action retrieves a maximum of 50 records per page. If you provide a
--   <tt>maxResults</tt>, the value must be between 1 and 50. To get the
--   next page results, provide the pagination token from the
--   <tt>GetBatchImportJobsResponse</tt> as part of your request. A null
--   pagination token fetches the records from the beginning.
module Network.AWS.FraudDetector.GetBatchImportJobs

-- | <i>See:</i> <a>newGetBatchImportJobs</a> smart constructor.
data GetBatchImportJobs
GetBatchImportJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetBatchImportJobs

-- | The ID of the batch import job to get.
[$sel:jobId:GetBatchImportJobs'] :: GetBatchImportJobs -> Maybe Text

-- | The next token from the previous request.
[$sel:nextToken:GetBatchImportJobs'] :: GetBatchImportJobs -> Maybe Text

-- | The maximum number of objects to return for request.
[$sel:maxResults:GetBatchImportJobs'] :: GetBatchImportJobs -> Maybe Natural

-- | Create a value of <a>GetBatchImportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetBatchImportJobs'</a>, <a>getBatchImportJobs_jobId</a>
--   - The ID of the batch import job to get.
--   
--   <a>$sel:nextToken:GetBatchImportJobs'</a>,
--   <a>getBatchImportJobs_nextToken</a> - The next token from the previous
--   request.
--   
--   <a>$sel:maxResults:GetBatchImportJobs'</a>,
--   <a>getBatchImportJobs_maxResults</a> - The maximum number of objects
--   to return for request.
newGetBatchImportJobs :: GetBatchImportJobs

-- | The ID of the batch import job to get.
getBatchImportJobs_jobId :: Lens' GetBatchImportJobs (Maybe Text)

-- | The next token from the previous request.
getBatchImportJobs_nextToken :: Lens' GetBatchImportJobs (Maybe Text)

-- | The maximum number of objects to return for request.
getBatchImportJobs_maxResults :: Lens' GetBatchImportJobs (Maybe Natural)

-- | <i>See:</i> <a>newGetBatchImportJobsResponse</a> smart constructor.
data GetBatchImportJobsResponse
GetBatchImportJobsResponse' :: Maybe Text -> Maybe [BatchImport] -> Int -> GetBatchImportJobsResponse

-- | The next token for the subsequent resquest.
[$sel:nextToken:GetBatchImportJobsResponse'] :: GetBatchImportJobsResponse -> Maybe Text

-- | An array containing the details of each batch import job.
[$sel:batchImports:GetBatchImportJobsResponse'] :: GetBatchImportJobsResponse -> Maybe [BatchImport]

-- | The response's http status code.
[$sel:httpStatus:GetBatchImportJobsResponse'] :: GetBatchImportJobsResponse -> Int

-- | Create a value of <a>GetBatchImportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBatchImportJobs'</a>,
--   <a>getBatchImportJobsResponse_nextToken</a> - The next token for the
--   subsequent resquest.
--   
--   <a>$sel:batchImports:GetBatchImportJobsResponse'</a>,
--   <a>getBatchImportJobsResponse_batchImports</a> - An array containing
--   the details of each batch import job.
--   
--   <a>$sel:httpStatus:GetBatchImportJobsResponse'</a>,
--   <a>getBatchImportJobsResponse_httpStatus</a> - The response's http
--   status code.
newGetBatchImportJobsResponse :: Int -> GetBatchImportJobsResponse

-- | The next token for the subsequent resquest.
getBatchImportJobsResponse_nextToken :: Lens' GetBatchImportJobsResponse (Maybe Text)

-- | An array containing the details of each batch import job.
getBatchImportJobsResponse_batchImports :: Lens' GetBatchImportJobsResponse (Maybe [BatchImport])

-- | The response's http status code.
getBatchImportJobsResponse_httpStatus :: Lens' GetBatchImportJobsResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance GHC.Show.Show Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance GHC.Read.Read Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance GHC.Generics.Generic Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobsResponse
instance GHC.Show.Show Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobsResponse
instance GHC.Read.Read Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobsResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.GetBatchImportJobs.GetBatchImportJobs


-- | Gets all of the model versions for the specified model type or for the
--   specified model type and model ID. You can also get details for a
--   single, specified model version.
module Network.AWS.FraudDetector.DescribeModelVersions

-- | <i>See:</i> <a>newDescribeModelVersions</a> smart constructor.
data DescribeModelVersions
DescribeModelVersions' :: Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeModelVersions

-- | The model type.
[$sel:modelType:DescribeModelVersions'] :: DescribeModelVersions -> Maybe ModelTypeEnum

-- | The model ID.
[$sel:modelId:DescribeModelVersions'] :: DescribeModelVersions -> Maybe Text

-- | The next token from the previous results.
[$sel:nextToken:DescribeModelVersions'] :: DescribeModelVersions -> Maybe Text

-- | The model version number.
[$sel:modelVersionNumber:DescribeModelVersions'] :: DescribeModelVersions -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:DescribeModelVersions'] :: DescribeModelVersions -> Maybe Natural

-- | Create a value of <a>DescribeModelVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelType:DescribeModelVersions'</a>,
--   <a>describeModelVersions_modelType</a> - The model type.
--   
--   <a>$sel:modelId:DescribeModelVersions'</a>,
--   <a>describeModelVersions_modelId</a> - The model ID.
--   
--   <a>$sel:nextToken:DescribeModelVersions'</a>,
--   <a>describeModelVersions_nextToken</a> - The next token from the
--   previous results.
--   
--   <a>$sel:modelVersionNumber:DescribeModelVersions'</a>,
--   <a>describeModelVersions_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:maxResults:DescribeModelVersions'</a>,
--   <a>describeModelVersions_maxResults</a> - The maximum number of
--   results to return.
newDescribeModelVersions :: DescribeModelVersions

-- | The model type.
describeModelVersions_modelType :: Lens' DescribeModelVersions (Maybe ModelTypeEnum)

-- | The model ID.
describeModelVersions_modelId :: Lens' DescribeModelVersions (Maybe Text)

-- | The next token from the previous results.
describeModelVersions_nextToken :: Lens' DescribeModelVersions (Maybe Text)

-- | The model version number.
describeModelVersions_modelVersionNumber :: Lens' DescribeModelVersions (Maybe Text)

-- | The maximum number of results to return.
describeModelVersions_maxResults :: Lens' DescribeModelVersions (Maybe Natural)

-- | <i>See:</i> <a>newDescribeModelVersionsResponse</a> smart constructor.
data DescribeModelVersionsResponse
DescribeModelVersionsResponse' :: Maybe Text -> Maybe [ModelVersionDetail] -> Int -> DescribeModelVersionsResponse

-- | The next token.
[$sel:nextToken:DescribeModelVersionsResponse'] :: DescribeModelVersionsResponse -> Maybe Text

-- | The model version details.
[$sel:modelVersionDetails:DescribeModelVersionsResponse'] :: DescribeModelVersionsResponse -> Maybe [ModelVersionDetail]

-- | The response's http status code.
[$sel:httpStatus:DescribeModelVersionsResponse'] :: DescribeModelVersionsResponse -> Int

-- | Create a value of <a>DescribeModelVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeModelVersions'</a>,
--   <a>describeModelVersionsResponse_nextToken</a> - The next token.
--   
--   <a>$sel:modelVersionDetails:DescribeModelVersionsResponse'</a>,
--   <a>describeModelVersionsResponse_modelVersionDetails</a> - The model
--   version details.
--   
--   <a>$sel:httpStatus:DescribeModelVersionsResponse'</a>,
--   <a>describeModelVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeModelVersionsResponse :: Int -> DescribeModelVersionsResponse

-- | The next token.
describeModelVersionsResponse_nextToken :: Lens' DescribeModelVersionsResponse (Maybe Text)

-- | The model version details.
describeModelVersionsResponse_modelVersionDetails :: Lens' DescribeModelVersionsResponse (Maybe [ModelVersionDetail])

-- | The response's http status code.
describeModelVersionsResponse_httpStatus :: Lens' DescribeModelVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance GHC.Show.Show Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance GHC.Read.Read Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance GHC.Classes.Eq Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance GHC.Generics.Generic Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersionsResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersionsResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersionsResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DescribeModelVersions.DescribeModelVersions


-- | Gets all versions for a specified detector.
module Network.AWS.FraudDetector.DescribeDetector

-- | <i>See:</i> <a>newDescribeDetector</a> smart constructor.
data DescribeDetector
DescribeDetector' :: Maybe Text -> Maybe Natural -> Text -> DescribeDetector

-- | The next token from the previous response.
[$sel:nextToken:DescribeDetector'] :: DescribeDetector -> Maybe Text

-- | The maximum number of results to return for the request.
[$sel:maxResults:DescribeDetector'] :: DescribeDetector -> Maybe Natural

-- | The detector ID.
[$sel:detectorId:DescribeDetector'] :: DescribeDetector -> Text

-- | Create a value of <a>DescribeDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDetector'</a>,
--   <a>describeDetector_nextToken</a> - The next token from the previous
--   response.
--   
--   <a>$sel:maxResults:DescribeDetector'</a>,
--   <a>describeDetector_maxResults</a> - The maximum number of results to
--   return for the request.
--   
--   <a>$sel:detectorId:DescribeDetector'</a>,
--   <a>describeDetector_detectorId</a> - The detector ID.
newDescribeDetector :: Text -> DescribeDetector

-- | The next token from the previous response.
describeDetector_nextToken :: Lens' DescribeDetector (Maybe Text)

-- | The maximum number of results to return for the request.
describeDetector_maxResults :: Lens' DescribeDetector (Maybe Natural)

-- | The detector ID.
describeDetector_detectorId :: Lens' DescribeDetector Text

-- | <i>See:</i> <a>newDescribeDetectorResponse</a> smart constructor.
data DescribeDetectorResponse
DescribeDetectorResponse' :: Maybe [DetectorVersionSummary] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeDetectorResponse

-- | The status and description for each detector version.
[$sel:detectorVersionSummaries:DescribeDetectorResponse'] :: DescribeDetectorResponse -> Maybe [DetectorVersionSummary]

-- | The detector ARN.
[$sel:arn:DescribeDetectorResponse'] :: DescribeDetectorResponse -> Maybe Text

-- | The next token to be used for subsequent requests.
[$sel:nextToken:DescribeDetectorResponse'] :: DescribeDetectorResponse -> Maybe Text

-- | The detector ID.
[$sel:detectorId:DescribeDetectorResponse'] :: DescribeDetectorResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeDetectorResponse'] :: DescribeDetectorResponse -> Int

-- | Create a value of <a>DescribeDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorVersionSummaries:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_detectorVersionSummaries</a> - The status
--   and description for each detector version.
--   
--   <a>$sel:arn:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_arn</a> - The detector ARN.
--   
--   <a>$sel:nextToken:DescribeDetector'</a>,
--   <a>describeDetectorResponse_nextToken</a> - The next token to be used
--   for subsequent requests.
--   
--   <a>$sel:detectorId:DescribeDetector'</a>,
--   <a>describeDetectorResponse_detectorId</a> - The detector ID.
--   
--   <a>$sel:httpStatus:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDetectorResponse :: Int -> DescribeDetectorResponse

-- | The status and description for each detector version.
describeDetectorResponse_detectorVersionSummaries :: Lens' DescribeDetectorResponse (Maybe [DetectorVersionSummary])

-- | The detector ARN.
describeDetectorResponse_arn :: Lens' DescribeDetectorResponse (Maybe Text)

-- | The next token to be used for subsequent requests.
describeDetectorResponse_nextToken :: Lens' DescribeDetectorResponse (Maybe Text)

-- | The detector ID.
describeDetectorResponse_detectorId :: Lens' DescribeDetectorResponse (Maybe Text)

-- | The response's http status code.
describeDetectorResponse_httpStatus :: Lens' DescribeDetectorResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance GHC.Show.Show Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance GHC.Read.Read Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance GHC.Classes.Eq Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance GHC.Generics.Generic Network.AWS.FraudDetector.DescribeDetector.DescribeDetectorResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DescribeDetector.DescribeDetectorResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DescribeDetector.DescribeDetectorResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DescribeDetector.DescribeDetectorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DescribeDetector.DescribeDetectorResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DescribeDetector.DescribeDetector
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DescribeDetector.DescribeDetector


-- | Deletes a variable.
--   
--   You can't delete variables that are included in an event type in
--   Amazon Fraud Detector.
--   
--   Amazon Fraud Detector automatically deletes model output variables and
--   SageMaker model output variables when you delete the model. You can't
--   delete these variables manually.
--   
--   When you delete a variable, Amazon Fraud Detector permanently deletes
--   that variable and the data is no longer stored in Amazon Fraud
--   Detector.
module Network.AWS.FraudDetector.DeleteVariable

-- | <i>See:</i> <a>newDeleteVariable</a> smart constructor.
data DeleteVariable
DeleteVariable' :: Text -> DeleteVariable

-- | The name of the variable to delete.
[$sel:name:DeleteVariable'] :: DeleteVariable -> Text

-- | Create a value of <a>DeleteVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteVariable'</a>, <a>deleteVariable_name</a> - The
--   name of the variable to delete.
newDeleteVariable :: Text -> DeleteVariable

-- | The name of the variable to delete.
deleteVariable_name :: Lens' DeleteVariable Text

-- | <i>See:</i> <a>newDeleteVariableResponse</a> smart constructor.
data DeleteVariableResponse
DeleteVariableResponse' :: Int -> DeleteVariableResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVariableResponse'] :: DeleteVariableResponse -> Int

-- | Create a value of <a>DeleteVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVariableResponse'</a>,
--   <a>deleteVariableResponse_httpStatus</a> - The response's http status
--   code.
newDeleteVariableResponse :: Int -> DeleteVariableResponse

-- | The response's http status code.
deleteVariableResponse_httpStatus :: Lens' DeleteVariableResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteVariable.DeleteVariableResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteVariable.DeleteVariableResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteVariable.DeleteVariableResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteVariable.DeleteVariableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteVariable.DeleteVariableResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteVariable.DeleteVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteVariable.DeleteVariable


-- | Deletes the rule. You cannot delete a rule if it is used by an
--   <tt>ACTIVE</tt> or <tt>INACTIVE</tt> detector version.
--   
--   When you delete a rule, Amazon Fraud Detector permanently deletes that
--   rule and the data is no longer stored in Amazon Fraud Detector.
module Network.AWS.FraudDetector.DeleteRule

-- | <i>See:</i> <a>newDeleteRule</a> smart constructor.
data DeleteRule
DeleteRule' :: Rule -> DeleteRule
[$sel:rule:DeleteRule'] :: DeleteRule -> Rule

-- | Create a value of <a>DeleteRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:DeleteRule'</a>, <a>deleteRule_rule</a> - Undocumented
--   member.
newDeleteRule :: Rule -> DeleteRule

-- | Undocumented member.
deleteRule_rule :: Lens' DeleteRule Rule

-- | <i>See:</i> <a>newDeleteRuleResponse</a> smart constructor.
data DeleteRuleResponse
DeleteRuleResponse' :: Int -> DeleteRuleResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRuleResponse'] :: DeleteRuleResponse -> Int

-- | Create a value of <a>DeleteRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRuleResponse'</a>,
--   <a>deleteRuleResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRuleResponse :: Int -> DeleteRuleResponse

-- | The response's http status code.
deleteRuleResponse_httpStatus :: Lens' DeleteRuleResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteRule.DeleteRuleResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteRule.DeleteRuleResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteRule.DeleteRuleResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteRule.DeleteRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteRule.DeleteRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteRule.DeleteRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteRule.DeleteRule


-- | Deletes an outcome.
--   
--   You cannot delete an outcome that is used in a rule version.
--   
--   When you delete an outcome, Amazon Fraud Detector permanently deletes
--   that outcome and the data is no longer stored in Amazon Fraud
--   Detector.
module Network.AWS.FraudDetector.DeleteOutcome

-- | <i>See:</i> <a>newDeleteOutcome</a> smart constructor.
data DeleteOutcome
DeleteOutcome' :: Text -> DeleteOutcome

-- | The name of the outcome to delete.
[$sel:name:DeleteOutcome'] :: DeleteOutcome -> Text

-- | Create a value of <a>DeleteOutcome</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteOutcome'</a>, <a>deleteOutcome_name</a> - The name
--   of the outcome to delete.
newDeleteOutcome :: Text -> DeleteOutcome

-- | The name of the outcome to delete.
deleteOutcome_name :: Lens' DeleteOutcome Text

-- | <i>See:</i> <a>newDeleteOutcomeResponse</a> smart constructor.
data DeleteOutcomeResponse
DeleteOutcomeResponse' :: Int -> DeleteOutcomeResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteOutcomeResponse'] :: DeleteOutcomeResponse -> Int

-- | Create a value of <a>DeleteOutcomeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteOutcomeResponse'</a>,
--   <a>deleteOutcomeResponse_httpStatus</a> - The response's http status
--   code.
newDeleteOutcomeResponse :: Int -> DeleteOutcomeResponse

-- | The response's http status code.
deleteOutcomeResponse_httpStatus :: Lens' DeleteOutcomeResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcomeResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcomeResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcomeResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcomeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcomeResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteOutcome.DeleteOutcome


-- | Deletes a model version.
--   
--   You can delete models and model versions in Amazon Fraud Detector,
--   provided that they are not associated with a detector version.
--   
--   When you delete a model version, Amazon Fraud Detector permanently
--   deletes that model version and the data is no longer stored in Amazon
--   Fraud Detector.
module Network.AWS.FraudDetector.DeleteModelVersion

-- | <i>See:</i> <a>newDeleteModelVersion</a> smart constructor.
data DeleteModelVersion
DeleteModelVersion' :: Text -> ModelTypeEnum -> Text -> DeleteModelVersion

-- | The model ID of the model version to delete.
[$sel:modelId:DeleteModelVersion'] :: DeleteModelVersion -> Text

-- | The model type of the model version to delete.
[$sel:modelType:DeleteModelVersion'] :: DeleteModelVersion -> ModelTypeEnum

-- | The model version number of the model version to delete.
[$sel:modelVersionNumber:DeleteModelVersion'] :: DeleteModelVersion -> Text

-- | Create a value of <a>DeleteModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:DeleteModelVersion'</a>,
--   <a>deleteModelVersion_modelId</a> - The model ID of the model version
--   to delete.
--   
--   <a>$sel:modelType:DeleteModelVersion'</a>,
--   <a>deleteModelVersion_modelType</a> - The model type of the model
--   version to delete.
--   
--   <a>$sel:modelVersionNumber:DeleteModelVersion'</a>,
--   <a>deleteModelVersion_modelVersionNumber</a> - The model version
--   number of the model version to delete.
newDeleteModelVersion :: Text -> ModelTypeEnum -> Text -> DeleteModelVersion

-- | The model ID of the model version to delete.
deleteModelVersion_modelId :: Lens' DeleteModelVersion Text

-- | The model type of the model version to delete.
deleteModelVersion_modelType :: Lens' DeleteModelVersion ModelTypeEnum

-- | The model version number of the model version to delete.
deleteModelVersion_modelVersionNumber :: Lens' DeleteModelVersion Text

-- | <i>See:</i> <a>newDeleteModelVersionResponse</a> smart constructor.
data DeleteModelVersionResponse
DeleteModelVersionResponse' :: Int -> DeleteModelVersionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteModelVersionResponse'] :: DeleteModelVersionResponse -> Int

-- | Create a value of <a>DeleteModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteModelVersionResponse'</a>,
--   <a>deleteModelVersionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteModelVersionResponse :: Int -> DeleteModelVersionResponse

-- | The response's http status code.
deleteModelVersionResponse_httpStatus :: Lens' DeleteModelVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteModelVersion.DeleteModelVersion


-- | Deletes a model.
--   
--   You can delete models and model versions in Amazon Fraud Detector,
--   provided that they are not associated with a detector version.
--   
--   When you delete a model, Amazon Fraud Detector permanently deletes
--   that model and the data is no longer stored in Amazon Fraud Detector.
module Network.AWS.FraudDetector.DeleteModel

-- | <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> ModelTypeEnum -> DeleteModel

-- | The model ID of the model to delete.
[$sel:modelId:DeleteModel'] :: DeleteModel -> Text

-- | The model type of the model to delete.
[$sel:modelType:DeleteModel'] :: DeleteModel -> ModelTypeEnum

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:DeleteModel'</a>, <a>deleteModel_modelId</a> - The
--   model ID of the model to delete.
--   
--   <a>$sel:modelType:DeleteModel'</a>, <a>deleteModel_modelType</a> - The
--   model type of the model to delete.
newDeleteModel :: Text -> ModelTypeEnum -> DeleteModel

-- | The model ID of the model to delete.
deleteModel_modelId :: Lens' DeleteModel Text

-- | The model type of the model to delete.
deleteModel_modelType :: Lens' DeleteModel ModelTypeEnum

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: Int -> DeleteModelResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteModelResponse'] :: DeleteModelResponse -> Int

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteModelResponse'</a>,
--   <a>deleteModelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteModelResponse :: Int -> DeleteModelResponse

-- | The response's http status code.
deleteModelResponse_httpStatus :: Lens' DeleteModelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteModel.DeleteModelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteModel.DeleteModelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteModel.DeleteModelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteModel.DeleteModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteModel.DeleteModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteModel.DeleteModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteModel.DeleteModel


-- | Deletes a label.
--   
--   You cannot delete labels that are included in an event type in Amazon
--   Fraud Detector.
--   
--   You cannot delete a label assigned to an event ID. You must first
--   delete the relevant event ID.
--   
--   When you delete a label, Amazon Fraud Detector permanently deletes
--   that label and the data is no longer stored in Amazon Fraud Detector.
module Network.AWS.FraudDetector.DeleteLabel

-- | <i>See:</i> <a>newDeleteLabel</a> smart constructor.
data DeleteLabel
DeleteLabel' :: Text -> DeleteLabel

-- | The name of the label to delete.
[$sel:name:DeleteLabel'] :: DeleteLabel -> Text

-- | Create a value of <a>DeleteLabel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteLabel'</a>, <a>deleteLabel_name</a> - The name of
--   the label to delete.
newDeleteLabel :: Text -> DeleteLabel

-- | The name of the label to delete.
deleteLabel_name :: Lens' DeleteLabel Text

-- | <i>See:</i> <a>newDeleteLabelResponse</a> smart constructor.
data DeleteLabelResponse
DeleteLabelResponse' :: Int -> DeleteLabelResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLabelResponse'] :: DeleteLabelResponse -> Int

-- | Create a value of <a>DeleteLabelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLabelResponse'</a>,
--   <a>deleteLabelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteLabelResponse :: Int -> DeleteLabelResponse

-- | The response's http status code.
deleteLabelResponse_httpStatus :: Lens' DeleteLabelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteLabel.DeleteLabelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteLabel.DeleteLabelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteLabel.DeleteLabelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteLabel.DeleteLabelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteLabel.DeleteLabelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteLabel.DeleteLabel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteLabel.DeleteLabel


-- | Removes a SageMaker model from Amazon Fraud Detector.
--   
--   You can remove an Amazon SageMaker model if it is not associated with
--   a detector version. Removing a SageMaker model disconnects it from
--   Amazon Fraud Detector, but the model remains available in SageMaker.
module Network.AWS.FraudDetector.DeleteExternalModel

-- | <i>See:</i> <a>newDeleteExternalModel</a> smart constructor.
data DeleteExternalModel
DeleteExternalModel' :: Text -> DeleteExternalModel

-- | The endpoint of the Amazon Sagemaker model to delete.
[$sel:modelEndpoint:DeleteExternalModel'] :: DeleteExternalModel -> Text

-- | Create a value of <a>DeleteExternalModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:DeleteExternalModel'</a>,
--   <a>deleteExternalModel_modelEndpoint</a> - The endpoint of the Amazon
--   Sagemaker model to delete.
newDeleteExternalModel :: Text -> DeleteExternalModel

-- | The endpoint of the Amazon Sagemaker model to delete.
deleteExternalModel_modelEndpoint :: Lens' DeleteExternalModel Text

-- | <i>See:</i> <a>newDeleteExternalModelResponse</a> smart constructor.
data DeleteExternalModelResponse
DeleteExternalModelResponse' :: Int -> DeleteExternalModelResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteExternalModelResponse'] :: DeleteExternalModelResponse -> Int

-- | Create a value of <a>DeleteExternalModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteExternalModelResponse'</a>,
--   <a>deleteExternalModelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteExternalModelResponse :: Int -> DeleteExternalModelResponse

-- | The response's http status code.
deleteExternalModelResponse_httpStatus :: Lens' DeleteExternalModelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteExternalModel.DeleteExternalModel


-- | Deletes all events of a particular event type.
module Network.AWS.FraudDetector.DeleteEventsByEventType

-- | <i>See:</i> <a>newDeleteEventsByEventType</a> smart constructor.
data DeleteEventsByEventType
DeleteEventsByEventType' :: Text -> DeleteEventsByEventType

-- | The name of the event type.
[$sel:eventTypeName:DeleteEventsByEventType'] :: DeleteEventsByEventType -> Text

-- | Create a value of <a>DeleteEventsByEventType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:DeleteEventsByEventType'</a>,
--   <a>deleteEventsByEventType_eventTypeName</a> - The name of the event
--   type.
newDeleteEventsByEventType :: Text -> DeleteEventsByEventType

-- | The name of the event type.
deleteEventsByEventType_eventTypeName :: Lens' DeleteEventsByEventType Text

-- | <i>See:</i> <a>newDeleteEventsByEventTypeResponse</a> smart
--   constructor.
data DeleteEventsByEventTypeResponse
DeleteEventsByEventTypeResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteEventsByEventTypeResponse

-- | Name of event type for which to delete the events.
[$sel:eventTypeName:DeleteEventsByEventTypeResponse'] :: DeleteEventsByEventTypeResponse -> Maybe Text

-- | The status of the delete request.
[$sel:eventsDeletionStatus:DeleteEventsByEventTypeResponse'] :: DeleteEventsByEventTypeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteEventsByEventTypeResponse'] :: DeleteEventsByEventTypeResponse -> Int

-- | Create a value of <a>DeleteEventsByEventTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:DeleteEventsByEventType'</a>,
--   <a>deleteEventsByEventTypeResponse_eventTypeName</a> - Name of event
--   type for which to delete the events.
--   
--   <a>$sel:eventsDeletionStatus:DeleteEventsByEventTypeResponse'</a>,
--   <a>deleteEventsByEventTypeResponse_eventsDeletionStatus</a> - The
--   status of the delete request.
--   
--   <a>$sel:httpStatus:DeleteEventsByEventTypeResponse'</a>,
--   <a>deleteEventsByEventTypeResponse_httpStatus</a> - The response's
--   http status code.
newDeleteEventsByEventTypeResponse :: Int -> DeleteEventsByEventTypeResponse

-- | Name of event type for which to delete the events.
deleteEventsByEventTypeResponse_eventTypeName :: Lens' DeleteEventsByEventTypeResponse (Maybe Text)

-- | The status of the delete request.
deleteEventsByEventTypeResponse_eventsDeletionStatus :: Lens' DeleteEventsByEventTypeResponse (Maybe Text)

-- | The response's http status code.
deleteEventsByEventTypeResponse_httpStatus :: Lens' DeleteEventsByEventTypeResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventTypeResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventTypeResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventTypeResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteEventsByEventType.DeleteEventsByEventType


-- | Deletes an event type.
--   
--   You cannot delete an event type that is used in a detector or a model.
--   
--   When you delete an event type, Amazon Fraud Detector permanently
--   deletes that event type and the data is no longer stored in Amazon
--   Fraud Detector.
module Network.AWS.FraudDetector.DeleteEventType

-- | <i>See:</i> <a>newDeleteEventType</a> smart constructor.
data DeleteEventType
DeleteEventType' :: Text -> DeleteEventType

-- | The name of the event type to delete.
[$sel:name:DeleteEventType'] :: DeleteEventType -> Text

-- | Create a value of <a>DeleteEventType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteEventType'</a>, <a>deleteEventType_name</a> - The
--   name of the event type to delete.
newDeleteEventType :: Text -> DeleteEventType

-- | The name of the event type to delete.
deleteEventType_name :: Lens' DeleteEventType Text

-- | <i>See:</i> <a>newDeleteEventTypeResponse</a> smart constructor.
data DeleteEventTypeResponse
DeleteEventTypeResponse' :: Int -> DeleteEventTypeResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteEventTypeResponse'] :: DeleteEventTypeResponse -> Int

-- | Create a value of <a>DeleteEventTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEventTypeResponse'</a>,
--   <a>deleteEventTypeResponse_httpStatus</a> - The response's http status
--   code.
newDeleteEventTypeResponse :: Int -> DeleteEventTypeResponse

-- | The response's http status code.
deleteEventTypeResponse_httpStatus :: Lens' DeleteEventTypeResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEventType.DeleteEventTypeResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEventType.DeleteEventTypeResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEventType.DeleteEventTypeResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEventType.DeleteEventTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEventType.DeleteEventTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteEventType.DeleteEventType
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteEventType.DeleteEventType


-- | Deletes the specified event.
--   
--   When you delete an event, Amazon Fraud Detector permanently deletes
--   that event and the event data is no longer stored in Amazon Fraud
--   Detector.
module Network.AWS.FraudDetector.DeleteEvent

-- | <i>See:</i> <a>newDeleteEvent</a> smart constructor.
data DeleteEvent
DeleteEvent' :: Maybe Bool -> Text -> Text -> DeleteEvent

-- | Specifies whether or not to delete any predictions associated with the
--   event.
[$sel:deleteAuditHistory:DeleteEvent'] :: DeleteEvent -> Maybe Bool

-- | The ID of the event to delete.
[$sel:eventId:DeleteEvent'] :: DeleteEvent -> Text

-- | The name of the event type.
[$sel:eventTypeName:DeleteEvent'] :: DeleteEvent -> Text

-- | Create a value of <a>DeleteEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteAuditHistory:DeleteEvent'</a>,
--   <a>deleteEvent_deleteAuditHistory</a> - Specifies whether or not to
--   delete any predictions associated with the event.
--   
--   <a>$sel:eventId:DeleteEvent'</a>, <a>deleteEvent_eventId</a> - The ID
--   of the event to delete.
--   
--   <a>$sel:eventTypeName:DeleteEvent'</a>,
--   <a>deleteEvent_eventTypeName</a> - The name of the event type.
newDeleteEvent :: Text -> Text -> DeleteEvent

-- | Specifies whether or not to delete any predictions associated with the
--   event.
deleteEvent_deleteAuditHistory :: Lens' DeleteEvent (Maybe Bool)

-- | The ID of the event to delete.
deleteEvent_eventId :: Lens' DeleteEvent Text

-- | The name of the event type.
deleteEvent_eventTypeName :: Lens' DeleteEvent Text

-- | <i>See:</i> <a>newDeleteEventResponse</a> smart constructor.
data DeleteEventResponse
DeleteEventResponse' :: Int -> DeleteEventResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteEventResponse'] :: DeleteEventResponse -> Int

-- | Create a value of <a>DeleteEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEventResponse'</a>,
--   <a>deleteEventResponse_httpStatus</a> - The response's http status
--   code.
newDeleteEventResponse :: Int -> DeleteEventResponse

-- | The response's http status code.
deleteEventResponse_httpStatus :: Lens' DeleteEventResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEvent.DeleteEventResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEvent.DeleteEventResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEvent.DeleteEventResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEvent.DeleteEventResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEvent.DeleteEventResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteEvent.DeleteEvent
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteEvent.DeleteEvent


-- | Deletes an entity type.
--   
--   You cannot delete an entity type that is included in an event type.
--   
--   When you delete an entity type, Amazon Fraud Detector permanently
--   deletes that entity type and the data is no longer stored in Amazon
--   Fraud Detector.
module Network.AWS.FraudDetector.DeleteEntityType

-- | <i>See:</i> <a>newDeleteEntityType</a> smart constructor.
data DeleteEntityType
DeleteEntityType' :: Text -> DeleteEntityType

-- | The name of the entity type to delete.
[$sel:name:DeleteEntityType'] :: DeleteEntityType -> Text

-- | Create a value of <a>DeleteEntityType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteEntityType'</a>, <a>deleteEntityType_name</a> - The
--   name of the entity type to delete.
newDeleteEntityType :: Text -> DeleteEntityType

-- | The name of the entity type to delete.
deleteEntityType_name :: Lens' DeleteEntityType Text

-- | <i>See:</i> <a>newDeleteEntityTypeResponse</a> smart constructor.
data DeleteEntityTypeResponse
DeleteEntityTypeResponse' :: Int -> DeleteEntityTypeResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteEntityTypeResponse'] :: DeleteEntityTypeResponse -> Int

-- | Create a value of <a>DeleteEntityTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEntityTypeResponse'</a>,
--   <a>deleteEntityTypeResponse_httpStatus</a> - The response's http
--   status code.
newDeleteEntityTypeResponse :: Int -> DeleteEntityTypeResponse

-- | The response's http status code.
deleteEntityTypeResponse_httpStatus :: Lens' DeleteEntityTypeResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityTypeResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityTypeResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityTypeResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteEntityType.DeleteEntityType


-- | Deletes the detector version. You cannot delete detector versions that
--   are in <tt>ACTIVE</tt> status.
--   
--   When you delete a detector version, Amazon Fraud Detector permanently
--   deletes the detector and the data is no longer stored in Amazon Fraud
--   Detector.
module Network.AWS.FraudDetector.DeleteDetectorVersion

-- | <i>See:</i> <a>newDeleteDetectorVersion</a> smart constructor.
data DeleteDetectorVersion
DeleteDetectorVersion' :: Text -> Text -> DeleteDetectorVersion

-- | The ID of the parent detector for the detector version to delete.
[$sel:detectorId:DeleteDetectorVersion'] :: DeleteDetectorVersion -> Text

-- | The ID of the detector version to delete.
[$sel:detectorVersionId:DeleteDetectorVersion'] :: DeleteDetectorVersion -> Text

-- | Create a value of <a>DeleteDetectorVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:DeleteDetectorVersion'</a>,
--   <a>deleteDetectorVersion_detectorId</a> - The ID of the parent
--   detector for the detector version to delete.
--   
--   <a>$sel:detectorVersionId:DeleteDetectorVersion'</a>,
--   <a>deleteDetectorVersion_detectorVersionId</a> - The ID of the
--   detector version to delete.
newDeleteDetectorVersion :: Text -> Text -> DeleteDetectorVersion

-- | The ID of the parent detector for the detector version to delete.
deleteDetectorVersion_detectorId :: Lens' DeleteDetectorVersion Text

-- | The ID of the detector version to delete.
deleteDetectorVersion_detectorVersionId :: Lens' DeleteDetectorVersion Text

-- | <i>See:</i> <a>newDeleteDetectorVersionResponse</a> smart constructor.
data DeleteDetectorVersionResponse
DeleteDetectorVersionResponse' :: Int -> DeleteDetectorVersionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDetectorVersionResponse'] :: DeleteDetectorVersionResponse -> Int

-- | Create a value of <a>DeleteDetectorVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDetectorVersionResponse'</a>,
--   <a>deleteDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDetectorVersionResponse :: Int -> DeleteDetectorVersionResponse

-- | The response's http status code.
deleteDetectorVersionResponse_httpStatus :: Lens' DeleteDetectorVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteDetectorVersion.DeleteDetectorVersion


-- | Deletes the detector. Before deleting a detector, you must first
--   delete all detector versions and rule versions associated with the
--   detector.
--   
--   When you delete a detector, Amazon Fraud Detector permanently deletes
--   the detector and the data is no longer stored in Amazon Fraud
--   Detector.
module Network.AWS.FraudDetector.DeleteDetector

-- | <i>See:</i> <a>newDeleteDetector</a> smart constructor.
data DeleteDetector
DeleteDetector' :: Text -> DeleteDetector

-- | The ID of the detector to delete.
[$sel:detectorId:DeleteDetector'] :: DeleteDetector -> Text

-- | Create a value of <a>DeleteDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:DeleteDetector'</a>,
--   <a>deleteDetector_detectorId</a> - The ID of the detector to delete.
newDeleteDetector :: Text -> DeleteDetector

-- | The ID of the detector to delete.
deleteDetector_detectorId :: Lens' DeleteDetector Text

-- | <i>See:</i> <a>newDeleteDetectorResponse</a> smart constructor.
data DeleteDetectorResponse
DeleteDetectorResponse' :: Int -> DeleteDetectorResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDetectorResponse'] :: DeleteDetectorResponse -> Int

-- | Create a value of <a>DeleteDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDetectorResponse'</a>,
--   <a>deleteDetectorResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDetectorResponse :: Int -> DeleteDetectorResponse

-- | The response's http status code.
deleteDetectorResponse_httpStatus :: Lens' DeleteDetectorResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteDetector.DeleteDetectorResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteDetector.DeleteDetectorResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteDetector.DeleteDetectorResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteDetector.DeleteDetectorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteDetector.DeleteDetectorResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteDetector.DeleteDetector
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteDetector.DeleteDetector


-- | Deletes a batch prediction job.
module Network.AWS.FraudDetector.DeleteBatchPredictionJob

-- | <i>See:</i> <a>newDeleteBatchPredictionJob</a> smart constructor.
data DeleteBatchPredictionJob
DeleteBatchPredictionJob' :: Text -> DeleteBatchPredictionJob

-- | The ID of the batch prediction job to delete.
[$sel:jobId:DeleteBatchPredictionJob'] :: DeleteBatchPredictionJob -> Text

-- | Create a value of <a>DeleteBatchPredictionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DeleteBatchPredictionJob'</a>,
--   <a>deleteBatchPredictionJob_jobId</a> - The ID of the batch prediction
--   job to delete.
newDeleteBatchPredictionJob :: Text -> DeleteBatchPredictionJob

-- | The ID of the batch prediction job to delete.
deleteBatchPredictionJob_jobId :: Lens' DeleteBatchPredictionJob Text

-- | <i>See:</i> <a>newDeleteBatchPredictionJobResponse</a> smart
--   constructor.
data DeleteBatchPredictionJobResponse
DeleteBatchPredictionJobResponse' :: Int -> DeleteBatchPredictionJobResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteBatchPredictionJobResponse'] :: DeleteBatchPredictionJobResponse -> Int

-- | Create a value of <a>DeleteBatchPredictionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBatchPredictionJobResponse'</a>,
--   <a>deleteBatchPredictionJobResponse_httpStatus</a> - The response's
--   http status code.
newDeleteBatchPredictionJobResponse :: Int -> DeleteBatchPredictionJobResponse

-- | The response's http status code.
deleteBatchPredictionJobResponse_httpStatus :: Lens' DeleteBatchPredictionJobResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJobResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJobResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJobResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteBatchPredictionJob.DeleteBatchPredictionJob


-- | Deletes data that was batch imported to Amazon Fraud Detector.
module Network.AWS.FraudDetector.DeleteBatchImportJob

-- | <i>See:</i> <a>newDeleteBatchImportJob</a> smart constructor.
data DeleteBatchImportJob
DeleteBatchImportJob' :: Text -> DeleteBatchImportJob

-- | The ID of the batch import job to delete.
[$sel:jobId:DeleteBatchImportJob'] :: DeleteBatchImportJob -> Text

-- | Create a value of <a>DeleteBatchImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DeleteBatchImportJob'</a>,
--   <a>deleteBatchImportJob_jobId</a> - The ID of the batch import job to
--   delete.
newDeleteBatchImportJob :: Text -> DeleteBatchImportJob

-- | The ID of the batch import job to delete.
deleteBatchImportJob_jobId :: Lens' DeleteBatchImportJob Text

-- | <i>See:</i> <a>newDeleteBatchImportJobResponse</a> smart constructor.
data DeleteBatchImportJobResponse
DeleteBatchImportJobResponse' :: Int -> DeleteBatchImportJobResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteBatchImportJobResponse'] :: DeleteBatchImportJobResponse -> Int

-- | Create a value of <a>DeleteBatchImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBatchImportJobResponse'</a>,
--   <a>deleteBatchImportJobResponse_httpStatus</a> - The response's http
--   status code.
newDeleteBatchImportJobResponse :: Int -> DeleteBatchImportJobResponse

-- | The response's http status code.
deleteBatchImportJobResponse_httpStatus :: Lens' DeleteBatchImportJobResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance GHC.Generics.Generic Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJobResponse
instance GHC.Show.Show Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJobResponse
instance GHC.Read.Read Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJobResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.DeleteBatchImportJob.DeleteBatchImportJob


-- | Creates a variable.
module Network.AWS.FraudDetector.CreateVariable

-- | <i>See:</i> <a>newCreateVariable</a> smart constructor.
data CreateVariable
CreateVariable' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> DataType -> DataSource -> Text -> CreateVariable

-- | The variable type. For more information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT</tt>
[$sel:variableType:CreateVariable'] :: CreateVariable -> Maybe Text

-- | The description.
[$sel:description:CreateVariable'] :: CreateVariable -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:CreateVariable'] :: CreateVariable -> Maybe [Tag]

-- | The name of the variable.
[$sel:name:CreateVariable'] :: CreateVariable -> Text

-- | The data type.
[$sel:dataType:CreateVariable'] :: CreateVariable -> DataType

-- | The source of the data.
[$sel:dataSource:CreateVariable'] :: CreateVariable -> DataSource

-- | The default value for the variable when no value is received.
[$sel:defaultValue:CreateVariable'] :: CreateVariable -> Text

-- | Create a value of <a>CreateVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableType:CreateVariable'</a>,
--   <a>createVariable_variableType</a> - The variable type. For more
--   information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT</tt>
--   
--   <a>$sel:description:CreateVariable'</a>,
--   <a>createVariable_description</a> - The description.
--   
--   <a>$sel:tags:CreateVariable'</a>, <a>createVariable_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:name:CreateVariable'</a>, <a>createVariable_name</a> - The
--   name of the variable.
--   
--   <a>$sel:dataType:CreateVariable'</a>, <a>createVariable_dataType</a> -
--   The data type.
--   
--   <a>$sel:dataSource:CreateVariable'</a>,
--   <a>createVariable_dataSource</a> - The source of the data.
--   
--   <a>$sel:defaultValue:CreateVariable'</a>,
--   <a>createVariable_defaultValue</a> - The default value for the
--   variable when no value is received.
newCreateVariable :: Text -> DataType -> DataSource -> Text -> CreateVariable

-- | The variable type. For more information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT</tt>
createVariable_variableType :: Lens' CreateVariable (Maybe Text)

-- | The description.
createVariable_description :: Lens' CreateVariable (Maybe Text)

-- | A collection of key and value pairs.
createVariable_tags :: Lens' CreateVariable (Maybe [Tag])

-- | The name of the variable.
createVariable_name :: Lens' CreateVariable Text

-- | The data type.
createVariable_dataType :: Lens' CreateVariable DataType

-- | The source of the data.
createVariable_dataSource :: Lens' CreateVariable DataSource

-- | The default value for the variable when no value is received.
createVariable_defaultValue :: Lens' CreateVariable Text

-- | <i>See:</i> <a>newCreateVariableResponse</a> smart constructor.
data CreateVariableResponse
CreateVariableResponse' :: Int -> CreateVariableResponse

-- | The response's http status code.
[$sel:httpStatus:CreateVariableResponse'] :: CreateVariableResponse -> Int

-- | Create a value of <a>CreateVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVariableResponse'</a>,
--   <a>createVariableResponse_httpStatus</a> - The response's http status
--   code.
newCreateVariableResponse :: Int -> CreateVariableResponse

-- | The response's http status code.
createVariableResponse_httpStatus :: Lens' CreateVariableResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance GHC.Show.Show Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance GHC.Read.Read Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateVariable.CreateVariableResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CreateVariable.CreateVariableResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CreateVariable.CreateVariableResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateVariable.CreateVariableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateVariable.CreateVariableResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CreateVariable.CreateVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CreateVariable.CreateVariable


-- | Creates a rule for use with the specified detector.
module Network.AWS.FraudDetector.CreateRule

-- | <i>See:</i> <a>newCreateRule</a> smart constructor.
data CreateRule
CreateRule' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> Sensitive Text -> Language -> NonEmpty Text -> CreateRule

-- | The rule description.
[$sel:description:CreateRule'] :: CreateRule -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:CreateRule'] :: CreateRule -> Maybe [Tag]

-- | The rule ID.
[$sel:ruleId:CreateRule'] :: CreateRule -> Text

-- | The detector ID for the rule's parent detector.
[$sel:detectorId:CreateRule'] :: CreateRule -> Text

-- | The rule expression.
[$sel:expression:CreateRule'] :: CreateRule -> Sensitive Text

-- | The language of the rule.
[$sel:language:CreateRule'] :: CreateRule -> Language

-- | The outcome or outcomes returned when the rule expression matches.
[$sel:outcomes:CreateRule'] :: CreateRule -> NonEmpty Text

-- | Create a value of <a>CreateRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRule'</a>, <a>createRule_description</a> -
--   The rule description.
--   
--   <a>$sel:tags:CreateRule'</a>, <a>createRule_tags</a> - A collection of
--   key and value pairs.
--   
--   <a>$sel:ruleId:CreateRule'</a>, <a>createRule_ruleId</a> - The rule
--   ID.
--   
--   <a>$sel:detectorId:CreateRule'</a>, <a>createRule_detectorId</a> - The
--   detector ID for the rule's parent detector.
--   
--   <a>$sel:expression:CreateRule'</a>, <a>createRule_expression</a> - The
--   rule expression.
--   
--   <a>$sel:language:CreateRule'</a>, <a>createRule_language</a> - The
--   language of the rule.
--   
--   <a>$sel:outcomes:CreateRule'</a>, <a>createRule_outcomes</a> - The
--   outcome or outcomes returned when the rule expression matches.
newCreateRule :: Text -> Text -> Text -> Language -> NonEmpty Text -> CreateRule

-- | The rule description.
createRule_description :: Lens' CreateRule (Maybe Text)

-- | A collection of key and value pairs.
createRule_tags :: Lens' CreateRule (Maybe [Tag])

-- | The rule ID.
createRule_ruleId :: Lens' CreateRule Text

-- | The detector ID for the rule's parent detector.
createRule_detectorId :: Lens' CreateRule Text

-- | The rule expression.
createRule_expression :: Lens' CreateRule Text

-- | The language of the rule.
createRule_language :: Lens' CreateRule Language

-- | The outcome or outcomes returned when the rule expression matches.
createRule_outcomes :: Lens' CreateRule (NonEmpty Text)

-- | <i>See:</i> <a>newCreateRuleResponse</a> smart constructor.
data CreateRuleResponse
CreateRuleResponse' :: Maybe Rule -> Int -> CreateRuleResponse

-- | The created rule.
[$sel:rule:CreateRuleResponse'] :: CreateRuleResponse -> Maybe Rule

-- | The response's http status code.
[$sel:httpStatus:CreateRuleResponse'] :: CreateRuleResponse -> Int

-- | Create a value of <a>CreateRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:CreateRuleResponse'</a>, <a>createRuleResponse_rule</a> -
--   The created rule.
--   
--   <a>$sel:httpStatus:CreateRuleResponse'</a>,
--   <a>createRuleResponse_httpStatus</a> - The response's http status
--   code.
newCreateRuleResponse :: Int -> CreateRuleResponse

-- | The created rule.
createRuleResponse_rule :: Lens' CreateRuleResponse (Maybe Rule)

-- | The response's http status code.
createRuleResponse_httpStatus :: Lens' CreateRuleResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateRule.CreateRule
instance GHC.Show.Show Network.AWS.FraudDetector.CreateRule.CreateRule
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateRule.CreateRule
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateRule.CreateRuleResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CreateRule.CreateRuleResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CreateRule.CreateRuleResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateRule.CreateRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CreateRule.CreateRule
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateRule.CreateRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CreateRule.CreateRule
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateRule.CreateRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CreateRule.CreateRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CreateRule.CreateRule
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CreateRule.CreateRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CreateRule.CreateRule


-- | Creates a version of the model using the specified model type and
--   model id.
module Network.AWS.FraudDetector.CreateModelVersion

-- | <i>See:</i> <a>newCreateModelVersion</a> smart constructor.
data CreateModelVersion
CreateModelVersion' :: Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe [Tag] -> Text -> ModelTypeEnum -> TrainingDataSourceEnum -> TrainingDataSchema -> CreateModelVersion

-- | Details of the external events data used for model version training.
--   Required if <tt>trainingDataSource</tt> is <tt>EXTERNAL_EVENTS</tt>.
[$sel:externalEventsDetail:CreateModelVersion'] :: CreateModelVersion -> Maybe ExternalEventsDetail

-- | Details of the ingested events data used for model version training.
--   Required if <tt>trainingDataSource</tt> is <tt>INGESTED_EVENTS</tt>.
[$sel:ingestedEventsDetail:CreateModelVersion'] :: CreateModelVersion -> Maybe IngestedEventsDetail

-- | A collection of key and value pairs.
[$sel:tags:CreateModelVersion'] :: CreateModelVersion -> Maybe [Tag]

-- | The model ID.
[$sel:modelId:CreateModelVersion'] :: CreateModelVersion -> Text

-- | The model type.
[$sel:modelType:CreateModelVersion'] :: CreateModelVersion -> ModelTypeEnum

-- | The training data source location in Amazon S3.
[$sel:trainingDataSource:CreateModelVersion'] :: CreateModelVersion -> TrainingDataSourceEnum

-- | The training data schema.
[$sel:trainingDataSchema:CreateModelVersion'] :: CreateModelVersion -> TrainingDataSchema

-- | Create a value of <a>CreateModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalEventsDetail:CreateModelVersion'</a>,
--   <a>createModelVersion_externalEventsDetail</a> - Details of the
--   external events data used for model version training. Required if
--   <tt>trainingDataSource</tt> is <tt>EXTERNAL_EVENTS</tt>.
--   
--   <a>$sel:ingestedEventsDetail:CreateModelVersion'</a>,
--   <a>createModelVersion_ingestedEventsDetail</a> - Details of the
--   ingested events data used for model version training. Required if
--   <tt>trainingDataSource</tt> is <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:tags:CreateModelVersion'</a>, <a>createModelVersion_tags</a> -
--   A collection of key and value pairs.
--   
--   <a>$sel:modelId:CreateModelVersion'</a>,
--   <a>createModelVersion_modelId</a> - The model ID.
--   
--   <a>$sel:modelType:CreateModelVersion'</a>,
--   <a>createModelVersion_modelType</a> - The model type.
--   
--   <a>$sel:trainingDataSource:CreateModelVersion'</a>,
--   <a>createModelVersion_trainingDataSource</a> - The training data
--   source location in Amazon S3.
--   
--   <a>$sel:trainingDataSchema:CreateModelVersion'</a>,
--   <a>createModelVersion_trainingDataSchema</a> - The training data
--   schema.
newCreateModelVersion :: Text -> ModelTypeEnum -> TrainingDataSourceEnum -> TrainingDataSchema -> CreateModelVersion

-- | Details of the external events data used for model version training.
--   Required if <tt>trainingDataSource</tt> is <tt>EXTERNAL_EVENTS</tt>.
createModelVersion_externalEventsDetail :: Lens' CreateModelVersion (Maybe ExternalEventsDetail)

-- | Details of the ingested events data used for model version training.
--   Required if <tt>trainingDataSource</tt> is <tt>INGESTED_EVENTS</tt>.
createModelVersion_ingestedEventsDetail :: Lens' CreateModelVersion (Maybe IngestedEventsDetail)

-- | A collection of key and value pairs.
createModelVersion_tags :: Lens' CreateModelVersion (Maybe [Tag])

-- | The model ID.
createModelVersion_modelId :: Lens' CreateModelVersion Text

-- | The model type.
createModelVersion_modelType :: Lens' CreateModelVersion ModelTypeEnum

-- | The training data source location in Amazon S3.
createModelVersion_trainingDataSource :: Lens' CreateModelVersion TrainingDataSourceEnum

-- | The training data schema.
createModelVersion_trainingDataSchema :: Lens' CreateModelVersion TrainingDataSchema

-- | <i>See:</i> <a>newCreateModelVersionResponse</a> smart constructor.
data CreateModelVersionResponse
CreateModelVersionResponse' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Int -> CreateModelVersionResponse

-- | The model version status.
[$sel:status:CreateModelVersionResponse'] :: CreateModelVersionResponse -> Maybe Text

-- | The model type.
[$sel:modelType:CreateModelVersionResponse'] :: CreateModelVersionResponse -> Maybe ModelTypeEnum

-- | The model ID.
[$sel:modelId:CreateModelVersionResponse'] :: CreateModelVersionResponse -> Maybe Text

-- | The model version number of the model version created.
[$sel:modelVersionNumber:CreateModelVersionResponse'] :: CreateModelVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateModelVersionResponse'] :: CreateModelVersionResponse -> Int

-- | Create a value of <a>CreateModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateModelVersionResponse'</a>,
--   <a>createModelVersionResponse_status</a> - The model version status.
--   
--   <a>$sel:modelType:CreateModelVersion'</a>,
--   <a>createModelVersionResponse_modelType</a> - The model type.
--   
--   <a>$sel:modelId:CreateModelVersion'</a>,
--   <a>createModelVersionResponse_modelId</a> - The model ID.
--   
--   <a>$sel:modelVersionNumber:CreateModelVersionResponse'</a>,
--   <a>createModelVersionResponse_modelVersionNumber</a> - The model
--   version number of the model version created.
--   
--   <a>$sel:httpStatus:CreateModelVersionResponse'</a>,
--   <a>createModelVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateModelVersionResponse :: Int -> CreateModelVersionResponse

-- | The model version status.
createModelVersionResponse_status :: Lens' CreateModelVersionResponse (Maybe Text)

-- | The model type.
createModelVersionResponse_modelType :: Lens' CreateModelVersionResponse (Maybe ModelTypeEnum)

-- | The model ID.
createModelVersionResponse_modelId :: Lens' CreateModelVersionResponse (Maybe Text)

-- | The model version number of the model version created.
createModelVersionResponse_modelVersionNumber :: Lens' CreateModelVersionResponse (Maybe Text)

-- | The response's http status code.
createModelVersionResponse_httpStatus :: Lens' CreateModelVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance GHC.Show.Show Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance GHC.Read.Read Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CreateModelVersion.CreateModelVersion


-- | Creates a model using the specified model type.
module Network.AWS.FraudDetector.CreateModel

-- | <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe Text -> Maybe [Tag] -> Text -> ModelTypeEnum -> Text -> CreateModel

-- | The model description.
[$sel:description:CreateModel'] :: CreateModel -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:CreateModel'] :: CreateModel -> Maybe [Tag]

-- | The model ID.
[$sel:modelId:CreateModel'] :: CreateModel -> Text

-- | The model type.
[$sel:modelType:CreateModel'] :: CreateModel -> ModelTypeEnum

-- | The name of the event type.
[$sel:eventTypeName:CreateModel'] :: CreateModel -> Text

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateModel'</a>, <a>createModel_description</a> -
--   The model description.
--   
--   <a>$sel:tags:CreateModel'</a>, <a>createModel_tags</a> - A collection
--   of key and value pairs.
--   
--   <a>$sel:modelId:CreateModel'</a>, <a>createModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:modelType:CreateModel'</a>, <a>createModel_modelType</a> - The
--   model type.
--   
--   <a>$sel:eventTypeName:CreateModel'</a>,
--   <a>createModel_eventTypeName</a> - The name of the event type.
newCreateModel :: Text -> ModelTypeEnum -> Text -> CreateModel

-- | The model description.
createModel_description :: Lens' CreateModel (Maybe Text)

-- | A collection of key and value pairs.
createModel_tags :: Lens' CreateModel (Maybe [Tag])

-- | The model ID.
createModel_modelId :: Lens' CreateModel Text

-- | The model type.
createModel_modelType :: Lens' CreateModel ModelTypeEnum

-- | The name of the event type.
createModel_eventTypeName :: Lens' CreateModel Text

-- | <i>See:</i> <a>newCreateModelResponse</a> smart constructor.
data CreateModelResponse
CreateModelResponse' :: Int -> CreateModelResponse

-- | The response's http status code.
[$sel:httpStatus:CreateModelResponse'] :: CreateModelResponse -> Int

-- | Create a value of <a>CreateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateModelResponse'</a>,
--   <a>createModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateModelResponse :: Int -> CreateModelResponse

-- | The response's http status code.
createModelResponse_httpStatus :: Lens' CreateModelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateModel.CreateModel
instance GHC.Show.Show Network.AWS.FraudDetector.CreateModel.CreateModel
instance GHC.Read.Read Network.AWS.FraudDetector.CreateModel.CreateModel
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateModel.CreateModel
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateModel.CreateModelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CreateModel.CreateModelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CreateModel.CreateModelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateModel.CreateModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CreateModel.CreateModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateModel.CreateModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CreateModel.CreateModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateModel.CreateModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CreateModel.CreateModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CreateModel.CreateModel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CreateModel.CreateModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CreateModel.CreateModel


-- | Creates a detector version. The detector version starts in a
--   <tt>DRAFT</tt> status.
module Network.AWS.FraudDetector.CreateDetectorVersion

-- | <i>See:</i> <a>newCreateDetectorVersion</a> smart constructor.
data CreateDetectorVersion
CreateDetectorVersion' :: Maybe RuleExecutionMode -> Maybe [ModelVersion] -> Maybe [Text] -> Maybe Text -> Maybe [Tag] -> Text -> [Rule] -> CreateDetectorVersion

-- | The rule execution mode for the rules included in the detector
--   version.
--   
--   You can define and edit the rule mode at the detector version level,
--   when it is in draft status.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
[$sel:ruleExecutionMode:CreateDetectorVersion'] :: CreateDetectorVersion -> Maybe RuleExecutionMode

-- | The model versions to include in the detector version.
[$sel:modelVersions:CreateDetectorVersion'] :: CreateDetectorVersion -> Maybe [ModelVersion]

-- | The Amazon Sagemaker model endpoints to include in the detector
--   version.
[$sel:externalModelEndpoints:CreateDetectorVersion'] :: CreateDetectorVersion -> Maybe [Text]

-- | The description of the detector version.
[$sel:description:CreateDetectorVersion'] :: CreateDetectorVersion -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:CreateDetectorVersion'] :: CreateDetectorVersion -> Maybe [Tag]

-- | The ID of the detector under which you want to create a new version.
[$sel:detectorId:CreateDetectorVersion'] :: CreateDetectorVersion -> Text

-- | The rules to include in the detector version.
[$sel:rules:CreateDetectorVersion'] :: CreateDetectorVersion -> [Rule]

-- | Create a value of <a>CreateDetectorVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleExecutionMode:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_ruleExecutionMode</a> - The rule execution
--   mode for the rules included in the detector version.
--   
--   You can define and edit the rule mode at the detector version level,
--   when it is in draft status.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
--   
--   <a>$sel:modelVersions:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_modelVersions</a> - The model versions to
--   include in the detector version.
--   
--   <a>$sel:externalModelEndpoints:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_externalModelEndpoints</a> - The Amazon
--   Sagemaker model endpoints to include in the detector version.
--   
--   <a>$sel:description:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_description</a> - The description of the
--   detector version.
--   
--   <a>$sel:tags:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_tags</a> - A collection of key and value
--   pairs.
--   
--   <a>$sel:detectorId:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_detectorId</a> - The ID of the detector under
--   which you want to create a new version.
--   
--   <a>$sel:rules:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_rules</a> - The rules to include in the
--   detector version.
newCreateDetectorVersion :: Text -> CreateDetectorVersion

-- | The rule execution mode for the rules included in the detector
--   version.
--   
--   You can define and edit the rule mode at the detector version level,
--   when it is in draft status.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
createDetectorVersion_ruleExecutionMode :: Lens' CreateDetectorVersion (Maybe RuleExecutionMode)

-- | The model versions to include in the detector version.
createDetectorVersion_modelVersions :: Lens' CreateDetectorVersion (Maybe [ModelVersion])

-- | The Amazon Sagemaker model endpoints to include in the detector
--   version.
createDetectorVersion_externalModelEndpoints :: Lens' CreateDetectorVersion (Maybe [Text])

-- | The description of the detector version.
createDetectorVersion_description :: Lens' CreateDetectorVersion (Maybe Text)

-- | A collection of key and value pairs.
createDetectorVersion_tags :: Lens' CreateDetectorVersion (Maybe [Tag])

-- | The ID of the detector under which you want to create a new version.
createDetectorVersion_detectorId :: Lens' CreateDetectorVersion Text

-- | The rules to include in the detector version.
createDetectorVersion_rules :: Lens' CreateDetectorVersion [Rule]

-- | <i>See:</i> <a>newCreateDetectorVersionResponse</a> smart constructor.
data CreateDetectorVersionResponse
CreateDetectorVersionResponse' :: Maybe DetectorVersionStatus -> Maybe Text -> Maybe Text -> Int -> CreateDetectorVersionResponse

-- | The status of the detector version.
[$sel:status:CreateDetectorVersionResponse'] :: CreateDetectorVersionResponse -> Maybe DetectorVersionStatus

-- | The ID for the created detector.
[$sel:detectorVersionId:CreateDetectorVersionResponse'] :: CreateDetectorVersionResponse -> Maybe Text

-- | The ID for the created version's parent detector.
[$sel:detectorId:CreateDetectorVersionResponse'] :: CreateDetectorVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDetectorVersionResponse'] :: CreateDetectorVersionResponse -> Int

-- | Create a value of <a>CreateDetectorVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateDetectorVersionResponse'</a>,
--   <a>createDetectorVersionResponse_status</a> - The status of the
--   detector version.
--   
--   <a>$sel:detectorVersionId:CreateDetectorVersionResponse'</a>,
--   <a>createDetectorVersionResponse_detectorVersionId</a> - The ID for
--   the created detector.
--   
--   <a>$sel:detectorId:CreateDetectorVersion'</a>,
--   <a>createDetectorVersionResponse_detectorId</a> - The ID for the
--   created version's parent detector.
--   
--   <a>$sel:httpStatus:CreateDetectorVersionResponse'</a>,
--   <a>createDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateDetectorVersionResponse :: Int -> CreateDetectorVersionResponse

-- | The status of the detector version.
createDetectorVersionResponse_status :: Lens' CreateDetectorVersionResponse (Maybe DetectorVersionStatus)

-- | The ID for the created detector.
createDetectorVersionResponse_detectorVersionId :: Lens' CreateDetectorVersionResponse (Maybe Text)

-- | The ID for the created version's parent detector.
createDetectorVersionResponse_detectorId :: Lens' CreateDetectorVersionResponse (Maybe Text)

-- | The response's http status code.
createDetectorVersionResponse_httpStatus :: Lens' CreateDetectorVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance GHC.Show.Show Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance GHC.Read.Read Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CreateDetectorVersion.CreateDetectorVersion


-- | Creates a batch prediction job.
module Network.AWS.FraudDetector.CreateBatchPredictionJob

-- | <i>See:</i> <a>newCreateBatchPredictionJob</a> smart constructor.
data CreateBatchPredictionJob
CreateBatchPredictionJob' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> Text -> Text -> Text -> Text -> CreateBatchPredictionJob

-- | The detector version.
[$sel:detectorVersion:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Maybe Text

-- | A collection of key and value pairs.
[$sel:tags:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Maybe [Tag]

-- | The ID of the batch prediction job.
[$sel:jobId:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Text

-- | The Amazon S3 location of your training file.
[$sel:inputPath:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Text

-- | The Amazon S3 location of your output file.
[$sel:outputPath:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Text

-- | The name of the event type.
[$sel:eventTypeName:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Text

-- | The name of the detector.
[$sel:detectorName:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Text

-- | The ARN of the IAM role to use for this job request.
[$sel:iamRoleArn:CreateBatchPredictionJob'] :: CreateBatchPredictionJob -> Text

-- | Create a value of <a>CreateBatchPredictionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorVersion:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_detectorVersion</a> - The detector
--   version.
--   
--   <a>$sel:tags:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_tags</a> - A collection of key and value
--   pairs.
--   
--   <a>$sel:jobId:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_jobId</a> - The ID of the batch prediction
--   job.
--   
--   <a>$sel:inputPath:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_inputPath</a> - The Amazon S3 location of
--   your training file.
--   
--   <a>$sel:outputPath:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_outputPath</a> - The Amazon S3 location of
--   your output file.
--   
--   <a>$sel:eventTypeName:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_eventTypeName</a> - The name of the event
--   type.
--   
--   <a>$sel:detectorName:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_detectorName</a> - The name of the
--   detector.
--   
--   <a>$sel:iamRoleArn:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_iamRoleArn</a> - The ARN of the IAM role
--   to use for this job request.
newCreateBatchPredictionJob :: Text -> Text -> Text -> Text -> Text -> Text -> CreateBatchPredictionJob

-- | The detector version.
createBatchPredictionJob_detectorVersion :: Lens' CreateBatchPredictionJob (Maybe Text)

-- | A collection of key and value pairs.
createBatchPredictionJob_tags :: Lens' CreateBatchPredictionJob (Maybe [Tag])

-- | The ID of the batch prediction job.
createBatchPredictionJob_jobId :: Lens' CreateBatchPredictionJob Text

-- | The Amazon S3 location of your training file.
createBatchPredictionJob_inputPath :: Lens' CreateBatchPredictionJob Text

-- | The Amazon S3 location of your output file.
createBatchPredictionJob_outputPath :: Lens' CreateBatchPredictionJob Text

-- | The name of the event type.
createBatchPredictionJob_eventTypeName :: Lens' CreateBatchPredictionJob Text

-- | The name of the detector.
createBatchPredictionJob_detectorName :: Lens' CreateBatchPredictionJob Text

-- | The ARN of the IAM role to use for this job request.
createBatchPredictionJob_iamRoleArn :: Lens' CreateBatchPredictionJob Text

-- | <i>See:</i> <a>newCreateBatchPredictionJobResponse</a> smart
--   constructor.
data CreateBatchPredictionJobResponse
CreateBatchPredictionJobResponse' :: Int -> CreateBatchPredictionJobResponse

-- | The response's http status code.
[$sel:httpStatus:CreateBatchPredictionJobResponse'] :: CreateBatchPredictionJobResponse -> Int

-- | Create a value of <a>CreateBatchPredictionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBatchPredictionJobResponse'</a>,
--   <a>createBatchPredictionJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateBatchPredictionJobResponse :: Int -> CreateBatchPredictionJobResponse

-- | The response's http status code.
createBatchPredictionJobResponse_httpStatus :: Lens' CreateBatchPredictionJobResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance GHC.Show.Show Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance GHC.Read.Read Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJobResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJobResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJobResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CreateBatchPredictionJob.CreateBatchPredictionJob


-- | Creates a batch import job.
module Network.AWS.FraudDetector.CreateBatchImportJob

-- | <i>See:</i> <a>newCreateBatchImportJob</a> smart constructor.
data CreateBatchImportJob
CreateBatchImportJob' :: Maybe [Tag] -> Text -> Text -> Text -> Text -> Text -> CreateBatchImportJob

-- | A collection of key-value pairs associated with this request.
[$sel:tags:CreateBatchImportJob'] :: CreateBatchImportJob -> Maybe [Tag]

-- | The ID of the batch import job. The ID cannot be of a past job, unless
--   the job exists in <tt>CREATE_FAILED</tt> state.
[$sel:jobId:CreateBatchImportJob'] :: CreateBatchImportJob -> Text

-- | The URI that points to the Amazon S3 location of your data file.
[$sel:inputPath:CreateBatchImportJob'] :: CreateBatchImportJob -> Text

-- | The URI that points to the Amazon S3 location for storing your
--   results.
[$sel:outputPath:CreateBatchImportJob'] :: CreateBatchImportJob -> Text

-- | The name of the event type.
[$sel:eventTypeName:CreateBatchImportJob'] :: CreateBatchImportJob -> Text

-- | The ARN of the IAM role created for Amazon S3 bucket that holds your
--   data file. The IAM role must have read and write permissions to both
--   input and output S3 buckets.
[$sel:iamRoleArn:CreateBatchImportJob'] :: CreateBatchImportJob -> Text

-- | Create a value of <a>CreateBatchImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_tags</a> - A collection of key-value pairs
--   associated with this request.
--   
--   <a>$sel:jobId:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_jobId</a> - The ID of the batch import job.
--   The ID cannot be of a past job, unless the job exists in
--   <tt>CREATE_FAILED</tt> state.
--   
--   <a>$sel:inputPath:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_inputPath</a> - The URI that points to the
--   Amazon S3 location of your data file.
--   
--   <a>$sel:outputPath:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_outputPath</a> - The URI that points to the
--   Amazon S3 location for storing your results.
--   
--   <a>$sel:eventTypeName:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_eventTypeName</a> - The name of the event
--   type.
--   
--   <a>$sel:iamRoleArn:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_iamRoleArn</a> - The ARN of the IAM role
--   created for Amazon S3 bucket that holds your data file. The IAM role
--   must have read and write permissions to both input and output S3
--   buckets.
newCreateBatchImportJob :: Text -> Text -> Text -> Text -> Text -> CreateBatchImportJob

-- | A collection of key-value pairs associated with this request.
createBatchImportJob_tags :: Lens' CreateBatchImportJob (Maybe [Tag])

-- | The ID of the batch import job. The ID cannot be of a past job, unless
--   the job exists in <tt>CREATE_FAILED</tt> state.
createBatchImportJob_jobId :: Lens' CreateBatchImportJob Text

-- | The URI that points to the Amazon S3 location of your data file.
createBatchImportJob_inputPath :: Lens' CreateBatchImportJob Text

-- | The URI that points to the Amazon S3 location for storing your
--   results.
createBatchImportJob_outputPath :: Lens' CreateBatchImportJob Text

-- | The name of the event type.
createBatchImportJob_eventTypeName :: Lens' CreateBatchImportJob Text

-- | The ARN of the IAM role created for Amazon S3 bucket that holds your
--   data file. The IAM role must have read and write permissions to both
--   input and output S3 buckets.
createBatchImportJob_iamRoleArn :: Lens' CreateBatchImportJob Text

-- | <i>See:</i> <a>newCreateBatchImportJobResponse</a> smart constructor.
data CreateBatchImportJobResponse
CreateBatchImportJobResponse' :: Int -> CreateBatchImportJobResponse

-- | The response's http status code.
[$sel:httpStatus:CreateBatchImportJobResponse'] :: CreateBatchImportJobResponse -> Int

-- | Create a value of <a>CreateBatchImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBatchImportJobResponse'</a>,
--   <a>createBatchImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateBatchImportJobResponse :: Int -> CreateBatchImportJobResponse

-- | The response's http status code.
createBatchImportJobResponse_httpStatus :: Lens' CreateBatchImportJobResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance GHC.Show.Show Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance GHC.Read.Read Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance GHC.Generics.Generic Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJobResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJobResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJobResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CreateBatchImportJob.CreateBatchImportJob


-- | Cancels the specified batch prediction job.
module Network.AWS.FraudDetector.CancelBatchPredictionJob

-- | <i>See:</i> <a>newCancelBatchPredictionJob</a> smart constructor.
data CancelBatchPredictionJob
CancelBatchPredictionJob' :: Text -> CancelBatchPredictionJob

-- | The ID of the batch prediction job to cancel.
[$sel:jobId:CancelBatchPredictionJob'] :: CancelBatchPredictionJob -> Text

-- | Create a value of <a>CancelBatchPredictionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelBatchPredictionJob'</a>,
--   <a>cancelBatchPredictionJob_jobId</a> - The ID of the batch prediction
--   job to cancel.
newCancelBatchPredictionJob :: Text -> CancelBatchPredictionJob

-- | The ID of the batch prediction job to cancel.
cancelBatchPredictionJob_jobId :: Lens' CancelBatchPredictionJob Text

-- | <i>See:</i> <a>newCancelBatchPredictionJobResponse</a> smart
--   constructor.
data CancelBatchPredictionJobResponse
CancelBatchPredictionJobResponse' :: Int -> CancelBatchPredictionJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelBatchPredictionJobResponse'] :: CancelBatchPredictionJobResponse -> Int

-- | Create a value of <a>CancelBatchPredictionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelBatchPredictionJobResponse'</a>,
--   <a>cancelBatchPredictionJobResponse_httpStatus</a> - The response's
--   http status code.
newCancelBatchPredictionJobResponse :: Int -> CancelBatchPredictionJobResponse

-- | The response's http status code.
cancelBatchPredictionJobResponse_httpStatus :: Lens' CancelBatchPredictionJobResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance GHC.Show.Show Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance GHC.Read.Read Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance GHC.Classes.Eq Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance GHC.Generics.Generic Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJobResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJobResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJobResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CancelBatchPredictionJob.CancelBatchPredictionJob


-- | Cancels an in-progress batch import job.
module Network.AWS.FraudDetector.CancelBatchImportJob

-- | <i>See:</i> <a>newCancelBatchImportJob</a> smart constructor.
data CancelBatchImportJob
CancelBatchImportJob' :: Text -> CancelBatchImportJob

-- | The ID of an in-progress batch import job to cancel.
--   
--   Amazon Fraud Detector will throw an error if the batch import job is
--   in <tt>FAILED</tt>, <tt>CANCELED</tt>, or <tt>COMPLETED</tt> state.
[$sel:jobId:CancelBatchImportJob'] :: CancelBatchImportJob -> Text

-- | Create a value of <a>CancelBatchImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelBatchImportJob'</a>,
--   <a>cancelBatchImportJob_jobId</a> - The ID of an in-progress batch
--   import job to cancel.
--   
--   Amazon Fraud Detector will throw an error if the batch import job is
--   in <tt>FAILED</tt>, <tt>CANCELED</tt>, or <tt>COMPLETED</tt> state.
newCancelBatchImportJob :: Text -> CancelBatchImportJob

-- | The ID of an in-progress batch import job to cancel.
--   
--   Amazon Fraud Detector will throw an error if the batch import job is
--   in <tt>FAILED</tt>, <tt>CANCELED</tt>, or <tt>COMPLETED</tt> state.
cancelBatchImportJob_jobId :: Lens' CancelBatchImportJob Text

-- | <i>See:</i> <a>newCancelBatchImportJobResponse</a> smart constructor.
data CancelBatchImportJobResponse
CancelBatchImportJobResponse' :: Int -> CancelBatchImportJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelBatchImportJobResponse'] :: CancelBatchImportJobResponse -> Int

-- | Create a value of <a>CancelBatchImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelBatchImportJobResponse'</a>,
--   <a>cancelBatchImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelBatchImportJobResponse :: Int -> CancelBatchImportJobResponse

-- | The response's http status code.
cancelBatchImportJobResponse_httpStatus :: Lens' CancelBatchImportJobResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance GHC.Show.Show Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance GHC.Read.Read Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance GHC.Classes.Eq Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance GHC.Generics.Generic Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJobResponse
instance GHC.Show.Show Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJobResponse
instance GHC.Read.Read Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJobResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.CancelBatchImportJob.CancelBatchImportJob


-- | Gets a batch of variables.
module Network.AWS.FraudDetector.BatchGetVariable

-- | <i>See:</i> <a>newBatchGetVariable</a> smart constructor.
data BatchGetVariable
BatchGetVariable' :: NonEmpty Text -> BatchGetVariable

-- | The list of variable names to get.
[$sel:names:BatchGetVariable'] :: BatchGetVariable -> NonEmpty Text

-- | Create a value of <a>BatchGetVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:BatchGetVariable'</a>, <a>batchGetVariable_names</a> -
--   The list of variable names to get.
newBatchGetVariable :: NonEmpty Text -> BatchGetVariable

-- | The list of variable names to get.
batchGetVariable_names :: Lens' BatchGetVariable (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetVariableResponse</a> smart constructor.
data BatchGetVariableResponse
BatchGetVariableResponse' :: Maybe [Variable] -> Maybe [BatchGetVariableError] -> Int -> BatchGetVariableResponse

-- | The returned variables.
[$sel:variables:BatchGetVariableResponse'] :: BatchGetVariableResponse -> Maybe [Variable]

-- | The errors from the request.
[$sel:errors:BatchGetVariableResponse'] :: BatchGetVariableResponse -> Maybe [BatchGetVariableError]

-- | The response's http status code.
[$sel:httpStatus:BatchGetVariableResponse'] :: BatchGetVariableResponse -> Int

-- | Create a value of <a>BatchGetVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:BatchGetVariableResponse'</a>,
--   <a>batchGetVariableResponse_variables</a> - The returned variables.
--   
--   <a>$sel:errors:BatchGetVariableResponse'</a>,
--   <a>batchGetVariableResponse_errors</a> - The errors from the request.
--   
--   <a>$sel:httpStatus:BatchGetVariableResponse'</a>,
--   <a>batchGetVariableResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetVariableResponse :: Int -> BatchGetVariableResponse

-- | The returned variables.
batchGetVariableResponse_variables :: Lens' BatchGetVariableResponse (Maybe [Variable])

-- | The errors from the request.
batchGetVariableResponse_errors :: Lens' BatchGetVariableResponse (Maybe [BatchGetVariableError])

-- | The response's http status code.
batchGetVariableResponse_httpStatus :: Lens' BatchGetVariableResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance GHC.Show.Show Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance GHC.Read.Read Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance GHC.Classes.Eq Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance GHC.Generics.Generic Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariableResponse
instance GHC.Show.Show Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariableResponse
instance GHC.Read.Read Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariableResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariableResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.BatchGetVariable.BatchGetVariable


-- | Creates a batch of variables.
module Network.AWS.FraudDetector.BatchCreateVariable

-- | <i>See:</i> <a>newBatchCreateVariable</a> smart constructor.
data BatchCreateVariable
BatchCreateVariable' :: Maybe [Tag] -> NonEmpty VariableEntry -> BatchCreateVariable

-- | A collection of key and value pairs.
[$sel:tags:BatchCreateVariable'] :: BatchCreateVariable -> Maybe [Tag]

-- | The list of variables for the batch create variable request.
[$sel:variableEntries:BatchCreateVariable'] :: BatchCreateVariable -> NonEmpty VariableEntry

-- | Create a value of <a>BatchCreateVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:BatchCreateVariable'</a>, <a>batchCreateVariable_tags</a>
--   - A collection of key and value pairs.
--   
--   <a>$sel:variableEntries:BatchCreateVariable'</a>,
--   <a>batchCreateVariable_variableEntries</a> - The list of variables for
--   the batch create variable request.
newBatchCreateVariable :: NonEmpty VariableEntry -> BatchCreateVariable

-- | A collection of key and value pairs.
batchCreateVariable_tags :: Lens' BatchCreateVariable (Maybe [Tag])

-- | The list of variables for the batch create variable request.
batchCreateVariable_variableEntries :: Lens' BatchCreateVariable (NonEmpty VariableEntry)

-- | <i>See:</i> <a>newBatchCreateVariableResponse</a> smart constructor.
data BatchCreateVariableResponse
BatchCreateVariableResponse' :: Maybe [BatchCreateVariableError] -> Int -> BatchCreateVariableResponse

-- | Provides the errors for the <tt>BatchCreateVariable</tt> request.
[$sel:errors:BatchCreateVariableResponse'] :: BatchCreateVariableResponse -> Maybe [BatchCreateVariableError]

-- | The response's http status code.
[$sel:httpStatus:BatchCreateVariableResponse'] :: BatchCreateVariableResponse -> Int

-- | Create a value of <a>BatchCreateVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchCreateVariableResponse'</a>,
--   <a>batchCreateVariableResponse_errors</a> - Provides the errors for
--   the <tt>BatchCreateVariable</tt> request.
--   
--   <a>$sel:httpStatus:BatchCreateVariableResponse'</a>,
--   <a>batchCreateVariableResponse_httpStatus</a> - The response's http
--   status code.
newBatchCreateVariableResponse :: Int -> BatchCreateVariableResponse

-- | Provides the errors for the <tt>BatchCreateVariable</tt> request.
batchCreateVariableResponse_errors :: Lens' BatchCreateVariableResponse (Maybe [BatchCreateVariableError])

-- | The response's http status code.
batchCreateVariableResponse_httpStatus :: Lens' BatchCreateVariableResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance GHC.Show.Show Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance GHC.Read.Read Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance GHC.Classes.Eq Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance GHC.Generics.Generic Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariableResponse
instance GHC.Show.Show Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariableResponse
instance GHC.Read.Read Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariableResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariableResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.BatchCreateVariable.BatchCreateVariable


-- | Removes tags from a resource.
module Network.AWS.FraudDetector.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The ARN of the resource from which to remove the tag.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The resource ARN.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the resource from which
--   to remove the tag.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   resource ARN.
newUntagResource :: Text -> UntagResource

-- | The ARN of the resource from which to remove the tag.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The resource ARN.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.FraudDetector.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.FraudDetector.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.FraudDetector.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.FraudDetector.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UntagResource.UntagResource


-- | Updates a detector version. The detector version attributes that you
--   can update include models, external model endpoints, rules, rule
--   execution mode, and description. You can only update a <tt>DRAFT</tt>
--   detector version.
module Network.AWS.FraudDetector.UpdateDetectorVersion

-- | <i>See:</i> <a>newUpdateDetectorVersion</a> smart constructor.
data UpdateDetectorVersion
UpdateDetectorVersion' :: Maybe RuleExecutionMode -> Maybe [ModelVersion] -> Maybe Text -> Text -> Text -> [Text] -> [Rule] -> UpdateDetectorVersion

-- | The rule execution mode to add to the detector.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
[$sel:ruleExecutionMode:UpdateDetectorVersion'] :: UpdateDetectorVersion -> Maybe RuleExecutionMode

-- | The model versions to include in the detector version.
[$sel:modelVersions:UpdateDetectorVersion'] :: UpdateDetectorVersion -> Maybe [ModelVersion]

-- | The detector version description.
[$sel:description:UpdateDetectorVersion'] :: UpdateDetectorVersion -> Maybe Text

-- | The parent detector ID for the detector version you want to update.
[$sel:detectorId:UpdateDetectorVersion'] :: UpdateDetectorVersion -> Text

-- | The detector version ID.
[$sel:detectorVersionId:UpdateDetectorVersion'] :: UpdateDetectorVersion -> Text

-- | The Amazon SageMaker model endpoints to include in the detector
--   version.
[$sel:externalModelEndpoints:UpdateDetectorVersion'] :: UpdateDetectorVersion -> [Text]

-- | The rules to include in the detector version.
[$sel:rules:UpdateDetectorVersion'] :: UpdateDetectorVersion -> [Rule]

-- | Create a value of <a>UpdateDetectorVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleExecutionMode:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_ruleExecutionMode</a> - The rule execution
--   mode to add to the detector.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
--   
--   <a>$sel:modelVersions:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_modelVersions</a> - The model versions to
--   include in the detector version.
--   
--   <a>$sel:description:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_description</a> - The detector version
--   description.
--   
--   <a>$sel:detectorId:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_detectorId</a> - The parent detector ID for
--   the detector version you want to update.
--   
--   <a>$sel:detectorVersionId:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_detectorVersionId</a> - The detector version
--   ID.
--   
--   <a>$sel:externalModelEndpoints:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_externalModelEndpoints</a> - The Amazon
--   SageMaker model endpoints to include in the detector version.
--   
--   <a>$sel:rules:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_rules</a> - The rules to include in the
--   detector version.
newUpdateDetectorVersion :: Text -> Text -> UpdateDetectorVersion

-- | The rule execution mode to add to the detector.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
updateDetectorVersion_ruleExecutionMode :: Lens' UpdateDetectorVersion (Maybe RuleExecutionMode)

-- | The model versions to include in the detector version.
updateDetectorVersion_modelVersions :: Lens' UpdateDetectorVersion (Maybe [ModelVersion])

-- | The detector version description.
updateDetectorVersion_description :: Lens' UpdateDetectorVersion (Maybe Text)

-- | The parent detector ID for the detector version you want to update.
updateDetectorVersion_detectorId :: Lens' UpdateDetectorVersion Text

-- | The detector version ID.
updateDetectorVersion_detectorVersionId :: Lens' UpdateDetectorVersion Text

-- | The Amazon SageMaker model endpoints to include in the detector
--   version.
updateDetectorVersion_externalModelEndpoints :: Lens' UpdateDetectorVersion [Text]

-- | The rules to include in the detector version.
updateDetectorVersion_rules :: Lens' UpdateDetectorVersion [Rule]

-- | <i>See:</i> <a>newUpdateDetectorVersionResponse</a> smart constructor.
data UpdateDetectorVersionResponse
UpdateDetectorVersionResponse' :: Int -> UpdateDetectorVersionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDetectorVersionResponse'] :: UpdateDetectorVersionResponse -> Int

-- | Create a value of <a>UpdateDetectorVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDetectorVersionResponse'</a>,
--   <a>updateDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDetectorVersionResponse :: Int -> UpdateDetectorVersionResponse

-- | The response's http status code.
updateDetectorVersionResponse_httpStatus :: Lens' UpdateDetectorVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateDetectorVersion.UpdateDetectorVersion


-- | Updates the detector version's description. You can update the
--   metadata for any detector version (<tt>DRAFT, ACTIVE,</tt> or
--   <tt>INACTIVE</tt>).
module Network.AWS.FraudDetector.UpdateDetectorVersionMetadata

-- | <i>See:</i> <a>newUpdateDetectorVersionMetadata</a> smart constructor.
data UpdateDetectorVersionMetadata
UpdateDetectorVersionMetadata' :: Text -> Text -> Text -> UpdateDetectorVersionMetadata

-- | The detector ID.
[$sel:detectorId:UpdateDetectorVersionMetadata'] :: UpdateDetectorVersionMetadata -> Text

-- | The detector version ID.
[$sel:detectorVersionId:UpdateDetectorVersionMetadata'] :: UpdateDetectorVersionMetadata -> Text

-- | The description.
[$sel:description:UpdateDetectorVersionMetadata'] :: UpdateDetectorVersionMetadata -> Text

-- | Create a value of <a>UpdateDetectorVersionMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:UpdateDetectorVersionMetadata'</a>,
--   <a>updateDetectorVersionMetadata_detectorId</a> - The detector ID.
--   
--   <a>$sel:detectorVersionId:UpdateDetectorVersionMetadata'</a>,
--   <a>updateDetectorVersionMetadata_detectorVersionId</a> - The detector
--   version ID.
--   
--   <a>$sel:description:UpdateDetectorVersionMetadata'</a>,
--   <a>updateDetectorVersionMetadata_description</a> - The description.
newUpdateDetectorVersionMetadata :: Text -> Text -> Text -> UpdateDetectorVersionMetadata

-- | The detector ID.
updateDetectorVersionMetadata_detectorId :: Lens' UpdateDetectorVersionMetadata Text

-- | The detector version ID.
updateDetectorVersionMetadata_detectorVersionId :: Lens' UpdateDetectorVersionMetadata Text

-- | The description.
updateDetectorVersionMetadata_description :: Lens' UpdateDetectorVersionMetadata Text

-- | <i>See:</i> <a>newUpdateDetectorVersionMetadataResponse</a> smart
--   constructor.
data UpdateDetectorVersionMetadataResponse
UpdateDetectorVersionMetadataResponse' :: Int -> UpdateDetectorVersionMetadataResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDetectorVersionMetadataResponse'] :: UpdateDetectorVersionMetadataResponse -> Int

-- | Create a value of <a>UpdateDetectorVersionMetadataResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDetectorVersionMetadataResponse'</a>,
--   <a>updateDetectorVersionMetadataResponse_httpStatus</a> - The
--   response's http status code.
newUpdateDetectorVersionMetadataResponse :: Int -> UpdateDetectorVersionMetadataResponse

-- | The response's http status code.
updateDetectorVersionMetadataResponse_httpStatus :: Lens' UpdateDetectorVersionMetadataResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadataResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadataResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadataResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadataResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateDetectorVersionMetadata.UpdateDetectorVersionMetadata


-- | Updates the detector version’s status. You can perform the following
--   promotions or demotions using <tt>UpdateDetectorVersionStatus</tt>:
--   <tt>DRAFT</tt> to <tt>ACTIVE</tt>, <tt>ACTIVE</tt> to
--   <tt>INACTIVE</tt>, and <tt>INACTIVE</tt> to <tt>ACTIVE</tt>.
module Network.AWS.FraudDetector.UpdateDetectorVersionStatus

-- | <i>See:</i> <a>newUpdateDetectorVersionStatus</a> smart constructor.
data UpdateDetectorVersionStatus
UpdateDetectorVersionStatus' :: Text -> Text -> DetectorVersionStatus -> UpdateDetectorVersionStatus

-- | The detector ID.
[$sel:detectorId:UpdateDetectorVersionStatus'] :: UpdateDetectorVersionStatus -> Text

-- | The detector version ID.
[$sel:detectorVersionId:UpdateDetectorVersionStatus'] :: UpdateDetectorVersionStatus -> Text

-- | The new status.
[$sel:status:UpdateDetectorVersionStatus'] :: UpdateDetectorVersionStatus -> DetectorVersionStatus

-- | Create a value of <a>UpdateDetectorVersionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:UpdateDetectorVersionStatus'</a>,
--   <a>updateDetectorVersionStatus_detectorId</a> - The detector ID.
--   
--   <a>$sel:detectorVersionId:UpdateDetectorVersionStatus'</a>,
--   <a>updateDetectorVersionStatus_detectorVersionId</a> - The detector
--   version ID.
--   
--   <a>$sel:status:UpdateDetectorVersionStatus'</a>,
--   <a>updateDetectorVersionStatus_status</a> - The new status.
newUpdateDetectorVersionStatus :: Text -> Text -> DetectorVersionStatus -> UpdateDetectorVersionStatus

-- | The detector ID.
updateDetectorVersionStatus_detectorId :: Lens' UpdateDetectorVersionStatus Text

-- | The detector version ID.
updateDetectorVersionStatus_detectorVersionId :: Lens' UpdateDetectorVersionStatus Text

-- | The new status.
updateDetectorVersionStatus_status :: Lens' UpdateDetectorVersionStatus DetectorVersionStatus

-- | <i>See:</i> <a>newUpdateDetectorVersionStatusResponse</a> smart
--   constructor.
data UpdateDetectorVersionStatusResponse
UpdateDetectorVersionStatusResponse' :: Int -> UpdateDetectorVersionStatusResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDetectorVersionStatusResponse'] :: UpdateDetectorVersionStatusResponse -> Int

-- | Create a value of <a>UpdateDetectorVersionStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDetectorVersionStatusResponse'</a>,
--   <a>updateDetectorVersionStatusResponse_httpStatus</a> - The response's
--   http status code.
newUpdateDetectorVersionStatusResponse :: Int -> UpdateDetectorVersionStatusResponse

-- | The response's http status code.
updateDetectorVersionStatusResponse_httpStatus :: Lens' UpdateDetectorVersionStatusResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatusResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatusResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatusResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateDetectorVersionStatus.UpdateDetectorVersionStatus


-- | Updates the specified event with a new label.
module Network.AWS.FraudDetector.UpdateEventLabel

-- | <i>See:</i> <a>newUpdateEventLabel</a> smart constructor.
data UpdateEventLabel
UpdateEventLabel' :: Text -> Text -> Text -> Text -> UpdateEventLabel

-- | The ID of the event associated with the label to update.
[$sel:eventId:UpdateEventLabel'] :: UpdateEventLabel -> Text

-- | The event type of the event associated with the label to update.
[$sel:eventTypeName:UpdateEventLabel'] :: UpdateEventLabel -> Text

-- | The new label to assign to the event.
[$sel:assignedLabel:UpdateEventLabel'] :: UpdateEventLabel -> Text

-- | The timestamp associated with the label. The timestamp must be
--   specified using ISO 8601 standard in UTC.
[$sel:labelTimestamp:UpdateEventLabel'] :: UpdateEventLabel -> Text

-- | Create a value of <a>UpdateEventLabel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventId:UpdateEventLabel'</a>, <a>updateEventLabel_eventId</a>
--   - The ID of the event associated with the label to update.
--   
--   <a>$sel:eventTypeName:UpdateEventLabel'</a>,
--   <a>updateEventLabel_eventTypeName</a> - The event type of the event
--   associated with the label to update.
--   
--   <a>$sel:assignedLabel:UpdateEventLabel'</a>,
--   <a>updateEventLabel_assignedLabel</a> - The new label to assign to the
--   event.
--   
--   <a>$sel:labelTimestamp:UpdateEventLabel'</a>,
--   <a>updateEventLabel_labelTimestamp</a> - The timestamp associated with
--   the label. The timestamp must be specified using ISO 8601 standard in
--   UTC.
newUpdateEventLabel :: Text -> Text -> Text -> Text -> UpdateEventLabel

-- | The ID of the event associated with the label to update.
updateEventLabel_eventId :: Lens' UpdateEventLabel Text

-- | The event type of the event associated with the label to update.
updateEventLabel_eventTypeName :: Lens' UpdateEventLabel Text

-- | The new label to assign to the event.
updateEventLabel_assignedLabel :: Lens' UpdateEventLabel Text

-- | The timestamp associated with the label. The timestamp must be
--   specified using ISO 8601 standard in UTC.
updateEventLabel_labelTimestamp :: Lens' UpdateEventLabel Text

-- | <i>See:</i> <a>newUpdateEventLabelResponse</a> smart constructor.
data UpdateEventLabelResponse
UpdateEventLabelResponse' :: Int -> UpdateEventLabelResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateEventLabelResponse'] :: UpdateEventLabelResponse -> Int

-- | Create a value of <a>UpdateEventLabelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateEventLabelResponse'</a>,
--   <a>updateEventLabelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateEventLabelResponse :: Int -> UpdateEventLabelResponse

-- | The response's http status code.
updateEventLabelResponse_httpStatus :: Lens' UpdateEventLabelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateEventLabel.UpdateEventLabel


-- | Updates model description.
module Network.AWS.FraudDetector.UpdateModel

-- | <i>See:</i> <a>newUpdateModel</a> smart constructor.
data UpdateModel
UpdateModel' :: Maybe Text -> Text -> ModelTypeEnum -> UpdateModel

-- | The new model description.
[$sel:description:UpdateModel'] :: UpdateModel -> Maybe Text

-- | The model ID.
[$sel:modelId:UpdateModel'] :: UpdateModel -> Text

-- | The model type.
[$sel:modelType:UpdateModel'] :: UpdateModel -> ModelTypeEnum

-- | Create a value of <a>UpdateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateModel'</a>, <a>updateModel_description</a> -
--   The new model description.
--   
--   <a>$sel:modelId:UpdateModel'</a>, <a>updateModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:modelType:UpdateModel'</a>, <a>updateModel_modelType</a> - The
--   model type.
newUpdateModel :: Text -> ModelTypeEnum -> UpdateModel

-- | The new model description.
updateModel_description :: Lens' UpdateModel (Maybe Text)

-- | The model ID.
updateModel_modelId :: Lens' UpdateModel Text

-- | The model type.
updateModel_modelType :: Lens' UpdateModel ModelTypeEnum

-- | <i>See:</i> <a>newUpdateModelResponse</a> smart constructor.
data UpdateModelResponse
UpdateModelResponse' :: Int -> UpdateModelResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateModelResponse'] :: UpdateModelResponse -> Int

-- | Create a value of <a>UpdateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateModelResponse'</a>,
--   <a>updateModelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateModelResponse :: Int -> UpdateModelResponse

-- | The response's http status code.
updateModelResponse_httpStatus :: Lens' UpdateModelResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateModel.UpdateModelResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateModel.UpdateModelResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateModel.UpdateModelResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateModel.UpdateModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateModel.UpdateModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateModel.UpdateModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateModel.UpdateModel


-- | Updates a model version. Updating a model version retrains an existing
--   model version using updated training data and produces a new minor
--   version of the model. You can update the training data set location
--   and data access role attributes using this action. This action creates
--   and trains a new minor version of the model, for example version 1.01,
--   1.02, 1.03.
module Network.AWS.FraudDetector.UpdateModelVersion

-- | <i>See:</i> <a>newUpdateModelVersion</a> smart constructor.
data UpdateModelVersion
UpdateModelVersion' :: Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe [Tag] -> Text -> ModelTypeEnum -> Text -> UpdateModelVersion

-- | The details of the external events data used for training the model
--   version. Required if <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>.
[$sel:externalEventsDetail:UpdateModelVersion'] :: UpdateModelVersion -> Maybe ExternalEventsDetail

-- | The details of the ingested event used for training the model version.
--   Required if your <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
[$sel:ingestedEventsDetail:UpdateModelVersion'] :: UpdateModelVersion -> Maybe IngestedEventsDetail

-- | A collection of key and value pairs.
[$sel:tags:UpdateModelVersion'] :: UpdateModelVersion -> Maybe [Tag]

-- | The model ID.
[$sel:modelId:UpdateModelVersion'] :: UpdateModelVersion -> Text

-- | The model type.
[$sel:modelType:UpdateModelVersion'] :: UpdateModelVersion -> ModelTypeEnum

-- | The major version number.
[$sel:majorVersionNumber:UpdateModelVersion'] :: UpdateModelVersion -> Text

-- | Create a value of <a>UpdateModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalEventsDetail:UpdateModelVersion'</a>,
--   <a>updateModelVersion_externalEventsDetail</a> - The details of the
--   external events data used for training the model version. Required if
--   <tt>trainingDataSource</tt> is <tt>EXTERNAL_EVENTS</tt>.
--   
--   <a>$sel:ingestedEventsDetail:UpdateModelVersion'</a>,
--   <a>updateModelVersion_ingestedEventsDetail</a> - The details of the
--   ingested event used for training the model version. Required if your
--   <tt>trainingDataSource</tt> is <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:tags:UpdateModelVersion'</a>, <a>updateModelVersion_tags</a> -
--   A collection of key and value pairs.
--   
--   <a>$sel:modelId:UpdateModelVersion'</a>,
--   <a>updateModelVersion_modelId</a> - The model ID.
--   
--   <a>$sel:modelType:UpdateModelVersion'</a>,
--   <a>updateModelVersion_modelType</a> - The model type.
--   
--   <a>$sel:majorVersionNumber:UpdateModelVersion'</a>,
--   <a>updateModelVersion_majorVersionNumber</a> - The major version
--   number.
newUpdateModelVersion :: Text -> ModelTypeEnum -> Text -> UpdateModelVersion

-- | The details of the external events data used for training the model
--   version. Required if <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>.
updateModelVersion_externalEventsDetail :: Lens' UpdateModelVersion (Maybe ExternalEventsDetail)

-- | The details of the ingested event used for training the model version.
--   Required if your <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
updateModelVersion_ingestedEventsDetail :: Lens' UpdateModelVersion (Maybe IngestedEventsDetail)

-- | A collection of key and value pairs.
updateModelVersion_tags :: Lens' UpdateModelVersion (Maybe [Tag])

-- | The model ID.
updateModelVersion_modelId :: Lens' UpdateModelVersion Text

-- | The model type.
updateModelVersion_modelType :: Lens' UpdateModelVersion ModelTypeEnum

-- | The major version number.
updateModelVersion_majorVersionNumber :: Lens' UpdateModelVersion Text

-- | <i>See:</i> <a>newUpdateModelVersionResponse</a> smart constructor.
data UpdateModelVersionResponse
UpdateModelVersionResponse' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Int -> UpdateModelVersionResponse

-- | The status of the updated model version.
[$sel:status:UpdateModelVersionResponse'] :: UpdateModelVersionResponse -> Maybe Text

-- | The model type.
[$sel:modelType:UpdateModelVersionResponse'] :: UpdateModelVersionResponse -> Maybe ModelTypeEnum

-- | The model ID.
[$sel:modelId:UpdateModelVersionResponse'] :: UpdateModelVersionResponse -> Maybe Text

-- | The model version number of the model version updated.
[$sel:modelVersionNumber:UpdateModelVersionResponse'] :: UpdateModelVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateModelVersionResponse'] :: UpdateModelVersionResponse -> Int

-- | Create a value of <a>UpdateModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateModelVersionResponse'</a>,
--   <a>updateModelVersionResponse_status</a> - The status of the updated
--   model version.
--   
--   <a>$sel:modelType:UpdateModelVersion'</a>,
--   <a>updateModelVersionResponse_modelType</a> - The model type.
--   
--   <a>$sel:modelId:UpdateModelVersion'</a>,
--   <a>updateModelVersionResponse_modelId</a> - The model ID.
--   
--   <a>$sel:modelVersionNumber:UpdateModelVersionResponse'</a>,
--   <a>updateModelVersionResponse_modelVersionNumber</a> - The model
--   version number of the model version updated.
--   
--   <a>$sel:httpStatus:UpdateModelVersionResponse'</a>,
--   <a>updateModelVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateModelVersionResponse :: Int -> UpdateModelVersionResponse

-- | The status of the updated model version.
updateModelVersionResponse_status :: Lens' UpdateModelVersionResponse (Maybe Text)

-- | The model type.
updateModelVersionResponse_modelType :: Lens' UpdateModelVersionResponse (Maybe ModelTypeEnum)

-- | The model ID.
updateModelVersionResponse_modelId :: Lens' UpdateModelVersionResponse (Maybe Text)

-- | The model version number of the model version updated.
updateModelVersionResponse_modelVersionNumber :: Lens' UpdateModelVersionResponse (Maybe Text)

-- | The response's http status code.
updateModelVersionResponse_httpStatus :: Lens' UpdateModelVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateModelVersion.UpdateModelVersion


-- | Updates the status of a model version.
--   
--   You can perform the following status updates:
--   
--   <ol>
--   <li>Change the <tt>TRAINING_COMPLETE</tt> status to
--   <tt>ACTIVE</tt>.</li>
--   <li>Change <tt>ACTIVE</tt> to <tt>INACTIVE</tt>.</li>
--   </ol>
module Network.AWS.FraudDetector.UpdateModelVersionStatus

-- | <i>See:</i> <a>newUpdateModelVersionStatus</a> smart constructor.
data UpdateModelVersionStatus
UpdateModelVersionStatus' :: Text -> ModelTypeEnum -> Text -> ModelVersionStatus -> UpdateModelVersionStatus

-- | The model ID of the model version to update.
[$sel:modelId:UpdateModelVersionStatus'] :: UpdateModelVersionStatus -> Text

-- | The model type.
[$sel:modelType:UpdateModelVersionStatus'] :: UpdateModelVersionStatus -> ModelTypeEnum

-- | The model version number.
[$sel:modelVersionNumber:UpdateModelVersionStatus'] :: UpdateModelVersionStatus -> Text

-- | The model version status.
[$sel:status:UpdateModelVersionStatus'] :: UpdateModelVersionStatus -> ModelVersionStatus

-- | Create a value of <a>UpdateModelVersionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_modelId</a> - The model ID of the model
--   version to update.
--   
--   <a>$sel:modelType:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_modelType</a> - The model type.
--   
--   <a>$sel:modelVersionNumber:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:status:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_status</a> - The model version status.
newUpdateModelVersionStatus :: Text -> ModelTypeEnum -> Text -> ModelVersionStatus -> UpdateModelVersionStatus

-- | The model ID of the model version to update.
updateModelVersionStatus_modelId :: Lens' UpdateModelVersionStatus Text

-- | The model type.
updateModelVersionStatus_modelType :: Lens' UpdateModelVersionStatus ModelTypeEnum

-- | The model version number.
updateModelVersionStatus_modelVersionNumber :: Lens' UpdateModelVersionStatus Text

-- | The model version status.
updateModelVersionStatus_status :: Lens' UpdateModelVersionStatus ModelVersionStatus

-- | <i>See:</i> <a>newUpdateModelVersionStatusResponse</a> smart
--   constructor.
data UpdateModelVersionStatusResponse
UpdateModelVersionStatusResponse' :: Int -> UpdateModelVersionStatusResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateModelVersionStatusResponse'] :: UpdateModelVersionStatusResponse -> Int

-- | Create a value of <a>UpdateModelVersionStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateModelVersionStatusResponse'</a>,
--   <a>updateModelVersionStatusResponse_httpStatus</a> - The response's
--   http status code.
newUpdateModelVersionStatusResponse :: Int -> UpdateModelVersionStatusResponse

-- | The response's http status code.
updateModelVersionStatusResponse_httpStatus :: Lens' UpdateModelVersionStatusResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatusResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatusResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatusResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateModelVersionStatus.UpdateModelVersionStatus


-- | Updates a rule's metadata. The description attribute can be updated.
module Network.AWS.FraudDetector.UpdateRuleMetadata

-- | <i>See:</i> <a>newUpdateRuleMetadata</a> smart constructor.
data UpdateRuleMetadata
UpdateRuleMetadata' :: Rule -> Text -> UpdateRuleMetadata

-- | The rule to update.
[$sel:rule:UpdateRuleMetadata'] :: UpdateRuleMetadata -> Rule

-- | The rule description.
[$sel:description:UpdateRuleMetadata'] :: UpdateRuleMetadata -> Text

-- | Create a value of <a>UpdateRuleMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:UpdateRuleMetadata'</a>, <a>updateRuleMetadata_rule</a> -
--   The rule to update.
--   
--   <a>$sel:description:UpdateRuleMetadata'</a>,
--   <a>updateRuleMetadata_description</a> - The rule description.
newUpdateRuleMetadata :: Rule -> Text -> UpdateRuleMetadata

-- | The rule to update.
updateRuleMetadata_rule :: Lens' UpdateRuleMetadata Rule

-- | The rule description.
updateRuleMetadata_description :: Lens' UpdateRuleMetadata Text

-- | <i>See:</i> <a>newUpdateRuleMetadataResponse</a> smart constructor.
data UpdateRuleMetadataResponse
UpdateRuleMetadataResponse' :: Int -> UpdateRuleMetadataResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateRuleMetadataResponse'] :: UpdateRuleMetadataResponse -> Int

-- | Create a value of <a>UpdateRuleMetadataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRuleMetadataResponse'</a>,
--   <a>updateRuleMetadataResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRuleMetadataResponse :: Int -> UpdateRuleMetadataResponse

-- | The response's http status code.
updateRuleMetadataResponse_httpStatus :: Lens' UpdateRuleMetadataResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadataResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadataResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadataResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadataResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateRuleMetadata.UpdateRuleMetadata


-- | Updates a rule version resulting in a new rule version. Updates a rule
--   version resulting in a new rule version (version 1, 2, 3 ...).
module Network.AWS.FraudDetector.UpdateRuleVersion

-- | <i>See:</i> <a>newUpdateRuleVersion</a> smart constructor.
data UpdateRuleVersion
UpdateRuleVersion' :: Maybe Text -> Maybe [Tag] -> Rule -> Sensitive Text -> Language -> NonEmpty Text -> UpdateRuleVersion

-- | The description.
[$sel:description:UpdateRuleVersion'] :: UpdateRuleVersion -> Maybe Text

-- | The tags to assign to the rule version.
[$sel:tags:UpdateRuleVersion'] :: UpdateRuleVersion -> Maybe [Tag]

-- | The rule to update.
[$sel:rule:UpdateRuleVersion'] :: UpdateRuleVersion -> Rule

-- | The rule expression.
[$sel:expression:UpdateRuleVersion'] :: UpdateRuleVersion -> Sensitive Text

-- | The language.
[$sel:language:UpdateRuleVersion'] :: UpdateRuleVersion -> Language

-- | The outcomes.
[$sel:outcomes:UpdateRuleVersion'] :: UpdateRuleVersion -> NonEmpty Text

-- | Create a value of <a>UpdateRuleVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_description</a> - The description.
--   
--   <a>$sel:tags:UpdateRuleVersion'</a>, <a>updateRuleVersion_tags</a> -
--   The tags to assign to the rule version.
--   
--   <a>$sel:rule:UpdateRuleVersion'</a>, <a>updateRuleVersion_rule</a> -
--   The rule to update.
--   
--   <a>$sel:expression:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_expression</a> - The rule expression.
--   
--   <a>$sel:language:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_language</a> - The language.
--   
--   <a>$sel:outcomes:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_outcomes</a> - The outcomes.
newUpdateRuleVersion :: Rule -> Text -> Language -> NonEmpty Text -> UpdateRuleVersion

-- | The description.
updateRuleVersion_description :: Lens' UpdateRuleVersion (Maybe Text)

-- | The tags to assign to the rule version.
updateRuleVersion_tags :: Lens' UpdateRuleVersion (Maybe [Tag])

-- | The rule to update.
updateRuleVersion_rule :: Lens' UpdateRuleVersion Rule

-- | The rule expression.
updateRuleVersion_expression :: Lens' UpdateRuleVersion Text

-- | The language.
updateRuleVersion_language :: Lens' UpdateRuleVersion Language

-- | The outcomes.
updateRuleVersion_outcomes :: Lens' UpdateRuleVersion (NonEmpty Text)

-- | <i>See:</i> <a>newUpdateRuleVersionResponse</a> smart constructor.
data UpdateRuleVersionResponse
UpdateRuleVersionResponse' :: Maybe Rule -> Int -> UpdateRuleVersionResponse

-- | The new rule version that was created.
[$sel:rule:UpdateRuleVersionResponse'] :: UpdateRuleVersionResponse -> Maybe Rule

-- | The response's http status code.
[$sel:httpStatus:UpdateRuleVersionResponse'] :: UpdateRuleVersionResponse -> Int

-- | Create a value of <a>UpdateRuleVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:UpdateRuleVersion'</a>,
--   <a>updateRuleVersionResponse_rule</a> - The new rule version that was
--   created.
--   
--   <a>$sel:httpStatus:UpdateRuleVersionResponse'</a>,
--   <a>updateRuleVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRuleVersionResponse :: Int -> UpdateRuleVersionResponse

-- | The new rule version that was created.
updateRuleVersionResponse_rule :: Lens' UpdateRuleVersionResponse (Maybe Rule)

-- | The response's http status code.
updateRuleVersionResponse_httpStatus :: Lens' UpdateRuleVersionResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersionResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersionResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersionResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateRuleVersion.UpdateRuleVersion


-- | Updates a variable.
module Network.AWS.FraudDetector.UpdateVariable

-- | <i>See:</i> <a>newUpdateVariable</a> smart constructor.
data UpdateVariable
UpdateVariable' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateVariable

-- | The new default value of the variable.
[$sel:defaultValue:UpdateVariable'] :: UpdateVariable -> Maybe Text

-- | The variable type. For more information see <a>Variable types</a>.
[$sel:variableType:UpdateVariable'] :: UpdateVariable -> Maybe Text

-- | The new description.
[$sel:description:UpdateVariable'] :: UpdateVariable -> Maybe Text

-- | The name of the variable.
[$sel:name:UpdateVariable'] :: UpdateVariable -> Text

-- | Create a value of <a>UpdateVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:UpdateVariable'</a>,
--   <a>updateVariable_defaultValue</a> - The new default value of the
--   variable.
--   
--   <a>$sel:variableType:UpdateVariable'</a>,
--   <a>updateVariable_variableType</a> - The variable type. For more
--   information see <a>Variable types</a>.
--   
--   <a>$sel:description:UpdateVariable'</a>,
--   <a>updateVariable_description</a> - The new description.
--   
--   <a>$sel:name:UpdateVariable'</a>, <a>updateVariable_name</a> - The
--   name of the variable.
newUpdateVariable :: Text -> UpdateVariable

-- | The new default value of the variable.
updateVariable_defaultValue :: Lens' UpdateVariable (Maybe Text)

-- | The variable type. For more information see <a>Variable types</a>.
updateVariable_variableType :: Lens' UpdateVariable (Maybe Text)

-- | The new description.
updateVariable_description :: Lens' UpdateVariable (Maybe Text)

-- | The name of the variable.
updateVariable_name :: Lens' UpdateVariable Text

-- | <i>See:</i> <a>newUpdateVariableResponse</a> smart constructor.
data UpdateVariableResponse
UpdateVariableResponse' :: Int -> UpdateVariableResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateVariableResponse'] :: UpdateVariableResponse -> Int

-- | Create a value of <a>UpdateVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVariableResponse'</a>,
--   <a>updateVariableResponse_httpStatus</a> - The response's http status
--   code.
newUpdateVariableResponse :: Int -> UpdateVariableResponse

-- | The response's http status code.
updateVariableResponse_httpStatus :: Lens' UpdateVariableResponse Int
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance GHC.Generics.Generic Network.AWS.FraudDetector.UpdateVariable.UpdateVariableResponse
instance GHC.Show.Show Network.AWS.FraudDetector.UpdateVariable.UpdateVariableResponse
instance GHC.Read.Read Network.AWS.FraudDetector.UpdateVariable.UpdateVariableResponse
instance GHC.Classes.Eq Network.AWS.FraudDetector.UpdateVariable.UpdateVariableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateVariable.UpdateVariableResponse
instance Data.Hashable.Class.Hashable Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance Control.DeepSeq.NFData Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance Network.AWS.Data.Path.ToPath Network.AWS.FraudDetector.UpdateVariable.UpdateVariable
instance Network.AWS.Data.Query.ToQuery Network.AWS.FraudDetector.UpdateVariable.UpdateVariable


module Network.AWS.FraudDetector.Lens

-- | The rule execution mode for the rules included in the detector
--   version.
--   
--   You can define and edit the rule mode at the detector version level,
--   when it is in draft status.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
createDetectorVersion_ruleExecutionMode :: Lens' CreateDetectorVersion (Maybe RuleExecutionMode)

-- | The model versions to include in the detector version.
createDetectorVersion_modelVersions :: Lens' CreateDetectorVersion (Maybe [ModelVersion])

-- | The Amazon Sagemaker model endpoints to include in the detector
--   version.
createDetectorVersion_externalModelEndpoints :: Lens' CreateDetectorVersion (Maybe [Text])

-- | The description of the detector version.
createDetectorVersion_description :: Lens' CreateDetectorVersion (Maybe Text)

-- | A collection of key and value pairs.
createDetectorVersion_tags :: Lens' CreateDetectorVersion (Maybe [Tag])

-- | The ID of the detector under which you want to create a new version.
createDetectorVersion_detectorId :: Lens' CreateDetectorVersion Text

-- | The rules to include in the detector version.
createDetectorVersion_rules :: Lens' CreateDetectorVersion [Rule]

-- | The status of the detector version.
createDetectorVersionResponse_status :: Lens' CreateDetectorVersionResponse (Maybe DetectorVersionStatus)

-- | The ID for the created detector.
createDetectorVersionResponse_detectorVersionId :: Lens' CreateDetectorVersionResponse (Maybe Text)

-- | The ID for the created version's parent detector.
createDetectorVersionResponse_detectorId :: Lens' CreateDetectorVersionResponse (Maybe Text)

-- | The response's http status code.
createDetectorVersionResponse_httpStatus :: Lens' CreateDetectorVersionResponse Int

-- | The list of variable names to get.
batchGetVariable_names :: Lens' BatchGetVariable (NonEmpty Text)

-- | The returned variables.
batchGetVariableResponse_variables :: Lens' BatchGetVariableResponse (Maybe [Variable])

-- | The errors from the request.
batchGetVariableResponse_errors :: Lens' BatchGetVariableResponse (Maybe [BatchGetVariableError])

-- | The response's http status code.
batchGetVariableResponse_httpStatus :: Lens' BatchGetVariableResponse Int

-- | The details of the external events data used for training the model
--   version. Required if <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>.
updateModelVersion_externalEventsDetail :: Lens' UpdateModelVersion (Maybe ExternalEventsDetail)

-- | The details of the ingested event used for training the model version.
--   Required if your <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
updateModelVersion_ingestedEventsDetail :: Lens' UpdateModelVersion (Maybe IngestedEventsDetail)

-- | A collection of key and value pairs.
updateModelVersion_tags :: Lens' UpdateModelVersion (Maybe [Tag])

-- | The model ID.
updateModelVersion_modelId :: Lens' UpdateModelVersion Text

-- | The model type.
updateModelVersion_modelType :: Lens' UpdateModelVersion ModelTypeEnum

-- | The major version number.
updateModelVersion_majorVersionNumber :: Lens' UpdateModelVersion Text

-- | The status of the updated model version.
updateModelVersionResponse_status :: Lens' UpdateModelVersionResponse (Maybe Text)

-- | The model type.
updateModelVersionResponse_modelType :: Lens' UpdateModelVersionResponse (Maybe ModelTypeEnum)

-- | The model ID.
updateModelVersionResponse_modelId :: Lens' UpdateModelVersionResponse (Maybe Text)

-- | The model version number of the model version updated.
updateModelVersionResponse_modelVersionNumber :: Lens' UpdateModelVersionResponse (Maybe Text)

-- | The response's http status code.
updateModelVersionResponse_httpStatus :: Lens' UpdateModelVersionResponse Int

-- | The model ID of the model version to delete.
deleteModelVersion_modelId :: Lens' DeleteModelVersion Text

-- | The model type of the model version to delete.
deleteModelVersion_modelType :: Lens' DeleteModelVersion ModelTypeEnum

-- | The model version number of the model version to delete.
deleteModelVersion_modelVersionNumber :: Lens' DeleteModelVersion Text

-- | The response's http status code.
deleteModelVersionResponse_httpStatus :: Lens' DeleteModelVersionResponse Int

-- | The detector ID.
updateDetectorVersionMetadata_detectorId :: Lens' UpdateDetectorVersionMetadata Text

-- | The detector version ID.
updateDetectorVersionMetadata_detectorVersionId :: Lens' UpdateDetectorVersionMetadata Text

-- | The description.
updateDetectorVersionMetadata_description :: Lens' UpdateDetectorVersionMetadata Text

-- | The response's http status code.
updateDetectorVersionMetadataResponse_httpStatus :: Lens' UpdateDetectorVersionMetadataResponse Int

-- | The ID of the batch import job to delete.
deleteBatchImportJob_jobId :: Lens' DeleteBatchImportJob Text

-- | The response's http status code.
deleteBatchImportJobResponse_httpStatus :: Lens' DeleteBatchImportJobResponse Int

-- | Undocumented member.
deleteRule_rule :: Lens' DeleteRule Rule

-- | The response's http status code.
deleteRuleResponse_httpStatus :: Lens' DeleteRuleResponse Int

-- | The label description.
putLabel_description :: Lens' PutLabel (Maybe Text)

putLabel_tags :: Lens' PutLabel (Maybe [Tag])

-- | The label name.
putLabel_name :: Lens' PutLabel Text

-- | The response's http status code.
putLabelResponse_httpStatus :: Lens' PutLabelResponse Int

-- | The Amazon SageMaker model endpoint.
getExternalModels_modelEndpoint :: Lens' GetExternalModels (Maybe Text)

-- | The next page token for the request.
getExternalModels_nextToken :: Lens' GetExternalModels (Maybe Text)

-- | The maximum number of objects to return for the request.
getExternalModels_maxResults :: Lens' GetExternalModels (Maybe Natural)

-- | The next page token to be used in subsequent requests.
getExternalModelsResponse_nextToken :: Lens' GetExternalModelsResponse (Maybe Text)

-- | Gets the Amazon SageMaker models.
getExternalModelsResponse_externalModels :: Lens' GetExternalModelsResponse (Maybe [ExternalModel])

-- | The response's http status code.
getExternalModelsResponse_httpStatus :: Lens' GetExternalModelsResponse Int

-- | The next token for the subsequent request.
getDetectors_nextToken :: Lens' GetDetectors (Maybe Text)

-- | The detector ID.
getDetectors_detectorId :: Lens' GetDetectors (Maybe Text)

-- | The maximum number of objects to return for the request.
getDetectors_maxResults :: Lens' GetDetectors (Maybe Natural)

-- | The next page token.
getDetectorsResponse_nextToken :: Lens' GetDetectorsResponse (Maybe Text)

-- | The detectors.
getDetectorsResponse_detectors :: Lens' GetDetectorsResponse (Maybe [Detector])

-- | The response's http status code.
getDetectorsResponse_httpStatus :: Lens' GetDetectorsResponse Int

-- | The name of the label to delete.
deleteLabel_name :: Lens' DeleteLabel Text

-- | The response's http status code.
deleteLabelResponse_httpStatus :: Lens' DeleteLabelResponse Int

-- | The name of the variable to delete.
deleteVariable_name :: Lens' DeleteVariable Text

-- | The response's http status code.
deleteVariableResponse_httpStatus :: Lens' DeleteVariableResponse Int

-- | The new default value of the variable.
updateVariable_defaultValue :: Lens' UpdateVariable (Maybe Text)

-- | The variable type. For more information see <a>Variable types</a>.
updateVariable_variableType :: Lens' UpdateVariable (Maybe Text)

-- | The new description.
updateVariable_description :: Lens' UpdateVariable (Maybe Text)

-- | The name of the variable.
updateVariable_name :: Lens' UpdateVariable Text

-- | The response's http status code.
updateVariableResponse_httpStatus :: Lens' UpdateVariableResponse Int

-- | The variable type. For more information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT</tt>
createVariable_variableType :: Lens' CreateVariable (Maybe Text)

-- | The description.
createVariable_description :: Lens' CreateVariable (Maybe Text)

-- | A collection of key and value pairs.
createVariable_tags :: Lens' CreateVariable (Maybe [Tag])

-- | The name of the variable.
createVariable_name :: Lens' CreateVariable Text

-- | The data type.
createVariable_dataType :: Lens' CreateVariable DataType

-- | The source of the data.
createVariable_dataSource :: Lens' CreateVariable DataSource

-- | The default value for the variable when no value is received.
createVariable_defaultValue :: Lens' CreateVariable Text

-- | The response's http status code.
createVariableResponse_httpStatus :: Lens' CreateVariableResponse Int

-- | A collection of key-value pairs associated with this request.
createBatchImportJob_tags :: Lens' CreateBatchImportJob (Maybe [Tag])

-- | The ID of the batch import job. The ID cannot be of a past job, unless
--   the job exists in <tt>CREATE_FAILED</tt> state.
createBatchImportJob_jobId :: Lens' CreateBatchImportJob Text

-- | The URI that points to the Amazon S3 location of your data file.
createBatchImportJob_inputPath :: Lens' CreateBatchImportJob Text

-- | The URI that points to the Amazon S3 location for storing your
--   results.
createBatchImportJob_outputPath :: Lens' CreateBatchImportJob Text

-- | The name of the event type.
createBatchImportJob_eventTypeName :: Lens' CreateBatchImportJob Text

-- | The ARN of the IAM role created for Amazon S3 bucket that holds your
--   data file. The IAM role must have read and write permissions to both
--   input and output S3 buckets.
createBatchImportJob_iamRoleArn :: Lens' CreateBatchImportJob Text

-- | The response's http status code.
createBatchImportJobResponse_httpStatus :: Lens' CreateBatchImportJobResponse Int

-- | The rule description.
createRule_description :: Lens' CreateRule (Maybe Text)

-- | A collection of key and value pairs.
createRule_tags :: Lens' CreateRule (Maybe [Tag])

-- | The rule ID.
createRule_ruleId :: Lens' CreateRule Text

-- | The detector ID for the rule's parent detector.
createRule_detectorId :: Lens' CreateRule Text

-- | The rule expression.
createRule_expression :: Lens' CreateRule Text

-- | The language of the rule.
createRule_language :: Lens' CreateRule Language

-- | The outcome or outcomes returned when the rule expression matches.
createRule_outcomes :: Lens' CreateRule (NonEmpty Text)

-- | The created rule.
createRuleResponse_rule :: Lens' CreateRuleResponse (Maybe Rule)

-- | The response's http status code.
createRuleResponse_httpStatus :: Lens' CreateRuleResponse Int

-- | The next token from the previous results.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of objects to return for the request.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The ARN that specifies the resource whose tags you want to list.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The next token for subsequent requests.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A collection of key and value pairs.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The model type.
getModels_modelType :: Lens' GetModels (Maybe ModelTypeEnum)

-- | The model ID.
getModels_modelId :: Lens' GetModels (Maybe Text)

-- | The next token for the subsequent request.
getModels_nextToken :: Lens' GetModels (Maybe Text)

-- | The maximum number of objects to return for the request.
getModels_maxResults :: Lens' GetModels (Maybe Natural)

-- | The array of models.
getModelsResponse_models :: Lens' GetModelsResponse (Maybe [Model])

-- | The next page token to be used in subsequent requests.
getModelsResponse_nextToken :: Lens' GetModelsResponse (Maybe Text)

-- | The response's http status code.
getModelsResponse_httpStatus :: Lens' GetModelsResponse Int

-- | The description.
updateRuleVersion_description :: Lens' UpdateRuleVersion (Maybe Text)

-- | The tags to assign to the rule version.
updateRuleVersion_tags :: Lens' UpdateRuleVersion (Maybe [Tag])

-- | The rule to update.
updateRuleVersion_rule :: Lens' UpdateRuleVersion Rule

-- | The rule expression.
updateRuleVersion_expression :: Lens' UpdateRuleVersion Text

-- | The language.
updateRuleVersion_language :: Lens' UpdateRuleVersion Language

-- | The outcomes.
updateRuleVersion_outcomes :: Lens' UpdateRuleVersion (NonEmpty Text)

-- | The new rule version that was created.
updateRuleVersionResponse_rule :: Lens' UpdateRuleVersionResponse (Maybe Rule)

-- | The response's http status code.
updateRuleVersionResponse_httpStatus :: Lens' UpdateRuleVersionResponse Int

-- | Specifies whether or not to delete any predictions associated with the
--   event.
deleteEvent_deleteAuditHistory :: Lens' DeleteEvent (Maybe Bool)

-- | The ID of the event to delete.
deleteEvent_eventId :: Lens' DeleteEvent Text

-- | The name of the event type.
deleteEvent_eventTypeName :: Lens' DeleteEvent Text

-- | The response's http status code.
deleteEventResponse_httpStatus :: Lens' DeleteEventResponse Int

-- | The ID of the batch prediction job to cancel.
cancelBatchPredictionJob_jobId :: Lens' CancelBatchPredictionJob Text

-- | The response's http status code.
cancelBatchPredictionJobResponse_httpStatus :: Lens' CancelBatchPredictionJobResponse Int

-- | The model ID of the model version to update.
updateModelVersionStatus_modelId :: Lens' UpdateModelVersionStatus Text

-- | The model type.
updateModelVersionStatus_modelType :: Lens' UpdateModelVersionStatus ModelTypeEnum

-- | The model version number.
updateModelVersionStatus_modelVersionNumber :: Lens' UpdateModelVersionStatus Text

-- | The model version status.
updateModelVersionStatus_status :: Lens' UpdateModelVersionStatus ModelVersionStatus

-- | The response's http status code.
updateModelVersionStatusResponse_httpStatus :: Lens' UpdateModelVersionStatusResponse Int

-- | The batch prediction job for which to get the details.
getBatchPredictionJobs_jobId :: Lens' GetBatchPredictionJobs (Maybe Text)

-- | The next token from the previous request.
getBatchPredictionJobs_nextToken :: Lens' GetBatchPredictionJobs (Maybe Text)

-- | The maximum number of objects to return for the request.
getBatchPredictionJobs_maxResults :: Lens' GetBatchPredictionJobs (Maybe Natural)

-- | An array containing the details of each batch prediction job.
getBatchPredictionJobsResponse_batchPredictions :: Lens' GetBatchPredictionJobsResponse (Maybe [BatchPrediction])

-- | The next token for the subsequent request.
getBatchPredictionJobsResponse_nextToken :: Lens' GetBatchPredictionJobsResponse (Maybe Text)

-- | The response's http status code.
getBatchPredictionJobsResponse_httpStatus :: Lens' GetBatchPredictionJobsResponse Int

-- | The model description.
createModel_description :: Lens' CreateModel (Maybe Text)

-- | A collection of key and value pairs.
createModel_tags :: Lens' CreateModel (Maybe [Tag])

-- | The model ID.
createModel_modelId :: Lens' CreateModel Text

-- | The model type.
createModel_modelType :: Lens' CreateModel ModelTypeEnum

-- | The name of the event type.
createModel_eventTypeName :: Lens' CreateModel Text

-- | The response's http status code.
createModelResponse_httpStatus :: Lens' CreateModelResponse Int

-- | The next token for the subsequent request.
getLabels_nextToken :: Lens' GetLabels (Maybe Text)

-- | The name of the label or labels to get.
getLabels_name :: Lens' GetLabels (Maybe Text)

-- | The maximum number of objects to return for the request.
getLabels_maxResults :: Lens' GetLabels (Maybe Natural)

-- | The next page token.
getLabelsResponse_nextToken :: Lens' GetLabelsResponse (Maybe Text)

-- | An array of labels.
getLabelsResponse_labels :: Lens' GetLabelsResponse (Maybe [Label])

-- | The response's http status code.
getLabelsResponse_httpStatus :: Lens' GetLabelsResponse Int

-- | The model ID.
getModelVersion_modelId :: Lens' GetModelVersion Text

-- | The model type.
getModelVersion_modelType :: Lens' GetModelVersion ModelTypeEnum

-- | The model version number.
getModelVersion_modelVersionNumber :: Lens' GetModelVersion Text

-- | The model version status.
--   
--   Possible values are:
--   
--   <ul>
--   <li><pre>TRAINING_IN_PROGRESS</pre></li>
--   <li><pre>TRAINING_COMPLETE</pre></li>
--   <li><pre>ACTIVATE_REQUESTED</pre></li>
--   <li><pre>ACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>ACTIVE</pre></li>
--   <li><pre>INACTIVATE_REQUESTED</pre></li>
--   <li><pre>INACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>INACTIVE</pre></li>
--   <li><pre>ERROR</pre></li>
--   </ul>
getModelVersionResponse_status :: Lens' GetModelVersionResponse (Maybe Text)

-- | The model type.
getModelVersionResponse_modelType :: Lens' GetModelVersionResponse (Maybe ModelTypeEnum)

-- | The model ID.
getModelVersionResponse_modelId :: Lens' GetModelVersionResponse (Maybe Text)

-- | The model version ARN.
getModelVersionResponse_arn :: Lens' GetModelVersionResponse (Maybe Text)

-- | The training data source.
getModelVersionResponse_trainingDataSource :: Lens' GetModelVersionResponse (Maybe TrainingDataSourceEnum)

-- | The details of the external events data used for training the model
--   version. This will be populated if the <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>
getModelVersionResponse_externalEventsDetail :: Lens' GetModelVersionResponse (Maybe ExternalEventsDetail)

-- | The details of the ingested events data used for training the model
--   version. This will be populated if the <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
getModelVersionResponse_ingestedEventsDetail :: Lens' GetModelVersionResponse (Maybe IngestedEventsDetail)

-- | The model version number.
getModelVersionResponse_modelVersionNumber :: Lens' GetModelVersionResponse (Maybe Text)

-- | The training data schema.
getModelVersionResponse_trainingDataSchema :: Lens' GetModelVersionResponse (Maybe TrainingDataSchema)

-- | The response's http status code.
getModelVersionResponse_httpStatus :: Lens' GetModelVersionResponse Int

-- | A collection of key and value pairs.
putExternalModel_tags :: Lens' PutExternalModel (Maybe [Tag])

-- | The model endpoints name.
putExternalModel_modelEndpoint :: Lens' PutExternalModel Text

-- | The source of the model.
putExternalModel_modelSource :: Lens' PutExternalModel ModelSource

-- | The IAM role used to invoke the model endpoint.
putExternalModel_invokeModelEndpointRoleArn :: Lens' PutExternalModel Text

-- | The model endpoint input configuration.
putExternalModel_inputConfiguration :: Lens' PutExternalModel ModelInputConfiguration

-- | The model endpoint output configuration.
putExternalModel_outputConfiguration :: Lens' PutExternalModel ModelOutputConfiguration

-- | The model endpoint’s status in Amazon Fraud Detector.
putExternalModel_modelEndpointStatus :: Lens' PutExternalModel ModelEndpointStatus

-- | The response's http status code.
putExternalModelResponse_httpStatus :: Lens' PutExternalModelResponse Int

-- | The endpoint of the Amazon Sagemaker model to delete.
deleteExternalModel_modelEndpoint :: Lens' DeleteExternalModel Text

-- | The response's http status code.
deleteExternalModelResponse_httpStatus :: Lens' DeleteExternalModelResponse Int

-- | The next token for the subsequent request.
getEntityTypes_nextToken :: Lens' GetEntityTypes (Maybe Text)

-- | The name.
getEntityTypes_name :: Lens' GetEntityTypes (Maybe Text)

-- | The maximum number of objects to return for the request.
getEntityTypes_maxResults :: Lens' GetEntityTypes (Maybe Natural)

-- | An array of entity types.
getEntityTypesResponse_entityTypes :: Lens' GetEntityTypesResponse (Maybe [EntityType])

-- | The next page token.
getEntityTypesResponse_nextToken :: Lens' GetEntityTypesResponse (Maybe Text)

-- | The response's http status code.
getEntityTypesResponse_httpStatus :: Lens' GetEntityTypesResponse Int

-- | The model ID of the model to delete.
deleteModel_modelId :: Lens' DeleteModel Text

-- | The model type of the model to delete.
deleteModel_modelType :: Lens' DeleteModel ModelTypeEnum

-- | The response's http status code.
deleteModelResponse_httpStatus :: Lens' DeleteModelResponse Int

-- | The new model description.
updateModel_description :: Lens' UpdateModel (Maybe Text)

-- | The model ID.
updateModel_modelId :: Lens' UpdateModel Text

-- | The model type.
updateModel_modelType :: Lens' UpdateModel ModelTypeEnum

-- | The response's http status code.
updateModelResponse_httpStatus :: Lens' UpdateModelResponse Int

-- | Details of the external events data used for model version training.
--   Required if <tt>trainingDataSource</tt> is <tt>EXTERNAL_EVENTS</tt>.
createModelVersion_externalEventsDetail :: Lens' CreateModelVersion (Maybe ExternalEventsDetail)

-- | Details of the ingested events data used for model version training.
--   Required if <tt>trainingDataSource</tt> is <tt>INGESTED_EVENTS</tt>.
createModelVersion_ingestedEventsDetail :: Lens' CreateModelVersion (Maybe IngestedEventsDetail)

-- | A collection of key and value pairs.
createModelVersion_tags :: Lens' CreateModelVersion (Maybe [Tag])

-- | The model ID.
createModelVersion_modelId :: Lens' CreateModelVersion Text

-- | The model type.
createModelVersion_modelType :: Lens' CreateModelVersion ModelTypeEnum

-- | The training data source location in Amazon S3.
createModelVersion_trainingDataSource :: Lens' CreateModelVersion TrainingDataSourceEnum

-- | The training data schema.
createModelVersion_trainingDataSchema :: Lens' CreateModelVersion TrainingDataSchema

-- | The model version status.
createModelVersionResponse_status :: Lens' CreateModelVersionResponse (Maybe Text)

-- | The model type.
createModelVersionResponse_modelType :: Lens' CreateModelVersionResponse (Maybe ModelTypeEnum)

-- | The model ID.
createModelVersionResponse_modelId :: Lens' CreateModelVersionResponse (Maybe Text)

-- | The model version number of the model version created.
createModelVersionResponse_modelVersionNumber :: Lens' CreateModelVersionResponse (Maybe Text)

-- | The response's http status code.
createModelVersionResponse_httpStatus :: Lens' CreateModelVersionResponse Int

-- | The name of the event type.
deleteEventsByEventType_eventTypeName :: Lens' DeleteEventsByEventType Text

-- | Name of event type for which to delete the events.
deleteEventsByEventTypeResponse_eventTypeName :: Lens' DeleteEventsByEventTypeResponse (Maybe Text)

-- | The status of the delete request.
deleteEventsByEventTypeResponse_eventsDeletionStatus :: Lens' DeleteEventsByEventTypeResponse (Maybe Text)

-- | The response's http status code.
deleteEventsByEventTypeResponse_httpStatus :: Lens' DeleteEventsByEventTypeResponse Int

-- | The KMS encryption key ARN.
putKMSEncryptionKey_kmsEncryptionKeyArn :: Lens' PutKMSEncryptionKey Text

-- | The response's http status code.
putKMSEncryptionKeyResponse_httpStatus :: Lens' PutKMSEncryptionKeyResponse Int

-- | The next token from the previous response.
describeDetector_nextToken :: Lens' DescribeDetector (Maybe Text)

-- | The maximum number of results to return for the request.
describeDetector_maxResults :: Lens' DescribeDetector (Maybe Natural)

-- | The detector ID.
describeDetector_detectorId :: Lens' DescribeDetector Text

-- | The status and description for each detector version.
describeDetectorResponse_detectorVersionSummaries :: Lens' DescribeDetectorResponse (Maybe [DetectorVersionSummary])

-- | The detector ARN.
describeDetectorResponse_arn :: Lens' DescribeDetectorResponse (Maybe Text)

-- | The next token to be used for subsequent requests.
describeDetectorResponse_nextToken :: Lens' DescribeDetectorResponse (Maybe Text)

-- | The detector ID.
describeDetectorResponse_detectorId :: Lens' DescribeDetectorResponse (Maybe Text)

-- | The response's http status code.
describeDetectorResponse_httpStatus :: Lens' DescribeDetectorResponse Int

-- | The next page token for the request.
getOutcomes_nextToken :: Lens' GetOutcomes (Maybe Text)

-- | The name of the outcome or outcomes to get.
getOutcomes_name :: Lens' GetOutcomes (Maybe Text)

-- | The maximum number of objects to return for the request.
getOutcomes_maxResults :: Lens' GetOutcomes (Maybe Natural)

-- | The outcomes.
getOutcomesResponse_outcomes :: Lens' GetOutcomesResponse (Maybe [Outcome])

-- | The next page token for subsequent requests.
getOutcomesResponse_nextToken :: Lens' GetOutcomesResponse (Maybe Text)

-- | The response's http status code.
getOutcomesResponse_httpStatus :: Lens' GetOutcomesResponse Int

-- | The detector version ID.
getEventPrediction_detectorVersionId :: Lens' GetEventPrediction (Maybe Text)

-- | The Amazon SageMaker model endpoint input data blobs.
getEventPrediction_externalModelEndpointDataBlobs :: Lens' GetEventPrediction (Maybe (HashMap Text ModelEndpointDataBlob))

-- | The detector ID.
getEventPrediction_detectorId :: Lens' GetEventPrediction Text

-- | The unique ID used to identify the event.
getEventPrediction_eventId :: Lens' GetEventPrediction Text

-- | The event type associated with the detector specified for the
--   prediction.
getEventPrediction_eventTypeName :: Lens' GetEventPrediction Text

-- | The entity type (associated with the detector's event type) and
--   specific entity ID representing who performed the event. If an entity
--   id is not available, use "UNKNOWN."
getEventPrediction_entities :: Lens' GetEventPrediction [Entity]

-- | Timestamp that defines when the event under evaluation occurred. The
--   timestamp must be specified using ISO 8601 standard in UTC.
getEventPrediction_eventTimestamp :: Lens' GetEventPrediction Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
--   
--   You must provide at least one eventVariable
--   
--   To ensure most accurate fraud prediction and to simplify your data
--   preparation, Amazon Fraud Detector will replace all missing variables
--   or values as follows:
--   
--   <b>For Amazon Fraud Detector trained models:</b>
--   
--   If a null value is provided explicitly for a variable or if a variable
--   is missing, model will replace the null value or the missing variable
--   (no variable name in the eventVariables map) with calculated default
--   mean/medians for numeric variables and with special values for
--   categorical variables.
--   
--   <b>For imported SageMaker models:</b>
--   
--   If a null value is provided explicitly for a variable, the model and
--   rules will use “null” as the value. If a variable is not provided (no
--   variable name in the eventVariables map), model and rules will use the
--   default value that is provided for the variable.
getEventPrediction_eventVariables :: Lens' GetEventPrediction (HashMap Text Text)

-- | The model scores. Amazon Fraud Detector generates model scores between
--   0 and 1000, where 0 is low fraud risk and 1000 is high fraud risk.
--   Model scores are directly related to the false positive rate (FPR).
--   For example, a score of 600 corresponds to an estimated 10% false
--   positive rate whereas a score of 900 corresponds to an estimated 2%
--   false positive rate.
getEventPredictionResponse_modelScores :: Lens' GetEventPredictionResponse (Maybe [ModelScores])

-- | The model scores for Amazon SageMaker models.
getEventPredictionResponse_externalModelOutputs :: Lens' GetEventPredictionResponse (Maybe [ExternalModelOutputs])

-- | The results from the rules.
getEventPredictionResponse_ruleResults :: Lens' GetEventPredictionResponse (Maybe [RuleResult])

-- | The response's http status code.
getEventPredictionResponse_httpStatus :: Lens' GetEventPredictionResponse Int

-- | The ID of the batch prediction job to delete.
deleteBatchPredictionJob_jobId :: Lens' DeleteBatchPredictionJob Text

-- | The response's http status code.
deleteBatchPredictionJobResponse_httpStatus :: Lens' DeleteBatchPredictionJobResponse Int

-- | The ID of the event to retrieve.
getEvent_eventId :: Lens' GetEvent Text

-- | The event type of the event to retrieve.
getEvent_eventTypeName :: Lens' GetEvent Text

-- | The details of the event.
getEventResponse_event :: Lens' GetEventResponse (Maybe Event)

-- | The response's http status code.
getEventResponse_httpStatus :: Lens' GetEventResponse Int

-- | The rule to update.
updateRuleMetadata_rule :: Lens' UpdateRuleMetadata Rule

-- | The rule description.
updateRuleMetadata_description :: Lens' UpdateRuleMetadata Text

-- | The response's http status code.
updateRuleMetadataResponse_httpStatus :: Lens' UpdateRuleMetadataResponse Int

-- | The description.
putEntityType_description :: Lens' PutEntityType (Maybe Text)

-- | A collection of key and value pairs.
putEntityType_tags :: Lens' PutEntityType (Maybe [Tag])

-- | The name of the entity type.
putEntityType_name :: Lens' PutEntityType Text

-- | The response's http status code.
putEntityTypeResponse_httpStatus :: Lens' PutEntityTypeResponse Int

-- | The detector version.
createBatchPredictionJob_detectorVersion :: Lens' CreateBatchPredictionJob (Maybe Text)

-- | A collection of key and value pairs.
createBatchPredictionJob_tags :: Lens' CreateBatchPredictionJob (Maybe [Tag])

-- | The ID of the batch prediction job.
createBatchPredictionJob_jobId :: Lens' CreateBatchPredictionJob Text

-- | The Amazon S3 location of your training file.
createBatchPredictionJob_inputPath :: Lens' CreateBatchPredictionJob Text

-- | The Amazon S3 location of your output file.
createBatchPredictionJob_outputPath :: Lens' CreateBatchPredictionJob Text

-- | The name of the event type.
createBatchPredictionJob_eventTypeName :: Lens' CreateBatchPredictionJob Text

-- | The name of the detector.
createBatchPredictionJob_detectorName :: Lens' CreateBatchPredictionJob Text

-- | The ARN of the IAM role to use for this job request.
createBatchPredictionJob_iamRoleArn :: Lens' CreateBatchPredictionJob Text

-- | The response's http status code.
createBatchPredictionJobResponse_httpStatus :: Lens' CreateBatchPredictionJobResponse Int

-- | The name of the entity type to delete.
deleteEntityType_name :: Lens' DeleteEntityType Text

-- | The response's http status code.
deleteEntityTypeResponse_httpStatus :: Lens' DeleteEntityTypeResponse Int

-- | The name of the event type to delete.
deleteEventType_name :: Lens' DeleteEventType Text

-- | The response's http status code.
deleteEventTypeResponse_httpStatus :: Lens' DeleteEventTypeResponse Int

-- | The event type labels.
putEventType_labels :: Lens' PutEventType (Maybe [Text])

-- | Specifies if ingenstion is enabled or disabled.
putEventType_eventIngestion :: Lens' PutEventType (Maybe EventIngestion)

-- | The description of the event type.
putEventType_description :: Lens' PutEventType (Maybe Text)

-- | A collection of key and value pairs.
putEventType_tags :: Lens' PutEventType (Maybe [Tag])

-- | The name.
putEventType_name :: Lens' PutEventType Text

-- | The event type variables.
putEventType_eventVariables :: Lens' PutEventType (NonEmpty Text)

-- | The entity type for the event type. Example entity types: customer,
--   merchant, account.
putEventType_entityTypes :: Lens' PutEventType (NonEmpty Text)

-- | The response's http status code.
putEventTypeResponse_httpStatus :: Lens' PutEventTypeResponse Int

-- | The detector ID.
updateDetectorVersionStatus_detectorId :: Lens' UpdateDetectorVersionStatus Text

-- | The detector version ID.
updateDetectorVersionStatus_detectorVersionId :: Lens' UpdateDetectorVersionStatus Text

-- | The new status.
updateDetectorVersionStatus_status :: Lens' UpdateDetectorVersionStatus DetectorVersionStatus

-- | The response's http status code.
updateDetectorVersionStatusResponse_httpStatus :: Lens' UpdateDetectorVersionStatusResponse Int

-- | The ID of an in-progress batch import job to cancel.
--   
--   Amazon Fraud Detector will throw an error if the batch import job is
--   in <tt>FAILED</tt>, <tt>CANCELED</tt>, or <tt>COMPLETED</tt> state.
cancelBatchImportJob_jobId :: Lens' CancelBatchImportJob Text

-- | The response's http status code.
cancelBatchImportJobResponse_httpStatus :: Lens' CancelBatchImportJobResponse Int

-- | The timestamp associated with the label. Required if specifying
--   <tt>assignedLabel</tt>.
sendEvent_labelTimestamp :: Lens' SendEvent (Maybe Text)

-- | The label to associate with the event. Required if specifying
--   <tt>labelTimestamp</tt>.
sendEvent_assignedLabel :: Lens' SendEvent (Maybe Text)

-- | The event ID to upload.
sendEvent_eventId :: Lens' SendEvent Text

-- | The event type name of the event.
sendEvent_eventTypeName :: Lens' SendEvent Text

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
sendEvent_eventTimestamp :: Lens' SendEvent Text

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
sendEvent_eventVariables :: Lens' SendEvent (HashMap Text Text)

-- | An array of entities.
sendEvent_entities :: Lens' SendEvent [Entity]

-- | The response's http status code.
sendEventResponse_httpStatus :: Lens' SendEventResponse Int

-- | The resource ARN.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tags to assign to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The KMS encryption key.
getKMSEncryptionKeyResponse_kmsKey :: Lens' GetKMSEncryptionKeyResponse (Maybe KMSKey)

-- | The response's http status code.
getKMSEncryptionKeyResponse_httpStatus :: Lens' GetKMSEncryptionKeyResponse Int

-- | The ID of the event associated with the label to update.
updateEventLabel_eventId :: Lens' UpdateEventLabel Text

-- | The event type of the event associated with the label to update.
updateEventLabel_eventTypeName :: Lens' UpdateEventLabel Text

-- | The new label to assign to the event.
updateEventLabel_assignedLabel :: Lens' UpdateEventLabel Text

-- | The timestamp associated with the label. The timestamp must be
--   specified using ISO 8601 standard in UTC.
updateEventLabel_labelTimestamp :: Lens' UpdateEventLabel Text

-- | The response's http status code.
updateEventLabelResponse_httpStatus :: Lens' UpdateEventLabelResponse Int

-- | The ID of the batch import job to get.
getBatchImportJobs_jobId :: Lens' GetBatchImportJobs (Maybe Text)

-- | The next token from the previous request.
getBatchImportJobs_nextToken :: Lens' GetBatchImportJobs (Maybe Text)

-- | The maximum number of objects to return for request.
getBatchImportJobs_maxResults :: Lens' GetBatchImportJobs (Maybe Natural)

-- | The next token for the subsequent resquest.
getBatchImportJobsResponse_nextToken :: Lens' GetBatchImportJobsResponse (Maybe Text)

-- | An array containing the details of each batch import job.
getBatchImportJobsResponse_batchImports :: Lens' GetBatchImportJobsResponse (Maybe [BatchImport])

-- | The response's http status code.
getBatchImportJobsResponse_httpStatus :: Lens' GetBatchImportJobsResponse Int

-- | Name of event type for which to get the deletion status.
getDeleteEventsByEventTypeStatus_eventTypeName :: Lens' GetDeleteEventsByEventTypeStatus Text

-- | The event type name.
getDeleteEventsByEventTypeStatusResponse_eventTypeName :: Lens' GetDeleteEventsByEventTypeStatusResponse (Maybe Text)

-- | The deletion status.
getDeleteEventsByEventTypeStatusResponse_eventsDeletionStatus :: Lens' GetDeleteEventsByEventTypeStatusResponse (Maybe AsyncJobStatus)

-- | The response's http status code.
getDeleteEventsByEventTypeStatusResponse_httpStatus :: Lens' GetDeleteEventsByEventTypeStatusResponse Int

-- | The name of the outcome to delete.
deleteOutcome_name :: Lens' DeleteOutcome Text

-- | The response's http status code.
deleteOutcomeResponse_httpStatus :: Lens' DeleteOutcomeResponse Int

-- | The rule version.
getRules_ruleVersion :: Lens' GetRules (Maybe Text)

-- | The rule ID.
getRules_ruleId :: Lens' GetRules (Maybe Text)

-- | The next page token.
getRules_nextToken :: Lens' GetRules (Maybe Text)

-- | The maximum number of rules to return for the request.
getRules_maxResults :: Lens' GetRules (Maybe Natural)

-- | The detector ID.
getRules_detectorId :: Lens' GetRules Text

-- | The details of the requested rule.
getRulesResponse_ruleDetails :: Lens' GetRulesResponse (Maybe [RuleDetail])

-- | The next page token to be used in subsequent requests.
getRulesResponse_nextToken :: Lens' GetRulesResponse (Maybe Text)

-- | The response's http status code.
getRulesResponse_httpStatus :: Lens' GetRulesResponse Int

-- | The next page token of the get variable request.
getVariables_nextToken :: Lens' GetVariables (Maybe Text)

-- | The name of the variable.
getVariables_name :: Lens' GetVariables (Maybe Text)

-- | The max size per page determined for the get variable request.
getVariables_maxResults :: Lens' GetVariables (Maybe Natural)

-- | The names of the variables returned.
getVariablesResponse_variables :: Lens' GetVariablesResponse (Maybe [Variable])

-- | The next page token to be used in subsequent requests.
getVariablesResponse_nextToken :: Lens' GetVariablesResponse (Maybe Text)

-- | The response's http status code.
getVariablesResponse_httpStatus :: Lens' GetVariablesResponse Int

-- | The ARN of the resource from which to remove the tag.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The resource ARN.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The description of the detector.
putDetector_description :: Lens' PutDetector (Maybe Text)

-- | A collection of key and value pairs.
putDetector_tags :: Lens' PutDetector (Maybe [Tag])

-- | The detector ID.
putDetector_detectorId :: Lens' PutDetector Text

-- | The name of the event type.
putDetector_eventTypeName :: Lens' PutDetector Text

-- | The response's http status code.
putDetectorResponse_httpStatus :: Lens' PutDetectorResponse Int

-- | The outcome description.
putOutcome_description :: Lens' PutOutcome (Maybe Text)

-- | A collection of key and value pairs.
putOutcome_tags :: Lens' PutOutcome (Maybe [Tag])

-- | The name of the outcome.
putOutcome_name :: Lens' PutOutcome Text

-- | The response's http status code.
putOutcomeResponse_httpStatus :: Lens' PutOutcomeResponse Int

-- | The ID of the detector to delete.
deleteDetector_detectorId :: Lens' DeleteDetector Text

-- | The response's http status code.
deleteDetectorResponse_httpStatus :: Lens' DeleteDetectorResponse Int

-- | The model type.
describeModelVersions_modelType :: Lens' DescribeModelVersions (Maybe ModelTypeEnum)

-- | The model ID.
describeModelVersions_modelId :: Lens' DescribeModelVersions (Maybe Text)

-- | The next token from the previous results.
describeModelVersions_nextToken :: Lens' DescribeModelVersions (Maybe Text)

-- | The model version number.
describeModelVersions_modelVersionNumber :: Lens' DescribeModelVersions (Maybe Text)

-- | The maximum number of results to return.
describeModelVersions_maxResults :: Lens' DescribeModelVersions (Maybe Natural)

-- | The next token.
describeModelVersionsResponse_nextToken :: Lens' DescribeModelVersionsResponse (Maybe Text)

-- | The model version details.
describeModelVersionsResponse_modelVersionDetails :: Lens' DescribeModelVersionsResponse (Maybe [ModelVersionDetail])

-- | The response's http status code.
describeModelVersionsResponse_httpStatus :: Lens' DescribeModelVersionsResponse Int

-- | A collection of key and value pairs.
batchCreateVariable_tags :: Lens' BatchCreateVariable (Maybe [Tag])

-- | The list of variables for the batch create variable request.
batchCreateVariable_variableEntries :: Lens' BatchCreateVariable (NonEmpty VariableEntry)

-- | Provides the errors for the <tt>BatchCreateVariable</tt> request.
batchCreateVariableResponse_errors :: Lens' BatchCreateVariableResponse (Maybe [BatchCreateVariableError])

-- | The response's http status code.
batchCreateVariableResponse_httpStatus :: Lens' BatchCreateVariableResponse Int

-- | The detector ID.
getDetectorVersion_detectorId :: Lens' GetDetectorVersion Text

-- | The detector version ID.
getDetectorVersion_detectorVersionId :: Lens' GetDetectorVersion Text

-- | The status of the detector version.
getDetectorVersionResponse_status :: Lens' GetDetectorVersionResponse (Maybe DetectorVersionStatus)

-- | The execution mode of the rule in the dectector
--   
--   <tt>FIRST_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   <tt>ALL_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
getDetectorVersionResponse_ruleExecutionMode :: Lens' GetDetectorVersionResponse (Maybe RuleExecutionMode)

-- | The timestamp when the detector version was last updated.
getDetectorVersionResponse_lastUpdatedTime :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The detector version ARN.
getDetectorVersionResponse_arn :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The rules included in the detector version.
getDetectorVersionResponse_rules :: Lens' GetDetectorVersionResponse (Maybe [Rule])

-- | The detector version ID.
getDetectorVersionResponse_detectorVersionId :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The timestamp when the detector version was created.
getDetectorVersionResponse_createdTime :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The model versions included in the detector version.
getDetectorVersionResponse_modelVersions :: Lens' GetDetectorVersionResponse (Maybe [ModelVersion])

-- | The detector ID.
getDetectorVersionResponse_detectorId :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The Amazon SageMaker model endpoints included in the detector version.
getDetectorVersionResponse_externalModelEndpoints :: Lens' GetDetectorVersionResponse (Maybe [Text])

-- | The detector version description.
getDetectorVersionResponse_description :: Lens' GetDetectorVersionResponse (Maybe Text)

-- | The response's http status code.
getDetectorVersionResponse_httpStatus :: Lens' GetDetectorVersionResponse Int

-- | The next token for the subsequent request.
getEventTypes_nextToken :: Lens' GetEventTypes (Maybe Text)

-- | The name.
getEventTypes_name :: Lens' GetEventTypes (Maybe Text)

-- | The maximum number of objects to return for the request.
getEventTypes_maxResults :: Lens' GetEventTypes (Maybe Natural)

-- | An array of event types.
getEventTypesResponse_eventTypes :: Lens' GetEventTypesResponse (Maybe [EventType])

-- | The next page token.
getEventTypesResponse_nextToken :: Lens' GetEventTypesResponse (Maybe Text)

-- | The response's http status code.
getEventTypesResponse_httpStatus :: Lens' GetEventTypesResponse Int

-- | The ID of the parent detector for the detector version to delete.
deleteDetectorVersion_detectorId :: Lens' DeleteDetectorVersion Text

-- | The ID of the detector version to delete.
deleteDetectorVersion_detectorVersionId :: Lens' DeleteDetectorVersion Text

-- | The response's http status code.
deleteDetectorVersionResponse_httpStatus :: Lens' DeleteDetectorVersionResponse Int

-- | The rule execution mode to add to the detector.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
updateDetectorVersion_ruleExecutionMode :: Lens' UpdateDetectorVersion (Maybe RuleExecutionMode)

-- | The model versions to include in the detector version.
updateDetectorVersion_modelVersions :: Lens' UpdateDetectorVersion (Maybe [ModelVersion])

-- | The detector version description.
updateDetectorVersion_description :: Lens' UpdateDetectorVersion (Maybe Text)

-- | The parent detector ID for the detector version you want to update.
updateDetectorVersion_detectorId :: Lens' UpdateDetectorVersion Text

-- | The detector version ID.
updateDetectorVersion_detectorVersionId :: Lens' UpdateDetectorVersion Text

-- | The Amazon SageMaker model endpoints to include in the detector
--   version.
updateDetectorVersion_externalModelEndpoints :: Lens' UpdateDetectorVersion [Text]

-- | The rules to include in the detector version.
updateDetectorVersion_rules :: Lens' UpdateDetectorVersion [Rule]

-- | The response's http status code.
updateDetectorVersionResponse_httpStatus :: Lens' UpdateDetectorVersionResponse Int

-- | The name.
batchCreateVariableError_name :: Lens' BatchCreateVariableError (Maybe Text)

-- | The error code.
batchCreateVariableError_code :: Lens' BatchCreateVariableError (Maybe Int)

-- | The error message.
batchCreateVariableError_message :: Lens' BatchCreateVariableError (Maybe Text)

-- | The error name.
batchGetVariableError_name :: Lens' BatchGetVariableError (Maybe Text)

-- | The error code.
batchGetVariableError_code :: Lens' BatchGetVariableError (Maybe Int)

-- | The error message.
batchGetVariableError_message :: Lens' BatchGetVariableError (Maybe Text)

-- | The reason batch import job failed.
batchImport_failureReason :: Lens' BatchImport (Maybe Text)

-- | The ARN of the IAM role to use for this job request.
batchImport_iamRoleArn :: Lens' BatchImport (Maybe Text)

-- | The status of the batch import job.
batchImport_status :: Lens' BatchImport (Maybe AsyncJobStatus)

-- | The number of records processed by batch import job.
batchImport_processedRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The total number of records in the batch import job.
batchImport_totalRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The ID of the batch import job.
batchImport_jobId :: Lens' BatchImport (Maybe Text)

-- | The ARN of the batch import job.
batchImport_arn :: Lens' BatchImport (Maybe Text)

-- | Timestamp of when the batch import job started.
batchImport_startTime :: Lens' BatchImport (Maybe Text)

-- | The name of the event type.
batchImport_eventTypeName :: Lens' BatchImport (Maybe Text)

-- | Timestamp of when batch import job completed.
batchImport_completionTime :: Lens' BatchImport (Maybe Text)

-- | The Amazon S3 location of your output file.
batchImport_outputPath :: Lens' BatchImport (Maybe Text)

-- | The Amazon S3 location of your data file for batch import.
batchImport_inputPath :: Lens' BatchImport (Maybe Text)

-- | The number of records that failed to import.
batchImport_failedRecordsCount :: Lens' BatchImport (Maybe Int)

-- | The reason a batch prediction job failed.
batchPrediction_failureReason :: Lens' BatchPrediction (Maybe Text)

-- | The ARN of the IAM role to use for this job request.
batchPrediction_iamRoleArn :: Lens' BatchPrediction (Maybe Text)

-- | The batch prediction status.
batchPrediction_status :: Lens' BatchPrediction (Maybe AsyncJobStatus)

-- | The number of records processed by the batch prediction job.
batchPrediction_processedRecordsCount :: Lens' BatchPrediction (Maybe Int)

-- | The total number of records in the batch prediction job.
batchPrediction_totalRecordsCount :: Lens' BatchPrediction (Maybe Int)

-- | Timestamp of most recent heartbeat indicating the batch prediction job
--   was making progress.
batchPrediction_lastHeartbeatTime :: Lens' BatchPrediction (Maybe Text)

-- | The job ID for the batch prediction.
batchPrediction_jobId :: Lens' BatchPrediction (Maybe Text)

-- | The ARN of batch prediction job.
batchPrediction_arn :: Lens' BatchPrediction (Maybe Text)

-- | Timestamp of when the batch prediction job started.
batchPrediction_startTime :: Lens' BatchPrediction (Maybe Text)

-- | The name of the event type.
batchPrediction_eventTypeName :: Lens' BatchPrediction (Maybe Text)

-- | Timestamp of when the batch prediction job completed.
batchPrediction_completionTime :: Lens' BatchPrediction (Maybe Text)

-- | The Amazon S3 location of your output file.
batchPrediction_outputPath :: Lens' BatchPrediction (Maybe Text)

-- | The name of the detector.
batchPrediction_detectorName :: Lens' BatchPrediction (Maybe Text)

-- | The detector version.
batchPrediction_detectorVersion :: Lens' BatchPrediction (Maybe Text)

-- | The Amazon S3 location of your training file.
batchPrediction_inputPath :: Lens' BatchPrediction (Maybe Text)

-- | The field-specific model training validation messages.
dataValidationMetrics_fieldLevelMessages :: Lens' DataValidationMetrics (Maybe [FieldValidationMessage])

-- | The file-specific model training validation messages.
dataValidationMetrics_fileLevelMessages :: Lens' DataValidationMetrics (Maybe [FileValidationMessage])

-- | Timestamp of when the detector was last updated.
detector_lastUpdatedTime :: Lens' Detector (Maybe Text)

-- | The detector ARN.
detector_arn :: Lens' Detector (Maybe Text)

-- | Timestamp of when the detector was created.
detector_createdTime :: Lens' Detector (Maybe Text)

-- | The name of the event type.
detector_eventTypeName :: Lens' Detector (Maybe Text)

-- | The detector ID.
detector_detectorId :: Lens' Detector (Maybe Text)

-- | The detector description.
detector_description :: Lens' Detector (Maybe Text)

-- | The detector version status.
detectorVersionSummary_status :: Lens' DetectorVersionSummary (Maybe DetectorVersionStatus)

-- | Timestamp of when the detector version was last updated.
detectorVersionSummary_lastUpdatedTime :: Lens' DetectorVersionSummary (Maybe Text)

-- | The detector version ID.
detectorVersionSummary_detectorVersionId :: Lens' DetectorVersionSummary (Maybe Text)

-- | The detector version description.
detectorVersionSummary_description :: Lens' DetectorVersionSummary (Maybe Text)

-- | The entity type.
entity_entityType :: Lens' Entity Text

-- | The entity ID. If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
entity_entityId :: Lens' Entity Text

-- | Timestamp of when the entity type was last updated.
entityType_lastUpdatedTime :: Lens' EntityType (Maybe Text)

-- | The entity type ARN.
entityType_arn :: Lens' EntityType (Maybe Text)

-- | Timestamp of when the entity type was created.
entityType_createdTime :: Lens' EntityType (Maybe Text)

-- | The entity type name.
entityType_name :: Lens' EntityType (Maybe Text)

-- | The entity type description.
entityType_description :: Lens' EntityType (Maybe Text)

-- | The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
event_eventTimestamp :: Lens' Event (Maybe Text)

-- | The event entities.
event_entities :: Lens' Event (Maybe [Entity])

-- | The timestamp associated with the label to update. The timestamp must
--   be specified using ISO 8601 standard in UTC.
event_labelTimestamp :: Lens' Event (Maybe Text)

-- | The event type.
event_eventTypeName :: Lens' Event (Maybe Text)

-- | Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
event_eventVariables :: Lens' Event (Maybe (HashMap Text Text))

-- | The label associated with the event.
event_currentLabel :: Lens' Event (Maybe Text)

-- | The event ID.
event_eventId :: Lens' Event (Maybe Text)

-- | Timestamp of when the event type was last updated.
eventType_lastUpdatedTime :: Lens' EventType (Maybe Text)

-- | The entity type ARN.
eventType_arn :: Lens' EventType (Maybe Text)

-- | Timestamp of when the event type was created.
eventType_createdTime :: Lens' EventType (Maybe Text)

-- | The event type entity types.
eventType_entityTypes :: Lens' EventType (Maybe (NonEmpty Text))

-- | The event type event variables.
eventType_eventVariables :: Lens' EventType (Maybe [Text])

-- | The event type name.
eventType_name :: Lens' EventType (Maybe Text)

-- | Data about the stored events.
eventType_ingestedEventStatistics :: Lens' EventType (Maybe IngestedEventStatistics)

-- | The event type labels.
eventType_labels :: Lens' EventType (Maybe [Text])

-- | If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when you
--   generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
eventType_eventIngestion :: Lens' EventType (Maybe EventIngestion)

-- | The event type description.
eventType_description :: Lens' EventType (Maybe Text)

-- | The Amazon S3 bucket location for the data.
externalEventsDetail_dataLocation :: Lens' ExternalEventsDetail Text

-- | The ARN of the role that provides Amazon Fraud Detector access to the
--   data location.
externalEventsDetail_dataAccessRoleArn :: Lens' ExternalEventsDetail Text

-- | The Amazon SageMaker model endpoints.
externalModel_modelEndpoint :: Lens' ExternalModel (Maybe Text)

-- | The source of the model.
externalModel_modelSource :: Lens' ExternalModel (Maybe ModelSource)

-- | Timestamp of when the model was last updated.
externalModel_lastUpdatedTime :: Lens' ExternalModel (Maybe Text)

-- | The model ARN.
externalModel_arn :: Lens' ExternalModel (Maybe Text)

-- | Timestamp of when the model was last created.
externalModel_createdTime :: Lens' ExternalModel (Maybe Text)

-- | The Amazon Fraud Detector status for the external model endpoint
externalModel_modelEndpointStatus :: Lens' ExternalModel (Maybe ModelEndpointStatus)

-- | The output configuration.
externalModel_outputConfiguration :: Lens' ExternalModel (Maybe ModelOutputConfiguration)

-- | The role used to invoke the model.
externalModel_invokeModelEndpointRoleArn :: Lens' ExternalModel (Maybe Text)

-- | The input configuration.
externalModel_inputConfiguration :: Lens' ExternalModel (Maybe ModelInputConfiguration)

-- | The Amazon SageMaker model.
externalModelOutputs_externalModel :: Lens' ExternalModelOutputs (Maybe ExternalModelSummary)

-- | The fraud prediction scores from Amazon SageMaker model.
externalModelOutputs_outputs :: Lens' ExternalModelOutputs (Maybe (HashMap Text Text))

-- | The endpoint of the Amazon SageMaker model.
externalModelSummary_modelEndpoint :: Lens' ExternalModelSummary (Maybe Text)

-- | The source of the model.
externalModelSummary_modelSource :: Lens' ExternalModelSummary (Maybe ModelSource)

-- | The message ID.
fieldValidationMessage_identifier :: Lens' FieldValidationMessage (Maybe Text)

-- | The message content.
fieldValidationMessage_content :: Lens' FieldValidationMessage (Maybe Text)

-- | The field name.
fieldValidationMessage_fieldName :: Lens' FieldValidationMessage (Maybe Text)

-- | The message title.
fieldValidationMessage_title :: Lens' FieldValidationMessage (Maybe Text)

-- | The message type.
fieldValidationMessage_type :: Lens' FieldValidationMessage (Maybe Text)

-- | The message content.
fileValidationMessage_content :: Lens' FileValidationMessage (Maybe Text)

-- | The message title.
fileValidationMessage_title :: Lens' FileValidationMessage (Maybe Text)

-- | The message type.
fileValidationMessage_type :: Lens' FileValidationMessage (Maybe Text)

-- | The total size of the stored events.
ingestedEventStatistics_eventDataSizeInBytes :: Lens' IngestedEventStatistics (Maybe Integer)

-- | The newest stored event.
ingestedEventStatistics_mostRecentEvent :: Lens' IngestedEventStatistics (Maybe Text)

-- | Timestamp of when the stored event was last updated.
ingestedEventStatistics_lastUpdatedTime :: Lens' IngestedEventStatistics (Maybe Text)

-- | The number of stored events.
ingestedEventStatistics_numberOfEvents :: Lens' IngestedEventStatistics (Maybe Integer)

-- | The oldest stored event.
ingestedEventStatistics_leastRecentEvent :: Lens' IngestedEventStatistics (Maybe Text)

-- | The start and stop time of the ingested events.
ingestedEventsDetail_ingestedEventsTimeWindow :: Lens' IngestedEventsDetail IngestedEventsTimeWindow

-- | Timestamp of the first ingensted event.
ingestedEventsTimeWindow_startTime :: Lens' IngestedEventsTimeWindow Text

-- | Timestamp of the final ingested event.
ingestedEventsTimeWindow_endTime :: Lens' IngestedEventsTimeWindow Text

-- | The encryption key ARN.
kmsKey_kmsEncryptionKeyArn :: Lens' KMSKey (Maybe Text)

-- | Timestamp of when the label was last updated.
label_lastUpdatedTime :: Lens' Label (Maybe Text)

-- | The label ARN.
label_arn :: Lens' Label (Maybe Text)

-- | Timestamp of when the event type was created.
label_createdTime :: Lens' Label (Maybe Text)

-- | The label name.
label_name :: Lens' Label (Maybe Text)

-- | The label description.
label_description :: Lens' Label (Maybe Text)

-- | The action to take for unlabeled events.
labelSchema_unlabeledEventsTreatment :: Lens' LabelSchema (Maybe UnlabeledEventsTreatment)

-- | The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
labelSchema_labelMapper :: Lens' LabelSchema (HashMap Text (NonEmpty Text))

-- | The name of the variable.
logOddsMetric_variableName :: Lens' LogOddsMetric Text

-- | The type of variable.
logOddsMetric_variableType :: Lens' LogOddsMetric Text

-- | The relative importance of the variable. For more information, see
--   <a>Model variable importance</a>.
logOddsMetric_variableImportance :: Lens' LogOddsMetric Double

-- | The percentage of fraud events correctly predicted as fraudulent as
--   compared to all events predicted as fraudulent.
metricDataPoint_precision :: Lens' MetricDataPoint (Maybe Double)

-- | The false positive rate. This is the percentage of total legitimate
--   events that are incorrectly predicted as fraud.
metricDataPoint_fpr :: Lens' MetricDataPoint (Maybe Double)

-- | The model threshold that specifies an acceptable fraud capture rate.
--   For example, a threshold of 500 means any model score 500 or above is
--   labeled as fraud.
metricDataPoint_threshold :: Lens' MetricDataPoint (Maybe Double)

-- | The true positive rate. This is the percentage of total fraud the
--   model detects. Also known as capture rate.
metricDataPoint_tpr :: Lens' MetricDataPoint (Maybe Double)

-- | The model type.
model_modelType :: Lens' Model (Maybe ModelTypeEnum)

-- | Timestamp of last time the model was updated.
model_lastUpdatedTime :: Lens' Model (Maybe Text)

-- | The model ID.
model_modelId :: Lens' Model (Maybe Text)

-- | The ARN of the model.
model_arn :: Lens' Model (Maybe Text)

-- | Timestamp of when the model was created.
model_createdTime :: Lens' Model (Maybe Text)

-- | The name of the event type.
model_eventTypeName :: Lens' Model (Maybe Text)

-- | The model description.
model_description :: Lens' Model (Maybe Text)

-- | The byte buffer of the Amazon SageMaker model endpoint input data
--   blob.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and
--   decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
modelEndpointDataBlob_byteBuffer :: Lens' ModelEndpointDataBlob (Maybe ByteString)

-- | The content type of the Amazon SageMaker model endpoint input data
--   blob.
modelEndpointDataBlob_contentType :: Lens' ModelEndpointDataBlob (Maybe Text)

-- | The format of the model input configuration. The format differs
--   depending on if it is passed through to SageMaker or constructed by
--   Amazon Fraud Detector.
modelInputConfiguration_format :: Lens' ModelInputConfiguration (Maybe ModelInputDataFormat)

-- | The event type name.
modelInputConfiguration_eventTypeName :: Lens' ModelInputConfiguration (Maybe Text)

-- | Template for constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
modelInputConfiguration_csvInputTemplate :: Lens' ModelInputConfiguration (Maybe Text)

-- | Template for constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
modelInputConfiguration_jsonInputTemplate :: Lens' ModelInputConfiguration (Maybe Text)

-- | The event variables.
modelInputConfiguration_useEventVariables :: Lens' ModelInputConfiguration Bool

-- | A map of JSON keys in response from SageMaker to the Amazon Fraud
--   Detector variables.
modelOutputConfiguration_jsonKeyToVariableMap :: Lens' ModelOutputConfiguration (Maybe (HashMap Text Text))

-- | A map of CSV index values in the SageMaker response to the Amazon
--   Fraud Detector variables.
modelOutputConfiguration_csvIndexToVariableMap :: Lens' ModelOutputConfiguration (Maybe (HashMap Text Text))

-- | The format of the model output configuration.
modelOutputConfiguration_format :: Lens' ModelOutputConfiguration ModelOutputDataFormat

-- | The model version.
modelScores_modelVersion :: Lens' ModelScores (Maybe ModelVersion)

-- | The model's fraud prediction scores.
modelScores_scores :: Lens' ModelScores (Maybe (HashMap Text Double))

-- | The model version ARN.
modelVersion_arn :: Lens' ModelVersion (Maybe Text)

-- | The model ID.
modelVersion_modelId :: Lens' ModelVersion Text

-- | The model type.
modelVersion_modelType :: Lens' ModelVersion ModelTypeEnum

-- | The model version number.
modelVersion_modelVersionNumber :: Lens' ModelVersion Text

-- | The status of the model version.
modelVersionDetail_status :: Lens' ModelVersionDetail (Maybe Text)

-- | The model type.
modelVersionDetail_modelType :: Lens' ModelVersionDetail (Maybe ModelTypeEnum)

-- | The timestamp when the model was last updated.
modelVersionDetail_lastUpdatedTime :: Lens' ModelVersionDetail (Maybe Text)

-- | The model ID.
modelVersionDetail_modelId :: Lens' ModelVersionDetail (Maybe Text)

-- | The model version ARN.
modelVersionDetail_arn :: Lens' ModelVersionDetail (Maybe Text)

-- | The model version training data source.
modelVersionDetail_trainingDataSource :: Lens' ModelVersionDetail (Maybe TrainingDataSourceEnum)

-- | The timestamp when the model was created.
modelVersionDetail_createdTime :: Lens' ModelVersionDetail (Maybe Text)

-- | The external events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
modelVersionDetail_externalEventsDetail :: Lens' ModelVersionDetail (Maybe ExternalEventsDetail)

-- | The ingested events data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
modelVersionDetail_ingestedEventsDetail :: Lens' ModelVersionDetail (Maybe IngestedEventsDetail)

-- | The model version number.
modelVersionDetail_modelVersionNumber :: Lens' ModelVersionDetail (Maybe Text)

-- | The training results.
modelVersionDetail_trainingResult :: Lens' ModelVersionDetail (Maybe TrainingResult)

-- | The training data schema.
modelVersionDetail_trainingDataSchema :: Lens' ModelVersionDetail (Maybe TrainingDataSchema)

-- | The timestamp when the outcome was last updated.
outcome_lastUpdatedTime :: Lens' Outcome (Maybe Text)

-- | The outcome ARN.
outcome_arn :: Lens' Outcome (Maybe Text)

-- | The timestamp when the outcome was created.
outcome_createdTime :: Lens' Outcome (Maybe Text)

-- | The outcome name.
outcome_name :: Lens' Outcome (Maybe Text)

-- | The outcome description.
outcome_description :: Lens' Outcome (Maybe Text)

-- | The detector for which the rule is associated.
rule_detectorId :: Lens' Rule Text

-- | The rule ID.
rule_ruleId :: Lens' Rule Text

-- | The rule version.
rule_ruleVersion :: Lens' Rule Text

-- | The rule version.
ruleDetail_ruleVersion :: Lens' RuleDetail (Maybe Text)

-- | Timestamp of the last time the rule was updated.
ruleDetail_lastUpdatedTime :: Lens' RuleDetail (Maybe Text)

-- | The rule ARN.
ruleDetail_arn :: Lens' RuleDetail (Maybe Text)

-- | The timestamp of when the rule was created.
ruleDetail_createdTime :: Lens' RuleDetail (Maybe Text)

-- | The rule ID.
ruleDetail_ruleId :: Lens' RuleDetail (Maybe Text)

-- | The rule outcomes.
ruleDetail_outcomes :: Lens' RuleDetail (Maybe (NonEmpty Text))

-- | The detector for which the rule is associated.
ruleDetail_detectorId :: Lens' RuleDetail (Maybe Text)

-- | The rule expression.
ruleDetail_expression :: Lens' RuleDetail (Maybe Text)

-- | The rule language.
ruleDetail_language :: Lens' RuleDetail (Maybe Language)

-- | The rule description.
ruleDetail_description :: Lens' RuleDetail (Maybe Text)

-- | The rule ID that was matched, based on the rule execution mode.
ruleResult_ruleId :: Lens' RuleResult (Maybe Text)

-- | The outcomes of the matched rule, based on the rule execution mode.
ruleResult_outcomes :: Lens' RuleResult (Maybe [Text])

-- | A tag key.
tag_key :: Lens' Tag Text

-- | A value assigned to a tag key.
tag_value :: Lens' Tag Text

-- | The training data schema variables.
trainingDataSchema_modelVariables :: Lens' TrainingDataSchema [Text]

-- | Undocumented member.
trainingDataSchema_labelSchema :: Lens' TrainingDataSchema LabelSchema

-- | The area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
trainingMetrics_auc :: Lens' TrainingMetrics (Maybe Double)

-- | The data points details.
trainingMetrics_metricDataPoints :: Lens' TrainingMetrics (Maybe [MetricDataPoint])

-- | The validation metrics.
trainingResult_dataValidationMetrics :: Lens' TrainingResult (Maybe DataValidationMetrics)

-- | The training metric details.
trainingResult_trainingMetrics :: Lens' TrainingResult (Maybe TrainingMetrics)

-- | The variable importance metrics.
trainingResult_variableImportanceMetrics :: Lens' TrainingResult (Maybe VariableImportanceMetrics)

-- | The time when variable was last updated.
variable_lastUpdatedTime :: Lens' Variable (Maybe Text)

-- | The ARN of the variable.
variable_arn :: Lens' Variable (Maybe Text)

-- | The time when the variable was created.
variable_createdTime :: Lens' Variable (Maybe Text)

-- | The name of the variable.
variable_name :: Lens' Variable (Maybe Text)

-- | The data source of the variable.
variable_dataSource :: Lens' Variable (Maybe DataSource)

-- | The data type of the variable. For more information see <a>Variable
--   types</a>.
variable_dataType :: Lens' Variable (Maybe DataType)

-- | The default value of the variable.
variable_defaultValue :: Lens' Variable (Maybe Text)

-- | The variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
variable_variableType :: Lens' Variable (Maybe Text)

-- | The description of the variable.
variable_description :: Lens' Variable (Maybe Text)

-- | The name of the variable.
variableEntry_name :: Lens' VariableEntry (Maybe Text)

-- | The data source of the variable.
variableEntry_dataSource :: Lens' VariableEntry (Maybe Text)

-- | The data type of the variable.
variableEntry_dataType :: Lens' VariableEntry (Maybe Text)

-- | The default value of the variable.
variableEntry_defaultValue :: Lens' VariableEntry (Maybe Text)

-- | The type of the variable. For more information see <a>Variable
--   types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
variableEntry_variableType :: Lens' VariableEntry (Maybe Text)

-- | The description of the variable.
variableEntry_description :: Lens' VariableEntry (Maybe Text)

-- | List of variable metrics.
variableImportanceMetrics_logOddsMetrics :: Lens' VariableImportanceMetrics (Maybe [LogOddsMetric])


module Network.AWS.FraudDetector.Waiters


-- | Derived from API version <tt>2019-11-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   This is the Amazon Fraud Detector API Reference. This guide is for
--   developers who need detailed information about Amazon Fraud Detector
--   API actions, data types, and errors. For more information about Amazon
--   Fraud Detector features, see the <a>Amazon Fraud Detector User
--   Guide</a>.
module Network.AWS.FraudDetector

-- | API version <tt>2019-11-15</tt> of the Amazon Fraud Detector SDK
--   configuration.
defaultService :: Service

-- | An exception indicating a specified value is not allowed.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating Amazon Fraud Detector does not have the needed
--   permissions. This can occur if you submit a request, such as
--   <tt>PutExternalModel</tt>, that specifies a role that is not in your
--   account.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating that the attached customer-owned (external)
--   model threw an exception when Amazon Fraud Detector invoked the model.
_ResourceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating there was a conflict during a delete
--   operation.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating a throttling error.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating an internal server error.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception indicating the specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newCreateDetectorVersion</a> smart constructor.
data CreateDetectorVersion
CreateDetectorVersion' :: Maybe RuleExecutionMode -> Maybe [ModelVersion] -> Maybe [Text] -> Maybe Text -> Maybe [Tag] -> Text -> [Rule] -> CreateDetectorVersion

-- | Create a value of <a>CreateDetectorVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleExecutionMode:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_ruleExecutionMode</a> - The rule execution
--   mode for the rules included in the detector version.
--   
--   You can define and edit the rule mode at the detector version level,
--   when it is in draft status.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
--   
--   <a>$sel:modelVersions:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_modelVersions</a> - The model versions to
--   include in the detector version.
--   
--   <a>$sel:externalModelEndpoints:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_externalModelEndpoints</a> - The Amazon
--   Sagemaker model endpoints to include in the detector version.
--   
--   <a>$sel:description:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_description</a> - The description of the
--   detector version.
--   
--   <a>$sel:tags:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_tags</a> - A collection of key and value
--   pairs.
--   
--   <a>$sel:detectorId:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_detectorId</a> - The ID of the detector under
--   which you want to create a new version.
--   
--   <a>$sel:rules:CreateDetectorVersion'</a>,
--   <a>createDetectorVersion_rules</a> - The rules to include in the
--   detector version.
newCreateDetectorVersion :: Text -> CreateDetectorVersion

-- | <i>See:</i> <a>newCreateDetectorVersionResponse</a> smart constructor.
data CreateDetectorVersionResponse
CreateDetectorVersionResponse' :: Maybe DetectorVersionStatus -> Maybe Text -> Maybe Text -> Int -> CreateDetectorVersionResponse

-- | Create a value of <a>CreateDetectorVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateDetectorVersionResponse'</a>,
--   <a>createDetectorVersionResponse_status</a> - The status of the
--   detector version.
--   
--   <a>$sel:detectorVersionId:CreateDetectorVersionResponse'</a>,
--   <a>createDetectorVersionResponse_detectorVersionId</a> - The ID for
--   the created detector.
--   
--   <a>$sel:detectorId:CreateDetectorVersion'</a>,
--   <a>createDetectorVersionResponse_detectorId</a> - The ID for the
--   created version's parent detector.
--   
--   <a>$sel:httpStatus:CreateDetectorVersionResponse'</a>,
--   <a>createDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateDetectorVersionResponse :: Int -> CreateDetectorVersionResponse

-- | <i>See:</i> <a>newBatchGetVariable</a> smart constructor.
data BatchGetVariable
BatchGetVariable' :: NonEmpty Text -> BatchGetVariable

-- | Create a value of <a>BatchGetVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:BatchGetVariable'</a>, <a>batchGetVariable_names</a> -
--   The list of variable names to get.
newBatchGetVariable :: NonEmpty Text -> BatchGetVariable

-- | <i>See:</i> <a>newBatchGetVariableResponse</a> smart constructor.
data BatchGetVariableResponse
BatchGetVariableResponse' :: Maybe [Variable] -> Maybe [BatchGetVariableError] -> Int -> BatchGetVariableResponse

-- | Create a value of <a>BatchGetVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:BatchGetVariableResponse'</a>,
--   <a>batchGetVariableResponse_variables</a> - The returned variables.
--   
--   <a>$sel:errors:BatchGetVariableResponse'</a>,
--   <a>batchGetVariableResponse_errors</a> - The errors from the request.
--   
--   <a>$sel:httpStatus:BatchGetVariableResponse'</a>,
--   <a>batchGetVariableResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetVariableResponse :: Int -> BatchGetVariableResponse

-- | <i>See:</i> <a>newUpdateModelVersion</a> smart constructor.
data UpdateModelVersion
UpdateModelVersion' :: Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe [Tag] -> Text -> ModelTypeEnum -> Text -> UpdateModelVersion

-- | Create a value of <a>UpdateModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalEventsDetail:UpdateModelVersion'</a>,
--   <a>updateModelVersion_externalEventsDetail</a> - The details of the
--   external events data used for training the model version. Required if
--   <tt>trainingDataSource</tt> is <tt>EXTERNAL_EVENTS</tt>.
--   
--   <a>$sel:ingestedEventsDetail:UpdateModelVersion'</a>,
--   <a>updateModelVersion_ingestedEventsDetail</a> - The details of the
--   ingested event used for training the model version. Required if your
--   <tt>trainingDataSource</tt> is <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:tags:UpdateModelVersion'</a>, <a>updateModelVersion_tags</a> -
--   A collection of key and value pairs.
--   
--   <a>$sel:modelId:UpdateModelVersion'</a>,
--   <a>updateModelVersion_modelId</a> - The model ID.
--   
--   <a>$sel:modelType:UpdateModelVersion'</a>,
--   <a>updateModelVersion_modelType</a> - The model type.
--   
--   <a>$sel:majorVersionNumber:UpdateModelVersion'</a>,
--   <a>updateModelVersion_majorVersionNumber</a> - The major version
--   number.
newUpdateModelVersion :: Text -> ModelTypeEnum -> Text -> UpdateModelVersion

-- | <i>See:</i> <a>newUpdateModelVersionResponse</a> smart constructor.
data UpdateModelVersionResponse
UpdateModelVersionResponse' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Int -> UpdateModelVersionResponse

-- | Create a value of <a>UpdateModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateModelVersionResponse'</a>,
--   <a>updateModelVersionResponse_status</a> - The status of the updated
--   model version.
--   
--   <a>$sel:modelType:UpdateModelVersion'</a>,
--   <a>updateModelVersionResponse_modelType</a> - The model type.
--   
--   <a>$sel:modelId:UpdateModelVersion'</a>,
--   <a>updateModelVersionResponse_modelId</a> - The model ID.
--   
--   <a>$sel:modelVersionNumber:UpdateModelVersionResponse'</a>,
--   <a>updateModelVersionResponse_modelVersionNumber</a> - The model
--   version number of the model version updated.
--   
--   <a>$sel:httpStatus:UpdateModelVersionResponse'</a>,
--   <a>updateModelVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateModelVersionResponse :: Int -> UpdateModelVersionResponse

-- | <i>See:</i> <a>newDeleteModelVersion</a> smart constructor.
data DeleteModelVersion
DeleteModelVersion' :: Text -> ModelTypeEnum -> Text -> DeleteModelVersion

-- | Create a value of <a>DeleteModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:DeleteModelVersion'</a>,
--   <a>deleteModelVersion_modelId</a> - The model ID of the model version
--   to delete.
--   
--   <a>$sel:modelType:DeleteModelVersion'</a>,
--   <a>deleteModelVersion_modelType</a> - The model type of the model
--   version to delete.
--   
--   <a>$sel:modelVersionNumber:DeleteModelVersion'</a>,
--   <a>deleteModelVersion_modelVersionNumber</a> - The model version
--   number of the model version to delete.
newDeleteModelVersion :: Text -> ModelTypeEnum -> Text -> DeleteModelVersion

-- | <i>See:</i> <a>newDeleteModelVersionResponse</a> smart constructor.
data DeleteModelVersionResponse
DeleteModelVersionResponse' :: Int -> DeleteModelVersionResponse

-- | Create a value of <a>DeleteModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteModelVersionResponse'</a>,
--   <a>deleteModelVersionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteModelVersionResponse :: Int -> DeleteModelVersionResponse

-- | <i>See:</i> <a>newUpdateDetectorVersionMetadata</a> smart constructor.
data UpdateDetectorVersionMetadata
UpdateDetectorVersionMetadata' :: Text -> Text -> Text -> UpdateDetectorVersionMetadata

-- | Create a value of <a>UpdateDetectorVersionMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:UpdateDetectorVersionMetadata'</a>,
--   <a>updateDetectorVersionMetadata_detectorId</a> - The detector ID.
--   
--   <a>$sel:detectorVersionId:UpdateDetectorVersionMetadata'</a>,
--   <a>updateDetectorVersionMetadata_detectorVersionId</a> - The detector
--   version ID.
--   
--   <a>$sel:description:UpdateDetectorVersionMetadata'</a>,
--   <a>updateDetectorVersionMetadata_description</a> - The description.
newUpdateDetectorVersionMetadata :: Text -> Text -> Text -> UpdateDetectorVersionMetadata

-- | <i>See:</i> <a>newUpdateDetectorVersionMetadataResponse</a> smart
--   constructor.
data UpdateDetectorVersionMetadataResponse
UpdateDetectorVersionMetadataResponse' :: Int -> UpdateDetectorVersionMetadataResponse

-- | Create a value of <a>UpdateDetectorVersionMetadataResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDetectorVersionMetadataResponse'</a>,
--   <a>updateDetectorVersionMetadataResponse_httpStatus</a> - The
--   response's http status code.
newUpdateDetectorVersionMetadataResponse :: Int -> UpdateDetectorVersionMetadataResponse

-- | <i>See:</i> <a>newDeleteBatchImportJob</a> smart constructor.
data DeleteBatchImportJob
DeleteBatchImportJob' :: Text -> DeleteBatchImportJob

-- | Create a value of <a>DeleteBatchImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DeleteBatchImportJob'</a>,
--   <a>deleteBatchImportJob_jobId</a> - The ID of the batch import job to
--   delete.
newDeleteBatchImportJob :: Text -> DeleteBatchImportJob

-- | <i>See:</i> <a>newDeleteBatchImportJobResponse</a> smart constructor.
data DeleteBatchImportJobResponse
DeleteBatchImportJobResponse' :: Int -> DeleteBatchImportJobResponse

-- | Create a value of <a>DeleteBatchImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBatchImportJobResponse'</a>,
--   <a>deleteBatchImportJobResponse_httpStatus</a> - The response's http
--   status code.
newDeleteBatchImportJobResponse :: Int -> DeleteBatchImportJobResponse

-- | <i>See:</i> <a>newDeleteRule</a> smart constructor.
data DeleteRule
DeleteRule' :: Rule -> DeleteRule

-- | Create a value of <a>DeleteRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:DeleteRule'</a>, <a>deleteRule_rule</a> - Undocumented
--   member.
newDeleteRule :: Rule -> DeleteRule

-- | <i>See:</i> <a>newDeleteRuleResponse</a> smart constructor.
data DeleteRuleResponse
DeleteRuleResponse' :: Int -> DeleteRuleResponse

-- | Create a value of <a>DeleteRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRuleResponse'</a>,
--   <a>deleteRuleResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRuleResponse :: Int -> DeleteRuleResponse

-- | <i>See:</i> <a>newPutLabel</a> smart constructor.
data PutLabel
PutLabel' :: Maybe Text -> Maybe [Tag] -> Text -> PutLabel

-- | Create a value of <a>PutLabel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutLabel'</a>, <a>putLabel_description</a> - The
--   label description.
--   
--   <a>$sel:tags:PutLabel'</a>, <a>putLabel_tags</a> -
--   
--   <a>$sel:name:PutLabel'</a>, <a>putLabel_name</a> - The label name.
newPutLabel :: Text -> PutLabel

-- | <i>See:</i> <a>newPutLabelResponse</a> smart constructor.
data PutLabelResponse
PutLabelResponse' :: Int -> PutLabelResponse

-- | Create a value of <a>PutLabelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLabelResponse'</a>,
--   <a>putLabelResponse_httpStatus</a> - The response's http status code.
newPutLabelResponse :: Int -> PutLabelResponse

-- | <i>See:</i> <a>newGetExternalModels</a> smart constructor.
data GetExternalModels
GetExternalModels' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetExternalModels

-- | Create a value of <a>GetExternalModels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:GetExternalModels'</a>,
--   <a>getExternalModels_modelEndpoint</a> - The Amazon SageMaker model
--   endpoint.
--   
--   <a>$sel:nextToken:GetExternalModels'</a>,
--   <a>getExternalModels_nextToken</a> - The next page token for the
--   request.
--   
--   <a>$sel:maxResults:GetExternalModels'</a>,
--   <a>getExternalModels_maxResults</a> - The maximum number of objects to
--   return for the request.
newGetExternalModels :: GetExternalModels

-- | <i>See:</i> <a>newGetExternalModelsResponse</a> smart constructor.
data GetExternalModelsResponse
GetExternalModelsResponse' :: Maybe Text -> Maybe [ExternalModel] -> Int -> GetExternalModelsResponse

-- | Create a value of <a>GetExternalModelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetExternalModels'</a>,
--   <a>getExternalModelsResponse_nextToken</a> - The next page token to be
--   used in subsequent requests.
--   
--   <a>$sel:externalModels:GetExternalModelsResponse'</a>,
--   <a>getExternalModelsResponse_externalModels</a> - Gets the Amazon
--   SageMaker models.
--   
--   <a>$sel:httpStatus:GetExternalModelsResponse'</a>,
--   <a>getExternalModelsResponse_httpStatus</a> - The response's http
--   status code.
newGetExternalModelsResponse :: Int -> GetExternalModelsResponse

-- | <i>See:</i> <a>newGetDetectors</a> smart constructor.
data GetDetectors
GetDetectors' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetDetectors

-- | Create a value of <a>GetDetectors</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectors'</a>, <a>getDetectors_nextToken</a> -
--   The next token for the subsequent request.
--   
--   <a>$sel:detectorId:GetDetectors'</a>, <a>getDetectors_detectorId</a> -
--   The detector ID.
--   
--   <a>$sel:maxResults:GetDetectors'</a>, <a>getDetectors_maxResults</a> -
--   The maximum number of objects to return for the request.
newGetDetectors :: GetDetectors

-- | <i>See:</i> <a>newGetDetectorsResponse</a> smart constructor.
data GetDetectorsResponse
GetDetectorsResponse' :: Maybe Text -> Maybe [Detector] -> Int -> GetDetectorsResponse

-- | Create a value of <a>GetDetectorsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDetectors'</a>,
--   <a>getDetectorsResponse_nextToken</a> - The next page token.
--   
--   <a>$sel:detectors:GetDetectorsResponse'</a>,
--   <a>getDetectorsResponse_detectors</a> - The detectors.
--   
--   <a>$sel:httpStatus:GetDetectorsResponse'</a>,
--   <a>getDetectorsResponse_httpStatus</a> - The response's http status
--   code.
newGetDetectorsResponse :: Int -> GetDetectorsResponse

-- | <i>See:</i> <a>newDeleteLabel</a> smart constructor.
data DeleteLabel
DeleteLabel' :: Text -> DeleteLabel

-- | Create a value of <a>DeleteLabel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteLabel'</a>, <a>deleteLabel_name</a> - The name of
--   the label to delete.
newDeleteLabel :: Text -> DeleteLabel

-- | <i>See:</i> <a>newDeleteLabelResponse</a> smart constructor.
data DeleteLabelResponse
DeleteLabelResponse' :: Int -> DeleteLabelResponse

-- | Create a value of <a>DeleteLabelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLabelResponse'</a>,
--   <a>deleteLabelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteLabelResponse :: Int -> DeleteLabelResponse

-- | <i>See:</i> <a>newDeleteVariable</a> smart constructor.
data DeleteVariable
DeleteVariable' :: Text -> DeleteVariable

-- | Create a value of <a>DeleteVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteVariable'</a>, <a>deleteVariable_name</a> - The
--   name of the variable to delete.
newDeleteVariable :: Text -> DeleteVariable

-- | <i>See:</i> <a>newDeleteVariableResponse</a> smart constructor.
data DeleteVariableResponse
DeleteVariableResponse' :: Int -> DeleteVariableResponse

-- | Create a value of <a>DeleteVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVariableResponse'</a>,
--   <a>deleteVariableResponse_httpStatus</a> - The response's http status
--   code.
newDeleteVariableResponse :: Int -> DeleteVariableResponse

-- | <i>See:</i> <a>newUpdateVariable</a> smart constructor.
data UpdateVariable
UpdateVariable' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateVariable

-- | Create a value of <a>UpdateVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:UpdateVariable'</a>,
--   <a>updateVariable_defaultValue</a> - The new default value of the
--   variable.
--   
--   <a>$sel:variableType:UpdateVariable'</a>,
--   <a>updateVariable_variableType</a> - The variable type. For more
--   information see <a>Variable types</a>.
--   
--   <a>$sel:description:UpdateVariable'</a>,
--   <a>updateVariable_description</a> - The new description.
--   
--   <a>$sel:name:UpdateVariable'</a>, <a>updateVariable_name</a> - The
--   name of the variable.
newUpdateVariable :: Text -> UpdateVariable

-- | <i>See:</i> <a>newUpdateVariableResponse</a> smart constructor.
data UpdateVariableResponse
UpdateVariableResponse' :: Int -> UpdateVariableResponse

-- | Create a value of <a>UpdateVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVariableResponse'</a>,
--   <a>updateVariableResponse_httpStatus</a> - The response's http status
--   code.
newUpdateVariableResponse :: Int -> UpdateVariableResponse

-- | <i>See:</i> <a>newCreateVariable</a> smart constructor.
data CreateVariable
CreateVariable' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> DataType -> DataSource -> Text -> CreateVariable

-- | Create a value of <a>CreateVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableType:CreateVariable'</a>,
--   <a>createVariable_variableType</a> - The variable type. For more
--   information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT</tt>
--   
--   <a>$sel:description:CreateVariable'</a>,
--   <a>createVariable_description</a> - The description.
--   
--   <a>$sel:tags:CreateVariable'</a>, <a>createVariable_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:name:CreateVariable'</a>, <a>createVariable_name</a> - The
--   name of the variable.
--   
--   <a>$sel:dataType:CreateVariable'</a>, <a>createVariable_dataType</a> -
--   The data type.
--   
--   <a>$sel:dataSource:CreateVariable'</a>,
--   <a>createVariable_dataSource</a> - The source of the data.
--   
--   <a>$sel:defaultValue:CreateVariable'</a>,
--   <a>createVariable_defaultValue</a> - The default value for the
--   variable when no value is received.
newCreateVariable :: Text -> DataType -> DataSource -> Text -> CreateVariable

-- | <i>See:</i> <a>newCreateVariableResponse</a> smart constructor.
data CreateVariableResponse
CreateVariableResponse' :: Int -> CreateVariableResponse

-- | Create a value of <a>CreateVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVariableResponse'</a>,
--   <a>createVariableResponse_httpStatus</a> - The response's http status
--   code.
newCreateVariableResponse :: Int -> CreateVariableResponse

-- | <i>See:</i> <a>newCreateBatchImportJob</a> smart constructor.
data CreateBatchImportJob
CreateBatchImportJob' :: Maybe [Tag] -> Text -> Text -> Text -> Text -> Text -> CreateBatchImportJob

-- | Create a value of <a>CreateBatchImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_tags</a> - A collection of key-value pairs
--   associated with this request.
--   
--   <a>$sel:jobId:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_jobId</a> - The ID of the batch import job.
--   The ID cannot be of a past job, unless the job exists in
--   <tt>CREATE_FAILED</tt> state.
--   
--   <a>$sel:inputPath:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_inputPath</a> - The URI that points to the
--   Amazon S3 location of your data file.
--   
--   <a>$sel:outputPath:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_outputPath</a> - The URI that points to the
--   Amazon S3 location for storing your results.
--   
--   <a>$sel:eventTypeName:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_eventTypeName</a> - The name of the event
--   type.
--   
--   <a>$sel:iamRoleArn:CreateBatchImportJob'</a>,
--   <a>createBatchImportJob_iamRoleArn</a> - The ARN of the IAM role
--   created for Amazon S3 bucket that holds your data file. The IAM role
--   must have read and write permissions to both input and output S3
--   buckets.
newCreateBatchImportJob :: Text -> Text -> Text -> Text -> Text -> CreateBatchImportJob

-- | <i>See:</i> <a>newCreateBatchImportJobResponse</a> smart constructor.
data CreateBatchImportJobResponse
CreateBatchImportJobResponse' :: Int -> CreateBatchImportJobResponse

-- | Create a value of <a>CreateBatchImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBatchImportJobResponse'</a>,
--   <a>createBatchImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateBatchImportJobResponse :: Int -> CreateBatchImportJobResponse

-- | <i>See:</i> <a>newCreateRule</a> smart constructor.
data CreateRule
CreateRule' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> Sensitive Text -> Language -> NonEmpty Text -> CreateRule

-- | Create a value of <a>CreateRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRule'</a>, <a>createRule_description</a> -
--   The rule description.
--   
--   <a>$sel:tags:CreateRule'</a>, <a>createRule_tags</a> - A collection of
--   key and value pairs.
--   
--   <a>$sel:ruleId:CreateRule'</a>, <a>createRule_ruleId</a> - The rule
--   ID.
--   
--   <a>$sel:detectorId:CreateRule'</a>, <a>createRule_detectorId</a> - The
--   detector ID for the rule's parent detector.
--   
--   <a>$sel:expression:CreateRule'</a>, <a>createRule_expression</a> - The
--   rule expression.
--   
--   <a>$sel:language:CreateRule'</a>, <a>createRule_language</a> - The
--   language of the rule.
--   
--   <a>$sel:outcomes:CreateRule'</a>, <a>createRule_outcomes</a> - The
--   outcome or outcomes returned when the rule expression matches.
newCreateRule :: Text -> Text -> Text -> Language -> NonEmpty Text -> CreateRule

-- | <i>See:</i> <a>newCreateRuleResponse</a> smart constructor.
data CreateRuleResponse
CreateRuleResponse' :: Maybe Rule -> Int -> CreateRuleResponse

-- | Create a value of <a>CreateRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:CreateRuleResponse'</a>, <a>createRuleResponse_rule</a> -
--   The created rule.
--   
--   <a>$sel:httpStatus:CreateRuleResponse'</a>,
--   <a>createRuleResponse_httpStatus</a> - The response's http status
--   code.
newCreateRuleResponse :: Int -> CreateRuleResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The next token from the
--   previous results.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The maximum number of objects
--   to return for the request.
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN that specifies the
--   resource whose tags you want to list.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The next token for
--   subsequent requests.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A collection of key and
--   value pairs.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetModels</a> smart constructor.
data GetModels
GetModels' :: Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Natural -> GetModels

-- | Create a value of <a>GetModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelType:GetModels'</a>, <a>getModels_modelType</a> - The
--   model type.
--   
--   <a>$sel:modelId:GetModels'</a>, <a>getModels_modelId</a> - The model
--   ID.
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModels_nextToken</a> - The
--   next token for the subsequent request.
--   
--   <a>$sel:maxResults:GetModels'</a>, <a>getModels_maxResults</a> - The
--   maximum number of objects to return for the request.
newGetModels :: GetModels

-- | <i>See:</i> <a>newGetModelsResponse</a> smart constructor.
data GetModelsResponse
GetModelsResponse' :: Maybe [Model] -> Maybe Text -> Int -> GetModelsResponse

-- | Create a value of <a>GetModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:models:GetModelsResponse'</a>, <a>getModelsResponse_models</a>
--   - The array of models.
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModelsResponse_nextToken</a> -
--   The next page token to be used in subsequent requests.
--   
--   <a>$sel:httpStatus:GetModelsResponse'</a>,
--   <a>getModelsResponse_httpStatus</a> - The response's http status code.
newGetModelsResponse :: Int -> GetModelsResponse

-- | <i>See:</i> <a>newUpdateRuleVersion</a> smart constructor.
data UpdateRuleVersion
UpdateRuleVersion' :: Maybe Text -> Maybe [Tag] -> Rule -> Sensitive Text -> Language -> NonEmpty Text -> UpdateRuleVersion

-- | Create a value of <a>UpdateRuleVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_description</a> - The description.
--   
--   <a>$sel:tags:UpdateRuleVersion'</a>, <a>updateRuleVersion_tags</a> -
--   The tags to assign to the rule version.
--   
--   <a>$sel:rule:UpdateRuleVersion'</a>, <a>updateRuleVersion_rule</a> -
--   The rule to update.
--   
--   <a>$sel:expression:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_expression</a> - The rule expression.
--   
--   <a>$sel:language:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_language</a> - The language.
--   
--   <a>$sel:outcomes:UpdateRuleVersion'</a>,
--   <a>updateRuleVersion_outcomes</a> - The outcomes.
newUpdateRuleVersion :: Rule -> Text -> Language -> NonEmpty Text -> UpdateRuleVersion

-- | <i>See:</i> <a>newUpdateRuleVersionResponse</a> smart constructor.
data UpdateRuleVersionResponse
UpdateRuleVersionResponse' :: Maybe Rule -> Int -> UpdateRuleVersionResponse

-- | Create a value of <a>UpdateRuleVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:UpdateRuleVersion'</a>,
--   <a>updateRuleVersionResponse_rule</a> - The new rule version that was
--   created.
--   
--   <a>$sel:httpStatus:UpdateRuleVersionResponse'</a>,
--   <a>updateRuleVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRuleVersionResponse :: Int -> UpdateRuleVersionResponse

-- | <i>See:</i> <a>newDeleteEvent</a> smart constructor.
data DeleteEvent
DeleteEvent' :: Maybe Bool -> Text -> Text -> DeleteEvent

-- | Create a value of <a>DeleteEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteAuditHistory:DeleteEvent'</a>,
--   <a>deleteEvent_deleteAuditHistory</a> - Specifies whether or not to
--   delete any predictions associated with the event.
--   
--   <a>$sel:eventId:DeleteEvent'</a>, <a>deleteEvent_eventId</a> - The ID
--   of the event to delete.
--   
--   <a>$sel:eventTypeName:DeleteEvent'</a>,
--   <a>deleteEvent_eventTypeName</a> - The name of the event type.
newDeleteEvent :: Text -> Text -> DeleteEvent

-- | <i>See:</i> <a>newDeleteEventResponse</a> smart constructor.
data DeleteEventResponse
DeleteEventResponse' :: Int -> DeleteEventResponse

-- | Create a value of <a>DeleteEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEventResponse'</a>,
--   <a>deleteEventResponse_httpStatus</a> - The response's http status
--   code.
newDeleteEventResponse :: Int -> DeleteEventResponse

-- | <i>See:</i> <a>newCancelBatchPredictionJob</a> smart constructor.
data CancelBatchPredictionJob
CancelBatchPredictionJob' :: Text -> CancelBatchPredictionJob

-- | Create a value of <a>CancelBatchPredictionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelBatchPredictionJob'</a>,
--   <a>cancelBatchPredictionJob_jobId</a> - The ID of the batch prediction
--   job to cancel.
newCancelBatchPredictionJob :: Text -> CancelBatchPredictionJob

-- | <i>See:</i> <a>newCancelBatchPredictionJobResponse</a> smart
--   constructor.
data CancelBatchPredictionJobResponse
CancelBatchPredictionJobResponse' :: Int -> CancelBatchPredictionJobResponse

-- | Create a value of <a>CancelBatchPredictionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelBatchPredictionJobResponse'</a>,
--   <a>cancelBatchPredictionJobResponse_httpStatus</a> - The response's
--   http status code.
newCancelBatchPredictionJobResponse :: Int -> CancelBatchPredictionJobResponse

-- | <i>See:</i> <a>newUpdateModelVersionStatus</a> smart constructor.
data UpdateModelVersionStatus
UpdateModelVersionStatus' :: Text -> ModelTypeEnum -> Text -> ModelVersionStatus -> UpdateModelVersionStatus

-- | Create a value of <a>UpdateModelVersionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_modelId</a> - The model ID of the model
--   version to update.
--   
--   <a>$sel:modelType:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_modelType</a> - The model type.
--   
--   <a>$sel:modelVersionNumber:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:status:UpdateModelVersionStatus'</a>,
--   <a>updateModelVersionStatus_status</a> - The model version status.
newUpdateModelVersionStatus :: Text -> ModelTypeEnum -> Text -> ModelVersionStatus -> UpdateModelVersionStatus

-- | <i>See:</i> <a>newUpdateModelVersionStatusResponse</a> smart
--   constructor.
data UpdateModelVersionStatusResponse
UpdateModelVersionStatusResponse' :: Int -> UpdateModelVersionStatusResponse

-- | Create a value of <a>UpdateModelVersionStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateModelVersionStatusResponse'</a>,
--   <a>updateModelVersionStatusResponse_httpStatus</a> - The response's
--   http status code.
newUpdateModelVersionStatusResponse :: Int -> UpdateModelVersionStatusResponse

-- | <i>See:</i> <a>newGetBatchPredictionJobs</a> smart constructor.
data GetBatchPredictionJobs
GetBatchPredictionJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetBatchPredictionJobs

-- | Create a value of <a>GetBatchPredictionJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobs_jobId</a> - The batch prediction job for
--   which to get the details.
--   
--   <a>$sel:nextToken:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobs_nextToken</a> - The next token from the
--   previous request.
--   
--   <a>$sel:maxResults:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobs_maxResults</a> - The maximum number of
--   objects to return for the request.
newGetBatchPredictionJobs :: GetBatchPredictionJobs

-- | <i>See:</i> <a>newGetBatchPredictionJobsResponse</a> smart
--   constructor.
data GetBatchPredictionJobsResponse
GetBatchPredictionJobsResponse' :: Maybe [BatchPrediction] -> Maybe Text -> Int -> GetBatchPredictionJobsResponse

-- | Create a value of <a>GetBatchPredictionJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPredictions:GetBatchPredictionJobsResponse'</a>,
--   <a>getBatchPredictionJobsResponse_batchPredictions</a> - An array
--   containing the details of each batch prediction job.
--   
--   <a>$sel:nextToken:GetBatchPredictionJobs'</a>,
--   <a>getBatchPredictionJobsResponse_nextToken</a> - The next token for
--   the subsequent request.
--   
--   <a>$sel:httpStatus:GetBatchPredictionJobsResponse'</a>,
--   <a>getBatchPredictionJobsResponse_httpStatus</a> - The response's http
--   status code.
newGetBatchPredictionJobsResponse :: Int -> GetBatchPredictionJobsResponse

-- | <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe Text -> Maybe [Tag] -> Text -> ModelTypeEnum -> Text -> CreateModel

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateModel'</a>, <a>createModel_description</a> -
--   The model description.
--   
--   <a>$sel:tags:CreateModel'</a>, <a>createModel_tags</a> - A collection
--   of key and value pairs.
--   
--   <a>$sel:modelId:CreateModel'</a>, <a>createModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:modelType:CreateModel'</a>, <a>createModel_modelType</a> - The
--   model type.
--   
--   <a>$sel:eventTypeName:CreateModel'</a>,
--   <a>createModel_eventTypeName</a> - The name of the event type.
newCreateModel :: Text -> ModelTypeEnum -> Text -> CreateModel

-- | <i>See:</i> <a>newCreateModelResponse</a> smart constructor.
data CreateModelResponse
CreateModelResponse' :: Int -> CreateModelResponse

-- | Create a value of <a>CreateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateModelResponse'</a>,
--   <a>createModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateModelResponse :: Int -> CreateModelResponse

-- | <i>See:</i> <a>newGetLabels</a> smart constructor.
data GetLabels
GetLabels' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetLabels

-- | Create a value of <a>GetLabels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetLabels'</a>, <a>getLabels_nextToken</a> - The
--   next token for the subsequent request.
--   
--   <a>$sel:name:GetLabels'</a>, <a>getLabels_name</a> - The name of the
--   label or labels to get.
--   
--   <a>$sel:maxResults:GetLabels'</a>, <a>getLabels_maxResults</a> - The
--   maximum number of objects to return for the request.
newGetLabels :: GetLabels

-- | <i>See:</i> <a>newGetLabelsResponse</a> smart constructor.
data GetLabelsResponse
GetLabelsResponse' :: Maybe Text -> Maybe [Label] -> Int -> GetLabelsResponse

-- | Create a value of <a>GetLabelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetLabels'</a>, <a>getLabelsResponse_nextToken</a> -
--   The next page token.
--   
--   <a>$sel:labels:GetLabelsResponse'</a>, <a>getLabelsResponse_labels</a>
--   - An array of labels.
--   
--   <a>$sel:httpStatus:GetLabelsResponse'</a>,
--   <a>getLabelsResponse_httpStatus</a> - The response's http status code.
newGetLabelsResponse :: Int -> GetLabelsResponse

-- | <i>See:</i> <a>newGetModelVersion</a> smart constructor.
data GetModelVersion
GetModelVersion' :: Text -> ModelTypeEnum -> Text -> GetModelVersion

-- | Create a value of <a>GetModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModelVersion'</a>, <a>getModelVersion_modelId</a> -
--   The model ID.
--   
--   <a>$sel:modelType:GetModelVersion'</a>,
--   <a>getModelVersion_modelType</a> - The model type.
--   
--   <a>$sel:modelVersionNumber:GetModelVersion'</a>,
--   <a>getModelVersion_modelVersionNumber</a> - The model version number.
newGetModelVersion :: Text -> ModelTypeEnum -> Text -> GetModelVersion

-- | <i>See:</i> <a>newGetModelVersionResponse</a> smart constructor.
data GetModelVersionResponse
GetModelVersionResponse' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe TrainingDataSourceEnum -> Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe Text -> Maybe TrainingDataSchema -> Int -> GetModelVersionResponse

-- | Create a value of <a>GetModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_status</a> - The model version status.
--   
--   Possible values are:
--   
--   <ul>
--   <li><pre>TRAINING_IN_PROGRESS</pre></li>
--   <li><pre>TRAINING_COMPLETE</pre></li>
--   <li><pre>ACTIVATE_REQUESTED</pre></li>
--   <li><pre>ACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>ACTIVE</pre></li>
--   <li><pre>INACTIVATE_REQUESTED</pre></li>
--   <li><pre>INACTIVATE_IN_PROGRESS</pre></li>
--   <li><pre>INACTIVE</pre></li>
--   <li><pre>ERROR</pre></li>
--   </ul>
--   
--   <a>$sel:modelType:GetModelVersion'</a>,
--   <a>getModelVersionResponse_modelType</a> - The model type.
--   
--   <a>$sel:modelId:GetModelVersion'</a>,
--   <a>getModelVersionResponse_modelId</a> - The model ID.
--   
--   <a>$sel:arn:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_arn</a> - The model version ARN.
--   
--   <a>$sel:trainingDataSource:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_trainingDataSource</a> - The training data
--   source.
--   
--   <a>$sel:externalEventsDetail:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_externalEventsDetail</a> - The details of
--   the external events data used for training the model version. This
--   will be populated if the <tt>trainingDataSource</tt> is
--   <tt>EXTERNAL_EVENTS</tt>
--   
--   <a>$sel:ingestedEventsDetail:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_ingestedEventsDetail</a> - The details of
--   the ingested events data used for training the model version. This
--   will be populated if the <tt>trainingDataSource</tt> is
--   <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:modelVersionNumber:GetModelVersion'</a>,
--   <a>getModelVersionResponse_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:trainingDataSchema:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_trainingDataSchema</a> - The training data
--   schema.
--   
--   <a>$sel:httpStatus:GetModelVersionResponse'</a>,
--   <a>getModelVersionResponse_httpStatus</a> - The response's http status
--   code.
newGetModelVersionResponse :: Int -> GetModelVersionResponse

-- | <i>See:</i> <a>newPutExternalModel</a> smart constructor.
data PutExternalModel
PutExternalModel' :: Maybe [Tag] -> Text -> ModelSource -> Text -> ModelInputConfiguration -> ModelOutputConfiguration -> ModelEndpointStatus -> PutExternalModel

-- | Create a value of <a>PutExternalModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutExternalModel'</a>, <a>putExternalModel_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:modelEndpoint:PutExternalModel'</a>,
--   <a>putExternalModel_modelEndpoint</a> - The model endpoints name.
--   
--   <a>$sel:modelSource:PutExternalModel'</a>,
--   <a>putExternalModel_modelSource</a> - The source of the model.
--   
--   <a>$sel:invokeModelEndpointRoleArn:PutExternalModel'</a>,
--   <a>putExternalModel_invokeModelEndpointRoleArn</a> - The IAM role used
--   to invoke the model endpoint.
--   
--   <a>$sel:inputConfiguration:PutExternalModel'</a>,
--   <a>putExternalModel_inputConfiguration</a> - The model endpoint input
--   configuration.
--   
--   <a>$sel:outputConfiguration:PutExternalModel'</a>,
--   <a>putExternalModel_outputConfiguration</a> - The model endpoint
--   output configuration.
--   
--   <a>$sel:modelEndpointStatus:PutExternalModel'</a>,
--   <a>putExternalModel_modelEndpointStatus</a> - The model endpoint’s
--   status in Amazon Fraud Detector.
newPutExternalModel :: Text -> ModelSource -> Text -> ModelInputConfiguration -> ModelOutputConfiguration -> ModelEndpointStatus -> PutExternalModel

-- | <i>See:</i> <a>newPutExternalModelResponse</a> smart constructor.
data PutExternalModelResponse
PutExternalModelResponse' :: Int -> PutExternalModelResponse

-- | Create a value of <a>PutExternalModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutExternalModelResponse'</a>,
--   <a>putExternalModelResponse_httpStatus</a> - The response's http
--   status code.
newPutExternalModelResponse :: Int -> PutExternalModelResponse

-- | <i>See:</i> <a>newDeleteExternalModel</a> smart constructor.
data DeleteExternalModel
DeleteExternalModel' :: Text -> DeleteExternalModel

-- | Create a value of <a>DeleteExternalModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:DeleteExternalModel'</a>,
--   <a>deleteExternalModel_modelEndpoint</a> - The endpoint of the Amazon
--   Sagemaker model to delete.
newDeleteExternalModel :: Text -> DeleteExternalModel

-- | <i>See:</i> <a>newDeleteExternalModelResponse</a> smart constructor.
data DeleteExternalModelResponse
DeleteExternalModelResponse' :: Int -> DeleteExternalModelResponse

-- | Create a value of <a>DeleteExternalModelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteExternalModelResponse'</a>,
--   <a>deleteExternalModelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteExternalModelResponse :: Int -> DeleteExternalModelResponse

-- | <i>See:</i> <a>newGetEntityTypes</a> smart constructor.
data GetEntityTypes
GetEntityTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetEntityTypes

-- | Create a value of <a>GetEntityTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEntityTypes'</a>, <a>getEntityTypes_nextToken</a>
--   - The next token for the subsequent request.
--   
--   <a>$sel:name:GetEntityTypes'</a>, <a>getEntityTypes_name</a> - The
--   name.
--   
--   <a>$sel:maxResults:GetEntityTypes'</a>,
--   <a>getEntityTypes_maxResults</a> - The maximum number of objects to
--   return for the request.
newGetEntityTypes :: GetEntityTypes

-- | <i>See:</i> <a>newGetEntityTypesResponse</a> smart constructor.
data GetEntityTypesResponse
GetEntityTypesResponse' :: Maybe [EntityType] -> Maybe Text -> Int -> GetEntityTypesResponse

-- | Create a value of <a>GetEntityTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityTypes:GetEntityTypesResponse'</a>,
--   <a>getEntityTypesResponse_entityTypes</a> - An array of entity types.
--   
--   <a>$sel:nextToken:GetEntityTypes'</a>,
--   <a>getEntityTypesResponse_nextToken</a> - The next page token.
--   
--   <a>$sel:httpStatus:GetEntityTypesResponse'</a>,
--   <a>getEntityTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetEntityTypesResponse :: Int -> GetEntityTypesResponse

-- | <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> ModelTypeEnum -> DeleteModel

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:DeleteModel'</a>, <a>deleteModel_modelId</a> - The
--   model ID of the model to delete.
--   
--   <a>$sel:modelType:DeleteModel'</a>, <a>deleteModel_modelType</a> - The
--   model type of the model to delete.
newDeleteModel :: Text -> ModelTypeEnum -> DeleteModel

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: Int -> DeleteModelResponse

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteModelResponse'</a>,
--   <a>deleteModelResponse_httpStatus</a> - The response's http status
--   code.
newDeleteModelResponse :: Int -> DeleteModelResponse

-- | <i>See:</i> <a>newUpdateModel</a> smart constructor.
data UpdateModel
UpdateModel' :: Maybe Text -> Text -> ModelTypeEnum -> UpdateModel

-- | Create a value of <a>UpdateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateModel'</a>, <a>updateModel_description</a> -
--   The new model description.
--   
--   <a>$sel:modelId:UpdateModel'</a>, <a>updateModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:modelType:UpdateModel'</a>, <a>updateModel_modelType</a> - The
--   model type.
newUpdateModel :: Text -> ModelTypeEnum -> UpdateModel

-- | <i>See:</i> <a>newUpdateModelResponse</a> smart constructor.
data UpdateModelResponse
UpdateModelResponse' :: Int -> UpdateModelResponse

-- | Create a value of <a>UpdateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateModelResponse'</a>,
--   <a>updateModelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateModelResponse :: Int -> UpdateModelResponse

-- | <i>See:</i> <a>newCreateModelVersion</a> smart constructor.
data CreateModelVersion
CreateModelVersion' :: Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe [Tag] -> Text -> ModelTypeEnum -> TrainingDataSourceEnum -> TrainingDataSchema -> CreateModelVersion

-- | Create a value of <a>CreateModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalEventsDetail:CreateModelVersion'</a>,
--   <a>createModelVersion_externalEventsDetail</a> - Details of the
--   external events data used for model version training. Required if
--   <tt>trainingDataSource</tt> is <tt>EXTERNAL_EVENTS</tt>.
--   
--   <a>$sel:ingestedEventsDetail:CreateModelVersion'</a>,
--   <a>createModelVersion_ingestedEventsDetail</a> - Details of the
--   ingested events data used for model version training. Required if
--   <tt>trainingDataSource</tt> is <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:tags:CreateModelVersion'</a>, <a>createModelVersion_tags</a> -
--   A collection of key and value pairs.
--   
--   <a>$sel:modelId:CreateModelVersion'</a>,
--   <a>createModelVersion_modelId</a> - The model ID.
--   
--   <a>$sel:modelType:CreateModelVersion'</a>,
--   <a>createModelVersion_modelType</a> - The model type.
--   
--   <a>$sel:trainingDataSource:CreateModelVersion'</a>,
--   <a>createModelVersion_trainingDataSource</a> - The training data
--   source location in Amazon S3.
--   
--   <a>$sel:trainingDataSchema:CreateModelVersion'</a>,
--   <a>createModelVersion_trainingDataSchema</a> - The training data
--   schema.
newCreateModelVersion :: Text -> ModelTypeEnum -> TrainingDataSourceEnum -> TrainingDataSchema -> CreateModelVersion

-- | <i>See:</i> <a>newCreateModelVersionResponse</a> smart constructor.
data CreateModelVersionResponse
CreateModelVersionResponse' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Int -> CreateModelVersionResponse

-- | Create a value of <a>CreateModelVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateModelVersionResponse'</a>,
--   <a>createModelVersionResponse_status</a> - The model version status.
--   
--   <a>$sel:modelType:CreateModelVersion'</a>,
--   <a>createModelVersionResponse_modelType</a> - The model type.
--   
--   <a>$sel:modelId:CreateModelVersion'</a>,
--   <a>createModelVersionResponse_modelId</a> - The model ID.
--   
--   <a>$sel:modelVersionNumber:CreateModelVersionResponse'</a>,
--   <a>createModelVersionResponse_modelVersionNumber</a> - The model
--   version number of the model version created.
--   
--   <a>$sel:httpStatus:CreateModelVersionResponse'</a>,
--   <a>createModelVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateModelVersionResponse :: Int -> CreateModelVersionResponse

-- | <i>See:</i> <a>newDeleteEventsByEventType</a> smart constructor.
data DeleteEventsByEventType
DeleteEventsByEventType' :: Text -> DeleteEventsByEventType

-- | Create a value of <a>DeleteEventsByEventType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:DeleteEventsByEventType'</a>,
--   <a>deleteEventsByEventType_eventTypeName</a> - The name of the event
--   type.
newDeleteEventsByEventType :: Text -> DeleteEventsByEventType

-- | <i>See:</i> <a>newDeleteEventsByEventTypeResponse</a> smart
--   constructor.
data DeleteEventsByEventTypeResponse
DeleteEventsByEventTypeResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteEventsByEventTypeResponse

-- | Create a value of <a>DeleteEventsByEventTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:DeleteEventsByEventType'</a>,
--   <a>deleteEventsByEventTypeResponse_eventTypeName</a> - Name of event
--   type for which to delete the events.
--   
--   <a>$sel:eventsDeletionStatus:DeleteEventsByEventTypeResponse'</a>,
--   <a>deleteEventsByEventTypeResponse_eventsDeletionStatus</a> - The
--   status of the delete request.
--   
--   <a>$sel:httpStatus:DeleteEventsByEventTypeResponse'</a>,
--   <a>deleteEventsByEventTypeResponse_httpStatus</a> - The response's
--   http status code.
newDeleteEventsByEventTypeResponse :: Int -> DeleteEventsByEventTypeResponse

-- | <i>See:</i> <a>newPutKMSEncryptionKey</a> smart constructor.
data PutKMSEncryptionKey
PutKMSEncryptionKey' :: Text -> PutKMSEncryptionKey

-- | Create a value of <a>PutKMSEncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionKeyArn:PutKMSEncryptionKey'</a>,
--   <a>putKMSEncryptionKey_kmsEncryptionKeyArn</a> - The KMS encryption
--   key ARN.
newPutKMSEncryptionKey :: Text -> PutKMSEncryptionKey

-- | <i>See:</i> <a>newPutKMSEncryptionKeyResponse</a> smart constructor.
data PutKMSEncryptionKeyResponse
PutKMSEncryptionKeyResponse' :: Int -> PutKMSEncryptionKeyResponse

-- | Create a value of <a>PutKMSEncryptionKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutKMSEncryptionKeyResponse'</a>,
--   <a>putKMSEncryptionKeyResponse_httpStatus</a> - The response's http
--   status code.
newPutKMSEncryptionKeyResponse :: Int -> PutKMSEncryptionKeyResponse

-- | <i>See:</i> <a>newDescribeDetector</a> smart constructor.
data DescribeDetector
DescribeDetector' :: Maybe Text -> Maybe Natural -> Text -> DescribeDetector

-- | Create a value of <a>DescribeDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDetector'</a>,
--   <a>describeDetector_nextToken</a> - The next token from the previous
--   response.
--   
--   <a>$sel:maxResults:DescribeDetector'</a>,
--   <a>describeDetector_maxResults</a> - The maximum number of results to
--   return for the request.
--   
--   <a>$sel:detectorId:DescribeDetector'</a>,
--   <a>describeDetector_detectorId</a> - The detector ID.
newDescribeDetector :: Text -> DescribeDetector

-- | <i>See:</i> <a>newDescribeDetectorResponse</a> smart constructor.
data DescribeDetectorResponse
DescribeDetectorResponse' :: Maybe [DetectorVersionSummary] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeDetectorResponse

-- | Create a value of <a>DescribeDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorVersionSummaries:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_detectorVersionSummaries</a> - The status
--   and description for each detector version.
--   
--   <a>$sel:arn:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_arn</a> - The detector ARN.
--   
--   <a>$sel:nextToken:DescribeDetector'</a>,
--   <a>describeDetectorResponse_nextToken</a> - The next token to be used
--   for subsequent requests.
--   
--   <a>$sel:detectorId:DescribeDetector'</a>,
--   <a>describeDetectorResponse_detectorId</a> - The detector ID.
--   
--   <a>$sel:httpStatus:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDetectorResponse :: Int -> DescribeDetectorResponse

-- | <i>See:</i> <a>newGetOutcomes</a> smart constructor.
data GetOutcomes
GetOutcomes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetOutcomes

-- | Create a value of <a>GetOutcomes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetOutcomes'</a>, <a>getOutcomes_nextToken</a> - The
--   next page token for the request.
--   
--   <a>$sel:name:GetOutcomes'</a>, <a>getOutcomes_name</a> - The name of
--   the outcome or outcomes to get.
--   
--   <a>$sel:maxResults:GetOutcomes'</a>, <a>getOutcomes_maxResults</a> -
--   The maximum number of objects to return for the request.
newGetOutcomes :: GetOutcomes

-- | <i>See:</i> <a>newGetOutcomesResponse</a> smart constructor.
data GetOutcomesResponse
GetOutcomesResponse' :: Maybe [Outcome] -> Maybe Text -> Int -> GetOutcomesResponse

-- | Create a value of <a>GetOutcomesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outcomes:GetOutcomesResponse'</a>,
--   <a>getOutcomesResponse_outcomes</a> - The outcomes.
--   
--   <a>$sel:nextToken:GetOutcomes'</a>,
--   <a>getOutcomesResponse_nextToken</a> - The next page token for
--   subsequent requests.
--   
--   <a>$sel:httpStatus:GetOutcomesResponse'</a>,
--   <a>getOutcomesResponse_httpStatus</a> - The response's http status
--   code.
newGetOutcomesResponse :: Int -> GetOutcomesResponse

-- | <i>See:</i> <a>newGetEventPrediction</a> smart constructor.
data GetEventPrediction
GetEventPrediction' :: Maybe Text -> Maybe (Sensitive (HashMap Text ModelEndpointDataBlob)) -> Text -> Text -> Text -> [Sensitive Entity] -> Text -> HashMap Text (Sensitive Text) -> GetEventPrediction

-- | Create a value of <a>GetEventPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorVersionId:GetEventPrediction'</a>,
--   <a>getEventPrediction_detectorVersionId</a> - The detector version ID.
--   
--   <a>$sel:externalModelEndpointDataBlobs:GetEventPrediction'</a>,
--   <a>getEventPrediction_externalModelEndpointDataBlobs</a> - The Amazon
--   SageMaker model endpoint input data blobs.
--   
--   <a>$sel:detectorId:GetEventPrediction'</a>,
--   <a>getEventPrediction_detectorId</a> - The detector ID.
--   
--   <a>$sel:eventId:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventId</a> - The unique ID used to identify the
--   event.
--   
--   <a>$sel:eventTypeName:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventTypeName</a> - The event type associated
--   with the detector specified for the prediction.
--   
--   <a>$sel:entities:GetEventPrediction'</a>,
--   <a>getEventPrediction_entities</a> - The entity type (associated with
--   the detector's event type) and specific entity ID representing who
--   performed the event. If an entity id is not available, use "UNKNOWN."
--   
--   <a>$sel:eventTimestamp:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventTimestamp</a> - Timestamp that defines when
--   the event under evaluation occurred. The timestamp must be specified
--   using ISO 8601 standard in UTC.
--   
--   <a>$sel:eventVariables:GetEventPrediction'</a>,
--   <a>getEventPrediction_eventVariables</a> - Names of the event type's
--   variables you defined in Amazon Fraud Detector to represent data
--   elements and their corresponding values for the event you are sending
--   for evaluation.
--   
--   You must provide at least one eventVariable
--   
--   To ensure most accurate fraud prediction and to simplify your data
--   preparation, Amazon Fraud Detector will replace all missing variables
--   or values as follows:
--   
--   <b>For Amazon Fraud Detector trained models:</b>
--   
--   If a null value is provided explicitly for a variable or if a variable
--   is missing, model will replace the null value or the missing variable
--   (no variable name in the eventVariables map) with calculated default
--   mean/medians for numeric variables and with special values for
--   categorical variables.
--   
--   <b>For imported SageMaker models:</b>
--   
--   If a null value is provided explicitly for a variable, the model and
--   rules will use “null” as the value. If a variable is not provided (no
--   variable name in the eventVariables map), model and rules will use the
--   default value that is provided for the variable.
newGetEventPrediction :: Text -> Text -> Text -> Text -> GetEventPrediction

-- | <i>See:</i> <a>newGetEventPredictionResponse</a> smart constructor.
data GetEventPredictionResponse
GetEventPredictionResponse' :: Maybe [ModelScores] -> Maybe [ExternalModelOutputs] -> Maybe [RuleResult] -> Int -> GetEventPredictionResponse

-- | Create a value of <a>GetEventPredictionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelScores:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_modelScores</a> - The model scores.
--   Amazon Fraud Detector generates model scores between 0 and 1000, where
--   0 is low fraud risk and 1000 is high fraud risk. Model scores are
--   directly related to the false positive rate (FPR). For example, a
--   score of 600 corresponds to an estimated 10% false positive rate
--   whereas a score of 900 corresponds to an estimated 2% false positive
--   rate.
--   
--   <a>$sel:externalModelOutputs:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_externalModelOutputs</a> - The model
--   scores for Amazon SageMaker models.
--   
--   <a>$sel:ruleResults:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_ruleResults</a> - The results from the
--   rules.
--   
--   <a>$sel:httpStatus:GetEventPredictionResponse'</a>,
--   <a>getEventPredictionResponse_httpStatus</a> - The response's http
--   status code.
newGetEventPredictionResponse :: Int -> GetEventPredictionResponse

-- | <i>See:</i> <a>newDeleteBatchPredictionJob</a> smart constructor.
data DeleteBatchPredictionJob
DeleteBatchPredictionJob' :: Text -> DeleteBatchPredictionJob

-- | Create a value of <a>DeleteBatchPredictionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DeleteBatchPredictionJob'</a>,
--   <a>deleteBatchPredictionJob_jobId</a> - The ID of the batch prediction
--   job to delete.
newDeleteBatchPredictionJob :: Text -> DeleteBatchPredictionJob

-- | <i>See:</i> <a>newDeleteBatchPredictionJobResponse</a> smart
--   constructor.
data DeleteBatchPredictionJobResponse
DeleteBatchPredictionJobResponse' :: Int -> DeleteBatchPredictionJobResponse

-- | Create a value of <a>DeleteBatchPredictionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBatchPredictionJobResponse'</a>,
--   <a>deleteBatchPredictionJobResponse_httpStatus</a> - The response's
--   http status code.
newDeleteBatchPredictionJobResponse :: Int -> DeleteBatchPredictionJobResponse

-- | <i>See:</i> <a>newGetEvent</a> smart constructor.
data GetEvent
GetEvent' :: Text -> Text -> GetEvent

-- | Create a value of <a>GetEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventId:GetEvent'</a>, <a>getEvent_eventId</a> - The ID of the
--   event to retrieve.
--   
--   <a>$sel:eventTypeName:GetEvent'</a>, <a>getEvent_eventTypeName</a> -
--   The event type of the event to retrieve.
newGetEvent :: Text -> Text -> GetEvent

-- | <i>See:</i> <a>newGetEventResponse</a> smart constructor.
data GetEventResponse
GetEventResponse' :: Maybe Event -> Int -> GetEventResponse

-- | Create a value of <a>GetEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:event:GetEventResponse'</a>, <a>getEventResponse_event</a> -
--   The details of the event.
--   
--   <a>$sel:httpStatus:GetEventResponse'</a>,
--   <a>getEventResponse_httpStatus</a> - The response's http status code.
newGetEventResponse :: Int -> GetEventResponse

-- | <i>See:</i> <a>newUpdateRuleMetadata</a> smart constructor.
data UpdateRuleMetadata
UpdateRuleMetadata' :: Rule -> Text -> UpdateRuleMetadata

-- | Create a value of <a>UpdateRuleMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rule:UpdateRuleMetadata'</a>, <a>updateRuleMetadata_rule</a> -
--   The rule to update.
--   
--   <a>$sel:description:UpdateRuleMetadata'</a>,
--   <a>updateRuleMetadata_description</a> - The rule description.
newUpdateRuleMetadata :: Rule -> Text -> UpdateRuleMetadata

-- | <i>See:</i> <a>newUpdateRuleMetadataResponse</a> smart constructor.
data UpdateRuleMetadataResponse
UpdateRuleMetadataResponse' :: Int -> UpdateRuleMetadataResponse

-- | Create a value of <a>UpdateRuleMetadataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRuleMetadataResponse'</a>,
--   <a>updateRuleMetadataResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRuleMetadataResponse :: Int -> UpdateRuleMetadataResponse

-- | <i>See:</i> <a>newPutEntityType</a> smart constructor.
data PutEntityType
PutEntityType' :: Maybe Text -> Maybe [Tag] -> Text -> PutEntityType

-- | Create a value of <a>PutEntityType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutEntityType'</a>,
--   <a>putEntityType_description</a> - The description.
--   
--   <a>$sel:tags:PutEntityType'</a>, <a>putEntityType_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:name:PutEntityType'</a>, <a>putEntityType_name</a> - The name
--   of the entity type.
newPutEntityType :: Text -> PutEntityType

-- | <i>See:</i> <a>newPutEntityTypeResponse</a> smart constructor.
data PutEntityTypeResponse
PutEntityTypeResponse' :: Int -> PutEntityTypeResponse

-- | Create a value of <a>PutEntityTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutEntityTypeResponse'</a>,
--   <a>putEntityTypeResponse_httpStatus</a> - The response's http status
--   code.
newPutEntityTypeResponse :: Int -> PutEntityTypeResponse

-- | <i>See:</i> <a>newCreateBatchPredictionJob</a> smart constructor.
data CreateBatchPredictionJob
CreateBatchPredictionJob' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> Text -> Text -> Text -> Text -> CreateBatchPredictionJob

-- | Create a value of <a>CreateBatchPredictionJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorVersion:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_detectorVersion</a> - The detector
--   version.
--   
--   <a>$sel:tags:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_tags</a> - A collection of key and value
--   pairs.
--   
--   <a>$sel:jobId:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_jobId</a> - The ID of the batch prediction
--   job.
--   
--   <a>$sel:inputPath:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_inputPath</a> - The Amazon S3 location of
--   your training file.
--   
--   <a>$sel:outputPath:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_outputPath</a> - The Amazon S3 location of
--   your output file.
--   
--   <a>$sel:eventTypeName:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_eventTypeName</a> - The name of the event
--   type.
--   
--   <a>$sel:detectorName:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_detectorName</a> - The name of the
--   detector.
--   
--   <a>$sel:iamRoleArn:CreateBatchPredictionJob'</a>,
--   <a>createBatchPredictionJob_iamRoleArn</a> - The ARN of the IAM role
--   to use for this job request.
newCreateBatchPredictionJob :: Text -> Text -> Text -> Text -> Text -> Text -> CreateBatchPredictionJob

-- | <i>See:</i> <a>newCreateBatchPredictionJobResponse</a> smart
--   constructor.
data CreateBatchPredictionJobResponse
CreateBatchPredictionJobResponse' :: Int -> CreateBatchPredictionJobResponse

-- | Create a value of <a>CreateBatchPredictionJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBatchPredictionJobResponse'</a>,
--   <a>createBatchPredictionJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateBatchPredictionJobResponse :: Int -> CreateBatchPredictionJobResponse

-- | <i>See:</i> <a>newDeleteEntityType</a> smart constructor.
data DeleteEntityType
DeleteEntityType' :: Text -> DeleteEntityType

-- | Create a value of <a>DeleteEntityType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteEntityType'</a>, <a>deleteEntityType_name</a> - The
--   name of the entity type to delete.
newDeleteEntityType :: Text -> DeleteEntityType

-- | <i>See:</i> <a>newDeleteEntityTypeResponse</a> smart constructor.
data DeleteEntityTypeResponse
DeleteEntityTypeResponse' :: Int -> DeleteEntityTypeResponse

-- | Create a value of <a>DeleteEntityTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEntityTypeResponse'</a>,
--   <a>deleteEntityTypeResponse_httpStatus</a> - The response's http
--   status code.
newDeleteEntityTypeResponse :: Int -> DeleteEntityTypeResponse

-- | <i>See:</i> <a>newDeleteEventType</a> smart constructor.
data DeleteEventType
DeleteEventType' :: Text -> DeleteEventType

-- | Create a value of <a>DeleteEventType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteEventType'</a>, <a>deleteEventType_name</a> - The
--   name of the event type to delete.
newDeleteEventType :: Text -> DeleteEventType

-- | <i>See:</i> <a>newDeleteEventTypeResponse</a> smart constructor.
data DeleteEventTypeResponse
DeleteEventTypeResponse' :: Int -> DeleteEventTypeResponse

-- | Create a value of <a>DeleteEventTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEventTypeResponse'</a>,
--   <a>deleteEventTypeResponse_httpStatus</a> - The response's http status
--   code.
newDeleteEventTypeResponse :: Int -> DeleteEventTypeResponse

-- | <i>See:</i> <a>newPutEventType</a> smart constructor.
data PutEventType
PutEventType' :: Maybe [Text] -> Maybe EventIngestion -> Maybe Text -> Maybe [Tag] -> Text -> NonEmpty Text -> NonEmpty Text -> PutEventType

-- | Create a value of <a>PutEventType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labels:PutEventType'</a>, <a>putEventType_labels</a> - The
--   event type labels.
--   
--   <a>$sel:eventIngestion:PutEventType'</a>,
--   <a>putEventType_eventIngestion</a> - Specifies if ingenstion is
--   enabled or disabled.
--   
--   <a>$sel:description:PutEventType'</a>, <a>putEventType_description</a>
--   - The description of the event type.
--   
--   <a>$sel:tags:PutEventType'</a>, <a>putEventType_tags</a> - A
--   collection of key and value pairs.
--   
--   <a>$sel:name:PutEventType'</a>, <a>putEventType_name</a> - The name.
--   
--   <a>$sel:eventVariables:PutEventType'</a>,
--   <a>putEventType_eventVariables</a> - The event type variables.
--   
--   <a>$sel:entityTypes:PutEventType'</a>, <a>putEventType_entityTypes</a>
--   - The entity type for the event type. Example entity types: customer,
--   merchant, account.
newPutEventType :: Text -> NonEmpty Text -> NonEmpty Text -> PutEventType

-- | <i>See:</i> <a>newPutEventTypeResponse</a> smart constructor.
data PutEventTypeResponse
PutEventTypeResponse' :: Int -> PutEventTypeResponse

-- | Create a value of <a>PutEventTypeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutEventTypeResponse'</a>,
--   <a>putEventTypeResponse_httpStatus</a> - The response's http status
--   code.
newPutEventTypeResponse :: Int -> PutEventTypeResponse

-- | <i>See:</i> <a>newUpdateDetectorVersionStatus</a> smart constructor.
data UpdateDetectorVersionStatus
UpdateDetectorVersionStatus' :: Text -> Text -> DetectorVersionStatus -> UpdateDetectorVersionStatus

-- | Create a value of <a>UpdateDetectorVersionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:UpdateDetectorVersionStatus'</a>,
--   <a>updateDetectorVersionStatus_detectorId</a> - The detector ID.
--   
--   <a>$sel:detectorVersionId:UpdateDetectorVersionStatus'</a>,
--   <a>updateDetectorVersionStatus_detectorVersionId</a> - The detector
--   version ID.
--   
--   <a>$sel:status:UpdateDetectorVersionStatus'</a>,
--   <a>updateDetectorVersionStatus_status</a> - The new status.
newUpdateDetectorVersionStatus :: Text -> Text -> DetectorVersionStatus -> UpdateDetectorVersionStatus

-- | <i>See:</i> <a>newUpdateDetectorVersionStatusResponse</a> smart
--   constructor.
data UpdateDetectorVersionStatusResponse
UpdateDetectorVersionStatusResponse' :: Int -> UpdateDetectorVersionStatusResponse

-- | Create a value of <a>UpdateDetectorVersionStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDetectorVersionStatusResponse'</a>,
--   <a>updateDetectorVersionStatusResponse_httpStatus</a> - The response's
--   http status code.
newUpdateDetectorVersionStatusResponse :: Int -> UpdateDetectorVersionStatusResponse

-- | <i>See:</i> <a>newCancelBatchImportJob</a> smart constructor.
data CancelBatchImportJob
CancelBatchImportJob' :: Text -> CancelBatchImportJob

-- | Create a value of <a>CancelBatchImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelBatchImportJob'</a>,
--   <a>cancelBatchImportJob_jobId</a> - The ID of an in-progress batch
--   import job to cancel.
--   
--   Amazon Fraud Detector will throw an error if the batch import job is
--   in <tt>FAILED</tt>, <tt>CANCELED</tt>, or <tt>COMPLETED</tt> state.
newCancelBatchImportJob :: Text -> CancelBatchImportJob

-- | <i>See:</i> <a>newCancelBatchImportJobResponse</a> smart constructor.
data CancelBatchImportJobResponse
CancelBatchImportJobResponse' :: Int -> CancelBatchImportJobResponse

-- | Create a value of <a>CancelBatchImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelBatchImportJobResponse'</a>,
--   <a>cancelBatchImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelBatchImportJobResponse :: Int -> CancelBatchImportJobResponse

-- | <i>See:</i> <a>newSendEvent</a> smart constructor.
data SendEvent
SendEvent' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> HashMap Text (Sensitive Text) -> [Sensitive Entity] -> SendEvent

-- | Create a value of <a>SendEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labelTimestamp:SendEvent'</a>, <a>sendEvent_labelTimestamp</a>
--   - The timestamp associated with the label. Required if specifying
--   <tt>assignedLabel</tt>.
--   
--   <a>$sel:assignedLabel:SendEvent'</a>, <a>sendEvent_assignedLabel</a> -
--   The label to associate with the event. Required if specifying
--   <tt>labelTimestamp</tt>.
--   
--   <a>$sel:eventId:SendEvent'</a>, <a>sendEvent_eventId</a> - The event
--   ID to upload.
--   
--   <a>$sel:eventTypeName:SendEvent'</a>, <a>sendEvent_eventTypeName</a> -
--   The event type name of the event.
--   
--   <a>$sel:eventTimestamp:SendEvent'</a>, <a>sendEvent_eventTimestamp</a>
--   - The timestamp that defines when the event under evaluation occurred.
--   The timestamp must be specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:eventVariables:SendEvent'</a>, <a>sendEvent_eventVariables</a>
--   - Names of the event type's variables you defined in Amazon Fraud
--   Detector to represent data elements and their corresponding values for
--   the event you are sending for evaluation.
--   
--   <a>$sel:entities:SendEvent'</a>, <a>sendEvent_entities</a> - An array
--   of entities.
newSendEvent :: Text -> Text -> Text -> SendEvent

-- | <i>See:</i> <a>newSendEventResponse</a> smart constructor.
data SendEventResponse
SendEventResponse' :: Int -> SendEventResponse

-- | Create a value of <a>SendEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendEventResponse'</a>,
--   <a>sendEventResponse_httpStatus</a> - The response's http status code.
newSendEventResponse :: Int -> SendEventResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The resource ARN.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newGetKMSEncryptionKey</a> smart constructor.
data GetKMSEncryptionKey
GetKMSEncryptionKey' :: GetKMSEncryptionKey

-- | Create a value of <a>GetKMSEncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetKMSEncryptionKey :: GetKMSEncryptionKey

-- | <i>See:</i> <a>newGetKMSEncryptionKeyResponse</a> smart constructor.
data GetKMSEncryptionKeyResponse
GetKMSEncryptionKeyResponse' :: Maybe KMSKey -> Int -> GetKMSEncryptionKeyResponse

-- | Create a value of <a>GetKMSEncryptionKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKey:GetKMSEncryptionKeyResponse'</a>,
--   <a>getKMSEncryptionKeyResponse_kmsKey</a> - The KMS encryption key.
--   
--   <a>$sel:httpStatus:GetKMSEncryptionKeyResponse'</a>,
--   <a>getKMSEncryptionKeyResponse_httpStatus</a> - The response's http
--   status code.
newGetKMSEncryptionKeyResponse :: Int -> GetKMSEncryptionKeyResponse

-- | <i>See:</i> <a>newUpdateEventLabel</a> smart constructor.
data UpdateEventLabel
UpdateEventLabel' :: Text -> Text -> Text -> Text -> UpdateEventLabel

-- | Create a value of <a>UpdateEventLabel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventId:UpdateEventLabel'</a>, <a>updateEventLabel_eventId</a>
--   - The ID of the event associated with the label to update.
--   
--   <a>$sel:eventTypeName:UpdateEventLabel'</a>,
--   <a>updateEventLabel_eventTypeName</a> - The event type of the event
--   associated with the label to update.
--   
--   <a>$sel:assignedLabel:UpdateEventLabel'</a>,
--   <a>updateEventLabel_assignedLabel</a> - The new label to assign to the
--   event.
--   
--   <a>$sel:labelTimestamp:UpdateEventLabel'</a>,
--   <a>updateEventLabel_labelTimestamp</a> - The timestamp associated with
--   the label. The timestamp must be specified using ISO 8601 standard in
--   UTC.
newUpdateEventLabel :: Text -> Text -> Text -> Text -> UpdateEventLabel

-- | <i>See:</i> <a>newUpdateEventLabelResponse</a> smart constructor.
data UpdateEventLabelResponse
UpdateEventLabelResponse' :: Int -> UpdateEventLabelResponse

-- | Create a value of <a>UpdateEventLabelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateEventLabelResponse'</a>,
--   <a>updateEventLabelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateEventLabelResponse :: Int -> UpdateEventLabelResponse

-- | <i>See:</i> <a>newGetBatchImportJobs</a> smart constructor.
data GetBatchImportJobs
GetBatchImportJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetBatchImportJobs

-- | Create a value of <a>GetBatchImportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetBatchImportJobs'</a>, <a>getBatchImportJobs_jobId</a>
--   - The ID of the batch import job to get.
--   
--   <a>$sel:nextToken:GetBatchImportJobs'</a>,
--   <a>getBatchImportJobs_nextToken</a> - The next token from the previous
--   request.
--   
--   <a>$sel:maxResults:GetBatchImportJobs'</a>,
--   <a>getBatchImportJobs_maxResults</a> - The maximum number of objects
--   to return for request.
newGetBatchImportJobs :: GetBatchImportJobs

-- | <i>See:</i> <a>newGetBatchImportJobsResponse</a> smart constructor.
data GetBatchImportJobsResponse
GetBatchImportJobsResponse' :: Maybe Text -> Maybe [BatchImport] -> Int -> GetBatchImportJobsResponse

-- | Create a value of <a>GetBatchImportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBatchImportJobs'</a>,
--   <a>getBatchImportJobsResponse_nextToken</a> - The next token for the
--   subsequent resquest.
--   
--   <a>$sel:batchImports:GetBatchImportJobsResponse'</a>,
--   <a>getBatchImportJobsResponse_batchImports</a> - An array containing
--   the details of each batch import job.
--   
--   <a>$sel:httpStatus:GetBatchImportJobsResponse'</a>,
--   <a>getBatchImportJobsResponse_httpStatus</a> - The response's http
--   status code.
newGetBatchImportJobsResponse :: Int -> GetBatchImportJobsResponse

-- | <i>See:</i> <a>newGetDeleteEventsByEventTypeStatus</a> smart
--   constructor.
data GetDeleteEventsByEventTypeStatus
GetDeleteEventsByEventTypeStatus' :: Text -> GetDeleteEventsByEventTypeStatus

-- | Create a value of <a>GetDeleteEventsByEventTypeStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:GetDeleteEventsByEventTypeStatus'</a>,
--   <a>getDeleteEventsByEventTypeStatus_eventTypeName</a> - Name of event
--   type for which to get the deletion status.
newGetDeleteEventsByEventTypeStatus :: Text -> GetDeleteEventsByEventTypeStatus

-- | <i>See:</i> <a>newGetDeleteEventsByEventTypeStatusResponse</a> smart
--   constructor.
data GetDeleteEventsByEventTypeStatusResponse
GetDeleteEventsByEventTypeStatusResponse' :: Maybe Text -> Maybe AsyncJobStatus -> Int -> GetDeleteEventsByEventTypeStatusResponse

-- | Create a value of <a>GetDeleteEventsByEventTypeStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypeName:GetDeleteEventsByEventTypeStatus'</a>,
--   <a>getDeleteEventsByEventTypeStatusResponse_eventTypeName</a> - The
--   event type name.
--   
--   
--   <a>$sel:eventsDeletionStatus:GetDeleteEventsByEventTypeStatusResponse'</a>,
--   <a>getDeleteEventsByEventTypeStatusResponse_eventsDeletionStatus</a> -
--   The deletion status.
--   
--   <a>$sel:httpStatus:GetDeleteEventsByEventTypeStatusResponse'</a>,
--   <a>getDeleteEventsByEventTypeStatusResponse_httpStatus</a> - The
--   response's http status code.
newGetDeleteEventsByEventTypeStatusResponse :: Int -> GetDeleteEventsByEventTypeStatusResponse

-- | <i>See:</i> <a>newDeleteOutcome</a> smart constructor.
data DeleteOutcome
DeleteOutcome' :: Text -> DeleteOutcome

-- | Create a value of <a>DeleteOutcome</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteOutcome'</a>, <a>deleteOutcome_name</a> - The name
--   of the outcome to delete.
newDeleteOutcome :: Text -> DeleteOutcome

-- | <i>See:</i> <a>newDeleteOutcomeResponse</a> smart constructor.
data DeleteOutcomeResponse
DeleteOutcomeResponse' :: Int -> DeleteOutcomeResponse

-- | Create a value of <a>DeleteOutcomeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteOutcomeResponse'</a>,
--   <a>deleteOutcomeResponse_httpStatus</a> - The response's http status
--   code.
newDeleteOutcomeResponse :: Int -> DeleteOutcomeResponse

-- | <i>See:</i> <a>newGetRules</a> smart constructor.
data GetRules
GetRules' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetRules

-- | Create a value of <a>GetRules</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleVersion:GetRules'</a>, <a>getRules_ruleVersion</a> - The
--   rule version.
--   
--   <a>$sel:ruleId:GetRules'</a>, <a>getRules_ruleId</a> - The rule ID.
--   
--   <a>$sel:nextToken:GetRules'</a>, <a>getRules_nextToken</a> - The next
--   page token.
--   
--   <a>$sel:maxResults:GetRules'</a>, <a>getRules_maxResults</a> - The
--   maximum number of rules to return for the request.
--   
--   <a>$sel:detectorId:GetRules'</a>, <a>getRules_detectorId</a> - The
--   detector ID.
newGetRules :: Text -> GetRules

-- | <i>See:</i> <a>newGetRulesResponse</a> smart constructor.
data GetRulesResponse
GetRulesResponse' :: Maybe [RuleDetail] -> Maybe Text -> Int -> GetRulesResponse

-- | Create a value of <a>GetRulesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleDetails:GetRulesResponse'</a>,
--   <a>getRulesResponse_ruleDetails</a> - The details of the requested
--   rule.
--   
--   <a>$sel:nextToken:GetRules'</a>, <a>getRulesResponse_nextToken</a> -
--   The next page token to be used in subsequent requests.
--   
--   <a>$sel:httpStatus:GetRulesResponse'</a>,
--   <a>getRulesResponse_httpStatus</a> - The response's http status code.
newGetRulesResponse :: Int -> GetRulesResponse

-- | <i>See:</i> <a>newGetVariables</a> smart constructor.
data GetVariables
GetVariables' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetVariables

-- | Create a value of <a>GetVariables</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetVariables'</a>, <a>getVariables_nextToken</a> -
--   The next page token of the get variable request.
--   
--   <a>$sel:name:GetVariables'</a>, <a>getVariables_name</a> - The name of
--   the variable.
--   
--   <a>$sel:maxResults:GetVariables'</a>, <a>getVariables_maxResults</a> -
--   The max size per page determined for the get variable request.
newGetVariables :: GetVariables

-- | <i>See:</i> <a>newGetVariablesResponse</a> smart constructor.
data GetVariablesResponse
GetVariablesResponse' :: Maybe [Variable] -> Maybe Text -> Int -> GetVariablesResponse

-- | Create a value of <a>GetVariablesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:GetVariablesResponse'</a>,
--   <a>getVariablesResponse_variables</a> - The names of the variables
--   returned.
--   
--   <a>$sel:nextToken:GetVariables'</a>,
--   <a>getVariablesResponse_nextToken</a> - The next page token to be used
--   in subsequent requests.
--   
--   <a>$sel:httpStatus:GetVariablesResponse'</a>,
--   <a>getVariablesResponse_httpStatus</a> - The response's http status
--   code.
newGetVariablesResponse :: Int -> GetVariablesResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the resource from which
--   to remove the tag.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   resource ARN.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newPutDetector</a> smart constructor.
data PutDetector
PutDetector' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> PutDetector

-- | Create a value of <a>PutDetector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutDetector'</a>, <a>putDetector_description</a> -
--   The description of the detector.
--   
--   <a>$sel:tags:PutDetector'</a>, <a>putDetector_tags</a> - A collection
--   of key and value pairs.
--   
--   <a>$sel:detectorId:PutDetector'</a>, <a>putDetector_detectorId</a> -
--   The detector ID.
--   
--   <a>$sel:eventTypeName:PutDetector'</a>,
--   <a>putDetector_eventTypeName</a> - The name of the event type.
newPutDetector :: Text -> Text -> PutDetector

-- | <i>See:</i> <a>newPutDetectorResponse</a> smart constructor.
data PutDetectorResponse
PutDetectorResponse' :: Int -> PutDetectorResponse

-- | Create a value of <a>PutDetectorResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutDetectorResponse'</a>,
--   <a>putDetectorResponse_httpStatus</a> - The response's http status
--   code.
newPutDetectorResponse :: Int -> PutDetectorResponse

-- | <i>See:</i> <a>newPutOutcome</a> smart constructor.
data PutOutcome
PutOutcome' :: Maybe Text -> Maybe [Tag] -> Text -> PutOutcome

-- | Create a value of <a>PutOutcome</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PutOutcome'</a>, <a>putOutcome_description</a> -
--   The outcome description.
--   
--   <a>$sel:tags:PutOutcome'</a>, <a>putOutcome_tags</a> - A collection of
--   key and value pairs.
--   
--   <a>$sel:name:PutOutcome'</a>, <a>putOutcome_name</a> - The name of the
--   outcome.
newPutOutcome :: Text -> PutOutcome

-- | <i>See:</i> <a>newPutOutcomeResponse</a> smart constructor.
data PutOutcomeResponse
PutOutcomeResponse' :: Int -> PutOutcomeResponse

-- | Create a value of <a>PutOutcomeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutOutcomeResponse'</a>,
--   <a>putOutcomeResponse_httpStatus</a> - The response's http status
--   code.
newPutOutcomeResponse :: Int -> PutOutcomeResponse

-- | <i>See:</i> <a>newDeleteDetector</a> smart constructor.
data DeleteDetector
DeleteDetector' :: Text -> DeleteDetector

-- | Create a value of <a>DeleteDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:DeleteDetector'</a>,
--   <a>deleteDetector_detectorId</a> - The ID of the detector to delete.
newDeleteDetector :: Text -> DeleteDetector

-- | <i>See:</i> <a>newDeleteDetectorResponse</a> smart constructor.
data DeleteDetectorResponse
DeleteDetectorResponse' :: Int -> DeleteDetectorResponse

-- | Create a value of <a>DeleteDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDetectorResponse'</a>,
--   <a>deleteDetectorResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDetectorResponse :: Int -> DeleteDetectorResponse

-- | <i>See:</i> <a>newDescribeModelVersions</a> smart constructor.
data DescribeModelVersions
DescribeModelVersions' :: Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeModelVersions

-- | Create a value of <a>DescribeModelVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelType:DescribeModelVersions'</a>,
--   <a>describeModelVersions_modelType</a> - The model type.
--   
--   <a>$sel:modelId:DescribeModelVersions'</a>,
--   <a>describeModelVersions_modelId</a> - The model ID.
--   
--   <a>$sel:nextToken:DescribeModelVersions'</a>,
--   <a>describeModelVersions_nextToken</a> - The next token from the
--   previous results.
--   
--   <a>$sel:modelVersionNumber:DescribeModelVersions'</a>,
--   <a>describeModelVersions_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:maxResults:DescribeModelVersions'</a>,
--   <a>describeModelVersions_maxResults</a> - The maximum number of
--   results to return.
newDescribeModelVersions :: DescribeModelVersions

-- | <i>See:</i> <a>newDescribeModelVersionsResponse</a> smart constructor.
data DescribeModelVersionsResponse
DescribeModelVersionsResponse' :: Maybe Text -> Maybe [ModelVersionDetail] -> Int -> DescribeModelVersionsResponse

-- | Create a value of <a>DescribeModelVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeModelVersions'</a>,
--   <a>describeModelVersionsResponse_nextToken</a> - The next token.
--   
--   <a>$sel:modelVersionDetails:DescribeModelVersionsResponse'</a>,
--   <a>describeModelVersionsResponse_modelVersionDetails</a> - The model
--   version details.
--   
--   <a>$sel:httpStatus:DescribeModelVersionsResponse'</a>,
--   <a>describeModelVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeModelVersionsResponse :: Int -> DescribeModelVersionsResponse

-- | <i>See:</i> <a>newBatchCreateVariable</a> smart constructor.
data BatchCreateVariable
BatchCreateVariable' :: Maybe [Tag] -> NonEmpty VariableEntry -> BatchCreateVariable

-- | Create a value of <a>BatchCreateVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:BatchCreateVariable'</a>, <a>batchCreateVariable_tags</a>
--   - A collection of key and value pairs.
--   
--   <a>$sel:variableEntries:BatchCreateVariable'</a>,
--   <a>batchCreateVariable_variableEntries</a> - The list of variables for
--   the batch create variable request.
newBatchCreateVariable :: NonEmpty VariableEntry -> BatchCreateVariable

-- | <i>See:</i> <a>newBatchCreateVariableResponse</a> smart constructor.
data BatchCreateVariableResponse
BatchCreateVariableResponse' :: Maybe [BatchCreateVariableError] -> Int -> BatchCreateVariableResponse

-- | Create a value of <a>BatchCreateVariableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchCreateVariableResponse'</a>,
--   <a>batchCreateVariableResponse_errors</a> - Provides the errors for
--   the <tt>BatchCreateVariable</tt> request.
--   
--   <a>$sel:httpStatus:BatchCreateVariableResponse'</a>,
--   <a>batchCreateVariableResponse_httpStatus</a> - The response's http
--   status code.
newBatchCreateVariableResponse :: Int -> BatchCreateVariableResponse

-- | <i>See:</i> <a>newGetDetectorVersion</a> smart constructor.
data GetDetectorVersion
GetDetectorVersion' :: Text -> Text -> GetDetectorVersion

-- | Create a value of <a>GetDetectorVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:GetDetectorVersion'</a>,
--   <a>getDetectorVersion_detectorId</a> - The detector ID.
--   
--   <a>$sel:detectorVersionId:GetDetectorVersion'</a>,
--   <a>getDetectorVersion_detectorVersionId</a> - The detector version ID.
newGetDetectorVersion :: Text -> Text -> GetDetectorVersion

-- | <i>See:</i> <a>newGetDetectorVersionResponse</a> smart constructor.
data GetDetectorVersionResponse
GetDetectorVersionResponse' :: Maybe DetectorVersionStatus -> Maybe RuleExecutionMode -> Maybe Text -> Maybe Text -> Maybe [Rule] -> Maybe Text -> Maybe Text -> Maybe [ModelVersion] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> GetDetectorVersionResponse

-- | Create a value of <a>GetDetectorVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_status</a> - The status of the detector
--   version.
--   
--   <a>$sel:ruleExecutionMode:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_ruleExecutionMode</a> - The execution
--   mode of the rule in the dectector
--   
--   <tt>FIRST_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   <tt>ALL_MATCHED</tt> indicates that Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
--   
--   <a>$sel:lastUpdatedTime:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_lastUpdatedTime</a> - The timestamp when
--   the detector version was last updated.
--   
--   <a>$sel:arn:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_arn</a> - The detector version ARN.
--   
--   <a>$sel:rules:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_rules</a> - The rules included in the
--   detector version.
--   
--   <a>$sel:detectorVersionId:GetDetectorVersion'</a>,
--   <a>getDetectorVersionResponse_detectorVersionId</a> - The detector
--   version ID.
--   
--   <a>$sel:createdTime:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_createdTime</a> - The timestamp when the
--   detector version was created.
--   
--   <a>$sel:modelVersions:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_modelVersions</a> - The model versions
--   included in the detector version.
--   
--   <a>$sel:detectorId:GetDetectorVersion'</a>,
--   <a>getDetectorVersionResponse_detectorId</a> - The detector ID.
--   
--   <a>$sel:externalModelEndpoints:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_externalModelEndpoints</a> - The Amazon
--   SageMaker model endpoints included in the detector version.
--   
--   <a>$sel:description:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_description</a> - The detector version
--   description.
--   
--   <a>$sel:httpStatus:GetDetectorVersionResponse'</a>,
--   <a>getDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newGetDetectorVersionResponse :: Int -> GetDetectorVersionResponse

-- | <i>See:</i> <a>newGetEventTypes</a> smart constructor.
data GetEventTypes
GetEventTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetEventTypes

-- | Create a value of <a>GetEventTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEventTypes'</a>, <a>getEventTypes_nextToken</a> -
--   The next token for the subsequent request.
--   
--   <a>$sel:name:GetEventTypes'</a>, <a>getEventTypes_name</a> - The name.
--   
--   <a>$sel:maxResults:GetEventTypes'</a>, <a>getEventTypes_maxResults</a>
--   - The maximum number of objects to return for the request.
newGetEventTypes :: GetEventTypes

-- | <i>See:</i> <a>newGetEventTypesResponse</a> smart constructor.
data GetEventTypesResponse
GetEventTypesResponse' :: Maybe [Sensitive EventType] -> Maybe Text -> Int -> GetEventTypesResponse

-- | Create a value of <a>GetEventTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTypes:GetEventTypesResponse'</a>,
--   <a>getEventTypesResponse_eventTypes</a> - An array of event types.
--   
--   <a>$sel:nextToken:GetEventTypes'</a>,
--   <a>getEventTypesResponse_nextToken</a> - The next page token.
--   
--   <a>$sel:httpStatus:GetEventTypesResponse'</a>,
--   <a>getEventTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetEventTypesResponse :: Int -> GetEventTypesResponse

-- | <i>See:</i> <a>newDeleteDetectorVersion</a> smart constructor.
data DeleteDetectorVersion
DeleteDetectorVersion' :: Text -> Text -> DeleteDetectorVersion

-- | Create a value of <a>DeleteDetectorVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:DeleteDetectorVersion'</a>,
--   <a>deleteDetectorVersion_detectorId</a> - The ID of the parent
--   detector for the detector version to delete.
--   
--   <a>$sel:detectorVersionId:DeleteDetectorVersion'</a>,
--   <a>deleteDetectorVersion_detectorVersionId</a> - The ID of the
--   detector version to delete.
newDeleteDetectorVersion :: Text -> Text -> DeleteDetectorVersion

-- | <i>See:</i> <a>newDeleteDetectorVersionResponse</a> smart constructor.
data DeleteDetectorVersionResponse
DeleteDetectorVersionResponse' :: Int -> DeleteDetectorVersionResponse

-- | Create a value of <a>DeleteDetectorVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDetectorVersionResponse'</a>,
--   <a>deleteDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDetectorVersionResponse :: Int -> DeleteDetectorVersionResponse

-- | <i>See:</i> <a>newUpdateDetectorVersion</a> smart constructor.
data UpdateDetectorVersion
UpdateDetectorVersion' :: Maybe RuleExecutionMode -> Maybe [ModelVersion] -> Maybe Text -> Text -> Text -> [Text] -> [Rule] -> UpdateDetectorVersion

-- | Create a value of <a>UpdateDetectorVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleExecutionMode:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_ruleExecutionMode</a> - The rule execution
--   mode to add to the detector.
--   
--   If you specify <tt>FIRST_MATCHED</tt>, Amazon Fraud Detector evaluates
--   rules sequentially, first to last, stopping at the first matched rule.
--   Amazon Fraud dectector then provides the outcomes for that single
--   rule.
--   
--   If you specifiy <tt>ALL_MATCHED</tt>, Amazon Fraud Detector evaluates
--   all rules and returns the outcomes for all matched rules. You can
--   define and edit the rule mode at the detector version level, when it
--   is in draft status.
--   
--   The default behavior is <tt>FIRST_MATCHED</tt>.
--   
--   <a>$sel:modelVersions:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_modelVersions</a> - The model versions to
--   include in the detector version.
--   
--   <a>$sel:description:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_description</a> - The detector version
--   description.
--   
--   <a>$sel:detectorId:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_detectorId</a> - The parent detector ID for
--   the detector version you want to update.
--   
--   <a>$sel:detectorVersionId:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_detectorVersionId</a> - The detector version
--   ID.
--   
--   <a>$sel:externalModelEndpoints:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_externalModelEndpoints</a> - The Amazon
--   SageMaker model endpoints to include in the detector version.
--   
--   <a>$sel:rules:UpdateDetectorVersion'</a>,
--   <a>updateDetectorVersion_rules</a> - The rules to include in the
--   detector version.
newUpdateDetectorVersion :: Text -> Text -> UpdateDetectorVersion

-- | <i>See:</i> <a>newUpdateDetectorVersionResponse</a> smart constructor.
data UpdateDetectorVersionResponse
UpdateDetectorVersionResponse' :: Int -> UpdateDetectorVersionResponse

-- | Create a value of <a>UpdateDetectorVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDetectorVersionResponse'</a>,
--   <a>updateDetectorVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDetectorVersionResponse :: Int -> UpdateDetectorVersionResponse
newtype AsyncJobStatus
AsyncJobStatus' :: Text -> AsyncJobStatus
[fromAsyncJobStatus] :: AsyncJobStatus -> Text
pattern AsyncJobStatus_CANCELED :: AsyncJobStatus
pattern AsyncJobStatus_CANCEL_IN_PROGRESS :: AsyncJobStatus
pattern AsyncJobStatus_COMPLETE :: AsyncJobStatus
pattern AsyncJobStatus_FAILED :: AsyncJobStatus
pattern AsyncJobStatus_IN_PROGRESS :: AsyncJobStatus
pattern AsyncJobStatus_IN_PROGRESS_INITIALIZING :: AsyncJobStatus
newtype DataSource
DataSource' :: Text -> DataSource
[fromDataSource] :: DataSource -> Text
pattern DataSource_EVENT :: DataSource
pattern DataSource_EXTERNAL_MODEL_SCORE :: DataSource
pattern DataSource_MODEL_SCORE :: DataSource
newtype DataType
DataType' :: Text -> DataType
[fromDataType] :: DataType -> Text
pattern DataType_BOOLEAN :: DataType
pattern DataType_FLOAT :: DataType
pattern DataType_INTEGER :: DataType
pattern DataType_STRING :: DataType
newtype DetectorVersionStatus
DetectorVersionStatus' :: Text -> DetectorVersionStatus
[fromDetectorVersionStatus] :: DetectorVersionStatus -> Text
pattern DetectorVersionStatus_ACTIVE :: DetectorVersionStatus
pattern DetectorVersionStatus_DRAFT :: DetectorVersionStatus
pattern DetectorVersionStatus_INACTIVE :: DetectorVersionStatus
newtype EventIngestion
EventIngestion' :: Text -> EventIngestion
[fromEventIngestion] :: EventIngestion -> Text
pattern EventIngestion_DISABLED :: EventIngestion
pattern EventIngestion_ENABLED :: EventIngestion
newtype Language
Language' :: Text -> Language
[fromLanguage] :: Language -> Text
pattern Language_DETECTORPL :: Language
newtype ModelEndpointStatus
ModelEndpointStatus' :: Text -> ModelEndpointStatus
[fromModelEndpointStatus] :: ModelEndpointStatus -> Text
pattern ModelEndpointStatus_ASSOCIATED :: ModelEndpointStatus
pattern ModelEndpointStatus_DISSOCIATED :: ModelEndpointStatus
newtype ModelInputDataFormat
ModelInputDataFormat' :: Text -> ModelInputDataFormat
[fromModelInputDataFormat] :: ModelInputDataFormat -> Text
pattern ModelInputDataFormat_APPLICATION_JSON :: ModelInputDataFormat
pattern ModelInputDataFormat_TEXT_CSV :: ModelInputDataFormat
newtype ModelOutputDataFormat
ModelOutputDataFormat' :: Text -> ModelOutputDataFormat
[fromModelOutputDataFormat] :: ModelOutputDataFormat -> Text
pattern ModelOutputDataFormat_APPLICATION_JSONLINES :: ModelOutputDataFormat
pattern ModelOutputDataFormat_TEXT_CSV :: ModelOutputDataFormat
newtype ModelSource
ModelSource' :: Text -> ModelSource
[fromModelSource] :: ModelSource -> Text
pattern ModelSource_SAGEMAKER :: ModelSource
newtype ModelTypeEnum
ModelTypeEnum' :: Text -> ModelTypeEnum
[fromModelTypeEnum] :: ModelTypeEnum -> Text
pattern ModelTypeEnum_ONLINE_FRAUD_INSIGHTS :: ModelTypeEnum
pattern ModelTypeEnum_TRANSACTION_FRAUD_INSIGHTS :: ModelTypeEnum
newtype ModelVersionStatus
ModelVersionStatus' :: Text -> ModelVersionStatus
[fromModelVersionStatus] :: ModelVersionStatus -> Text
pattern ModelVersionStatus_ACTIVE :: ModelVersionStatus
pattern ModelVersionStatus_INACTIVE :: ModelVersionStatus
pattern ModelVersionStatus_TRAINING_CANCELLED :: ModelVersionStatus
newtype RuleExecutionMode
RuleExecutionMode' :: Text -> RuleExecutionMode
[fromRuleExecutionMode] :: RuleExecutionMode -> Text
pattern RuleExecutionMode_ALL_MATCHED :: RuleExecutionMode
pattern RuleExecutionMode_FIRST_MATCHED :: RuleExecutionMode
newtype TrainingDataSourceEnum
TrainingDataSourceEnum' :: Text -> TrainingDataSourceEnum
[fromTrainingDataSourceEnum] :: TrainingDataSourceEnum -> Text
pattern TrainingDataSourceEnum_EXTERNAL_EVENTS :: TrainingDataSourceEnum
pattern TrainingDataSourceEnum_INGESTED_EVENTS :: TrainingDataSourceEnum
newtype UnlabeledEventsTreatment
UnlabeledEventsTreatment' :: Text -> UnlabeledEventsTreatment
[fromUnlabeledEventsTreatment] :: UnlabeledEventsTreatment -> Text
pattern UnlabeledEventsTreatment_FRAUD :: UnlabeledEventsTreatment
pattern UnlabeledEventsTreatment_IGNORE :: UnlabeledEventsTreatment
pattern UnlabeledEventsTreatment_LEGIT :: UnlabeledEventsTreatment

-- | Provides the error of the batch create variable API.
--   
--   <i>See:</i> <a>newBatchCreateVariableError</a> smart constructor.
data BatchCreateVariableError
BatchCreateVariableError' :: Maybe Text -> Maybe Int -> Maybe Text -> BatchCreateVariableError

-- | Create a value of <a>BatchCreateVariableError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_name</a> - The name.
--   
--   <a>$sel:code:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_code</a> - The error code.
--   
--   <a>$sel:message:BatchCreateVariableError'</a>,
--   <a>batchCreateVariableError_message</a> - The error message.
newBatchCreateVariableError :: BatchCreateVariableError

-- | Provides the error of the batch get variable API.
--   
--   <i>See:</i> <a>newBatchGetVariableError</a> smart constructor.
data BatchGetVariableError
BatchGetVariableError' :: Maybe Text -> Maybe Int -> Maybe Text -> BatchGetVariableError

-- | Create a value of <a>BatchGetVariableError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_name</a> - The error name.
--   
--   <a>$sel:code:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_code</a> - The error code.
--   
--   <a>$sel:message:BatchGetVariableError'</a>,
--   <a>batchGetVariableError_message</a> - The error message.
newBatchGetVariableError :: BatchGetVariableError

-- | The batch import job details.
--   
--   <i>See:</i> <a>newBatchImport</a> smart constructor.
data BatchImport
BatchImport' :: Maybe Text -> Maybe Text -> Maybe AsyncJobStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> BatchImport

-- | Create a value of <a>BatchImport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchImport'</a>,
--   <a>batchImport_failureReason</a> - The reason batch import job failed.
--   
--   <a>$sel:iamRoleArn:BatchImport'</a>, <a>batchImport_iamRoleArn</a> -
--   The ARN of the IAM role to use for this job request.
--   
--   <a>$sel:status:BatchImport'</a>, <a>batchImport_status</a> - The
--   status of the batch import job.
--   
--   <a>$sel:processedRecordsCount:BatchImport'</a>,
--   <a>batchImport_processedRecordsCount</a> - The number of records
--   processed by batch import job.
--   
--   <a>$sel:totalRecordsCount:BatchImport'</a>,
--   <a>batchImport_totalRecordsCount</a> - The total number of records in
--   the batch import job.
--   
--   <a>$sel:jobId:BatchImport'</a>, <a>batchImport_jobId</a> - The ID of
--   the batch import job.
--   
--   <a>$sel:arn:BatchImport'</a>, <a>batchImport_arn</a> - The ARN of the
--   batch import job.
--   
--   <a>$sel:startTime:BatchImport'</a>, <a>batchImport_startTime</a> -
--   Timestamp of when the batch import job started.
--   
--   <a>$sel:eventTypeName:BatchImport'</a>,
--   <a>batchImport_eventTypeName</a> - The name of the event type.
--   
--   <a>$sel:completionTime:BatchImport'</a>,
--   <a>batchImport_completionTime</a> - Timestamp of when batch import job
--   completed.
--   
--   <a>$sel:outputPath:BatchImport'</a>, <a>batchImport_outputPath</a> -
--   The Amazon S3 location of your output file.
--   
--   <a>$sel:inputPath:BatchImport'</a>, <a>batchImport_inputPath</a> - The
--   Amazon S3 location of your data file for batch import.
--   
--   <a>$sel:failedRecordsCount:BatchImport'</a>,
--   <a>batchImport_failedRecordsCount</a> - The number of records that
--   failed to import.
newBatchImport :: BatchImport

-- | The batch prediction details.
--   
--   <i>See:</i> <a>newBatchPrediction</a> smart constructor.
data BatchPrediction
BatchPrediction' :: Maybe Text -> Maybe Text -> Maybe AsyncJobStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BatchPrediction

-- | Create a value of <a>BatchPrediction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchPrediction'</a>,
--   <a>batchPrediction_failureReason</a> - The reason a batch prediction
--   job failed.
--   
--   <a>$sel:iamRoleArn:BatchPrediction'</a>,
--   <a>batchPrediction_iamRoleArn</a> - The ARN of the IAM role to use for
--   this job request.
--   
--   <a>$sel:status:BatchPrediction'</a>, <a>batchPrediction_status</a> -
--   The batch prediction status.
--   
--   <a>$sel:processedRecordsCount:BatchPrediction'</a>,
--   <a>batchPrediction_processedRecordsCount</a> - The number of records
--   processed by the batch prediction job.
--   
--   <a>$sel:totalRecordsCount:BatchPrediction'</a>,
--   <a>batchPrediction_totalRecordsCount</a> - The total number of records
--   in the batch prediction job.
--   
--   <a>$sel:lastHeartbeatTime:BatchPrediction'</a>,
--   <a>batchPrediction_lastHeartbeatTime</a> - Timestamp of most recent
--   heartbeat indicating the batch prediction job was making progress.
--   
--   <a>$sel:jobId:BatchPrediction'</a>, <a>batchPrediction_jobId</a> - The
--   job ID for the batch prediction.
--   
--   <a>$sel:arn:BatchPrediction'</a>, <a>batchPrediction_arn</a> - The ARN
--   of batch prediction job.
--   
--   <a>$sel:startTime:BatchPrediction'</a>,
--   <a>batchPrediction_startTime</a> - Timestamp of when the batch
--   prediction job started.
--   
--   <a>$sel:eventTypeName:BatchPrediction'</a>,
--   <a>batchPrediction_eventTypeName</a> - The name of the event type.
--   
--   <a>$sel:completionTime:BatchPrediction'</a>,
--   <a>batchPrediction_completionTime</a> - Timestamp of when the batch
--   prediction job completed.
--   
--   <a>$sel:outputPath:BatchPrediction'</a>,
--   <a>batchPrediction_outputPath</a> - The Amazon S3 location of your
--   output file.
--   
--   <a>$sel:detectorName:BatchPrediction'</a>,
--   <a>batchPrediction_detectorName</a> - The name of the detector.
--   
--   <a>$sel:detectorVersion:BatchPrediction'</a>,
--   <a>batchPrediction_detectorVersion</a> - The detector version.
--   
--   <a>$sel:inputPath:BatchPrediction'</a>,
--   <a>batchPrediction_inputPath</a> - The Amazon S3 location of your
--   training file.
newBatchPrediction :: BatchPrediction

-- | The model training validation messages.
--   
--   <i>See:</i> <a>newDataValidationMetrics</a> smart constructor.
data DataValidationMetrics
DataValidationMetrics' :: Maybe [FieldValidationMessage] -> Maybe [FileValidationMessage] -> DataValidationMetrics

-- | Create a value of <a>DataValidationMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fieldLevelMessages:DataValidationMetrics'</a>,
--   <a>dataValidationMetrics_fieldLevelMessages</a> - The field-specific
--   model training validation messages.
--   
--   <a>$sel:fileLevelMessages:DataValidationMetrics'</a>,
--   <a>dataValidationMetrics_fileLevelMessages</a> - The file-specific
--   model training validation messages.
newDataValidationMetrics :: DataValidationMetrics

-- | The detector.
--   
--   <i>See:</i> <a>newDetector</a> smart constructor.
data Detector
Detector' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Detector

-- | Create a value of <a>Detector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Detector'</a>, <a>detector_lastUpdatedTime</a>
--   - Timestamp of when the detector was last updated.
--   
--   <a>$sel:arn:Detector'</a>, <a>detector_arn</a> - The detector ARN.
--   
--   <a>$sel:createdTime:Detector'</a>, <a>detector_createdTime</a> -
--   Timestamp of when the detector was created.
--   
--   <a>$sel:eventTypeName:Detector'</a>, <a>detector_eventTypeName</a> -
--   The name of the event type.
--   
--   <a>$sel:detectorId:Detector'</a>, <a>detector_detectorId</a> - The
--   detector ID.
--   
--   <a>$sel:description:Detector'</a>, <a>detector_description</a> - The
--   detector description.
newDetector :: Detector

-- | The summary of the detector version.
--   
--   <i>See:</i> <a>newDetectorVersionSummary</a> smart constructor.
data DetectorVersionSummary
DetectorVersionSummary' :: Maybe DetectorVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> DetectorVersionSummary

-- | Create a value of <a>DetectorVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_status</a> - The detector version status.
--   
--   <a>$sel:lastUpdatedTime:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_lastUpdatedTime</a> - Timestamp of when the
--   detector version was last updated.
--   
--   <a>$sel:detectorVersionId:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_detectorVersionId</a> - The detector version
--   ID.
--   
--   <a>$sel:description:DetectorVersionSummary'</a>,
--   <a>detectorVersionSummary_description</a> - The detector version
--   description.
newDetectorVersionSummary :: DetectorVersionSummary

-- | The entity details.
--   
--   <i>See:</i> <a>newEntity</a> smart constructor.
data Entity
Entity' :: Text -> Text -> Entity

-- | Create a value of <a>Entity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityType:Entity'</a>, <a>entity_entityType</a> - The entity
--   type.
--   
--   <a>$sel:entityId:Entity'</a>, <a>entity_entityId</a> - The entity ID.
--   If you do not know the <tt>entityId</tt>, you can pass
--   <tt>unknown</tt>, which is areserved string literal.
newEntity :: Text -> Text -> Entity

-- | The entity type details.
--   
--   <i>See:</i> <a>newEntityType</a> smart constructor.
data EntityType
EntityType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EntityType

-- | Create a value of <a>EntityType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:EntityType'</a>,
--   <a>entityType_lastUpdatedTime</a> - Timestamp of when the entity type
--   was last updated.
--   
--   <a>$sel:arn:EntityType'</a>, <a>entityType_arn</a> - The entity type
--   ARN.
--   
--   <a>$sel:createdTime:EntityType'</a>, <a>entityType_createdTime</a> -
--   Timestamp of when the entity type was created.
--   
--   <a>$sel:name:EntityType'</a>, <a>entityType_name</a> - The entity type
--   name.
--   
--   <a>$sel:description:EntityType'</a>, <a>entityType_description</a> -
--   The entity type description.
newEntityType :: EntityType

-- | The event details.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe [Sensitive Entity] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> Maybe Text -> Event

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTimestamp:Event'</a>, <a>event_eventTimestamp</a> - The
--   timestamp that defines when the event under evaluation occurred. The
--   timestamp must be specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:entities:Event'</a>, <a>event_entities</a> - The event
--   entities.
--   
--   <a>$sel:labelTimestamp:Event'</a>, <a>event_labelTimestamp</a> - The
--   timestamp associated with the label to update. The timestamp must be
--   specified using ISO 8601 standard in UTC.
--   
--   <a>$sel:eventTypeName:Event'</a>, <a>event_eventTypeName</a> - The
--   event type.
--   
--   <a>$sel:eventVariables:Event'</a>, <a>event_eventVariables</a> - Names
--   of the event type's variables you defined in Amazon Fraud Detector to
--   represent data elements and their corresponding values for the event
--   you are sending for evaluation.
--   
--   <a>$sel:currentLabel:Event'</a>, <a>event_currentLabel</a> - The label
--   associated with the event.
--   
--   <a>$sel:eventId:Event'</a>, <a>event_eventId</a> - The event ID.
newEvent :: Event

-- | The event type details.
--   
--   <i>See:</i> <a>newEventType</a> smart constructor.
data EventType
EventType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [Text] -> Maybe Text -> Maybe IngestedEventStatistics -> Maybe [Text] -> Maybe EventIngestion -> Maybe Text -> EventType

-- | Create a value of <a>EventType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:EventType'</a>,
--   <a>eventType_lastUpdatedTime</a> - Timestamp of when the event type
--   was last updated.
--   
--   <a>$sel:arn:EventType'</a>, <a>eventType_arn</a> - The entity type
--   ARN.
--   
--   <a>$sel:createdTime:EventType'</a>, <a>eventType_createdTime</a> -
--   Timestamp of when the event type was created.
--   
--   <a>$sel:entityTypes:EventType'</a>, <a>eventType_entityTypes</a> - The
--   event type entity types.
--   
--   <a>$sel:eventVariables:EventType'</a>, <a>eventType_eventVariables</a>
--   - The event type event variables.
--   
--   <a>$sel:name:EventType'</a>, <a>eventType_name</a> - The event type
--   name.
--   
--   <a>$sel:ingestedEventStatistics:EventType'</a>,
--   <a>eventType_ingestedEventStatistics</a> - Data about the stored
--   events.
--   
--   <a>$sel:labels:EventType'</a>, <a>eventType_labels</a> - The event
--   type labels.
--   
--   <a>$sel:eventIngestion:EventType'</a>, <a>eventType_eventIngestion</a>
--   - If <tt>Enabled</tt>, Amazon Fraud Detector stores event data when
--   you generate a prediction and uses that data to update calculated
--   variables in near real-time. Amazon Fraud Detector uses this data,
--   known as <tt>INGESTED_EVENTS</tt>, to train your model and improve
--   fraud predictions.
--   
--   <a>$sel:description:EventType'</a>, <a>eventType_description</a> - The
--   event type description.
newEventType :: EventType

-- | Details for the external events data used for model version training.
--   
--   <i>See:</i> <a>newExternalEventsDetail</a> smart constructor.
data ExternalEventsDetail
ExternalEventsDetail' :: Text -> Text -> ExternalEventsDetail

-- | Create a value of <a>ExternalEventsDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:ExternalEventsDetail'</a>,
--   <a>externalEventsDetail_dataLocation</a> - The Amazon S3 bucket
--   location for the data.
--   
--   <a>$sel:dataAccessRoleArn:ExternalEventsDetail'</a>,
--   <a>externalEventsDetail_dataAccessRoleArn</a> - The ARN of the role
--   that provides Amazon Fraud Detector access to the data location.
newExternalEventsDetail :: Text -> Text -> ExternalEventsDetail

-- | The Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModel</a> smart constructor.
data ExternalModel
ExternalModel' :: Maybe Text -> Maybe ModelSource -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ModelEndpointStatus -> Maybe ModelOutputConfiguration -> Maybe Text -> Maybe ModelInputConfiguration -> ExternalModel

-- | Create a value of <a>ExternalModel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:ExternalModel'</a>,
--   <a>externalModel_modelEndpoint</a> - The Amazon SageMaker model
--   endpoints.
--   
--   <a>$sel:modelSource:ExternalModel'</a>,
--   <a>externalModel_modelSource</a> - The source of the model.
--   
--   <a>$sel:lastUpdatedTime:ExternalModel'</a>,
--   <a>externalModel_lastUpdatedTime</a> - Timestamp of when the model was
--   last updated.
--   
--   <a>$sel:arn:ExternalModel'</a>, <a>externalModel_arn</a> - The model
--   ARN.
--   
--   <a>$sel:createdTime:ExternalModel'</a>,
--   <a>externalModel_createdTime</a> - Timestamp of when the model was
--   last created.
--   
--   <a>$sel:modelEndpointStatus:ExternalModel'</a>,
--   <a>externalModel_modelEndpointStatus</a> - The Amazon Fraud Detector
--   status for the external model endpoint
--   
--   <a>$sel:outputConfiguration:ExternalModel'</a>,
--   <a>externalModel_outputConfiguration</a> - The output configuration.
--   
--   <a>$sel:invokeModelEndpointRoleArn:ExternalModel'</a>,
--   <a>externalModel_invokeModelEndpointRoleArn</a> - The role used to
--   invoke the model.
--   
--   <a>$sel:inputConfiguration:ExternalModel'</a>,
--   <a>externalModel_inputConfiguration</a> - The input configuration.
newExternalModel :: ExternalModel

-- | The fraud prediction scores from Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModelOutputs</a> smart constructor.
data ExternalModelOutputs
ExternalModelOutputs' :: Maybe ExternalModelSummary -> Maybe (HashMap Text Text) -> ExternalModelOutputs

-- | Create a value of <a>ExternalModelOutputs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalModel:ExternalModelOutputs'</a>,
--   <a>externalModelOutputs_externalModel</a> - The Amazon SageMaker
--   model.
--   
--   <a>$sel:outputs:ExternalModelOutputs'</a>,
--   <a>externalModelOutputs_outputs</a> - The fraud prediction scores from
--   Amazon SageMaker model.
newExternalModelOutputs :: ExternalModelOutputs

-- | The Amazon SageMaker model.
--   
--   <i>See:</i> <a>newExternalModelSummary</a> smart constructor.
data ExternalModelSummary
ExternalModelSummary' :: Maybe Text -> Maybe ModelSource -> ExternalModelSummary

-- | Create a value of <a>ExternalModelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelEndpoint:ExternalModelSummary'</a>,
--   <a>externalModelSummary_modelEndpoint</a> - The endpoint of the Amazon
--   SageMaker model.
--   
--   <a>$sel:modelSource:ExternalModelSummary'</a>,
--   <a>externalModelSummary_modelSource</a> - The source of the model.
newExternalModelSummary :: ExternalModelSummary

-- | The message details.
--   
--   <i>See:</i> <a>newFieldValidationMessage</a> smart constructor.
data FieldValidationMessage
FieldValidationMessage' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FieldValidationMessage

-- | Create a value of <a>FieldValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_identifier</a> - The message ID.
--   
--   <a>$sel:content:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_content</a> - The message content.
--   
--   <a>$sel:fieldName:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_fieldName</a> - The field name.
--   
--   <a>$sel:title:FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_title</a> - The message title.
--   
--   <a>$sel:type':FieldValidationMessage'</a>,
--   <a>fieldValidationMessage_type</a> - The message type.
newFieldValidationMessage :: FieldValidationMessage

-- | The message details.
--   
--   <i>See:</i> <a>newFileValidationMessage</a> smart constructor.
data FileValidationMessage
FileValidationMessage' :: Maybe Text -> Maybe Text -> Maybe Text -> FileValidationMessage

-- | Create a value of <a>FileValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:FileValidationMessage'</a>,
--   <a>fileValidationMessage_content</a> - The message content.
--   
--   <a>$sel:title:FileValidationMessage'</a>,
--   <a>fileValidationMessage_title</a> - The message title.
--   
--   <a>$sel:type':FileValidationMessage'</a>,
--   <a>fileValidationMessage_type</a> - The message type.
newFileValidationMessage :: FileValidationMessage

-- | Data about the stored events.
--   
--   <i>See:</i> <a>newIngestedEventStatistics</a> smart constructor.
data IngestedEventStatistics
IngestedEventStatistics' :: Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> IngestedEventStatistics

-- | Create a value of <a>IngestedEventStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventDataSizeInBytes:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_eventDataSizeInBytes</a> - The total size
--   of the stored events.
--   
--   <a>$sel:mostRecentEvent:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_mostRecentEvent</a> - The newest stored
--   event.
--   
--   <a>$sel:lastUpdatedTime:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_lastUpdatedTime</a> - Timestamp of when the
--   stored event was last updated.
--   
--   <a>$sel:numberOfEvents:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_numberOfEvents</a> - The number of stored
--   events.
--   
--   <a>$sel:leastRecentEvent:IngestedEventStatistics'</a>,
--   <a>ingestedEventStatistics_leastRecentEvent</a> - The oldest stored
--   event.
newIngestedEventStatistics :: IngestedEventStatistics

-- | The details of the ingested event.
--   
--   <i>See:</i> <a>newIngestedEventsDetail</a> smart constructor.
data IngestedEventsDetail
IngestedEventsDetail' :: IngestedEventsTimeWindow -> IngestedEventsDetail

-- | Create a value of <a>IngestedEventsDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestedEventsTimeWindow:IngestedEventsDetail'</a>,
--   <a>ingestedEventsDetail_ingestedEventsTimeWindow</a> - The start and
--   stop time of the ingested events.
newIngestedEventsDetail :: IngestedEventsTimeWindow -> IngestedEventsDetail

-- | The start and stop time of the ingested events.
--   
--   <i>See:</i> <a>newIngestedEventsTimeWindow</a> smart constructor.
data IngestedEventsTimeWindow
IngestedEventsTimeWindow' :: Text -> Text -> IngestedEventsTimeWindow

-- | Create a value of <a>IngestedEventsTimeWindow</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:IngestedEventsTimeWindow'</a>,
--   <a>ingestedEventsTimeWindow_startTime</a> - Timestamp of the first
--   ingensted event.
--   
--   <a>$sel:endTime:IngestedEventsTimeWindow'</a>,
--   <a>ingestedEventsTimeWindow_endTime</a> - Timestamp of the final
--   ingested event.
newIngestedEventsTimeWindow :: Text -> Text -> IngestedEventsTimeWindow

-- | The KMS key details.
--   
--   <i>See:</i> <a>newKMSKey</a> smart constructor.
data KMSKey
KMSKey' :: Maybe Text -> KMSKey

-- | Create a value of <a>KMSKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsEncryptionKeyArn:KMSKey'</a>,
--   <a>kmsKey_kmsEncryptionKeyArn</a> - The encryption key ARN.
newKMSKey :: KMSKey

-- | The label details.
--   
--   <i>See:</i> <a>newLabel</a> smart constructor.
data Label
Label' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Label

-- | Create a value of <a>Label</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Label'</a>, <a>label_lastUpdatedTime</a> -
--   Timestamp of when the label was last updated.
--   
--   <a>$sel:arn:Label'</a>, <a>label_arn</a> - The label ARN.
--   
--   <a>$sel:createdTime:Label'</a>, <a>label_createdTime</a> - Timestamp
--   of when the event type was created.
--   
--   <a>$sel:name:Label'</a>, <a>label_name</a> - The label name.
--   
--   <a>$sel:description:Label'</a>, <a>label_description</a> - The label
--   description.
newLabel :: Label

-- | The label schema.
--   
--   <i>See:</i> <a>newLabelSchema</a> smart constructor.
data LabelSchema
LabelSchema' :: Maybe UnlabeledEventsTreatment -> HashMap Text (NonEmpty Text) -> LabelSchema

-- | Create a value of <a>LabelSchema</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlabeledEventsTreatment:LabelSchema'</a>,
--   <a>labelSchema_unlabeledEventsTreatment</a> - The action to take for
--   unlabeled events.
--   
--   <a>$sel:labelMapper:LabelSchema'</a>, <a>labelSchema_labelMapper</a> -
--   The label mapper maps the Amazon Fraud Detector supported model
--   classification labels (<tt>FRAUD</tt>, <tt>LEGIT</tt>) to the
--   appropriate event type labels. For example, if "<tt>FRAUD</tt>" and
--   "<tt>LEGIT</tt>" are Amazon Fraud Detector supported labels, this
--   mapper could be: <tt>{"FRAUD" =&gt; ["0"]</tt>, <tt>"LEGIT" =&gt;
--   ["1"]}</tt> or <tt>{"FRAUD" =&gt; ["false"]</tt>, <tt>"LEGIT" =&gt;
--   ["true"]}</tt> or <tt>{"FRAUD" =&gt; ["fraud", "abuse"]</tt>,
--   <tt>"LEGIT" =&gt; ["legit", "safe"]}</tt>. The value part of the
--   mapper is a list, because you may have multiple label variants from
--   your event type for a single Amazon Fraud Detector label.
newLabelSchema :: LabelSchema

-- | The log odds metric details.
--   
--   <i>See:</i> <a>newLogOddsMetric</a> smart constructor.
data LogOddsMetric
LogOddsMetric' :: Text -> Text -> Double -> LogOddsMetric

-- | Create a value of <a>LogOddsMetric</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variableName:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableName</a> - The name of the variable.
--   
--   <a>$sel:variableType:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableType</a> - The type of variable.
--   
--   <a>$sel:variableImportance:LogOddsMetric'</a>,
--   <a>logOddsMetric_variableImportance</a> - The relative importance of
--   the variable. For more information, see <a>Model variable
--   importance</a>.
newLogOddsMetric :: Text -> Text -> Double -> LogOddsMetric

-- | Model performance metrics data points.
--   
--   <i>See:</i> <a>newMetricDataPoint</a> smart constructor.
data MetricDataPoint
MetricDataPoint' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> MetricDataPoint

-- | Create a value of <a>MetricDataPoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:precision:MetricDataPoint'</a>,
--   <a>metricDataPoint_precision</a> - The percentage of fraud events
--   correctly predicted as fraudulent as compared to all events predicted
--   as fraudulent.
--   
--   <a>$sel:fpr:MetricDataPoint'</a>, <a>metricDataPoint_fpr</a> - The
--   false positive rate. This is the percentage of total legitimate events
--   that are incorrectly predicted as fraud.
--   
--   <a>$sel:threshold:MetricDataPoint'</a>,
--   <a>metricDataPoint_threshold</a> - The model threshold that specifies
--   an acceptable fraud capture rate. For example, a threshold of 500
--   means any model score 500 or above is labeled as fraud.
--   
--   <a>$sel:tpr:MetricDataPoint'</a>, <a>metricDataPoint_tpr</a> - The
--   true positive rate. This is the percentage of total fraud the model
--   detects. Also known as capture rate.
newMetricDataPoint :: MetricDataPoint

-- | The model.
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelType:Model'</a>, <a>model_modelType</a> - The model type.
--   
--   <a>$sel:lastUpdatedTime:Model'</a>, <a>model_lastUpdatedTime</a> -
--   Timestamp of last time the model was updated.
--   
--   <a>$sel:modelId:Model'</a>, <a>model_modelId</a> - The model ID.
--   
--   <a>$sel:arn:Model'</a>, <a>model_arn</a> - The ARN of the model.
--   
--   <a>$sel:createdTime:Model'</a>, <a>model_createdTime</a> - Timestamp
--   of when the model was created.
--   
--   <a>$sel:eventTypeName:Model'</a>, <a>model_eventTypeName</a> - The
--   name of the event type.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The model
--   description.
newModel :: Model

-- | A pre-formed Amazon SageMaker model input you can include if your
--   detector version includes an imported Amazon SageMaker model endpoint
--   with pass-through input configuration.
--   
--   <i>See:</i> <a>newModelEndpointDataBlob</a> smart constructor.
data ModelEndpointDataBlob
ModelEndpointDataBlob' :: Maybe Base64 -> Maybe Text -> ModelEndpointDataBlob

-- | Create a value of <a>ModelEndpointDataBlob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:byteBuffer:ModelEndpointDataBlob'</a>,
--   <a>modelEndpointDataBlob_byteBuffer</a> - The byte buffer of the
--   Amazon SageMaker model endpoint input data blob.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:contentType:ModelEndpointDataBlob'</a>,
--   <a>modelEndpointDataBlob_contentType</a> - The content type of the
--   Amazon SageMaker model endpoint input data blob.
newModelEndpointDataBlob :: ModelEndpointDataBlob

-- | The Amazon SageMaker model input configuration.
--   
--   <i>See:</i> <a>newModelInputConfiguration</a> smart constructor.
data ModelInputConfiguration
ModelInputConfiguration' :: Maybe ModelInputDataFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Bool -> ModelInputConfiguration

-- | Create a value of <a>ModelInputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_format</a> - The format of the model input
--   configuration. The format differs depending on if it is passed through
--   to SageMaker or constructed by Amazon Fraud Detector.
--   
--   <a>$sel:eventTypeName:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_eventTypeName</a> - The event type name.
--   
--   <a>$sel:csvInputTemplate:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_csvInputTemplate</a> - Template for
--   constructing the CSV input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable-names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
--   
--   <a>$sel:jsonInputTemplate:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_jsonInputTemplate</a> - Template for
--   constructing the JSON input-data sent to SageMaker. At
--   event-evaluation, the placeholders for variable names in the template
--   will be replaced with the variable values before being sent to
--   SageMaker.
--   
--   <a>$sel:useEventVariables:ModelInputConfiguration'</a>,
--   <a>modelInputConfiguration_useEventVariables</a> - The event
--   variables.
newModelInputConfiguration :: Bool -> ModelInputConfiguration

-- | Provides the Amazon Sagemaker model output configuration.
--   
--   <i>See:</i> <a>newModelOutputConfiguration</a> smart constructor.
data ModelOutputConfiguration
ModelOutputConfiguration' :: Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> ModelOutputDataFormat -> ModelOutputConfiguration

-- | Create a value of <a>ModelOutputConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonKeyToVariableMap:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_jsonKeyToVariableMap</a> - A map of JSON
--   keys in response from SageMaker to the Amazon Fraud Detector
--   variables.
--   
--   <a>$sel:csvIndexToVariableMap:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_csvIndexToVariableMap</a> - A map of CSV
--   index values in the SageMaker response to the Amazon Fraud Detector
--   variables.
--   
--   <a>$sel:format:ModelOutputConfiguration'</a>,
--   <a>modelOutputConfiguration_format</a> - The format of the model
--   output configuration.
newModelOutputConfiguration :: ModelOutputDataFormat -> ModelOutputConfiguration

-- | The fraud prediction scores.
--   
--   <i>See:</i> <a>newModelScores</a> smart constructor.
data ModelScores
ModelScores' :: Maybe ModelVersion -> Maybe (HashMap Text Double) -> ModelScores

-- | Create a value of <a>ModelScores</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelVersion:ModelScores'</a>, <a>modelScores_modelVersion</a>
--   - The model version.
--   
--   <a>$sel:scores:ModelScores'</a>, <a>modelScores_scores</a> - The
--   model's fraud prediction scores.
newModelScores :: ModelScores

-- | The model version.
--   
--   <i>See:</i> <a>newModelVersion</a> smart constructor.
data ModelVersion
ModelVersion' :: Maybe Text -> Text -> ModelTypeEnum -> Text -> ModelVersion

-- | Create a value of <a>ModelVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ModelVersion'</a>, <a>modelVersion_arn</a> - The model
--   version ARN.
--   
--   <a>$sel:modelId:ModelVersion'</a>, <a>modelVersion_modelId</a> - The
--   model ID.
--   
--   <a>$sel:modelType:ModelVersion'</a>, <a>modelVersion_modelType</a> -
--   The model type.
--   
--   <a>$sel:modelVersionNumber:ModelVersion'</a>,
--   <a>modelVersion_modelVersionNumber</a> - The model version number.
newModelVersion :: Text -> ModelTypeEnum -> Text -> ModelVersion

-- | The details of the model version.
--   
--   <i>See:</i> <a>newModelVersionDetail</a> smart constructor.
data ModelVersionDetail
ModelVersionDetail' :: Maybe Text -> Maybe ModelTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TrainingDataSourceEnum -> Maybe Text -> Maybe ExternalEventsDetail -> Maybe IngestedEventsDetail -> Maybe Text -> Maybe TrainingResult -> Maybe TrainingDataSchema -> ModelVersionDetail

-- | Create a value of <a>ModelVersionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_status</a> - The status of the model version.
--   
--   <a>$sel:modelType:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelType</a> - The model type.
--   
--   <a>$sel:lastUpdatedTime:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_lastUpdatedTime</a> - The timestamp when the
--   model was last updated.
--   
--   <a>$sel:modelId:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelId</a> - The model ID.
--   
--   <a>$sel:arn:ModelVersionDetail'</a>, <a>modelVersionDetail_arn</a> -
--   The model version ARN.
--   
--   <a>$sel:trainingDataSource:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingDataSource</a> - The model version
--   training data source.
--   
--   <a>$sel:createdTime:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_createdTime</a> - The timestamp when the model
--   was created.
--   
--   <a>$sel:externalEventsDetail:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_externalEventsDetail</a> - The external events
--   data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>EXTERNAL_EVENTS</tt>.
--   
--   <a>$sel:ingestedEventsDetail:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_ingestedEventsDetail</a> - The ingested events
--   data details. This will be populated if the
--   <tt>trainingDataSource</tt> for the model version is specified as
--   <tt>INGESTED_EVENTS</tt>.
--   
--   <a>$sel:modelVersionNumber:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_modelVersionNumber</a> - The model version
--   number.
--   
--   <a>$sel:trainingResult:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingResult</a> - The training results.
--   
--   <a>$sel:trainingDataSchema:ModelVersionDetail'</a>,
--   <a>modelVersionDetail_trainingDataSchema</a> - The training data
--   schema.
newModelVersionDetail :: ModelVersionDetail

-- | The outcome.
--   
--   <i>See:</i> <a>newOutcome</a> smart constructor.
data Outcome
Outcome' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Outcome

-- | Create a value of <a>Outcome</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Outcome'</a>, <a>outcome_lastUpdatedTime</a> -
--   The timestamp when the outcome was last updated.
--   
--   <a>$sel:arn:Outcome'</a>, <a>outcome_arn</a> - The outcome ARN.
--   
--   <a>$sel:createdTime:Outcome'</a>, <a>outcome_createdTime</a> - The
--   timestamp when the outcome was created.
--   
--   <a>$sel:name:Outcome'</a>, <a>outcome_name</a> - The outcome name.
--   
--   <a>$sel:description:Outcome'</a>, <a>outcome_description</a> - The
--   outcome description.
newOutcome :: Outcome

-- | A rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Text -> Text -> Text -> Rule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectorId:Rule'</a>, <a>rule_detectorId</a> - The detector
--   for which the rule is associated.
--   
--   <a>$sel:ruleId:Rule'</a>, <a>rule_ruleId</a> - The rule ID.
--   
--   <a>$sel:ruleVersion:Rule'</a>, <a>rule_ruleVersion</a> - The rule
--   version.
newRule :: Text -> Text -> Text -> Rule

-- | The details of the rule.
--   
--   <i>See:</i> <a>newRuleDetail</a> smart constructor.
data RuleDetail
RuleDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Language -> Maybe Text -> RuleDetail

-- | Create a value of <a>RuleDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleVersion:RuleDetail'</a>, <a>ruleDetail_ruleVersion</a> -
--   The rule version.
--   
--   <a>$sel:lastUpdatedTime:RuleDetail'</a>,
--   <a>ruleDetail_lastUpdatedTime</a> - Timestamp of the last time the
--   rule was updated.
--   
--   <a>$sel:arn:RuleDetail'</a>, <a>ruleDetail_arn</a> - The rule ARN.
--   
--   <a>$sel:createdTime:RuleDetail'</a>, <a>ruleDetail_createdTime</a> -
--   The timestamp of when the rule was created.
--   
--   <a>$sel:ruleId:RuleDetail'</a>, <a>ruleDetail_ruleId</a> - The rule
--   ID.
--   
--   <a>$sel:outcomes:RuleDetail'</a>, <a>ruleDetail_outcomes</a> - The
--   rule outcomes.
--   
--   <a>$sel:detectorId:RuleDetail'</a>, <a>ruleDetail_detectorId</a> - The
--   detector for which the rule is associated.
--   
--   <a>$sel:expression:RuleDetail'</a>, <a>ruleDetail_expression</a> - The
--   rule expression.
--   
--   <a>$sel:language:RuleDetail'</a>, <a>ruleDetail_language</a> - The
--   rule language.
--   
--   <a>$sel:description:RuleDetail'</a>, <a>ruleDetail_description</a> -
--   The rule description.
newRuleDetail :: RuleDetail

-- | The rule results.
--   
--   <i>See:</i> <a>newRuleResult</a> smart constructor.
data RuleResult
RuleResult' :: Maybe Text -> Maybe [Text] -> RuleResult

-- | Create a value of <a>RuleResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleId:RuleResult'</a>, <a>ruleResult_ruleId</a> - The rule ID
--   that was matched, based on the rule execution mode.
--   
--   <a>$sel:outcomes:RuleResult'</a>, <a>ruleResult_outcomes</a> - The
--   outcomes of the matched rule, based on the rule execution mode.
newRuleResult :: RuleResult

-- | A key and value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - A value assigned to a tag
--   key.
newTag :: Text -> Text -> Tag

-- | The training data schema.
--   
--   <i>See:</i> <a>newTrainingDataSchema</a> smart constructor.
data TrainingDataSchema
TrainingDataSchema' :: [Text] -> LabelSchema -> TrainingDataSchema

-- | Create a value of <a>TrainingDataSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelVariables:TrainingDataSchema'</a>,
--   <a>trainingDataSchema_modelVariables</a> - The training data schema
--   variables.
--   
--   <a>$sel:labelSchema:TrainingDataSchema'</a>,
--   <a>trainingDataSchema_labelSchema</a> - Undocumented member.
newTrainingDataSchema :: LabelSchema -> TrainingDataSchema

-- | The training metric details.
--   
--   <i>See:</i> <a>newTrainingMetrics</a> smart constructor.
data TrainingMetrics
TrainingMetrics' :: Maybe Double -> Maybe [MetricDataPoint] -> TrainingMetrics

-- | Create a value of <a>TrainingMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:auc:TrainingMetrics'</a>, <a>trainingMetrics_auc</a> - The
--   area under the curve. This summarizes true positive rate (TPR) and
--   false positive rate (FPR) across all possible model score thresholds.
--   A model with no predictive power has an AUC of 0.5, whereas a perfect
--   model has a score of 1.0.
--   
--   <a>$sel:metricDataPoints:TrainingMetrics'</a>,
--   <a>trainingMetrics_metricDataPoints</a> - The data points details.
newTrainingMetrics :: TrainingMetrics

-- | The training result details.
--   
--   <i>See:</i> <a>newTrainingResult</a> smart constructor.
data TrainingResult
TrainingResult' :: Maybe DataValidationMetrics -> Maybe TrainingMetrics -> Maybe VariableImportanceMetrics -> TrainingResult

-- | Create a value of <a>TrainingResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataValidationMetrics:TrainingResult'</a>,
--   <a>trainingResult_dataValidationMetrics</a> - The validation metrics.
--   
--   <a>$sel:trainingMetrics:TrainingResult'</a>,
--   <a>trainingResult_trainingMetrics</a> - The training metric details.
--   
--   <a>$sel:variableImportanceMetrics:TrainingResult'</a>,
--   <a>trainingResult_variableImportanceMetrics</a> - The variable
--   importance metrics.
newTrainingResult :: TrainingResult

-- | The variable.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DataSource -> Maybe DataType -> Maybe Text -> Maybe Text -> Maybe Text -> Variable

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Variable'</a>, <a>variable_lastUpdatedTime</a>
--   - The time when variable was last updated.
--   
--   <a>$sel:arn:Variable'</a>, <a>variable_arn</a> - The ARN of the
--   variable.
--   
--   <a>$sel:createdTime:Variable'</a>, <a>variable_createdTime</a> - The
--   time when the variable was created.
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
--   
--   <a>$sel:dataSource:Variable'</a>, <a>variable_dataSource</a> - The
--   data source of the variable.
--   
--   <a>$sel:dataType:Variable'</a>, <a>variable_dataType</a> - The data
--   type of the variable. For more information see <a>Variable types</a>.
--   
--   <a>$sel:defaultValue:Variable'</a>, <a>variable_defaultValue</a> - The
--   default value of the variable.
--   
--   <a>$sel:variableType:Variable'</a>, <a>variable_variableType</a> - The
--   variable type of the variable.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
--   
--   <a>$sel:description:Variable'</a>, <a>variable_description</a> - The
--   description of the variable.
newVariable :: Variable

-- | A variable in the list of variables for the batch create variable
--   request.
--   
--   <i>See:</i> <a>newVariableEntry</a> smart constructor.
data VariableEntry
VariableEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VariableEntry

-- | Create a value of <a>VariableEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:VariableEntry'</a>, <a>variableEntry_name</a> - The name
--   of the variable.
--   
--   <a>$sel:dataSource:VariableEntry'</a>, <a>variableEntry_dataSource</a>
--   - The data source of the variable.
--   
--   <a>$sel:dataType:VariableEntry'</a>, <a>variableEntry_dataType</a> -
--   The data type of the variable.
--   
--   <a>$sel:defaultValue:VariableEntry'</a>,
--   <a>variableEntry_defaultValue</a> - The default value of the variable.
--   
--   <a>$sel:variableType:VariableEntry'</a>,
--   <a>variableEntry_variableType</a> - The type of the variable. For more
--   information see <a>Variable types</a>.
--   
--   Valid Values: <tt>AUTH_CODE | AVS | BILLING_ADDRESS_L1 |
--   BILLING_ADDRESS_L2 | BILLING_CITY | BILLING_COUNTRY | BILLING_NAME |
--   BILLING_PHONE | BILLING_STATE | BILLING_ZIP | CARD_BIN | CATEGORICAL |
--   CURRENCY_CODE | EMAIL_ADDRESS | FINGERPRINT | FRAUD_LABEL |
--   FREE_FORM_TEXT | IP_ADDRESS | NUMERIC | ORDER_ID | PAYMENT_TYPE |
--   PHONE_NUMBER | PRICE | PRODUCT_CATEGORY | SHIPPING_ADDRESS_L1 |
--   SHIPPING_ADDRESS_L2 | SHIPPING_CITY | SHIPPING_COUNTRY | SHIPPING_NAME
--   | SHIPPING_PHONE | SHIPPING_STATE | SHIPPING_ZIP | USERAGENT </tt>
--   
--   <a>$sel:description:VariableEntry'</a>,
--   <a>variableEntry_description</a> - The description of the variable.
newVariableEntry :: VariableEntry

-- | The variable importance metrics details.
--   
--   <i>See:</i> <a>newVariableImportanceMetrics</a> smart constructor.
data VariableImportanceMetrics
VariableImportanceMetrics' :: Maybe [LogOddsMetric] -> VariableImportanceMetrics

-- | Create a value of <a>VariableImportanceMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logOddsMetrics:VariableImportanceMetrics'</a>,
--   <a>variableImportanceMetrics_logOddsMetrics</a> - List of variable
--   metrics.
newVariableImportanceMetrics :: VariableImportanceMetrics
