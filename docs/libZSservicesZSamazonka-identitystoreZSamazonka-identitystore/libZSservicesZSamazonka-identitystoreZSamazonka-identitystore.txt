-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-identitystoreZSamazonka-identitystore
@version 2.0


module Network.AWS.IdentityStore.Types.Filter

-- | A query filter used by <tt>ListUsers</tt> and <tt>ListGroup</tt>. This
--   filter object provides the attribute name and attribute value to
--   search users or groups.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> Sensitive Text -> Filter

-- | The attribute path that is used to specify which attribute name to
--   search. Length limit is 255 characters. For example, <tt>UserName</tt>
--   is a valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
[$sel:attributePath:Filter'] :: Filter -> Text

-- | Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
[$sel:attributeValue:Filter'] :: Filter -> Sensitive Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributePath:Filter'</a>, <a>filter_attributePath</a> - The
--   attribute path that is used to specify which attribute name to search.
--   Length limit is 255 characters. For example, <tt>UserName</tt> is a
--   valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
--   
--   <a>$sel:attributeValue:Filter'</a>, <a>filter_attributeValue</a> -
--   Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
newFilter :: Text -> Text -> Filter

-- | The attribute path that is used to specify which attribute name to
--   search. Length limit is 255 characters. For example, <tt>UserName</tt>
--   is a valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
filter_attributePath :: Lens' Filter Text

-- | Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
filter_attributeValue :: Lens' Filter Text
instance GHC.Generics.Generic Network.AWS.IdentityStore.Types.Filter.Filter
instance GHC.Show.Show Network.AWS.IdentityStore.Types.Filter.Filter
instance GHC.Classes.Eq Network.AWS.IdentityStore.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Network.AWS.IdentityStore.Types.Filter.Filter
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IdentityStore.Types.Filter.Filter


module Network.AWS.IdentityStore.Types.Group

-- | A group object, which contains a specified group’s metadata and
--   attributes.
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Text -> Text -> Group

-- | The identifier for a group in the identity store.
[$sel:groupId:Group'] :: Group -> Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
[$sel:displayName:Group'] :: Group -> Text

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:Group'</a>, <a>group_groupId</a> - The identifier for
--   a group in the identity store.
--   
--   <a>$sel:displayName:Group'</a>, <a>group_displayName</a> - Contains
--   the group’s display name value. The length limit is 1,024 characters.
--   This value can consist of letters, accented characters, symbols,
--   numbers, punctuation, tab, new line, carriage return, space, and
--   nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
newGroup :: Text -> Text -> Group

-- | The identifier for a group in the identity store.
group_groupId :: Lens' Group Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
group_displayName :: Lens' Group Text
instance GHC.Generics.Generic Network.AWS.IdentityStore.Types.Group.Group
instance GHC.Show.Show Network.AWS.IdentityStore.Types.Group.Group
instance GHC.Read.Read Network.AWS.IdentityStore.Types.Group.Group
instance GHC.Classes.Eq Network.AWS.IdentityStore.Types.Group.Group
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IdentityStore.Types.Group.Group
instance Data.Hashable.Class.Hashable Network.AWS.IdentityStore.Types.Group.Group
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.Types.Group.Group


module Network.AWS.IdentityStore.Types.User

-- | A user object, which contains a specified user’s metadata and
--   attributes.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Sensitive Text -> Text -> User

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
[$sel:userName:User'] :: User -> Sensitive Text

-- | The identifier for a user in the identity store.
[$sel:userId:User'] :: User -> Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - Contains the user’s
--   user name value. The length limit is 128 characters. This value can
--   consist of letters, accented characters, symbols, numbers, and
--   punctuation. The characters <tt>&lt;&gt;;:%</tt> are excluded. This
--   value is specified at the time the user is created and stored as an
--   attribute of the user object in the identity store.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The identifier for a
--   user in the identity store.
newUser :: Text -> Text -> User

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
user_userName :: Lens' User Text

-- | The identifier for a user in the identity store.
user_userId :: Lens' User Text
instance GHC.Generics.Generic Network.AWS.IdentityStore.Types.User.User
instance GHC.Show.Show Network.AWS.IdentityStore.Types.User.User
instance GHC.Classes.Eq Network.AWS.IdentityStore.Types.User.User
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IdentityStore.Types.User.User
instance Data.Hashable.Class.Hashable Network.AWS.IdentityStore.Types.User.User
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.Types.User.User


module Network.AWS.IdentityStore.Types

-- | API version <tt>2020-06-15</tt> of the Amazon SSO Identity Store SDK
--   configuration.
defaultService :: Service

-- | The request failed because it contains a syntax error.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the principal has crossed the throttling limits of the
--   API operations.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception or failure with an internal server.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a requested resource is not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A query filter used by <tt>ListUsers</tt> and <tt>ListGroup</tt>. This
--   filter object provides the attribute name and attribute value to
--   search users or groups.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> Sensitive Text -> Filter

-- | The attribute path that is used to specify which attribute name to
--   search. Length limit is 255 characters. For example, <tt>UserName</tt>
--   is a valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
[$sel:attributePath:Filter'] :: Filter -> Text

-- | Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
[$sel:attributeValue:Filter'] :: Filter -> Sensitive Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributePath:Filter'</a>, <a>filter_attributePath</a> - The
--   attribute path that is used to specify which attribute name to search.
--   Length limit is 255 characters. For example, <tt>UserName</tt> is a
--   valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
--   
--   <a>$sel:attributeValue:Filter'</a>, <a>filter_attributeValue</a> -
--   Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
newFilter :: Text -> Text -> Filter

-- | The attribute path that is used to specify which attribute name to
--   search. Length limit is 255 characters. For example, <tt>UserName</tt>
--   is a valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
filter_attributePath :: Lens' Filter Text

-- | Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
filter_attributeValue :: Lens' Filter Text

-- | A group object, which contains a specified group’s metadata and
--   attributes.
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Text -> Text -> Group

-- | The identifier for a group in the identity store.
[$sel:groupId:Group'] :: Group -> Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
[$sel:displayName:Group'] :: Group -> Text

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:Group'</a>, <a>group_groupId</a> - The identifier for
--   a group in the identity store.
--   
--   <a>$sel:displayName:Group'</a>, <a>group_displayName</a> - Contains
--   the group’s display name value. The length limit is 1,024 characters.
--   This value can consist of letters, accented characters, symbols,
--   numbers, punctuation, tab, new line, carriage return, space, and
--   nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
newGroup :: Text -> Text -> Group

-- | The identifier for a group in the identity store.
group_groupId :: Lens' Group Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
group_displayName :: Lens' Group Text

-- | A user object, which contains a specified user’s metadata and
--   attributes.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Sensitive Text -> Text -> User

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
[$sel:userName:User'] :: User -> Sensitive Text

-- | The identifier for a user in the identity store.
[$sel:userId:User'] :: User -> Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - Contains the user’s
--   user name value. The length limit is 128 characters. This value can
--   consist of letters, accented characters, symbols, numbers, and
--   punctuation. The characters <tt>&lt;&gt;;:%</tt> are excluded. This
--   value is specified at the time the user is created and stored as an
--   attribute of the user object in the identity store.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The identifier for a
--   user in the identity store.
newUser :: Text -> Text -> User

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
user_userName :: Lens' User Text

-- | The identifier for a user in the identity store.
user_userId :: Lens' User Text


-- | Lists the attribute name and value of the user that you specified in
--   the search. We only support <tt>UserName</tt> as a valid filter
--   attribute path currently, and filter is required. This API returns
--   minimum attributes, including <tt>UserId</tt> and <tt>UserName</tt> in
--   the response.
module Network.AWS.IdentityStore.ListUsers

-- | <i>See:</i> <a>newListUsers</a> smart constructor.
data ListUsers
ListUsers' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> Text -> ListUsers

-- | A list of <tt>Filter</tt> objects, which is used in the
--   <tt>ListUsers</tt> and <tt>ListGroups</tt> request.
[$sel:filters:ListUsers'] :: ListUsers -> Maybe [Filter]

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
[$sel:nextToken:ListUsers'] :: ListUsers -> Maybe Text

-- | The maximum number of results to be returned per request. This
--   parameter is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt>
--   request to specify how many results to return in one page. The length
--   limit is 50 characters.
[$sel:maxResults:ListUsers'] :: ListUsers -> Maybe Natural

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
[$sel:identityStoreId:ListUsers'] :: ListUsers -> Text

-- | Create a value of <a>ListUsers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListUsers'</a>, <a>listUsers_filters</a> - A list of
--   <tt>Filter</tt> objects, which is used in the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> request.
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsers_nextToken</a> - The
--   pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
--   
--   <a>$sel:maxResults:ListUsers'</a>, <a>listUsers_maxResults</a> - The
--   maximum number of results to be returned per request. This parameter
--   is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt> request to
--   specify how many results to return in one page. The length limit is 50
--   characters.
--   
--   <a>$sel:identityStoreId:ListUsers'</a>,
--   <a>listUsers_identityStoreId</a> - The globally unique identifier for
--   the identity store, such as <tt>d-1234567890</tt>. In this example,
--   <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a randomly
--   generated string that contains number and lower case letters. This
--   value is generated at the time that a new identity store is created.
newListUsers :: Text -> ListUsers

-- | A list of <tt>Filter</tt> objects, which is used in the
--   <tt>ListUsers</tt> and <tt>ListGroups</tt> request.
listUsers_filters :: Lens' ListUsers (Maybe [Filter])

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
listUsers_nextToken :: Lens' ListUsers (Maybe Text)

-- | The maximum number of results to be returned per request. This
--   parameter is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt>
--   request to specify how many results to return in one page. The length
--   limit is 50 characters.
listUsers_maxResults :: Lens' ListUsers (Maybe Natural)

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
listUsers_identityStoreId :: Lens' ListUsers Text

-- | <i>See:</i> <a>newListUsersResponse</a> smart constructor.
data ListUsersResponse
ListUsersResponse' :: Maybe Text -> Int -> [User] -> ListUsersResponse

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
[$sel:nextToken:ListUsersResponse'] :: ListUsersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListUsersResponse'] :: ListUsersResponse -> Int

-- | A list of <tt>User</tt> objects in the identity store.
[$sel:users:ListUsersResponse'] :: ListUsersResponse -> [User]

-- | Create a value of <a>ListUsersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsersResponse_nextToken</a> -
--   The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
--   
--   <a>$sel:httpStatus:ListUsersResponse'</a>,
--   <a>listUsersResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:users:ListUsersResponse'</a>, <a>listUsersResponse_users</a> -
--   A list of <tt>User</tt> objects in the identity store.
newListUsersResponse :: Int -> ListUsersResponse

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
listUsersResponse_nextToken :: Lens' ListUsersResponse (Maybe Text)

-- | The response's http status code.
listUsersResponse_httpStatus :: Lens' ListUsersResponse Int

-- | A list of <tt>User</tt> objects in the identity store.
listUsersResponse_users :: Lens' ListUsersResponse [User]
instance GHC.Generics.Generic Network.AWS.IdentityStore.ListUsers.ListUsers
instance GHC.Show.Show Network.AWS.IdentityStore.ListUsers.ListUsers
instance GHC.Classes.Eq Network.AWS.IdentityStore.ListUsers.ListUsers
instance GHC.Generics.Generic Network.AWS.IdentityStore.ListUsers.ListUsersResponse
instance GHC.Show.Show Network.AWS.IdentityStore.ListUsers.ListUsersResponse
instance GHC.Classes.Eq Network.AWS.IdentityStore.ListUsers.ListUsersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IdentityStore.ListUsers.ListUsers
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.ListUsers.ListUsersResponse
instance Data.Hashable.Class.Hashable Network.AWS.IdentityStore.ListUsers.ListUsers
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.ListUsers.ListUsers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IdentityStore.ListUsers.ListUsers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IdentityStore.ListUsers.ListUsers
instance Network.AWS.Data.Path.ToPath Network.AWS.IdentityStore.ListUsers.ListUsers
instance Network.AWS.Data.Query.ToQuery Network.AWS.IdentityStore.ListUsers.ListUsers


-- | Lists the attribute name and value of the group that you specified in
--   the search. We only support <tt>DisplayName</tt> as a valid filter
--   attribute path currently, and filter is required. This API returns
--   minimum attributes, including <tt>GroupId</tt> and group
--   <tt>DisplayName</tt> in the response.
module Network.AWS.IdentityStore.ListGroups

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> Text -> ListGroups

-- | A list of <tt>Filter</tt> objects, which is used in the
--   <tt>ListUsers</tt> and <tt>ListGroups</tt> request.
[$sel:filters:ListGroups'] :: ListGroups -> Maybe [Filter]

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
[$sel:nextToken:ListGroups'] :: ListGroups -> Maybe Text

-- | The maximum number of results to be returned per request. This
--   parameter is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt>
--   request to specify how many results to return in one page. The length
--   limit is 50 characters.
[$sel:maxResults:ListGroups'] :: ListGroups -> Maybe Natural

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
[$sel:identityStoreId:ListGroups'] :: ListGroups -> Text

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListGroups'</a>, <a>listGroups_filters</a> - A list of
--   <tt>Filter</tt> objects, which is used in the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> request.
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - The
--   pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
--   
--   <a>$sel:maxResults:ListGroups'</a>, <a>listGroups_maxResults</a> - The
--   maximum number of results to be returned per request. This parameter
--   is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt> request to
--   specify how many results to return in one page. The length limit is 50
--   characters.
--   
--   <a>$sel:identityStoreId:ListGroups'</a>,
--   <a>listGroups_identityStoreId</a> - The globally unique identifier for
--   the identity store, such as <tt>d-1234567890</tt>. In this example,
--   <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a randomly
--   generated string that contains number and lower case letters. This
--   value is generated at the time that a new identity store is created.
newListGroups :: Text -> ListGroups

-- | A list of <tt>Filter</tt> objects, which is used in the
--   <tt>ListUsers</tt> and <tt>ListGroups</tt> request.
listGroups_filters :: Lens' ListGroups (Maybe [Filter])

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The maximum number of results to be returned per request. This
--   parameter is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt>
--   request to specify how many results to return in one page. The length
--   limit is 50 characters.
listGroups_maxResults :: Lens' ListGroups (Maybe Natural)

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
listGroups_identityStoreId :: Lens' ListGroups Text

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe Text -> Int -> [Group] -> ListGroupsResponse

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it1 is used in the API request to search for the next
--   page.
[$sel:nextToken:ListGroupsResponse'] :: ListGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGroupsResponse'] :: ListGroupsResponse -> Int

-- | A list of <tt>Group</tt> objects in the identity store.
[$sel:groups:ListGroupsResponse'] :: ListGroupsResponse -> [Group]

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it1 is used in the API request to search for the next
--   page.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - A list of <tt>Group</tt> objects in
--   the identity store.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it1 is used in the API request to search for the next
--   page.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int

-- | A list of <tt>Group</tt> objects in the identity store.
listGroupsResponse_groups :: Lens' ListGroupsResponse [Group]
instance GHC.Generics.Generic Network.AWS.IdentityStore.ListGroups.ListGroups
instance GHC.Show.Show Network.AWS.IdentityStore.ListGroups.ListGroups
instance GHC.Classes.Eq Network.AWS.IdentityStore.ListGroups.ListGroups
instance GHC.Generics.Generic Network.AWS.IdentityStore.ListGroups.ListGroupsResponse
instance GHC.Show.Show Network.AWS.IdentityStore.ListGroups.ListGroupsResponse
instance GHC.Read.Read Network.AWS.IdentityStore.ListGroups.ListGroupsResponse
instance GHC.Classes.Eq Network.AWS.IdentityStore.ListGroups.ListGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IdentityStore.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.ListGroups.ListGroupsResponse
instance Data.Hashable.Class.Hashable Network.AWS.IdentityStore.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.ListGroups.ListGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IdentityStore.ListGroups.ListGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IdentityStore.ListGroups.ListGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.IdentityStore.ListGroups.ListGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.IdentityStore.ListGroups.ListGroups


-- | Retrieves the user metadata and attributes from <tt>UserId</tt> in an
--   identity store.
module Network.AWS.IdentityStore.DescribeUser

-- | <i>See:</i> <a>newDescribeUser</a> smart constructor.
data DescribeUser
DescribeUser' :: Text -> Text -> DescribeUser

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
[$sel:identityStoreId:DescribeUser'] :: DescribeUser -> Text

-- | The identifier for a user in the identity store.
[$sel:userId:DescribeUser'] :: DescribeUser -> Text

-- | Create a value of <a>DescribeUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:DescribeUser'</a>,
--   <a>describeUser_identityStoreId</a> - The globally unique identifier
--   for the identity store, such as <tt>d-1234567890</tt>. In this
--   example, <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a
--   randomly generated string that contains number and lower case letters.
--   This value is generated at the time that a new identity store is
--   created.
--   
--   <a>$sel:userId:DescribeUser'</a>, <a>describeUser_userId</a> - The
--   identifier for a user in the identity store.
newDescribeUser :: Text -> Text -> DescribeUser

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
describeUser_identityStoreId :: Lens' DescribeUser Text

-- | The identifier for a user in the identity store.
describeUser_userId :: Lens' DescribeUser Text

-- | <i>See:</i> <a>newDescribeUserResponse</a> smart constructor.
data DescribeUserResponse
DescribeUserResponse' :: Int -> Sensitive Text -> Text -> DescribeUserResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeUserResponse'] :: DescribeUserResponse -> Int

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
[$sel:userName:DescribeUserResponse'] :: DescribeUserResponse -> Sensitive Text

-- | The identifier for a user in the identity store.
[$sel:userId:DescribeUserResponse'] :: DescribeUserResponse -> Text

-- | Create a value of <a>DescribeUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeUserResponse'</a>,
--   <a>describeUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:userName:DescribeUserResponse'</a>,
--   <a>describeUserResponse_userName</a> - Contains the user’s user name
--   value. The length limit is 128 characters. This value can consist of
--   letters, accented characters, symbols, numbers, and punctuation. The
--   characters <tt>&lt;&gt;;:%</tt> are excluded. This value is specified
--   at the time the user is created and stored as an attribute of the user
--   object in the identity store.
--   
--   <a>$sel:userId:DescribeUser'</a>, <a>describeUserResponse_userId</a> -
--   The identifier for a user in the identity store.
newDescribeUserResponse :: Int -> Text -> Text -> DescribeUserResponse

-- | The response's http status code.
describeUserResponse_httpStatus :: Lens' DescribeUserResponse Int

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
describeUserResponse_userName :: Lens' DescribeUserResponse Text

-- | The identifier for a user in the identity store.
describeUserResponse_userId :: Lens' DescribeUserResponse Text
instance GHC.Generics.Generic Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance GHC.Show.Show Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance GHC.Read.Read Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance GHC.Classes.Eq Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance GHC.Generics.Generic Network.AWS.IdentityStore.DescribeUser.DescribeUserResponse
instance GHC.Show.Show Network.AWS.IdentityStore.DescribeUser.DescribeUserResponse
instance GHC.Classes.Eq Network.AWS.IdentityStore.DescribeUser.DescribeUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.DescribeUser.DescribeUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance Network.AWS.Data.Path.ToPath Network.AWS.IdentityStore.DescribeUser.DescribeUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.IdentityStore.DescribeUser.DescribeUser


-- | Retrieves the group metadata and attributes from <tt>GroupId</tt> in
--   an identity store.
module Network.AWS.IdentityStore.DescribeGroup

-- | <i>See:</i> <a>newDescribeGroup</a> smart constructor.
data DescribeGroup
DescribeGroup' :: Text -> Text -> DescribeGroup

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
[$sel:identityStoreId:DescribeGroup'] :: DescribeGroup -> Text

-- | The identifier for a group in the identity store.
[$sel:groupId:DescribeGroup'] :: DescribeGroup -> Text

-- | Create a value of <a>DescribeGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:DescribeGroup'</a>,
--   <a>describeGroup_identityStoreId</a> - The globally unique identifier
--   for the identity store, such as <tt>d-1234567890</tt>. In this
--   example, <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a
--   randomly generated string that contains number and lower case letters.
--   This value is generated at the time that a new identity store is
--   created.
--   
--   <a>$sel:groupId:DescribeGroup'</a>, <a>describeGroup_groupId</a> - The
--   identifier for a group in the identity store.
newDescribeGroup :: Text -> Text -> DescribeGroup

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
describeGroup_identityStoreId :: Lens' DescribeGroup Text

-- | The identifier for a group in the identity store.
describeGroup_groupId :: Lens' DescribeGroup Text

-- | <i>See:</i> <a>newDescribeGroupResponse</a> smart constructor.
data DescribeGroupResponse
DescribeGroupResponse' :: Int -> Text -> Text -> DescribeGroupResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeGroupResponse'] :: DescribeGroupResponse -> Int

-- | The identifier for a group in the identity store.
[$sel:groupId:DescribeGroupResponse'] :: DescribeGroupResponse -> Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   that the group is created and stored as an attribute of the group
--   object in the identity store.
[$sel:displayName:DescribeGroupResponse'] :: DescribeGroupResponse -> Text

-- | Create a value of <a>DescribeGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeGroupResponse'</a>,
--   <a>describeGroupResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:groupId:DescribeGroup'</a>,
--   <a>describeGroupResponse_groupId</a> - The identifier for a group in
--   the identity store.
--   
--   <a>$sel:displayName:DescribeGroupResponse'</a>,
--   <a>describeGroupResponse_displayName</a> - Contains the group’s
--   display name value. The length limit is 1,024 characters. This value
--   can consist of letters, accented characters, symbols, numbers,
--   punctuation, tab, new line, carriage return, space, and nonbreaking
--   space in this attribute. The characters <tt>&lt;&gt;;:%</tt> are
--   excluded. This value is specified at the time that the group is
--   created and stored as an attribute of the group object in the identity
--   store.
newDescribeGroupResponse :: Int -> Text -> Text -> DescribeGroupResponse

-- | The response's http status code.
describeGroupResponse_httpStatus :: Lens' DescribeGroupResponse Int

-- | The identifier for a group in the identity store.
describeGroupResponse_groupId :: Lens' DescribeGroupResponse Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   that the group is created and stored as an attribute of the group
--   object in the identity store.
describeGroupResponse_displayName :: Lens' DescribeGroupResponse Text
instance GHC.Generics.Generic Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance GHC.Show.Show Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance GHC.Read.Read Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance GHC.Classes.Eq Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance GHC.Generics.Generic Network.AWS.IdentityStore.DescribeGroup.DescribeGroupResponse
instance GHC.Show.Show Network.AWS.IdentityStore.DescribeGroup.DescribeGroupResponse
instance GHC.Read.Read Network.AWS.IdentityStore.DescribeGroup.DescribeGroupResponse
instance GHC.Classes.Eq Network.AWS.IdentityStore.DescribeGroup.DescribeGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.DescribeGroup.DescribeGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance Control.DeepSeq.NFData Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.IdentityStore.DescribeGroup.DescribeGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.IdentityStore.DescribeGroup.DescribeGroup


module Network.AWS.IdentityStore.Lens

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
describeGroup_identityStoreId :: Lens' DescribeGroup Text

-- | The identifier for a group in the identity store.
describeGroup_groupId :: Lens' DescribeGroup Text

-- | The response's http status code.
describeGroupResponse_httpStatus :: Lens' DescribeGroupResponse Int

-- | The identifier for a group in the identity store.
describeGroupResponse_groupId :: Lens' DescribeGroupResponse Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   that the group is created and stored as an attribute of the group
--   object in the identity store.
describeGroupResponse_displayName :: Lens' DescribeGroupResponse Text

-- | A list of <tt>Filter</tt> objects, which is used in the
--   <tt>ListUsers</tt> and <tt>ListGroups</tt> request.
listUsers_filters :: Lens' ListUsers (Maybe [Filter])

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
listUsers_nextToken :: Lens' ListUsers (Maybe Text)

-- | The maximum number of results to be returned per request. This
--   parameter is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt>
--   request to specify how many results to return in one page. The length
--   limit is 50 characters.
listUsers_maxResults :: Lens' ListUsers (Maybe Natural)

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
listUsers_identityStoreId :: Lens' ListUsers Text

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
listUsersResponse_nextToken :: Lens' ListUsersResponse (Maybe Text)

-- | The response's http status code.
listUsersResponse_httpStatus :: Lens' ListUsersResponse Int

-- | A list of <tt>User</tt> objects in the identity store.
listUsersResponse_users :: Lens' ListUsersResponse [User]

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
describeUser_identityStoreId :: Lens' DescribeUser Text

-- | The identifier for a user in the identity store.
describeUser_userId :: Lens' DescribeUser Text

-- | The response's http status code.
describeUserResponse_httpStatus :: Lens' DescribeUserResponse Int

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
describeUserResponse_userName :: Lens' DescribeUserResponse Text

-- | The identifier for a user in the identity store.
describeUserResponse_userId :: Lens' DescribeUserResponse Text

-- | A list of <tt>Filter</tt> objects, which is used in the
--   <tt>ListUsers</tt> and <tt>ListGroups</tt> request.
listGroups_filters :: Lens' ListGroups (Maybe [Filter])

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The maximum number of results to be returned per request. This
--   parameter is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt>
--   request to specify how many results to return in one page. The length
--   limit is 50 characters.
listGroups_maxResults :: Lens' ListGroups (Maybe Natural)

-- | The globally unique identifier for the identity store, such as
--   <tt>d-1234567890</tt>. In this example, <tt>d-</tt> is a fixed prefix,
--   and <tt>1234567890</tt> is a randomly generated string that contains
--   number and lower case letters. This value is generated at the time
--   that a new identity store is created.
listGroups_identityStoreId :: Lens' ListGroups Text

-- | The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it1 is used in the API request to search for the next
--   page.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int

-- | A list of <tt>Group</tt> objects in the identity store.
listGroupsResponse_groups :: Lens' ListGroupsResponse [Group]

-- | The attribute path that is used to specify which attribute name to
--   search. Length limit is 255 characters. For example, <tt>UserName</tt>
--   is a valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
filter_attributePath :: Lens' Filter Text

-- | Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
filter_attributeValue :: Lens' Filter Text

-- | The identifier for a group in the identity store.
group_groupId :: Lens' Group Text

-- | Contains the group’s display name value. The length limit is 1,024
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, punctuation, tab, new line, carriage return, space,
--   and nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
group_displayName :: Lens' Group Text

-- | Contains the user’s user name value. The length limit is 128
--   characters. This value can consist of letters, accented characters,
--   symbols, numbers, and punctuation. The characters <tt>&lt;&gt;;:%</tt>
--   are excluded. This value is specified at the time the user is created
--   and stored as an attribute of the user object in the identity store.
user_userName :: Lens' User Text

-- | The identifier for a user in the identity store.
user_userId :: Lens' User Text


module Network.AWS.IdentityStore.Waiters


-- | Derived from API version <tt>2020-06-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The AWS Single Sign-On (SSO) Identity Store service provides a single
--   place to retrieve all of your identities (users and groups). For more
--   information about AWS, see the <a>AWS Single Sign-On User Guide</a>.
module Network.AWS.IdentityStore

-- | API version <tt>2020-06-15</tt> of the Amazon SSO Identity Store SDK
--   configuration.
defaultService :: Service

-- | The request failed because it contains a syntax error.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the principal has crossed the throttling limits of the
--   API operations.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception or failure with an internal server.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a requested resource is not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeGroup</a> smart constructor.
data DescribeGroup
DescribeGroup' :: Text -> Text -> DescribeGroup

-- | Create a value of <a>DescribeGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:DescribeGroup'</a>,
--   <a>describeGroup_identityStoreId</a> - The globally unique identifier
--   for the identity store, such as <tt>d-1234567890</tt>. In this
--   example, <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a
--   randomly generated string that contains number and lower case letters.
--   This value is generated at the time that a new identity store is
--   created.
--   
--   <a>$sel:groupId:DescribeGroup'</a>, <a>describeGroup_groupId</a> - The
--   identifier for a group in the identity store.
newDescribeGroup :: Text -> Text -> DescribeGroup

-- | <i>See:</i> <a>newDescribeGroupResponse</a> smart constructor.
data DescribeGroupResponse
DescribeGroupResponse' :: Int -> Text -> Text -> DescribeGroupResponse

-- | Create a value of <a>DescribeGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeGroupResponse'</a>,
--   <a>describeGroupResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:groupId:DescribeGroup'</a>,
--   <a>describeGroupResponse_groupId</a> - The identifier for a group in
--   the identity store.
--   
--   <a>$sel:displayName:DescribeGroupResponse'</a>,
--   <a>describeGroupResponse_displayName</a> - Contains the group’s
--   display name value. The length limit is 1,024 characters. This value
--   can consist of letters, accented characters, symbols, numbers,
--   punctuation, tab, new line, carriage return, space, and nonbreaking
--   space in this attribute. The characters <tt>&lt;&gt;;:%</tt> are
--   excluded. This value is specified at the time that the group is
--   created and stored as an attribute of the group object in the identity
--   store.
newDescribeGroupResponse :: Int -> Text -> Text -> DescribeGroupResponse

-- | <i>See:</i> <a>newListUsers</a> smart constructor.
data ListUsers
ListUsers' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> Text -> ListUsers

-- | Create a value of <a>ListUsers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListUsers'</a>, <a>listUsers_filters</a> - A list of
--   <tt>Filter</tt> objects, which is used in the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> request.
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsers_nextToken</a> - The
--   pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
--   
--   <a>$sel:maxResults:ListUsers'</a>, <a>listUsers_maxResults</a> - The
--   maximum number of results to be returned per request. This parameter
--   is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt> request to
--   specify how many results to return in one page. The length limit is 50
--   characters.
--   
--   <a>$sel:identityStoreId:ListUsers'</a>,
--   <a>listUsers_identityStoreId</a> - The globally unique identifier for
--   the identity store, such as <tt>d-1234567890</tt>. In this example,
--   <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a randomly
--   generated string that contains number and lower case letters. This
--   value is generated at the time that a new identity store is created.
newListUsers :: Text -> ListUsers

-- | <i>See:</i> <a>newListUsersResponse</a> smart constructor.
data ListUsersResponse
ListUsersResponse' :: Maybe Text -> Int -> [User] -> ListUsersResponse

-- | Create a value of <a>ListUsersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsersResponse_nextToken</a> -
--   The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
--   
--   <a>$sel:httpStatus:ListUsersResponse'</a>,
--   <a>listUsersResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:users:ListUsersResponse'</a>, <a>listUsersResponse_users</a> -
--   A list of <tt>User</tt> objects in the identity store.
newListUsersResponse :: Int -> ListUsersResponse

-- | <i>See:</i> <a>newDescribeUser</a> smart constructor.
data DescribeUser
DescribeUser' :: Text -> Text -> DescribeUser

-- | Create a value of <a>DescribeUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:DescribeUser'</a>,
--   <a>describeUser_identityStoreId</a> - The globally unique identifier
--   for the identity store, such as <tt>d-1234567890</tt>. In this
--   example, <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a
--   randomly generated string that contains number and lower case letters.
--   This value is generated at the time that a new identity store is
--   created.
--   
--   <a>$sel:userId:DescribeUser'</a>, <a>describeUser_userId</a> - The
--   identifier for a user in the identity store.
newDescribeUser :: Text -> Text -> DescribeUser

-- | <i>See:</i> <a>newDescribeUserResponse</a> smart constructor.
data DescribeUserResponse
DescribeUserResponse' :: Int -> Sensitive Text -> Text -> DescribeUserResponse

-- | Create a value of <a>DescribeUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeUserResponse'</a>,
--   <a>describeUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:userName:DescribeUserResponse'</a>,
--   <a>describeUserResponse_userName</a> - Contains the user’s user name
--   value. The length limit is 128 characters. This value can consist of
--   letters, accented characters, symbols, numbers, and punctuation. The
--   characters <tt>&lt;&gt;;:%</tt> are excluded. This value is specified
--   at the time the user is created and stored as an attribute of the user
--   object in the identity store.
--   
--   <a>$sel:userId:DescribeUser'</a>, <a>describeUserResponse_userId</a> -
--   The identifier for a user in the identity store.
newDescribeUserResponse :: Int -> Text -> Text -> DescribeUserResponse

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> Text -> ListGroups

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListGroups'</a>, <a>listGroups_filters</a> - A list of
--   <tt>Filter</tt> objects, which is used in the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> request.
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - The
--   pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it is used in the API request to search for the next
--   page.
--   
--   <a>$sel:maxResults:ListGroups'</a>, <a>listGroups_maxResults</a> - The
--   maximum number of results to be returned per request. This parameter
--   is used in the <tt>ListUsers</tt> and <tt>ListGroups</tt> request to
--   specify how many results to return in one page. The length limit is 50
--   characters.
--   
--   <a>$sel:identityStoreId:ListGroups'</a>,
--   <a>listGroups_identityStoreId</a> - The globally unique identifier for
--   the identity store, such as <tt>d-1234567890</tt>. In this example,
--   <tt>d-</tt> is a fixed prefix, and <tt>1234567890</tt> is a randomly
--   generated string that contains number and lower case letters. This
--   value is generated at the time that a new identity store is created.
newListGroups :: Text -> ListGroups

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe Text -> Int -> [Group] -> ListGroupsResponse

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - The pagination token used for the <tt>ListUsers</tt> and
--   <tt>ListGroups</tt> API operations. This value is generated by the
--   identity store service. It is returned in the API response if the
--   total results are more than the size of one page. This token is also
--   returned when it1 is used in the API request to search for the next
--   page.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - A list of <tt>Group</tt> objects in
--   the identity store.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | A query filter used by <tt>ListUsers</tt> and <tt>ListGroup</tt>. This
--   filter object provides the attribute name and attribute value to
--   search users or groups.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> Sensitive Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributePath:Filter'</a>, <a>filter_attributePath</a> - The
--   attribute path that is used to specify which attribute name to search.
--   Length limit is 255 characters. For example, <tt>UserName</tt> is a
--   valid attribute path for the <tt>ListUsers</tt> API, and
--   <tt>DisplayName</tt> is a valid attribute path for the
--   <tt>ListGroups</tt> API.
--   
--   <a>$sel:attributeValue:Filter'</a>, <a>filter_attributeValue</a> -
--   Represents the data for an attribute. Each attribute value is
--   described as a name-value pair.
newFilter :: Text -> Text -> Filter

-- | A group object, which contains a specified group’s metadata and
--   attributes.
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Text -> Text -> Group

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:Group'</a>, <a>group_groupId</a> - The identifier for
--   a group in the identity store.
--   
--   <a>$sel:displayName:Group'</a>, <a>group_displayName</a> - Contains
--   the group’s display name value. The length limit is 1,024 characters.
--   This value can consist of letters, accented characters, symbols,
--   numbers, punctuation, tab, new line, carriage return, space, and
--   nonbreaking space in this attribute. The characters
--   <tt>&lt;&gt;;:%</tt> are excluded. This value is specified at the time
--   the group is created and stored as an attribute of the group object in
--   the identity store.
newGroup :: Text -> Text -> Group

-- | A user object, which contains a specified user’s metadata and
--   attributes.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Sensitive Text -> Text -> User

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - Contains the user’s
--   user name value. The length limit is 128 characters. This value can
--   consist of letters, accented characters, symbols, numbers, and
--   punctuation. The characters <tt>&lt;&gt;;:%</tt> are excluded. This
--   value is specified at the time the user is created and stored as an
--   attribute of the user object in the identity store.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The identifier for a
--   user in the identity store.
newUser :: Text -> Text -> User
