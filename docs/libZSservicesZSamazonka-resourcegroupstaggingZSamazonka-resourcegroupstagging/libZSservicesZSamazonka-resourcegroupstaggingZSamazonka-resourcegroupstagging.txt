-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-resourcegroupstaggingZSamazonka-resourcegroupstagging
@version 1.6.1


module Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
--   
--   <i>See:</i> <a>newComplianceDetails</a> smart constructor.
data ComplianceDetails
ComplianceDetails' :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> ComplianceDetails

-- | Whether a resource is compliant with the effective tag policy.
[$sel:complianceStatus:ComplianceDetails'] :: ComplianceDetails -> Maybe Bool

-- | These tag keys on the resource are noncompliant with the effective tag
--   policy.
[$sel:noncompliantKeys:ComplianceDetails'] :: ComplianceDetails -> Maybe [Text]

-- | These are keys defined in the effective policy that are on the
--   resource with either incorrect case treatment or noncompliant values.
[$sel:keysWithNoncompliantValues:ComplianceDetails'] :: ComplianceDetails -> Maybe [Text]

-- | Create a value of <a>ComplianceDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceStatus:ComplianceDetails'</a>,
--   <a>complianceDetails_complianceStatus</a> - Whether a resource is
--   compliant with the effective tag policy.
--   
--   <a>$sel:noncompliantKeys:ComplianceDetails'</a>,
--   <a>complianceDetails_noncompliantKeys</a> - These tag keys on the
--   resource are noncompliant with the effective tag policy.
--   
--   <a>$sel:keysWithNoncompliantValues:ComplianceDetails'</a>,
--   <a>complianceDetails_keysWithNoncompliantValues</a> - These are keys
--   defined in the effective policy that are on the resource with either
--   incorrect case treatment or noncompliant values.
newComplianceDetails :: ComplianceDetails

-- | Whether a resource is compliant with the effective tag policy.
complianceDetails_complianceStatus :: Lens' ComplianceDetails (Maybe Bool)

-- | These tag keys on the resource are noncompliant with the effective tag
--   policy.
complianceDetails_noncompliantKeys :: Lens' ComplianceDetails (Maybe [Text])

-- | These are keys defined in the effective policy that are on the
--   resource with either incorrect case treatment or noncompliant values.
complianceDetails_keysWithNoncompliantValues :: Lens' ComplianceDetails (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails.ComplianceDetails
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails.ComplianceDetails
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails.ComplianceDetails
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails.ComplianceDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails.ComplianceDetails
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails.ComplianceDetails
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.ComplianceDetails.ComplianceDetails


module Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute
newtype GroupByAttribute
GroupByAttribute' :: Text -> GroupByAttribute
[fromGroupByAttribute] :: GroupByAttribute -> Text
pattern GroupByAttribute_REGION :: GroupByAttribute
pattern GroupByAttribute_RESOURCE_TYPE :: GroupByAttribute
pattern GroupByAttribute_TARGET_ID :: GroupByAttribute
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance GHC.Classes.Ord Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.GroupByAttribute.GroupByAttribute


module Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode
newtype ResourceErrorCode
ResourceErrorCode' :: Text -> ResourceErrorCode
[fromResourceErrorCode] :: ResourceErrorCode -> Text
pattern ResourceErrorCode_InternalServiceException :: ResourceErrorCode
pattern ResourceErrorCode_InvalidParameterException :: ResourceErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance GHC.Classes.Ord Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.ResourceErrorCode.ResourceErrorCode


module Network.AWS.ResourceGroupsTagging.Types.FailureInfo

-- | Information about the errors that are returned for each failed
--   resource. This information can include
--   <tt>InternalServiceException</tt> and
--   <tt>InvalidParameterException</tt> errors. It can also include any
--   valid error code returned by the AWS service that hosts the resource
--   that the ARN key represents.
--   
--   The following are common error codes that you might receive from other
--   AWS services:
--   
--   <ul>
--   <li><b>InternalServiceException</b> – This can mean that the Resource
--   Groups Tagging API didn't receive a response from another AWS service.
--   It can also mean the the resource type in the request is not supported
--   by the Resource Groups Tagging API. In these cases, it's safe to retry
--   the request and then call <a>GetResources</a> to verify the
--   changes.</li>
--   <li><b>AccessDeniedException</b> – This can mean that you need
--   permission to calling tagging operations in the AWS service that
--   contains the resource. For example, to use the Resource Groups Tagging
--   API to tag a CloudWatch alarm resource, you need permission to call
--   <a>TagResources</a> <i>and</i> <a>TagResource</a> in the CloudWatch
--   API.</li>
--   </ul>
--   
--   For more information on errors that are generated from other AWS
--   services, see the documentation for that service.
--   
--   <i>See:</i> <a>newFailureInfo</a> smart constructor.
data FailureInfo
FailureInfo' :: Maybe Int -> Maybe Text -> Maybe ResourceErrorCode -> FailureInfo

-- | The HTTP status code of the common error.
[$sel:statusCode:FailureInfo'] :: FailureInfo -> Maybe Int

-- | The message of the common error.
[$sel:errorMessage:FailureInfo'] :: FailureInfo -> Maybe Text

-- | The code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
[$sel:errorCode:FailureInfo'] :: FailureInfo -> Maybe ResourceErrorCode

-- | Create a value of <a>FailureInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusCode:FailureInfo'</a>, <a>failureInfo_statusCode</a> -
--   The HTTP status code of the common error.
--   
--   <a>$sel:errorMessage:FailureInfo'</a>, <a>failureInfo_errorMessage</a>
--   - The message of the common error.
--   
--   <a>$sel:errorCode:FailureInfo'</a>, <a>failureInfo_errorCode</a> - The
--   code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
newFailureInfo :: FailureInfo

-- | The HTTP status code of the common error.
failureInfo_statusCode :: Lens' FailureInfo (Maybe Int)

-- | The message of the common error.
failureInfo_errorMessage :: Lens' FailureInfo (Maybe Text)

-- | The code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
failureInfo_errorCode :: Lens' FailureInfo (Maybe ResourceErrorCode)
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.FailureInfo.FailureInfo
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.FailureInfo.FailureInfo
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.FailureInfo.FailureInfo
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.FailureInfo.FailureInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.FailureInfo.FailureInfo
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.FailureInfo.FailureInfo
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.FailureInfo.FailureInfo


module Network.AWS.ResourceGroupsTagging.Types.Tag

-- | The metadata that you apply to AWS resources to help you categorize
--   and organize them. Each tag consists of a key and a value, both of
--   which you define. For more information, see <a>Tagging AWS
--   Resources</a> in the <i>AWS General Reference</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:key:Tag'] :: Tag -> Text

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that makes up a tag. A key is a general label that acts like a
--   category for more specific tag values.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - One part of a key-value
--   pair that make up a tag. A value acts as a descriptor within a tag
--   category (key). The value can be empty or null.
newTag :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tag_key :: Lens' Tag Text

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.Tag.Tag


module Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping

-- | A list of resource ARNs and the tags (keys and values) that are
--   associated with each.
--   
--   <i>See:</i> <a>newResourceTagMapping</a> smart constructor.
data ResourceTagMapping
ResourceTagMapping' :: Maybe Text -> Maybe ComplianceDetails -> Maybe [Tag] -> ResourceTagMapping

-- | The ARN of the resource.
[$sel:resourceARN:ResourceTagMapping'] :: ResourceTagMapping -> Maybe Text

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
[$sel:complianceDetails:ResourceTagMapping'] :: ResourceTagMapping -> Maybe ComplianceDetails

-- | The tags that have been applied to one or more AWS resources.
[$sel:tags:ResourceTagMapping'] :: ResourceTagMapping -> Maybe [Tag]

-- | Create a value of <a>ResourceTagMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ResourceTagMapping'</a>,
--   <a>resourceTagMapping_resourceARN</a> - The ARN of the resource.
--   
--   <a>$sel:complianceDetails:ResourceTagMapping'</a>,
--   <a>resourceTagMapping_complianceDetails</a> - Information that shows
--   whether a resource is compliant with the effective tag policy,
--   including details on any noncompliant tag keys.
--   
--   <a>$sel:tags:ResourceTagMapping'</a>, <a>resourceTagMapping_tags</a> -
--   The tags that have been applied to one or more AWS resources.
newResourceTagMapping :: ResourceTagMapping

-- | The ARN of the resource.
resourceTagMapping_resourceARN :: Lens' ResourceTagMapping (Maybe Text)

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
resourceTagMapping_complianceDetails :: Lens' ResourceTagMapping (Maybe ComplianceDetails)

-- | The tags that have been applied to one or more AWS resources.
resourceTagMapping_tags :: Lens' ResourceTagMapping (Maybe [Tag])
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping.ResourceTagMapping
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping.ResourceTagMapping
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping.ResourceTagMapping
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping.ResourceTagMapping
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping.ResourceTagMapping
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping.ResourceTagMapping
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.ResourceTagMapping.ResourceTagMapping


module Network.AWS.ResourceGroupsTagging.Types.TagFilter

-- | A list of tags (keys and values) that are used to specify the
--   associated resources.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe [Text] -> TagFilter

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:key:TagFilter'] :: TagFilter -> Maybe Text

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
[$sel:values:TagFilter'] :: TagFilter -> Maybe [Text]

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - One part of a
--   key-value pair that makes up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - One part of a
--   key-value pair that make up a tag. A value acts as a descriptor within
--   a tag category (key). The value can be empty or null.
newTagFilter :: TagFilter

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
tagFilter_values :: Lens' TagFilter (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.TagFilter.TagFilter
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.TagFilter.TagFilter
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.TagFilter.TagFilter
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.TagFilter.TagFilter
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.TagFilter.TagFilter
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.TagFilter.TagFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.Types.TagFilter.TagFilter


module Network.AWS.ResourceGroupsTagging.Types.TargetIdType
newtype TargetIdType
TargetIdType' :: Text -> TargetIdType
[fromTargetIdType] :: TargetIdType -> Text
pattern TargetIdType_ACCOUNT :: TargetIdType
pattern TargetIdType_OU :: TargetIdType
pattern TargetIdType_ROOT :: TargetIdType
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance GHC.Classes.Ord Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.TargetIdType.TargetIdType


module Network.AWS.ResourceGroupsTagging.Types.Summary

-- | A count of noncompliant resources.
--   
--   <i>See:</i> <a>newSummary</a> smart constructor.
data Summary
Summary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe TargetIdType -> Maybe Integer -> Maybe Text -> Summary

-- | The account identifier or the root identifier of the organization. If
--   you don't know the root ID, you can call the AWS Organizations
--   <a>ListRoots</a> API.
[$sel:targetId:Summary'] :: Summary -> Maybe Text

-- | The AWS resource type.
[$sel:resourceType:Summary'] :: Summary -> Maybe Text

-- | The timestamp that shows when this summary was generated in this
--   Region.
[$sel:lastUpdated:Summary'] :: Summary -> Maybe Text

-- | Whether the target is an account, an OU, or the organization root.
[$sel:targetIdType:Summary'] :: Summary -> Maybe TargetIdType

-- | The count of noncompliant resources.
[$sel:nonCompliantResources:Summary'] :: Summary -> Maybe Integer

-- | The AWS Region that the summary applies to.
[$sel:region:Summary'] :: Summary -> Maybe Text

-- | Create a value of <a>Summary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:Summary'</a>, <a>summary_targetId</a> - The account
--   identifier or the root identifier of the organization. If you don't
--   know the root ID, you can call the AWS Organizations <a>ListRoots</a>
--   API.
--   
--   <a>$sel:resourceType:Summary'</a>, <a>summary_resourceType</a> - The
--   AWS resource type.
--   
--   <a>$sel:lastUpdated:Summary'</a>, <a>summary_lastUpdated</a> - The
--   timestamp that shows when this summary was generated in this Region.
--   
--   <a>$sel:targetIdType:Summary'</a>, <a>summary_targetIdType</a> -
--   Whether the target is an account, an OU, or the organization root.
--   
--   <a>$sel:nonCompliantResources:Summary'</a>,
--   <a>summary_nonCompliantResources</a> - The count of noncompliant
--   resources.
--   
--   <a>$sel:region:Summary'</a>, <a>summary_region</a> - The AWS Region
--   that the summary applies to.
newSummary :: Summary

-- | The account identifier or the root identifier of the organization. If
--   you don't know the root ID, you can call the AWS Organizations
--   <a>ListRoots</a> API.
summary_targetId :: Lens' Summary (Maybe Text)

-- | The AWS resource type.
summary_resourceType :: Lens' Summary (Maybe Text)

-- | The timestamp that shows when this summary was generated in this
--   Region.
summary_lastUpdated :: Lens' Summary (Maybe Text)

-- | Whether the target is an account, an OU, or the organization root.
summary_targetIdType :: Lens' Summary (Maybe TargetIdType)

-- | The count of noncompliant resources.
summary_nonCompliantResources :: Lens' Summary (Maybe Integer)

-- | The AWS Region that the summary applies to.
summary_region :: Lens' Summary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.Types.Summary.Summary
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.Types.Summary.Summary
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.Types.Summary.Summary
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.Types.Summary.Summary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroupsTagging.Types.Summary.Summary
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.Types.Summary.Summary
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.Types.Summary.Summary


module Network.AWS.ResourceGroupsTagging.Types

-- | API version <tt>2017-01-26</tt> of the Amazon Resource Groups Tagging
--   API SDK configuration.
defaultService :: Service

-- | A <tt>PaginationToken</tt> is valid for a maximum of 15 minutes. Your
--   request was denied because the specified <tt>PaginationToken</tt> has
--   expired.
_PaginationTokenExpiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied to limit the frequency of submitted requests.
_ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied because performing this operation violates a
--   constraint.
--   
--   Some of the reasons in the following list might not apply to this
--   specific operation.
--   
--   <ul>
--   <li>You must meet the prerequisites for using tag policies. For
--   information, see <a>Prerequisites and Permissions for Using Tag
--   Policies</a> in the <i>AWS Organizations User Guide.</i></li>
--   <li>You must enable the tag policies service principal
--   (<tt>tagpolicies.tag.amazonaws.com</tt>) to integrate with AWS
--   Organizations For information, see <a>EnableAWSServiceAccess</a>.</li>
--   <li>You must have a tag policy attached to the organization root, an
--   OU, or an account.</li>
--   </ul>
_ConstraintViolationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing failed because of an unknown error, exception,
--   or failure. You can retry the request.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target of the operation is currently being modified by a different
--   request. Try again later.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This error indicates one of the following:
--   
--   <ul>
--   <li>A parameter is missing.</li>
--   <li>A malformed string was supplied for the request parameter.</li>
--   <li>An out-of-range value was supplied for the request parameter.</li>
--   <li>The target ID is invalid, unsupported, or doesn't exist.</li>
--   <li>You can't access the Amazon S3 bucket for report storage. For more
--   information, see <a>Additional Requirements for Organization-wide Tag
--   Compliance Reports</a> in the <i>AWS Organizations User
--   Guide.</i></li>
--   </ul>
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError
newtype GroupByAttribute
GroupByAttribute' :: Text -> GroupByAttribute
[fromGroupByAttribute] :: GroupByAttribute -> Text
pattern GroupByAttribute_REGION :: GroupByAttribute
pattern GroupByAttribute_RESOURCE_TYPE :: GroupByAttribute
pattern GroupByAttribute_TARGET_ID :: GroupByAttribute
newtype ResourceErrorCode
ResourceErrorCode' :: Text -> ResourceErrorCode
[fromResourceErrorCode] :: ResourceErrorCode -> Text
pattern ResourceErrorCode_InternalServiceException :: ResourceErrorCode
pattern ResourceErrorCode_InvalidParameterException :: ResourceErrorCode
newtype TargetIdType
TargetIdType' :: Text -> TargetIdType
[fromTargetIdType] :: TargetIdType -> Text
pattern TargetIdType_ACCOUNT :: TargetIdType
pattern TargetIdType_OU :: TargetIdType
pattern TargetIdType_ROOT :: TargetIdType

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
--   
--   <i>See:</i> <a>newComplianceDetails</a> smart constructor.
data ComplianceDetails
ComplianceDetails' :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> ComplianceDetails

-- | Whether a resource is compliant with the effective tag policy.
[$sel:complianceStatus:ComplianceDetails'] :: ComplianceDetails -> Maybe Bool

-- | These tag keys on the resource are noncompliant with the effective tag
--   policy.
[$sel:noncompliantKeys:ComplianceDetails'] :: ComplianceDetails -> Maybe [Text]

-- | These are keys defined in the effective policy that are on the
--   resource with either incorrect case treatment or noncompliant values.
[$sel:keysWithNoncompliantValues:ComplianceDetails'] :: ComplianceDetails -> Maybe [Text]

-- | Create a value of <a>ComplianceDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceStatus:ComplianceDetails'</a>,
--   <a>complianceDetails_complianceStatus</a> - Whether a resource is
--   compliant with the effective tag policy.
--   
--   <a>$sel:noncompliantKeys:ComplianceDetails'</a>,
--   <a>complianceDetails_noncompliantKeys</a> - These tag keys on the
--   resource are noncompliant with the effective tag policy.
--   
--   <a>$sel:keysWithNoncompliantValues:ComplianceDetails'</a>,
--   <a>complianceDetails_keysWithNoncompliantValues</a> - These are keys
--   defined in the effective policy that are on the resource with either
--   incorrect case treatment or noncompliant values.
newComplianceDetails :: ComplianceDetails

-- | Whether a resource is compliant with the effective tag policy.
complianceDetails_complianceStatus :: Lens' ComplianceDetails (Maybe Bool)

-- | These tag keys on the resource are noncompliant with the effective tag
--   policy.
complianceDetails_noncompliantKeys :: Lens' ComplianceDetails (Maybe [Text])

-- | These are keys defined in the effective policy that are on the
--   resource with either incorrect case treatment or noncompliant values.
complianceDetails_keysWithNoncompliantValues :: Lens' ComplianceDetails (Maybe [Text])

-- | Information about the errors that are returned for each failed
--   resource. This information can include
--   <tt>InternalServiceException</tt> and
--   <tt>InvalidParameterException</tt> errors. It can also include any
--   valid error code returned by the AWS service that hosts the resource
--   that the ARN key represents.
--   
--   The following are common error codes that you might receive from other
--   AWS services:
--   
--   <ul>
--   <li><b>InternalServiceException</b> – This can mean that the Resource
--   Groups Tagging API didn't receive a response from another AWS service.
--   It can also mean the the resource type in the request is not supported
--   by the Resource Groups Tagging API. In these cases, it's safe to retry
--   the request and then call <a>GetResources</a> to verify the
--   changes.</li>
--   <li><b>AccessDeniedException</b> – This can mean that you need
--   permission to calling tagging operations in the AWS service that
--   contains the resource. For example, to use the Resource Groups Tagging
--   API to tag a CloudWatch alarm resource, you need permission to call
--   <a>TagResources</a> <i>and</i> <a>TagResource</a> in the CloudWatch
--   API.</li>
--   </ul>
--   
--   For more information on errors that are generated from other AWS
--   services, see the documentation for that service.
--   
--   <i>See:</i> <a>newFailureInfo</a> smart constructor.
data FailureInfo
FailureInfo' :: Maybe Int -> Maybe Text -> Maybe ResourceErrorCode -> FailureInfo

-- | The HTTP status code of the common error.
[$sel:statusCode:FailureInfo'] :: FailureInfo -> Maybe Int

-- | The message of the common error.
[$sel:errorMessage:FailureInfo'] :: FailureInfo -> Maybe Text

-- | The code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
[$sel:errorCode:FailureInfo'] :: FailureInfo -> Maybe ResourceErrorCode

-- | Create a value of <a>FailureInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusCode:FailureInfo'</a>, <a>failureInfo_statusCode</a> -
--   The HTTP status code of the common error.
--   
--   <a>$sel:errorMessage:FailureInfo'</a>, <a>failureInfo_errorMessage</a>
--   - The message of the common error.
--   
--   <a>$sel:errorCode:FailureInfo'</a>, <a>failureInfo_errorCode</a> - The
--   code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
newFailureInfo :: FailureInfo

-- | The HTTP status code of the common error.
failureInfo_statusCode :: Lens' FailureInfo (Maybe Int)

-- | The message of the common error.
failureInfo_errorMessage :: Lens' FailureInfo (Maybe Text)

-- | The code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
failureInfo_errorCode :: Lens' FailureInfo (Maybe ResourceErrorCode)

-- | A list of resource ARNs and the tags (keys and values) that are
--   associated with each.
--   
--   <i>See:</i> <a>newResourceTagMapping</a> smart constructor.
data ResourceTagMapping
ResourceTagMapping' :: Maybe Text -> Maybe ComplianceDetails -> Maybe [Tag] -> ResourceTagMapping

-- | The ARN of the resource.
[$sel:resourceARN:ResourceTagMapping'] :: ResourceTagMapping -> Maybe Text

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
[$sel:complianceDetails:ResourceTagMapping'] :: ResourceTagMapping -> Maybe ComplianceDetails

-- | The tags that have been applied to one or more AWS resources.
[$sel:tags:ResourceTagMapping'] :: ResourceTagMapping -> Maybe [Tag]

-- | Create a value of <a>ResourceTagMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ResourceTagMapping'</a>,
--   <a>resourceTagMapping_resourceARN</a> - The ARN of the resource.
--   
--   <a>$sel:complianceDetails:ResourceTagMapping'</a>,
--   <a>resourceTagMapping_complianceDetails</a> - Information that shows
--   whether a resource is compliant with the effective tag policy,
--   including details on any noncompliant tag keys.
--   
--   <a>$sel:tags:ResourceTagMapping'</a>, <a>resourceTagMapping_tags</a> -
--   The tags that have been applied to one or more AWS resources.
newResourceTagMapping :: ResourceTagMapping

-- | The ARN of the resource.
resourceTagMapping_resourceARN :: Lens' ResourceTagMapping (Maybe Text)

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
resourceTagMapping_complianceDetails :: Lens' ResourceTagMapping (Maybe ComplianceDetails)

-- | The tags that have been applied to one or more AWS resources.
resourceTagMapping_tags :: Lens' ResourceTagMapping (Maybe [Tag])

-- | A count of noncompliant resources.
--   
--   <i>See:</i> <a>newSummary</a> smart constructor.
data Summary
Summary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe TargetIdType -> Maybe Integer -> Maybe Text -> Summary

-- | The account identifier or the root identifier of the organization. If
--   you don't know the root ID, you can call the AWS Organizations
--   <a>ListRoots</a> API.
[$sel:targetId:Summary'] :: Summary -> Maybe Text

-- | The AWS resource type.
[$sel:resourceType:Summary'] :: Summary -> Maybe Text

-- | The timestamp that shows when this summary was generated in this
--   Region.
[$sel:lastUpdated:Summary'] :: Summary -> Maybe Text

-- | Whether the target is an account, an OU, or the organization root.
[$sel:targetIdType:Summary'] :: Summary -> Maybe TargetIdType

-- | The count of noncompliant resources.
[$sel:nonCompliantResources:Summary'] :: Summary -> Maybe Integer

-- | The AWS Region that the summary applies to.
[$sel:region:Summary'] :: Summary -> Maybe Text

-- | Create a value of <a>Summary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:Summary'</a>, <a>summary_targetId</a> - The account
--   identifier or the root identifier of the organization. If you don't
--   know the root ID, you can call the AWS Organizations <a>ListRoots</a>
--   API.
--   
--   <a>$sel:resourceType:Summary'</a>, <a>summary_resourceType</a> - The
--   AWS resource type.
--   
--   <a>$sel:lastUpdated:Summary'</a>, <a>summary_lastUpdated</a> - The
--   timestamp that shows when this summary was generated in this Region.
--   
--   <a>$sel:targetIdType:Summary'</a>, <a>summary_targetIdType</a> -
--   Whether the target is an account, an OU, or the organization root.
--   
--   <a>$sel:nonCompliantResources:Summary'</a>,
--   <a>summary_nonCompliantResources</a> - The count of noncompliant
--   resources.
--   
--   <a>$sel:region:Summary'</a>, <a>summary_region</a> - The AWS Region
--   that the summary applies to.
newSummary :: Summary

-- | The account identifier or the root identifier of the organization. If
--   you don't know the root ID, you can call the AWS Organizations
--   <a>ListRoots</a> API.
summary_targetId :: Lens' Summary (Maybe Text)

-- | The AWS resource type.
summary_resourceType :: Lens' Summary (Maybe Text)

-- | The timestamp that shows when this summary was generated in this
--   Region.
summary_lastUpdated :: Lens' Summary (Maybe Text)

-- | Whether the target is an account, an OU, or the organization root.
summary_targetIdType :: Lens' Summary (Maybe TargetIdType)

-- | The count of noncompliant resources.
summary_nonCompliantResources :: Lens' Summary (Maybe Integer)

-- | The AWS Region that the summary applies to.
summary_region :: Lens' Summary (Maybe Text)

-- | The metadata that you apply to AWS resources to help you categorize
--   and organize them. Each tag consists of a key and a value, both of
--   which you define. For more information, see <a>Tagging AWS
--   Resources</a> in the <i>AWS General Reference</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:key:Tag'] :: Tag -> Text

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that makes up a tag. A key is a general label that acts like a
--   category for more specific tag values.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - One part of a key-value
--   pair that make up a tag. A value acts as a descriptor within a tag
--   category (key). The value can be empty or null.
newTag :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tag_key :: Lens' Tag Text

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
tag_value :: Lens' Tag Text

-- | A list of tags (keys and values) that are used to specify the
--   associated resources.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe [Text] -> TagFilter

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:key:TagFilter'] :: TagFilter -> Maybe Text

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
[$sel:values:TagFilter'] :: TagFilter -> Maybe [Text]

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - One part of a
--   key-value pair that makes up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - One part of a
--   key-value pair that make up a tag. A value acts as a descriptor within
--   a tag category (key). The value can be empty or null.
newTagFilter :: TagFilter

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
tagFilter_values :: Lens' TagFilter (Maybe [Text])


-- | Applies one or more tags to the specified resources. Note the
--   following:
--   
--   <ul>
--   <li>Not all resources can have tags. For a list of services with
--   resources that support tagging using this operation, see <a>Services
--   that support the Resource Groups Tagging API</a>.</li>
--   <li>Each resource can have up to 50 tags. For other limits, see <a>Tag
--   Naming and Usage Conventions</a> in the <i>AWS General
--   Reference.</i></li>
--   <li>You can only tag resources that are located in the specified AWS
--   Region for the AWS account.</li>
--   <li>To add tags to a resource, you need the necessary permissions for
--   the service that the resource belongs to as well as permissions for
--   adding tags. For more information, see the documentation for each
--   service.</li>
--   </ul>
--   
--   Do not store personally identifiable information (PII) or other
--   confidential or sensitive information in tags. We use tags to provide
--   you with billing and administration services. Tags are not intended to
--   be used for private or sensitive data.
module Network.AWS.ResourceGroupsTagging.TagResources

-- | <i>See:</i> <a>newTagResources</a> smart constructor.
data TagResources
TagResources' :: NonEmpty Text -> HashMap Text Text -> TagResources

-- | Specifies the list of ARNs of the resources that you want to apply
--   tags to.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
[$sel:resourceARNList:TagResources'] :: TagResources -> NonEmpty Text

-- | Specifies a list of tags that you want to add to the specified
--   resources. A tag consists of a key and a value that you define.
[$sel:tags:TagResources'] :: TagResources -> HashMap Text Text

-- | Create a value of <a>TagResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARNList:TagResources'</a>,
--   <a>tagResources_resourceARNList</a> - Specifies the list of ARNs of
--   the resources that you want to apply tags to.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:tags:TagResources'</a>, <a>tagResources_tags</a> - Specifies a
--   list of tags that you want to add to the specified resources. A tag
--   consists of a key and a value that you define.
newTagResources :: NonEmpty Text -> TagResources

-- | Specifies the list of ARNs of the resources that you want to apply
--   tags to.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
tagResources_resourceARNList :: Lens' TagResources (NonEmpty Text)

-- | Specifies a list of tags that you want to add to the specified
--   resources. A tag consists of a key and a value that you define.
tagResources_tags :: Lens' TagResources (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourcesResponse</a> smart constructor.
data TagResourcesResponse
TagResourcesResponse' :: Maybe (HashMap Text FailureInfo) -> Int -> TagResourcesResponse

-- | A map containing a key-value pair for each failed item that couldn't
--   be tagged. The key is the ARN of the failed resource. The value is a
--   <tt>FailureInfo</tt> object that contains an error code, a status
--   code, and an error message. If there are no errors, the
--   <tt>FailedResourcesMap</tt> is empty.
[$sel:failedResourcesMap:TagResourcesResponse'] :: TagResourcesResponse -> Maybe (HashMap Text FailureInfo)

-- | The response's http status code.
[$sel:httpStatus:TagResourcesResponse'] :: TagResourcesResponse -> Int

-- | Create a value of <a>TagResourcesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedResourcesMap:TagResourcesResponse'</a>,
--   <a>tagResourcesResponse_failedResourcesMap</a> - A map containing a
--   key-value pair for each failed item that couldn't be tagged. The key
--   is the ARN of the failed resource. The value is a <tt>FailureInfo</tt>
--   object that contains an error code, a status code, and an error
--   message. If there are no errors, the <tt>FailedResourcesMap</tt> is
--   empty.
--   
--   <a>$sel:httpStatus:TagResourcesResponse'</a>,
--   <a>tagResourcesResponse_httpStatus</a> - The response's http status
--   code.
newTagResourcesResponse :: Int -> TagResourcesResponse

-- | A map containing a key-value pair for each failed item that couldn't
--   be tagged. The key is the ARN of the failed resource. The value is a
--   <tt>FailureInfo</tt> object that contains an error code, a status
--   code, and an error message. If there are no errors, the
--   <tt>FailedResourcesMap</tt> is empty.
tagResourcesResponse_failedResourcesMap :: Lens' TagResourcesResponse (Maybe (HashMap Text FailureInfo))

-- | The response's http status code.
tagResourcesResponse_httpStatus :: Lens' TagResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.TagResources.TagResourcesResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.TagResources.TagResourcesResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.TagResources.TagResourcesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.TagResources.TagResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.TagResources.TagResourcesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.TagResources.TagResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.TagResources.TagResources


-- | Generates a report that lists all tagged resources in the accounts
--   across your organization and tells whether each resource is compliant
--   with the effective tag policy. Compliance data is refreshed daily. The
--   report is generated asynchronously.
--   
--   The generated report is saved to the following location:
--   
--   <pre>
--   s3://example-bucket/AwsTagPolicies/o-exampleorgid/YYYY-MM-ddTHH:mm:ssZ/report.csv
--   </pre>
--   
--   You can call this operation only from the organization's management
--   account and from the us-east-1 Region.
module Network.AWS.ResourceGroupsTagging.StartReportCreation

-- | <i>See:</i> <a>newStartReportCreation</a> smart constructor.
data StartReportCreation
StartReportCreation' :: Text -> StartReportCreation

-- | The name of the Amazon S3 bucket where the report will be stored; for
--   example:
--   
--   <pre>
--   awsexamplebucket
--   </pre>
--   
--   For more information on S3 bucket requirements, including an example
--   bucket policy, see the example S3 bucket policy on this page.
[$sel:s3Bucket:StartReportCreation'] :: StartReportCreation -> Text

-- | Create a value of <a>StartReportCreation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Bucket:StartReportCreation'</a>,
--   <a>startReportCreation_s3Bucket</a> - The name of the Amazon S3 bucket
--   where the report will be stored; for example:
--   
--   <pre>
--   awsexamplebucket
--   </pre>
--   
--   For more information on S3 bucket requirements, including an example
--   bucket policy, see the example S3 bucket policy on this page.
newStartReportCreation :: Text -> StartReportCreation

-- | The name of the Amazon S3 bucket where the report will be stored; for
--   example:
--   
--   <pre>
--   awsexamplebucket
--   </pre>
--   
--   For more information on S3 bucket requirements, including an example
--   bucket policy, see the example S3 bucket policy on this page.
startReportCreation_s3Bucket :: Lens' StartReportCreation Text

-- | <i>See:</i> <a>newStartReportCreationResponse</a> smart constructor.
data StartReportCreationResponse
StartReportCreationResponse' :: Int -> StartReportCreationResponse

-- | The response's http status code.
[$sel:httpStatus:StartReportCreationResponse'] :: StartReportCreationResponse -> Int

-- | Create a value of <a>StartReportCreationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartReportCreationResponse'</a>,
--   <a>startReportCreationResponse_httpStatus</a> - The response's http
--   status code.
newStartReportCreationResponse :: Int -> StartReportCreationResponse

-- | The response's http status code.
startReportCreationResponse_httpStatus :: Lens' StartReportCreationResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreationResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreationResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreationResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreationResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.StartReportCreation.StartReportCreation


-- | Returns all tag values for the specified key that are used in the
--   specified AWS Region for the calling AWS account.
--   
--   This operation supports pagination, where the response can be sent in
--   multiple pages. You should check the <tt>PaginationToken</tt> response
--   parameter to determine if there are additional results available to
--   return. Repeat the query, passing the <tt>PaginationToken</tt>
--   response parameter value as an input to the next request until you
--   recieve a <tt>null</tt> value. A null value for
--   <tt>PaginationToken</tt> indicates that there are no more results
--   waiting to be returned.
--   
--   This operation returns paginated results.
module Network.AWS.ResourceGroupsTagging.GetTagValues

-- | <i>See:</i> <a>newGetTagValues</a> smart constructor.
data GetTagValues
GetTagValues' :: Maybe Text -> Text -> GetTagValues

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
[$sel:paginationToken:GetTagValues'] :: GetTagValues -> Maybe Text

-- | Specifies the tag key for which you want to list all existing values
--   that are currently used in the specified AWS Region for the calling
--   AWS account.
[$sel:key:GetTagValues'] :: GetTagValues -> Text

-- | Create a value of <a>GetTagValues</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetTagValues'</a>,
--   <a>getTagValues_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
--   
--   <a>$sel:key:GetTagValues'</a>, <a>getTagValues_key</a> - Specifies the
--   tag key for which you want to list all existing values that are
--   currently used in the specified AWS Region for the calling AWS
--   account.
newGetTagValues :: Text -> GetTagValues

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getTagValues_paginationToken :: Lens' GetTagValues (Maybe Text)

-- | Specifies the tag key for which you want to list all existing values
--   that are currently used in the specified AWS Region for the calling
--   AWS account.
getTagValues_key :: Lens' GetTagValues Text

-- | <i>See:</i> <a>newGetTagValuesResponse</a> smart constructor.
data GetTagValuesResponse
GetTagValuesResponse' :: Maybe Text -> Maybe [Text] -> Int -> GetTagValuesResponse

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
[$sel:paginationToken:GetTagValuesResponse'] :: GetTagValuesResponse -> Maybe Text

-- | A list of all tag values for the specified key currently used in the
--   specified AWS Region for the calling AWS account.
[$sel:tagValues:GetTagValuesResponse'] :: GetTagValuesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:GetTagValuesResponse'] :: GetTagValuesResponse -> Int

-- | Create a value of <a>GetTagValuesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetTagValues'</a>,
--   <a>getTagValuesResponse_paginationToken</a> - A string that indicates
--   that there is more data available than this response contains. To
--   receive the next part of the response, specify this response value as
--   the <tt>PaginationToken</tt> value in the request for the next page.
--   
--   <a>$sel:tagValues:GetTagValuesResponse'</a>,
--   <a>getTagValuesResponse_tagValues</a> - A list of all tag values for
--   the specified key currently used in the specified AWS Region for the
--   calling AWS account.
--   
--   <a>$sel:httpStatus:GetTagValuesResponse'</a>,
--   <a>getTagValuesResponse_httpStatus</a> - The response's http status
--   code.
newGetTagValuesResponse :: Int -> GetTagValuesResponse

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getTagValuesResponse_paginationToken :: Lens' GetTagValuesResponse (Maybe Text)

-- | A list of all tag values for the specified key currently used in the
--   specified AWS Region for the calling AWS account.
getTagValuesResponse_tagValues :: Lens' GetTagValuesResponse (Maybe [Text])

-- | The response's http status code.
getTagValuesResponse_httpStatus :: Lens' GetTagValuesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValuesResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValuesResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValuesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValuesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValuesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.GetTagValues.GetTagValues


-- | Returns all tag keys currently in use in the specified Region for the
--   calling AWS account.
--   
--   This operation supports pagination, where the response can be sent in
--   multiple pages. You should check the <tt>PaginationToken</tt> response
--   parameter to determine if there are additional results available to
--   return. Repeat the query, passing the <tt>PaginationToken</tt>
--   response parameter value as an input to the next request until you
--   recieve a <tt>null</tt> value. A null value for
--   <tt>PaginationToken</tt> indicates that there are no more results
--   waiting to be returned.
--   
--   This operation returns paginated results.
module Network.AWS.ResourceGroupsTagging.GetTagKeys

-- | <i>See:</i> <a>newGetTagKeys</a> smart constructor.
data GetTagKeys
GetTagKeys' :: Maybe Text -> GetTagKeys

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
[$sel:paginationToken:GetTagKeys'] :: GetTagKeys -> Maybe Text

-- | Create a value of <a>GetTagKeys</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetTagKeys'</a>,
--   <a>getTagKeys_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
newGetTagKeys :: GetTagKeys

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getTagKeys_paginationToken :: Lens' GetTagKeys (Maybe Text)

-- | <i>See:</i> <a>newGetTagKeysResponse</a> smart constructor.
data GetTagKeysResponse
GetTagKeysResponse' :: Maybe [Text] -> Maybe Text -> Int -> GetTagKeysResponse

-- | A list of all tag keys in the AWS account.
[$sel:tagKeys:GetTagKeysResponse'] :: GetTagKeysResponse -> Maybe [Text]

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
[$sel:paginationToken:GetTagKeysResponse'] :: GetTagKeysResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetTagKeysResponse'] :: GetTagKeysResponse -> Int

-- | Create a value of <a>GetTagKeysResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:GetTagKeysResponse'</a>,
--   <a>getTagKeysResponse_tagKeys</a> - A list of all tag keys in the AWS
--   account.
--   
--   <a>$sel:paginationToken:GetTagKeys'</a>,
--   <a>getTagKeysResponse_paginationToken</a> - A string that indicates
--   that there is more data available than this response contains. To
--   receive the next part of the response, specify this response value as
--   the <tt>PaginationToken</tt> value in the request for the next page.
--   
--   <a>$sel:httpStatus:GetTagKeysResponse'</a>,
--   <a>getTagKeysResponse_httpStatus</a> - The response's http status
--   code.
newGetTagKeysResponse :: Int -> GetTagKeysResponse

-- | A list of all tag keys in the AWS account.
getTagKeysResponse_tagKeys :: Lens' GetTagKeysResponse (Maybe [Text])

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getTagKeysResponse_paginationToken :: Lens' GetTagKeysResponse (Maybe Text)

-- | The response's http status code.
getTagKeysResponse_httpStatus :: Lens' GetTagKeysResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeysResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeysResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeysResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeysResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeysResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.GetTagKeys.GetTagKeys


-- | Returns all the tagged or previously tagged resources that are located
--   in the specified Region for the AWS account.
--   
--   Depending on what information you want returned, you can also specify
--   the following:
--   
--   <ul>
--   <li><i>Filters</i> that specify what tags and resource types you want
--   returned. The response includes all tags that are associated with the
--   requested resources.</li>
--   <li>Information about compliance with the account's effective tag
--   policy. For more information on tag policies, see <a>Tag Policies</a>
--   in the <i>AWS Organizations User Guide.</i></li>
--   </ul>
--   
--   This operation supports pagination, where the response can be sent in
--   multiple pages. You should check the <tt>PaginationToken</tt> response
--   parameter to determine if there are additional results available to
--   return. Repeat the query, passing the <tt>PaginationToken</tt>
--   response parameter value as an input to the next request until you
--   recieve a <tt>null</tt> value. A null value for
--   <tt>PaginationToken</tt> indicates that there are no more results
--   waiting to be returned.
--   
--   This operation returns paginated results.
module Network.AWS.ResourceGroupsTagging.GetResources

-- | <i>See:</i> <a>newGetResources</a> smart constructor.
data GetResources
GetResources' :: Maybe [TagFilter] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Text) -> GetResources

-- | Specifies a list of TagFilters (keys and values) to restrict the
--   output to only those resources that have the specified tag and, if
--   included, the specified value. Each <tt>TagFilter</tt> must contain a
--   key with values optional. A request can include up to 50 keys, and
--   each key can include up to 20 values.
--   
--   Note the following when deciding how to use TagFilters:
--   
--   <ul>
--   <li>If you <i>don't</i> specify a <tt>TagFilter</tt>, the response
--   includes all resources that are currently tagged or ever had a tag.
--   Resources that currently don't have tags are shown with an empty tag
--   set, like this: <tt>"Tags": []</tt>.</li>
--   <li>If you specify more than one filter in a single request, the
--   response returns only those resources that satisfy all filters.</li>
--   <li>If you specify a filter that contains more than one value for a
--   key, the response returns resources that match any of the specified
--   values for that key.</li>
--   <li>If you don't specify any values for a key, the response returns
--   resources that are tagged with that key and any or no value.For
--   example, for the following filters: <tt>filter1= {keyA,{value1}}</tt>,
--   <tt>filter2={keyB,{value2,value3,value4}}</tt>, <tt>filter3=
--   {keyC}</tt>:<ul><li><tt>GetResources({filter1})</tt> returns resources
--   tagged with
--   <tt>key1=value1</tt></li><li><tt>GetResources({filter2})</tt> returns
--   resources tagged with <tt>key2=value2</tt> or <tt>key2=value3</tt> or
--   <tt>key2=value4</tt></li><li><tt>GetResources({filter3})</tt> returns
--   resources tagged with any tag with the key <tt>key3</tt>, and with any
--   or no value</li><li><tt>GetResources({filter1,filter2,filter3})</tt>
--   returns resources tagged with <tt>(key1=value1) and (key2=value2 or
--   key2=value3 or key2=value4) and (key3, any or no
--   value)</tt></li></ul></li>
--   </ul>
[$sel:tagFilters:GetResources'] :: GetResources -> Maybe [TagFilter]

-- | Specifies whether to include details regarding the compliance with the
--   effective tag policy. Set this to <tt>true</tt> to determine whether
--   resources are compliant with the tag policy and to get details.
[$sel:includeComplianceDetails:GetResources'] :: GetResources -> Maybe Bool

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
[$sel:paginationToken:GetResources'] :: GetResources -> Maybe Text

-- | Specifies the resource types that you want included in the response.
--   The format of each resource type is <tt>service[:resourceType]</tt>.
--   For example, specifying a resource type of <tt>ec2</tt> returns all
--   Amazon EC2 resources (which includes EC2 instances). Specifying a
--   resource type of <tt>ec2:instance</tt> returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and AWS Service Namespaces</a>.
--   
--   You can specify multiple resource types by using an array. The array
--   can include up to 100 items. Note that the length constraint
--   requirement applies to each resource type filter.
[$sel:resourceTypeFilters:GetResources'] :: GetResources -> Maybe [Text]

-- | Specifies whether to exclude resources that are compliant with the tag
--   policy. Set this to <tt>true</tt> if you are interested in retrieving
--   information on noncompliant resources only.
--   
--   You can use this parameter only if the
--   <tt>IncludeComplianceDetails</tt> parameter is also set to
--   <tt>true</tt>.
[$sel:excludeCompliantResources:GetResources'] :: GetResources -> Maybe Bool

-- | AWS recommends using <tt>ResourcesPerPage</tt> instead of this
--   parameter.
--   
--   A limit that restricts the number of tags (key and value pairs)
--   returned by <tt>GetResources</tt> in paginated output. A resource with
--   no tags is counted as having one tag (one key and value pair).
--   
--   <tt>GetResources</tt> does not split a resource and its associated
--   tags across pages. If the specified <tt>TagsPerPage</tt> would cause
--   such a break, a <tt>PaginationToken</tt> is returned in place of the
--   affected resource and its tags. Use that token in another request to
--   get the remaining data. For example, if you specify a
--   <tt>TagsPerPage</tt> of <tt>100</tt> and the account has 22 resources
--   with 10 tags each (meaning that each resource has 10 key and value
--   pairs), the output will consist of three pages. The first page
--   displays the first 10 resources, each with its 10 tags. The second
--   page displays the next 10 resources, each with its 10 tags. The third
--   page displays the remaining 2 resources, each with its 10 tags.
--   
--   You can set <tt>TagsPerPage</tt> to a minimum of 100 items up to a
--   maximum of 500 items.
[$sel:tagsPerPage:GetResources'] :: GetResources -> Maybe Int

-- | Specifies the maximum number of results to be returned in each page. A
--   query can return fewer than this maximum, even if there are more
--   results still to return. You should always check the
--   <tt>PaginationToken</tt> response value to see if there are more
--   results. You can specify a minimum of 1 and a maximum value of 100.
[$sel:resourcesPerPage:GetResources'] :: GetResources -> Maybe Int

-- | Specifies a list of ARNs of resources for which you want to retrieve
--   tag data. You can't specify both this parameter and any of the
--   pagination parameters (<tt>ResourcesPerPage</tt>,
--   <tt>TagsPerPage</tt>, <tt>PaginationToken</tt>) in the same request.
--   If you specify both, you get an <tt>Invalid Parameter</tt> exception.
--   
--   If a resource specified by this parameter doesn't exist, it doesn't
--   generate an error; it simply isn't included in the response.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
[$sel:resourceARNList:GetResources'] :: GetResources -> Maybe (NonEmpty Text)

-- | Create a value of <a>GetResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:GetResources'</a>, <a>getResources_tagFilters</a> -
--   Specifies a list of TagFilters (keys and values) to restrict the
--   output to only those resources that have the specified tag and, if
--   included, the specified value. Each <tt>TagFilter</tt> must contain a
--   key with values optional. A request can include up to 50 keys, and
--   each key can include up to 20 values.
--   
--   Note the following when deciding how to use TagFilters:
--   
--   <ul>
--   <li>If you <i>don't</i> specify a <tt>TagFilter</tt>, the response
--   includes all resources that are currently tagged or ever had a tag.
--   Resources that currently don't have tags are shown with an empty tag
--   set, like this: <tt>"Tags": []</tt>.</li>
--   <li>If you specify more than one filter in a single request, the
--   response returns only those resources that satisfy all filters.</li>
--   <li>If you specify a filter that contains more than one value for a
--   key, the response returns resources that match any of the specified
--   values for that key.</li>
--   <li>If you don't specify any values for a key, the response returns
--   resources that are tagged with that key and any or no value.For
--   example, for the following filters: <tt>filter1= {keyA,{value1}}</tt>,
--   <tt>filter2={keyB,{value2,value3,value4}}</tt>, <tt>filter3=
--   {keyC}</tt>:<ul><li><tt>GetResources({filter1})</tt> returns resources
--   tagged with
--   <tt>key1=value1</tt></li><li><tt>GetResources({filter2})</tt> returns
--   resources tagged with <tt>key2=value2</tt> or <tt>key2=value3</tt> or
--   <tt>key2=value4</tt></li><li><tt>GetResources({filter3})</tt> returns
--   resources tagged with any tag with the key <tt>key3</tt>, and with any
--   or no value</li><li><tt>GetResources({filter1,filter2,filter3})</tt>
--   returns resources tagged with <tt>(key1=value1) and (key2=value2 or
--   key2=value3 or key2=value4) and (key3, any or no
--   value)</tt></li></ul></li>
--   </ul>
--   
--   <a>$sel:includeComplianceDetails:GetResources'</a>,
--   <a>getResources_includeComplianceDetails</a> - Specifies whether to
--   include details regarding the compliance with the effective tag
--   policy. Set this to <tt>true</tt> to determine whether resources are
--   compliant with the tag policy and to get details.
--   
--   <a>$sel:paginationToken:GetResources'</a>,
--   <a>getResources_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
--   
--   <a>$sel:resourceTypeFilters:GetResources'</a>,
--   <a>getResources_resourceTypeFilters</a> - Specifies the resource types
--   that you want included in the response. The format of each resource
--   type is <tt>service[:resourceType]</tt>. For example, specifying a
--   resource type of <tt>ec2</tt> returns all Amazon EC2 resources (which
--   includes EC2 instances). Specifying a resource type of
--   <tt>ec2:instance</tt> returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and AWS Service Namespaces</a>.
--   
--   You can specify multiple resource types by using an array. The array
--   can include up to 100 items. Note that the length constraint
--   requirement applies to each resource type filter.
--   
--   <a>$sel:excludeCompliantResources:GetResources'</a>,
--   <a>getResources_excludeCompliantResources</a> - Specifies whether to
--   exclude resources that are compliant with the tag policy. Set this to
--   <tt>true</tt> if you are interested in retrieving information on
--   noncompliant resources only.
--   
--   You can use this parameter only if the
--   <tt>IncludeComplianceDetails</tt> parameter is also set to
--   <tt>true</tt>.
--   
--   <a>$sel:tagsPerPage:GetResources'</a>, <a>getResources_tagsPerPage</a>
--   - AWS recommends using <tt>ResourcesPerPage</tt> instead of this
--   parameter.
--   
--   A limit that restricts the number of tags (key and value pairs)
--   returned by <tt>GetResources</tt> in paginated output. A resource with
--   no tags is counted as having one tag (one key and value pair).
--   
--   <tt>GetResources</tt> does not split a resource and its associated
--   tags across pages. If the specified <tt>TagsPerPage</tt> would cause
--   such a break, a <tt>PaginationToken</tt> is returned in place of the
--   affected resource and its tags. Use that token in another request to
--   get the remaining data. For example, if you specify a
--   <tt>TagsPerPage</tt> of <tt>100</tt> and the account has 22 resources
--   with 10 tags each (meaning that each resource has 10 key and value
--   pairs), the output will consist of three pages. The first page
--   displays the first 10 resources, each with its 10 tags. The second
--   page displays the next 10 resources, each with its 10 tags. The third
--   page displays the remaining 2 resources, each with its 10 tags.
--   
--   You can set <tt>TagsPerPage</tt> to a minimum of 100 items up to a
--   maximum of 500 items.
--   
--   <a>$sel:resourcesPerPage:GetResources'</a>,
--   <a>getResources_resourcesPerPage</a> - Specifies the maximum number of
--   results to be returned in each page. A query can return fewer than
--   this maximum, even if there are more results still to return. You
--   should always check the <tt>PaginationToken</tt> response value to see
--   if there are more results. You can specify a minimum of 1 and a
--   maximum value of 100.
--   
--   <a>$sel:resourceARNList:GetResources'</a>,
--   <a>getResources_resourceARNList</a> - Specifies a list of ARNs of
--   resources for which you want to retrieve tag data. You can't specify
--   both this parameter and any of the pagination parameters
--   (<tt>ResourcesPerPage</tt>, <tt>TagsPerPage</tt>,
--   <tt>PaginationToken</tt>) in the same request. If you specify both,
--   you get an <tt>Invalid Parameter</tt> exception.
--   
--   If a resource specified by this parameter doesn't exist, it doesn't
--   generate an error; it simply isn't included in the response.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
newGetResources :: GetResources

-- | Specifies a list of TagFilters (keys and values) to restrict the
--   output to only those resources that have the specified tag and, if
--   included, the specified value. Each <tt>TagFilter</tt> must contain a
--   key with values optional. A request can include up to 50 keys, and
--   each key can include up to 20 values.
--   
--   Note the following when deciding how to use TagFilters:
--   
--   <ul>
--   <li>If you <i>don't</i> specify a <tt>TagFilter</tt>, the response
--   includes all resources that are currently tagged or ever had a tag.
--   Resources that currently don't have tags are shown with an empty tag
--   set, like this: <tt>"Tags": []</tt>.</li>
--   <li>If you specify more than one filter in a single request, the
--   response returns only those resources that satisfy all filters.</li>
--   <li>If you specify a filter that contains more than one value for a
--   key, the response returns resources that match any of the specified
--   values for that key.</li>
--   <li>If you don't specify any values for a key, the response returns
--   resources that are tagged with that key and any or no value.For
--   example, for the following filters: <tt>filter1= {keyA,{value1}}</tt>,
--   <tt>filter2={keyB,{value2,value3,value4}}</tt>, <tt>filter3=
--   {keyC}</tt>:<ul><li><tt>GetResources({filter1})</tt> returns resources
--   tagged with
--   <tt>key1=value1</tt></li><li><tt>GetResources({filter2})</tt> returns
--   resources tagged with <tt>key2=value2</tt> or <tt>key2=value3</tt> or
--   <tt>key2=value4</tt></li><li><tt>GetResources({filter3})</tt> returns
--   resources tagged with any tag with the key <tt>key3</tt>, and with any
--   or no value</li><li><tt>GetResources({filter1,filter2,filter3})</tt>
--   returns resources tagged with <tt>(key1=value1) and (key2=value2 or
--   key2=value3 or key2=value4) and (key3, any or no
--   value)</tt></li></ul></li>
--   </ul>
getResources_tagFilters :: Lens' GetResources (Maybe [TagFilter])

-- | Specifies whether to include details regarding the compliance with the
--   effective tag policy. Set this to <tt>true</tt> to determine whether
--   resources are compliant with the tag policy and to get details.
getResources_includeComplianceDetails :: Lens' GetResources (Maybe Bool)

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getResources_paginationToken :: Lens' GetResources (Maybe Text)

-- | Specifies the resource types that you want included in the response.
--   The format of each resource type is <tt>service[:resourceType]</tt>.
--   For example, specifying a resource type of <tt>ec2</tt> returns all
--   Amazon EC2 resources (which includes EC2 instances). Specifying a
--   resource type of <tt>ec2:instance</tt> returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and AWS Service Namespaces</a>.
--   
--   You can specify multiple resource types by using an array. The array
--   can include up to 100 items. Note that the length constraint
--   requirement applies to each resource type filter.
getResources_resourceTypeFilters :: Lens' GetResources (Maybe [Text])

-- | Specifies whether to exclude resources that are compliant with the tag
--   policy. Set this to <tt>true</tt> if you are interested in retrieving
--   information on noncompliant resources only.
--   
--   You can use this parameter only if the
--   <tt>IncludeComplianceDetails</tt> parameter is also set to
--   <tt>true</tt>.
getResources_excludeCompliantResources :: Lens' GetResources (Maybe Bool)

-- | AWS recommends using <tt>ResourcesPerPage</tt> instead of this
--   parameter.
--   
--   A limit that restricts the number of tags (key and value pairs)
--   returned by <tt>GetResources</tt> in paginated output. A resource with
--   no tags is counted as having one tag (one key and value pair).
--   
--   <tt>GetResources</tt> does not split a resource and its associated
--   tags across pages. If the specified <tt>TagsPerPage</tt> would cause
--   such a break, a <tt>PaginationToken</tt> is returned in place of the
--   affected resource and its tags. Use that token in another request to
--   get the remaining data. For example, if you specify a
--   <tt>TagsPerPage</tt> of <tt>100</tt> and the account has 22 resources
--   with 10 tags each (meaning that each resource has 10 key and value
--   pairs), the output will consist of three pages. The first page
--   displays the first 10 resources, each with its 10 tags. The second
--   page displays the next 10 resources, each with its 10 tags. The third
--   page displays the remaining 2 resources, each with its 10 tags.
--   
--   You can set <tt>TagsPerPage</tt> to a minimum of 100 items up to a
--   maximum of 500 items.
getResources_tagsPerPage :: Lens' GetResources (Maybe Int)

-- | Specifies the maximum number of results to be returned in each page. A
--   query can return fewer than this maximum, even if there are more
--   results still to return. You should always check the
--   <tt>PaginationToken</tt> response value to see if there are more
--   results. You can specify a minimum of 1 and a maximum value of 100.
getResources_resourcesPerPage :: Lens' GetResources (Maybe Int)

-- | Specifies a list of ARNs of resources for which you want to retrieve
--   tag data. You can't specify both this parameter and any of the
--   pagination parameters (<tt>ResourcesPerPage</tt>,
--   <tt>TagsPerPage</tt>, <tt>PaginationToken</tt>) in the same request.
--   If you specify both, you get an <tt>Invalid Parameter</tt> exception.
--   
--   If a resource specified by this parameter doesn't exist, it doesn't
--   generate an error; it simply isn't included in the response.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
getResources_resourceARNList :: Lens' GetResources (Maybe (NonEmpty Text))

-- | <i>See:</i> <a>newGetResourcesResponse</a> smart constructor.
data GetResourcesResponse
GetResourcesResponse' :: Maybe [ResourceTagMapping] -> Maybe Text -> Int -> GetResourcesResponse

-- | A list of resource ARNs and the tags (keys and values) associated with
--   those ARNs.
[$sel:resourceTagMappingList:GetResourcesResponse'] :: GetResourcesResponse -> Maybe [ResourceTagMapping]

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
[$sel:paginationToken:GetResourcesResponse'] :: GetResourcesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResourcesResponse'] :: GetResourcesResponse -> Int

-- | Create a value of <a>GetResourcesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceTagMappingList:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_resourceTagMappingList</a> - A list of
--   resource ARNs and the tags (keys and values) associated with those
--   ARNs.
--   
--   <a>$sel:paginationToken:GetResources'</a>,
--   <a>getResourcesResponse_paginationToken</a> - A string that indicates
--   that there is more data available than this response contains. To
--   receive the next part of the response, specify this response value as
--   the <tt>PaginationToken</tt> value in the request for the next page.
--   
--   <a>$sel:httpStatus:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_httpStatus</a> - The response's http status
--   code.
newGetResourcesResponse :: Int -> GetResourcesResponse

-- | A list of resource ARNs and the tags (keys and values) associated with
--   those ARNs.
getResourcesResponse_resourceTagMappingList :: Lens' GetResourcesResponse (Maybe [ResourceTagMapping])

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getResourcesResponse_paginationToken :: Lens' GetResourcesResponse (Maybe Text)

-- | The response's http status code.
getResourcesResponse_httpStatus :: Lens' GetResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetResources.GetResourcesResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetResources.GetResourcesResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetResources.GetResourcesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetResources.GetResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetResources.GetResourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.GetResources.GetResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.GetResources.GetResources


-- | Returns a table that shows counts of resources that are noncompliant
--   with their tag policies.
--   
--   For more information on tag policies, see <a>Tag Policies</a> in the
--   <i>AWS Organizations User Guide.</i>
--   
--   You can call this operation only from the organization's management
--   account and from the us-east-1 Region.
--   
--   This operation supports pagination, where the response can be sent in
--   multiple pages. You should check the <tt>PaginationToken</tt> response
--   parameter to determine if there are additional results available to
--   return. Repeat the query, passing the <tt>PaginationToken</tt>
--   response parameter value as an input to the next request until you
--   recieve a <tt>null</tt> value. A null value for
--   <tt>PaginationToken</tt> indicates that there are no more results
--   waiting to be returned.
--   
--   This operation returns paginated results.
module Network.AWS.ResourceGroupsTagging.GetComplianceSummary

-- | <i>See:</i> <a>newGetComplianceSummary</a> smart constructor.
data GetComplianceSummary
GetComplianceSummary' :: Maybe Natural -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [GroupByAttribute] -> Maybe [Text] -> Maybe (NonEmpty Text) -> GetComplianceSummary

-- | Specifies the maximum number of results to be returned in each page. A
--   query can return fewer than this maximum, even if there are more
--   results still to return. You should always check the
--   <tt>PaginationToken</tt> response value to see if there are more
--   results. You can specify a minimum of 1 and a maximum value of 100.
[$sel:maxResults:GetComplianceSummary'] :: GetComplianceSummary -> Maybe Natural

-- | Specifies a list of AWS Regions to limit the output by. If you use
--   this parameter, the count of returned noncompliant resources includes
--   only resources in the specified Regions.
[$sel:regionFilters:GetComplianceSummary'] :: GetComplianceSummary -> Maybe (NonEmpty Text)

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
[$sel:paginationToken:GetComplianceSummary'] :: GetComplianceSummary -> Maybe Text

-- | Specifies target identifiers (usually, specific account IDs) to limit
--   the output by. If you use this parameter, the count of returned
--   noncompliant resources includes only resources with the specified
--   target IDs.
[$sel:targetIdFilters:GetComplianceSummary'] :: GetComplianceSummary -> Maybe (NonEmpty Text)

-- | Specifies a list of attributes to group the counts of noncompliant
--   resources by. If supplied, the counts are sorted by those attributes.
[$sel:groupBy:GetComplianceSummary'] :: GetComplianceSummary -> Maybe [GroupByAttribute]

-- | Specifies that you want the response to include information for only
--   resources of the specified types. The format of each resource type is
--   <tt>service[:resourceType]</tt>. For example, specifying a resource
--   type of <tt>ec2</tt> returns all Amazon EC2 resources (which includes
--   EC2 instances). Specifying a resource type of <tt>ec2:instance</tt>
--   returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   <ul>
--   <li>For a list of service name strings, see <a>AWS Service
--   Namespaces</a>.</li>
--   <li>For resource type strings, see <a>Example ARNs</a>.</li>
--   <li>For more information about ARNs, see <a>Amazon Resource Names
--   (ARNs) and AWS Service Namespaces</a>.</li>
--   </ul>
--   
--   You can specify multiple resource types by using a comma separated
--   array. The array can include up to 100 items. Note that the length
--   constraint requirement applies to each resource type filter.
[$sel:resourceTypeFilters:GetComplianceSummary'] :: GetComplianceSummary -> Maybe [Text]

-- | Specifies that you want the response to include information for only
--   resources that have tags with the specified tag keys. If you use this
--   parameter, the count of returned noncompliant resources includes only
--   resources that have the specified tag keys.
[$sel:tagKeyFilters:GetComplianceSummary'] :: GetComplianceSummary -> Maybe (NonEmpty Text)

-- | Create a value of <a>GetComplianceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxResults:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_maxResults</a> - Specifies the maximum number
--   of results to be returned in each page. A query can return fewer than
--   this maximum, even if there are more results still to return. You
--   should always check the <tt>PaginationToken</tt> response value to see
--   if there are more results. You can specify a minimum of 1 and a
--   maximum value of 100.
--   
--   <a>$sel:regionFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_regionFilters</a> - Specifies a list of AWS
--   Regions to limit the output by. If you use this parameter, the count
--   of returned noncompliant resources includes only resources in the
--   specified Regions.
--   
--   <a>$sel:paginationToken:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
--   
--   <a>$sel:targetIdFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_targetIdFilters</a> - Specifies target
--   identifiers (usually, specific account IDs) to limit the output by. If
--   you use this parameter, the count of returned noncompliant resources
--   includes only resources with the specified target IDs.
--   
--   <a>$sel:groupBy:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_groupBy</a> - Specifies a list of attributes
--   to group the counts of noncompliant resources by. If supplied, the
--   counts are sorted by those attributes.
--   
--   <a>$sel:resourceTypeFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_resourceTypeFilters</a> - Specifies that you
--   want the response to include information for only resources of the
--   specified types. The format of each resource type is
--   <tt>service[:resourceType]</tt>. For example, specifying a resource
--   type of <tt>ec2</tt> returns all Amazon EC2 resources (which includes
--   EC2 instances). Specifying a resource type of <tt>ec2:instance</tt>
--   returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   <ul>
--   <li>For a list of service name strings, see <a>AWS Service
--   Namespaces</a>.</li>
--   <li>For resource type strings, see <a>Example ARNs</a>.</li>
--   <li>For more information about ARNs, see <a>Amazon Resource Names
--   (ARNs) and AWS Service Namespaces</a>.</li>
--   </ul>
--   
--   You can specify multiple resource types by using a comma separated
--   array. The array can include up to 100 items. Note that the length
--   constraint requirement applies to each resource type filter.
--   
--   <a>$sel:tagKeyFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_tagKeyFilters</a> - Specifies that you want
--   the response to include information for only resources that have tags
--   with the specified tag keys. If you use this parameter, the count of
--   returned noncompliant resources includes only resources that have the
--   specified tag keys.
newGetComplianceSummary :: GetComplianceSummary

-- | Specifies the maximum number of results to be returned in each page. A
--   query can return fewer than this maximum, even if there are more
--   results still to return. You should always check the
--   <tt>PaginationToken</tt> response value to see if there are more
--   results. You can specify a minimum of 1 and a maximum value of 100.
getComplianceSummary_maxResults :: Lens' GetComplianceSummary (Maybe Natural)

-- | Specifies a list of AWS Regions to limit the output by. If you use
--   this parameter, the count of returned noncompliant resources includes
--   only resources in the specified Regions.
getComplianceSummary_regionFilters :: Lens' GetComplianceSummary (Maybe (NonEmpty Text))

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getComplianceSummary_paginationToken :: Lens' GetComplianceSummary (Maybe Text)

-- | Specifies target identifiers (usually, specific account IDs) to limit
--   the output by. If you use this parameter, the count of returned
--   noncompliant resources includes only resources with the specified
--   target IDs.
getComplianceSummary_targetIdFilters :: Lens' GetComplianceSummary (Maybe (NonEmpty Text))

-- | Specifies a list of attributes to group the counts of noncompliant
--   resources by. If supplied, the counts are sorted by those attributes.
getComplianceSummary_groupBy :: Lens' GetComplianceSummary (Maybe [GroupByAttribute])

-- | Specifies that you want the response to include information for only
--   resources of the specified types. The format of each resource type is
--   <tt>service[:resourceType]</tt>. For example, specifying a resource
--   type of <tt>ec2</tt> returns all Amazon EC2 resources (which includes
--   EC2 instances). Specifying a resource type of <tt>ec2:instance</tt>
--   returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   <ul>
--   <li>For a list of service name strings, see <a>AWS Service
--   Namespaces</a>.</li>
--   <li>For resource type strings, see <a>Example ARNs</a>.</li>
--   <li>For more information about ARNs, see <a>Amazon Resource Names
--   (ARNs) and AWS Service Namespaces</a>.</li>
--   </ul>
--   
--   You can specify multiple resource types by using a comma separated
--   array. The array can include up to 100 items. Note that the length
--   constraint requirement applies to each resource type filter.
getComplianceSummary_resourceTypeFilters :: Lens' GetComplianceSummary (Maybe [Text])

-- | Specifies that you want the response to include information for only
--   resources that have tags with the specified tag keys. If you use this
--   parameter, the count of returned noncompliant resources includes only
--   resources that have the specified tag keys.
getComplianceSummary_tagKeyFilters :: Lens' GetComplianceSummary (Maybe (NonEmpty Text))

-- | <i>See:</i> <a>newGetComplianceSummaryResponse</a> smart constructor.
data GetComplianceSummaryResponse
GetComplianceSummaryResponse' :: Maybe Text -> Maybe [Summary] -> Int -> GetComplianceSummaryResponse

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
[$sel:paginationToken:GetComplianceSummaryResponse'] :: GetComplianceSummaryResponse -> Maybe Text

-- | A table that shows counts of noncompliant resources.
[$sel:summaryList:GetComplianceSummaryResponse'] :: GetComplianceSummaryResponse -> Maybe [Summary]

-- | The response's http status code.
[$sel:httpStatus:GetComplianceSummaryResponse'] :: GetComplianceSummaryResponse -> Int

-- | Create a value of <a>GetComplianceSummaryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetComplianceSummary'</a>,
--   <a>getComplianceSummaryResponse_paginationToken</a> - A string that
--   indicates that there is more data available than this response
--   contains. To receive the next part of the response, specify this
--   response value as the <tt>PaginationToken</tt> value in the request
--   for the next page.
--   
--   <a>$sel:summaryList:GetComplianceSummaryResponse'</a>,
--   <a>getComplianceSummaryResponse_summaryList</a> - A table that shows
--   counts of noncompliant resources.
--   
--   <a>$sel:httpStatus:GetComplianceSummaryResponse'</a>,
--   <a>getComplianceSummaryResponse_httpStatus</a> - The response's http
--   status code.
newGetComplianceSummaryResponse :: Int -> GetComplianceSummaryResponse

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getComplianceSummaryResponse_paginationToken :: Lens' GetComplianceSummaryResponse (Maybe Text)

-- | A table that shows counts of noncompliant resources.
getComplianceSummaryResponse_summaryList :: Lens' GetComplianceSummaryResponse (Maybe [Summary])

-- | The response's http status code.
getComplianceSummaryResponse_httpStatus :: Lens' GetComplianceSummaryResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummaryResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummaryResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummaryResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummaryResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.GetComplianceSummary.GetComplianceSummary


-- | Describes the status of the <tt>StartReportCreation</tt> operation.
--   
--   You can call this operation only from the organization's management
--   account and from the us-east-1 Region.
module Network.AWS.ResourceGroupsTagging.DescribeReportCreation

-- | <i>See:</i> <a>newDescribeReportCreation</a> smart constructor.
data DescribeReportCreation
DescribeReportCreation' :: DescribeReportCreation

-- | Create a value of <a>DescribeReportCreation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeReportCreation :: DescribeReportCreation

-- | <i>See:</i> <a>newDescribeReportCreationResponse</a> smart
--   constructor.
data DescribeReportCreationResponse
DescribeReportCreationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeReportCreationResponse

-- | Reports the status of the operation.
--   
--   The operation status can be one of the following:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - Report creation is in progress.</li>
--   <li><tt>SUCCEEDED</tt> - Report creation is complete. You can open the
--   report from the Amazon S3 bucket that you specified when you ran
--   <tt>StartReportCreation</tt>.</li>
--   <li><tt>FAILED</tt> - Report creation timed out or the Amazon S3
--   bucket is not accessible.</li>
--   <li><tt>NO REPORT</tt> - No report was generated in the last 90
--   days.</li>
--   </ul>
[$sel:status:DescribeReportCreationResponse'] :: DescribeReportCreationResponse -> Maybe Text

-- | The path to the Amazon S3 bucket where the report was stored on
--   creation.
[$sel:s3Location:DescribeReportCreationResponse'] :: DescribeReportCreationResponse -> Maybe Text

-- | Details of the common errors that all operations return.
[$sel:errorMessage:DescribeReportCreationResponse'] :: DescribeReportCreationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeReportCreationResponse'] :: DescribeReportCreationResponse -> Int

-- | Create a value of <a>DescribeReportCreationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_status</a> - Reports the status of
--   the operation.
--   
--   The operation status can be one of the following:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - Report creation is in progress.</li>
--   <li><tt>SUCCEEDED</tt> - Report creation is complete. You can open the
--   report from the Amazon S3 bucket that you specified when you ran
--   <tt>StartReportCreation</tt>.</li>
--   <li><tt>FAILED</tt> - Report creation timed out or the Amazon S3
--   bucket is not accessible.</li>
--   <li><tt>NO REPORT</tt> - No report was generated in the last 90
--   days.</li>
--   </ul>
--   
--   <a>$sel:s3Location:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_s3Location</a> - The path to the
--   Amazon S3 bucket where the report was stored on creation.
--   
--   <a>$sel:errorMessage:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_errorMessage</a> - Details of the
--   common errors that all operations return.
--   
--   <a>$sel:httpStatus:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeReportCreationResponse :: Int -> DescribeReportCreationResponse

-- | Reports the status of the operation.
--   
--   The operation status can be one of the following:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - Report creation is in progress.</li>
--   <li><tt>SUCCEEDED</tt> - Report creation is complete. You can open the
--   report from the Amazon S3 bucket that you specified when you ran
--   <tt>StartReportCreation</tt>.</li>
--   <li><tt>FAILED</tt> - Report creation timed out or the Amazon S3
--   bucket is not accessible.</li>
--   <li><tt>NO REPORT</tt> - No report was generated in the last 90
--   days.</li>
--   </ul>
describeReportCreationResponse_status :: Lens' DescribeReportCreationResponse (Maybe Text)

-- | The path to the Amazon S3 bucket where the report was stored on
--   creation.
describeReportCreationResponse_s3Location :: Lens' DescribeReportCreationResponse (Maybe Text)

-- | Details of the common errors that all operations return.
describeReportCreationResponse_errorMessage :: Lens' DescribeReportCreationResponse (Maybe Text)

-- | The response's http status code.
describeReportCreationResponse_httpStatus :: Lens' DescribeReportCreationResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreationResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreationResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreationResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreationResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.DescribeReportCreation.DescribeReportCreation


-- | Removes the specified tags from the specified resources. When you
--   specify a tag key, the action removes both that key and its associated
--   value. The operation succeeds even if you attempt to remove tags from
--   a resource that were already removed. Note the following:
--   
--   <ul>
--   <li>To remove tags from a resource, you need the necessary permissions
--   for the service that the resource belongs to as well as permissions
--   for removing tags. For more information, see the documentation for the
--   service whose resource you want to untag.</li>
--   <li>You can only tag resources that are located in the specified AWS
--   Region for the calling AWS account.</li>
--   </ul>
module Network.AWS.ResourceGroupsTagging.UntagResources

-- | <i>See:</i> <a>newUntagResources</a> smart constructor.
data UntagResources
UntagResources' :: NonEmpty Text -> NonEmpty Text -> UntagResources

-- | Specifies a list of ARNs of the resources that you want to remove tags
--   from.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
[$sel:resourceARNList:UntagResources'] :: UntagResources -> NonEmpty Text

-- | Specifies a list of tag keys that you want to remove from the
--   specified resources.
[$sel:tagKeys:UntagResources'] :: UntagResources -> NonEmpty Text

-- | Create a value of <a>UntagResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARNList:UntagResources'</a>,
--   <a>untagResources_resourceARNList</a> - Specifies a list of ARNs of
--   the resources that you want to remove tags from.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:tagKeys:UntagResources'</a>, <a>untagResources_tagKeys</a> -
--   Specifies a list of tag keys that you want to remove from the
--   specified resources.
newUntagResources :: NonEmpty Text -> NonEmpty Text -> UntagResources

-- | Specifies a list of ARNs of the resources that you want to remove tags
--   from.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
untagResources_resourceARNList :: Lens' UntagResources (NonEmpty Text)

-- | Specifies a list of tag keys that you want to remove from the
--   specified resources.
untagResources_tagKeys :: Lens' UntagResources (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourcesResponse</a> smart constructor.
data UntagResourcesResponse
UntagResourcesResponse' :: Maybe (HashMap Text FailureInfo) -> Int -> UntagResourcesResponse

-- | A map containing a key-value pair for each failed item that couldn't
--   be untagged. The key is the ARN of the failed resource. The value is a
--   <tt>FailureInfo</tt> object that contains an error code, a status
--   code, and an error message. If there are no errors, the
--   <tt>FailedResourcesMap</tt> is empty.
[$sel:failedResourcesMap:UntagResourcesResponse'] :: UntagResourcesResponse -> Maybe (HashMap Text FailureInfo)

-- | The response's http status code.
[$sel:httpStatus:UntagResourcesResponse'] :: UntagResourcesResponse -> Int

-- | Create a value of <a>UntagResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedResourcesMap:UntagResourcesResponse'</a>,
--   <a>untagResourcesResponse_failedResourcesMap</a> - A map containing a
--   key-value pair for each failed item that couldn't be untagged. The key
--   is the ARN of the failed resource. The value is a <tt>FailureInfo</tt>
--   object that contains an error code, a status code, and an error
--   message. If there are no errors, the <tt>FailedResourcesMap</tt> is
--   empty.
--   
--   <a>$sel:httpStatus:UntagResourcesResponse'</a>,
--   <a>untagResourcesResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourcesResponse :: Int -> UntagResourcesResponse

-- | A map containing a key-value pair for each failed item that couldn't
--   be untagged. The key is the ARN of the failed resource. The value is a
--   <tt>FailureInfo</tt> object that contains an error code, a status
--   code, and an error message. If there are no errors, the
--   <tt>FailedResourcesMap</tt> is empty.
untagResourcesResponse_failedResourcesMap :: Lens' UntagResourcesResponse (Maybe (HashMap Text FailureInfo))

-- | The response's http status code.
untagResourcesResponse_httpStatus :: Lens' UntagResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance GHC.Generics.Generic Network.AWS.ResourceGroupsTagging.UntagResources.UntagResourcesResponse
instance GHC.Show.Show Network.AWS.ResourceGroupsTagging.UntagResources.UntagResourcesResponse
instance GHC.Read.Read Network.AWS.ResourceGroupsTagging.UntagResources.UntagResourcesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroupsTagging.UntagResources.UntagResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.UntagResources.UntagResourcesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroupsTagging.UntagResources.UntagResources


module Network.AWS.ResourceGroupsTagging.Lens

-- | Specifies the maximum number of results to be returned in each page. A
--   query can return fewer than this maximum, even if there are more
--   results still to return. You should always check the
--   <tt>PaginationToken</tt> response value to see if there are more
--   results. You can specify a minimum of 1 and a maximum value of 100.
getComplianceSummary_maxResults :: Lens' GetComplianceSummary (Maybe Natural)

-- | Specifies a list of AWS Regions to limit the output by. If you use
--   this parameter, the count of returned noncompliant resources includes
--   only resources in the specified Regions.
getComplianceSummary_regionFilters :: Lens' GetComplianceSummary (Maybe (NonEmpty Text))

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getComplianceSummary_paginationToken :: Lens' GetComplianceSummary (Maybe Text)

-- | Specifies target identifiers (usually, specific account IDs) to limit
--   the output by. If you use this parameter, the count of returned
--   noncompliant resources includes only resources with the specified
--   target IDs.
getComplianceSummary_targetIdFilters :: Lens' GetComplianceSummary (Maybe (NonEmpty Text))

-- | Specifies a list of attributes to group the counts of noncompliant
--   resources by. If supplied, the counts are sorted by those attributes.
getComplianceSummary_groupBy :: Lens' GetComplianceSummary (Maybe [GroupByAttribute])

-- | Specifies that you want the response to include information for only
--   resources of the specified types. The format of each resource type is
--   <tt>service[:resourceType]</tt>. For example, specifying a resource
--   type of <tt>ec2</tt> returns all Amazon EC2 resources (which includes
--   EC2 instances). Specifying a resource type of <tt>ec2:instance</tt>
--   returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   <ul>
--   <li>For a list of service name strings, see <a>AWS Service
--   Namespaces</a>.</li>
--   <li>For resource type strings, see <a>Example ARNs</a>.</li>
--   <li>For more information about ARNs, see <a>Amazon Resource Names
--   (ARNs) and AWS Service Namespaces</a>.</li>
--   </ul>
--   
--   You can specify multiple resource types by using a comma separated
--   array. The array can include up to 100 items. Note that the length
--   constraint requirement applies to each resource type filter.
getComplianceSummary_resourceTypeFilters :: Lens' GetComplianceSummary (Maybe [Text])

-- | Specifies that you want the response to include information for only
--   resources that have tags with the specified tag keys. If you use this
--   parameter, the count of returned noncompliant resources includes only
--   resources that have the specified tag keys.
getComplianceSummary_tagKeyFilters :: Lens' GetComplianceSummary (Maybe (NonEmpty Text))

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getComplianceSummaryResponse_paginationToken :: Lens' GetComplianceSummaryResponse (Maybe Text)

-- | A table that shows counts of noncompliant resources.
getComplianceSummaryResponse_summaryList :: Lens' GetComplianceSummaryResponse (Maybe [Summary])

-- | The response's http status code.
getComplianceSummaryResponse_httpStatus :: Lens' GetComplianceSummaryResponse Int

-- | The name of the Amazon S3 bucket where the report will be stored; for
--   example:
--   
--   <pre>
--   awsexamplebucket
--   </pre>
--   
--   For more information on S3 bucket requirements, including an example
--   bucket policy, see the example S3 bucket policy on this page.
startReportCreation_s3Bucket :: Lens' StartReportCreation Text

-- | The response's http status code.
startReportCreationResponse_httpStatus :: Lens' StartReportCreationResponse Int

-- | Specifies the list of ARNs of the resources that you want to apply
--   tags to.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
tagResources_resourceARNList :: Lens' TagResources (NonEmpty Text)

-- | Specifies a list of tags that you want to add to the specified
--   resources. A tag consists of a key and a value that you define.
tagResources_tags :: Lens' TagResources (HashMap Text Text)

-- | A map containing a key-value pair for each failed item that couldn't
--   be tagged. The key is the ARN of the failed resource. The value is a
--   <tt>FailureInfo</tt> object that contains an error code, a status
--   code, and an error message. If there are no errors, the
--   <tt>FailedResourcesMap</tt> is empty.
tagResourcesResponse_failedResourcesMap :: Lens' TagResourcesResponse (Maybe (HashMap Text FailureInfo))

-- | The response's http status code.
tagResourcesResponse_httpStatus :: Lens' TagResourcesResponse Int

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getTagKeys_paginationToken :: Lens' GetTagKeys (Maybe Text)

-- | A list of all tag keys in the AWS account.
getTagKeysResponse_tagKeys :: Lens' GetTagKeysResponse (Maybe [Text])

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getTagKeysResponse_paginationToken :: Lens' GetTagKeysResponse (Maybe Text)

-- | The response's http status code.
getTagKeysResponse_httpStatus :: Lens' GetTagKeysResponse Int

-- | Reports the status of the operation.
--   
--   The operation status can be one of the following:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - Report creation is in progress.</li>
--   <li><tt>SUCCEEDED</tt> - Report creation is complete. You can open the
--   report from the Amazon S3 bucket that you specified when you ran
--   <tt>StartReportCreation</tt>.</li>
--   <li><tt>FAILED</tt> - Report creation timed out or the Amazon S3
--   bucket is not accessible.</li>
--   <li><tt>NO REPORT</tt> - No report was generated in the last 90
--   days.</li>
--   </ul>
describeReportCreationResponse_status :: Lens' DescribeReportCreationResponse (Maybe Text)

-- | The path to the Amazon S3 bucket where the report was stored on
--   creation.
describeReportCreationResponse_s3Location :: Lens' DescribeReportCreationResponse (Maybe Text)

-- | Details of the common errors that all operations return.
describeReportCreationResponse_errorMessage :: Lens' DescribeReportCreationResponse (Maybe Text)

-- | The response's http status code.
describeReportCreationResponse_httpStatus :: Lens' DescribeReportCreationResponse Int

-- | Specifies a list of TagFilters (keys and values) to restrict the
--   output to only those resources that have the specified tag and, if
--   included, the specified value. Each <tt>TagFilter</tt> must contain a
--   key with values optional. A request can include up to 50 keys, and
--   each key can include up to 20 values.
--   
--   Note the following when deciding how to use TagFilters:
--   
--   <ul>
--   <li>If you <i>don't</i> specify a <tt>TagFilter</tt>, the response
--   includes all resources that are currently tagged or ever had a tag.
--   Resources that currently don't have tags are shown with an empty tag
--   set, like this: <tt>"Tags": []</tt>.</li>
--   <li>If you specify more than one filter in a single request, the
--   response returns only those resources that satisfy all filters.</li>
--   <li>If you specify a filter that contains more than one value for a
--   key, the response returns resources that match any of the specified
--   values for that key.</li>
--   <li>If you don't specify any values for a key, the response returns
--   resources that are tagged with that key and any or no value.For
--   example, for the following filters: <tt>filter1= {keyA,{value1}}</tt>,
--   <tt>filter2={keyB,{value2,value3,value4}}</tt>, <tt>filter3=
--   {keyC}</tt>:<ul><li><tt>GetResources({filter1})</tt> returns resources
--   tagged with
--   <tt>key1=value1</tt></li><li><tt>GetResources({filter2})</tt> returns
--   resources tagged with <tt>key2=value2</tt> or <tt>key2=value3</tt> or
--   <tt>key2=value4</tt></li><li><tt>GetResources({filter3})</tt> returns
--   resources tagged with any tag with the key <tt>key3</tt>, and with any
--   or no value</li><li><tt>GetResources({filter1,filter2,filter3})</tt>
--   returns resources tagged with <tt>(key1=value1) and (key2=value2 or
--   key2=value3 or key2=value4) and (key3, any or no
--   value)</tt></li></ul></li>
--   </ul>
getResources_tagFilters :: Lens' GetResources (Maybe [TagFilter])

-- | Specifies whether to include details regarding the compliance with the
--   effective tag policy. Set this to <tt>true</tt> to determine whether
--   resources are compliant with the tag policy and to get details.
getResources_includeComplianceDetails :: Lens' GetResources (Maybe Bool)

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getResources_paginationToken :: Lens' GetResources (Maybe Text)

-- | Specifies the resource types that you want included in the response.
--   The format of each resource type is <tt>service[:resourceType]</tt>.
--   For example, specifying a resource type of <tt>ec2</tt> returns all
--   Amazon EC2 resources (which includes EC2 instances). Specifying a
--   resource type of <tt>ec2:instance</tt> returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and AWS Service Namespaces</a>.
--   
--   You can specify multiple resource types by using an array. The array
--   can include up to 100 items. Note that the length constraint
--   requirement applies to each resource type filter.
getResources_resourceTypeFilters :: Lens' GetResources (Maybe [Text])

-- | Specifies whether to exclude resources that are compliant with the tag
--   policy. Set this to <tt>true</tt> if you are interested in retrieving
--   information on noncompliant resources only.
--   
--   You can use this parameter only if the
--   <tt>IncludeComplianceDetails</tt> parameter is also set to
--   <tt>true</tt>.
getResources_excludeCompliantResources :: Lens' GetResources (Maybe Bool)

-- | AWS recommends using <tt>ResourcesPerPage</tt> instead of this
--   parameter.
--   
--   A limit that restricts the number of tags (key and value pairs)
--   returned by <tt>GetResources</tt> in paginated output. A resource with
--   no tags is counted as having one tag (one key and value pair).
--   
--   <tt>GetResources</tt> does not split a resource and its associated
--   tags across pages. If the specified <tt>TagsPerPage</tt> would cause
--   such a break, a <tt>PaginationToken</tt> is returned in place of the
--   affected resource and its tags. Use that token in another request to
--   get the remaining data. For example, if you specify a
--   <tt>TagsPerPage</tt> of <tt>100</tt> and the account has 22 resources
--   with 10 tags each (meaning that each resource has 10 key and value
--   pairs), the output will consist of three pages. The first page
--   displays the first 10 resources, each with its 10 tags. The second
--   page displays the next 10 resources, each with its 10 tags. The third
--   page displays the remaining 2 resources, each with its 10 tags.
--   
--   You can set <tt>TagsPerPage</tt> to a minimum of 100 items up to a
--   maximum of 500 items.
getResources_tagsPerPage :: Lens' GetResources (Maybe Int)

-- | Specifies the maximum number of results to be returned in each page. A
--   query can return fewer than this maximum, even if there are more
--   results still to return. You should always check the
--   <tt>PaginationToken</tt> response value to see if there are more
--   results. You can specify a minimum of 1 and a maximum value of 100.
getResources_resourcesPerPage :: Lens' GetResources (Maybe Int)

-- | Specifies a list of ARNs of resources for which you want to retrieve
--   tag data. You can't specify both this parameter and any of the
--   pagination parameters (<tt>ResourcesPerPage</tt>,
--   <tt>TagsPerPage</tt>, <tt>PaginationToken</tt>) in the same request.
--   If you specify both, you get an <tt>Invalid Parameter</tt> exception.
--   
--   If a resource specified by this parameter doesn't exist, it doesn't
--   generate an error; it simply isn't included in the response.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
getResources_resourceARNList :: Lens' GetResources (Maybe (NonEmpty Text))

-- | A list of resource ARNs and the tags (keys and values) associated with
--   those ARNs.
getResourcesResponse_resourceTagMappingList :: Lens' GetResourcesResponse (Maybe [ResourceTagMapping])

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getResourcesResponse_paginationToken :: Lens' GetResourcesResponse (Maybe Text)

-- | The response's http status code.
getResourcesResponse_httpStatus :: Lens' GetResourcesResponse Int

-- | Specifies a <tt>PaginationToken</tt> response value from a previous
--   request to indicate that you want the next page of results. Leave this
--   parameter empty in your initial request.
getTagValues_paginationToken :: Lens' GetTagValues (Maybe Text)

-- | Specifies the tag key for which you want to list all existing values
--   that are currently used in the specified AWS Region for the calling
--   AWS account.
getTagValues_key :: Lens' GetTagValues Text

-- | A string that indicates that there is more data available than this
--   response contains. To receive the next part of the response, specify
--   this response value as the <tt>PaginationToken</tt> value in the
--   request for the next page.
getTagValuesResponse_paginationToken :: Lens' GetTagValuesResponse (Maybe Text)

-- | A list of all tag values for the specified key currently used in the
--   specified AWS Region for the calling AWS account.
getTagValuesResponse_tagValues :: Lens' GetTagValuesResponse (Maybe [Text])

-- | The response's http status code.
getTagValuesResponse_httpStatus :: Lens' GetTagValuesResponse Int

-- | Specifies a list of ARNs of the resources that you want to remove tags
--   from.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
untagResources_resourceARNList :: Lens' UntagResources (NonEmpty Text)

-- | Specifies a list of tag keys that you want to remove from the
--   specified resources.
untagResources_tagKeys :: Lens' UntagResources (NonEmpty Text)

-- | A map containing a key-value pair for each failed item that couldn't
--   be untagged. The key is the ARN of the failed resource. The value is a
--   <tt>FailureInfo</tt> object that contains an error code, a status
--   code, and an error message. If there are no errors, the
--   <tt>FailedResourcesMap</tt> is empty.
untagResourcesResponse_failedResourcesMap :: Lens' UntagResourcesResponse (Maybe (HashMap Text FailureInfo))

-- | The response's http status code.
untagResourcesResponse_httpStatus :: Lens' UntagResourcesResponse Int

-- | Whether a resource is compliant with the effective tag policy.
complianceDetails_complianceStatus :: Lens' ComplianceDetails (Maybe Bool)

-- | These tag keys on the resource are noncompliant with the effective tag
--   policy.
complianceDetails_noncompliantKeys :: Lens' ComplianceDetails (Maybe [Text])

-- | These are keys defined in the effective policy that are on the
--   resource with either incorrect case treatment or noncompliant values.
complianceDetails_keysWithNoncompliantValues :: Lens' ComplianceDetails (Maybe [Text])

-- | The HTTP status code of the common error.
failureInfo_statusCode :: Lens' FailureInfo (Maybe Int)

-- | The message of the common error.
failureInfo_errorMessage :: Lens' FailureInfo (Maybe Text)

-- | The code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
failureInfo_errorCode :: Lens' FailureInfo (Maybe ResourceErrorCode)

-- | The ARN of the resource.
resourceTagMapping_resourceARN :: Lens' ResourceTagMapping (Maybe Text)

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
resourceTagMapping_complianceDetails :: Lens' ResourceTagMapping (Maybe ComplianceDetails)

-- | The tags that have been applied to one or more AWS resources.
resourceTagMapping_tags :: Lens' ResourceTagMapping (Maybe [Tag])

-- | The account identifier or the root identifier of the organization. If
--   you don't know the root ID, you can call the AWS Organizations
--   <a>ListRoots</a> API.
summary_targetId :: Lens' Summary (Maybe Text)

-- | The AWS resource type.
summary_resourceType :: Lens' Summary (Maybe Text)

-- | The timestamp that shows when this summary was generated in this
--   Region.
summary_lastUpdated :: Lens' Summary (Maybe Text)

-- | Whether the target is an account, an OU, or the organization root.
summary_targetIdType :: Lens' Summary (Maybe TargetIdType)

-- | The count of noncompliant resources.
summary_nonCompliantResources :: Lens' Summary (Maybe Integer)

-- | The AWS Region that the summary applies to.
summary_region :: Lens' Summary (Maybe Text)

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tag_key :: Lens' Tag Text

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
tag_value :: Lens' Tag Text

-- | One part of a key-value pair that makes up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | One part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key). The value can be empty or
--   null.
tagFilter_values :: Lens' TagFilter (Maybe [Text])


module Network.AWS.ResourceGroupsTagging.Waiters


-- | Derived from API version <tt>2017-01-26</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Resource Groups Tagging API
module Network.AWS.ResourceGroupsTagging

-- | API version <tt>2017-01-26</tt> of the Amazon Resource Groups Tagging
--   API SDK configuration.
defaultService :: Service

-- | A <tt>PaginationToken</tt> is valid for a maximum of 15 minutes. Your
--   request was denied because the specified <tt>PaginationToken</tt> has
--   expired.
_PaginationTokenExpiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied to limit the frequency of submitted requests.
_ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied because performing this operation violates a
--   constraint.
--   
--   Some of the reasons in the following list might not apply to this
--   specific operation.
--   
--   <ul>
--   <li>You must meet the prerequisites for using tag policies. For
--   information, see <a>Prerequisites and Permissions for Using Tag
--   Policies</a> in the <i>AWS Organizations User Guide.</i></li>
--   <li>You must enable the tag policies service principal
--   (<tt>tagpolicies.tag.amazonaws.com</tt>) to integrate with AWS
--   Organizations For information, see <a>EnableAWSServiceAccess</a>.</li>
--   <li>You must have a tag policy attached to the organization root, an
--   OU, or an account.</li>
--   </ul>
_ConstraintViolationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing failed because of an unknown error, exception,
--   or failure. You can retry the request.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target of the operation is currently being modified by a different
--   request. Try again later.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This error indicates one of the following:
--   
--   <ul>
--   <li>A parameter is missing.</li>
--   <li>A malformed string was supplied for the request parameter.</li>
--   <li>An out-of-range value was supplied for the request parameter.</li>
--   <li>The target ID is invalid, unsupported, or doesn't exist.</li>
--   <li>You can't access the Amazon S3 bucket for report storage. For more
--   information, see <a>Additional Requirements for Organization-wide Tag
--   Compliance Reports</a> in the <i>AWS Organizations User
--   Guide.</i></li>
--   </ul>
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetComplianceSummary</a> smart constructor.
data GetComplianceSummary
GetComplianceSummary' :: Maybe Natural -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [GroupByAttribute] -> Maybe [Text] -> Maybe (NonEmpty Text) -> GetComplianceSummary

-- | Create a value of <a>GetComplianceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxResults:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_maxResults</a> - Specifies the maximum number
--   of results to be returned in each page. A query can return fewer than
--   this maximum, even if there are more results still to return. You
--   should always check the <tt>PaginationToken</tt> response value to see
--   if there are more results. You can specify a minimum of 1 and a
--   maximum value of 100.
--   
--   <a>$sel:regionFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_regionFilters</a> - Specifies a list of AWS
--   Regions to limit the output by. If you use this parameter, the count
--   of returned noncompliant resources includes only resources in the
--   specified Regions.
--   
--   <a>$sel:paginationToken:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
--   
--   <a>$sel:targetIdFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_targetIdFilters</a> - Specifies target
--   identifiers (usually, specific account IDs) to limit the output by. If
--   you use this parameter, the count of returned noncompliant resources
--   includes only resources with the specified target IDs.
--   
--   <a>$sel:groupBy:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_groupBy</a> - Specifies a list of attributes
--   to group the counts of noncompliant resources by. If supplied, the
--   counts are sorted by those attributes.
--   
--   <a>$sel:resourceTypeFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_resourceTypeFilters</a> - Specifies that you
--   want the response to include information for only resources of the
--   specified types. The format of each resource type is
--   <tt>service[:resourceType]</tt>. For example, specifying a resource
--   type of <tt>ec2</tt> returns all Amazon EC2 resources (which includes
--   EC2 instances). Specifying a resource type of <tt>ec2:instance</tt>
--   returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   <ul>
--   <li>For a list of service name strings, see <a>AWS Service
--   Namespaces</a>.</li>
--   <li>For resource type strings, see <a>Example ARNs</a>.</li>
--   <li>For more information about ARNs, see <a>Amazon Resource Names
--   (ARNs) and AWS Service Namespaces</a>.</li>
--   </ul>
--   
--   You can specify multiple resource types by using a comma separated
--   array. The array can include up to 100 items. Note that the length
--   constraint requirement applies to each resource type filter.
--   
--   <a>$sel:tagKeyFilters:GetComplianceSummary'</a>,
--   <a>getComplianceSummary_tagKeyFilters</a> - Specifies that you want
--   the response to include information for only resources that have tags
--   with the specified tag keys. If you use this parameter, the count of
--   returned noncompliant resources includes only resources that have the
--   specified tag keys.
newGetComplianceSummary :: GetComplianceSummary

-- | <i>See:</i> <a>newGetComplianceSummaryResponse</a> smart constructor.
data GetComplianceSummaryResponse
GetComplianceSummaryResponse' :: Maybe Text -> Maybe [Summary] -> Int -> GetComplianceSummaryResponse

-- | Create a value of <a>GetComplianceSummaryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetComplianceSummary'</a>,
--   <a>getComplianceSummaryResponse_paginationToken</a> - A string that
--   indicates that there is more data available than this response
--   contains. To receive the next part of the response, specify this
--   response value as the <tt>PaginationToken</tt> value in the request
--   for the next page.
--   
--   <a>$sel:summaryList:GetComplianceSummaryResponse'</a>,
--   <a>getComplianceSummaryResponse_summaryList</a> - A table that shows
--   counts of noncompliant resources.
--   
--   <a>$sel:httpStatus:GetComplianceSummaryResponse'</a>,
--   <a>getComplianceSummaryResponse_httpStatus</a> - The response's http
--   status code.
newGetComplianceSummaryResponse :: Int -> GetComplianceSummaryResponse

-- | <i>See:</i> <a>newStartReportCreation</a> smart constructor.
data StartReportCreation
StartReportCreation' :: Text -> StartReportCreation

-- | Create a value of <a>StartReportCreation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Bucket:StartReportCreation'</a>,
--   <a>startReportCreation_s3Bucket</a> - The name of the Amazon S3 bucket
--   where the report will be stored; for example:
--   
--   <pre>
--   awsexamplebucket
--   </pre>
--   
--   For more information on S3 bucket requirements, including an example
--   bucket policy, see the example S3 bucket policy on this page.
newStartReportCreation :: Text -> StartReportCreation

-- | <i>See:</i> <a>newStartReportCreationResponse</a> smart constructor.
data StartReportCreationResponse
StartReportCreationResponse' :: Int -> StartReportCreationResponse

-- | Create a value of <a>StartReportCreationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartReportCreationResponse'</a>,
--   <a>startReportCreationResponse_httpStatus</a> - The response's http
--   status code.
newStartReportCreationResponse :: Int -> StartReportCreationResponse

-- | <i>See:</i> <a>newTagResources</a> smart constructor.
data TagResources
TagResources' :: NonEmpty Text -> HashMap Text Text -> TagResources

-- | Create a value of <a>TagResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARNList:TagResources'</a>,
--   <a>tagResources_resourceARNList</a> - Specifies the list of ARNs of
--   the resources that you want to apply tags to.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:tags:TagResources'</a>, <a>tagResources_tags</a> - Specifies a
--   list of tags that you want to add to the specified resources. A tag
--   consists of a key and a value that you define.
newTagResources :: NonEmpty Text -> TagResources

-- | <i>See:</i> <a>newTagResourcesResponse</a> smart constructor.
data TagResourcesResponse
TagResourcesResponse' :: Maybe (HashMap Text FailureInfo) -> Int -> TagResourcesResponse

-- | Create a value of <a>TagResourcesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedResourcesMap:TagResourcesResponse'</a>,
--   <a>tagResourcesResponse_failedResourcesMap</a> - A map containing a
--   key-value pair for each failed item that couldn't be tagged. The key
--   is the ARN of the failed resource. The value is a <tt>FailureInfo</tt>
--   object that contains an error code, a status code, and an error
--   message. If there are no errors, the <tt>FailedResourcesMap</tt> is
--   empty.
--   
--   <a>$sel:httpStatus:TagResourcesResponse'</a>,
--   <a>tagResourcesResponse_httpStatus</a> - The response's http status
--   code.
newTagResourcesResponse :: Int -> TagResourcesResponse

-- | <i>See:</i> <a>newGetTagKeys</a> smart constructor.
data GetTagKeys
GetTagKeys' :: Maybe Text -> GetTagKeys

-- | Create a value of <a>GetTagKeys</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetTagKeys'</a>,
--   <a>getTagKeys_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
newGetTagKeys :: GetTagKeys

-- | <i>See:</i> <a>newGetTagKeysResponse</a> smart constructor.
data GetTagKeysResponse
GetTagKeysResponse' :: Maybe [Text] -> Maybe Text -> Int -> GetTagKeysResponse

-- | Create a value of <a>GetTagKeysResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:GetTagKeysResponse'</a>,
--   <a>getTagKeysResponse_tagKeys</a> - A list of all tag keys in the AWS
--   account.
--   
--   <a>$sel:paginationToken:GetTagKeys'</a>,
--   <a>getTagKeysResponse_paginationToken</a> - A string that indicates
--   that there is more data available than this response contains. To
--   receive the next part of the response, specify this response value as
--   the <tt>PaginationToken</tt> value in the request for the next page.
--   
--   <a>$sel:httpStatus:GetTagKeysResponse'</a>,
--   <a>getTagKeysResponse_httpStatus</a> - The response's http status
--   code.
newGetTagKeysResponse :: Int -> GetTagKeysResponse

-- | <i>See:</i> <a>newDescribeReportCreation</a> smart constructor.
data DescribeReportCreation
DescribeReportCreation' :: DescribeReportCreation

-- | Create a value of <a>DescribeReportCreation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeReportCreation :: DescribeReportCreation

-- | <i>See:</i> <a>newDescribeReportCreationResponse</a> smart
--   constructor.
data DescribeReportCreationResponse
DescribeReportCreationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeReportCreationResponse

-- | Create a value of <a>DescribeReportCreationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_status</a> - Reports the status of
--   the operation.
--   
--   The operation status can be one of the following:
--   
--   <ul>
--   <li><tt>RUNNING</tt> - Report creation is in progress.</li>
--   <li><tt>SUCCEEDED</tt> - Report creation is complete. You can open the
--   report from the Amazon S3 bucket that you specified when you ran
--   <tt>StartReportCreation</tt>.</li>
--   <li><tt>FAILED</tt> - Report creation timed out or the Amazon S3
--   bucket is not accessible.</li>
--   <li><tt>NO REPORT</tt> - No report was generated in the last 90
--   days.</li>
--   </ul>
--   
--   <a>$sel:s3Location:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_s3Location</a> - The path to the
--   Amazon S3 bucket where the report was stored on creation.
--   
--   <a>$sel:errorMessage:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_errorMessage</a> - Details of the
--   common errors that all operations return.
--   
--   <a>$sel:httpStatus:DescribeReportCreationResponse'</a>,
--   <a>describeReportCreationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeReportCreationResponse :: Int -> DescribeReportCreationResponse

-- | <i>See:</i> <a>newGetResources</a> smart constructor.
data GetResources
GetResources' :: Maybe [TagFilter] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe (NonEmpty Text) -> GetResources

-- | Create a value of <a>GetResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:GetResources'</a>, <a>getResources_tagFilters</a> -
--   Specifies a list of TagFilters (keys and values) to restrict the
--   output to only those resources that have the specified tag and, if
--   included, the specified value. Each <tt>TagFilter</tt> must contain a
--   key with values optional. A request can include up to 50 keys, and
--   each key can include up to 20 values.
--   
--   Note the following when deciding how to use TagFilters:
--   
--   <ul>
--   <li>If you <i>don't</i> specify a <tt>TagFilter</tt>, the response
--   includes all resources that are currently tagged or ever had a tag.
--   Resources that currently don't have tags are shown with an empty tag
--   set, like this: <tt>"Tags": []</tt>.</li>
--   <li>If you specify more than one filter in a single request, the
--   response returns only those resources that satisfy all filters.</li>
--   <li>If you specify a filter that contains more than one value for a
--   key, the response returns resources that match any of the specified
--   values for that key.</li>
--   <li>If you don't specify any values for a key, the response returns
--   resources that are tagged with that key and any or no value.For
--   example, for the following filters: <tt>filter1= {keyA,{value1}}</tt>,
--   <tt>filter2={keyB,{value2,value3,value4}}</tt>, <tt>filter3=
--   {keyC}</tt>:<ul><li><tt>GetResources({filter1})</tt> returns resources
--   tagged with
--   <tt>key1=value1</tt></li><li><tt>GetResources({filter2})</tt> returns
--   resources tagged with <tt>key2=value2</tt> or <tt>key2=value3</tt> or
--   <tt>key2=value4</tt></li><li><tt>GetResources({filter3})</tt> returns
--   resources tagged with any tag with the key <tt>key3</tt>, and with any
--   or no value</li><li><tt>GetResources({filter1,filter2,filter3})</tt>
--   returns resources tagged with <tt>(key1=value1) and (key2=value2 or
--   key2=value3 or key2=value4) and (key3, any or no
--   value)</tt></li></ul></li>
--   </ul>
--   
--   <a>$sel:includeComplianceDetails:GetResources'</a>,
--   <a>getResources_includeComplianceDetails</a> - Specifies whether to
--   include details regarding the compliance with the effective tag
--   policy. Set this to <tt>true</tt> to determine whether resources are
--   compliant with the tag policy and to get details.
--   
--   <a>$sel:paginationToken:GetResources'</a>,
--   <a>getResources_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
--   
--   <a>$sel:resourceTypeFilters:GetResources'</a>,
--   <a>getResources_resourceTypeFilters</a> - Specifies the resource types
--   that you want included in the response. The format of each resource
--   type is <tt>service[:resourceType]</tt>. For example, specifying a
--   resource type of <tt>ec2</tt> returns all Amazon EC2 resources (which
--   includes EC2 instances). Specifying a resource type of
--   <tt>ec2:instance</tt> returns only EC2 instances.
--   
--   The string for each service name and resource type is the same as that
--   embedded in a resource's Amazon Resource Name (ARN). Consult the /AWS
--   General Reference/ for the following:
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and AWS Service Namespaces</a>.
--   
--   You can specify multiple resource types by using an array. The array
--   can include up to 100 items. Note that the length constraint
--   requirement applies to each resource type filter.
--   
--   <a>$sel:excludeCompliantResources:GetResources'</a>,
--   <a>getResources_excludeCompliantResources</a> - Specifies whether to
--   exclude resources that are compliant with the tag policy. Set this to
--   <tt>true</tt> if you are interested in retrieving information on
--   noncompliant resources only.
--   
--   You can use this parameter only if the
--   <tt>IncludeComplianceDetails</tt> parameter is also set to
--   <tt>true</tt>.
--   
--   <a>$sel:tagsPerPage:GetResources'</a>, <a>getResources_tagsPerPage</a>
--   - AWS recommends using <tt>ResourcesPerPage</tt> instead of this
--   parameter.
--   
--   A limit that restricts the number of tags (key and value pairs)
--   returned by <tt>GetResources</tt> in paginated output. A resource with
--   no tags is counted as having one tag (one key and value pair).
--   
--   <tt>GetResources</tt> does not split a resource and its associated
--   tags across pages. If the specified <tt>TagsPerPage</tt> would cause
--   such a break, a <tt>PaginationToken</tt> is returned in place of the
--   affected resource and its tags. Use that token in another request to
--   get the remaining data. For example, if you specify a
--   <tt>TagsPerPage</tt> of <tt>100</tt> and the account has 22 resources
--   with 10 tags each (meaning that each resource has 10 key and value
--   pairs), the output will consist of three pages. The first page
--   displays the first 10 resources, each with its 10 tags. The second
--   page displays the next 10 resources, each with its 10 tags. The third
--   page displays the remaining 2 resources, each with its 10 tags.
--   
--   You can set <tt>TagsPerPage</tt> to a minimum of 100 items up to a
--   maximum of 500 items.
--   
--   <a>$sel:resourcesPerPage:GetResources'</a>,
--   <a>getResources_resourcesPerPage</a> - Specifies the maximum number of
--   results to be returned in each page. A query can return fewer than
--   this maximum, even if there are more results still to return. You
--   should always check the <tt>PaginationToken</tt> response value to see
--   if there are more results. You can specify a minimum of 1 and a
--   maximum value of 100.
--   
--   <a>$sel:resourceARNList:GetResources'</a>,
--   <a>getResources_resourceARNList</a> - Specifies a list of ARNs of
--   resources for which you want to retrieve tag data. You can't specify
--   both this parameter and any of the pagination parameters
--   (<tt>ResourcesPerPage</tt>, <tt>TagsPerPage</tt>,
--   <tt>PaginationToken</tt>) in the same request. If you specify both,
--   you get an <tt>Invalid Parameter</tt> exception.
--   
--   If a resource specified by this parameter doesn't exist, it doesn't
--   generate an error; it simply isn't included in the response.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
newGetResources :: GetResources

-- | <i>See:</i> <a>newGetResourcesResponse</a> smart constructor.
data GetResourcesResponse
GetResourcesResponse' :: Maybe [ResourceTagMapping] -> Maybe Text -> Int -> GetResourcesResponse

-- | Create a value of <a>GetResourcesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceTagMappingList:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_resourceTagMappingList</a> - A list of
--   resource ARNs and the tags (keys and values) associated with those
--   ARNs.
--   
--   <a>$sel:paginationToken:GetResources'</a>,
--   <a>getResourcesResponse_paginationToken</a> - A string that indicates
--   that there is more data available than this response contains. To
--   receive the next part of the response, specify this response value as
--   the <tt>PaginationToken</tt> value in the request for the next page.
--   
--   <a>$sel:httpStatus:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_httpStatus</a> - The response's http status
--   code.
newGetResourcesResponse :: Int -> GetResourcesResponse

-- | <i>See:</i> <a>newGetTagValues</a> smart constructor.
data GetTagValues
GetTagValues' :: Maybe Text -> Text -> GetTagValues

-- | Create a value of <a>GetTagValues</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetTagValues'</a>,
--   <a>getTagValues_paginationToken</a> - Specifies a
--   <tt>PaginationToken</tt> response value from a previous request to
--   indicate that you want the next page of results. Leave this parameter
--   empty in your initial request.
--   
--   <a>$sel:key:GetTagValues'</a>, <a>getTagValues_key</a> - Specifies the
--   tag key for which you want to list all existing values that are
--   currently used in the specified AWS Region for the calling AWS
--   account.
newGetTagValues :: Text -> GetTagValues

-- | <i>See:</i> <a>newGetTagValuesResponse</a> smart constructor.
data GetTagValuesResponse
GetTagValuesResponse' :: Maybe Text -> Maybe [Text] -> Int -> GetTagValuesResponse

-- | Create a value of <a>GetTagValuesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:GetTagValues'</a>,
--   <a>getTagValuesResponse_paginationToken</a> - A string that indicates
--   that there is more data available than this response contains. To
--   receive the next part of the response, specify this response value as
--   the <tt>PaginationToken</tt> value in the request for the next page.
--   
--   <a>$sel:tagValues:GetTagValuesResponse'</a>,
--   <a>getTagValuesResponse_tagValues</a> - A list of all tag values for
--   the specified key currently used in the specified AWS Region for the
--   calling AWS account.
--   
--   <a>$sel:httpStatus:GetTagValuesResponse'</a>,
--   <a>getTagValuesResponse_httpStatus</a> - The response's http status
--   code.
newGetTagValuesResponse :: Int -> GetTagValuesResponse

-- | <i>See:</i> <a>newUntagResources</a> smart constructor.
data UntagResources
UntagResources' :: NonEmpty Text -> NonEmpty Text -> UntagResources

-- | Create a value of <a>UntagResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARNList:UntagResources'</a>,
--   <a>untagResources_resourceARNList</a> - Specifies a list of ARNs of
--   the resources that you want to remove tags from.
--   
--   An ARN (Amazon Resource Name) uniquely identifies a resource. For more
--   information, see <a>Amazon Resource Names (ARNs) and AWS Service
--   Namespaces</a> in the <i>AWS General Reference</i>.
--   
--   <a>$sel:tagKeys:UntagResources'</a>, <a>untagResources_tagKeys</a> -
--   Specifies a list of tag keys that you want to remove from the
--   specified resources.
newUntagResources :: NonEmpty Text -> NonEmpty Text -> UntagResources

-- | <i>See:</i> <a>newUntagResourcesResponse</a> smart constructor.
data UntagResourcesResponse
UntagResourcesResponse' :: Maybe (HashMap Text FailureInfo) -> Int -> UntagResourcesResponse

-- | Create a value of <a>UntagResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedResourcesMap:UntagResourcesResponse'</a>,
--   <a>untagResourcesResponse_failedResourcesMap</a> - A map containing a
--   key-value pair for each failed item that couldn't be untagged. The key
--   is the ARN of the failed resource. The value is a <tt>FailureInfo</tt>
--   object that contains an error code, a status code, and an error
--   message. If there are no errors, the <tt>FailedResourcesMap</tt> is
--   empty.
--   
--   <a>$sel:httpStatus:UntagResourcesResponse'</a>,
--   <a>untagResourcesResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourcesResponse :: Int -> UntagResourcesResponse
newtype GroupByAttribute
GroupByAttribute' :: Text -> GroupByAttribute
[fromGroupByAttribute] :: GroupByAttribute -> Text
pattern GroupByAttribute_REGION :: GroupByAttribute
pattern GroupByAttribute_RESOURCE_TYPE :: GroupByAttribute
pattern GroupByAttribute_TARGET_ID :: GroupByAttribute
newtype ResourceErrorCode
ResourceErrorCode' :: Text -> ResourceErrorCode
[fromResourceErrorCode] :: ResourceErrorCode -> Text
pattern ResourceErrorCode_InternalServiceException :: ResourceErrorCode
pattern ResourceErrorCode_InvalidParameterException :: ResourceErrorCode
newtype TargetIdType
TargetIdType' :: Text -> TargetIdType
[fromTargetIdType] :: TargetIdType -> Text
pattern TargetIdType_ACCOUNT :: TargetIdType
pattern TargetIdType_OU :: TargetIdType
pattern TargetIdType_ROOT :: TargetIdType

-- | Information that shows whether a resource is compliant with the
--   effective tag policy, including details on any noncompliant tag keys.
--   
--   <i>See:</i> <a>newComplianceDetails</a> smart constructor.
data ComplianceDetails
ComplianceDetails' :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> ComplianceDetails

-- | Create a value of <a>ComplianceDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceStatus:ComplianceDetails'</a>,
--   <a>complianceDetails_complianceStatus</a> - Whether a resource is
--   compliant with the effective tag policy.
--   
--   <a>$sel:noncompliantKeys:ComplianceDetails'</a>,
--   <a>complianceDetails_noncompliantKeys</a> - These tag keys on the
--   resource are noncompliant with the effective tag policy.
--   
--   <a>$sel:keysWithNoncompliantValues:ComplianceDetails'</a>,
--   <a>complianceDetails_keysWithNoncompliantValues</a> - These are keys
--   defined in the effective policy that are on the resource with either
--   incorrect case treatment or noncompliant values.
newComplianceDetails :: ComplianceDetails

-- | Information about the errors that are returned for each failed
--   resource. This information can include
--   <tt>InternalServiceException</tt> and
--   <tt>InvalidParameterException</tt> errors. It can also include any
--   valid error code returned by the AWS service that hosts the resource
--   that the ARN key represents.
--   
--   The following are common error codes that you might receive from other
--   AWS services:
--   
--   <ul>
--   <li><b>InternalServiceException</b> – This can mean that the Resource
--   Groups Tagging API didn't receive a response from another AWS service.
--   It can also mean the the resource type in the request is not supported
--   by the Resource Groups Tagging API. In these cases, it's safe to retry
--   the request and then call <a>GetResources</a> to verify the
--   changes.</li>
--   <li><b>AccessDeniedException</b> – This can mean that you need
--   permission to calling tagging operations in the AWS service that
--   contains the resource. For example, to use the Resource Groups Tagging
--   API to tag a CloudWatch alarm resource, you need permission to call
--   <a>TagResources</a> <i>and</i> <a>TagResource</a> in the CloudWatch
--   API.</li>
--   </ul>
--   
--   For more information on errors that are generated from other AWS
--   services, see the documentation for that service.
--   
--   <i>See:</i> <a>newFailureInfo</a> smart constructor.
data FailureInfo
FailureInfo' :: Maybe Int -> Maybe Text -> Maybe ResourceErrorCode -> FailureInfo

-- | Create a value of <a>FailureInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusCode:FailureInfo'</a>, <a>failureInfo_statusCode</a> -
--   The HTTP status code of the common error.
--   
--   <a>$sel:errorMessage:FailureInfo'</a>, <a>failureInfo_errorMessage</a>
--   - The message of the common error.
--   
--   <a>$sel:errorCode:FailureInfo'</a>, <a>failureInfo_errorCode</a> - The
--   code of the common error. Valid values include
--   <tt>InternalServiceException</tt>, <tt>InvalidParameterException</tt>,
--   and any valid error code returned by the AWS service that hosts the
--   resource that you want to tag.
newFailureInfo :: FailureInfo

-- | A list of resource ARNs and the tags (keys and values) that are
--   associated with each.
--   
--   <i>See:</i> <a>newResourceTagMapping</a> smart constructor.
data ResourceTagMapping
ResourceTagMapping' :: Maybe Text -> Maybe ComplianceDetails -> Maybe [Tag] -> ResourceTagMapping

-- | Create a value of <a>ResourceTagMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ResourceTagMapping'</a>,
--   <a>resourceTagMapping_resourceARN</a> - The ARN of the resource.
--   
--   <a>$sel:complianceDetails:ResourceTagMapping'</a>,
--   <a>resourceTagMapping_complianceDetails</a> - Information that shows
--   whether a resource is compliant with the effective tag policy,
--   including details on any noncompliant tag keys.
--   
--   <a>$sel:tags:ResourceTagMapping'</a>, <a>resourceTagMapping_tags</a> -
--   The tags that have been applied to one or more AWS resources.
newResourceTagMapping :: ResourceTagMapping

-- | A count of noncompliant resources.
--   
--   <i>See:</i> <a>newSummary</a> smart constructor.
data Summary
Summary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe TargetIdType -> Maybe Integer -> Maybe Text -> Summary

-- | Create a value of <a>Summary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:Summary'</a>, <a>summary_targetId</a> - The account
--   identifier or the root identifier of the organization. If you don't
--   know the root ID, you can call the AWS Organizations <a>ListRoots</a>
--   API.
--   
--   <a>$sel:resourceType:Summary'</a>, <a>summary_resourceType</a> - The
--   AWS resource type.
--   
--   <a>$sel:lastUpdated:Summary'</a>, <a>summary_lastUpdated</a> - The
--   timestamp that shows when this summary was generated in this Region.
--   
--   <a>$sel:targetIdType:Summary'</a>, <a>summary_targetIdType</a> -
--   Whether the target is an account, an OU, or the organization root.
--   
--   <a>$sel:nonCompliantResources:Summary'</a>,
--   <a>summary_nonCompliantResources</a> - The count of noncompliant
--   resources.
--   
--   <a>$sel:region:Summary'</a>, <a>summary_region</a> - The AWS Region
--   that the summary applies to.
newSummary :: Summary

-- | The metadata that you apply to AWS resources to help you categorize
--   and organize them. Each tag consists of a key and a value, both of
--   which you define. For more information, see <a>Tagging AWS
--   Resources</a> in the <i>AWS General Reference</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that makes up a tag. A key is a general label that acts like a
--   category for more specific tag values.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - One part of a key-value
--   pair that make up a tag. A value acts as a descriptor within a tag
--   category (key). The value can be empty or null.
newTag :: Text -> Text -> Tag

-- | A list of tags (keys and values) that are used to specify the
--   associated resources.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe [Text] -> TagFilter

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - One part of a
--   key-value pair that makes up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - One part of a
--   key-value pair that make up a tag. A value acts as a descriptor within
--   a tag category (key). The value can be empty or null.
newTagFilter :: TagFilter
