-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-apprunnerZSamazonka-apprunner
@version 2.0


module Amazonka.AppRunner.Types.AuthenticationConfiguration

-- | Describes resources needed to authenticate access to some source
--   repositories. The specific resource depends on the repository
--   provider.
--   
--   <i>See:</i> <a>newAuthenticationConfiguration</a> smart constructor.
data AuthenticationConfiguration
AuthenticationConfiguration' :: Maybe Text -> Maybe Text -> AuthenticationConfiguration

-- | The Amazon Resource Name (ARN) of the IAM role that grants the App
--   Runner service access to a source repository. It's required for ECR
--   image repositories (but not for ECR Public repositories).
[$sel:accessRoleArn:AuthenticationConfiguration'] :: AuthenticationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the App Runner connection that
--   enables the App Runner service to connect to a source repository. It's
--   required for GitHub code repositories.
[$sel:connectionArn:AuthenticationConfiguration'] :: AuthenticationConfiguration -> Maybe Text

-- | Create a value of <a>AuthenticationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessRoleArn:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_accessRoleArn</a> - The Amazon Resource
--   Name (ARN) of the IAM role that grants the App Runner service access
--   to a source repository. It's required for ECR image repositories (but
--   not for ECR Public repositories).
--   
--   <a>$sel:connectionArn:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_connectionArn</a> - The Amazon Resource
--   Name (ARN) of the App Runner connection that enables the App Runner
--   service to connect to a source repository. It's required for GitHub
--   code repositories.
newAuthenticationConfiguration :: AuthenticationConfiguration

-- | The Amazon Resource Name (ARN) of the IAM role that grants the App
--   Runner service access to a source repository. It's required for ECR
--   image repositories (but not for ECR Public repositories).
authenticationConfiguration_accessRoleArn :: Lens' AuthenticationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the App Runner connection that
--   enables the App Runner service to connect to a source repository. It's
--   required for GitHub code repositories.
authenticationConfiguration_connectionArn :: Lens' AuthenticationConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance GHC.Read.Read Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.AuthenticationConfiguration.AuthenticationConfiguration


module Amazonka.AppRunner.Types.AutoScalingConfigurationStatus
newtype AutoScalingConfigurationStatus
AutoScalingConfigurationStatus' :: Text -> AutoScalingConfigurationStatus
[fromAutoScalingConfigurationStatus] :: AutoScalingConfigurationStatus -> Text
pattern AutoScalingConfigurationStatus_ACTIVE :: AutoScalingConfigurationStatus
pattern AutoScalingConfigurationStatus_INACTIVE :: AutoScalingConfigurationStatus
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance GHC.Generics.Generic Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance GHC.Classes.Ord Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance GHC.Classes.Eq Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance GHC.Read.Read Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus
instance GHC.Show.Show Amazonka.AppRunner.Types.AutoScalingConfigurationStatus.AutoScalingConfigurationStatus


module Amazonka.AppRunner.Types.AutoScalingConfiguration

-- | Describes an App Runner automatic scaling configuration resource.
--   Multiple revisions of a configuration have the same
--   <tt>AutoScalingConfigurationName</tt> and different
--   <tt>AutoScalingConfigurationRevision</tt> values.
--   
--   A higher <tt>MinSize</tt> increases the spread of your App Runner
--   service over more Availability Zones in the Amazon Web Services
--   Region. The tradeoff is a higher minimal cost.
--   
--   A lower <tt>MaxSize</tt> controls your cost. The tradeoff is lower
--   responsiveness during peak demand.
--   
--   <i>See:</i> <a>newAutoScalingConfiguration</a> smart constructor.
data AutoScalingConfiguration
AutoScalingConfiguration' :: Maybe AutoScalingConfigurationStatus -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe POSIX -> Maybe Bool -> Maybe Int -> AutoScalingConfiguration

-- | The current state of the auto scaling configuration. If the status of
--   a configuration revision is <tt>INACTIVE</tt>, it was deleted and
--   can't be used. Inactive configuration revisions are permanently
--   removed some time after they are deleted.
[$sel:status:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe AutoScalingConfigurationStatus

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
[$sel:autoScalingConfigurationName:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Text

-- | The time when the auto scaling configuration was created. It's in Unix
--   time stamp format.
[$sel:createdAt:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe POSIX

-- | The maximum number of instances that a service scales up to. At most
--   <tt>MaxSize</tt> instances actively serve traffic for your service.
[$sel:maxSize:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
[$sel:autoScalingConfigurationRevision:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
[$sel:autoScalingConfigurationArn:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Text

-- | The minimum number of instances that App Runner provisions for a
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
[$sel:minSize:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | The time when the auto scaling configuration was deleted. It's in Unix
--   time stamp format.
[$sel:deletedAt:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe POSIX

-- | It's set to <tt>true</tt> for the configuration with the highest
--   <tt>Revision</tt> among all configurations that share the same
--   <tt>Name</tt>. It's set to <tt>false</tt> otherwise.
[$sel:latest:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Bool

-- | The maximum number of concurrent requests that an instance processes.
--   If the number of concurrent requests exceeds this limit, App Runner
--   scales the service up.
[$sel:maxConcurrency:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | Create a value of <a>AutoScalingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_status</a> - The current state of the auto
--   scaling configuration. If the status of a configuration revision is
--   <tt>INACTIVE</tt>, it was deleted and can't be used. Inactive
--   configuration revisions are permanently removed some time after they
--   are deleted.
--   
--   <a>$sel:autoScalingConfigurationName:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationName</a> - The
--   customer-provided auto scaling configuration name. It can be used in
--   multiple revisions of a configuration.
--   
--   <a>$sel:createdAt:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_createdAt</a> - The time when the auto
--   scaling configuration was created. It's in Unix time stamp format.
--   
--   <a>$sel:maxSize:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_maxSize</a> - The maximum number of
--   instances that a service scales up to. At most <tt>MaxSize</tt>
--   instances actively serve traffic for your service.
--   
--   
--   <a>$sel:autoScalingConfigurationRevision:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationRevision</a> - The
--   revision of this auto scaling configuration. It's unique among all the
--   active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
--   
--   <a>$sel:autoScalingConfigurationArn:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationArn</a> - The
--   Amazon Resource Name (ARN) of this auto scaling configuration.
--   
--   <a>$sel:minSize:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_minSize</a> - The minimum number of
--   instances that App Runner provisions for a service. The service always
--   has at least <tt>MinSize</tt> provisioned instances. Some of them
--   actively serve traffic. The rest of them (provisioned and inactive
--   instances) are a cost-effective compute capacity reserve and are ready
--   to be quickly activated. You pay for memory usage of all the
--   provisioned instances. You pay for CPU usage of only the active
--   subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   <a>$sel:deletedAt:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_deletedAt</a> - The time when the auto
--   scaling configuration was deleted. It's in Unix time stamp format.
--   
--   <a>$sel:latest:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_latest</a> - It's set to <tt>true</tt> for
--   the configuration with the highest <tt>Revision</tt> among all
--   configurations that share the same <tt>Name</tt>. It's set to
--   <tt>false</tt> otherwise.
--   
--   <a>$sel:maxConcurrency:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_maxConcurrency</a> - The maximum number of
--   concurrent requests that an instance processes. If the number of
--   concurrent requests exceeds this limit, App Runner scales the service
--   up.
newAutoScalingConfiguration :: AutoScalingConfiguration

-- | The current state of the auto scaling configuration. If the status of
--   a configuration revision is <tt>INACTIVE</tt>, it was deleted and
--   can't be used. Inactive configuration revisions are permanently
--   removed some time after they are deleted.
autoScalingConfiguration_status :: Lens' AutoScalingConfiguration (Maybe AutoScalingConfigurationStatus)

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
autoScalingConfiguration_autoScalingConfigurationName :: Lens' AutoScalingConfiguration (Maybe Text)

-- | The time when the auto scaling configuration was created. It's in Unix
--   time stamp format.
autoScalingConfiguration_createdAt :: Lens' AutoScalingConfiguration (Maybe UTCTime)

-- | The maximum number of instances that a service scales up to. At most
--   <tt>MaxSize</tt> instances actively serve traffic for your service.
autoScalingConfiguration_maxSize :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
autoScalingConfiguration_autoScalingConfigurationRevision :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
autoScalingConfiguration_autoScalingConfigurationArn :: Lens' AutoScalingConfiguration (Maybe Text)

-- | The minimum number of instances that App Runner provisions for a
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
autoScalingConfiguration_minSize :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The time when the auto scaling configuration was deleted. It's in Unix
--   time stamp format.
autoScalingConfiguration_deletedAt :: Lens' AutoScalingConfiguration (Maybe UTCTime)

-- | It's set to <tt>true</tt> for the configuration with the highest
--   <tt>Revision</tt> among all configurations that share the same
--   <tt>Name</tt>. It's set to <tt>false</tt> otherwise.
autoScalingConfiguration_latest :: Lens' AutoScalingConfiguration (Maybe Bool)

-- | The maximum number of concurrent requests that an instance processes.
--   If the number of concurrent requests exceeds this limit, App Runner
--   scales the service up.
autoScalingConfiguration_maxConcurrency :: Lens' AutoScalingConfiguration (Maybe Int)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.AutoScalingConfiguration.AutoScalingConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.AutoScalingConfiguration.AutoScalingConfiguration
instance GHC.Read.Read Amazonka.AppRunner.Types.AutoScalingConfiguration.AutoScalingConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.AutoScalingConfiguration.AutoScalingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.AutoScalingConfiguration.AutoScalingConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.AutoScalingConfiguration.AutoScalingConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.AutoScalingConfiguration.AutoScalingConfiguration


module Amazonka.AppRunner.Types.AutoScalingConfigurationSummary

-- | Provides summary information about an App Runner automatic scaling
--   configuration resource.
--   
--   This type contains limited information about an auto scaling
--   configuration. It includes only identification information, without
--   configuration details. It's returned by the
--   ListAutoScalingConfigurations action. Complete configuration
--   information is returned by the CreateAutoScalingConfiguration,
--   DescribeAutoScalingConfiguration, and DeleteAutoScalingConfiguration
--   actions using the AutoScalingConfiguration type.
--   
--   <i>See:</i> <a>newAutoScalingConfigurationSummary</a> smart
--   constructor.
data AutoScalingConfigurationSummary
AutoScalingConfigurationSummary' :: Maybe Text -> Maybe Int -> Maybe Text -> AutoScalingConfigurationSummary

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
[$sel:autoScalingConfigurationName:AutoScalingConfigurationSummary'] :: AutoScalingConfigurationSummary -> Maybe Text

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) with the same
--   <tt>AutoScalingConfigurationName</tt>.
[$sel:autoScalingConfigurationRevision:AutoScalingConfigurationSummary'] :: AutoScalingConfigurationSummary -> Maybe Int

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
[$sel:autoScalingConfigurationArn:AutoScalingConfigurationSummary'] :: AutoScalingConfigurationSummary -> Maybe Text

-- | Create a value of <a>AutoScalingConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationName:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationName</a> -
--   The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
--   
--   
--   <a>$sel:autoScalingConfigurationRevision:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationRevision</a>
--   - The revision of this auto scaling configuration. It's unique among
--   all the active configurations (<tt>"Status": "ACTIVE"</tt>) with the
--   same <tt>AutoScalingConfigurationName</tt>.
--   
--   
--   <a>$sel:autoScalingConfigurationArn:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of this auto scaling configuration.
newAutoScalingConfigurationSummary :: AutoScalingConfigurationSummary

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
autoScalingConfigurationSummary_autoScalingConfigurationName :: Lens' AutoScalingConfigurationSummary (Maybe Text)

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) with the same
--   <tt>AutoScalingConfigurationName</tt>.
autoScalingConfigurationSummary_autoScalingConfigurationRevision :: Lens' AutoScalingConfigurationSummary (Maybe Int)

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
autoScalingConfigurationSummary_autoScalingConfigurationArn :: Lens' AutoScalingConfigurationSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.AutoScalingConfigurationSummary.AutoScalingConfigurationSummary
instance GHC.Show.Show Amazonka.AppRunner.Types.AutoScalingConfigurationSummary.AutoScalingConfigurationSummary
instance GHC.Read.Read Amazonka.AppRunner.Types.AutoScalingConfigurationSummary.AutoScalingConfigurationSummary
instance GHC.Classes.Eq Amazonka.AppRunner.Types.AutoScalingConfigurationSummary.AutoScalingConfigurationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.AutoScalingConfigurationSummary.AutoScalingConfigurationSummary
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.AutoScalingConfigurationSummary.AutoScalingConfigurationSummary
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.AutoScalingConfigurationSummary.AutoScalingConfigurationSummary


module Amazonka.AppRunner.Types.CertificateValidationRecordStatus
newtype CertificateValidationRecordStatus
CertificateValidationRecordStatus' :: Text -> CertificateValidationRecordStatus
[fromCertificateValidationRecordStatus] :: CertificateValidationRecordStatus -> Text
pattern CertificateValidationRecordStatus_FAILED :: CertificateValidationRecordStatus
pattern CertificateValidationRecordStatus_PENDING_VALIDATION :: CertificateValidationRecordStatus
pattern CertificateValidationRecordStatus_SUCCESS :: CertificateValidationRecordStatus
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance GHC.Generics.Generic Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance GHC.Classes.Ord Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance GHC.Classes.Eq Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance GHC.Read.Read Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus
instance GHC.Show.Show Amazonka.AppRunner.Types.CertificateValidationRecordStatus.CertificateValidationRecordStatus


module Amazonka.AppRunner.Types.CertificateValidationRecord

-- | Describes a certificate CNAME record to add to your DNS. For more
--   information, see <a>AssociateCustomDomain</a>.
--   
--   <i>See:</i> <a>newCertificateValidationRecord</a> smart constructor.
data CertificateValidationRecord
CertificateValidationRecord' :: Maybe CertificateValidationRecordStatus -> Maybe Text -> Maybe Text -> Maybe Text -> CertificateValidationRecord

-- | The current state of the certificate CNAME record validation. It
--   should change to <tt>SUCCESS</tt> after App Runner completes
--   validation with your DNS.
[$sel:status:CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe CertificateValidationRecordStatus

-- | The certificate CNAME record value.
[$sel:value:CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe Text

-- | The certificate CNAME record name.
[$sel:name:CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe Text

-- | The record type, always <tt>CNAME</tt>.
[$sel:type':CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe Text

-- | Create a value of <a>CertificateValidationRecord</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_status</a> - The current state of the
--   certificate CNAME record validation. It should change to
--   <tt>SUCCESS</tt> after App Runner completes validation with your DNS.
--   
--   <a>$sel:value:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_value</a> - The certificate CNAME
--   record value.
--   
--   <a>$sel:name:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_name</a> - The certificate CNAME record
--   name.
--   
--   <a>$sel:type':CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_type</a> - The record type, always
--   <tt>CNAME</tt>.
newCertificateValidationRecord :: CertificateValidationRecord

-- | The current state of the certificate CNAME record validation. It
--   should change to <tt>SUCCESS</tt> after App Runner completes
--   validation with your DNS.
certificateValidationRecord_status :: Lens' CertificateValidationRecord (Maybe CertificateValidationRecordStatus)

-- | The certificate CNAME record value.
certificateValidationRecord_value :: Lens' CertificateValidationRecord (Maybe Text)

-- | The certificate CNAME record name.
certificateValidationRecord_name :: Lens' CertificateValidationRecord (Maybe Text)

-- | The record type, always <tt>CNAME</tt>.
certificateValidationRecord_type :: Lens' CertificateValidationRecord (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.CertificateValidationRecord.CertificateValidationRecord
instance GHC.Show.Show Amazonka.AppRunner.Types.CertificateValidationRecord.CertificateValidationRecord
instance GHC.Read.Read Amazonka.AppRunner.Types.CertificateValidationRecord.CertificateValidationRecord
instance GHC.Classes.Eq Amazonka.AppRunner.Types.CertificateValidationRecord.CertificateValidationRecord
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.CertificateValidationRecord.CertificateValidationRecord
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.CertificateValidationRecord.CertificateValidationRecord
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.CertificateValidationRecord.CertificateValidationRecord


module Amazonka.AppRunner.Types.ConfigurationSource
newtype ConfigurationSource
ConfigurationSource' :: Text -> ConfigurationSource
[fromConfigurationSource] :: ConfigurationSource -> Text
pattern ConfigurationSource_API :: ConfigurationSource
pattern ConfigurationSource_REPOSITORY :: ConfigurationSource
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance GHC.Classes.Ord Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance GHC.Read.Read Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource
instance GHC.Show.Show Amazonka.AppRunner.Types.ConfigurationSource.ConfigurationSource


module Amazonka.AppRunner.Types.ConnectionStatus
newtype ConnectionStatus
ConnectionStatus' :: Text -> ConnectionStatus
[fromConnectionStatus] :: ConnectionStatus -> Text
pattern ConnectionStatus_AVAILABLE :: ConnectionStatus
pattern ConnectionStatus_DELETED :: ConnectionStatus
pattern ConnectionStatus_ERROR :: ConnectionStatus
pattern ConnectionStatus_PENDING_HANDSHAKE :: ConnectionStatus
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance GHC.Classes.Ord Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance GHC.Read.Read Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus
instance GHC.Show.Show Amazonka.AppRunner.Types.ConnectionStatus.ConnectionStatus


module Amazonka.AppRunner.Types.CustomDomainAssociationStatus
newtype CustomDomainAssociationStatus
CustomDomainAssociationStatus' :: Text -> CustomDomainAssociationStatus
[fromCustomDomainAssociationStatus] :: CustomDomainAssociationStatus -> Text
pattern CustomDomainAssociationStatus_ACTIVE :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_BINDING_CERTIFICATE :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_CREATE_FAILED :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_CREATING :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_DELETE_FAILED :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_DELETING :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_PENDING_CERTIFICATE_DNS_VALIDATION :: CustomDomainAssociationStatus
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance GHC.Generics.Generic Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance GHC.Classes.Ord Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance GHC.Classes.Eq Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance GHC.Read.Read Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus
instance GHC.Show.Show Amazonka.AppRunner.Types.CustomDomainAssociationStatus.CustomDomainAssociationStatus


module Amazonka.AppRunner.Types.CustomDomain

-- | Describes a custom domain that's associated with an App Runner
--   service.
--   
--   <i>See:</i> <a>newCustomDomain</a> smart constructor.
data CustomDomain
CustomDomain' :: Maybe [CertificateValidationRecord] -> Text -> Bool -> CustomDomainAssociationStatus -> CustomDomain

-- | A list of certificate CNAME records that's used for this domain name.
[$sel:certificateValidationRecords:CustomDomain'] :: CustomDomain -> Maybe [CertificateValidationRecord]

-- | An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
[$sel:domainName:CustomDomain'] :: CustomDomain -> Text

-- | When <tt>true</tt>, the subdomain <tt>www.DomainName </tt> is
--   associated with the App Runner service in addition to the base domain.
[$sel:enableWWWSubdomain:CustomDomain'] :: CustomDomain -> Bool

-- | The current state of the domain name association.
[$sel:status:CustomDomain'] :: CustomDomain -> CustomDomainAssociationStatus

-- | Create a value of <a>CustomDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateValidationRecords:CustomDomain'</a>,
--   <a>customDomain_certificateValidationRecords</a> - A list of
--   certificate CNAME records that's used for this domain name.
--   
--   <a>$sel:domainName:CustomDomain'</a>, <a>customDomain_domainName</a> -
--   An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
--   
--   <a>$sel:enableWWWSubdomain:CustomDomain'</a>,
--   <a>customDomain_enableWWWSubdomain</a> - When <tt>true</tt>, the
--   subdomain <tt>www.DomainName </tt> is associated with the App Runner
--   service in addition to the base domain.
--   
--   <a>$sel:status:CustomDomain'</a>, <a>customDomain_status</a> - The
--   current state of the domain name association.
newCustomDomain :: Text -> Bool -> CustomDomainAssociationStatus -> CustomDomain

-- | A list of certificate CNAME records that's used for this domain name.
customDomain_certificateValidationRecords :: Lens' CustomDomain (Maybe [CertificateValidationRecord])

-- | An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
customDomain_domainName :: Lens' CustomDomain Text

-- | When <tt>true</tt>, the subdomain <tt>www.DomainName </tt> is
--   associated with the App Runner service in addition to the base domain.
customDomain_enableWWWSubdomain :: Lens' CustomDomain Bool

-- | The current state of the domain name association.
customDomain_status :: Lens' CustomDomain CustomDomainAssociationStatus
instance GHC.Generics.Generic Amazonka.AppRunner.Types.CustomDomain.CustomDomain
instance GHC.Show.Show Amazonka.AppRunner.Types.CustomDomain.CustomDomain
instance GHC.Read.Read Amazonka.AppRunner.Types.CustomDomain.CustomDomain
instance GHC.Classes.Eq Amazonka.AppRunner.Types.CustomDomain.CustomDomain
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.CustomDomain.CustomDomain
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.CustomDomain.CustomDomain
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.CustomDomain.CustomDomain


module Amazonka.AppRunner.Types.EncryptionConfiguration

-- | Describes a custom encryption key that App Runner uses to encrypt
--   copies of the source repository and service logs.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Text -> EncryptionConfiguration

-- | The ARN of the KMS key that's used for encryption.
[$sel:kmsKey:EncryptionConfiguration'] :: EncryptionConfiguration -> Text

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKey:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_kmsKey</a> - The ARN of the KMS key that's
--   used for encryption.
newEncryptionConfiguration :: Text -> EncryptionConfiguration

-- | The ARN of the KMS key that's used for encryption.
encryptionConfiguration_kmsKey :: Lens' EncryptionConfiguration Text
instance GHC.Generics.Generic Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Read.Read Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.EncryptionConfiguration.EncryptionConfiguration


module Amazonka.AppRunner.Types.HealthCheckProtocol
newtype HealthCheckProtocol
HealthCheckProtocol' :: Text -> HealthCheckProtocol
[fromHealthCheckProtocol] :: HealthCheckProtocol -> Text
pattern HealthCheckProtocol_HTTP :: HealthCheckProtocol
pattern HealthCheckProtocol_TCP :: HealthCheckProtocol
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance GHC.Generics.Generic Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance GHC.Classes.Ord Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance GHC.Classes.Eq Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance GHC.Read.Read Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol
instance GHC.Show.Show Amazonka.AppRunner.Types.HealthCheckProtocol.HealthCheckProtocol


module Amazonka.AppRunner.Types.HealthCheckConfiguration

-- | Describes the settings for the health check that App Runner performs
--   to monitor the health of a service.
--   
--   <i>See:</i> <a>newHealthCheckConfiguration</a> smart constructor.
data HealthCheckConfiguration
HealthCheckConfiguration' :: Maybe Natural -> Maybe Text -> Maybe HealthCheckProtocol -> Maybe Natural -> Maybe Natural -> Maybe Natural -> HealthCheckConfiguration

-- | The number of consecutive checks that must succeed before App Runner
--   decides that the service is healthy.
--   
--   Default: <tt>1</tt>
[$sel:healthyThreshold:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | The URL that health check requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
[$sel:path:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Text

-- | The IP protocol that App Runner uses to perform health checks for your
--   service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
[$sel:protocol:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe HealthCheckProtocol

-- | The time interval, in seconds, between health checks.
--   
--   Default: <tt>5</tt>
[$sel:interval:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | The time, in seconds, to wait for a health check response before
--   deciding it failed.
--   
--   Default: <tt>2</tt>
[$sel:timeout:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | The number of consecutive checks that must fail before App Runner
--   decides that the service is unhealthy.
--   
--   Default: <tt>5</tt>
[$sel:unhealthyThreshold:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | Create a value of <a>HealthCheckConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthyThreshold:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_healthyThreshold</a> - The number of
--   consecutive checks that must succeed before App Runner decides that
--   the service is healthy.
--   
--   Default: <tt>1</tt>
--   
--   <a>$sel:path:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_path</a> - The URL that health check
--   requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
--   
--   <a>$sel:protocol:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_protocol</a> - The IP protocol that App
--   Runner uses to perform health checks for your service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
--   
--   <a>$sel:interval:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_interval</a> - The time interval, in
--   seconds, between health checks.
--   
--   Default: <tt>5</tt>
--   
--   <a>$sel:timeout:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_timeout</a> - The time, in seconds, to
--   wait for a health check response before deciding it failed.
--   
--   Default: <tt>2</tt>
--   
--   <a>$sel:unhealthyThreshold:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_unhealthyThreshold</a> - The number of
--   consecutive checks that must fail before App Runner decides that the
--   service is unhealthy.
--   
--   Default: <tt>5</tt>
newHealthCheckConfiguration :: HealthCheckConfiguration

-- | The number of consecutive checks that must succeed before App Runner
--   decides that the service is healthy.
--   
--   Default: <tt>1</tt>
healthCheckConfiguration_healthyThreshold :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The URL that health check requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
healthCheckConfiguration_path :: Lens' HealthCheckConfiguration (Maybe Text)

-- | The IP protocol that App Runner uses to perform health checks for your
--   service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
healthCheckConfiguration_protocol :: Lens' HealthCheckConfiguration (Maybe HealthCheckProtocol)

-- | The time interval, in seconds, between health checks.
--   
--   Default: <tt>5</tt>
healthCheckConfiguration_interval :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The time, in seconds, to wait for a health check response before
--   deciding it failed.
--   
--   Default: <tt>2</tt>
healthCheckConfiguration_timeout :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The number of consecutive checks that must fail before App Runner
--   decides that the service is unhealthy.
--   
--   Default: <tt>5</tt>
healthCheckConfiguration_unhealthyThreshold :: Lens' HealthCheckConfiguration (Maybe Natural)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration
instance GHC.Read.Read Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.HealthCheckConfiguration.HealthCheckConfiguration


module Amazonka.AppRunner.Types.ImageConfiguration

-- | Describes the configuration that App Runner uses to run an App Runner
--   service using an image pulled from a source image repository.
--   
--   <i>See:</i> <a>newImageConfiguration</a> smart constructor.
data ImageConfiguration
ImageConfiguration' :: Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> ImageConfiguration

-- | An optional command that App Runner runs to start the application in
--   the source image. If specified, this command overrides the Docker
--   image’s default start command.
[$sel:startCommand:ImageConfiguration'] :: ImageConfiguration -> Maybe Text

-- | Environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
[$sel:runtimeEnvironmentVariables:ImageConfiguration'] :: ImageConfiguration -> Maybe (HashMap Text (Sensitive Text))

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
[$sel:port:ImageConfiguration'] :: ImageConfiguration -> Maybe Text

-- | Create a value of <a>ImageConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startCommand:ImageConfiguration'</a>,
--   <a>imageConfiguration_startCommand</a> - An optional command that App
--   Runner runs to start the application in the source image. If
--   specified, this command overrides the Docker image’s default start
--   command.
--   
--   <a>$sel:runtimeEnvironmentVariables:ImageConfiguration'</a>,
--   <a>imageConfiguration_runtimeEnvironmentVariables</a> - Environment
--   variables that are available to your running App Runner service. An
--   array of key-value pairs. Keys with a prefix of <tt>AWSAPPRUNNER</tt>
--   are reserved for system use and aren't valid.
--   
--   <a>$sel:port:ImageConfiguration'</a>, <a>imageConfiguration_port</a> -
--   The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
newImageConfiguration :: ImageConfiguration

-- | An optional command that App Runner runs to start the application in
--   the source image. If specified, this command overrides the Docker
--   image’s default start command.
imageConfiguration_startCommand :: Lens' ImageConfiguration (Maybe Text)

-- | Environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
imageConfiguration_runtimeEnvironmentVariables :: Lens' ImageConfiguration (Maybe (HashMap Text Text))

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
imageConfiguration_port :: Lens' ImageConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ImageConfiguration.ImageConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.ImageConfiguration.ImageConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ImageConfiguration.ImageConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ImageConfiguration.ImageConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ImageConfiguration.ImageConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ImageConfiguration.ImageConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.ImageConfiguration.ImageConfiguration


module Amazonka.AppRunner.Types.ImageRepositoryType
newtype ImageRepositoryType
ImageRepositoryType' :: Text -> ImageRepositoryType
[fromImageRepositoryType] :: ImageRepositoryType -> Text
pattern ImageRepositoryType_ECR :: ImageRepositoryType
pattern ImageRepositoryType_ECR_PUBLIC :: ImageRepositoryType
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance GHC.Classes.Ord Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance GHC.Read.Read Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType
instance GHC.Show.Show Amazonka.AppRunner.Types.ImageRepositoryType.ImageRepositoryType


module Amazonka.AppRunner.Types.ImageRepository

-- | Describes a source image repository.
--   
--   <i>See:</i> <a>newImageRepository</a> smart constructor.
data ImageRepository
ImageRepository' :: Maybe ImageConfiguration -> Text -> ImageRepositoryType -> ImageRepository

-- | Configuration for running the identified image.
[$sel:imageConfiguration:ImageRepository'] :: ImageRepository -> Maybe ImageConfiguration

-- | The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
[$sel:imageIdentifier:ImageRepository'] :: ImageRepository -> Text

-- | The type of the image repository. This reflects the repository
--   provider and whether the repository is private or public.
[$sel:imageRepositoryType:ImageRepository'] :: ImageRepository -> ImageRepositoryType

-- | Create a value of <a>ImageRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageConfiguration:ImageRepository'</a>,
--   <a>imageRepository_imageConfiguration</a> - Configuration for running
--   the identified image.
--   
--   <a>$sel:imageIdentifier:ImageRepository'</a>,
--   <a>imageRepository_imageIdentifier</a> - The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
--   
--   <a>$sel:imageRepositoryType:ImageRepository'</a>,
--   <a>imageRepository_imageRepositoryType</a> - The type of the image
--   repository. This reflects the repository provider and whether the
--   repository is private or public.
newImageRepository :: Text -> ImageRepositoryType -> ImageRepository

-- | Configuration for running the identified image.
imageRepository_imageConfiguration :: Lens' ImageRepository (Maybe ImageConfiguration)

-- | The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
imageRepository_imageIdentifier :: Lens' ImageRepository Text

-- | The type of the image repository. This reflects the repository
--   provider and whether the repository is private or public.
imageRepository_imageRepositoryType :: Lens' ImageRepository ImageRepositoryType
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ImageRepository.ImageRepository
instance GHC.Show.Show Amazonka.AppRunner.Types.ImageRepository.ImageRepository
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ImageRepository.ImageRepository
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ImageRepository.ImageRepository
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ImageRepository.ImageRepository
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ImageRepository.ImageRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.ImageRepository.ImageRepository


module Amazonka.AppRunner.Types.InstanceConfiguration

-- | Describes the runtime configuration of an App Runner service instance
--   (scaling unit).
--   
--   <i>See:</i> <a>newInstanceConfiguration</a> smart constructor.
data InstanceConfiguration
InstanceConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> InstanceConfiguration

-- | The amount of memory, in MB or GB, reserved for each instance of your
--   App Runner service.
--   
--   Default: <tt>2 GB</tt>
[$sel:memory:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of an IAM role that provides
--   permissions to your App Runner service. These are permissions that
--   your code needs when it calls any Amazon Web Services APIs.
[$sel:instanceRoleArn:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | The number of CPU units reserved for each instance of your App Runner
--   service.
--   
--   Default: <tt>1 vCPU</tt>
[$sel:cpu:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | Create a value of <a>InstanceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memory:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_memory</a> - The amount of memory, in MB or
--   GB, reserved for each instance of your App Runner service.
--   
--   Default: <tt>2 GB</tt>
--   
--   <a>$sel:instanceRoleArn:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_instanceRoleArn</a> - The Amazon Resource
--   Name (ARN) of an IAM role that provides permissions to your App Runner
--   service. These are permissions that your code needs when it calls any
--   Amazon Web Services APIs.
--   
--   <a>$sel:cpu:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_cpu</a> - The number of CPU units reserved
--   for each instance of your App Runner service.
--   
--   Default: <tt>1 vCPU</tt>
newInstanceConfiguration :: InstanceConfiguration

-- | The amount of memory, in MB or GB, reserved for each instance of your
--   App Runner service.
--   
--   Default: <tt>2 GB</tt>
instanceConfiguration_memory :: Lens' InstanceConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of an IAM role that provides
--   permissions to your App Runner service. These are permissions that
--   your code needs when it calls any Amazon Web Services APIs.
instanceConfiguration_instanceRoleArn :: Lens' InstanceConfiguration (Maybe Text)

-- | The number of CPU units reserved for each instance of your App Runner
--   service.
--   
--   Default: <tt>1 vCPU</tt>
instanceConfiguration_cpu :: Lens' InstanceConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration
instance GHC.Read.Read Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.InstanceConfiguration.InstanceConfiguration


module Amazonka.AppRunner.Types.OperationStatus
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_FAILED :: OperationStatus
pattern OperationStatus_IN_PROGRESS :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_ROLLBACK_FAILED :: OperationStatus
pattern OperationStatus_ROLLBACK_IN_PROGRESS :: OperationStatus
pattern OperationStatus_ROLLBACK_SUCCEEDED :: OperationStatus
pattern OperationStatus_SUCCEEDED :: OperationStatus
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance GHC.Generics.Generic Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance GHC.Classes.Ord Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance GHC.Classes.Eq Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance GHC.Read.Read Amazonka.AppRunner.Types.OperationStatus.OperationStatus
instance GHC.Show.Show Amazonka.AppRunner.Types.OperationStatus.OperationStatus


module Amazonka.AppRunner.Types.OperationType
newtype OperationType
OperationType' :: Text -> OperationType
[fromOperationType] :: OperationType -> Text
pattern OperationType_CREATE_SERVICE :: OperationType
pattern OperationType_DELETE_SERVICE :: OperationType
pattern OperationType_PAUSE_SERVICE :: OperationType
pattern OperationType_RESUME_SERVICE :: OperationType
pattern OperationType_START_DEPLOYMENT :: OperationType
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.OperationType.OperationType
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.OperationType.OperationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.OperationType.OperationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.OperationType.OperationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.OperationType.OperationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.OperationType.OperationType
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.OperationType.OperationType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.OperationType.OperationType
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.OperationType.OperationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.OperationType.OperationType
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.OperationType.OperationType
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.OperationType.OperationType
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.OperationType.OperationType
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.OperationType.OperationType
instance GHC.Generics.Generic Amazonka.AppRunner.Types.OperationType.OperationType
instance GHC.Classes.Ord Amazonka.AppRunner.Types.OperationType.OperationType
instance GHC.Classes.Eq Amazonka.AppRunner.Types.OperationType.OperationType
instance GHC.Read.Read Amazonka.AppRunner.Types.OperationType.OperationType
instance GHC.Show.Show Amazonka.AppRunner.Types.OperationType.OperationType


module Amazonka.AppRunner.Types.OperationSummary

-- | Provides summary information for an operation that occurred on an App
--   Runner service.
--   
--   <i>See:</i> <a>newOperationSummary</a> smart constructor.
data OperationSummary
OperationSummary' :: Maybe OperationStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe OperationType -> Maybe POSIX -> OperationSummary

-- | The current state of the operation.
[$sel:status:OperationSummary'] :: OperationSummary -> Maybe OperationStatus

-- | The Amazon Resource Name (ARN) of the resource that the operation
--   acted on (for example, an App Runner service).
[$sel:targetArn:OperationSummary'] :: OperationSummary -> Maybe Text

-- | The time when the operation ended. It's in the Unix time stamp format.
[$sel:endedAt:OperationSummary'] :: OperationSummary -> Maybe POSIX

-- | The time when the operation started. It's in the Unix time stamp
--   format.
[$sel:startedAt:OperationSummary'] :: OperationSummary -> Maybe POSIX

-- | A unique ID of this operation. It's unique in the scope of the App
--   Runner service.
[$sel:id:OperationSummary'] :: OperationSummary -> Maybe Text

-- | The type of operation. It indicates a specific action that occured.
[$sel:type':OperationSummary'] :: OperationSummary -> Maybe OperationType

-- | The time when the operation was last updated. It's in the Unix time
--   stamp format.
[$sel:updatedAt:OperationSummary'] :: OperationSummary -> Maybe POSIX

-- | Create a value of <a>OperationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OperationSummary'</a>, <a>operationSummary_status</a> -
--   The current state of the operation.
--   
--   <a>$sel:targetArn:OperationSummary'</a>,
--   <a>operationSummary_targetArn</a> - The Amazon Resource Name (ARN) of
--   the resource that the operation acted on (for example, an App Runner
--   service).
--   
--   <a>$sel:endedAt:OperationSummary'</a>, <a>operationSummary_endedAt</a>
--   - The time when the operation ended. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:startedAt:OperationSummary'</a>,
--   <a>operationSummary_startedAt</a> - The time when the operation
--   started. It's in the Unix time stamp format.
--   
--   <a>$sel:id:OperationSummary'</a>, <a>operationSummary_id</a> - A
--   unique ID of this operation. It's unique in the scope of the App
--   Runner service.
--   
--   <a>$sel:type':OperationSummary'</a>, <a>operationSummary_type</a> -
--   The type of operation. It indicates a specific action that occured.
--   
--   <a>$sel:updatedAt:OperationSummary'</a>,
--   <a>operationSummary_updatedAt</a> - The time when the operation was
--   last updated. It's in the Unix time stamp format.
newOperationSummary :: OperationSummary

-- | The current state of the operation.
operationSummary_status :: Lens' OperationSummary (Maybe OperationStatus)

-- | The Amazon Resource Name (ARN) of the resource that the operation
--   acted on (for example, an App Runner service).
operationSummary_targetArn :: Lens' OperationSummary (Maybe Text)

-- | The time when the operation ended. It's in the Unix time stamp format.
operationSummary_endedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | The time when the operation started. It's in the Unix time stamp
--   format.
operationSummary_startedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | A unique ID of this operation. It's unique in the scope of the App
--   Runner service.
operationSummary_id :: Lens' OperationSummary (Maybe Text)

-- | The type of operation. It indicates a specific action that occured.
operationSummary_type :: Lens' OperationSummary (Maybe OperationType)

-- | The time when the operation was last updated. It's in the Unix time
--   stamp format.
operationSummary_updatedAt :: Lens' OperationSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.OperationSummary.OperationSummary
instance GHC.Show.Show Amazonka.AppRunner.Types.OperationSummary.OperationSummary
instance GHC.Read.Read Amazonka.AppRunner.Types.OperationSummary.OperationSummary
instance GHC.Classes.Eq Amazonka.AppRunner.Types.OperationSummary.OperationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.OperationSummary.OperationSummary
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.OperationSummary.OperationSummary
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.OperationSummary.OperationSummary


module Amazonka.AppRunner.Types.ProviderType
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_GITHUB :: ProviderType
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ProviderType.ProviderType
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ProviderType.ProviderType
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ProviderType.ProviderType
instance GHC.Classes.Ord Amazonka.AppRunner.Types.ProviderType.ProviderType
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ProviderType.ProviderType
instance GHC.Read.Read Amazonka.AppRunner.Types.ProviderType.ProviderType
instance GHC.Show.Show Amazonka.AppRunner.Types.ProviderType.ProviderType


module Amazonka.AppRunner.Types.ConnectionSummary

-- | Provides summary information about an App Runner connection resource.
--   
--   <i>See:</i> <a>newConnectionSummary</a> smart constructor.
data ConnectionSummary
ConnectionSummary' :: Maybe ConnectionStatus -> Maybe POSIX -> Maybe ProviderType -> Maybe Text -> Maybe Text -> ConnectionSummary

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
[$sel:status:ConnectionSummary'] :: ConnectionSummary -> Maybe ConnectionStatus

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
[$sel:createdAt:ConnectionSummary'] :: ConnectionSummary -> Maybe POSIX

-- | The source repository provider.
[$sel:providerType:ConnectionSummary'] :: ConnectionSummary -> Maybe ProviderType

-- | The customer-provided connection name.
[$sel:connectionName:ConnectionSummary'] :: ConnectionSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of this connection.
[$sel:connectionArn:ConnectionSummary'] :: ConnectionSummary -> Maybe Text

-- | Create a value of <a>ConnectionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ConnectionSummary'</a>, <a>connectionSummary_status</a>
--   - The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
--   
--   <a>$sel:createdAt:ConnectionSummary'</a>,
--   <a>connectionSummary_createdAt</a> - The App Runner connection
--   creation time, expressed as a Unix time stamp.
--   
--   <a>$sel:providerType:ConnectionSummary'</a>,
--   <a>connectionSummary_providerType</a> - The source repository
--   provider.
--   
--   <a>$sel:connectionName:ConnectionSummary'</a>,
--   <a>connectionSummary_connectionName</a> - The customer-provided
--   connection name.
--   
--   <a>$sel:connectionArn:ConnectionSummary'</a>,
--   <a>connectionSummary_connectionArn</a> - The Amazon Resource Name
--   (ARN) of this connection.
newConnectionSummary :: ConnectionSummary

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
connectionSummary_status :: Lens' ConnectionSummary (Maybe ConnectionStatus)

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
connectionSummary_createdAt :: Lens' ConnectionSummary (Maybe UTCTime)

-- | The source repository provider.
connectionSummary_providerType :: Lens' ConnectionSummary (Maybe ProviderType)

-- | The customer-provided connection name.
connectionSummary_connectionName :: Lens' ConnectionSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of this connection.
connectionSummary_connectionArn :: Lens' ConnectionSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ConnectionSummary.ConnectionSummary
instance GHC.Show.Show Amazonka.AppRunner.Types.ConnectionSummary.ConnectionSummary
instance GHC.Read.Read Amazonka.AppRunner.Types.ConnectionSummary.ConnectionSummary
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ConnectionSummary.ConnectionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ConnectionSummary.ConnectionSummary
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ConnectionSummary.ConnectionSummary
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ConnectionSummary.ConnectionSummary


module Amazonka.AppRunner.Types.Connection

-- | Describes an App Runner connection resource.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe ConnectionStatus -> Maybe POSIX -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Connection

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
[$sel:status:Connection'] :: Connection -> Maybe ConnectionStatus

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
[$sel:createdAt:Connection'] :: Connection -> Maybe POSIX

-- | The source repository provider.
[$sel:providerType:Connection'] :: Connection -> Maybe ProviderType

-- | The customer-provided connection name.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The Amazon Resource Name (ARN) of this connection.
[$sel:connectionArn:Connection'] :: Connection -> Maybe Text

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Connection'</a>, <a>connection_status</a> - The current
--   state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
--   
--   <a>$sel:createdAt:Connection'</a>, <a>connection_createdAt</a> - The
--   App Runner connection creation time, expressed as a Unix time stamp.
--   
--   <a>$sel:providerType:Connection'</a>, <a>connection_providerType</a> -
--   The source repository provider.
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The customer-provided connection
--   name.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The Amazon Resource Name (ARN) of this connection.
newConnection :: Connection

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
connection_status :: Lens' Connection (Maybe ConnectionStatus)

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
connection_createdAt :: Lens' Connection (Maybe UTCTime)

-- | The source repository provider.
connection_providerType :: Lens' Connection (Maybe ProviderType)

-- | The customer-provided connection name.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The Amazon Resource Name (ARN) of this connection.
connection_connectionArn :: Lens' Connection (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.Connection.Connection
instance GHC.Show.Show Amazonka.AppRunner.Types.Connection.Connection
instance GHC.Read.Read Amazonka.AppRunner.Types.Connection.Connection
instance GHC.Classes.Eq Amazonka.AppRunner.Types.Connection.Connection
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.Connection.Connection
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.Connection.Connection
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.Connection.Connection


module Amazonka.AppRunner.Types.Runtime
newtype Runtime
Runtime' :: Text -> Runtime
[fromRuntime] :: Runtime -> Text
pattern Runtime_NODEJS_12 :: Runtime
pattern Runtime_PYTHON_3 :: Runtime
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.Runtime.Runtime
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.Runtime.Runtime
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.Runtime.Runtime
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.Runtime.Runtime
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.Runtime.Runtime
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.Runtime.Runtime
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.Runtime.Runtime
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.Runtime.Runtime
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.Runtime.Runtime
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.Runtime.Runtime
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.Runtime.Runtime
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.Runtime.Runtime
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.Runtime.Runtime
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.Runtime.Runtime
instance GHC.Generics.Generic Amazonka.AppRunner.Types.Runtime.Runtime
instance GHC.Classes.Ord Amazonka.AppRunner.Types.Runtime.Runtime
instance GHC.Classes.Eq Amazonka.AppRunner.Types.Runtime.Runtime
instance GHC.Read.Read Amazonka.AppRunner.Types.Runtime.Runtime
instance GHC.Show.Show Amazonka.AppRunner.Types.Runtime.Runtime


module Amazonka.AppRunner.Types.CodeConfigurationValues

-- | Describes the basic configuration needed for building and running an
--   App Runner service. This type doesn't support the full set of possible
--   configuration options. Fur full configuration capabilities, use a
--   <tt>apprunner.yaml</tt> file in the source code repository.
--   
--   <i>See:</i> <a>newCodeConfigurationValues</a> smart constructor.
data CodeConfigurationValues
CodeConfigurationValues' :: Maybe (Sensitive Text) -> Maybe (HashMap Text (Sensitive Text)) -> Maybe (Sensitive Text) -> Maybe Text -> Runtime -> CodeConfigurationValues

-- | The command App Runner runs to start your application.
[$sel:startCommand:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe (Sensitive Text)

-- | The environment variables that are available to your running App
--   Runner service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
[$sel:runtimeEnvironmentVariables:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe (HashMap Text (Sensitive Text))

-- | The command App Runner runs to build your application.
[$sel:buildCommand:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe (Sensitive Text)

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
[$sel:port:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe Text

-- | A runtime environment type for building and running an App Runner
--   service. It represents a programming language runtime.
[$sel:runtime:CodeConfigurationValues'] :: CodeConfigurationValues -> Runtime

-- | Create a value of <a>CodeConfigurationValues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startCommand:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_startCommand</a> - The command App Runner
--   runs to start your application.
--   
--   <a>$sel:runtimeEnvironmentVariables:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_runtimeEnvironmentVariables</a> - The
--   environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
--   
--   <a>$sel:buildCommand:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_buildCommand</a> - The command App Runner
--   runs to build your application.
--   
--   <a>$sel:port:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_port</a> - The port that your application
--   listens to in the container.
--   
--   Default: <tt>8080</tt>
--   
--   <a>$sel:runtime:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_runtime</a> - A runtime environment type
--   for building and running an App Runner service. It represents a
--   programming language runtime.
newCodeConfigurationValues :: Runtime -> CodeConfigurationValues

-- | The command App Runner runs to start your application.
codeConfigurationValues_startCommand :: Lens' CodeConfigurationValues (Maybe Text)

-- | The environment variables that are available to your running App
--   Runner service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
codeConfigurationValues_runtimeEnvironmentVariables :: Lens' CodeConfigurationValues (Maybe (HashMap Text Text))

-- | The command App Runner runs to build your application.
codeConfigurationValues_buildCommand :: Lens' CodeConfigurationValues (Maybe Text)

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
codeConfigurationValues_port :: Lens' CodeConfigurationValues (Maybe Text)

-- | A runtime environment type for building and running an App Runner
--   service. It represents a programming language runtime.
codeConfigurationValues_runtime :: Lens' CodeConfigurationValues Runtime
instance GHC.Generics.Generic Amazonka.AppRunner.Types.CodeConfigurationValues.CodeConfigurationValues
instance GHC.Show.Show Amazonka.AppRunner.Types.CodeConfigurationValues.CodeConfigurationValues
instance GHC.Classes.Eq Amazonka.AppRunner.Types.CodeConfigurationValues.CodeConfigurationValues
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.CodeConfigurationValues.CodeConfigurationValues
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.CodeConfigurationValues.CodeConfigurationValues
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.CodeConfigurationValues.CodeConfigurationValues
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.CodeConfigurationValues.CodeConfigurationValues


module Amazonka.AppRunner.Types.CodeConfiguration

-- | Describes the configuration that App Runner uses to build and run an
--   App Runner service from a source code repository.
--   
--   <i>See:</i> <a>newCodeConfiguration</a> smart constructor.
data CodeConfiguration
CodeConfiguration' :: Maybe CodeConfigurationValues -> ConfigurationSource -> CodeConfiguration

-- | The basic configuration for building and running the App Runner
--   service. Use it to quickly launch an App Runner service without
--   providing a <tt>apprunner.yaml</tt> file in the source code repository
--   (or ignoring the file if it exists).
[$sel:codeConfigurationValues:CodeConfiguration'] :: CodeConfiguration -> Maybe CodeConfigurationValues

-- | The source of the App Runner configuration. Values are interpreted as
--   follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
[$sel:configurationSource:CodeConfiguration'] :: CodeConfiguration -> ConfigurationSource

-- | Create a value of <a>CodeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeConfigurationValues:CodeConfiguration'</a>,
--   <a>codeConfiguration_codeConfigurationValues</a> - The basic
--   configuration for building and running the App Runner service. Use it
--   to quickly launch an App Runner service without providing a
--   <tt>apprunner.yaml</tt> file in the source code repository (or
--   ignoring the file if it exists).
--   
--   <a>$sel:configurationSource:CodeConfiguration'</a>,
--   <a>codeConfiguration_configurationSource</a> - The source of the App
--   Runner configuration. Values are interpreted as follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
newCodeConfiguration :: ConfigurationSource -> CodeConfiguration

-- | The basic configuration for building and running the App Runner
--   service. Use it to quickly launch an App Runner service without
--   providing a <tt>apprunner.yaml</tt> file in the source code repository
--   (or ignoring the file if it exists).
codeConfiguration_codeConfigurationValues :: Lens' CodeConfiguration (Maybe CodeConfigurationValues)

-- | The source of the App Runner configuration. Values are interpreted as
--   follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
codeConfiguration_configurationSource :: Lens' CodeConfiguration ConfigurationSource
instance GHC.Generics.Generic Amazonka.AppRunner.Types.CodeConfiguration.CodeConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.CodeConfiguration.CodeConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.CodeConfiguration.CodeConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.CodeConfiguration.CodeConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.CodeConfiguration.CodeConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.CodeConfiguration.CodeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.CodeConfiguration.CodeConfiguration


module Amazonka.AppRunner.Types.ServiceStatus
newtype ServiceStatus
ServiceStatus' :: Text -> ServiceStatus
[fromServiceStatus] :: ServiceStatus -> Text
pattern ServiceStatus_CREATE_FAILED :: ServiceStatus
pattern ServiceStatus_DELETED :: ServiceStatus
pattern ServiceStatus_DELETE_FAILED :: ServiceStatus
pattern ServiceStatus_OPERATION_IN_PROGRESS :: ServiceStatus
pattern ServiceStatus_PAUSED :: ServiceStatus
pattern ServiceStatus_RUNNING :: ServiceStatus
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance GHC.Classes.Ord Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance GHC.Read.Read Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus
instance GHC.Show.Show Amazonka.AppRunner.Types.ServiceStatus.ServiceStatus


module Amazonka.AppRunner.Types.ServiceSummary

-- | Provides summary information for an App Runner service.
--   
--   This type contains limited information about a service. It doesn't
--   include configuration details. It's returned by the
--   <a>ListServices</a> action. Complete service information is returned
--   by the <a>CreateService</a>, <a>DescribeService</a>, and
--   <a>DeleteService</a> actions using the <a>Service</a> type.
--   
--   <i>See:</i> <a>newServiceSummary</a> smart constructor.
data ServiceSummary
ServiceSummary' :: Maybe ServiceStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ServiceSummary

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
[$sel:status:ServiceSummary'] :: ServiceSummary -> Maybe ServiceStatus

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
[$sel:createdAt:ServiceSummary'] :: ServiceSummary -> Maybe POSIX

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
[$sel:serviceUrl:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | The customer-provided service name.
[$sel:serviceName:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | The time when the App Runner service was last updated. It's in theUnix
--   time stamp format.
[$sel:updatedAt:ServiceSummary'] :: ServiceSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of this service.
[$sel:serviceArn:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
[$sel:serviceId:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | Create a value of <a>ServiceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ServiceSummary'</a>, <a>serviceSummary_status</a> - The
--   current state of the App Runner service. These particular values mean
--   the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
--   
--   <a>$sel:createdAt:ServiceSummary'</a>, <a>serviceSummary_createdAt</a>
--   - The time when the App Runner service was created. It's in the Unix
--   time stamp format.
--   
--   <a>$sel:serviceUrl:ServiceSummary'</a>,
--   <a>serviceSummary_serviceUrl</a> - A subdomain URL that App Runner
--   generated for this service. You can use this URL to access your
--   service web application.
--   
--   <a>$sel:serviceName:ServiceSummary'</a>,
--   <a>serviceSummary_serviceName</a> - The customer-provided service
--   name.
--   
--   <a>$sel:updatedAt:ServiceSummary'</a>, <a>serviceSummary_updatedAt</a>
--   - The time when the App Runner service was last updated. It's in
--   theUnix time stamp format.
--   
--   <a>$sel:serviceArn:ServiceSummary'</a>,
--   <a>serviceSummary_serviceArn</a> - The Amazon Resource Name (ARN) of
--   this service.
--   
--   <a>$sel:serviceId:ServiceSummary'</a>, <a>serviceSummary_serviceId</a>
--   - An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
newServiceSummary :: ServiceSummary

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
serviceSummary_status :: Lens' ServiceSummary (Maybe ServiceStatus)

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
serviceSummary_createdAt :: Lens' ServiceSummary (Maybe UTCTime)

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
serviceSummary_serviceUrl :: Lens' ServiceSummary (Maybe Text)

-- | The customer-provided service name.
serviceSummary_serviceName :: Lens' ServiceSummary (Maybe Text)

-- | The time when the App Runner service was last updated. It's in theUnix
--   time stamp format.
serviceSummary_updatedAt :: Lens' ServiceSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of this service.
serviceSummary_serviceArn :: Lens' ServiceSummary (Maybe Text)

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
serviceSummary_serviceId :: Lens' ServiceSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.ServiceSummary.ServiceSummary
instance GHC.Show.Show Amazonka.AppRunner.Types.ServiceSummary.ServiceSummary
instance GHC.Read.Read Amazonka.AppRunner.Types.ServiceSummary.ServiceSummary
instance GHC.Classes.Eq Amazonka.AppRunner.Types.ServiceSummary.ServiceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.ServiceSummary.ServiceSummary
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.ServiceSummary.ServiceSummary
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.ServiceSummary.ServiceSummary


module Amazonka.AppRunner.Types.SourceCodeVersionType
newtype SourceCodeVersionType
SourceCodeVersionType' :: Text -> SourceCodeVersionType
[fromSourceCodeVersionType] :: SourceCodeVersionType -> Text
pattern SourceCodeVersionType_BRANCH :: SourceCodeVersionType
instance Amazonka.Data.XML.ToXML Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Amazonka.Data.XML.FromXML Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Amazonka.Data.Log.ToLog Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Amazonka.Data.Text.ToText Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Amazonka.Data.Text.FromText Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance GHC.Generics.Generic Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance GHC.Classes.Ord Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance GHC.Classes.Eq Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance GHC.Read.Read Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType
instance GHC.Show.Show Amazonka.AppRunner.Types.SourceCodeVersionType.SourceCodeVersionType


module Amazonka.AppRunner.Types.SourceCodeVersion

-- | Identifies a version of code that App Runner refers to within a source
--   code repository.
--   
--   <i>See:</i> <a>newSourceCodeVersion</a> smart constructor.
data SourceCodeVersion
SourceCodeVersion' :: SourceCodeVersionType -> Text -> SourceCodeVersion

-- | The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
[$sel:type':SourceCodeVersion'] :: SourceCodeVersion -> SourceCodeVersionType

-- | A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
[$sel:value:SourceCodeVersion'] :: SourceCodeVersion -> Text

-- | Create a value of <a>SourceCodeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':SourceCodeVersion'</a>, <a>sourceCodeVersion_type</a> -
--   The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
--   
--   <a>$sel:value:SourceCodeVersion'</a>, <a>sourceCodeVersion_value</a> -
--   A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
newSourceCodeVersion :: SourceCodeVersionType -> Text -> SourceCodeVersion

-- | The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
sourceCodeVersion_type :: Lens' SourceCodeVersion SourceCodeVersionType

-- | A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
sourceCodeVersion_value :: Lens' SourceCodeVersion Text
instance GHC.Generics.Generic Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion
instance GHC.Show.Show Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion
instance GHC.Read.Read Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion
instance GHC.Classes.Eq Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.SourceCodeVersion.SourceCodeVersion


module Amazonka.AppRunner.Types.CodeRepository

-- | Describes a source code repository.
--   
--   <i>See:</i> <a>newCodeRepository</a> smart constructor.
data CodeRepository
CodeRepository' :: Maybe CodeConfiguration -> Text -> SourceCodeVersion -> CodeRepository

-- | Configuration for building and running the service from a source code
--   repository.
[$sel:codeConfiguration:CodeRepository'] :: CodeRepository -> Maybe CodeConfiguration

-- | The location of the repository that contains the source code.
[$sel:repositoryUrl:CodeRepository'] :: CodeRepository -> Text

-- | The version that should be used within the source code repository.
[$sel:sourceCodeVersion:CodeRepository'] :: CodeRepository -> SourceCodeVersion

-- | Create a value of <a>CodeRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeConfiguration:CodeRepository'</a>,
--   <a>codeRepository_codeConfiguration</a> - Configuration for building
--   and running the service from a source code repository.
--   
--   <a>$sel:repositoryUrl:CodeRepository'</a>,
--   <a>codeRepository_repositoryUrl</a> - The location of the repository
--   that contains the source code.
--   
--   <a>$sel:sourceCodeVersion:CodeRepository'</a>,
--   <a>codeRepository_sourceCodeVersion</a> - The version that should be
--   used within the source code repository.
newCodeRepository :: Text -> SourceCodeVersion -> CodeRepository

-- | Configuration for building and running the service from a source code
--   repository.
codeRepository_codeConfiguration :: Lens' CodeRepository (Maybe CodeConfiguration)

-- | The location of the repository that contains the source code.
codeRepository_repositoryUrl :: Lens' CodeRepository Text

-- | The version that should be used within the source code repository.
codeRepository_sourceCodeVersion :: Lens' CodeRepository SourceCodeVersion
instance GHC.Generics.Generic Amazonka.AppRunner.Types.CodeRepository.CodeRepository
instance GHC.Show.Show Amazonka.AppRunner.Types.CodeRepository.CodeRepository
instance GHC.Classes.Eq Amazonka.AppRunner.Types.CodeRepository.CodeRepository
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.CodeRepository.CodeRepository
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.CodeRepository.CodeRepository
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.CodeRepository.CodeRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.CodeRepository.CodeRepository


module Amazonka.AppRunner.Types.SourceConfiguration

-- | Describes the source deployed to an App Runner service. It can be a
--   code or an image repository.
--   
--   <i>See:</i> <a>newSourceConfiguration</a> smart constructor.
data SourceConfiguration
SourceConfiguration' :: Maybe ImageRepository -> Maybe CodeRepository -> Maybe Bool -> Maybe AuthenticationConfiguration -> SourceConfiguration

-- | The description of a source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
[$sel:imageRepository:SourceConfiguration'] :: SourceConfiguration -> Maybe ImageRepository

-- | The description of a source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
[$sel:codeRepository:SourceConfiguration'] :: SourceConfiguration -> Maybe CodeRepository

-- | If <tt>true</tt>, continuous integration from the source repository is
--   enabled for the App Runner service. Each repository change (including
--   any source code commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
[$sel:autoDeploymentsEnabled:SourceConfiguration'] :: SourceConfiguration -> Maybe Bool

-- | Describes the resources that are needed to authenticate access to some
--   source repositories.
[$sel:authenticationConfiguration:SourceConfiguration'] :: SourceConfiguration -> Maybe AuthenticationConfiguration

-- | Create a value of <a>SourceConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRepository:SourceConfiguration'</a>,
--   <a>sourceConfiguration_imageRepository</a> - The description of a
--   source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
--   
--   <a>$sel:codeRepository:SourceConfiguration'</a>,
--   <a>sourceConfiguration_codeRepository</a> - The description of a
--   source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
--   
--   <a>$sel:autoDeploymentsEnabled:SourceConfiguration'</a>,
--   <a>sourceConfiguration_autoDeploymentsEnabled</a> - If <tt>true</tt>,
--   continuous integration from the source repository is enabled for the
--   App Runner service. Each repository change (including any source code
--   commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
--   
--   <a>$sel:authenticationConfiguration:SourceConfiguration'</a>,
--   <a>sourceConfiguration_authenticationConfiguration</a> - Describes the
--   resources that are needed to authenticate access to some source
--   repositories.
newSourceConfiguration :: SourceConfiguration

-- | The description of a source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
sourceConfiguration_imageRepository :: Lens' SourceConfiguration (Maybe ImageRepository)

-- | The description of a source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
sourceConfiguration_codeRepository :: Lens' SourceConfiguration (Maybe CodeRepository)

-- | If <tt>true</tt>, continuous integration from the source repository is
--   enabled for the App Runner service. Each repository change (including
--   any source code commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
sourceConfiguration_autoDeploymentsEnabled :: Lens' SourceConfiguration (Maybe Bool)

-- | Describes the resources that are needed to authenticate access to some
--   source repositories.
sourceConfiguration_authenticationConfiguration :: Lens' SourceConfiguration (Maybe AuthenticationConfiguration)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.SourceConfiguration.SourceConfiguration
instance GHC.Show.Show Amazonka.AppRunner.Types.SourceConfiguration.SourceConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.Types.SourceConfiguration.SourceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.SourceConfiguration.SourceConfiguration
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.SourceConfiguration.SourceConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.SourceConfiguration.SourceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.SourceConfiguration.SourceConfiguration


module Amazonka.AppRunner.Types.Service

-- | Describes an App Runner service. It can describe a service in any
--   state, including deleted services.
--   
--   This type contains the full information about a service, including
--   configuration details. It's returned by the <a>CreateService</a>,
--   <a>DescribeService</a>, and <a>DeleteService</a> actions. A subset of
--   this information is returned by the <a>ListServices</a> action using
--   the <a>ServiceSummary</a> type.
--   
--   <i>See:</i> <a>newService</a> smart constructor.
data Service
Service' :: Maybe EncryptionConfiguration -> Maybe HealthCheckConfiguration -> Maybe POSIX -> Text -> Text -> Text -> Text -> POSIX -> POSIX -> ServiceStatus -> SourceConfiguration -> InstanceConfiguration -> AutoScalingConfigurationSummary -> Service

-- | The encryption key that App Runner uses to encrypt the service logs
--   and the copy of the source repository that App Runner maintains for
--   the service. It can be either a customer-provided encryption key or an
--   Amazon Web Services managed CMK.
[$sel:encryptionConfiguration:Service'] :: Service -> Maybe EncryptionConfiguration

-- | The settings for the health check that App Runner performs to monitor
--   the health of this service.
[$sel:healthCheckConfiguration:Service'] :: Service -> Maybe HealthCheckConfiguration

-- | The time when the App Runner service was deleted. It's in the Unix
--   time stamp format.
[$sel:deletedAt:Service'] :: Service -> Maybe POSIX

-- | The customer-provided service name.
[$sel:serviceName:Service'] :: Service -> Text

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
[$sel:serviceId:Service'] :: Service -> Text

-- | The Amazon Resource Name (ARN) of this service.
[$sel:serviceArn:Service'] :: Service -> Text

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
[$sel:serviceUrl:Service'] :: Service -> Text

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
[$sel:createdAt:Service'] :: Service -> POSIX

-- | The time when the App Runner service was last updated at. It's in the
--   Unix time stamp format.
[$sel:updatedAt:Service'] :: Service -> POSIX

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
[$sel:status:Service'] :: Service -> ServiceStatus

-- | The source deployed to the App Runner service. It can be a code or an
--   image repository.
[$sel:sourceConfiguration:Service'] :: Service -> SourceConfiguration

-- | The runtime configuration of instances (scaling units) of this
--   service.
[$sel:instanceConfiguration:Service'] :: Service -> InstanceConfiguration

-- | Summary information for the App Runner automatic scaling configuration
--   resource that's associated with this service.
[$sel:autoScalingConfigurationSummary:Service'] :: Service -> AutoScalingConfigurationSummary

-- | Create a value of <a>Service</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionConfiguration:Service'</a>,
--   <a>service_encryptionConfiguration</a> - The encryption key that App
--   Runner uses to encrypt the service logs and the copy of the source
--   repository that App Runner maintains for the service. It can be either
--   a customer-provided encryption key or an Amazon Web Services managed
--   CMK.
--   
--   <a>$sel:healthCheckConfiguration:Service'</a>,
--   <a>service_healthCheckConfiguration</a> - The settings for the health
--   check that App Runner performs to monitor the health of this service.
--   
--   <a>$sel:deletedAt:Service'</a>, <a>service_deletedAt</a> - The time
--   when the App Runner service was deleted. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:serviceName:Service'</a>, <a>service_serviceName</a> - The
--   customer-provided service name.
--   
--   <a>$sel:serviceId:Service'</a>, <a>service_serviceId</a> - An ID that
--   App Runner generated for this service. It's unique within the Amazon
--   Web Services Region.
--   
--   <a>$sel:serviceArn:Service'</a>, <a>service_serviceArn</a> - The
--   Amazon Resource Name (ARN) of this service.
--   
--   <a>$sel:serviceUrl:Service'</a>, <a>service_serviceUrl</a> - A
--   subdomain URL that App Runner generated for this service. You can use
--   this URL to access your service web application.
--   
--   <a>$sel:createdAt:Service'</a>, <a>service_createdAt</a> - The time
--   when the App Runner service was created. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:updatedAt:Service'</a>, <a>service_updatedAt</a> - The time
--   when the App Runner service was last updated at. It's in the Unix time
--   stamp format.
--   
--   <a>$sel:status:Service'</a>, <a>service_status</a> - The current state
--   of the App Runner service. These particular values mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
--   
--   <a>$sel:sourceConfiguration:Service'</a>,
--   <a>service_sourceConfiguration</a> - The source deployed to the App
--   Runner service. It can be a code or an image repository.
--   
--   <a>$sel:instanceConfiguration:Service'</a>,
--   <a>service_instanceConfiguration</a> - The runtime configuration of
--   instances (scaling units) of this service.
--   
--   <a>$sel:autoScalingConfigurationSummary:Service'</a>,
--   <a>service_autoScalingConfigurationSummary</a> - Summary information
--   for the App Runner automatic scaling configuration resource that's
--   associated with this service.
newService :: Text -> Text -> Text -> Text -> UTCTime -> UTCTime -> ServiceStatus -> SourceConfiguration -> InstanceConfiguration -> AutoScalingConfigurationSummary -> Service

-- | The encryption key that App Runner uses to encrypt the service logs
--   and the copy of the source repository that App Runner maintains for
--   the service. It can be either a customer-provided encryption key or an
--   Amazon Web Services managed CMK.
service_encryptionConfiguration :: Lens' Service (Maybe EncryptionConfiguration)

-- | The settings for the health check that App Runner performs to monitor
--   the health of this service.
service_healthCheckConfiguration :: Lens' Service (Maybe HealthCheckConfiguration)

-- | The time when the App Runner service was deleted. It's in the Unix
--   time stamp format.
service_deletedAt :: Lens' Service (Maybe UTCTime)

-- | The customer-provided service name.
service_serviceName :: Lens' Service Text

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
service_serviceId :: Lens' Service Text

-- | The Amazon Resource Name (ARN) of this service.
service_serviceArn :: Lens' Service Text

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
service_serviceUrl :: Lens' Service Text

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
service_createdAt :: Lens' Service UTCTime

-- | The time when the App Runner service was last updated at. It's in the
--   Unix time stamp format.
service_updatedAt :: Lens' Service UTCTime

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
service_status :: Lens' Service ServiceStatus

-- | The source deployed to the App Runner service. It can be a code or an
--   image repository.
service_sourceConfiguration :: Lens' Service SourceConfiguration

-- | The runtime configuration of instances (scaling units) of this
--   service.
service_instanceConfiguration :: Lens' Service InstanceConfiguration

-- | Summary information for the App Runner automatic scaling configuration
--   resource that's associated with this service.
service_autoScalingConfigurationSummary :: Lens' Service AutoScalingConfigurationSummary
instance GHC.Generics.Generic Amazonka.AppRunner.Types.Service.Service
instance GHC.Show.Show Amazonka.AppRunner.Types.Service.Service
instance GHC.Classes.Eq Amazonka.AppRunner.Types.Service.Service
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.Service.Service
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.Service.Service
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.Service.Service


module Amazonka.AppRunner.Types.Tag

-- | Describes a tag that is applied to an App Runner resource. A tag is a
--   metadata item consisting of a key-value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Tag

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppRunner.Types.Tag.Tag
instance GHC.Show.Show Amazonka.AppRunner.Types.Tag.Tag
instance GHC.Read.Read Amazonka.AppRunner.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.AppRunner.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppRunner.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.AppRunner.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.Types.Tag.Tag


module Amazonka.AppRunner.Types

-- | API version <tt>2020-05-15</tt> of the Amazon App Runner SDK
--   configuration.
defaultService :: Service

-- | One or more input parameters aren't valid. Refer to the API action's
--   document page, correct the input parameters, and try the action again.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | App Runner can't create this resource. You've reached your account
--   quota for this resource type.
--   
--   For App Runner per-resource quotas, see <a>App Runner endpoints and
--   quotas</a> in the <i>Amazon Web Services General Reference</i>.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unexpected service exception occurred.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource doesn't exist for the specified Amazon Resource Name (ARN)
--   in your Amazon Web Services account.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can't perform this action when the resource is in its current
--   state.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AutoScalingConfigurationStatus
AutoScalingConfigurationStatus' :: Text -> AutoScalingConfigurationStatus
[fromAutoScalingConfigurationStatus] :: AutoScalingConfigurationStatus -> Text
pattern AutoScalingConfigurationStatus_ACTIVE :: AutoScalingConfigurationStatus
pattern AutoScalingConfigurationStatus_INACTIVE :: AutoScalingConfigurationStatus
newtype CertificateValidationRecordStatus
CertificateValidationRecordStatus' :: Text -> CertificateValidationRecordStatus
[fromCertificateValidationRecordStatus] :: CertificateValidationRecordStatus -> Text
pattern CertificateValidationRecordStatus_FAILED :: CertificateValidationRecordStatus
pattern CertificateValidationRecordStatus_PENDING_VALIDATION :: CertificateValidationRecordStatus
pattern CertificateValidationRecordStatus_SUCCESS :: CertificateValidationRecordStatus
newtype ConfigurationSource
ConfigurationSource' :: Text -> ConfigurationSource
[fromConfigurationSource] :: ConfigurationSource -> Text
pattern ConfigurationSource_API :: ConfigurationSource
pattern ConfigurationSource_REPOSITORY :: ConfigurationSource
newtype ConnectionStatus
ConnectionStatus' :: Text -> ConnectionStatus
[fromConnectionStatus] :: ConnectionStatus -> Text
pattern ConnectionStatus_AVAILABLE :: ConnectionStatus
pattern ConnectionStatus_DELETED :: ConnectionStatus
pattern ConnectionStatus_ERROR :: ConnectionStatus
pattern ConnectionStatus_PENDING_HANDSHAKE :: ConnectionStatus
newtype CustomDomainAssociationStatus
CustomDomainAssociationStatus' :: Text -> CustomDomainAssociationStatus
[fromCustomDomainAssociationStatus] :: CustomDomainAssociationStatus -> Text
pattern CustomDomainAssociationStatus_ACTIVE :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_BINDING_CERTIFICATE :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_CREATE_FAILED :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_CREATING :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_DELETE_FAILED :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_DELETING :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_PENDING_CERTIFICATE_DNS_VALIDATION :: CustomDomainAssociationStatus
newtype HealthCheckProtocol
HealthCheckProtocol' :: Text -> HealthCheckProtocol
[fromHealthCheckProtocol] :: HealthCheckProtocol -> Text
pattern HealthCheckProtocol_HTTP :: HealthCheckProtocol
pattern HealthCheckProtocol_TCP :: HealthCheckProtocol
newtype ImageRepositoryType
ImageRepositoryType' :: Text -> ImageRepositoryType
[fromImageRepositoryType] :: ImageRepositoryType -> Text
pattern ImageRepositoryType_ECR :: ImageRepositoryType
pattern ImageRepositoryType_ECR_PUBLIC :: ImageRepositoryType
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_FAILED :: OperationStatus
pattern OperationStatus_IN_PROGRESS :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_ROLLBACK_FAILED :: OperationStatus
pattern OperationStatus_ROLLBACK_IN_PROGRESS :: OperationStatus
pattern OperationStatus_ROLLBACK_SUCCEEDED :: OperationStatus
pattern OperationStatus_SUCCEEDED :: OperationStatus
newtype OperationType
OperationType' :: Text -> OperationType
[fromOperationType] :: OperationType -> Text
pattern OperationType_CREATE_SERVICE :: OperationType
pattern OperationType_DELETE_SERVICE :: OperationType
pattern OperationType_PAUSE_SERVICE :: OperationType
pattern OperationType_RESUME_SERVICE :: OperationType
pattern OperationType_START_DEPLOYMENT :: OperationType
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_GITHUB :: ProviderType
newtype Runtime
Runtime' :: Text -> Runtime
[fromRuntime] :: Runtime -> Text
pattern Runtime_NODEJS_12 :: Runtime
pattern Runtime_PYTHON_3 :: Runtime
newtype ServiceStatus
ServiceStatus' :: Text -> ServiceStatus
[fromServiceStatus] :: ServiceStatus -> Text
pattern ServiceStatus_CREATE_FAILED :: ServiceStatus
pattern ServiceStatus_DELETED :: ServiceStatus
pattern ServiceStatus_DELETE_FAILED :: ServiceStatus
pattern ServiceStatus_OPERATION_IN_PROGRESS :: ServiceStatus
pattern ServiceStatus_PAUSED :: ServiceStatus
pattern ServiceStatus_RUNNING :: ServiceStatus
newtype SourceCodeVersionType
SourceCodeVersionType' :: Text -> SourceCodeVersionType
[fromSourceCodeVersionType] :: SourceCodeVersionType -> Text
pattern SourceCodeVersionType_BRANCH :: SourceCodeVersionType

-- | Describes resources needed to authenticate access to some source
--   repositories. The specific resource depends on the repository
--   provider.
--   
--   <i>See:</i> <a>newAuthenticationConfiguration</a> smart constructor.
data AuthenticationConfiguration
AuthenticationConfiguration' :: Maybe Text -> Maybe Text -> AuthenticationConfiguration

-- | The Amazon Resource Name (ARN) of the IAM role that grants the App
--   Runner service access to a source repository. It's required for ECR
--   image repositories (but not for ECR Public repositories).
[$sel:accessRoleArn:AuthenticationConfiguration'] :: AuthenticationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the App Runner connection that
--   enables the App Runner service to connect to a source repository. It's
--   required for GitHub code repositories.
[$sel:connectionArn:AuthenticationConfiguration'] :: AuthenticationConfiguration -> Maybe Text

-- | Create a value of <a>AuthenticationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessRoleArn:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_accessRoleArn</a> - The Amazon Resource
--   Name (ARN) of the IAM role that grants the App Runner service access
--   to a source repository. It's required for ECR image repositories (but
--   not for ECR Public repositories).
--   
--   <a>$sel:connectionArn:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_connectionArn</a> - The Amazon Resource
--   Name (ARN) of the App Runner connection that enables the App Runner
--   service to connect to a source repository. It's required for GitHub
--   code repositories.
newAuthenticationConfiguration :: AuthenticationConfiguration

-- | The Amazon Resource Name (ARN) of the IAM role that grants the App
--   Runner service access to a source repository. It's required for ECR
--   image repositories (but not for ECR Public repositories).
authenticationConfiguration_accessRoleArn :: Lens' AuthenticationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the App Runner connection that
--   enables the App Runner service to connect to a source repository. It's
--   required for GitHub code repositories.
authenticationConfiguration_connectionArn :: Lens' AuthenticationConfiguration (Maybe Text)

-- | Describes an App Runner automatic scaling configuration resource.
--   Multiple revisions of a configuration have the same
--   <tt>AutoScalingConfigurationName</tt> and different
--   <tt>AutoScalingConfigurationRevision</tt> values.
--   
--   A higher <tt>MinSize</tt> increases the spread of your App Runner
--   service over more Availability Zones in the Amazon Web Services
--   Region. The tradeoff is a higher minimal cost.
--   
--   A lower <tt>MaxSize</tt> controls your cost. The tradeoff is lower
--   responsiveness during peak demand.
--   
--   <i>See:</i> <a>newAutoScalingConfiguration</a> smart constructor.
data AutoScalingConfiguration
AutoScalingConfiguration' :: Maybe AutoScalingConfigurationStatus -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe POSIX -> Maybe Bool -> Maybe Int -> AutoScalingConfiguration

-- | The current state of the auto scaling configuration. If the status of
--   a configuration revision is <tt>INACTIVE</tt>, it was deleted and
--   can't be used. Inactive configuration revisions are permanently
--   removed some time after they are deleted.
[$sel:status:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe AutoScalingConfigurationStatus

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
[$sel:autoScalingConfigurationName:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Text

-- | The time when the auto scaling configuration was created. It's in Unix
--   time stamp format.
[$sel:createdAt:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe POSIX

-- | The maximum number of instances that a service scales up to. At most
--   <tt>MaxSize</tt> instances actively serve traffic for your service.
[$sel:maxSize:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
[$sel:autoScalingConfigurationRevision:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
[$sel:autoScalingConfigurationArn:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Text

-- | The minimum number of instances that App Runner provisions for a
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
[$sel:minSize:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | The time when the auto scaling configuration was deleted. It's in Unix
--   time stamp format.
[$sel:deletedAt:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe POSIX

-- | It's set to <tt>true</tt> for the configuration with the highest
--   <tt>Revision</tt> among all configurations that share the same
--   <tt>Name</tt>. It's set to <tt>false</tt> otherwise.
[$sel:latest:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Bool

-- | The maximum number of concurrent requests that an instance processes.
--   If the number of concurrent requests exceeds this limit, App Runner
--   scales the service up.
[$sel:maxConcurrency:AutoScalingConfiguration'] :: AutoScalingConfiguration -> Maybe Int

-- | Create a value of <a>AutoScalingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_status</a> - The current state of the auto
--   scaling configuration. If the status of a configuration revision is
--   <tt>INACTIVE</tt>, it was deleted and can't be used. Inactive
--   configuration revisions are permanently removed some time after they
--   are deleted.
--   
--   <a>$sel:autoScalingConfigurationName:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationName</a> - The
--   customer-provided auto scaling configuration name. It can be used in
--   multiple revisions of a configuration.
--   
--   <a>$sel:createdAt:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_createdAt</a> - The time when the auto
--   scaling configuration was created. It's in Unix time stamp format.
--   
--   <a>$sel:maxSize:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_maxSize</a> - The maximum number of
--   instances that a service scales up to. At most <tt>MaxSize</tt>
--   instances actively serve traffic for your service.
--   
--   
--   <a>$sel:autoScalingConfigurationRevision:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationRevision</a> - The
--   revision of this auto scaling configuration. It's unique among all the
--   active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
--   
--   <a>$sel:autoScalingConfigurationArn:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationArn</a> - The
--   Amazon Resource Name (ARN) of this auto scaling configuration.
--   
--   <a>$sel:minSize:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_minSize</a> - The minimum number of
--   instances that App Runner provisions for a service. The service always
--   has at least <tt>MinSize</tt> provisioned instances. Some of them
--   actively serve traffic. The rest of them (provisioned and inactive
--   instances) are a cost-effective compute capacity reserve and are ready
--   to be quickly activated. You pay for memory usage of all the
--   provisioned instances. You pay for CPU usage of only the active
--   subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   <a>$sel:deletedAt:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_deletedAt</a> - The time when the auto
--   scaling configuration was deleted. It's in Unix time stamp format.
--   
--   <a>$sel:latest:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_latest</a> - It's set to <tt>true</tt> for
--   the configuration with the highest <tt>Revision</tt> among all
--   configurations that share the same <tt>Name</tt>. It's set to
--   <tt>false</tt> otherwise.
--   
--   <a>$sel:maxConcurrency:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_maxConcurrency</a> - The maximum number of
--   concurrent requests that an instance processes. If the number of
--   concurrent requests exceeds this limit, App Runner scales the service
--   up.
newAutoScalingConfiguration :: AutoScalingConfiguration

-- | The current state of the auto scaling configuration. If the status of
--   a configuration revision is <tt>INACTIVE</tt>, it was deleted and
--   can't be used. Inactive configuration revisions are permanently
--   removed some time after they are deleted.
autoScalingConfiguration_status :: Lens' AutoScalingConfiguration (Maybe AutoScalingConfigurationStatus)

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
autoScalingConfiguration_autoScalingConfigurationName :: Lens' AutoScalingConfiguration (Maybe Text)

-- | The time when the auto scaling configuration was created. It's in Unix
--   time stamp format.
autoScalingConfiguration_createdAt :: Lens' AutoScalingConfiguration (Maybe UTCTime)

-- | The maximum number of instances that a service scales up to. At most
--   <tt>MaxSize</tt> instances actively serve traffic for your service.
autoScalingConfiguration_maxSize :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
autoScalingConfiguration_autoScalingConfigurationRevision :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
autoScalingConfiguration_autoScalingConfigurationArn :: Lens' AutoScalingConfiguration (Maybe Text)

-- | The minimum number of instances that App Runner provisions for a
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
autoScalingConfiguration_minSize :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The time when the auto scaling configuration was deleted. It's in Unix
--   time stamp format.
autoScalingConfiguration_deletedAt :: Lens' AutoScalingConfiguration (Maybe UTCTime)

-- | It's set to <tt>true</tt> for the configuration with the highest
--   <tt>Revision</tt> among all configurations that share the same
--   <tt>Name</tt>. It's set to <tt>false</tt> otherwise.
autoScalingConfiguration_latest :: Lens' AutoScalingConfiguration (Maybe Bool)

-- | The maximum number of concurrent requests that an instance processes.
--   If the number of concurrent requests exceeds this limit, App Runner
--   scales the service up.
autoScalingConfiguration_maxConcurrency :: Lens' AutoScalingConfiguration (Maybe Int)

-- | Provides summary information about an App Runner automatic scaling
--   configuration resource.
--   
--   This type contains limited information about an auto scaling
--   configuration. It includes only identification information, without
--   configuration details. It's returned by the
--   ListAutoScalingConfigurations action. Complete configuration
--   information is returned by the CreateAutoScalingConfiguration,
--   DescribeAutoScalingConfiguration, and DeleteAutoScalingConfiguration
--   actions using the AutoScalingConfiguration type.
--   
--   <i>See:</i> <a>newAutoScalingConfigurationSummary</a> smart
--   constructor.
data AutoScalingConfigurationSummary
AutoScalingConfigurationSummary' :: Maybe Text -> Maybe Int -> Maybe Text -> AutoScalingConfigurationSummary

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
[$sel:autoScalingConfigurationName:AutoScalingConfigurationSummary'] :: AutoScalingConfigurationSummary -> Maybe Text

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) with the same
--   <tt>AutoScalingConfigurationName</tt>.
[$sel:autoScalingConfigurationRevision:AutoScalingConfigurationSummary'] :: AutoScalingConfigurationSummary -> Maybe Int

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
[$sel:autoScalingConfigurationArn:AutoScalingConfigurationSummary'] :: AutoScalingConfigurationSummary -> Maybe Text

-- | Create a value of <a>AutoScalingConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationName:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationName</a> -
--   The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
--   
--   
--   <a>$sel:autoScalingConfigurationRevision:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationRevision</a>
--   - The revision of this auto scaling configuration. It's unique among
--   all the active configurations (<tt>"Status": "ACTIVE"</tt>) with the
--   same <tt>AutoScalingConfigurationName</tt>.
--   
--   
--   <a>$sel:autoScalingConfigurationArn:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of this auto scaling configuration.
newAutoScalingConfigurationSummary :: AutoScalingConfigurationSummary

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
autoScalingConfigurationSummary_autoScalingConfigurationName :: Lens' AutoScalingConfigurationSummary (Maybe Text)

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) with the same
--   <tt>AutoScalingConfigurationName</tt>.
autoScalingConfigurationSummary_autoScalingConfigurationRevision :: Lens' AutoScalingConfigurationSummary (Maybe Int)

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
autoScalingConfigurationSummary_autoScalingConfigurationArn :: Lens' AutoScalingConfigurationSummary (Maybe Text)

-- | Describes a certificate CNAME record to add to your DNS. For more
--   information, see <a>AssociateCustomDomain</a>.
--   
--   <i>See:</i> <a>newCertificateValidationRecord</a> smart constructor.
data CertificateValidationRecord
CertificateValidationRecord' :: Maybe CertificateValidationRecordStatus -> Maybe Text -> Maybe Text -> Maybe Text -> CertificateValidationRecord

-- | The current state of the certificate CNAME record validation. It
--   should change to <tt>SUCCESS</tt> after App Runner completes
--   validation with your DNS.
[$sel:status:CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe CertificateValidationRecordStatus

-- | The certificate CNAME record value.
[$sel:value:CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe Text

-- | The certificate CNAME record name.
[$sel:name:CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe Text

-- | The record type, always <tt>CNAME</tt>.
[$sel:type':CertificateValidationRecord'] :: CertificateValidationRecord -> Maybe Text

-- | Create a value of <a>CertificateValidationRecord</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_status</a> - The current state of the
--   certificate CNAME record validation. It should change to
--   <tt>SUCCESS</tt> after App Runner completes validation with your DNS.
--   
--   <a>$sel:value:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_value</a> - The certificate CNAME
--   record value.
--   
--   <a>$sel:name:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_name</a> - The certificate CNAME record
--   name.
--   
--   <a>$sel:type':CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_type</a> - The record type, always
--   <tt>CNAME</tt>.
newCertificateValidationRecord :: CertificateValidationRecord

-- | The current state of the certificate CNAME record validation. It
--   should change to <tt>SUCCESS</tt> after App Runner completes
--   validation with your DNS.
certificateValidationRecord_status :: Lens' CertificateValidationRecord (Maybe CertificateValidationRecordStatus)

-- | The certificate CNAME record value.
certificateValidationRecord_value :: Lens' CertificateValidationRecord (Maybe Text)

-- | The certificate CNAME record name.
certificateValidationRecord_name :: Lens' CertificateValidationRecord (Maybe Text)

-- | The record type, always <tt>CNAME</tt>.
certificateValidationRecord_type :: Lens' CertificateValidationRecord (Maybe Text)

-- | Describes the configuration that App Runner uses to build and run an
--   App Runner service from a source code repository.
--   
--   <i>See:</i> <a>newCodeConfiguration</a> smart constructor.
data CodeConfiguration
CodeConfiguration' :: Maybe CodeConfigurationValues -> ConfigurationSource -> CodeConfiguration

-- | The basic configuration for building and running the App Runner
--   service. Use it to quickly launch an App Runner service without
--   providing a <tt>apprunner.yaml</tt> file in the source code repository
--   (or ignoring the file if it exists).
[$sel:codeConfigurationValues:CodeConfiguration'] :: CodeConfiguration -> Maybe CodeConfigurationValues

-- | The source of the App Runner configuration. Values are interpreted as
--   follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
[$sel:configurationSource:CodeConfiguration'] :: CodeConfiguration -> ConfigurationSource

-- | Create a value of <a>CodeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeConfigurationValues:CodeConfiguration'</a>,
--   <a>codeConfiguration_codeConfigurationValues</a> - The basic
--   configuration for building and running the App Runner service. Use it
--   to quickly launch an App Runner service without providing a
--   <tt>apprunner.yaml</tt> file in the source code repository (or
--   ignoring the file if it exists).
--   
--   <a>$sel:configurationSource:CodeConfiguration'</a>,
--   <a>codeConfiguration_configurationSource</a> - The source of the App
--   Runner configuration. Values are interpreted as follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
newCodeConfiguration :: ConfigurationSource -> CodeConfiguration

-- | The basic configuration for building and running the App Runner
--   service. Use it to quickly launch an App Runner service without
--   providing a <tt>apprunner.yaml</tt> file in the source code repository
--   (or ignoring the file if it exists).
codeConfiguration_codeConfigurationValues :: Lens' CodeConfiguration (Maybe CodeConfigurationValues)

-- | The source of the App Runner configuration. Values are interpreted as
--   follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
codeConfiguration_configurationSource :: Lens' CodeConfiguration ConfigurationSource

-- | Describes the basic configuration needed for building and running an
--   App Runner service. This type doesn't support the full set of possible
--   configuration options. Fur full configuration capabilities, use a
--   <tt>apprunner.yaml</tt> file in the source code repository.
--   
--   <i>See:</i> <a>newCodeConfigurationValues</a> smart constructor.
data CodeConfigurationValues
CodeConfigurationValues' :: Maybe (Sensitive Text) -> Maybe (HashMap Text (Sensitive Text)) -> Maybe (Sensitive Text) -> Maybe Text -> Runtime -> CodeConfigurationValues

-- | The command App Runner runs to start your application.
[$sel:startCommand:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe (Sensitive Text)

-- | The environment variables that are available to your running App
--   Runner service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
[$sel:runtimeEnvironmentVariables:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe (HashMap Text (Sensitive Text))

-- | The command App Runner runs to build your application.
[$sel:buildCommand:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe (Sensitive Text)

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
[$sel:port:CodeConfigurationValues'] :: CodeConfigurationValues -> Maybe Text

-- | A runtime environment type for building and running an App Runner
--   service. It represents a programming language runtime.
[$sel:runtime:CodeConfigurationValues'] :: CodeConfigurationValues -> Runtime

-- | Create a value of <a>CodeConfigurationValues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startCommand:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_startCommand</a> - The command App Runner
--   runs to start your application.
--   
--   <a>$sel:runtimeEnvironmentVariables:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_runtimeEnvironmentVariables</a> - The
--   environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
--   
--   <a>$sel:buildCommand:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_buildCommand</a> - The command App Runner
--   runs to build your application.
--   
--   <a>$sel:port:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_port</a> - The port that your application
--   listens to in the container.
--   
--   Default: <tt>8080</tt>
--   
--   <a>$sel:runtime:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_runtime</a> - A runtime environment type
--   for building and running an App Runner service. It represents a
--   programming language runtime.
newCodeConfigurationValues :: Runtime -> CodeConfigurationValues

-- | The command App Runner runs to start your application.
codeConfigurationValues_startCommand :: Lens' CodeConfigurationValues (Maybe Text)

-- | The environment variables that are available to your running App
--   Runner service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
codeConfigurationValues_runtimeEnvironmentVariables :: Lens' CodeConfigurationValues (Maybe (HashMap Text Text))

-- | The command App Runner runs to build your application.
codeConfigurationValues_buildCommand :: Lens' CodeConfigurationValues (Maybe Text)

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
codeConfigurationValues_port :: Lens' CodeConfigurationValues (Maybe Text)

-- | A runtime environment type for building and running an App Runner
--   service. It represents a programming language runtime.
codeConfigurationValues_runtime :: Lens' CodeConfigurationValues Runtime

-- | Describes a source code repository.
--   
--   <i>See:</i> <a>newCodeRepository</a> smart constructor.
data CodeRepository
CodeRepository' :: Maybe CodeConfiguration -> Text -> SourceCodeVersion -> CodeRepository

-- | Configuration for building and running the service from a source code
--   repository.
[$sel:codeConfiguration:CodeRepository'] :: CodeRepository -> Maybe CodeConfiguration

-- | The location of the repository that contains the source code.
[$sel:repositoryUrl:CodeRepository'] :: CodeRepository -> Text

-- | The version that should be used within the source code repository.
[$sel:sourceCodeVersion:CodeRepository'] :: CodeRepository -> SourceCodeVersion

-- | Create a value of <a>CodeRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeConfiguration:CodeRepository'</a>,
--   <a>codeRepository_codeConfiguration</a> - Configuration for building
--   and running the service from a source code repository.
--   
--   <a>$sel:repositoryUrl:CodeRepository'</a>,
--   <a>codeRepository_repositoryUrl</a> - The location of the repository
--   that contains the source code.
--   
--   <a>$sel:sourceCodeVersion:CodeRepository'</a>,
--   <a>codeRepository_sourceCodeVersion</a> - The version that should be
--   used within the source code repository.
newCodeRepository :: Text -> SourceCodeVersion -> CodeRepository

-- | Configuration for building and running the service from a source code
--   repository.
codeRepository_codeConfiguration :: Lens' CodeRepository (Maybe CodeConfiguration)

-- | The location of the repository that contains the source code.
codeRepository_repositoryUrl :: Lens' CodeRepository Text

-- | The version that should be used within the source code repository.
codeRepository_sourceCodeVersion :: Lens' CodeRepository SourceCodeVersion

-- | Describes an App Runner connection resource.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe ConnectionStatus -> Maybe POSIX -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Connection

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
[$sel:status:Connection'] :: Connection -> Maybe ConnectionStatus

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
[$sel:createdAt:Connection'] :: Connection -> Maybe POSIX

-- | The source repository provider.
[$sel:providerType:Connection'] :: Connection -> Maybe ProviderType

-- | The customer-provided connection name.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The Amazon Resource Name (ARN) of this connection.
[$sel:connectionArn:Connection'] :: Connection -> Maybe Text

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Connection'</a>, <a>connection_status</a> - The current
--   state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
--   
--   <a>$sel:createdAt:Connection'</a>, <a>connection_createdAt</a> - The
--   App Runner connection creation time, expressed as a Unix time stamp.
--   
--   <a>$sel:providerType:Connection'</a>, <a>connection_providerType</a> -
--   The source repository provider.
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The customer-provided connection
--   name.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The Amazon Resource Name (ARN) of this connection.
newConnection :: Connection

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
connection_status :: Lens' Connection (Maybe ConnectionStatus)

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
connection_createdAt :: Lens' Connection (Maybe UTCTime)

-- | The source repository provider.
connection_providerType :: Lens' Connection (Maybe ProviderType)

-- | The customer-provided connection name.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The Amazon Resource Name (ARN) of this connection.
connection_connectionArn :: Lens' Connection (Maybe Text)

-- | Provides summary information about an App Runner connection resource.
--   
--   <i>See:</i> <a>newConnectionSummary</a> smart constructor.
data ConnectionSummary
ConnectionSummary' :: Maybe ConnectionStatus -> Maybe POSIX -> Maybe ProviderType -> Maybe Text -> Maybe Text -> ConnectionSummary

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
[$sel:status:ConnectionSummary'] :: ConnectionSummary -> Maybe ConnectionStatus

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
[$sel:createdAt:ConnectionSummary'] :: ConnectionSummary -> Maybe POSIX

-- | The source repository provider.
[$sel:providerType:ConnectionSummary'] :: ConnectionSummary -> Maybe ProviderType

-- | The customer-provided connection name.
[$sel:connectionName:ConnectionSummary'] :: ConnectionSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of this connection.
[$sel:connectionArn:ConnectionSummary'] :: ConnectionSummary -> Maybe Text

-- | Create a value of <a>ConnectionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ConnectionSummary'</a>, <a>connectionSummary_status</a>
--   - The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
--   
--   <a>$sel:createdAt:ConnectionSummary'</a>,
--   <a>connectionSummary_createdAt</a> - The App Runner connection
--   creation time, expressed as a Unix time stamp.
--   
--   <a>$sel:providerType:ConnectionSummary'</a>,
--   <a>connectionSummary_providerType</a> - The source repository
--   provider.
--   
--   <a>$sel:connectionName:ConnectionSummary'</a>,
--   <a>connectionSummary_connectionName</a> - The customer-provided
--   connection name.
--   
--   <a>$sel:connectionArn:ConnectionSummary'</a>,
--   <a>connectionSummary_connectionArn</a> - The Amazon Resource Name
--   (ARN) of this connection.
newConnectionSummary :: ConnectionSummary

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
connectionSummary_status :: Lens' ConnectionSummary (Maybe ConnectionStatus)

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
connectionSummary_createdAt :: Lens' ConnectionSummary (Maybe UTCTime)

-- | The source repository provider.
connectionSummary_providerType :: Lens' ConnectionSummary (Maybe ProviderType)

-- | The customer-provided connection name.
connectionSummary_connectionName :: Lens' ConnectionSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of this connection.
connectionSummary_connectionArn :: Lens' ConnectionSummary (Maybe Text)

-- | Describes a custom domain that's associated with an App Runner
--   service.
--   
--   <i>See:</i> <a>newCustomDomain</a> smart constructor.
data CustomDomain
CustomDomain' :: Maybe [CertificateValidationRecord] -> Text -> Bool -> CustomDomainAssociationStatus -> CustomDomain

-- | A list of certificate CNAME records that's used for this domain name.
[$sel:certificateValidationRecords:CustomDomain'] :: CustomDomain -> Maybe [CertificateValidationRecord]

-- | An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
[$sel:domainName:CustomDomain'] :: CustomDomain -> Text

-- | When <tt>true</tt>, the subdomain <tt>www.DomainName </tt> is
--   associated with the App Runner service in addition to the base domain.
[$sel:enableWWWSubdomain:CustomDomain'] :: CustomDomain -> Bool

-- | The current state of the domain name association.
[$sel:status:CustomDomain'] :: CustomDomain -> CustomDomainAssociationStatus

-- | Create a value of <a>CustomDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateValidationRecords:CustomDomain'</a>,
--   <a>customDomain_certificateValidationRecords</a> - A list of
--   certificate CNAME records that's used for this domain name.
--   
--   <a>$sel:domainName:CustomDomain'</a>, <a>customDomain_domainName</a> -
--   An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
--   
--   <a>$sel:enableWWWSubdomain:CustomDomain'</a>,
--   <a>customDomain_enableWWWSubdomain</a> - When <tt>true</tt>, the
--   subdomain <tt>www.DomainName </tt> is associated with the App Runner
--   service in addition to the base domain.
--   
--   <a>$sel:status:CustomDomain'</a>, <a>customDomain_status</a> - The
--   current state of the domain name association.
newCustomDomain :: Text -> Bool -> CustomDomainAssociationStatus -> CustomDomain

-- | A list of certificate CNAME records that's used for this domain name.
customDomain_certificateValidationRecords :: Lens' CustomDomain (Maybe [CertificateValidationRecord])

-- | An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
customDomain_domainName :: Lens' CustomDomain Text

-- | When <tt>true</tt>, the subdomain <tt>www.DomainName </tt> is
--   associated with the App Runner service in addition to the base domain.
customDomain_enableWWWSubdomain :: Lens' CustomDomain Bool

-- | The current state of the domain name association.
customDomain_status :: Lens' CustomDomain CustomDomainAssociationStatus

-- | Describes a custom encryption key that App Runner uses to encrypt
--   copies of the source repository and service logs.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Text -> EncryptionConfiguration

-- | The ARN of the KMS key that's used for encryption.
[$sel:kmsKey:EncryptionConfiguration'] :: EncryptionConfiguration -> Text

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKey:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_kmsKey</a> - The ARN of the KMS key that's
--   used for encryption.
newEncryptionConfiguration :: Text -> EncryptionConfiguration

-- | The ARN of the KMS key that's used for encryption.
encryptionConfiguration_kmsKey :: Lens' EncryptionConfiguration Text

-- | Describes the settings for the health check that App Runner performs
--   to monitor the health of a service.
--   
--   <i>See:</i> <a>newHealthCheckConfiguration</a> smart constructor.
data HealthCheckConfiguration
HealthCheckConfiguration' :: Maybe Natural -> Maybe Text -> Maybe HealthCheckProtocol -> Maybe Natural -> Maybe Natural -> Maybe Natural -> HealthCheckConfiguration

-- | The number of consecutive checks that must succeed before App Runner
--   decides that the service is healthy.
--   
--   Default: <tt>1</tt>
[$sel:healthyThreshold:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | The URL that health check requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
[$sel:path:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Text

-- | The IP protocol that App Runner uses to perform health checks for your
--   service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
[$sel:protocol:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe HealthCheckProtocol

-- | The time interval, in seconds, between health checks.
--   
--   Default: <tt>5</tt>
[$sel:interval:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | The time, in seconds, to wait for a health check response before
--   deciding it failed.
--   
--   Default: <tt>2</tt>
[$sel:timeout:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | The number of consecutive checks that must fail before App Runner
--   decides that the service is unhealthy.
--   
--   Default: <tt>5</tt>
[$sel:unhealthyThreshold:HealthCheckConfiguration'] :: HealthCheckConfiguration -> Maybe Natural

-- | Create a value of <a>HealthCheckConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthyThreshold:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_healthyThreshold</a> - The number of
--   consecutive checks that must succeed before App Runner decides that
--   the service is healthy.
--   
--   Default: <tt>1</tt>
--   
--   <a>$sel:path:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_path</a> - The URL that health check
--   requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
--   
--   <a>$sel:protocol:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_protocol</a> - The IP protocol that App
--   Runner uses to perform health checks for your service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
--   
--   <a>$sel:interval:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_interval</a> - The time interval, in
--   seconds, between health checks.
--   
--   Default: <tt>5</tt>
--   
--   <a>$sel:timeout:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_timeout</a> - The time, in seconds, to
--   wait for a health check response before deciding it failed.
--   
--   Default: <tt>2</tt>
--   
--   <a>$sel:unhealthyThreshold:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_unhealthyThreshold</a> - The number of
--   consecutive checks that must fail before App Runner decides that the
--   service is unhealthy.
--   
--   Default: <tt>5</tt>
newHealthCheckConfiguration :: HealthCheckConfiguration

-- | The number of consecutive checks that must succeed before App Runner
--   decides that the service is healthy.
--   
--   Default: <tt>1</tt>
healthCheckConfiguration_healthyThreshold :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The URL that health check requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
healthCheckConfiguration_path :: Lens' HealthCheckConfiguration (Maybe Text)

-- | The IP protocol that App Runner uses to perform health checks for your
--   service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
healthCheckConfiguration_protocol :: Lens' HealthCheckConfiguration (Maybe HealthCheckProtocol)

-- | The time interval, in seconds, between health checks.
--   
--   Default: <tt>5</tt>
healthCheckConfiguration_interval :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The time, in seconds, to wait for a health check response before
--   deciding it failed.
--   
--   Default: <tt>2</tt>
healthCheckConfiguration_timeout :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The number of consecutive checks that must fail before App Runner
--   decides that the service is unhealthy.
--   
--   Default: <tt>5</tt>
healthCheckConfiguration_unhealthyThreshold :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | Describes the configuration that App Runner uses to run an App Runner
--   service using an image pulled from a source image repository.
--   
--   <i>See:</i> <a>newImageConfiguration</a> smart constructor.
data ImageConfiguration
ImageConfiguration' :: Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> ImageConfiguration

-- | An optional command that App Runner runs to start the application in
--   the source image. If specified, this command overrides the Docker
--   image’s default start command.
[$sel:startCommand:ImageConfiguration'] :: ImageConfiguration -> Maybe Text

-- | Environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
[$sel:runtimeEnvironmentVariables:ImageConfiguration'] :: ImageConfiguration -> Maybe (HashMap Text (Sensitive Text))

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
[$sel:port:ImageConfiguration'] :: ImageConfiguration -> Maybe Text

-- | Create a value of <a>ImageConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startCommand:ImageConfiguration'</a>,
--   <a>imageConfiguration_startCommand</a> - An optional command that App
--   Runner runs to start the application in the source image. If
--   specified, this command overrides the Docker image’s default start
--   command.
--   
--   <a>$sel:runtimeEnvironmentVariables:ImageConfiguration'</a>,
--   <a>imageConfiguration_runtimeEnvironmentVariables</a> - Environment
--   variables that are available to your running App Runner service. An
--   array of key-value pairs. Keys with a prefix of <tt>AWSAPPRUNNER</tt>
--   are reserved for system use and aren't valid.
--   
--   <a>$sel:port:ImageConfiguration'</a>, <a>imageConfiguration_port</a> -
--   The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
newImageConfiguration :: ImageConfiguration

-- | An optional command that App Runner runs to start the application in
--   the source image. If specified, this command overrides the Docker
--   image’s default start command.
imageConfiguration_startCommand :: Lens' ImageConfiguration (Maybe Text)

-- | Environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
imageConfiguration_runtimeEnvironmentVariables :: Lens' ImageConfiguration (Maybe (HashMap Text Text))

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
imageConfiguration_port :: Lens' ImageConfiguration (Maybe Text)

-- | Describes a source image repository.
--   
--   <i>See:</i> <a>newImageRepository</a> smart constructor.
data ImageRepository
ImageRepository' :: Maybe ImageConfiguration -> Text -> ImageRepositoryType -> ImageRepository

-- | Configuration for running the identified image.
[$sel:imageConfiguration:ImageRepository'] :: ImageRepository -> Maybe ImageConfiguration

-- | The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
[$sel:imageIdentifier:ImageRepository'] :: ImageRepository -> Text

-- | The type of the image repository. This reflects the repository
--   provider and whether the repository is private or public.
[$sel:imageRepositoryType:ImageRepository'] :: ImageRepository -> ImageRepositoryType

-- | Create a value of <a>ImageRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageConfiguration:ImageRepository'</a>,
--   <a>imageRepository_imageConfiguration</a> - Configuration for running
--   the identified image.
--   
--   <a>$sel:imageIdentifier:ImageRepository'</a>,
--   <a>imageRepository_imageIdentifier</a> - The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
--   
--   <a>$sel:imageRepositoryType:ImageRepository'</a>,
--   <a>imageRepository_imageRepositoryType</a> - The type of the image
--   repository. This reflects the repository provider and whether the
--   repository is private or public.
newImageRepository :: Text -> ImageRepositoryType -> ImageRepository

-- | Configuration for running the identified image.
imageRepository_imageConfiguration :: Lens' ImageRepository (Maybe ImageConfiguration)

-- | The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
imageRepository_imageIdentifier :: Lens' ImageRepository Text

-- | The type of the image repository. This reflects the repository
--   provider and whether the repository is private or public.
imageRepository_imageRepositoryType :: Lens' ImageRepository ImageRepositoryType

-- | Describes the runtime configuration of an App Runner service instance
--   (scaling unit).
--   
--   <i>See:</i> <a>newInstanceConfiguration</a> smart constructor.
data InstanceConfiguration
InstanceConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> InstanceConfiguration

-- | The amount of memory, in MB or GB, reserved for each instance of your
--   App Runner service.
--   
--   Default: <tt>2 GB</tt>
[$sel:memory:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of an IAM role that provides
--   permissions to your App Runner service. These are permissions that
--   your code needs when it calls any Amazon Web Services APIs.
[$sel:instanceRoleArn:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | The number of CPU units reserved for each instance of your App Runner
--   service.
--   
--   Default: <tt>1 vCPU</tt>
[$sel:cpu:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | Create a value of <a>InstanceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memory:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_memory</a> - The amount of memory, in MB or
--   GB, reserved for each instance of your App Runner service.
--   
--   Default: <tt>2 GB</tt>
--   
--   <a>$sel:instanceRoleArn:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_instanceRoleArn</a> - The Amazon Resource
--   Name (ARN) of an IAM role that provides permissions to your App Runner
--   service. These are permissions that your code needs when it calls any
--   Amazon Web Services APIs.
--   
--   <a>$sel:cpu:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_cpu</a> - The number of CPU units reserved
--   for each instance of your App Runner service.
--   
--   Default: <tt>1 vCPU</tt>
newInstanceConfiguration :: InstanceConfiguration

-- | The amount of memory, in MB or GB, reserved for each instance of your
--   App Runner service.
--   
--   Default: <tt>2 GB</tt>
instanceConfiguration_memory :: Lens' InstanceConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of an IAM role that provides
--   permissions to your App Runner service. These are permissions that
--   your code needs when it calls any Amazon Web Services APIs.
instanceConfiguration_instanceRoleArn :: Lens' InstanceConfiguration (Maybe Text)

-- | The number of CPU units reserved for each instance of your App Runner
--   service.
--   
--   Default: <tt>1 vCPU</tt>
instanceConfiguration_cpu :: Lens' InstanceConfiguration (Maybe Text)

-- | Provides summary information for an operation that occurred on an App
--   Runner service.
--   
--   <i>See:</i> <a>newOperationSummary</a> smart constructor.
data OperationSummary
OperationSummary' :: Maybe OperationStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe OperationType -> Maybe POSIX -> OperationSummary

-- | The current state of the operation.
[$sel:status:OperationSummary'] :: OperationSummary -> Maybe OperationStatus

-- | The Amazon Resource Name (ARN) of the resource that the operation
--   acted on (for example, an App Runner service).
[$sel:targetArn:OperationSummary'] :: OperationSummary -> Maybe Text

-- | The time when the operation ended. It's in the Unix time stamp format.
[$sel:endedAt:OperationSummary'] :: OperationSummary -> Maybe POSIX

-- | The time when the operation started. It's in the Unix time stamp
--   format.
[$sel:startedAt:OperationSummary'] :: OperationSummary -> Maybe POSIX

-- | A unique ID of this operation. It's unique in the scope of the App
--   Runner service.
[$sel:id:OperationSummary'] :: OperationSummary -> Maybe Text

-- | The type of operation. It indicates a specific action that occured.
[$sel:type':OperationSummary'] :: OperationSummary -> Maybe OperationType

-- | The time when the operation was last updated. It's in the Unix time
--   stamp format.
[$sel:updatedAt:OperationSummary'] :: OperationSummary -> Maybe POSIX

-- | Create a value of <a>OperationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OperationSummary'</a>, <a>operationSummary_status</a> -
--   The current state of the operation.
--   
--   <a>$sel:targetArn:OperationSummary'</a>,
--   <a>operationSummary_targetArn</a> - The Amazon Resource Name (ARN) of
--   the resource that the operation acted on (for example, an App Runner
--   service).
--   
--   <a>$sel:endedAt:OperationSummary'</a>, <a>operationSummary_endedAt</a>
--   - The time when the operation ended. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:startedAt:OperationSummary'</a>,
--   <a>operationSummary_startedAt</a> - The time when the operation
--   started. It's in the Unix time stamp format.
--   
--   <a>$sel:id:OperationSummary'</a>, <a>operationSummary_id</a> - A
--   unique ID of this operation. It's unique in the scope of the App
--   Runner service.
--   
--   <a>$sel:type':OperationSummary'</a>, <a>operationSummary_type</a> -
--   The type of operation. It indicates a specific action that occured.
--   
--   <a>$sel:updatedAt:OperationSummary'</a>,
--   <a>operationSummary_updatedAt</a> - The time when the operation was
--   last updated. It's in the Unix time stamp format.
newOperationSummary :: OperationSummary

-- | The current state of the operation.
operationSummary_status :: Lens' OperationSummary (Maybe OperationStatus)

-- | The Amazon Resource Name (ARN) of the resource that the operation
--   acted on (for example, an App Runner service).
operationSummary_targetArn :: Lens' OperationSummary (Maybe Text)

-- | The time when the operation ended. It's in the Unix time stamp format.
operationSummary_endedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | The time when the operation started. It's in the Unix time stamp
--   format.
operationSummary_startedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | A unique ID of this operation. It's unique in the scope of the App
--   Runner service.
operationSummary_id :: Lens' OperationSummary (Maybe Text)

-- | The type of operation. It indicates a specific action that occured.
operationSummary_type :: Lens' OperationSummary (Maybe OperationType)

-- | The time when the operation was last updated. It's in the Unix time
--   stamp format.
operationSummary_updatedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | Describes an App Runner service. It can describe a service in any
--   state, including deleted services.
--   
--   This type contains the full information about a service, including
--   configuration details. It's returned by the <a>CreateService</a>,
--   <a>DescribeService</a>, and <a>DeleteService</a> actions. A subset of
--   this information is returned by the <a>ListServices</a> action using
--   the <a>ServiceSummary</a> type.
--   
--   <i>See:</i> <a>newService</a> smart constructor.
data Service
Service' :: Maybe EncryptionConfiguration -> Maybe HealthCheckConfiguration -> Maybe POSIX -> Text -> Text -> Text -> Text -> POSIX -> POSIX -> ServiceStatus -> SourceConfiguration -> InstanceConfiguration -> AutoScalingConfigurationSummary -> Service

-- | The encryption key that App Runner uses to encrypt the service logs
--   and the copy of the source repository that App Runner maintains for
--   the service. It can be either a customer-provided encryption key or an
--   Amazon Web Services managed CMK.
[$sel:encryptionConfiguration:Service'] :: Service -> Maybe EncryptionConfiguration

-- | The settings for the health check that App Runner performs to monitor
--   the health of this service.
[$sel:healthCheckConfiguration:Service'] :: Service -> Maybe HealthCheckConfiguration

-- | The time when the App Runner service was deleted. It's in the Unix
--   time stamp format.
[$sel:deletedAt:Service'] :: Service -> Maybe POSIX

-- | The customer-provided service name.
[$sel:serviceName:Service'] :: Service -> Text

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
[$sel:serviceId:Service'] :: Service -> Text

-- | The Amazon Resource Name (ARN) of this service.
[$sel:serviceArn:Service'] :: Service -> Text

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
[$sel:serviceUrl:Service'] :: Service -> Text

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
[$sel:createdAt:Service'] :: Service -> POSIX

-- | The time when the App Runner service was last updated at. It's in the
--   Unix time stamp format.
[$sel:updatedAt:Service'] :: Service -> POSIX

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
[$sel:status:Service'] :: Service -> ServiceStatus

-- | The source deployed to the App Runner service. It can be a code or an
--   image repository.
[$sel:sourceConfiguration:Service'] :: Service -> SourceConfiguration

-- | The runtime configuration of instances (scaling units) of this
--   service.
[$sel:instanceConfiguration:Service'] :: Service -> InstanceConfiguration

-- | Summary information for the App Runner automatic scaling configuration
--   resource that's associated with this service.
[$sel:autoScalingConfigurationSummary:Service'] :: Service -> AutoScalingConfigurationSummary

-- | Create a value of <a>Service</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionConfiguration:Service'</a>,
--   <a>service_encryptionConfiguration</a> - The encryption key that App
--   Runner uses to encrypt the service logs and the copy of the source
--   repository that App Runner maintains for the service. It can be either
--   a customer-provided encryption key or an Amazon Web Services managed
--   CMK.
--   
--   <a>$sel:healthCheckConfiguration:Service'</a>,
--   <a>service_healthCheckConfiguration</a> - The settings for the health
--   check that App Runner performs to monitor the health of this service.
--   
--   <a>$sel:deletedAt:Service'</a>, <a>service_deletedAt</a> - The time
--   when the App Runner service was deleted. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:serviceName:Service'</a>, <a>service_serviceName</a> - The
--   customer-provided service name.
--   
--   <a>$sel:serviceId:Service'</a>, <a>service_serviceId</a> - An ID that
--   App Runner generated for this service. It's unique within the Amazon
--   Web Services Region.
--   
--   <a>$sel:serviceArn:Service'</a>, <a>service_serviceArn</a> - The
--   Amazon Resource Name (ARN) of this service.
--   
--   <a>$sel:serviceUrl:Service'</a>, <a>service_serviceUrl</a> - A
--   subdomain URL that App Runner generated for this service. You can use
--   this URL to access your service web application.
--   
--   <a>$sel:createdAt:Service'</a>, <a>service_createdAt</a> - The time
--   when the App Runner service was created. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:updatedAt:Service'</a>, <a>service_updatedAt</a> - The time
--   when the App Runner service was last updated at. It's in the Unix time
--   stamp format.
--   
--   <a>$sel:status:Service'</a>, <a>service_status</a> - The current state
--   of the App Runner service. These particular values mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
--   
--   <a>$sel:sourceConfiguration:Service'</a>,
--   <a>service_sourceConfiguration</a> - The source deployed to the App
--   Runner service. It can be a code or an image repository.
--   
--   <a>$sel:instanceConfiguration:Service'</a>,
--   <a>service_instanceConfiguration</a> - The runtime configuration of
--   instances (scaling units) of this service.
--   
--   <a>$sel:autoScalingConfigurationSummary:Service'</a>,
--   <a>service_autoScalingConfigurationSummary</a> - Summary information
--   for the App Runner automatic scaling configuration resource that's
--   associated with this service.
newService :: Text -> Text -> Text -> Text -> UTCTime -> UTCTime -> ServiceStatus -> SourceConfiguration -> InstanceConfiguration -> AutoScalingConfigurationSummary -> Service

-- | The encryption key that App Runner uses to encrypt the service logs
--   and the copy of the source repository that App Runner maintains for
--   the service. It can be either a customer-provided encryption key or an
--   Amazon Web Services managed CMK.
service_encryptionConfiguration :: Lens' Service (Maybe EncryptionConfiguration)

-- | The settings for the health check that App Runner performs to monitor
--   the health of this service.
service_healthCheckConfiguration :: Lens' Service (Maybe HealthCheckConfiguration)

-- | The time when the App Runner service was deleted. It's in the Unix
--   time stamp format.
service_deletedAt :: Lens' Service (Maybe UTCTime)

-- | The customer-provided service name.
service_serviceName :: Lens' Service Text

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
service_serviceId :: Lens' Service Text

-- | The Amazon Resource Name (ARN) of this service.
service_serviceArn :: Lens' Service Text

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
service_serviceUrl :: Lens' Service Text

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
service_createdAt :: Lens' Service UTCTime

-- | The time when the App Runner service was last updated at. It's in the
--   Unix time stamp format.
service_updatedAt :: Lens' Service UTCTime

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
service_status :: Lens' Service ServiceStatus

-- | The source deployed to the App Runner service. It can be a code or an
--   image repository.
service_sourceConfiguration :: Lens' Service SourceConfiguration

-- | The runtime configuration of instances (scaling units) of this
--   service.
service_instanceConfiguration :: Lens' Service InstanceConfiguration

-- | Summary information for the App Runner automatic scaling configuration
--   resource that's associated with this service.
service_autoScalingConfigurationSummary :: Lens' Service AutoScalingConfigurationSummary

-- | Provides summary information for an App Runner service.
--   
--   This type contains limited information about a service. It doesn't
--   include configuration details. It's returned by the
--   <a>ListServices</a> action. Complete service information is returned
--   by the <a>CreateService</a>, <a>DescribeService</a>, and
--   <a>DeleteService</a> actions using the <a>Service</a> type.
--   
--   <i>See:</i> <a>newServiceSummary</a> smart constructor.
data ServiceSummary
ServiceSummary' :: Maybe ServiceStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ServiceSummary

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
[$sel:status:ServiceSummary'] :: ServiceSummary -> Maybe ServiceStatus

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
[$sel:createdAt:ServiceSummary'] :: ServiceSummary -> Maybe POSIX

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
[$sel:serviceUrl:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | The customer-provided service name.
[$sel:serviceName:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | The time when the App Runner service was last updated. It's in theUnix
--   time stamp format.
[$sel:updatedAt:ServiceSummary'] :: ServiceSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of this service.
[$sel:serviceArn:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
[$sel:serviceId:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | Create a value of <a>ServiceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ServiceSummary'</a>, <a>serviceSummary_status</a> - The
--   current state of the App Runner service. These particular values mean
--   the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
--   
--   <a>$sel:createdAt:ServiceSummary'</a>, <a>serviceSummary_createdAt</a>
--   - The time when the App Runner service was created. It's in the Unix
--   time stamp format.
--   
--   <a>$sel:serviceUrl:ServiceSummary'</a>,
--   <a>serviceSummary_serviceUrl</a> - A subdomain URL that App Runner
--   generated for this service. You can use this URL to access your
--   service web application.
--   
--   <a>$sel:serviceName:ServiceSummary'</a>,
--   <a>serviceSummary_serviceName</a> - The customer-provided service
--   name.
--   
--   <a>$sel:updatedAt:ServiceSummary'</a>, <a>serviceSummary_updatedAt</a>
--   - The time when the App Runner service was last updated. It's in
--   theUnix time stamp format.
--   
--   <a>$sel:serviceArn:ServiceSummary'</a>,
--   <a>serviceSummary_serviceArn</a> - The Amazon Resource Name (ARN) of
--   this service.
--   
--   <a>$sel:serviceId:ServiceSummary'</a>, <a>serviceSummary_serviceId</a>
--   - An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
newServiceSummary :: ServiceSummary

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
serviceSummary_status :: Lens' ServiceSummary (Maybe ServiceStatus)

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
serviceSummary_createdAt :: Lens' ServiceSummary (Maybe UTCTime)

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
serviceSummary_serviceUrl :: Lens' ServiceSummary (Maybe Text)

-- | The customer-provided service name.
serviceSummary_serviceName :: Lens' ServiceSummary (Maybe Text)

-- | The time when the App Runner service was last updated. It's in theUnix
--   time stamp format.
serviceSummary_updatedAt :: Lens' ServiceSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of this service.
serviceSummary_serviceArn :: Lens' ServiceSummary (Maybe Text)

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
serviceSummary_serviceId :: Lens' ServiceSummary (Maybe Text)

-- | Identifies a version of code that App Runner refers to within a source
--   code repository.
--   
--   <i>See:</i> <a>newSourceCodeVersion</a> smart constructor.
data SourceCodeVersion
SourceCodeVersion' :: SourceCodeVersionType -> Text -> SourceCodeVersion

-- | The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
[$sel:type':SourceCodeVersion'] :: SourceCodeVersion -> SourceCodeVersionType

-- | A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
[$sel:value:SourceCodeVersion'] :: SourceCodeVersion -> Text

-- | Create a value of <a>SourceCodeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':SourceCodeVersion'</a>, <a>sourceCodeVersion_type</a> -
--   The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
--   
--   <a>$sel:value:SourceCodeVersion'</a>, <a>sourceCodeVersion_value</a> -
--   A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
newSourceCodeVersion :: SourceCodeVersionType -> Text -> SourceCodeVersion

-- | The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
sourceCodeVersion_type :: Lens' SourceCodeVersion SourceCodeVersionType

-- | A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
sourceCodeVersion_value :: Lens' SourceCodeVersion Text

-- | Describes the source deployed to an App Runner service. It can be a
--   code or an image repository.
--   
--   <i>See:</i> <a>newSourceConfiguration</a> smart constructor.
data SourceConfiguration
SourceConfiguration' :: Maybe ImageRepository -> Maybe CodeRepository -> Maybe Bool -> Maybe AuthenticationConfiguration -> SourceConfiguration

-- | The description of a source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
[$sel:imageRepository:SourceConfiguration'] :: SourceConfiguration -> Maybe ImageRepository

-- | The description of a source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
[$sel:codeRepository:SourceConfiguration'] :: SourceConfiguration -> Maybe CodeRepository

-- | If <tt>true</tt>, continuous integration from the source repository is
--   enabled for the App Runner service. Each repository change (including
--   any source code commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
[$sel:autoDeploymentsEnabled:SourceConfiguration'] :: SourceConfiguration -> Maybe Bool

-- | Describes the resources that are needed to authenticate access to some
--   source repositories.
[$sel:authenticationConfiguration:SourceConfiguration'] :: SourceConfiguration -> Maybe AuthenticationConfiguration

-- | Create a value of <a>SourceConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRepository:SourceConfiguration'</a>,
--   <a>sourceConfiguration_imageRepository</a> - The description of a
--   source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
--   
--   <a>$sel:codeRepository:SourceConfiguration'</a>,
--   <a>sourceConfiguration_codeRepository</a> - The description of a
--   source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
--   
--   <a>$sel:autoDeploymentsEnabled:SourceConfiguration'</a>,
--   <a>sourceConfiguration_autoDeploymentsEnabled</a> - If <tt>true</tt>,
--   continuous integration from the source repository is enabled for the
--   App Runner service. Each repository change (including any source code
--   commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
--   
--   <a>$sel:authenticationConfiguration:SourceConfiguration'</a>,
--   <a>sourceConfiguration_authenticationConfiguration</a> - Describes the
--   resources that are needed to authenticate access to some source
--   repositories.
newSourceConfiguration :: SourceConfiguration

-- | The description of a source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
sourceConfiguration_imageRepository :: Lens' SourceConfiguration (Maybe ImageRepository)

-- | The description of a source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
sourceConfiguration_codeRepository :: Lens' SourceConfiguration (Maybe CodeRepository)

-- | If <tt>true</tt>, continuous integration from the source repository is
--   enabled for the App Runner service. Each repository change (including
--   any source code commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
sourceConfiguration_autoDeploymentsEnabled :: Lens' SourceConfiguration (Maybe Bool)

-- | Describes the resources that are needed to authenticate access to some
--   source repositories.
sourceConfiguration_authenticationConfiguration :: Lens' SourceConfiguration (Maybe AuthenticationConfiguration)

-- | Describes a tag that is applied to an App Runner resource. A tag is a
--   metadata item consisting of a key-value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Tag

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag (Maybe Text)


-- | Add tags to, or update the tag values of, an App Runner resource. A
--   tag is a key-value pair.
module Amazonka.AppRunner.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to update
--   tags for.
--   
--   It must be the ARN of an App Runner resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A list of tag key-value pairs to add or update. If a key is new to the
--   resource, the tag is added with the provided value. If a key is
--   already associated with the resource, the value of the tag is updated.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to update
--   tags for.
--   
--   It must be the ARN of an App Runner resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of tag
--   key-value pairs to add or update. If a key is new to the resource, the
--   tag is added with the provided value. If a key is already associated
--   with the resource, the value of the tag is updated.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to update
--   tags for.
--   
--   It must be the ARN of an App Runner resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tag key-value pairs to add or update. If a key is new to the
--   resource, the tag is added with the provided value. If a key is
--   already associated with the resource, the value of the tag is updated.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.AppRunner.TagResource.TagResource
instance GHC.Show.Show Amazonka.AppRunner.TagResource.TagResource
instance GHC.Read.Read Amazonka.AppRunner.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.AppRunner.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.AppRunner.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.AppRunner.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.AppRunner.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.AppRunner.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.AppRunner.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.TagResource.TagResource


-- | Initiate a manual deployment of the latest commit in a source code
--   repository or the latest image in a source image repository to an App
--   Runner service.
--   
--   For a source code repository, App Runner retrieves the commit and
--   builds a Docker image. For a source image repository, App Runner
--   retrieves the latest Docker image. In both cases, App Runner then
--   deploys the new image to your service and starts a new container
--   instance.
--   
--   This is an asynchronous operation. On a successful call, you can use
--   the returned <tt>OperationId</tt> and the ListOperations call to track
--   the operation's progress.
module Amazonka.AppRunner.StartDeployment

-- | <i>See:</i> <a>newStartDeployment</a> smart constructor.
data StartDeployment
StartDeployment' :: Text -> StartDeployment

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to manually deploy to.
[$sel:serviceArn:StartDeployment'] :: StartDeployment -> Text

-- | Create a value of <a>StartDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:StartDeployment'</a>,
--   <a>startDeployment_serviceArn</a> - The Amazon Resource Name (ARN) of
--   the App Runner service that you want to manually deploy to.
newStartDeployment :: Text -> StartDeployment

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to manually deploy to.
startDeployment_serviceArn :: Lens' StartDeployment Text

-- | <i>See:</i> <a>newStartDeploymentResponse</a> smart constructor.
data StartDeploymentResponse
StartDeploymentResponse' :: Int -> Text -> StartDeploymentResponse

-- | The response's http status code.
[$sel:httpStatus:StartDeploymentResponse'] :: StartDeploymentResponse -> Int

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
[$sel:operationId:StartDeploymentResponse'] :: StartDeploymentResponse -> Text

-- | Create a value of <a>StartDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartDeploymentResponse'</a>,
--   <a>startDeploymentResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:operationId:StartDeploymentResponse'</a>,
--   <a>startDeploymentResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
newStartDeploymentResponse :: Int -> Text -> StartDeploymentResponse

-- | The response's http status code.
startDeploymentResponse_httpStatus :: Lens' StartDeploymentResponse Int

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
startDeploymentResponse_operationId :: Lens' StartDeploymentResponse Text
instance GHC.Generics.Generic Amazonka.AppRunner.StartDeployment.StartDeployment
instance GHC.Show.Show Amazonka.AppRunner.StartDeployment.StartDeployment
instance GHC.Read.Read Amazonka.AppRunner.StartDeployment.StartDeployment
instance GHC.Classes.Eq Amazonka.AppRunner.StartDeployment.StartDeployment
instance GHC.Generics.Generic Amazonka.AppRunner.StartDeployment.StartDeploymentResponse
instance GHC.Show.Show Amazonka.AppRunner.StartDeployment.StartDeploymentResponse
instance GHC.Read.Read Amazonka.AppRunner.StartDeployment.StartDeploymentResponse
instance GHC.Classes.Eq Amazonka.AppRunner.StartDeployment.StartDeploymentResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.StartDeployment.StartDeployment
instance Control.DeepSeq.NFData Amazonka.AppRunner.StartDeployment.StartDeploymentResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.StartDeployment.StartDeployment
instance Control.DeepSeq.NFData Amazonka.AppRunner.StartDeployment.StartDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.StartDeployment.StartDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.StartDeployment.StartDeployment
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.StartDeployment.StartDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.StartDeployment.StartDeployment


-- | Resume an active App Runner service. App Runner provisions compute
--   capacity for the service.
--   
--   This is an asynchronous operation. On a successful call, you can use
--   the returned <tt>OperationId</tt> and the ListOperations call to track
--   the operation's progress.
module Amazonka.AppRunner.ResumeService

-- | <i>See:</i> <a>newResumeService</a> smart constructor.
data ResumeService
ResumeService' :: Text -> ResumeService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to resume.
[$sel:serviceArn:ResumeService'] :: ResumeService -> Text

-- | Create a value of <a>ResumeService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:ResumeService'</a>, <a>resumeService_serviceArn</a>
--   - The Amazon Resource Name (ARN) of the App Runner service that you
--   want to resume.
newResumeService :: Text -> ResumeService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to resume.
resumeService_serviceArn :: Lens' ResumeService Text

-- | <i>See:</i> <a>newResumeServiceResponse</a> smart constructor.
data ResumeServiceResponse
ResumeServiceResponse' :: Maybe Text -> Int -> Service -> ResumeServiceResponse

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
[$sel:operationId:ResumeServiceResponse'] :: ResumeServiceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ResumeServiceResponse'] :: ResumeServiceResponse -> Int

-- | A description of the App Runner service that this request just
--   resumed.
[$sel:service:ResumeServiceResponse'] :: ResumeServiceResponse -> Service

-- | Create a value of <a>ResumeServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:ResumeServiceResponse'</a>,
--   <a>resumeServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
--   
--   <a>$sel:httpStatus:ResumeServiceResponse'</a>,
--   <a>resumeServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:ResumeServiceResponse'</a>,
--   <a>resumeServiceResponse_service</a> - A description of the App Runner
--   service that this request just resumed.
newResumeServiceResponse :: Int -> Service -> ResumeServiceResponse

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
resumeServiceResponse_operationId :: Lens' ResumeServiceResponse (Maybe Text)

-- | The response's http status code.
resumeServiceResponse_httpStatus :: Lens' ResumeServiceResponse Int

-- | A description of the App Runner service that this request just
--   resumed.
resumeServiceResponse_service :: Lens' ResumeServiceResponse Service
instance GHC.Generics.Generic Amazonka.AppRunner.ResumeService.ResumeService
instance GHC.Show.Show Amazonka.AppRunner.ResumeService.ResumeService
instance GHC.Read.Read Amazonka.AppRunner.ResumeService.ResumeService
instance GHC.Classes.Eq Amazonka.AppRunner.ResumeService.ResumeService
instance GHC.Generics.Generic Amazonka.AppRunner.ResumeService.ResumeServiceResponse
instance GHC.Show.Show Amazonka.AppRunner.ResumeService.ResumeServiceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.ResumeService.ResumeServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.ResumeService.ResumeService
instance Control.DeepSeq.NFData Amazonka.AppRunner.ResumeService.ResumeServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.ResumeService.ResumeService
instance Control.DeepSeq.NFData Amazonka.AppRunner.ResumeService.ResumeService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.ResumeService.ResumeService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.ResumeService.ResumeService
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.ResumeService.ResumeService
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.ResumeService.ResumeService


-- | Pause an active App Runner service. App Runner reduces compute
--   capacity for the service to zero and loses state (for example,
--   ephemeral storage is removed).
--   
--   This is an asynchronous operation. On a successful call, you can use
--   the returned <tt>OperationId</tt> and the ListOperations call to track
--   the operation's progress.
module Amazonka.AppRunner.PauseService

-- | <i>See:</i> <a>newPauseService</a> smart constructor.
data PauseService
PauseService' :: Text -> PauseService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to pause.
[$sel:serviceArn:PauseService'] :: PauseService -> Text

-- | Create a value of <a>PauseService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:PauseService'</a>, <a>pauseService_serviceArn</a> -
--   The Amazon Resource Name (ARN) of the App Runner service that you want
--   to pause.
newPauseService :: Text -> PauseService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to pause.
pauseService_serviceArn :: Lens' PauseService Text

-- | <i>See:</i> <a>newPauseServiceResponse</a> smart constructor.
data PauseServiceResponse
PauseServiceResponse' :: Maybe Text -> Int -> Service -> PauseServiceResponse

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
[$sel:operationId:PauseServiceResponse'] :: PauseServiceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PauseServiceResponse'] :: PauseServiceResponse -> Int

-- | A description of the App Runner service that this request just paused.
[$sel:service:PauseServiceResponse'] :: PauseServiceResponse -> Service

-- | Create a value of <a>PauseServiceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:PauseServiceResponse'</a>,
--   <a>pauseServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
--   
--   <a>$sel:httpStatus:PauseServiceResponse'</a>,
--   <a>pauseServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:PauseServiceResponse'</a>,
--   <a>pauseServiceResponse_service</a> - A description of the App Runner
--   service that this request just paused.
newPauseServiceResponse :: Int -> Service -> PauseServiceResponse

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
pauseServiceResponse_operationId :: Lens' PauseServiceResponse (Maybe Text)

-- | The response's http status code.
pauseServiceResponse_httpStatus :: Lens' PauseServiceResponse Int

-- | A description of the App Runner service that this request just paused.
pauseServiceResponse_service :: Lens' PauseServiceResponse Service
instance GHC.Generics.Generic Amazonka.AppRunner.PauseService.PauseService
instance GHC.Show.Show Amazonka.AppRunner.PauseService.PauseService
instance GHC.Read.Read Amazonka.AppRunner.PauseService.PauseService
instance GHC.Classes.Eq Amazonka.AppRunner.PauseService.PauseService
instance GHC.Generics.Generic Amazonka.AppRunner.PauseService.PauseServiceResponse
instance GHC.Show.Show Amazonka.AppRunner.PauseService.PauseServiceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.PauseService.PauseServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.PauseService.PauseService
instance Control.DeepSeq.NFData Amazonka.AppRunner.PauseService.PauseServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.PauseService.PauseService
instance Control.DeepSeq.NFData Amazonka.AppRunner.PauseService.PauseService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.PauseService.PauseService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.PauseService.PauseService
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.PauseService.PauseService
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.PauseService.PauseService


-- | List tags that are associated with for an App Runner resource. The
--   response contains a list of tag key-value pairs.
module Amazonka.AppRunner.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource that a tag list is
--   requested for.
--   
--   It must be the ARN of an App Runner resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource that a tag list is requested for.
--   
--   It must be the ARN of an App Runner resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource that a tag list is
--   requested for.
--   
--   It must be the ARN of an App Runner resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | A list of the tag key-value pairs that are associated with the
--   resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of the tag key-value
--   pairs that are associated with the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A list of the tag key-value pairs that are associated with the
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.AppRunner.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.AppRunner.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.AppRunner.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.ListTagsForResource.ListTagsForResource


-- | Returns a list of running App Runner services in your Amazon Web
--   Services account.
module Amazonka.AppRunner.ListServices

-- | <i>See:</i> <a>newListServices</a> smart constructor.
data ListServices
ListServices' :: Maybe Text -> Maybe Natural -> ListServices

-- | A token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
[$sel:nextToken:ListServices'] :: ListServices -> Maybe Text

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
[$sel:maxResults:ListServices'] :: ListServices -> Maybe Natural

-- | Create a value of <a>ListServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServices'</a>, <a>listServices_nextToken</a> - A
--   token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:ListServices'</a>, <a>listServices_maxResults</a> -
--   The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
newListServices :: ListServices

-- | A token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listServices_nextToken :: Lens' ListServices (Maybe Text)

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listServices_maxResults :: Lens' ListServices (Maybe Natural)

-- | <i>See:</i> <a>newListServicesResponse</a> smart constructor.
data ListServicesResponse
ListServicesResponse' :: Maybe Text -> Int -> [ServiceSummary] -> ListServicesResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
[$sel:nextToken:ListServicesResponse'] :: ListServicesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListServicesResponse'] :: ListServicesResponse -> Int

-- | A list of service summary information records. In a paginated request,
--   the request returns up to <tt>MaxResults</tt> records for each call.
[$sel:serviceSummaryList:ListServicesResponse'] :: ListServicesResponse -> [ServiceSummary]

-- | Create a value of <a>ListServicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServices'</a>,
--   <a>listServicesResponse_nextToken</a> - The token that you can pass in
--   a subsequent request to get the next result page. It's returned in a
--   paginated request.
--   
--   <a>$sel:httpStatus:ListServicesResponse'</a>,
--   <a>listServicesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serviceSummaryList:ListServicesResponse'</a>,
--   <a>listServicesResponse_serviceSummaryList</a> - A list of service
--   summary information records. In a paginated request, the request
--   returns up to <tt>MaxResults</tt> records for each call.
newListServicesResponse :: Int -> ListServicesResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
listServicesResponse_nextToken :: Lens' ListServicesResponse (Maybe Text)

-- | The response's http status code.
listServicesResponse_httpStatus :: Lens' ListServicesResponse Int

-- | A list of service summary information records. In a paginated request,
--   the request returns up to <tt>MaxResults</tt> records for each call.
listServicesResponse_serviceSummaryList :: Lens' ListServicesResponse [ServiceSummary]
instance GHC.Generics.Generic Amazonka.AppRunner.ListServices.ListServices
instance GHC.Show.Show Amazonka.AppRunner.ListServices.ListServices
instance GHC.Read.Read Amazonka.AppRunner.ListServices.ListServices
instance GHC.Classes.Eq Amazonka.AppRunner.ListServices.ListServices
instance GHC.Generics.Generic Amazonka.AppRunner.ListServices.ListServicesResponse
instance GHC.Show.Show Amazonka.AppRunner.ListServices.ListServicesResponse
instance GHC.Read.Read Amazonka.AppRunner.ListServices.ListServicesResponse
instance GHC.Classes.Eq Amazonka.AppRunner.ListServices.ListServicesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.ListServices.ListServices
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListServices.ListServicesResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.ListServices.ListServices
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListServices.ListServices
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.ListServices.ListServices
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.ListServices.ListServices
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.ListServices.ListServices
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.ListServices.ListServices


-- | Return a list of operations that occurred on an App Runner service.
--   
--   The resulting list of OperationSummary objects is sorted in reverse
--   chronological order. The first object on the list represents the last
--   started operation.
module Amazonka.AppRunner.ListOperations

-- | <i>See:</i> <a>newListOperations</a> smart constructor.
data ListOperations
ListOperations' :: Maybe Text -> Maybe Natural -> Text -> ListOperations

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones specified in the
--   initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
[$sel:nextToken:ListOperations'] :: ListOperations -> Maybe Text

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
[$sel:maxResults:ListOperations'] :: ListOperations -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   a list of operations for.
[$sel:serviceArn:ListOperations'] :: ListOperations -> Text

-- | Create a value of <a>ListOperations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOperations'</a>, <a>listOperations_nextToken</a>
--   - A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones specified in the
--   initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:ListOperations'</a>,
--   <a>listOperations_maxResults</a> - The maximum number of results to
--   include in each response (result page). It's used for a paginated
--   request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
--   
--   <a>$sel:serviceArn:ListOperations'</a>,
--   <a>listOperations_serviceArn</a> - The Amazon Resource Name (ARN) of
--   the App Runner service that you want a list of operations for.
newListOperations :: Text -> ListOperations

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones specified in the
--   initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listOperations_nextToken :: Lens' ListOperations (Maybe Text)

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listOperations_maxResults :: Lens' ListOperations (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   a list of operations for.
listOperations_serviceArn :: Lens' ListOperations Text

-- | <i>See:</i> <a>newListOperationsResponse</a> smart constructor.
data ListOperationsResponse
ListOperationsResponse' :: Maybe Text -> Maybe [OperationSummary] -> Int -> ListOperationsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
[$sel:nextToken:ListOperationsResponse'] :: ListOperationsResponse -> Maybe Text

-- | A list of operation summary information records. In a paginated
--   request, the request returns up to <tt>MaxResults</tt> records for
--   each call.
[$sel:operationSummaryList:ListOperationsResponse'] :: ListOperationsResponse -> Maybe [OperationSummary]

-- | The response's http status code.
[$sel:httpStatus:ListOperationsResponse'] :: ListOperationsResponse -> Int

-- | Create a value of <a>ListOperationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOperations'</a>,
--   <a>listOperationsResponse_nextToken</a> - The token that you can pass
--   in a subsequent request to get the next result page. It's returned in
--   a paginated request.
--   
--   <a>$sel:operationSummaryList:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_operationSummaryList</a> - A list of
--   operation summary information records. In a paginated request, the
--   request returns up to <tt>MaxResults</tt> records for each call.
--   
--   <a>$sel:httpStatus:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_httpStatus</a> - The response's http status
--   code.
newListOperationsResponse :: Int -> ListOperationsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
listOperationsResponse_nextToken :: Lens' ListOperationsResponse (Maybe Text)

-- | A list of operation summary information records. In a paginated
--   request, the request returns up to <tt>MaxResults</tt> records for
--   each call.
listOperationsResponse_operationSummaryList :: Lens' ListOperationsResponse (Maybe [OperationSummary])

-- | The response's http status code.
listOperationsResponse_httpStatus :: Lens' ListOperationsResponse Int
instance GHC.Generics.Generic Amazonka.AppRunner.ListOperations.ListOperations
instance GHC.Show.Show Amazonka.AppRunner.ListOperations.ListOperations
instance GHC.Read.Read Amazonka.AppRunner.ListOperations.ListOperations
instance GHC.Classes.Eq Amazonka.AppRunner.ListOperations.ListOperations
instance GHC.Generics.Generic Amazonka.AppRunner.ListOperations.ListOperationsResponse
instance GHC.Show.Show Amazonka.AppRunner.ListOperations.ListOperationsResponse
instance GHC.Read.Read Amazonka.AppRunner.ListOperations.ListOperationsResponse
instance GHC.Classes.Eq Amazonka.AppRunner.ListOperations.ListOperationsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.ListOperations.ListOperations
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListOperations.ListOperationsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.ListOperations.ListOperations
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListOperations.ListOperations
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.ListOperations.ListOperations
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.ListOperations.ListOperations
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.ListOperations.ListOperations
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.ListOperations.ListOperations


-- | Returns a list of App Runner connections that are associated with your
--   Amazon Web Services account.
module Amazonka.AppRunner.ListConnections

-- | <i>See:</i> <a>newListConnections</a> smart constructor.
data ListConnections
ListConnections' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListConnections

-- | If specified, only this connection is returned. If not specified, the
--   result isn't filtered by name.
[$sel:connectionName:ListConnections'] :: ListConnections -> Maybe Text

-- | A token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
[$sel:nextToken:ListConnections'] :: ListConnections -> Maybe Text

-- | The maximum number of results to include in each response (result
--   page). Used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
[$sel:maxResults:ListConnections'] :: ListConnections -> Maybe Natural

-- | Create a value of <a>ListConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionName:ListConnections'</a>,
--   <a>listConnections_connectionName</a> - If specified, only this
--   connection is returned. If not specified, the result isn't filtered by
--   name.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnections_nextToken</a> - A token from a previous result
--   page. Used for a paginated request. The request retrieves the next
--   result page. All other parameter values must be identical to the ones
--   specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:ListConnections'</a>,
--   <a>listConnections_maxResults</a> - The maximum number of results to
--   include in each response (result page). Used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
newListConnections :: ListConnections

-- | If specified, only this connection is returned. If not specified, the
--   result isn't filtered by name.
listConnections_connectionName :: Lens' ListConnections (Maybe Text)

-- | A token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listConnections_nextToken :: Lens' ListConnections (Maybe Text)

-- | The maximum number of results to include in each response (result
--   page). Used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listConnections_maxResults :: Lens' ListConnections (Maybe Natural)

-- | <i>See:</i> <a>newListConnectionsResponse</a> smart constructor.
data ListConnectionsResponse
ListConnectionsResponse' :: Maybe Text -> Int -> [ConnectionSummary] -> ListConnectionsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. Returned in a paginated request.
[$sel:nextToken:ListConnectionsResponse'] :: ListConnectionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListConnectionsResponse'] :: ListConnectionsResponse -> Int

-- | A list of summary information records for connections. In a paginated
--   request, the request returns up to <tt>MaxResults</tt> records for
--   each call.
[$sel:connectionSummaryList:ListConnectionsResponse'] :: ListConnectionsResponse -> [ConnectionSummary]

-- | Create a value of <a>ListConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnectionsResponse_nextToken</a> - The token that you can pass
--   in a subsequent request to get the next result page. Returned in a
--   paginated request.
--   
--   <a>$sel:httpStatus:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:connectionSummaryList:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_connectionSummaryList</a> - A list of
--   summary information records for connections. In a paginated request,
--   the request returns up to <tt>MaxResults</tt> records for each call.
newListConnectionsResponse :: Int -> ListConnectionsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. Returned in a paginated request.
listConnectionsResponse_nextToken :: Lens' ListConnectionsResponse (Maybe Text)

-- | The response's http status code.
listConnectionsResponse_httpStatus :: Lens' ListConnectionsResponse Int

-- | A list of summary information records for connections. In a paginated
--   request, the request returns up to <tt>MaxResults</tt> records for
--   each call.
listConnectionsResponse_connectionSummaryList :: Lens' ListConnectionsResponse [ConnectionSummary]
instance GHC.Generics.Generic Amazonka.AppRunner.ListConnections.ListConnections
instance GHC.Show.Show Amazonka.AppRunner.ListConnections.ListConnections
instance GHC.Read.Read Amazonka.AppRunner.ListConnections.ListConnections
instance GHC.Classes.Eq Amazonka.AppRunner.ListConnections.ListConnections
instance GHC.Generics.Generic Amazonka.AppRunner.ListConnections.ListConnectionsResponse
instance GHC.Show.Show Amazonka.AppRunner.ListConnections.ListConnectionsResponse
instance GHC.Read.Read Amazonka.AppRunner.ListConnections.ListConnectionsResponse
instance GHC.Classes.Eq Amazonka.AppRunner.ListConnections.ListConnectionsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.ListConnections.ListConnections
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListConnections.ListConnectionsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.ListConnections.ListConnections
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListConnections.ListConnections
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.ListConnections.ListConnections
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.ListConnections.ListConnections
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.ListConnections.ListConnections
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.ListConnections.ListConnections


-- | Returns a list of App Runner automatic scaling configurations in your
--   Amazon Web Services account. You can query the revisions for a
--   specific configuration name or the revisions for all configurations in
--   your account. You can optionally query only the latest revision of
--   each requested name.
module Amazonka.AppRunner.ListAutoScalingConfigurations

-- | <i>See:</i> <a>newListAutoScalingConfigurations</a> smart constructor.
data ListAutoScalingConfigurations
ListAutoScalingConfigurations' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Natural -> ListAutoScalingConfigurations

-- | The name of the App Runner auto scaling configuration that you want to
--   list. If specified, App Runner lists revisions that share this name.
--   If not specified, App Runner returns revisions of all configurations.
[$sel:autoScalingConfigurationName:ListAutoScalingConfigurations'] :: ListAutoScalingConfigurations -> Maybe Text

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones that are specified in
--   the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
[$sel:nextToken:ListAutoScalingConfigurations'] :: ListAutoScalingConfigurations -> Maybe Text

-- | Set to <tt>true</tt> to list only the latest revision for each
--   requested configuration name.
--   
--   Keep as <tt>false</tt> to list all revisions for each requested
--   configuration name.
--   
--   Default: <tt>false</tt>
[$sel:latestOnly:ListAutoScalingConfigurations'] :: ListAutoScalingConfigurations -> Maybe Bool

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
[$sel:maxResults:ListAutoScalingConfigurations'] :: ListAutoScalingConfigurations -> Maybe Natural

-- | Create a value of <a>ListAutoScalingConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationName:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_autoScalingConfigurationName</a> -
--   The name of the App Runner auto scaling configuration that you want to
--   list. If specified, App Runner lists revisions that share this name.
--   If not specified, App Runner returns revisions of all configurations.
--   
--   <a>$sel:nextToken:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_nextToken</a> - A token from a
--   previous result page. It's used for a paginated request. The request
--   retrieves the next result page. All other parameter values must be
--   identical to the ones that are specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:latestOnly:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_latestOnly</a> - Set to <tt>true</tt>
--   to list only the latest revision for each requested configuration
--   name.
--   
--   Keep as <tt>false</tt> to list all revisions for each requested
--   configuration name.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:maxResults:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_maxResults</a> - The maximum number
--   of results to include in each response (result page). It's used for a
--   paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
newListAutoScalingConfigurations :: ListAutoScalingConfigurations

-- | The name of the App Runner auto scaling configuration that you want to
--   list. If specified, App Runner lists revisions that share this name.
--   If not specified, App Runner returns revisions of all configurations.
listAutoScalingConfigurations_autoScalingConfigurationName :: Lens' ListAutoScalingConfigurations (Maybe Text)

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones that are specified in
--   the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listAutoScalingConfigurations_nextToken :: Lens' ListAutoScalingConfigurations (Maybe Text)

-- | Set to <tt>true</tt> to list only the latest revision for each
--   requested configuration name.
--   
--   Keep as <tt>false</tt> to list all revisions for each requested
--   configuration name.
--   
--   Default: <tt>false</tt>
listAutoScalingConfigurations_latestOnly :: Lens' ListAutoScalingConfigurations (Maybe Bool)

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listAutoScalingConfigurations_maxResults :: Lens' ListAutoScalingConfigurations (Maybe Natural)

-- | <i>See:</i> <a>newListAutoScalingConfigurationsResponse</a> smart
--   constructor.
data ListAutoScalingConfigurationsResponse
ListAutoScalingConfigurationsResponse' :: Maybe Text -> Int -> [AutoScalingConfigurationSummary] -> ListAutoScalingConfigurationsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
[$sel:nextToken:ListAutoScalingConfigurationsResponse'] :: ListAutoScalingConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAutoScalingConfigurationsResponse'] :: ListAutoScalingConfigurationsResponse -> Int

-- | A list of summary information records for auto scaling configurations.
--   In a paginated request, the request returns up to <tt>MaxResults</tt>
--   records for each call.
[$sel:autoScalingConfigurationSummaryList:ListAutoScalingConfigurationsResponse'] :: ListAutoScalingConfigurationsResponse -> [AutoScalingConfigurationSummary]

-- | Create a value of <a>ListAutoScalingConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurationsResponse_nextToken</a> - The token
--   that you can pass in a subsequent request to get the next result page.
--   It's returned in a paginated request.
--   
--   <a>$sel:httpStatus:ListAutoScalingConfigurationsResponse'</a>,
--   <a>listAutoScalingConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfigurationSummaryList:ListAutoScalingConfigurationsResponse'</a>,
--   <a>listAutoScalingConfigurationsResponse_autoScalingConfigurationSummaryList</a>
--   - A list of summary information records for auto scaling
--   configurations. In a paginated request, the request returns up to
--   <tt>MaxResults</tt> records for each call.
newListAutoScalingConfigurationsResponse :: Int -> ListAutoScalingConfigurationsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
listAutoScalingConfigurationsResponse_nextToken :: Lens' ListAutoScalingConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listAutoScalingConfigurationsResponse_httpStatus :: Lens' ListAutoScalingConfigurationsResponse Int

-- | A list of summary information records for auto scaling configurations.
--   In a paginated request, the request returns up to <tt>MaxResults</tt>
--   records for each call.
listAutoScalingConfigurationsResponse_autoScalingConfigurationSummaryList :: Lens' ListAutoScalingConfigurationsResponse [AutoScalingConfigurationSummary]
instance GHC.Generics.Generic Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance GHC.Show.Show Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance GHC.Read.Read Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance GHC.Classes.Eq Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance GHC.Generics.Generic Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurationsResponse
instance GHC.Show.Show Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurationsResponse
instance GHC.Read.Read Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurationsResponse
instance GHC.Classes.Eq Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurationsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurationsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance Control.DeepSeq.NFData Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.ListAutoScalingConfigurations.ListAutoScalingConfigurations


-- | Disassociate a custom domain name from an App Runner service.
--   
--   Certificates tracking domain validity are associated with a custom
--   domain and are stored in <a>AWS Certificate Manager (ACM)</a>. These
--   certificates aren't deleted as part of this action. App Runner delays
--   certificate deletion for 30 days after a domain is disassociated from
--   your service.
module Amazonka.AppRunner.DisassociateCustomDomain

-- | <i>See:</i> <a>newDisassociateCustomDomain</a> smart constructor.
data DisassociateCustomDomain
DisassociateCustomDomain' :: Text -> Text -> DisassociateCustomDomain

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to disassociate a custom domain name from.
[$sel:serviceArn:DisassociateCustomDomain'] :: DisassociateCustomDomain -> Text

-- | The domain name that you want to disassociate from the App Runner
--   service.
[$sel:domainName:DisassociateCustomDomain'] :: DisassociateCustomDomain -> Text

-- | Create a value of <a>DisassociateCustomDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:DisassociateCustomDomain'</a>,
--   <a>disassociateCustomDomain_serviceArn</a> - The Amazon Resource Name
--   (ARN) of the App Runner service that you want to disassociate a custom
--   domain name from.
--   
--   <a>$sel:domainName:DisassociateCustomDomain'</a>,
--   <a>disassociateCustomDomain_domainName</a> - The domain name that you
--   want to disassociate from the App Runner service.
newDisassociateCustomDomain :: Text -> Text -> DisassociateCustomDomain

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to disassociate a custom domain name from.
disassociateCustomDomain_serviceArn :: Lens' DisassociateCustomDomain Text

-- | The domain name that you want to disassociate from the App Runner
--   service.
disassociateCustomDomain_domainName :: Lens' DisassociateCustomDomain Text

-- | <i>See:</i> <a>newDisassociateCustomDomainResponse</a> smart
--   constructor.
data DisassociateCustomDomainResponse
DisassociateCustomDomainResponse' :: Int -> Text -> Text -> CustomDomain -> DisassociateCustomDomainResponse

-- | The response's http status code.
[$sel:httpStatus:DisassociateCustomDomainResponse'] :: DisassociateCustomDomainResponse -> Int

-- | The App Runner subdomain of the App Runner service. The disassociated
--   custom domain name was mapped to this target name.
[$sel:dNSTarget:DisassociateCustomDomainResponse'] :: DisassociateCustomDomainResponse -> Text

-- | The Amazon Resource Name (ARN) of the App Runner service that a custom
--   domain name is disassociated from.
[$sel:serviceArn:DisassociateCustomDomainResponse'] :: DisassociateCustomDomainResponse -> Text

-- | A description of the domain name that's being disassociated.
[$sel:customDomain:DisassociateCustomDomainResponse'] :: DisassociateCustomDomainResponse -> CustomDomain

-- | Create a value of <a>DisassociateCustomDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateCustomDomainResponse'</a>,
--   <a>disassociateCustomDomainResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:dNSTarget:DisassociateCustomDomainResponse'</a>,
--   <a>disassociateCustomDomainResponse_dNSTarget</a> - The App Runner
--   subdomain of the App Runner service. The disassociated custom domain
--   name was mapped to this target name.
--   
--   <a>$sel:serviceArn:DisassociateCustomDomain'</a>,
--   <a>disassociateCustomDomainResponse_serviceArn</a> - The Amazon
--   Resource Name (ARN) of the App Runner service that a custom domain
--   name is disassociated from.
--   
--   <a>$sel:customDomain:DisassociateCustomDomainResponse'</a>,
--   <a>disassociateCustomDomainResponse_customDomain</a> - A description
--   of the domain name that's being disassociated.
newDisassociateCustomDomainResponse :: Int -> Text -> Text -> CustomDomain -> DisassociateCustomDomainResponse

-- | The response's http status code.
disassociateCustomDomainResponse_httpStatus :: Lens' DisassociateCustomDomainResponse Int

-- | The App Runner subdomain of the App Runner service. The disassociated
--   custom domain name was mapped to this target name.
disassociateCustomDomainResponse_dNSTarget :: Lens' DisassociateCustomDomainResponse Text

-- | The Amazon Resource Name (ARN) of the App Runner service that a custom
--   domain name is disassociated from.
disassociateCustomDomainResponse_serviceArn :: Lens' DisassociateCustomDomainResponse Text

-- | A description of the domain name that's being disassociated.
disassociateCustomDomainResponse_customDomain :: Lens' DisassociateCustomDomainResponse CustomDomain
instance GHC.Generics.Generic Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance GHC.Show.Show Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance GHC.Read.Read Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance GHC.Classes.Eq Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance GHC.Generics.Generic Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomainResponse
instance GHC.Show.Show Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomainResponse
instance GHC.Read.Read Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomainResponse
instance GHC.Classes.Eq Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance Control.DeepSeq.NFData Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance Control.DeepSeq.NFData Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.DisassociateCustomDomain.DisassociateCustomDomain


-- | Return a full description of an App Runner service.
module Amazonka.AppRunner.DescribeService

-- | <i>See:</i> <a>newDescribeService</a> smart constructor.
data DescribeService
DescribeService' :: Text -> DescribeService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   a description for.
[$sel:serviceArn:DescribeService'] :: DescribeService -> Text

-- | Create a value of <a>DescribeService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:DescribeService'</a>,
--   <a>describeService_serviceArn</a> - The Amazon Resource Name (ARN) of
--   the App Runner service that you want a description for.
newDescribeService :: Text -> DescribeService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   a description for.
describeService_serviceArn :: Lens' DescribeService Text

-- | <i>See:</i> <a>newDescribeServiceResponse</a> smart constructor.
data DescribeServiceResponse
DescribeServiceResponse' :: Int -> Service -> DescribeServiceResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeServiceResponse'] :: DescribeServiceResponse -> Int

-- | A full description of the App Runner service that you specified in
--   this request.
[$sel:service:DescribeServiceResponse'] :: DescribeServiceResponse -> Service

-- | Create a value of <a>DescribeServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeServiceResponse'</a>,
--   <a>describeServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:DescribeServiceResponse'</a>,
--   <a>describeServiceResponse_service</a> - A full description of the App
--   Runner service that you specified in this request.
newDescribeServiceResponse :: Int -> Service -> DescribeServiceResponse

-- | The response's http status code.
describeServiceResponse_httpStatus :: Lens' DescribeServiceResponse Int

-- | A full description of the App Runner service that you specified in
--   this request.
describeServiceResponse_service :: Lens' DescribeServiceResponse Service
instance GHC.Generics.Generic Amazonka.AppRunner.DescribeService.DescribeService
instance GHC.Show.Show Amazonka.AppRunner.DescribeService.DescribeService
instance GHC.Read.Read Amazonka.AppRunner.DescribeService.DescribeService
instance GHC.Classes.Eq Amazonka.AppRunner.DescribeService.DescribeService
instance GHC.Generics.Generic Amazonka.AppRunner.DescribeService.DescribeServiceResponse
instance GHC.Show.Show Amazonka.AppRunner.DescribeService.DescribeServiceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.DescribeService.DescribeServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.DescribeService.DescribeService
instance Control.DeepSeq.NFData Amazonka.AppRunner.DescribeService.DescribeServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.DescribeService.DescribeService
instance Control.DeepSeq.NFData Amazonka.AppRunner.DescribeService.DescribeService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.DescribeService.DescribeService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.DescribeService.DescribeService
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.DescribeService.DescribeService
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.DescribeService.DescribeService


-- | Return a description of custom domain names that are associated with
--   an App Runner service.
module Amazonka.AppRunner.DescribeCustomDomains

-- | <i>See:</i> <a>newDescribeCustomDomains</a> smart constructor.
data DescribeCustomDomains
DescribeCustomDomains' :: Maybe Text -> Maybe Natural -> Text -> DescribeCustomDomains

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones that are specified in
--   the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
[$sel:nextToken:DescribeCustomDomains'] :: DescribeCustomDomains -> Maybe Text

-- | The maximum number of results that each response (result page) can
--   include. It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
[$sel:maxResults:DescribeCustomDomains'] :: DescribeCustomDomains -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   associated custom domain names to be described for.
[$sel:serviceArn:DescribeCustomDomains'] :: DescribeCustomDomains -> Text

-- | Create a value of <a>DescribeCustomDomains</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCustomDomains'</a>,
--   <a>describeCustomDomains_nextToken</a> - A token from a previous
--   result page. It's used for a paginated request. The request retrieves
--   the next result page. All other parameter values must be identical to
--   the ones that are specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:DescribeCustomDomains'</a>,
--   <a>describeCustomDomains_maxResults</a> - The maximum number of
--   results that each response (result page) can include. It's used for a
--   paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
--   
--   <a>$sel:serviceArn:DescribeCustomDomains'</a>,
--   <a>describeCustomDomains_serviceArn</a> - The Amazon Resource Name
--   (ARN) of the App Runner service that you want associated custom domain
--   names to be described for.
newDescribeCustomDomains :: Text -> DescribeCustomDomains

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones that are specified in
--   the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
describeCustomDomains_nextToken :: Lens' DescribeCustomDomains (Maybe Text)

-- | The maximum number of results that each response (result page) can
--   include. It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
describeCustomDomains_maxResults :: Lens' DescribeCustomDomains (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   associated custom domain names to be described for.
describeCustomDomains_serviceArn :: Lens' DescribeCustomDomains Text

-- | <i>See:</i> <a>newDescribeCustomDomainsResponse</a> smart constructor.
data DescribeCustomDomainsResponse
DescribeCustomDomainsResponse' :: Maybe Text -> Int -> Text -> Text -> [CustomDomain] -> DescribeCustomDomainsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
[$sel:nextToken:DescribeCustomDomainsResponse'] :: DescribeCustomDomainsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCustomDomainsResponse'] :: DescribeCustomDomainsResponse -> Int

-- | The App Runner subdomain of the App Runner service. The associated
--   custom domain names are mapped to this target name.
[$sel:dNSTarget:DescribeCustomDomainsResponse'] :: DescribeCustomDomainsResponse -> Text

-- | The Amazon Resource Name (ARN) of the App Runner service whose
--   associated custom domain names you want to describe.
[$sel:serviceArn:DescribeCustomDomainsResponse'] :: DescribeCustomDomainsResponse -> Text

-- | A list of descriptions of custom domain names that are associated with
--   the service. In a paginated request, the request returns up to
--   <tt>MaxResults</tt> records per call.
[$sel:customDomains:DescribeCustomDomainsResponse'] :: DescribeCustomDomainsResponse -> [CustomDomain]

-- | Create a value of <a>DescribeCustomDomainsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCustomDomains'</a>,
--   <a>describeCustomDomainsResponse_nextToken</a> - The token that you
--   can pass in a subsequent request to get the next result page. It's
--   returned in a paginated request.
--   
--   <a>$sel:httpStatus:DescribeCustomDomainsResponse'</a>,
--   <a>describeCustomDomainsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:dNSTarget:DescribeCustomDomainsResponse'</a>,
--   <a>describeCustomDomainsResponse_dNSTarget</a> - The App Runner
--   subdomain of the App Runner service. The associated custom domain
--   names are mapped to this target name.
--   
--   <a>$sel:serviceArn:DescribeCustomDomains'</a>,
--   <a>describeCustomDomainsResponse_serviceArn</a> - The Amazon Resource
--   Name (ARN) of the App Runner service whose associated custom domain
--   names you want to describe.
--   
--   <a>$sel:customDomains:DescribeCustomDomainsResponse'</a>,
--   <a>describeCustomDomainsResponse_customDomains</a> - A list of
--   descriptions of custom domain names that are associated with the
--   service. In a paginated request, the request returns up to
--   <tt>MaxResults</tt> records per call.
newDescribeCustomDomainsResponse :: Int -> Text -> Text -> DescribeCustomDomainsResponse

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
describeCustomDomainsResponse_nextToken :: Lens' DescribeCustomDomainsResponse (Maybe Text)

-- | The response's http status code.
describeCustomDomainsResponse_httpStatus :: Lens' DescribeCustomDomainsResponse Int

-- | The App Runner subdomain of the App Runner service. The associated
--   custom domain names are mapped to this target name.
describeCustomDomainsResponse_dNSTarget :: Lens' DescribeCustomDomainsResponse Text

-- | The Amazon Resource Name (ARN) of the App Runner service whose
--   associated custom domain names you want to describe.
describeCustomDomainsResponse_serviceArn :: Lens' DescribeCustomDomainsResponse Text

-- | A list of descriptions of custom domain names that are associated with
--   the service. In a paginated request, the request returns up to
--   <tt>MaxResults</tt> records per call.
describeCustomDomainsResponse_customDomains :: Lens' DescribeCustomDomainsResponse [CustomDomain]
instance GHC.Generics.Generic Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance GHC.Show.Show Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance GHC.Read.Read Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance GHC.Classes.Eq Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance GHC.Generics.Generic Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomainsResponse
instance GHC.Show.Show Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomainsResponse
instance GHC.Read.Read Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomainsResponse
instance GHC.Classes.Eq Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomainsResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance Control.DeepSeq.NFData Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomainsResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance Control.DeepSeq.NFData Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.DescribeCustomDomains.DescribeCustomDomains


-- | Return a full description of an App Runner automatic scaling
--   configuration resource.
module Amazonka.AppRunner.DescribeAutoScalingConfiguration

-- | <i>See:</i> <a>newDescribeAutoScalingConfiguration</a> smart
--   constructor.
data DescribeAutoScalingConfiguration
DescribeAutoScalingConfiguration' :: Text -> DescribeAutoScalingConfiguration

-- | The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want a description for.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is
--   described.
[$sel:autoScalingConfigurationArn:DescribeAutoScalingConfiguration'] :: DescribeAutoScalingConfiguration -> Text

-- | Create a value of <a>DescribeAutoScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationArn:DescribeAutoScalingConfiguration'</a>,
--   <a>describeAutoScalingConfiguration_autoScalingConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want a description for.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is
--   described.
newDescribeAutoScalingConfiguration :: Text -> DescribeAutoScalingConfiguration

-- | The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want a description for.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is
--   described.
describeAutoScalingConfiguration_autoScalingConfigurationArn :: Lens' DescribeAutoScalingConfiguration Text

-- | <i>See:</i> <a>newDescribeAutoScalingConfigurationResponse</a> smart
--   constructor.
data DescribeAutoScalingConfigurationResponse
DescribeAutoScalingConfigurationResponse' :: Int -> AutoScalingConfiguration -> DescribeAutoScalingConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeAutoScalingConfigurationResponse'] :: DescribeAutoScalingConfigurationResponse -> Int

-- | A full description of the App Runner auto scaling configuration that
--   you specified in this request.
[$sel:autoScalingConfiguration:DescribeAutoScalingConfigurationResponse'] :: DescribeAutoScalingConfigurationResponse -> AutoScalingConfiguration

-- | Create a value of <a>DescribeAutoScalingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeAutoScalingConfigurationResponse'</a>,
--   <a>describeAutoScalingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfiguration:DescribeAutoScalingConfigurationResponse'</a>,
--   <a>describeAutoScalingConfigurationResponse_autoScalingConfiguration</a>
--   - A full description of the App Runner auto scaling configuration that
--   you specified in this request.
newDescribeAutoScalingConfigurationResponse :: Int -> AutoScalingConfiguration -> DescribeAutoScalingConfigurationResponse

-- | The response's http status code.
describeAutoScalingConfigurationResponse_httpStatus :: Lens' DescribeAutoScalingConfigurationResponse Int

-- | A full description of the App Runner auto scaling configuration that
--   you specified in this request.
describeAutoScalingConfigurationResponse_autoScalingConfiguration :: Lens' DescribeAutoScalingConfigurationResponse AutoScalingConfiguration
instance GHC.Generics.Generic Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance GHC.Show.Show Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance GHC.Read.Read Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance GHC.Generics.Generic Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfigurationResponse
instance GHC.Show.Show Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfigurationResponse
instance GHC.Read.Read Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfigurationResponse
instance GHC.Classes.Eq Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.DescribeAutoScalingConfiguration.DescribeAutoScalingConfiguration


-- | Delete an App Runner service.
--   
--   This is an asynchronous operation. On a successful call, you can use
--   the returned <tt>OperationId</tt> and the ListOperations call to track
--   the operation's progress.
module Amazonka.AppRunner.DeleteService

-- | <i>See:</i> <a>newDeleteService</a> smart constructor.
data DeleteService
DeleteService' :: Text -> DeleteService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to delete.
[$sel:serviceArn:DeleteService'] :: DeleteService -> Text

-- | Create a value of <a>DeleteService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:DeleteService'</a>, <a>deleteService_serviceArn</a>
--   - The Amazon Resource Name (ARN) of the App Runner service that you
--   want to delete.
newDeleteService :: Text -> DeleteService

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to delete.
deleteService_serviceArn :: Lens' DeleteService Text

-- | <i>See:</i> <a>newDeleteServiceResponse</a> smart constructor.
data DeleteServiceResponse
DeleteServiceResponse' :: Int -> Service -> Text -> DeleteServiceResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteServiceResponse'] :: DeleteServiceResponse -> Int

-- | A description of the App Runner service that this request just
--   deleted.
[$sel:service:DeleteServiceResponse'] :: DeleteServiceResponse -> Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
[$sel:operationId:DeleteServiceResponse'] :: DeleteServiceResponse -> Text

-- | Create a value of <a>DeleteServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_service</a> - A description of the App Runner
--   service that this request just deleted.
--   
--   <a>$sel:operationId:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
newDeleteServiceResponse :: Int -> Service -> Text -> DeleteServiceResponse

-- | The response's http status code.
deleteServiceResponse_httpStatus :: Lens' DeleteServiceResponse Int

-- | A description of the App Runner service that this request just
--   deleted.
deleteServiceResponse_service :: Lens' DeleteServiceResponse Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
deleteServiceResponse_operationId :: Lens' DeleteServiceResponse Text
instance GHC.Generics.Generic Amazonka.AppRunner.DeleteService.DeleteService
instance GHC.Show.Show Amazonka.AppRunner.DeleteService.DeleteService
instance GHC.Read.Read Amazonka.AppRunner.DeleteService.DeleteService
instance GHC.Classes.Eq Amazonka.AppRunner.DeleteService.DeleteService
instance GHC.Generics.Generic Amazonka.AppRunner.DeleteService.DeleteServiceResponse
instance GHC.Show.Show Amazonka.AppRunner.DeleteService.DeleteServiceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.DeleteService.DeleteServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.DeleteService.DeleteService
instance Control.DeepSeq.NFData Amazonka.AppRunner.DeleteService.DeleteServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.DeleteService.DeleteService
instance Control.DeepSeq.NFData Amazonka.AppRunner.DeleteService.DeleteService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.DeleteService.DeleteService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.DeleteService.DeleteService
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.DeleteService.DeleteService
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.DeleteService.DeleteService


-- | Delete an App Runner connection. You must first ensure that there are
--   no running App Runner services that use this connection. If there are
--   any, the <tt>DeleteConnection</tt> action fails.
module Amazonka.AppRunner.DeleteConnection

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | The Amazon Resource Name (ARN) of the App Runner connection that you
--   want to delete.
[$sel:connectionArn:DeleteConnection'] :: DeleteConnection -> Text

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionArn:DeleteConnection'</a>,
--   <a>deleteConnection_connectionArn</a> - The Amazon Resource Name (ARN)
--   of the App Runner connection that you want to delete.
newDeleteConnection :: Text -> DeleteConnection

-- | The Amazon Resource Name (ARN) of the App Runner connection that you
--   want to delete.
deleteConnection_connectionArn :: Lens' DeleteConnection Text

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Maybe Connection -> Int -> DeleteConnectionResponse

-- | A description of the App Runner connection that this request just
--   deleted.
[$sel:connection:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Maybe Connection

-- | The response's http status code.
[$sel:httpStatus:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Int

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connection:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_connection</a> - A description of the App
--   Runner connection that this request just deleted.
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | A description of the App Runner connection that this request just
--   deleted.
deleteConnectionResponse_connection :: Lens' DeleteConnectionResponse (Maybe Connection)

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int
instance GHC.Generics.Generic Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance GHC.Show.Show Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance GHC.Read.Read Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance GHC.Classes.Eq Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance GHC.Generics.Generic Amazonka.AppRunner.DeleteConnection.DeleteConnectionResponse
instance GHC.Show.Show Amazonka.AppRunner.DeleteConnection.DeleteConnectionResponse
instance GHC.Read.Read Amazonka.AppRunner.DeleteConnection.DeleteConnectionResponse
instance GHC.Classes.Eq Amazonka.AppRunner.DeleteConnection.DeleteConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Amazonka.AppRunner.DeleteConnection.DeleteConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.DeleteConnection.DeleteConnection
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.DeleteConnection.DeleteConnection


-- | Delete an App Runner automatic scaling configuration resource. You can
--   delete a specific revision or the latest active revision. You can't
--   delete a configuration that's used by one or more App Runner services.
module Amazonka.AppRunner.DeleteAutoScalingConfiguration

-- | <i>See:</i> <a>newDeleteAutoScalingConfiguration</a> smart
--   constructor.
data DeleteAutoScalingConfiguration
DeleteAutoScalingConfiguration' :: Text -> DeleteAutoScalingConfiguration

-- | The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want to delete.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is deleted.
[$sel:autoScalingConfigurationArn:DeleteAutoScalingConfiguration'] :: DeleteAutoScalingConfiguration -> Text

-- | Create a value of <a>DeleteAutoScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationArn:DeleteAutoScalingConfiguration'</a>,
--   <a>deleteAutoScalingConfiguration_autoScalingConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want to delete.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is deleted.
newDeleteAutoScalingConfiguration :: Text -> DeleteAutoScalingConfiguration

-- | The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want to delete.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is deleted.
deleteAutoScalingConfiguration_autoScalingConfigurationArn :: Lens' DeleteAutoScalingConfiguration Text

-- | <i>See:</i> <a>newDeleteAutoScalingConfigurationResponse</a> smart
--   constructor.
data DeleteAutoScalingConfigurationResponse
DeleteAutoScalingConfigurationResponse' :: Int -> AutoScalingConfiguration -> DeleteAutoScalingConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteAutoScalingConfigurationResponse'] :: DeleteAutoScalingConfigurationResponse -> Int

-- | A description of the App Runner auto scaling configuration that this
--   request just deleted.
[$sel:autoScalingConfiguration:DeleteAutoScalingConfigurationResponse'] :: DeleteAutoScalingConfigurationResponse -> AutoScalingConfiguration

-- | Create a value of <a>DeleteAutoScalingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteAutoScalingConfigurationResponse'</a>,
--   <a>deleteAutoScalingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfiguration:DeleteAutoScalingConfigurationResponse'</a>,
--   <a>deleteAutoScalingConfigurationResponse_autoScalingConfiguration</a>
--   - A description of the App Runner auto scaling configuration that this
--   request just deleted.
newDeleteAutoScalingConfigurationResponse :: Int -> AutoScalingConfiguration -> DeleteAutoScalingConfigurationResponse

-- | The response's http status code.
deleteAutoScalingConfigurationResponse_httpStatus :: Lens' DeleteAutoScalingConfigurationResponse Int

-- | A description of the App Runner auto scaling configuration that this
--   request just deleted.
deleteAutoScalingConfigurationResponse_autoScalingConfiguration :: Lens' DeleteAutoScalingConfigurationResponse AutoScalingConfiguration
instance GHC.Generics.Generic Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance GHC.Show.Show Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance GHC.Read.Read Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance GHC.Generics.Generic Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfigurationResponse
instance GHC.Show.Show Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfigurationResponse
instance GHC.Read.Read Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfigurationResponse
instance GHC.Classes.Eq Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.DeleteAutoScalingConfiguration.DeleteAutoScalingConfiguration


-- | Create an App Runner service. After the service is created, the action
--   also automatically starts a deployment.
--   
--   This is an asynchronous operation. On a successful call, you can use
--   the returned <tt>OperationId</tt> and the <a>ListOperations</a> call
--   to track the operation's progress.
module Amazonka.AppRunner.CreateService

-- | <i>See:</i> <a>newCreateService</a> smart constructor.
data CreateService
CreateService' :: Maybe Text -> Maybe EncryptionConfiguration -> Maybe HealthCheckConfiguration -> Maybe [Tag] -> Maybe InstanceConfiguration -> Text -> SourceConfiguration -> CreateService

-- | The Amazon Resource Name (ARN) of an App Runner automatic scaling
--   configuration resource that you want to associate with your service.
--   If not provided, App Runner associates the latest revision of a
--   default auto scaling configuration.
[$sel:autoScalingConfigurationArn:CreateService'] :: CreateService -> Maybe Text

-- | An optional custom encryption key that App Runner uses to encrypt the
--   copy of your source repository that it maintains and your service
--   logs. By default, App Runner uses an Amazon Web Services managed CMK.
[$sel:encryptionConfiguration:CreateService'] :: CreateService -> Maybe EncryptionConfiguration

-- | The settings for the health check that App Runner performs to monitor
--   the health of your service.
[$sel:healthCheckConfiguration:CreateService'] :: CreateService -> Maybe HealthCheckConfiguration

-- | An optional list of metadata items that you can associate with your
--   service resource. A tag is a key-value pair.
[$sel:tags:CreateService'] :: CreateService -> Maybe [Tag]

-- | The runtime configuration of instances (scaling units) of the App
--   Runner service.
[$sel:instanceConfiguration:CreateService'] :: CreateService -> Maybe InstanceConfiguration

-- | A name for the new service. It must be unique across all the running
--   App Runner services in your Amazon Web Services account in the Amazon
--   Web Services Region.
[$sel:serviceName:CreateService'] :: CreateService -> Text

-- | The source to deploy to the App Runner service. It can be a code or an
--   image repository.
[$sel:sourceConfiguration:CreateService'] :: CreateService -> SourceConfiguration

-- | Create a value of <a>CreateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingConfigurationArn:CreateService'</a>,
--   <a>createService_autoScalingConfigurationArn</a> - The Amazon Resource
--   Name (ARN) of an App Runner automatic scaling configuration resource
--   that you want to associate with your service. If not provided, App
--   Runner associates the latest revision of a default auto scaling
--   configuration.
--   
--   <a>$sel:encryptionConfiguration:CreateService'</a>,
--   <a>createService_encryptionConfiguration</a> - An optional custom
--   encryption key that App Runner uses to encrypt the copy of your source
--   repository that it maintains and your service logs. By default, App
--   Runner uses an Amazon Web Services managed CMK.
--   
--   <a>$sel:healthCheckConfiguration:CreateService'</a>,
--   <a>createService_healthCheckConfiguration</a> - The settings for the
--   health check that App Runner performs to monitor the health of your
--   service.
--   
--   <a>$sel:tags:CreateService'</a>, <a>createService_tags</a> - An
--   optional list of metadata items that you can associate with your
--   service resource. A tag is a key-value pair.
--   
--   <a>$sel:instanceConfiguration:CreateService'</a>,
--   <a>createService_instanceConfiguration</a> - The runtime configuration
--   of instances (scaling units) of the App Runner service.
--   
--   <a>$sel:serviceName:CreateService'</a>,
--   <a>createService_serviceName</a> - A name for the new service. It must
--   be unique across all the running App Runner services in your Amazon
--   Web Services account in the Amazon Web Services Region.
--   
--   <a>$sel:sourceConfiguration:CreateService'</a>,
--   <a>createService_sourceConfiguration</a> - The source to deploy to the
--   App Runner service. It can be a code or an image repository.
newCreateService :: Text -> SourceConfiguration -> CreateService

-- | The Amazon Resource Name (ARN) of an App Runner automatic scaling
--   configuration resource that you want to associate with your service.
--   If not provided, App Runner associates the latest revision of a
--   default auto scaling configuration.
createService_autoScalingConfigurationArn :: Lens' CreateService (Maybe Text)

-- | An optional custom encryption key that App Runner uses to encrypt the
--   copy of your source repository that it maintains and your service
--   logs. By default, App Runner uses an Amazon Web Services managed CMK.
createService_encryptionConfiguration :: Lens' CreateService (Maybe EncryptionConfiguration)

-- | The settings for the health check that App Runner performs to monitor
--   the health of your service.
createService_healthCheckConfiguration :: Lens' CreateService (Maybe HealthCheckConfiguration)

-- | An optional list of metadata items that you can associate with your
--   service resource. A tag is a key-value pair.
createService_tags :: Lens' CreateService (Maybe [Tag])

-- | The runtime configuration of instances (scaling units) of the App
--   Runner service.
createService_instanceConfiguration :: Lens' CreateService (Maybe InstanceConfiguration)

-- | A name for the new service. It must be unique across all the running
--   App Runner services in your Amazon Web Services account in the Amazon
--   Web Services Region.
createService_serviceName :: Lens' CreateService Text

-- | The source to deploy to the App Runner service. It can be a code or an
--   image repository.
createService_sourceConfiguration :: Lens' CreateService SourceConfiguration

-- | <i>See:</i> <a>newCreateServiceResponse</a> smart constructor.
data CreateServiceResponse
CreateServiceResponse' :: Int -> Service -> Text -> CreateServiceResponse

-- | The response's http status code.
[$sel:httpStatus:CreateServiceResponse'] :: CreateServiceResponse -> Int

-- | A description of the App Runner service that's created by this
--   request.
[$sel:service:CreateServiceResponse'] :: CreateServiceResponse -> Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the <a>ListOperations</a> call to track
--   the operation's progress.
[$sel:operationId:CreateServiceResponse'] :: CreateServiceResponse -> Text

-- | Create a value of <a>CreateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateServiceResponse'</a>,
--   <a>createServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:CreateServiceResponse'</a>,
--   <a>createServiceResponse_service</a> - A description of the App Runner
--   service that's created by this request.
--   
--   <a>$sel:operationId:CreateServiceResponse'</a>,
--   <a>createServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the <a>ListOperations</a> call to track the operation's
--   progress.
newCreateServiceResponse :: Int -> Service -> Text -> CreateServiceResponse

-- | The response's http status code.
createServiceResponse_httpStatus :: Lens' CreateServiceResponse Int

-- | A description of the App Runner service that's created by this
--   request.
createServiceResponse_service :: Lens' CreateServiceResponse Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the <a>ListOperations</a> call to track
--   the operation's progress.
createServiceResponse_operationId :: Lens' CreateServiceResponse Text
instance GHC.Generics.Generic Amazonka.AppRunner.CreateService.CreateService
instance GHC.Show.Show Amazonka.AppRunner.CreateService.CreateService
instance GHC.Classes.Eq Amazonka.AppRunner.CreateService.CreateService
instance GHC.Generics.Generic Amazonka.AppRunner.CreateService.CreateServiceResponse
instance GHC.Show.Show Amazonka.AppRunner.CreateService.CreateServiceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.CreateService.CreateServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.CreateService.CreateService
instance Control.DeepSeq.NFData Amazonka.AppRunner.CreateService.CreateServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.CreateService.CreateService
instance Control.DeepSeq.NFData Amazonka.AppRunner.CreateService.CreateService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.CreateService.CreateService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.CreateService.CreateService
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.CreateService.CreateService
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.CreateService.CreateService


-- | Create an App Runner connection resource. App Runner requires a
--   connection resource when you create App Runner services that access
--   private repositories from certain third-party providers. You can share
--   a connection across multiple services.
--   
--   A connection resource is needed to access GitHub repositories. GitHub
--   requires a user interface approval process through the App Runner
--   console before you can use the connection.
module Amazonka.AppRunner.CreateConnection

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe [Tag] -> Text -> ProviderType -> CreateConnection

-- | A list of metadata items that you can associate with your connection
--   resource. A tag is a key-value pair.
[$sel:tags:CreateConnection'] :: CreateConnection -> Maybe [Tag]

-- | A name for the new connection. It must be unique across all App Runner
--   connections for the Amazon Web Services account in the Amazon Web
--   Services Region.
[$sel:connectionName:CreateConnection'] :: CreateConnection -> Text

-- | The source repository provider.
[$sel:providerType:CreateConnection'] :: CreateConnection -> ProviderType

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - A
--   list of metadata items that you can associate with your connection
--   resource. A tag is a key-value pair.
--   
--   <a>$sel:connectionName:CreateConnection'</a>,
--   <a>createConnection_connectionName</a> - A name for the new
--   connection. It must be unique across all App Runner connections for
--   the Amazon Web Services account in the Amazon Web Services Region.
--   
--   <a>$sel:providerType:CreateConnection'</a>,
--   <a>createConnection_providerType</a> - The source repository provider.
newCreateConnection :: Text -> ProviderType -> CreateConnection

-- | A list of metadata items that you can associate with your connection
--   resource. A tag is a key-value pair.
createConnection_tags :: Lens' CreateConnection (Maybe [Tag])

-- | A name for the new connection. It must be unique across all App Runner
--   connections for the Amazon Web Services account in the Amazon Web
--   Services Region.
createConnection_connectionName :: Lens' CreateConnection Text

-- | The source repository provider.
createConnection_providerType :: Lens' CreateConnection ProviderType

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Int -> Connection -> CreateConnectionResponse

-- | The response's http status code.
[$sel:httpStatus:CreateConnectionResponse'] :: CreateConnectionResponse -> Int

-- | A description of the App Runner connection that's created by this
--   request.
[$sel:connection:CreateConnectionResponse'] :: CreateConnectionResponse -> Connection

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:connection:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connection</a> - A description of the App
--   Runner connection that's created by this request.
newCreateConnectionResponse :: Int -> Connection -> CreateConnectionResponse

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int

-- | A description of the App Runner connection that's created by this
--   request.
createConnectionResponse_connection :: Lens' CreateConnectionResponse Connection
instance GHC.Generics.Generic Amazonka.AppRunner.CreateConnection.CreateConnection
instance GHC.Show.Show Amazonka.AppRunner.CreateConnection.CreateConnection
instance GHC.Read.Read Amazonka.AppRunner.CreateConnection.CreateConnection
instance GHC.Classes.Eq Amazonka.AppRunner.CreateConnection.CreateConnection
instance GHC.Generics.Generic Amazonka.AppRunner.CreateConnection.CreateConnectionResponse
instance GHC.Show.Show Amazonka.AppRunner.CreateConnection.CreateConnectionResponse
instance GHC.Read.Read Amazonka.AppRunner.CreateConnection.CreateConnectionResponse
instance GHC.Classes.Eq Amazonka.AppRunner.CreateConnection.CreateConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Amazonka.AppRunner.CreateConnection.CreateConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Amazonka.AppRunner.CreateConnection.CreateConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.CreateConnection.CreateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.CreateConnection.CreateConnection
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.CreateConnection.CreateConnection
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.CreateConnection.CreateConnection


-- | Create an App Runner automatic scaling configuration resource. App
--   Runner requires this resource when you create App Runner services that
--   require non-default auto scaling settings. You can share an auto
--   scaling configuration across multiple services.
--   
--   Create multiple revisions of a configuration by using the same
--   <tt>AutoScalingConfigurationName</tt> and different
--   <tt>AutoScalingConfigurationRevision</tt> values. When you create a
--   service, you can set it to use the latest active revision of an auto
--   scaling configuration or a specific revision.
--   
--   Configure a higher <tt>MinSize</tt> to increase the spread of your App
--   Runner service over more Availability Zones in the Amazon Web Services
--   Region. The tradeoff is a higher minimal cost.
--   
--   Configure a lower <tt>MaxSize</tt> to control your cost. The tradeoff
--   is lower responsiveness during peak demand.
module Amazonka.AppRunner.CreateAutoScalingConfiguration

-- | <i>See:</i> <a>newCreateAutoScalingConfiguration</a> smart
--   constructor.
data CreateAutoScalingConfiguration
CreateAutoScalingConfiguration' :: Maybe Natural -> Maybe Natural -> Maybe [Tag] -> Maybe Natural -> Text -> CreateAutoScalingConfiguration

-- | The maximum number of instances that your service scales up to. At
--   most <tt>MaxSize</tt> instances actively serve traffic for your
--   service.
--   
--   Default: <tt>25</tt>
[$sel:maxSize:CreateAutoScalingConfiguration'] :: CreateAutoScalingConfiguration -> Maybe Natural

-- | The minimum number of instances that App Runner provisions for your
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   Default: <tt>1</tt>
[$sel:minSize:CreateAutoScalingConfiguration'] :: CreateAutoScalingConfiguration -> Maybe Natural

-- | A list of metadata items that you can associate with your auto scaling
--   configuration resource. A tag is a key-value pair.
[$sel:tags:CreateAutoScalingConfiguration'] :: CreateAutoScalingConfiguration -> Maybe [Tag]

-- | The maximum number of concurrent requests that you want an instance to
--   process. If the number of concurrent requests exceeds this limit, App
--   Runner scales up your service.
--   
--   Default: <tt>100</tt>
[$sel:maxConcurrency:CreateAutoScalingConfiguration'] :: CreateAutoScalingConfiguration -> Maybe Natural

-- | A name for the auto scaling configuration. When you use it for the
--   first time in an Amazon Web Services Region, App Runner creates
--   revision number <tt>1</tt> of this name. When you use the same name in
--   subsequent calls, App Runner creates incremental revisions of the
--   configuration.
[$sel:autoScalingConfigurationName:CreateAutoScalingConfiguration'] :: CreateAutoScalingConfiguration -> Text

-- | Create a value of <a>CreateAutoScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxSize:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_maxSize</a> - The maximum number of
--   instances that your service scales up to. At most <tt>MaxSize</tt>
--   instances actively serve traffic for your service.
--   
--   Default: <tt>25</tt>
--   
--   <a>$sel:minSize:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_minSize</a> - The minimum number of
--   instances that App Runner provisions for your service. The service
--   always has at least <tt>MinSize</tt> provisioned instances. Some of
--   them actively serve traffic. The rest of them (provisioned and
--   inactive instances) are a cost-effective compute capacity reserve and
--   are ready to be quickly activated. You pay for memory usage of all the
--   provisioned instances. You pay for CPU usage of only the active
--   subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   Default: <tt>1</tt>
--   
--   <a>$sel:tags:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_tags</a> - A list of metadata items
--   that you can associate with your auto scaling configuration resource.
--   A tag is a key-value pair.
--   
--   <a>$sel:maxConcurrency:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_maxConcurrency</a> - The maximum
--   number of concurrent requests that you want an instance to process. If
--   the number of concurrent requests exceeds this limit, App Runner
--   scales up your service.
--   
--   Default: <tt>100</tt>
--   
--   
--   <a>$sel:autoScalingConfigurationName:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_autoScalingConfigurationName</a> - A
--   name for the auto scaling configuration. When you use it for the first
--   time in an Amazon Web Services Region, App Runner creates revision
--   number <tt>1</tt> of this name. When you use the same name in
--   subsequent calls, App Runner creates incremental revisions of the
--   configuration.
newCreateAutoScalingConfiguration :: Text -> CreateAutoScalingConfiguration

-- | The maximum number of instances that your service scales up to. At
--   most <tt>MaxSize</tt> instances actively serve traffic for your
--   service.
--   
--   Default: <tt>25</tt>
createAutoScalingConfiguration_maxSize :: Lens' CreateAutoScalingConfiguration (Maybe Natural)

-- | The minimum number of instances that App Runner provisions for your
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   Default: <tt>1</tt>
createAutoScalingConfiguration_minSize :: Lens' CreateAutoScalingConfiguration (Maybe Natural)

-- | A list of metadata items that you can associate with your auto scaling
--   configuration resource. A tag is a key-value pair.
createAutoScalingConfiguration_tags :: Lens' CreateAutoScalingConfiguration (Maybe [Tag])

-- | The maximum number of concurrent requests that you want an instance to
--   process. If the number of concurrent requests exceeds this limit, App
--   Runner scales up your service.
--   
--   Default: <tt>100</tt>
createAutoScalingConfiguration_maxConcurrency :: Lens' CreateAutoScalingConfiguration (Maybe Natural)

-- | A name for the auto scaling configuration. When you use it for the
--   first time in an Amazon Web Services Region, App Runner creates
--   revision number <tt>1</tt> of this name. When you use the same name in
--   subsequent calls, App Runner creates incremental revisions of the
--   configuration.
createAutoScalingConfiguration_autoScalingConfigurationName :: Lens' CreateAutoScalingConfiguration Text

-- | <i>See:</i> <a>newCreateAutoScalingConfigurationResponse</a> smart
--   constructor.
data CreateAutoScalingConfigurationResponse
CreateAutoScalingConfigurationResponse' :: Int -> AutoScalingConfiguration -> CreateAutoScalingConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:CreateAutoScalingConfigurationResponse'] :: CreateAutoScalingConfigurationResponse -> Int

-- | A description of the App Runner auto scaling configuration that's
--   created by this request.
[$sel:autoScalingConfiguration:CreateAutoScalingConfigurationResponse'] :: CreateAutoScalingConfigurationResponse -> AutoScalingConfiguration

-- | Create a value of <a>CreateAutoScalingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateAutoScalingConfigurationResponse'</a>,
--   <a>createAutoScalingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfiguration:CreateAutoScalingConfigurationResponse'</a>,
--   <a>createAutoScalingConfigurationResponse_autoScalingConfiguration</a>
--   - A description of the App Runner auto scaling configuration that's
--   created by this request.
newCreateAutoScalingConfigurationResponse :: Int -> AutoScalingConfiguration -> CreateAutoScalingConfigurationResponse

-- | The response's http status code.
createAutoScalingConfigurationResponse_httpStatus :: Lens' CreateAutoScalingConfigurationResponse Int

-- | A description of the App Runner auto scaling configuration that's
--   created by this request.
createAutoScalingConfigurationResponse_autoScalingConfiguration :: Lens' CreateAutoScalingConfigurationResponse AutoScalingConfiguration
instance GHC.Generics.Generic Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance GHC.Show.Show Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance GHC.Read.Read Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance GHC.Classes.Eq Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance GHC.Generics.Generic Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfigurationResponse
instance GHC.Show.Show Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfigurationResponse
instance GHC.Read.Read Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfigurationResponse
instance GHC.Classes.Eq Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance Control.DeepSeq.NFData Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.CreateAutoScalingConfiguration.CreateAutoScalingConfiguration


-- | Associate your own domain name with the App Runner subdomain URL of
--   your App Runner service.
--   
--   After you call <tt>AssociateCustomDomain</tt> and receive a successful
--   response, use the information in the CustomDomain record that's
--   returned to add CNAME records to your Domain Name System (DNS). For
--   each mapped domain name, add a mapping to the target App Runner
--   subdomain and one or more certificate validation records. App Runner
--   then performs DNS validation to verify that you own or control the
--   domain name that you associated. App Runner tracks domain validity in
--   a certificate stored in <a>AWS Certificate Manager (ACM)</a>.
module Amazonka.AppRunner.AssociateCustomDomain

-- | <i>See:</i> <a>newAssociateCustomDomain</a> smart constructor.
data AssociateCustomDomain
AssociateCustomDomain' :: Maybe Bool -> Text -> Text -> AssociateCustomDomain

-- | Set to <tt>true</tt> to associate the subdomain <tt>www.DomainName
--   </tt> with the App Runner service in addition to the base domain.
--   
--   Default: <tt>true</tt>
[$sel:enableWWWSubdomain:AssociateCustomDomain'] :: AssociateCustomDomain -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to associate a custom domain name with.
[$sel:serviceArn:AssociateCustomDomain'] :: AssociateCustomDomain -> Text

-- | A custom domain endpoint to associate. Specify a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
[$sel:domainName:AssociateCustomDomain'] :: AssociateCustomDomain -> Text

-- | Create a value of <a>AssociateCustomDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enableWWWSubdomain:AssociateCustomDomain'</a>,
--   <a>associateCustomDomain_enableWWWSubdomain</a> - Set to <tt>true</tt>
--   to associate the subdomain <tt>www.DomainName </tt> with the App
--   Runner service in addition to the base domain.
--   
--   Default: <tt>true</tt>
--   
--   <a>$sel:serviceArn:AssociateCustomDomain'</a>,
--   <a>associateCustomDomain_serviceArn</a> - The Amazon Resource Name
--   (ARN) of the App Runner service that you want to associate a custom
--   domain name with.
--   
--   <a>$sel:domainName:AssociateCustomDomain'</a>,
--   <a>associateCustomDomain_domainName</a> - A custom domain endpoint to
--   associate. Specify a root domain (for example, <tt>example.com</tt>),
--   a subdomain (for example, <tt>login.example.com</tt> or
--   <tt>admin.login.example.com</tt>), or a wildcard (for example,
--   <tt>*.example.com</tt>).
newAssociateCustomDomain :: Text -> Text -> AssociateCustomDomain

-- | Set to <tt>true</tt> to associate the subdomain <tt>www.DomainName
--   </tt> with the App Runner service in addition to the base domain.
--   
--   Default: <tt>true</tt>
associateCustomDomain_enableWWWSubdomain :: Lens' AssociateCustomDomain (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to associate a custom domain name with.
associateCustomDomain_serviceArn :: Lens' AssociateCustomDomain Text

-- | A custom domain endpoint to associate. Specify a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
associateCustomDomain_domainName :: Lens' AssociateCustomDomain Text

-- | <i>See:</i> <a>newAssociateCustomDomainResponse</a> smart constructor.
data AssociateCustomDomainResponse
AssociateCustomDomainResponse' :: Int -> Text -> Text -> CustomDomain -> AssociateCustomDomainResponse

-- | The response's http status code.
[$sel:httpStatus:AssociateCustomDomainResponse'] :: AssociateCustomDomainResponse -> Int

-- | The App Runner subdomain of the App Runner service. The custom domain
--   name is mapped to this target name.
[$sel:dNSTarget:AssociateCustomDomainResponse'] :: AssociateCustomDomainResponse -> Text

-- | The Amazon Resource Name (ARN) of the App Runner service with which a
--   custom domain name is associated.
[$sel:serviceArn:AssociateCustomDomainResponse'] :: AssociateCustomDomainResponse -> Text

-- | A description of the domain name that's being associated.
[$sel:customDomain:AssociateCustomDomainResponse'] :: AssociateCustomDomainResponse -> CustomDomain

-- | Create a value of <a>AssociateCustomDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateCustomDomainResponse'</a>,
--   <a>associateCustomDomainResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:dNSTarget:AssociateCustomDomainResponse'</a>,
--   <a>associateCustomDomainResponse_dNSTarget</a> - The App Runner
--   subdomain of the App Runner service. The custom domain name is mapped
--   to this target name.
--   
--   <a>$sel:serviceArn:AssociateCustomDomain'</a>,
--   <a>associateCustomDomainResponse_serviceArn</a> - The Amazon Resource
--   Name (ARN) of the App Runner service with which a custom domain name
--   is associated.
--   
--   <a>$sel:customDomain:AssociateCustomDomainResponse'</a>,
--   <a>associateCustomDomainResponse_customDomain</a> - A description of
--   the domain name that's being associated.
newAssociateCustomDomainResponse :: Int -> Text -> Text -> CustomDomain -> AssociateCustomDomainResponse

-- | The response's http status code.
associateCustomDomainResponse_httpStatus :: Lens' AssociateCustomDomainResponse Int

-- | The App Runner subdomain of the App Runner service. The custom domain
--   name is mapped to this target name.
associateCustomDomainResponse_dNSTarget :: Lens' AssociateCustomDomainResponse Text

-- | The Amazon Resource Name (ARN) of the App Runner service with which a
--   custom domain name is associated.
associateCustomDomainResponse_serviceArn :: Lens' AssociateCustomDomainResponse Text

-- | A description of the domain name that's being associated.
associateCustomDomainResponse_customDomain :: Lens' AssociateCustomDomainResponse CustomDomain
instance GHC.Generics.Generic Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance GHC.Show.Show Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance GHC.Read.Read Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance GHC.Classes.Eq Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance GHC.Generics.Generic Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomainResponse
instance GHC.Show.Show Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomainResponse
instance GHC.Read.Read Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomainResponse
instance GHC.Classes.Eq Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance Control.DeepSeq.NFData Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance Control.DeepSeq.NFData Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.AssociateCustomDomain.AssociateCustomDomain


-- | Remove tags from an App Runner resource.
module Amazonka.AppRunner.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to remove
--   tags from.
--   
--   It must be the ARN of an App Runner resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | A list of tag keys that you want to remove.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to remove tags from.
--   
--   It must be the ARN of an App Runner resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys that you want to remove.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to remove
--   tags from.
--   
--   It must be the ARN of an App Runner resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of tag keys that you want to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.AppRunner.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.AppRunner.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.AppRunner.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.AppRunner.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.AppRunner.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.AppRunner.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.AppRunner.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.AppRunner.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.AppRunner.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.UntagResource.UntagResource


-- | Update an App Runner service. You can update the source configuration
--   and instance configuration of the service. You can also update the ARN
--   of the auto scaling configuration resource that's associated with the
--   service. However, you can't change the name or the encryption
--   configuration of the service. These can be set only when you create
--   the service.
--   
--   To update the tags applied to your service, use the separate actions
--   TagResource and UntagResource.
--   
--   This is an asynchronous operation. On a successful call, you can use
--   the returned <tt>OperationId</tt> and the ListOperations call to track
--   the operation's progress.
module Amazonka.AppRunner.UpdateService

-- | <i>See:</i> <a>newUpdateService</a> smart constructor.
data UpdateService
UpdateService' :: Maybe Text -> Maybe HealthCheckConfiguration -> Maybe SourceConfiguration -> Maybe InstanceConfiguration -> Text -> UpdateService

-- | The Amazon Resource Name (ARN) of an App Runner automatic scaling
--   configuration resource that you want to associate with your service.
[$sel:autoScalingConfigurationArn:UpdateService'] :: UpdateService -> Maybe Text

-- | The settings for the health check that App Runner performs to monitor
--   the health of your service.
[$sel:healthCheckConfiguration:UpdateService'] :: UpdateService -> Maybe HealthCheckConfiguration

-- | The source configuration to apply to the App Runner service.
--   
--   You can change the configuration of the code or image repository that
--   the service uses. However, you can't switch from code to image or the
--   other way around. This means that you must provide the same structure
--   member of <tt>SourceConfiguration</tt> that you originally included
--   when you created the service. Specifically, you can include either
--   <tt>CodeRepository</tt> or <tt>ImageRepository</tt>. To update the
--   source configuration, set the values to members of the structure that
--   you include.
[$sel:sourceConfiguration:UpdateService'] :: UpdateService -> Maybe SourceConfiguration

-- | The runtime configuration to apply to instances (scaling units) of the
--   App Runner service.
[$sel:instanceConfiguration:UpdateService'] :: UpdateService -> Maybe InstanceConfiguration

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to update.
[$sel:serviceArn:UpdateService'] :: UpdateService -> Text

-- | Create a value of <a>UpdateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingConfigurationArn:UpdateService'</a>,
--   <a>updateService_autoScalingConfigurationArn</a> - The Amazon Resource
--   Name (ARN) of an App Runner automatic scaling configuration resource
--   that you want to associate with your service.
--   
--   <a>$sel:healthCheckConfiguration:UpdateService'</a>,
--   <a>updateService_healthCheckConfiguration</a> - The settings for the
--   health check that App Runner performs to monitor the health of your
--   service.
--   
--   <a>$sel:sourceConfiguration:UpdateService'</a>,
--   <a>updateService_sourceConfiguration</a> - The source configuration to
--   apply to the App Runner service.
--   
--   You can change the configuration of the code or image repository that
--   the service uses. However, you can't switch from code to image or the
--   other way around. This means that you must provide the same structure
--   member of <tt>SourceConfiguration</tt> that you originally included
--   when you created the service. Specifically, you can include either
--   <tt>CodeRepository</tt> or <tt>ImageRepository</tt>. To update the
--   source configuration, set the values to members of the structure that
--   you include.
--   
--   <a>$sel:instanceConfiguration:UpdateService'</a>,
--   <a>updateService_instanceConfiguration</a> - The runtime configuration
--   to apply to instances (scaling units) of the App Runner service.
--   
--   <a>$sel:serviceArn:UpdateService'</a>, <a>updateService_serviceArn</a>
--   - The Amazon Resource Name (ARN) of the App Runner service that you
--   want to update.
newUpdateService :: Text -> UpdateService

-- | The Amazon Resource Name (ARN) of an App Runner automatic scaling
--   configuration resource that you want to associate with your service.
updateService_autoScalingConfigurationArn :: Lens' UpdateService (Maybe Text)

-- | The settings for the health check that App Runner performs to monitor
--   the health of your service.
updateService_healthCheckConfiguration :: Lens' UpdateService (Maybe HealthCheckConfiguration)

-- | The source configuration to apply to the App Runner service.
--   
--   You can change the configuration of the code or image repository that
--   the service uses. However, you can't switch from code to image or the
--   other way around. This means that you must provide the same structure
--   member of <tt>SourceConfiguration</tt> that you originally included
--   when you created the service. Specifically, you can include either
--   <tt>CodeRepository</tt> or <tt>ImageRepository</tt>. To update the
--   source configuration, set the values to members of the structure that
--   you include.
updateService_sourceConfiguration :: Lens' UpdateService (Maybe SourceConfiguration)

-- | The runtime configuration to apply to instances (scaling units) of the
--   App Runner service.
updateService_instanceConfiguration :: Lens' UpdateService (Maybe InstanceConfiguration)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to update.
updateService_serviceArn :: Lens' UpdateService Text

-- | <i>See:</i> <a>newUpdateServiceResponse</a> smart constructor.
data UpdateServiceResponse
UpdateServiceResponse' :: Int -> Service -> Text -> UpdateServiceResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateServiceResponse'] :: UpdateServiceResponse -> Int

-- | A description of the App Runner service updated by this request. All
--   configuration values in the returned <tt>Service</tt> structure
--   reflect configuration changes that are being applied by this request.
[$sel:service:UpdateServiceResponse'] :: UpdateServiceResponse -> Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
[$sel:operationId:UpdateServiceResponse'] :: UpdateServiceResponse -> Text

-- | Create a value of <a>UpdateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_service</a> - A description of the App Runner
--   service updated by this request. All configuration values in the
--   returned <tt>Service</tt> structure reflect configuration changes that
--   are being applied by this request.
--   
--   <a>$sel:operationId:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
newUpdateServiceResponse :: Int -> Service -> Text -> UpdateServiceResponse

-- | The response's http status code.
updateServiceResponse_httpStatus :: Lens' UpdateServiceResponse Int

-- | A description of the App Runner service updated by this request. All
--   configuration values in the returned <tt>Service</tt> structure
--   reflect configuration changes that are being applied by this request.
updateServiceResponse_service :: Lens' UpdateServiceResponse Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
updateServiceResponse_operationId :: Lens' UpdateServiceResponse Text
instance GHC.Generics.Generic Amazonka.AppRunner.UpdateService.UpdateService
instance GHC.Show.Show Amazonka.AppRunner.UpdateService.UpdateService
instance GHC.Classes.Eq Amazonka.AppRunner.UpdateService.UpdateService
instance GHC.Generics.Generic Amazonka.AppRunner.UpdateService.UpdateServiceResponse
instance GHC.Show.Show Amazonka.AppRunner.UpdateService.UpdateServiceResponse
instance GHC.Classes.Eq Amazonka.AppRunner.UpdateService.UpdateServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppRunner.UpdateService.UpdateService
instance Control.DeepSeq.NFData Amazonka.AppRunner.UpdateService.UpdateServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppRunner.UpdateService.UpdateService
instance Control.DeepSeq.NFData Amazonka.AppRunner.UpdateService.UpdateService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppRunner.UpdateService.UpdateService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppRunner.UpdateService.UpdateService
instance Amazonka.Data.Path.ToPath Amazonka.AppRunner.UpdateService.UpdateService
instance Amazonka.Data.Query.ToQuery Amazonka.AppRunner.UpdateService.UpdateService


module Amazonka.AppRunner.Lens

-- | A token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listServices_nextToken :: Lens' ListServices (Maybe Text)

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listServices_maxResults :: Lens' ListServices (Maybe Natural)

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
listServicesResponse_nextToken :: Lens' ListServicesResponse (Maybe Text)

-- | The response's http status code.
listServicesResponse_httpStatus :: Lens' ListServicesResponse Int

-- | A list of service summary information records. In a paginated request,
--   the request returns up to <tt>MaxResults</tt> records for each call.
listServicesResponse_serviceSummaryList :: Lens' ListServicesResponse [ServiceSummary]

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to resume.
resumeService_serviceArn :: Lens' ResumeService Text

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
resumeServiceResponse_operationId :: Lens' ResumeServiceResponse (Maybe Text)

-- | The response's http status code.
resumeServiceResponse_httpStatus :: Lens' ResumeServiceResponse Int

-- | A description of the App Runner service that this request just
--   resumed.
resumeServiceResponse_service :: Lens' ResumeServiceResponse Service

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to delete.
deleteService_serviceArn :: Lens' DeleteService Text

-- | The response's http status code.
deleteServiceResponse_httpStatus :: Lens' DeleteServiceResponse Int

-- | A description of the App Runner service that this request just
--   deleted.
deleteServiceResponse_service :: Lens' DeleteServiceResponse Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
deleteServiceResponse_operationId :: Lens' DeleteServiceResponse Text

-- | The Amazon Resource Name (ARN) of an App Runner automatic scaling
--   configuration resource that you want to associate with your service.
updateService_autoScalingConfigurationArn :: Lens' UpdateService (Maybe Text)

-- | The settings for the health check that App Runner performs to monitor
--   the health of your service.
updateService_healthCheckConfiguration :: Lens' UpdateService (Maybe HealthCheckConfiguration)

-- | The source configuration to apply to the App Runner service.
--   
--   You can change the configuration of the code or image repository that
--   the service uses. However, you can't switch from code to image or the
--   other way around. This means that you must provide the same structure
--   member of <tt>SourceConfiguration</tt> that you originally included
--   when you created the service. Specifically, you can include either
--   <tt>CodeRepository</tt> or <tt>ImageRepository</tt>. To update the
--   source configuration, set the values to members of the structure that
--   you include.
updateService_sourceConfiguration :: Lens' UpdateService (Maybe SourceConfiguration)

-- | The runtime configuration to apply to instances (scaling units) of the
--   App Runner service.
updateService_instanceConfiguration :: Lens' UpdateService (Maybe InstanceConfiguration)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to update.
updateService_serviceArn :: Lens' UpdateService Text

-- | The response's http status code.
updateServiceResponse_httpStatus :: Lens' UpdateServiceResponse Int

-- | A description of the App Runner service updated by this request. All
--   configuration values in the returned <tt>Service</tt> structure
--   reflect configuration changes that are being applied by this request.
updateServiceResponse_service :: Lens' UpdateServiceResponse Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
updateServiceResponse_operationId :: Lens' UpdateServiceResponse Text

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones specified in the
--   initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listOperations_nextToken :: Lens' ListOperations (Maybe Text)

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listOperations_maxResults :: Lens' ListOperations (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   a list of operations for.
listOperations_serviceArn :: Lens' ListOperations Text

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
listOperationsResponse_nextToken :: Lens' ListOperationsResponse (Maybe Text)

-- | A list of operation summary information records. In a paginated
--   request, the request returns up to <tt>MaxResults</tt> records for
--   each call.
listOperationsResponse_operationSummaryList :: Lens' ListOperationsResponse (Maybe [OperationSummary])

-- | The response's http status code.
listOperationsResponse_httpStatus :: Lens' ListOperationsResponse Int

-- | Set to <tt>true</tt> to associate the subdomain <tt>www.DomainName
--   </tt> with the App Runner service in addition to the base domain.
--   
--   Default: <tt>true</tt>
associateCustomDomain_enableWWWSubdomain :: Lens' AssociateCustomDomain (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to associate a custom domain name with.
associateCustomDomain_serviceArn :: Lens' AssociateCustomDomain Text

-- | A custom domain endpoint to associate. Specify a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
associateCustomDomain_domainName :: Lens' AssociateCustomDomain Text

-- | The response's http status code.
associateCustomDomainResponse_httpStatus :: Lens' AssociateCustomDomainResponse Int

-- | The App Runner subdomain of the App Runner service. The custom domain
--   name is mapped to this target name.
associateCustomDomainResponse_dNSTarget :: Lens' AssociateCustomDomainResponse Text

-- | The Amazon Resource Name (ARN) of the App Runner service with which a
--   custom domain name is associated.
associateCustomDomainResponse_serviceArn :: Lens' AssociateCustomDomainResponse Text

-- | A description of the domain name that's being associated.
associateCustomDomainResponse_customDomain :: Lens' AssociateCustomDomainResponse CustomDomain

-- | If specified, only this connection is returned. If not specified, the
--   result isn't filtered by name.
listConnections_connectionName :: Lens' ListConnections (Maybe Text)

-- | A token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listConnections_nextToken :: Lens' ListConnections (Maybe Text)

-- | The maximum number of results to include in each response (result
--   page). Used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listConnections_maxResults :: Lens' ListConnections (Maybe Natural)

-- | The token that you can pass in a subsequent request to get the next
--   result page. Returned in a paginated request.
listConnectionsResponse_nextToken :: Lens' ListConnectionsResponse (Maybe Text)

-- | The response's http status code.
listConnectionsResponse_httpStatus :: Lens' ListConnectionsResponse Int

-- | A list of summary information records for connections. In a paginated
--   request, the request returns up to <tt>MaxResults</tt> records for
--   each call.
listConnectionsResponse_connectionSummaryList :: Lens' ListConnectionsResponse [ConnectionSummary]

-- | The Amazon Resource Name (ARN) of the App Runner connection that you
--   want to delete.
deleteConnection_connectionArn :: Lens' DeleteConnection Text

-- | A description of the App Runner connection that this request just
--   deleted.
deleteConnectionResponse_connection :: Lens' DeleteConnectionResponse (Maybe Connection)

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int

-- | The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want a description for.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is
--   described.
describeAutoScalingConfiguration_autoScalingConfigurationArn :: Lens' DescribeAutoScalingConfiguration Text

-- | The response's http status code.
describeAutoScalingConfigurationResponse_httpStatus :: Lens' DescribeAutoScalingConfigurationResponse Int

-- | A full description of the App Runner auto scaling configuration that
--   you specified in this request.
describeAutoScalingConfigurationResponse_autoScalingConfiguration :: Lens' DescribeAutoScalingConfigurationResponse AutoScalingConfiguration

-- | The Amazon Resource Name (ARN) of the resource that a tag list is
--   requested for.
--   
--   It must be the ARN of an App Runner resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A list of the tag key-value pairs that are associated with the
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A list of metadata items that you can associate with your connection
--   resource. A tag is a key-value pair.
createConnection_tags :: Lens' CreateConnection (Maybe [Tag])

-- | A name for the new connection. It must be unique across all App Runner
--   connections for the Amazon Web Services account in the Amazon Web
--   Services Region.
createConnection_connectionName :: Lens' CreateConnection Text

-- | The source repository provider.
createConnection_providerType :: Lens' CreateConnection ProviderType

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int

-- | A description of the App Runner connection that's created by this
--   request.
createConnectionResponse_connection :: Lens' CreateConnectionResponse Connection

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones that are specified in
--   the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
describeCustomDomains_nextToken :: Lens' DescribeCustomDomains (Maybe Text)

-- | The maximum number of results that each response (result page) can
--   include. It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
describeCustomDomains_maxResults :: Lens' DescribeCustomDomains (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   associated custom domain names to be described for.
describeCustomDomains_serviceArn :: Lens' DescribeCustomDomains Text

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
describeCustomDomainsResponse_nextToken :: Lens' DescribeCustomDomainsResponse (Maybe Text)

-- | The response's http status code.
describeCustomDomainsResponse_httpStatus :: Lens' DescribeCustomDomainsResponse Int

-- | The App Runner subdomain of the App Runner service. The associated
--   custom domain names are mapped to this target name.
describeCustomDomainsResponse_dNSTarget :: Lens' DescribeCustomDomainsResponse Text

-- | The Amazon Resource Name (ARN) of the App Runner service whose
--   associated custom domain names you want to describe.
describeCustomDomainsResponse_serviceArn :: Lens' DescribeCustomDomainsResponse Text

-- | A list of descriptions of custom domain names that are associated with
--   the service. In a paginated request, the request returns up to
--   <tt>MaxResults</tt> records per call.
describeCustomDomainsResponse_customDomains :: Lens' DescribeCustomDomainsResponse [CustomDomain]

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   a description for.
describeService_serviceArn :: Lens' DescribeService Text

-- | The response's http status code.
describeServiceResponse_httpStatus :: Lens' DescribeServiceResponse Int

-- | A full description of the App Runner service that you specified in
--   this request.
describeServiceResponse_service :: Lens' DescribeServiceResponse Service

-- | The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want to delete.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is deleted.
deleteAutoScalingConfiguration_autoScalingConfigurationArn :: Lens' DeleteAutoScalingConfiguration Text

-- | The response's http status code.
deleteAutoScalingConfigurationResponse_httpStatus :: Lens' DeleteAutoScalingConfigurationResponse Int

-- | A description of the App Runner auto scaling configuration that this
--   request just deleted.
deleteAutoScalingConfigurationResponse_autoScalingConfiguration :: Lens' DeleteAutoScalingConfigurationResponse AutoScalingConfiguration

-- | The name of the App Runner auto scaling configuration that you want to
--   list. If specified, App Runner lists revisions that share this name.
--   If not specified, App Runner returns revisions of all configurations.
listAutoScalingConfigurations_autoScalingConfigurationName :: Lens' ListAutoScalingConfigurations (Maybe Text)

-- | A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones that are specified in
--   the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
listAutoScalingConfigurations_nextToken :: Lens' ListAutoScalingConfigurations (Maybe Text)

-- | Set to <tt>true</tt> to list only the latest revision for each
--   requested configuration name.
--   
--   Keep as <tt>false</tt> to list all revisions for each requested
--   configuration name.
--   
--   Default: <tt>false</tt>
listAutoScalingConfigurations_latestOnly :: Lens' ListAutoScalingConfigurations (Maybe Bool)

-- | The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
listAutoScalingConfigurations_maxResults :: Lens' ListAutoScalingConfigurations (Maybe Natural)

-- | The token that you can pass in a subsequent request to get the next
--   result page. It's returned in a paginated request.
listAutoScalingConfigurationsResponse_nextToken :: Lens' ListAutoScalingConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listAutoScalingConfigurationsResponse_httpStatus :: Lens' ListAutoScalingConfigurationsResponse Int

-- | A list of summary information records for auto scaling configurations.
--   In a paginated request, the request returns up to <tt>MaxResults</tt>
--   records for each call.
listAutoScalingConfigurationsResponse_autoScalingConfigurationSummaryList :: Lens' ListAutoScalingConfigurationsResponse [AutoScalingConfigurationSummary]

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to disassociate a custom domain name from.
disassociateCustomDomain_serviceArn :: Lens' DisassociateCustomDomain Text

-- | The domain name that you want to disassociate from the App Runner
--   service.
disassociateCustomDomain_domainName :: Lens' DisassociateCustomDomain Text

-- | The response's http status code.
disassociateCustomDomainResponse_httpStatus :: Lens' DisassociateCustomDomainResponse Int

-- | The App Runner subdomain of the App Runner service. The disassociated
--   custom domain name was mapped to this target name.
disassociateCustomDomainResponse_dNSTarget :: Lens' DisassociateCustomDomainResponse Text

-- | The Amazon Resource Name (ARN) of the App Runner service that a custom
--   domain name is disassociated from.
disassociateCustomDomainResponse_serviceArn :: Lens' DisassociateCustomDomainResponse Text

-- | A description of the domain name that's being disassociated.
disassociateCustomDomainResponse_customDomain :: Lens' DisassociateCustomDomainResponse CustomDomain

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to pause.
pauseService_serviceArn :: Lens' PauseService Text

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
pauseServiceResponse_operationId :: Lens' PauseServiceResponse (Maybe Text)

-- | The response's http status code.
pauseServiceResponse_httpStatus :: Lens' PauseServiceResponse Int

-- | A description of the App Runner service that this request just paused.
pauseServiceResponse_service :: Lens' PauseServiceResponse Service

-- | The Amazon Resource Name (ARN) of the resource that you want to update
--   tags for.
--   
--   It must be the ARN of an App Runner resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tag key-value pairs to add or update. If a key is new to the
--   resource, the tag is added with the provided value. If a key is
--   already associated with the resource, the value of the tag is updated.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to remove
--   tags from.
--   
--   It must be the ARN of an App Runner resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of tag keys that you want to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The maximum number of instances that your service scales up to. At
--   most <tt>MaxSize</tt> instances actively serve traffic for your
--   service.
--   
--   Default: <tt>25</tt>
createAutoScalingConfiguration_maxSize :: Lens' CreateAutoScalingConfiguration (Maybe Natural)

-- | The minimum number of instances that App Runner provisions for your
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   Default: <tt>1</tt>
createAutoScalingConfiguration_minSize :: Lens' CreateAutoScalingConfiguration (Maybe Natural)

-- | A list of metadata items that you can associate with your auto scaling
--   configuration resource. A tag is a key-value pair.
createAutoScalingConfiguration_tags :: Lens' CreateAutoScalingConfiguration (Maybe [Tag])

-- | The maximum number of concurrent requests that you want an instance to
--   process. If the number of concurrent requests exceeds this limit, App
--   Runner scales up your service.
--   
--   Default: <tt>100</tt>
createAutoScalingConfiguration_maxConcurrency :: Lens' CreateAutoScalingConfiguration (Maybe Natural)

-- | A name for the auto scaling configuration. When you use it for the
--   first time in an Amazon Web Services Region, App Runner creates
--   revision number <tt>1</tt> of this name. When you use the same name in
--   subsequent calls, App Runner creates incremental revisions of the
--   configuration.
createAutoScalingConfiguration_autoScalingConfigurationName :: Lens' CreateAutoScalingConfiguration Text

-- | The response's http status code.
createAutoScalingConfigurationResponse_httpStatus :: Lens' CreateAutoScalingConfigurationResponse Int

-- | A description of the App Runner auto scaling configuration that's
--   created by this request.
createAutoScalingConfigurationResponse_autoScalingConfiguration :: Lens' CreateAutoScalingConfigurationResponse AutoScalingConfiguration

-- | The Amazon Resource Name (ARN) of the App Runner service that you want
--   to manually deploy to.
startDeployment_serviceArn :: Lens' StartDeployment Text

-- | The response's http status code.
startDeploymentResponse_httpStatus :: Lens' StartDeploymentResponse Int

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the ListOperations call to track the
--   operation's progress.
startDeploymentResponse_operationId :: Lens' StartDeploymentResponse Text

-- | The Amazon Resource Name (ARN) of an App Runner automatic scaling
--   configuration resource that you want to associate with your service.
--   If not provided, App Runner associates the latest revision of a
--   default auto scaling configuration.
createService_autoScalingConfigurationArn :: Lens' CreateService (Maybe Text)

-- | An optional custom encryption key that App Runner uses to encrypt the
--   copy of your source repository that it maintains and your service
--   logs. By default, App Runner uses an Amazon Web Services managed CMK.
createService_encryptionConfiguration :: Lens' CreateService (Maybe EncryptionConfiguration)

-- | The settings for the health check that App Runner performs to monitor
--   the health of your service.
createService_healthCheckConfiguration :: Lens' CreateService (Maybe HealthCheckConfiguration)

-- | An optional list of metadata items that you can associate with your
--   service resource. A tag is a key-value pair.
createService_tags :: Lens' CreateService (Maybe [Tag])

-- | The runtime configuration of instances (scaling units) of the App
--   Runner service.
createService_instanceConfiguration :: Lens' CreateService (Maybe InstanceConfiguration)

-- | A name for the new service. It must be unique across all the running
--   App Runner services in your Amazon Web Services account in the Amazon
--   Web Services Region.
createService_serviceName :: Lens' CreateService Text

-- | The source to deploy to the App Runner service. It can be a code or an
--   image repository.
createService_sourceConfiguration :: Lens' CreateService SourceConfiguration

-- | The response's http status code.
createServiceResponse_httpStatus :: Lens' CreateServiceResponse Int

-- | A description of the App Runner service that's created by this
--   request.
createServiceResponse_service :: Lens' CreateServiceResponse Service

-- | The unique ID of the asynchronous operation that this request started.
--   You can use it combined with the <a>ListOperations</a> call to track
--   the operation's progress.
createServiceResponse_operationId :: Lens' CreateServiceResponse Text

-- | The Amazon Resource Name (ARN) of the IAM role that grants the App
--   Runner service access to a source repository. It's required for ECR
--   image repositories (but not for ECR Public repositories).
authenticationConfiguration_accessRoleArn :: Lens' AuthenticationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the App Runner connection that
--   enables the App Runner service to connect to a source repository. It's
--   required for GitHub code repositories.
authenticationConfiguration_connectionArn :: Lens' AuthenticationConfiguration (Maybe Text)

-- | The current state of the auto scaling configuration. If the status of
--   a configuration revision is <tt>INACTIVE</tt>, it was deleted and
--   can't be used. Inactive configuration revisions are permanently
--   removed some time after they are deleted.
autoScalingConfiguration_status :: Lens' AutoScalingConfiguration (Maybe AutoScalingConfigurationStatus)

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
autoScalingConfiguration_autoScalingConfigurationName :: Lens' AutoScalingConfiguration (Maybe Text)

-- | The time when the auto scaling configuration was created. It's in Unix
--   time stamp format.
autoScalingConfiguration_createdAt :: Lens' AutoScalingConfiguration (Maybe UTCTime)

-- | The maximum number of instances that a service scales up to. At most
--   <tt>MaxSize</tt> instances actively serve traffic for your service.
autoScalingConfiguration_maxSize :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
autoScalingConfiguration_autoScalingConfigurationRevision :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
autoScalingConfiguration_autoScalingConfigurationArn :: Lens' AutoScalingConfiguration (Maybe Text)

-- | The minimum number of instances that App Runner provisions for a
--   service. The service always has at least <tt>MinSize</tt> provisioned
--   instances. Some of them actively serve traffic. The rest of them
--   (provisioned and inactive instances) are a cost-effective compute
--   capacity reserve and are ready to be quickly activated. You pay for
--   memory usage of all the provisioned instances. You pay for CPU usage
--   of only the active subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
autoScalingConfiguration_minSize :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The time when the auto scaling configuration was deleted. It's in Unix
--   time stamp format.
autoScalingConfiguration_deletedAt :: Lens' AutoScalingConfiguration (Maybe UTCTime)

-- | It's set to <tt>true</tt> for the configuration with the highest
--   <tt>Revision</tt> among all configurations that share the same
--   <tt>Name</tt>. It's set to <tt>false</tt> otherwise.
autoScalingConfiguration_latest :: Lens' AutoScalingConfiguration (Maybe Bool)

-- | The maximum number of concurrent requests that an instance processes.
--   If the number of concurrent requests exceeds this limit, App Runner
--   scales the service up.
autoScalingConfiguration_maxConcurrency :: Lens' AutoScalingConfiguration (Maybe Int)

-- | The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
autoScalingConfigurationSummary_autoScalingConfigurationName :: Lens' AutoScalingConfigurationSummary (Maybe Text)

-- | The revision of this auto scaling configuration. It's unique among all
--   the active configurations (<tt>"Status": "ACTIVE"</tt>) with the same
--   <tt>AutoScalingConfigurationName</tt>.
autoScalingConfigurationSummary_autoScalingConfigurationRevision :: Lens' AutoScalingConfigurationSummary (Maybe Int)

-- | The Amazon Resource Name (ARN) of this auto scaling configuration.
autoScalingConfigurationSummary_autoScalingConfigurationArn :: Lens' AutoScalingConfigurationSummary (Maybe Text)

-- | The current state of the certificate CNAME record validation. It
--   should change to <tt>SUCCESS</tt> after App Runner completes
--   validation with your DNS.
certificateValidationRecord_status :: Lens' CertificateValidationRecord (Maybe CertificateValidationRecordStatus)

-- | The certificate CNAME record value.
certificateValidationRecord_value :: Lens' CertificateValidationRecord (Maybe Text)

-- | The certificate CNAME record name.
certificateValidationRecord_name :: Lens' CertificateValidationRecord (Maybe Text)

-- | The record type, always <tt>CNAME</tt>.
certificateValidationRecord_type :: Lens' CertificateValidationRecord (Maybe Text)

-- | The basic configuration for building and running the App Runner
--   service. Use it to quickly launch an App Runner service without
--   providing a <tt>apprunner.yaml</tt> file in the source code repository
--   (or ignoring the file if it exists).
codeConfiguration_codeConfigurationValues :: Lens' CodeConfiguration (Maybe CodeConfigurationValues)

-- | The source of the App Runner configuration. Values are interpreted as
--   follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
codeConfiguration_configurationSource :: Lens' CodeConfiguration ConfigurationSource

-- | The command App Runner runs to start your application.
codeConfigurationValues_startCommand :: Lens' CodeConfigurationValues (Maybe Text)

-- | The environment variables that are available to your running App
--   Runner service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
codeConfigurationValues_runtimeEnvironmentVariables :: Lens' CodeConfigurationValues (Maybe (HashMap Text Text))

-- | The command App Runner runs to build your application.
codeConfigurationValues_buildCommand :: Lens' CodeConfigurationValues (Maybe Text)

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
codeConfigurationValues_port :: Lens' CodeConfigurationValues (Maybe Text)

-- | A runtime environment type for building and running an App Runner
--   service. It represents a programming language runtime.
codeConfigurationValues_runtime :: Lens' CodeConfigurationValues Runtime

-- | Configuration for building and running the service from a source code
--   repository.
codeRepository_codeConfiguration :: Lens' CodeRepository (Maybe CodeConfiguration)

-- | The location of the repository that contains the source code.
codeRepository_repositoryUrl :: Lens' CodeRepository Text

-- | The version that should be used within the source code repository.
codeRepository_sourceCodeVersion :: Lens' CodeRepository SourceCodeVersion

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
connection_status :: Lens' Connection (Maybe ConnectionStatus)

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
connection_createdAt :: Lens' Connection (Maybe UTCTime)

-- | The source repository provider.
connection_providerType :: Lens' Connection (Maybe ProviderType)

-- | The customer-provided connection name.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The Amazon Resource Name (ARN) of this connection.
connection_connectionArn :: Lens' Connection (Maybe Text)

-- | The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
connectionSummary_status :: Lens' ConnectionSummary (Maybe ConnectionStatus)

-- | The App Runner connection creation time, expressed as a Unix time
--   stamp.
connectionSummary_createdAt :: Lens' ConnectionSummary (Maybe UTCTime)

-- | The source repository provider.
connectionSummary_providerType :: Lens' ConnectionSummary (Maybe ProviderType)

-- | The customer-provided connection name.
connectionSummary_connectionName :: Lens' ConnectionSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of this connection.
connectionSummary_connectionArn :: Lens' ConnectionSummary (Maybe Text)

-- | A list of certificate CNAME records that's used for this domain name.
customDomain_certificateValidationRecords :: Lens' CustomDomain (Maybe [CertificateValidationRecord])

-- | An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
customDomain_domainName :: Lens' CustomDomain Text

-- | When <tt>true</tt>, the subdomain <tt>www.DomainName </tt> is
--   associated with the App Runner service in addition to the base domain.
customDomain_enableWWWSubdomain :: Lens' CustomDomain Bool

-- | The current state of the domain name association.
customDomain_status :: Lens' CustomDomain CustomDomainAssociationStatus

-- | The ARN of the KMS key that's used for encryption.
encryptionConfiguration_kmsKey :: Lens' EncryptionConfiguration Text

-- | The number of consecutive checks that must succeed before App Runner
--   decides that the service is healthy.
--   
--   Default: <tt>1</tt>
healthCheckConfiguration_healthyThreshold :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The URL that health check requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
healthCheckConfiguration_path :: Lens' HealthCheckConfiguration (Maybe Text)

-- | The IP protocol that App Runner uses to perform health checks for your
--   service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
healthCheckConfiguration_protocol :: Lens' HealthCheckConfiguration (Maybe HealthCheckProtocol)

-- | The time interval, in seconds, between health checks.
--   
--   Default: <tt>5</tt>
healthCheckConfiguration_interval :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The time, in seconds, to wait for a health check response before
--   deciding it failed.
--   
--   Default: <tt>2</tt>
healthCheckConfiguration_timeout :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | The number of consecutive checks that must fail before App Runner
--   decides that the service is unhealthy.
--   
--   Default: <tt>5</tt>
healthCheckConfiguration_unhealthyThreshold :: Lens' HealthCheckConfiguration (Maybe Natural)

-- | An optional command that App Runner runs to start the application in
--   the source image. If specified, this command overrides the Docker
--   image’s default start command.
imageConfiguration_startCommand :: Lens' ImageConfiguration (Maybe Text)

-- | Environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
imageConfiguration_runtimeEnvironmentVariables :: Lens' ImageConfiguration (Maybe (HashMap Text Text))

-- | The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
imageConfiguration_port :: Lens' ImageConfiguration (Maybe Text)

-- | Configuration for running the identified image.
imageRepository_imageConfiguration :: Lens' ImageRepository (Maybe ImageConfiguration)

-- | The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
imageRepository_imageIdentifier :: Lens' ImageRepository Text

-- | The type of the image repository. This reflects the repository
--   provider and whether the repository is private or public.
imageRepository_imageRepositoryType :: Lens' ImageRepository ImageRepositoryType

-- | The amount of memory, in MB or GB, reserved for each instance of your
--   App Runner service.
--   
--   Default: <tt>2 GB</tt>
instanceConfiguration_memory :: Lens' InstanceConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of an IAM role that provides
--   permissions to your App Runner service. These are permissions that
--   your code needs when it calls any Amazon Web Services APIs.
instanceConfiguration_instanceRoleArn :: Lens' InstanceConfiguration (Maybe Text)

-- | The number of CPU units reserved for each instance of your App Runner
--   service.
--   
--   Default: <tt>1 vCPU</tt>
instanceConfiguration_cpu :: Lens' InstanceConfiguration (Maybe Text)

-- | The current state of the operation.
operationSummary_status :: Lens' OperationSummary (Maybe OperationStatus)

-- | The Amazon Resource Name (ARN) of the resource that the operation
--   acted on (for example, an App Runner service).
operationSummary_targetArn :: Lens' OperationSummary (Maybe Text)

-- | The time when the operation ended. It's in the Unix time stamp format.
operationSummary_endedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | The time when the operation started. It's in the Unix time stamp
--   format.
operationSummary_startedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | A unique ID of this operation. It's unique in the scope of the App
--   Runner service.
operationSummary_id :: Lens' OperationSummary (Maybe Text)

-- | The type of operation. It indicates a specific action that occured.
operationSummary_type :: Lens' OperationSummary (Maybe OperationType)

-- | The time when the operation was last updated. It's in the Unix time
--   stamp format.
operationSummary_updatedAt :: Lens' OperationSummary (Maybe UTCTime)

-- | The encryption key that App Runner uses to encrypt the service logs
--   and the copy of the source repository that App Runner maintains for
--   the service. It can be either a customer-provided encryption key or an
--   Amazon Web Services managed CMK.
service_encryptionConfiguration :: Lens' Service (Maybe EncryptionConfiguration)

-- | The settings for the health check that App Runner performs to monitor
--   the health of this service.
service_healthCheckConfiguration :: Lens' Service (Maybe HealthCheckConfiguration)

-- | The time when the App Runner service was deleted. It's in the Unix
--   time stamp format.
service_deletedAt :: Lens' Service (Maybe UTCTime)

-- | The customer-provided service name.
service_serviceName :: Lens' Service Text

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
service_serviceId :: Lens' Service Text

-- | The Amazon Resource Name (ARN) of this service.
service_serviceArn :: Lens' Service Text

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
service_serviceUrl :: Lens' Service Text

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
service_createdAt :: Lens' Service UTCTime

-- | The time when the App Runner service was last updated at. It's in the
--   Unix time stamp format.
service_updatedAt :: Lens' Service UTCTime

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
service_status :: Lens' Service ServiceStatus

-- | The source deployed to the App Runner service. It can be a code or an
--   image repository.
service_sourceConfiguration :: Lens' Service SourceConfiguration

-- | The runtime configuration of instances (scaling units) of this
--   service.
service_instanceConfiguration :: Lens' Service InstanceConfiguration

-- | Summary information for the App Runner automatic scaling configuration
--   resource that's associated with this service.
service_autoScalingConfigurationSummary :: Lens' Service AutoScalingConfigurationSummary

-- | The current state of the App Runner service. These particular values
--   mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
serviceSummary_status :: Lens' ServiceSummary (Maybe ServiceStatus)

-- | The time when the App Runner service was created. It's in the Unix
--   time stamp format.
serviceSummary_createdAt :: Lens' ServiceSummary (Maybe UTCTime)

-- | A subdomain URL that App Runner generated for this service. You can
--   use this URL to access your service web application.
serviceSummary_serviceUrl :: Lens' ServiceSummary (Maybe Text)

-- | The customer-provided service name.
serviceSummary_serviceName :: Lens' ServiceSummary (Maybe Text)

-- | The time when the App Runner service was last updated. It's in theUnix
--   time stamp format.
serviceSummary_updatedAt :: Lens' ServiceSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of this service.
serviceSummary_serviceArn :: Lens' ServiceSummary (Maybe Text)

-- | An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
serviceSummary_serviceId :: Lens' ServiceSummary (Maybe Text)

-- | The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
sourceCodeVersion_type :: Lens' SourceCodeVersion SourceCodeVersionType

-- | A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
sourceCodeVersion_value :: Lens' SourceCodeVersion Text

-- | The description of a source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
sourceConfiguration_imageRepository :: Lens' SourceConfiguration (Maybe ImageRepository)

-- | The description of a source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
sourceConfiguration_codeRepository :: Lens' SourceConfiguration (Maybe CodeRepository)

-- | If <tt>true</tt>, continuous integration from the source repository is
--   enabled for the App Runner service. Each repository change (including
--   any source code commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
sourceConfiguration_autoDeploymentsEnabled :: Lens' SourceConfiguration (Maybe Bool)

-- | Describes the resources that are needed to authenticate access to some
--   source repositories.
sourceConfiguration_authenticationConfiguration :: Lens' SourceConfiguration (Maybe AuthenticationConfiguration)

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag (Maybe Text)


module Amazonka.AppRunner.Waiters


-- | Derived from API version <tt>2020-05-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   App Runner
--   
--   App Runner is an application service that provides a fast, simple, and
--   cost-effective way to go directly from an existing container image or
--   source code to a running service in the Amazon Web Services Cloud in
--   seconds. You don't need to learn new technologies, decide which
--   compute service to use, or understand how to provision and configure
--   Amazon Web Services resources.
--   
--   App Runner connects directly to your container registry or source code
--   repository. It provides an automatic delivery pipeline with fully
--   managed operations, high performance, scalability, and security.
--   
--   For more information about App Runner, see the <a>App Runner Developer
--   Guide</a>. For release information, see the <a>App Runner Release
--   Notes</a>.
--   
--   To install the Software Development Kits (SDKs), Integrated
--   Development Environment (IDE) Toolkits, and command line tools that
--   you can use to access the API, see <a>Tools for Amazon Web
--   Services</a>.
--   
--   <b>Endpoints</b>
--   
--   For a list of Region-specific endpoints that App Runner supports, see
--   <a>App Runner endpoints and quotas</a> in the <i>Amazon Web Services
--   General Reference</i>.
module Amazonka.AppRunner

-- | API version <tt>2020-05-15</tt> of the Amazon App Runner SDK
--   configuration.
defaultService :: Service

-- | One or more input parameters aren't valid. Refer to the API action's
--   document page, correct the input parameters, and try the action again.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | App Runner can't create this resource. You've reached your account
--   quota for this resource type.
--   
--   For App Runner per-resource quotas, see <a>App Runner endpoints and
--   quotas</a> in the <i>Amazon Web Services General Reference</i>.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unexpected service exception occurred.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource doesn't exist for the specified Amazon Resource Name (ARN)
--   in your Amazon Web Services account.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can't perform this action when the resource is in its current
--   state.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListServices</a> smart constructor.
data ListServices
ListServices' :: Maybe Text -> Maybe Natural -> ListServices

-- | Create a value of <a>ListServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServices'</a>, <a>listServices_nextToken</a> - A
--   token from a previous result page. Used for a paginated request. The
--   request retrieves the next result page. All other parameter values
--   must be identical to the ones specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:ListServices'</a>, <a>listServices_maxResults</a> -
--   The maximum number of results to include in each response (result
--   page). It's used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
newListServices :: ListServices

-- | <i>See:</i> <a>newListServicesResponse</a> smart constructor.
data ListServicesResponse
ListServicesResponse' :: Maybe Text -> Int -> [ServiceSummary] -> ListServicesResponse

-- | Create a value of <a>ListServicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServices'</a>,
--   <a>listServicesResponse_nextToken</a> - The token that you can pass in
--   a subsequent request to get the next result page. It's returned in a
--   paginated request.
--   
--   <a>$sel:httpStatus:ListServicesResponse'</a>,
--   <a>listServicesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serviceSummaryList:ListServicesResponse'</a>,
--   <a>listServicesResponse_serviceSummaryList</a> - A list of service
--   summary information records. In a paginated request, the request
--   returns up to <tt>MaxResults</tt> records for each call.
newListServicesResponse :: Int -> ListServicesResponse

-- | <i>See:</i> <a>newResumeService</a> smart constructor.
data ResumeService
ResumeService' :: Text -> ResumeService

-- | Create a value of <a>ResumeService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:ResumeService'</a>, <a>resumeService_serviceArn</a>
--   - The Amazon Resource Name (ARN) of the App Runner service that you
--   want to resume.
newResumeService :: Text -> ResumeService

-- | <i>See:</i> <a>newResumeServiceResponse</a> smart constructor.
data ResumeServiceResponse
ResumeServiceResponse' :: Maybe Text -> Int -> Service -> ResumeServiceResponse

-- | Create a value of <a>ResumeServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:ResumeServiceResponse'</a>,
--   <a>resumeServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
--   
--   <a>$sel:httpStatus:ResumeServiceResponse'</a>,
--   <a>resumeServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:ResumeServiceResponse'</a>,
--   <a>resumeServiceResponse_service</a> - A description of the App Runner
--   service that this request just resumed.
newResumeServiceResponse :: Int -> Service -> ResumeServiceResponse

-- | <i>See:</i> <a>newDeleteService</a> smart constructor.
data DeleteService
DeleteService' :: Text -> DeleteService

-- | Create a value of <a>DeleteService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:DeleteService'</a>, <a>deleteService_serviceArn</a>
--   - The Amazon Resource Name (ARN) of the App Runner service that you
--   want to delete.
newDeleteService :: Text -> DeleteService

-- | <i>See:</i> <a>newDeleteServiceResponse</a> smart constructor.
data DeleteServiceResponse
DeleteServiceResponse' :: Int -> Service -> Text -> DeleteServiceResponse

-- | Create a value of <a>DeleteServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_service</a> - A description of the App Runner
--   service that this request just deleted.
--   
--   <a>$sel:operationId:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
newDeleteServiceResponse :: Int -> Service -> Text -> DeleteServiceResponse

-- | <i>See:</i> <a>newUpdateService</a> smart constructor.
data UpdateService
UpdateService' :: Maybe Text -> Maybe HealthCheckConfiguration -> Maybe SourceConfiguration -> Maybe InstanceConfiguration -> Text -> UpdateService

-- | Create a value of <a>UpdateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingConfigurationArn:UpdateService'</a>,
--   <a>updateService_autoScalingConfigurationArn</a> - The Amazon Resource
--   Name (ARN) of an App Runner automatic scaling configuration resource
--   that you want to associate with your service.
--   
--   <a>$sel:healthCheckConfiguration:UpdateService'</a>,
--   <a>updateService_healthCheckConfiguration</a> - The settings for the
--   health check that App Runner performs to monitor the health of your
--   service.
--   
--   <a>$sel:sourceConfiguration:UpdateService'</a>,
--   <a>updateService_sourceConfiguration</a> - The source configuration to
--   apply to the App Runner service.
--   
--   You can change the configuration of the code or image repository that
--   the service uses. However, you can't switch from code to image or the
--   other way around. This means that you must provide the same structure
--   member of <tt>SourceConfiguration</tt> that you originally included
--   when you created the service. Specifically, you can include either
--   <tt>CodeRepository</tt> or <tt>ImageRepository</tt>. To update the
--   source configuration, set the values to members of the structure that
--   you include.
--   
--   <a>$sel:instanceConfiguration:UpdateService'</a>,
--   <a>updateService_instanceConfiguration</a> - The runtime configuration
--   to apply to instances (scaling units) of the App Runner service.
--   
--   <a>$sel:serviceArn:UpdateService'</a>, <a>updateService_serviceArn</a>
--   - The Amazon Resource Name (ARN) of the App Runner service that you
--   want to update.
newUpdateService :: Text -> UpdateService

-- | <i>See:</i> <a>newUpdateServiceResponse</a> smart constructor.
data UpdateServiceResponse
UpdateServiceResponse' :: Int -> Service -> Text -> UpdateServiceResponse

-- | Create a value of <a>UpdateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_service</a> - A description of the App Runner
--   service updated by this request. All configuration values in the
--   returned <tt>Service</tt> structure reflect configuration changes that
--   are being applied by this request.
--   
--   <a>$sel:operationId:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
newUpdateServiceResponse :: Int -> Service -> Text -> UpdateServiceResponse

-- | <i>See:</i> <a>newListOperations</a> smart constructor.
data ListOperations
ListOperations' :: Maybe Text -> Maybe Natural -> Text -> ListOperations

-- | Create a value of <a>ListOperations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOperations'</a>, <a>listOperations_nextToken</a>
--   - A token from a previous result page. It's used for a paginated
--   request. The request retrieves the next result page. All other
--   parameter values must be identical to the ones specified in the
--   initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:ListOperations'</a>,
--   <a>listOperations_maxResults</a> - The maximum number of results to
--   include in each response (result page). It's used for a paginated
--   request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
--   
--   <a>$sel:serviceArn:ListOperations'</a>,
--   <a>listOperations_serviceArn</a> - The Amazon Resource Name (ARN) of
--   the App Runner service that you want a list of operations for.
newListOperations :: Text -> ListOperations

-- | <i>See:</i> <a>newListOperationsResponse</a> smart constructor.
data ListOperationsResponse
ListOperationsResponse' :: Maybe Text -> Maybe [OperationSummary] -> Int -> ListOperationsResponse

-- | Create a value of <a>ListOperationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOperations'</a>,
--   <a>listOperationsResponse_nextToken</a> - The token that you can pass
--   in a subsequent request to get the next result page. It's returned in
--   a paginated request.
--   
--   <a>$sel:operationSummaryList:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_operationSummaryList</a> - A list of
--   operation summary information records. In a paginated request, the
--   request returns up to <tt>MaxResults</tt> records for each call.
--   
--   <a>$sel:httpStatus:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_httpStatus</a> - The response's http status
--   code.
newListOperationsResponse :: Int -> ListOperationsResponse

-- | <i>See:</i> <a>newAssociateCustomDomain</a> smart constructor.
data AssociateCustomDomain
AssociateCustomDomain' :: Maybe Bool -> Text -> Text -> AssociateCustomDomain

-- | Create a value of <a>AssociateCustomDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enableWWWSubdomain:AssociateCustomDomain'</a>,
--   <a>associateCustomDomain_enableWWWSubdomain</a> - Set to <tt>true</tt>
--   to associate the subdomain <tt>www.DomainName </tt> with the App
--   Runner service in addition to the base domain.
--   
--   Default: <tt>true</tt>
--   
--   <a>$sel:serviceArn:AssociateCustomDomain'</a>,
--   <a>associateCustomDomain_serviceArn</a> - The Amazon Resource Name
--   (ARN) of the App Runner service that you want to associate a custom
--   domain name with.
--   
--   <a>$sel:domainName:AssociateCustomDomain'</a>,
--   <a>associateCustomDomain_domainName</a> - A custom domain endpoint to
--   associate. Specify a root domain (for example, <tt>example.com</tt>),
--   a subdomain (for example, <tt>login.example.com</tt> or
--   <tt>admin.login.example.com</tt>), or a wildcard (for example,
--   <tt>*.example.com</tt>).
newAssociateCustomDomain :: Text -> Text -> AssociateCustomDomain

-- | <i>See:</i> <a>newAssociateCustomDomainResponse</a> smart constructor.
data AssociateCustomDomainResponse
AssociateCustomDomainResponse' :: Int -> Text -> Text -> CustomDomain -> AssociateCustomDomainResponse

-- | Create a value of <a>AssociateCustomDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateCustomDomainResponse'</a>,
--   <a>associateCustomDomainResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:dNSTarget:AssociateCustomDomainResponse'</a>,
--   <a>associateCustomDomainResponse_dNSTarget</a> - The App Runner
--   subdomain of the App Runner service. The custom domain name is mapped
--   to this target name.
--   
--   <a>$sel:serviceArn:AssociateCustomDomain'</a>,
--   <a>associateCustomDomainResponse_serviceArn</a> - The Amazon Resource
--   Name (ARN) of the App Runner service with which a custom domain name
--   is associated.
--   
--   <a>$sel:customDomain:AssociateCustomDomainResponse'</a>,
--   <a>associateCustomDomainResponse_customDomain</a> - A description of
--   the domain name that's being associated.
newAssociateCustomDomainResponse :: Int -> Text -> Text -> CustomDomain -> AssociateCustomDomainResponse

-- | <i>See:</i> <a>newListConnections</a> smart constructor.
data ListConnections
ListConnections' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListConnections

-- | Create a value of <a>ListConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionName:ListConnections'</a>,
--   <a>listConnections_connectionName</a> - If specified, only this
--   connection is returned. If not specified, the result isn't filtered by
--   name.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnections_nextToken</a> - A token from a previous result
--   page. Used for a paginated request. The request retrieves the next
--   result page. All other parameter values must be identical to the ones
--   specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:ListConnections'</a>,
--   <a>listConnections_maxResults</a> - The maximum number of results to
--   include in each response (result page). Used for a paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
newListConnections :: ListConnections

-- | <i>See:</i> <a>newListConnectionsResponse</a> smart constructor.
data ListConnectionsResponse
ListConnectionsResponse' :: Maybe Text -> Int -> [ConnectionSummary] -> ListConnectionsResponse

-- | Create a value of <a>ListConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnectionsResponse_nextToken</a> - The token that you can pass
--   in a subsequent request to get the next result page. Returned in a
--   paginated request.
--   
--   <a>$sel:httpStatus:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:connectionSummaryList:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_connectionSummaryList</a> - A list of
--   summary information records for connections. In a paginated request,
--   the request returns up to <tt>MaxResults</tt> records for each call.
newListConnectionsResponse :: Int -> ListConnectionsResponse

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionArn:DeleteConnection'</a>,
--   <a>deleteConnection_connectionArn</a> - The Amazon Resource Name (ARN)
--   of the App Runner connection that you want to delete.
newDeleteConnection :: Text -> DeleteConnection

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Maybe Connection -> Int -> DeleteConnectionResponse

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connection:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_connection</a> - A description of the App
--   Runner connection that this request just deleted.
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | <i>See:</i> <a>newDescribeAutoScalingConfiguration</a> smart
--   constructor.
data DescribeAutoScalingConfiguration
DescribeAutoScalingConfiguration' :: Text -> DescribeAutoScalingConfiguration

-- | Create a value of <a>DescribeAutoScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationArn:DescribeAutoScalingConfiguration'</a>,
--   <a>describeAutoScalingConfiguration_autoScalingConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want a description for.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is
--   described.
newDescribeAutoScalingConfiguration :: Text -> DescribeAutoScalingConfiguration

-- | <i>See:</i> <a>newDescribeAutoScalingConfigurationResponse</a> smart
--   constructor.
data DescribeAutoScalingConfigurationResponse
DescribeAutoScalingConfigurationResponse' :: Int -> AutoScalingConfiguration -> DescribeAutoScalingConfigurationResponse

-- | Create a value of <a>DescribeAutoScalingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeAutoScalingConfigurationResponse'</a>,
--   <a>describeAutoScalingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfiguration:DescribeAutoScalingConfigurationResponse'</a>,
--   <a>describeAutoScalingConfigurationResponse_autoScalingConfiguration</a>
--   - A full description of the App Runner auto scaling configuration that
--   you specified in this request.
newDescribeAutoScalingConfigurationResponse :: Int -> AutoScalingConfiguration -> DescribeAutoScalingConfigurationResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource that a tag list is requested for.
--   
--   It must be the ARN of an App Runner resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of the tag key-value
--   pairs that are associated with the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe [Tag] -> Text -> ProviderType -> CreateConnection

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - A
--   list of metadata items that you can associate with your connection
--   resource. A tag is a key-value pair.
--   
--   <a>$sel:connectionName:CreateConnection'</a>,
--   <a>createConnection_connectionName</a> - A name for the new
--   connection. It must be unique across all App Runner connections for
--   the Amazon Web Services account in the Amazon Web Services Region.
--   
--   <a>$sel:providerType:CreateConnection'</a>,
--   <a>createConnection_providerType</a> - The source repository provider.
newCreateConnection :: Text -> ProviderType -> CreateConnection

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Int -> Connection -> CreateConnectionResponse

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:connection:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connection</a> - A description of the App
--   Runner connection that's created by this request.
newCreateConnectionResponse :: Int -> Connection -> CreateConnectionResponse

-- | <i>See:</i> <a>newDescribeCustomDomains</a> smart constructor.
data DescribeCustomDomains
DescribeCustomDomains' :: Maybe Text -> Maybe Natural -> Text -> DescribeCustomDomains

-- | Create a value of <a>DescribeCustomDomains</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCustomDomains'</a>,
--   <a>describeCustomDomains_nextToken</a> - A token from a previous
--   result page. It's used for a paginated request. The request retrieves
--   the next result page. All other parameter values must be identical to
--   the ones that are specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:maxResults:DescribeCustomDomains'</a>,
--   <a>describeCustomDomains_maxResults</a> - The maximum number of
--   results that each response (result page) can include. It's used for a
--   paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
--   
--   <a>$sel:serviceArn:DescribeCustomDomains'</a>,
--   <a>describeCustomDomains_serviceArn</a> - The Amazon Resource Name
--   (ARN) of the App Runner service that you want associated custom domain
--   names to be described for.
newDescribeCustomDomains :: Text -> DescribeCustomDomains

-- | <i>See:</i> <a>newDescribeCustomDomainsResponse</a> smart constructor.
data DescribeCustomDomainsResponse
DescribeCustomDomainsResponse' :: Maybe Text -> Int -> Text -> Text -> [CustomDomain] -> DescribeCustomDomainsResponse

-- | Create a value of <a>DescribeCustomDomainsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCustomDomains'</a>,
--   <a>describeCustomDomainsResponse_nextToken</a> - The token that you
--   can pass in a subsequent request to get the next result page. It's
--   returned in a paginated request.
--   
--   <a>$sel:httpStatus:DescribeCustomDomainsResponse'</a>,
--   <a>describeCustomDomainsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:dNSTarget:DescribeCustomDomainsResponse'</a>,
--   <a>describeCustomDomainsResponse_dNSTarget</a> - The App Runner
--   subdomain of the App Runner service. The associated custom domain
--   names are mapped to this target name.
--   
--   <a>$sel:serviceArn:DescribeCustomDomains'</a>,
--   <a>describeCustomDomainsResponse_serviceArn</a> - The Amazon Resource
--   Name (ARN) of the App Runner service whose associated custom domain
--   names you want to describe.
--   
--   <a>$sel:customDomains:DescribeCustomDomainsResponse'</a>,
--   <a>describeCustomDomainsResponse_customDomains</a> - A list of
--   descriptions of custom domain names that are associated with the
--   service. In a paginated request, the request returns up to
--   <tt>MaxResults</tt> records per call.
newDescribeCustomDomainsResponse :: Int -> Text -> Text -> DescribeCustomDomainsResponse

-- | <i>See:</i> <a>newDescribeService</a> smart constructor.
data DescribeService
DescribeService' :: Text -> DescribeService

-- | Create a value of <a>DescribeService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:DescribeService'</a>,
--   <a>describeService_serviceArn</a> - The Amazon Resource Name (ARN) of
--   the App Runner service that you want a description for.
newDescribeService :: Text -> DescribeService

-- | <i>See:</i> <a>newDescribeServiceResponse</a> smart constructor.
data DescribeServiceResponse
DescribeServiceResponse' :: Int -> Service -> DescribeServiceResponse

-- | Create a value of <a>DescribeServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeServiceResponse'</a>,
--   <a>describeServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:DescribeServiceResponse'</a>,
--   <a>describeServiceResponse_service</a> - A full description of the App
--   Runner service that you specified in this request.
newDescribeServiceResponse :: Int -> Service -> DescribeServiceResponse

-- | <i>See:</i> <a>newDeleteAutoScalingConfiguration</a> smart
--   constructor.
data DeleteAutoScalingConfiguration
DeleteAutoScalingConfiguration' :: Text -> DeleteAutoScalingConfiguration

-- | Create a value of <a>DeleteAutoScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationArn:DeleteAutoScalingConfiguration'</a>,
--   <a>deleteAutoScalingConfiguration_autoScalingConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the App Runner auto scaling
--   configuration that you want to delete.
--   
--   The ARN can be a full auto scaling configuration ARN, or a partial ARN
--   ending with either <tt>.../name </tt> or <tt>.../name/revision </tt>.
--   If a revision isn't specified, the latest active revision is deleted.
newDeleteAutoScalingConfiguration :: Text -> DeleteAutoScalingConfiguration

-- | <i>See:</i> <a>newDeleteAutoScalingConfigurationResponse</a> smart
--   constructor.
data DeleteAutoScalingConfigurationResponse
DeleteAutoScalingConfigurationResponse' :: Int -> AutoScalingConfiguration -> DeleteAutoScalingConfigurationResponse

-- | Create a value of <a>DeleteAutoScalingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteAutoScalingConfigurationResponse'</a>,
--   <a>deleteAutoScalingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfiguration:DeleteAutoScalingConfigurationResponse'</a>,
--   <a>deleteAutoScalingConfigurationResponse_autoScalingConfiguration</a>
--   - A description of the App Runner auto scaling configuration that this
--   request just deleted.
newDeleteAutoScalingConfigurationResponse :: Int -> AutoScalingConfiguration -> DeleteAutoScalingConfigurationResponse

-- | <i>See:</i> <a>newListAutoScalingConfigurations</a> smart constructor.
data ListAutoScalingConfigurations
ListAutoScalingConfigurations' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Natural -> ListAutoScalingConfigurations

-- | Create a value of <a>ListAutoScalingConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationName:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_autoScalingConfigurationName</a> -
--   The name of the App Runner auto scaling configuration that you want to
--   list. If specified, App Runner lists revisions that share this name.
--   If not specified, App Runner returns revisions of all configurations.
--   
--   <a>$sel:nextToken:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_nextToken</a> - A token from a
--   previous result page. It's used for a paginated request. The request
--   retrieves the next result page. All other parameter values must be
--   identical to the ones that are specified in the initial request.
--   
--   If you don't specify <tt>NextToken</tt>, the request retrieves the
--   first result page.
--   
--   <a>$sel:latestOnly:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_latestOnly</a> - Set to <tt>true</tt>
--   to list only the latest revision for each requested configuration
--   name.
--   
--   Keep as <tt>false</tt> to list all revisions for each requested
--   configuration name.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:maxResults:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurations_maxResults</a> - The maximum number
--   of results to include in each response (result page). It's used for a
--   paginated request.
--   
--   If you don't specify <tt>MaxResults</tt>, the request retrieves all
--   available results in a single response.
newListAutoScalingConfigurations :: ListAutoScalingConfigurations

-- | <i>See:</i> <a>newListAutoScalingConfigurationsResponse</a> smart
--   constructor.
data ListAutoScalingConfigurationsResponse
ListAutoScalingConfigurationsResponse' :: Maybe Text -> Int -> [AutoScalingConfigurationSummary] -> ListAutoScalingConfigurationsResponse

-- | Create a value of <a>ListAutoScalingConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAutoScalingConfigurations'</a>,
--   <a>listAutoScalingConfigurationsResponse_nextToken</a> - The token
--   that you can pass in a subsequent request to get the next result page.
--   It's returned in a paginated request.
--   
--   <a>$sel:httpStatus:ListAutoScalingConfigurationsResponse'</a>,
--   <a>listAutoScalingConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfigurationSummaryList:ListAutoScalingConfigurationsResponse'</a>,
--   <a>listAutoScalingConfigurationsResponse_autoScalingConfigurationSummaryList</a>
--   - A list of summary information records for auto scaling
--   configurations. In a paginated request, the request returns up to
--   <tt>MaxResults</tt> records for each call.
newListAutoScalingConfigurationsResponse :: Int -> ListAutoScalingConfigurationsResponse

-- | <i>See:</i> <a>newDisassociateCustomDomain</a> smart constructor.
data DisassociateCustomDomain
DisassociateCustomDomain' :: Text -> Text -> DisassociateCustomDomain

-- | Create a value of <a>DisassociateCustomDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:DisassociateCustomDomain'</a>,
--   <a>disassociateCustomDomain_serviceArn</a> - The Amazon Resource Name
--   (ARN) of the App Runner service that you want to disassociate a custom
--   domain name from.
--   
--   <a>$sel:domainName:DisassociateCustomDomain'</a>,
--   <a>disassociateCustomDomain_domainName</a> - The domain name that you
--   want to disassociate from the App Runner service.
newDisassociateCustomDomain :: Text -> Text -> DisassociateCustomDomain

-- | <i>See:</i> <a>newDisassociateCustomDomainResponse</a> smart
--   constructor.
data DisassociateCustomDomainResponse
DisassociateCustomDomainResponse' :: Int -> Text -> Text -> CustomDomain -> DisassociateCustomDomainResponse

-- | Create a value of <a>DisassociateCustomDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateCustomDomainResponse'</a>,
--   <a>disassociateCustomDomainResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:dNSTarget:DisassociateCustomDomainResponse'</a>,
--   <a>disassociateCustomDomainResponse_dNSTarget</a> - The App Runner
--   subdomain of the App Runner service. The disassociated custom domain
--   name was mapped to this target name.
--   
--   <a>$sel:serviceArn:DisassociateCustomDomain'</a>,
--   <a>disassociateCustomDomainResponse_serviceArn</a> - The Amazon
--   Resource Name (ARN) of the App Runner service that a custom domain
--   name is disassociated from.
--   
--   <a>$sel:customDomain:DisassociateCustomDomainResponse'</a>,
--   <a>disassociateCustomDomainResponse_customDomain</a> - A description
--   of the domain name that's being disassociated.
newDisassociateCustomDomainResponse :: Int -> Text -> Text -> CustomDomain -> DisassociateCustomDomainResponse

-- | <i>See:</i> <a>newPauseService</a> smart constructor.
data PauseService
PauseService' :: Text -> PauseService

-- | Create a value of <a>PauseService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:PauseService'</a>, <a>pauseService_serviceArn</a> -
--   The Amazon Resource Name (ARN) of the App Runner service that you want
--   to pause.
newPauseService :: Text -> PauseService

-- | <i>See:</i> <a>newPauseServiceResponse</a> smart constructor.
data PauseServiceResponse
PauseServiceResponse' :: Maybe Text -> Int -> Service -> PauseServiceResponse

-- | Create a value of <a>PauseServiceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:PauseServiceResponse'</a>,
--   <a>pauseServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
--   
--   <a>$sel:httpStatus:PauseServiceResponse'</a>,
--   <a>pauseServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:PauseServiceResponse'</a>,
--   <a>pauseServiceResponse_service</a> - A description of the App Runner
--   service that this request just paused.
newPauseServiceResponse :: Int -> Service -> PauseServiceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to update
--   tags for.
--   
--   It must be the ARN of an App Runner resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of tag
--   key-value pairs to add or update. If a key is new to the resource, the
--   tag is added with the provided value. If a key is already associated
--   with the resource, the value of the tag is updated.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to remove tags from.
--   
--   It must be the ARN of an App Runner resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys that you want to remove.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newCreateAutoScalingConfiguration</a> smart
--   constructor.
data CreateAutoScalingConfiguration
CreateAutoScalingConfiguration' :: Maybe Natural -> Maybe Natural -> Maybe [Tag] -> Maybe Natural -> Text -> CreateAutoScalingConfiguration

-- | Create a value of <a>CreateAutoScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxSize:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_maxSize</a> - The maximum number of
--   instances that your service scales up to. At most <tt>MaxSize</tt>
--   instances actively serve traffic for your service.
--   
--   Default: <tt>25</tt>
--   
--   <a>$sel:minSize:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_minSize</a> - The minimum number of
--   instances that App Runner provisions for your service. The service
--   always has at least <tt>MinSize</tt> provisioned instances. Some of
--   them actively serve traffic. The rest of them (provisioned and
--   inactive instances) are a cost-effective compute capacity reserve and
--   are ready to be quickly activated. You pay for memory usage of all the
--   provisioned instances. You pay for CPU usage of only the active
--   subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   Default: <tt>1</tt>
--   
--   <a>$sel:tags:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_tags</a> - A list of metadata items
--   that you can associate with your auto scaling configuration resource.
--   A tag is a key-value pair.
--   
--   <a>$sel:maxConcurrency:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_maxConcurrency</a> - The maximum
--   number of concurrent requests that you want an instance to process. If
--   the number of concurrent requests exceeds this limit, App Runner
--   scales up your service.
--   
--   Default: <tt>100</tt>
--   
--   
--   <a>$sel:autoScalingConfigurationName:CreateAutoScalingConfiguration'</a>,
--   <a>createAutoScalingConfiguration_autoScalingConfigurationName</a> - A
--   name for the auto scaling configuration. When you use it for the first
--   time in an Amazon Web Services Region, App Runner creates revision
--   number <tt>1</tt> of this name. When you use the same name in
--   subsequent calls, App Runner creates incremental revisions of the
--   configuration.
newCreateAutoScalingConfiguration :: Text -> CreateAutoScalingConfiguration

-- | <i>See:</i> <a>newCreateAutoScalingConfigurationResponse</a> smart
--   constructor.
data CreateAutoScalingConfigurationResponse
CreateAutoScalingConfigurationResponse' :: Int -> AutoScalingConfiguration -> CreateAutoScalingConfigurationResponse

-- | Create a value of <a>CreateAutoScalingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateAutoScalingConfigurationResponse'</a>,
--   <a>createAutoScalingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:autoScalingConfiguration:CreateAutoScalingConfigurationResponse'</a>,
--   <a>createAutoScalingConfigurationResponse_autoScalingConfiguration</a>
--   - A description of the App Runner auto scaling configuration that's
--   created by this request.
newCreateAutoScalingConfigurationResponse :: Int -> AutoScalingConfiguration -> CreateAutoScalingConfigurationResponse

-- | <i>See:</i> <a>newStartDeployment</a> smart constructor.
data StartDeployment
StartDeployment' :: Text -> StartDeployment

-- | Create a value of <a>StartDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceArn:StartDeployment'</a>,
--   <a>startDeployment_serviceArn</a> - The Amazon Resource Name (ARN) of
--   the App Runner service that you want to manually deploy to.
newStartDeployment :: Text -> StartDeployment

-- | <i>See:</i> <a>newStartDeploymentResponse</a> smart constructor.
data StartDeploymentResponse
StartDeploymentResponse' :: Int -> Text -> StartDeploymentResponse

-- | Create a value of <a>StartDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartDeploymentResponse'</a>,
--   <a>startDeploymentResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:operationId:StartDeploymentResponse'</a>,
--   <a>startDeploymentResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the ListOperations call to track the operation's
--   progress.
newStartDeploymentResponse :: Int -> Text -> StartDeploymentResponse

-- | <i>See:</i> <a>newCreateService</a> smart constructor.
data CreateService
CreateService' :: Maybe Text -> Maybe EncryptionConfiguration -> Maybe HealthCheckConfiguration -> Maybe [Tag] -> Maybe InstanceConfiguration -> Text -> SourceConfiguration -> CreateService

-- | Create a value of <a>CreateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingConfigurationArn:CreateService'</a>,
--   <a>createService_autoScalingConfigurationArn</a> - The Amazon Resource
--   Name (ARN) of an App Runner automatic scaling configuration resource
--   that you want to associate with your service. If not provided, App
--   Runner associates the latest revision of a default auto scaling
--   configuration.
--   
--   <a>$sel:encryptionConfiguration:CreateService'</a>,
--   <a>createService_encryptionConfiguration</a> - An optional custom
--   encryption key that App Runner uses to encrypt the copy of your source
--   repository that it maintains and your service logs. By default, App
--   Runner uses an Amazon Web Services managed CMK.
--   
--   <a>$sel:healthCheckConfiguration:CreateService'</a>,
--   <a>createService_healthCheckConfiguration</a> - The settings for the
--   health check that App Runner performs to monitor the health of your
--   service.
--   
--   <a>$sel:tags:CreateService'</a>, <a>createService_tags</a> - An
--   optional list of metadata items that you can associate with your
--   service resource. A tag is a key-value pair.
--   
--   <a>$sel:instanceConfiguration:CreateService'</a>,
--   <a>createService_instanceConfiguration</a> - The runtime configuration
--   of instances (scaling units) of the App Runner service.
--   
--   <a>$sel:serviceName:CreateService'</a>,
--   <a>createService_serviceName</a> - A name for the new service. It must
--   be unique across all the running App Runner services in your Amazon
--   Web Services account in the Amazon Web Services Region.
--   
--   <a>$sel:sourceConfiguration:CreateService'</a>,
--   <a>createService_sourceConfiguration</a> - The source to deploy to the
--   App Runner service. It can be a code or an image repository.
newCreateService :: Text -> SourceConfiguration -> CreateService

-- | <i>See:</i> <a>newCreateServiceResponse</a> smart constructor.
data CreateServiceResponse
CreateServiceResponse' :: Int -> Service -> Text -> CreateServiceResponse

-- | Create a value of <a>CreateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateServiceResponse'</a>,
--   <a>createServiceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:service:CreateServiceResponse'</a>,
--   <a>createServiceResponse_service</a> - A description of the App Runner
--   service that's created by this request.
--   
--   <a>$sel:operationId:CreateServiceResponse'</a>,
--   <a>createServiceResponse_operationId</a> - The unique ID of the
--   asynchronous operation that this request started. You can use it
--   combined with the <a>ListOperations</a> call to track the operation's
--   progress.
newCreateServiceResponse :: Int -> Service -> Text -> CreateServiceResponse
newtype AutoScalingConfigurationStatus
AutoScalingConfigurationStatus' :: Text -> AutoScalingConfigurationStatus
[fromAutoScalingConfigurationStatus] :: AutoScalingConfigurationStatus -> Text
pattern AutoScalingConfigurationStatus_ACTIVE :: AutoScalingConfigurationStatus
pattern AutoScalingConfigurationStatus_INACTIVE :: AutoScalingConfigurationStatus
newtype CertificateValidationRecordStatus
CertificateValidationRecordStatus' :: Text -> CertificateValidationRecordStatus
[fromCertificateValidationRecordStatus] :: CertificateValidationRecordStatus -> Text
pattern CertificateValidationRecordStatus_FAILED :: CertificateValidationRecordStatus
pattern CertificateValidationRecordStatus_PENDING_VALIDATION :: CertificateValidationRecordStatus
pattern CertificateValidationRecordStatus_SUCCESS :: CertificateValidationRecordStatus
newtype ConfigurationSource
ConfigurationSource' :: Text -> ConfigurationSource
[fromConfigurationSource] :: ConfigurationSource -> Text
pattern ConfigurationSource_API :: ConfigurationSource
pattern ConfigurationSource_REPOSITORY :: ConfigurationSource
newtype ConnectionStatus
ConnectionStatus' :: Text -> ConnectionStatus
[fromConnectionStatus] :: ConnectionStatus -> Text
pattern ConnectionStatus_AVAILABLE :: ConnectionStatus
pattern ConnectionStatus_DELETED :: ConnectionStatus
pattern ConnectionStatus_ERROR :: ConnectionStatus
pattern ConnectionStatus_PENDING_HANDSHAKE :: ConnectionStatus
newtype CustomDomainAssociationStatus
CustomDomainAssociationStatus' :: Text -> CustomDomainAssociationStatus
[fromCustomDomainAssociationStatus] :: CustomDomainAssociationStatus -> Text
pattern CustomDomainAssociationStatus_ACTIVE :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_BINDING_CERTIFICATE :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_CREATE_FAILED :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_CREATING :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_DELETE_FAILED :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_DELETING :: CustomDomainAssociationStatus
pattern CustomDomainAssociationStatus_PENDING_CERTIFICATE_DNS_VALIDATION :: CustomDomainAssociationStatus
newtype HealthCheckProtocol
HealthCheckProtocol' :: Text -> HealthCheckProtocol
[fromHealthCheckProtocol] :: HealthCheckProtocol -> Text
pattern HealthCheckProtocol_HTTP :: HealthCheckProtocol
pattern HealthCheckProtocol_TCP :: HealthCheckProtocol
newtype ImageRepositoryType
ImageRepositoryType' :: Text -> ImageRepositoryType
[fromImageRepositoryType] :: ImageRepositoryType -> Text
pattern ImageRepositoryType_ECR :: ImageRepositoryType
pattern ImageRepositoryType_ECR_PUBLIC :: ImageRepositoryType
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_FAILED :: OperationStatus
pattern OperationStatus_IN_PROGRESS :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_ROLLBACK_FAILED :: OperationStatus
pattern OperationStatus_ROLLBACK_IN_PROGRESS :: OperationStatus
pattern OperationStatus_ROLLBACK_SUCCEEDED :: OperationStatus
pattern OperationStatus_SUCCEEDED :: OperationStatus
newtype OperationType
OperationType' :: Text -> OperationType
[fromOperationType] :: OperationType -> Text
pattern OperationType_CREATE_SERVICE :: OperationType
pattern OperationType_DELETE_SERVICE :: OperationType
pattern OperationType_PAUSE_SERVICE :: OperationType
pattern OperationType_RESUME_SERVICE :: OperationType
pattern OperationType_START_DEPLOYMENT :: OperationType
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_GITHUB :: ProviderType
newtype Runtime
Runtime' :: Text -> Runtime
[fromRuntime] :: Runtime -> Text
pattern Runtime_NODEJS_12 :: Runtime
pattern Runtime_PYTHON_3 :: Runtime
newtype ServiceStatus
ServiceStatus' :: Text -> ServiceStatus
[fromServiceStatus] :: ServiceStatus -> Text
pattern ServiceStatus_CREATE_FAILED :: ServiceStatus
pattern ServiceStatus_DELETED :: ServiceStatus
pattern ServiceStatus_DELETE_FAILED :: ServiceStatus
pattern ServiceStatus_OPERATION_IN_PROGRESS :: ServiceStatus
pattern ServiceStatus_PAUSED :: ServiceStatus
pattern ServiceStatus_RUNNING :: ServiceStatus
newtype SourceCodeVersionType
SourceCodeVersionType' :: Text -> SourceCodeVersionType
[fromSourceCodeVersionType] :: SourceCodeVersionType -> Text
pattern SourceCodeVersionType_BRANCH :: SourceCodeVersionType

-- | Describes resources needed to authenticate access to some source
--   repositories. The specific resource depends on the repository
--   provider.
--   
--   <i>See:</i> <a>newAuthenticationConfiguration</a> smart constructor.
data AuthenticationConfiguration
AuthenticationConfiguration' :: Maybe Text -> Maybe Text -> AuthenticationConfiguration

-- | Create a value of <a>AuthenticationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessRoleArn:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_accessRoleArn</a> - The Amazon Resource
--   Name (ARN) of the IAM role that grants the App Runner service access
--   to a source repository. It's required for ECR image repositories (but
--   not for ECR Public repositories).
--   
--   <a>$sel:connectionArn:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_connectionArn</a> - The Amazon Resource
--   Name (ARN) of the App Runner connection that enables the App Runner
--   service to connect to a source repository. It's required for GitHub
--   code repositories.
newAuthenticationConfiguration :: AuthenticationConfiguration

-- | Describes an App Runner automatic scaling configuration resource.
--   Multiple revisions of a configuration have the same
--   <tt>AutoScalingConfigurationName</tt> and different
--   <tt>AutoScalingConfigurationRevision</tt> values.
--   
--   A higher <tt>MinSize</tt> increases the spread of your App Runner
--   service over more Availability Zones in the Amazon Web Services
--   Region. The tradeoff is a higher minimal cost.
--   
--   A lower <tt>MaxSize</tt> controls your cost. The tradeoff is lower
--   responsiveness during peak demand.
--   
--   <i>See:</i> <a>newAutoScalingConfiguration</a> smart constructor.
data AutoScalingConfiguration
AutoScalingConfiguration' :: Maybe AutoScalingConfigurationStatus -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe POSIX -> Maybe Bool -> Maybe Int -> AutoScalingConfiguration

-- | Create a value of <a>AutoScalingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_status</a> - The current state of the auto
--   scaling configuration. If the status of a configuration revision is
--   <tt>INACTIVE</tt>, it was deleted and can't be used. Inactive
--   configuration revisions are permanently removed some time after they
--   are deleted.
--   
--   <a>$sel:autoScalingConfigurationName:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationName</a> - The
--   customer-provided auto scaling configuration name. It can be used in
--   multiple revisions of a configuration.
--   
--   <a>$sel:createdAt:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_createdAt</a> - The time when the auto
--   scaling configuration was created. It's in Unix time stamp format.
--   
--   <a>$sel:maxSize:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_maxSize</a> - The maximum number of
--   instances that a service scales up to. At most <tt>MaxSize</tt>
--   instances actively serve traffic for your service.
--   
--   
--   <a>$sel:autoScalingConfigurationRevision:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationRevision</a> - The
--   revision of this auto scaling configuration. It's unique among all the
--   active configurations (<tt>"Status": "ACTIVE"</tt>) that share the
--   same <tt>AutoScalingConfigurationName</tt>.
--   
--   <a>$sel:autoScalingConfigurationArn:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_autoScalingConfigurationArn</a> - The
--   Amazon Resource Name (ARN) of this auto scaling configuration.
--   
--   <a>$sel:minSize:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_minSize</a> - The minimum number of
--   instances that App Runner provisions for a service. The service always
--   has at least <tt>MinSize</tt> provisioned instances. Some of them
--   actively serve traffic. The rest of them (provisioned and inactive
--   instances) are a cost-effective compute capacity reserve and are ready
--   to be quickly activated. You pay for memory usage of all the
--   provisioned instances. You pay for CPU usage of only the active
--   subset.
--   
--   App Runner temporarily doubles the number of provisioned instances
--   during deployments, to maintain the same capacity for both old and new
--   code.
--   
--   <a>$sel:deletedAt:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_deletedAt</a> - The time when the auto
--   scaling configuration was deleted. It's in Unix time stamp format.
--   
--   <a>$sel:latest:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_latest</a> - It's set to <tt>true</tt> for
--   the configuration with the highest <tt>Revision</tt> among all
--   configurations that share the same <tt>Name</tt>. It's set to
--   <tt>false</tt> otherwise.
--   
--   <a>$sel:maxConcurrency:AutoScalingConfiguration'</a>,
--   <a>autoScalingConfiguration_maxConcurrency</a> - The maximum number of
--   concurrent requests that an instance processes. If the number of
--   concurrent requests exceeds this limit, App Runner scales the service
--   up.
newAutoScalingConfiguration :: AutoScalingConfiguration

-- | Provides summary information about an App Runner automatic scaling
--   configuration resource.
--   
--   This type contains limited information about an auto scaling
--   configuration. It includes only identification information, without
--   configuration details. It's returned by the
--   ListAutoScalingConfigurations action. Complete configuration
--   information is returned by the CreateAutoScalingConfiguration,
--   DescribeAutoScalingConfiguration, and DeleteAutoScalingConfiguration
--   actions using the AutoScalingConfiguration type.
--   
--   <i>See:</i> <a>newAutoScalingConfigurationSummary</a> smart
--   constructor.
data AutoScalingConfigurationSummary
AutoScalingConfigurationSummary' :: Maybe Text -> Maybe Int -> Maybe Text -> AutoScalingConfigurationSummary

-- | Create a value of <a>AutoScalingConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingConfigurationName:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationName</a> -
--   The customer-provided auto scaling configuration name. It can be used
--   in multiple revisions of a configuration.
--   
--   
--   <a>$sel:autoScalingConfigurationRevision:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationRevision</a>
--   - The revision of this auto scaling configuration. It's unique among
--   all the active configurations (<tt>"Status": "ACTIVE"</tt>) with the
--   same <tt>AutoScalingConfigurationName</tt>.
--   
--   
--   <a>$sel:autoScalingConfigurationArn:AutoScalingConfigurationSummary'</a>,
--   <a>autoScalingConfigurationSummary_autoScalingConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of this auto scaling configuration.
newAutoScalingConfigurationSummary :: AutoScalingConfigurationSummary

-- | Describes a certificate CNAME record to add to your DNS. For more
--   information, see <a>AssociateCustomDomain</a>.
--   
--   <i>See:</i> <a>newCertificateValidationRecord</a> smart constructor.
data CertificateValidationRecord
CertificateValidationRecord' :: Maybe CertificateValidationRecordStatus -> Maybe Text -> Maybe Text -> Maybe Text -> CertificateValidationRecord

-- | Create a value of <a>CertificateValidationRecord</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_status</a> - The current state of the
--   certificate CNAME record validation. It should change to
--   <tt>SUCCESS</tt> after App Runner completes validation with your DNS.
--   
--   <a>$sel:value:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_value</a> - The certificate CNAME
--   record value.
--   
--   <a>$sel:name:CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_name</a> - The certificate CNAME record
--   name.
--   
--   <a>$sel:type':CertificateValidationRecord'</a>,
--   <a>certificateValidationRecord_type</a> - The record type, always
--   <tt>CNAME</tt>.
newCertificateValidationRecord :: CertificateValidationRecord

-- | Describes the configuration that App Runner uses to build and run an
--   App Runner service from a source code repository.
--   
--   <i>See:</i> <a>newCodeConfiguration</a> smart constructor.
data CodeConfiguration
CodeConfiguration' :: Maybe CodeConfigurationValues -> ConfigurationSource -> CodeConfiguration

-- | Create a value of <a>CodeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeConfigurationValues:CodeConfiguration'</a>,
--   <a>codeConfiguration_codeConfigurationValues</a> - The basic
--   configuration for building and running the App Runner service. Use it
--   to quickly launch an App Runner service without providing a
--   <tt>apprunner.yaml</tt> file in the source code repository (or
--   ignoring the file if it exists).
--   
--   <a>$sel:configurationSource:CodeConfiguration'</a>,
--   <a>codeConfiguration_configurationSource</a> - The source of the App
--   Runner configuration. Values are interpreted as follows:
--   
--   <ul>
--   <li><tt>REPOSITORY</tt> – App Runner reads configuration values from
--   the <tt>apprunner.yaml</tt> file in the source code repository and
--   ignores <tt>CodeConfigurationValues</tt>.</li>
--   <li><tt>API</tt> – App Runner uses configuration values provided in
--   <tt>CodeConfigurationValues</tt> and ignores the
--   <tt>apprunner.yaml</tt> file in the source code repository.</li>
--   </ul>
newCodeConfiguration :: ConfigurationSource -> CodeConfiguration

-- | Describes the basic configuration needed for building and running an
--   App Runner service. This type doesn't support the full set of possible
--   configuration options. Fur full configuration capabilities, use a
--   <tt>apprunner.yaml</tt> file in the source code repository.
--   
--   <i>See:</i> <a>newCodeConfigurationValues</a> smart constructor.
data CodeConfigurationValues
CodeConfigurationValues' :: Maybe (Sensitive Text) -> Maybe (HashMap Text (Sensitive Text)) -> Maybe (Sensitive Text) -> Maybe Text -> Runtime -> CodeConfigurationValues

-- | Create a value of <a>CodeConfigurationValues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startCommand:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_startCommand</a> - The command App Runner
--   runs to start your application.
--   
--   <a>$sel:runtimeEnvironmentVariables:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_runtimeEnvironmentVariables</a> - The
--   environment variables that are available to your running App Runner
--   service. An array of key-value pairs. Keys with a prefix of
--   <tt>AWSAPPRUNNER</tt> are reserved for system use and aren't valid.
--   
--   <a>$sel:buildCommand:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_buildCommand</a> - The command App Runner
--   runs to build your application.
--   
--   <a>$sel:port:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_port</a> - The port that your application
--   listens to in the container.
--   
--   Default: <tt>8080</tt>
--   
--   <a>$sel:runtime:CodeConfigurationValues'</a>,
--   <a>codeConfigurationValues_runtime</a> - A runtime environment type
--   for building and running an App Runner service. It represents a
--   programming language runtime.
newCodeConfigurationValues :: Runtime -> CodeConfigurationValues

-- | Describes a source code repository.
--   
--   <i>See:</i> <a>newCodeRepository</a> smart constructor.
data CodeRepository
CodeRepository' :: Maybe CodeConfiguration -> Text -> SourceCodeVersion -> CodeRepository

-- | Create a value of <a>CodeRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeConfiguration:CodeRepository'</a>,
--   <a>codeRepository_codeConfiguration</a> - Configuration for building
--   and running the service from a source code repository.
--   
--   <a>$sel:repositoryUrl:CodeRepository'</a>,
--   <a>codeRepository_repositoryUrl</a> - The location of the repository
--   that contains the source code.
--   
--   <a>$sel:sourceCodeVersion:CodeRepository'</a>,
--   <a>codeRepository_sourceCodeVersion</a> - The version that should be
--   used within the source code repository.
newCodeRepository :: Text -> SourceCodeVersion -> CodeRepository

-- | Describes an App Runner connection resource.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe ConnectionStatus -> Maybe POSIX -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Connection'</a>, <a>connection_status</a> - The current
--   state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
--   
--   <a>$sel:createdAt:Connection'</a>, <a>connection_createdAt</a> - The
--   App Runner connection creation time, expressed as a Unix time stamp.
--   
--   <a>$sel:providerType:Connection'</a>, <a>connection_providerType</a> -
--   The source repository provider.
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The customer-provided connection
--   name.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The Amazon Resource Name (ARN) of this connection.
newConnection :: Connection

-- | Provides summary information about an App Runner connection resource.
--   
--   <i>See:</i> <a>newConnectionSummary</a> smart constructor.
data ConnectionSummary
ConnectionSummary' :: Maybe ConnectionStatus -> Maybe POSIX -> Maybe ProviderType -> Maybe Text -> Maybe Text -> ConnectionSummary

-- | Create a value of <a>ConnectionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ConnectionSummary'</a>, <a>connectionSummary_status</a>
--   - The current state of the App Runner connection. When the state is
--   <tt>AVAILABLE</tt>, you can use the connection to create an App Runner
--   service.
--   
--   <a>$sel:createdAt:ConnectionSummary'</a>,
--   <a>connectionSummary_createdAt</a> - The App Runner connection
--   creation time, expressed as a Unix time stamp.
--   
--   <a>$sel:providerType:ConnectionSummary'</a>,
--   <a>connectionSummary_providerType</a> - The source repository
--   provider.
--   
--   <a>$sel:connectionName:ConnectionSummary'</a>,
--   <a>connectionSummary_connectionName</a> - The customer-provided
--   connection name.
--   
--   <a>$sel:connectionArn:ConnectionSummary'</a>,
--   <a>connectionSummary_connectionArn</a> - The Amazon Resource Name
--   (ARN) of this connection.
newConnectionSummary :: ConnectionSummary

-- | Describes a custom domain that's associated with an App Runner
--   service.
--   
--   <i>See:</i> <a>newCustomDomain</a> smart constructor.
data CustomDomain
CustomDomain' :: Maybe [CertificateValidationRecord] -> Text -> Bool -> CustomDomainAssociationStatus -> CustomDomain

-- | Create a value of <a>CustomDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateValidationRecords:CustomDomain'</a>,
--   <a>customDomain_certificateValidationRecords</a> - A list of
--   certificate CNAME records that's used for this domain name.
--   
--   <a>$sel:domainName:CustomDomain'</a>, <a>customDomain_domainName</a> -
--   An associated custom domain endpoint. It can be a root domain (for
--   example, <tt>example.com</tt>), a subdomain (for example,
--   <tt>login.example.com</tt> or <tt>admin.login.example.com</tt>), or a
--   wildcard (for example, <tt>*.example.com</tt>).
--   
--   <a>$sel:enableWWWSubdomain:CustomDomain'</a>,
--   <a>customDomain_enableWWWSubdomain</a> - When <tt>true</tt>, the
--   subdomain <tt>www.DomainName </tt> is associated with the App Runner
--   service in addition to the base domain.
--   
--   <a>$sel:status:CustomDomain'</a>, <a>customDomain_status</a> - The
--   current state of the domain name association.
newCustomDomain :: Text -> Bool -> CustomDomainAssociationStatus -> CustomDomain

-- | Describes a custom encryption key that App Runner uses to encrypt
--   copies of the source repository and service logs.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Text -> EncryptionConfiguration

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKey:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_kmsKey</a> - The ARN of the KMS key that's
--   used for encryption.
newEncryptionConfiguration :: Text -> EncryptionConfiguration

-- | Describes the settings for the health check that App Runner performs
--   to monitor the health of a service.
--   
--   <i>See:</i> <a>newHealthCheckConfiguration</a> smart constructor.
data HealthCheckConfiguration
HealthCheckConfiguration' :: Maybe Natural -> Maybe Text -> Maybe HealthCheckProtocol -> Maybe Natural -> Maybe Natural -> Maybe Natural -> HealthCheckConfiguration

-- | Create a value of <a>HealthCheckConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthyThreshold:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_healthyThreshold</a> - The number of
--   consecutive checks that must succeed before App Runner decides that
--   the service is healthy.
--   
--   Default: <tt>1</tt>
--   
--   <a>$sel:path:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_path</a> - The URL that health check
--   requests are sent to.
--   
--   <tt>Path</tt> is only applicable when you set <tt>Protocol</tt> to
--   <tt>HTTP</tt>.
--   
--   Default: <tt>"/"</tt>
--   
--   <a>$sel:protocol:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_protocol</a> - The IP protocol that App
--   Runner uses to perform health checks for your service.
--   
--   If you set <tt>Protocol</tt> to <tt>HTTP</tt>, App Runner sends health
--   check requests to the HTTP path specified by <tt>Path</tt>.
--   
--   Default: <tt>TCP</tt>
--   
--   <a>$sel:interval:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_interval</a> - The time interval, in
--   seconds, between health checks.
--   
--   Default: <tt>5</tt>
--   
--   <a>$sel:timeout:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_timeout</a> - The time, in seconds, to
--   wait for a health check response before deciding it failed.
--   
--   Default: <tt>2</tt>
--   
--   <a>$sel:unhealthyThreshold:HealthCheckConfiguration'</a>,
--   <a>healthCheckConfiguration_unhealthyThreshold</a> - The number of
--   consecutive checks that must fail before App Runner decides that the
--   service is unhealthy.
--   
--   Default: <tt>5</tt>
newHealthCheckConfiguration :: HealthCheckConfiguration

-- | Describes the configuration that App Runner uses to run an App Runner
--   service using an image pulled from a source image repository.
--   
--   <i>See:</i> <a>newImageConfiguration</a> smart constructor.
data ImageConfiguration
ImageConfiguration' :: Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> ImageConfiguration

-- | Create a value of <a>ImageConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startCommand:ImageConfiguration'</a>,
--   <a>imageConfiguration_startCommand</a> - An optional command that App
--   Runner runs to start the application in the source image. If
--   specified, this command overrides the Docker image’s default start
--   command.
--   
--   <a>$sel:runtimeEnvironmentVariables:ImageConfiguration'</a>,
--   <a>imageConfiguration_runtimeEnvironmentVariables</a> - Environment
--   variables that are available to your running App Runner service. An
--   array of key-value pairs. Keys with a prefix of <tt>AWSAPPRUNNER</tt>
--   are reserved for system use and aren't valid.
--   
--   <a>$sel:port:ImageConfiguration'</a>, <a>imageConfiguration_port</a> -
--   The port that your application listens to in the container.
--   
--   Default: <tt>8080</tt>
newImageConfiguration :: ImageConfiguration

-- | Describes a source image repository.
--   
--   <i>See:</i> <a>newImageRepository</a> smart constructor.
data ImageRepository
ImageRepository' :: Maybe ImageConfiguration -> Text -> ImageRepositoryType -> ImageRepository

-- | Create a value of <a>ImageRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageConfiguration:ImageRepository'</a>,
--   <a>imageRepository_imageConfiguration</a> - Configuration for running
--   the identified image.
--   
--   <a>$sel:imageIdentifier:ImageRepository'</a>,
--   <a>imageRepository_imageIdentifier</a> - The identifier of an image.
--   
--   For an image in Amazon Elastic Container Registry (Amazon ECR), this
--   is an image name. For the image name format, see <a>Pulling an
--   image</a> in the <i>Amazon ECR User Guide</i>.
--   
--   <a>$sel:imageRepositoryType:ImageRepository'</a>,
--   <a>imageRepository_imageRepositoryType</a> - The type of the image
--   repository. This reflects the repository provider and whether the
--   repository is private or public.
newImageRepository :: Text -> ImageRepositoryType -> ImageRepository

-- | Describes the runtime configuration of an App Runner service instance
--   (scaling unit).
--   
--   <i>See:</i> <a>newInstanceConfiguration</a> smart constructor.
data InstanceConfiguration
InstanceConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> InstanceConfiguration

-- | Create a value of <a>InstanceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memory:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_memory</a> - The amount of memory, in MB or
--   GB, reserved for each instance of your App Runner service.
--   
--   Default: <tt>2 GB</tt>
--   
--   <a>$sel:instanceRoleArn:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_instanceRoleArn</a> - The Amazon Resource
--   Name (ARN) of an IAM role that provides permissions to your App Runner
--   service. These are permissions that your code needs when it calls any
--   Amazon Web Services APIs.
--   
--   <a>$sel:cpu:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_cpu</a> - The number of CPU units reserved
--   for each instance of your App Runner service.
--   
--   Default: <tt>1 vCPU</tt>
newInstanceConfiguration :: InstanceConfiguration

-- | Provides summary information for an operation that occurred on an App
--   Runner service.
--   
--   <i>See:</i> <a>newOperationSummary</a> smart constructor.
data OperationSummary
OperationSummary' :: Maybe OperationStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe OperationType -> Maybe POSIX -> OperationSummary

-- | Create a value of <a>OperationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OperationSummary'</a>, <a>operationSummary_status</a> -
--   The current state of the operation.
--   
--   <a>$sel:targetArn:OperationSummary'</a>,
--   <a>operationSummary_targetArn</a> - The Amazon Resource Name (ARN) of
--   the resource that the operation acted on (for example, an App Runner
--   service).
--   
--   <a>$sel:endedAt:OperationSummary'</a>, <a>operationSummary_endedAt</a>
--   - The time when the operation ended. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:startedAt:OperationSummary'</a>,
--   <a>operationSummary_startedAt</a> - The time when the operation
--   started. It's in the Unix time stamp format.
--   
--   <a>$sel:id:OperationSummary'</a>, <a>operationSummary_id</a> - A
--   unique ID of this operation. It's unique in the scope of the App
--   Runner service.
--   
--   <a>$sel:type':OperationSummary'</a>, <a>operationSummary_type</a> -
--   The type of operation. It indicates a specific action that occured.
--   
--   <a>$sel:updatedAt:OperationSummary'</a>,
--   <a>operationSummary_updatedAt</a> - The time when the operation was
--   last updated. It's in the Unix time stamp format.
newOperationSummary :: OperationSummary

-- | Describes an App Runner service. It can describe a service in any
--   state, including deleted services.
--   
--   This type contains the full information about a service, including
--   configuration details. It's returned by the <a>CreateService</a>,
--   <a>DescribeService</a>, and <a>DeleteService</a> actions. A subset of
--   this information is returned by the <a>ListServices</a> action using
--   the <a>ServiceSummary</a> type.
--   
--   <i>See:</i> <a>newService</a> smart constructor.
data Service
Service' :: Maybe EncryptionConfiguration -> Maybe HealthCheckConfiguration -> Maybe POSIX -> Text -> Text -> Text -> Text -> POSIX -> POSIX -> ServiceStatus -> SourceConfiguration -> InstanceConfiguration -> AutoScalingConfigurationSummary -> Service

-- | Create a value of <a>Service</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionConfiguration:Service'</a>,
--   <a>service_encryptionConfiguration</a> - The encryption key that App
--   Runner uses to encrypt the service logs and the copy of the source
--   repository that App Runner maintains for the service. It can be either
--   a customer-provided encryption key or an Amazon Web Services managed
--   CMK.
--   
--   <a>$sel:healthCheckConfiguration:Service'</a>,
--   <a>service_healthCheckConfiguration</a> - The settings for the health
--   check that App Runner performs to monitor the health of this service.
--   
--   <a>$sel:deletedAt:Service'</a>, <a>service_deletedAt</a> - The time
--   when the App Runner service was deleted. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:serviceName:Service'</a>, <a>service_serviceName</a> - The
--   customer-provided service name.
--   
--   <a>$sel:serviceId:Service'</a>, <a>service_serviceId</a> - An ID that
--   App Runner generated for this service. It's unique within the Amazon
--   Web Services Region.
--   
--   <a>$sel:serviceArn:Service'</a>, <a>service_serviceArn</a> - The
--   Amazon Resource Name (ARN) of this service.
--   
--   <a>$sel:serviceUrl:Service'</a>, <a>service_serviceUrl</a> - A
--   subdomain URL that App Runner generated for this service. You can use
--   this URL to access your service web application.
--   
--   <a>$sel:createdAt:Service'</a>, <a>service_createdAt</a> - The time
--   when the App Runner service was created. It's in the Unix time stamp
--   format.
--   
--   <a>$sel:updatedAt:Service'</a>, <a>service_updatedAt</a> - The time
--   when the App Runner service was last updated at. It's in the Unix time
--   stamp format.
--   
--   <a>$sel:status:Service'</a>, <a>service_status</a> - The current state
--   of the App Runner service. These particular values mean the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. To
--   troubleshoot this failure, read the failure events and logs, change
--   any parameters that need to be fixed, and retry the call to create the
--   service.The failed service isn't usable, and still counts towards your
--   service quota. When you're done analyzing the failure, delete the
--   service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
--   
--   <a>$sel:sourceConfiguration:Service'</a>,
--   <a>service_sourceConfiguration</a> - The source deployed to the App
--   Runner service. It can be a code or an image repository.
--   
--   <a>$sel:instanceConfiguration:Service'</a>,
--   <a>service_instanceConfiguration</a> - The runtime configuration of
--   instances (scaling units) of this service.
--   
--   <a>$sel:autoScalingConfigurationSummary:Service'</a>,
--   <a>service_autoScalingConfigurationSummary</a> - Summary information
--   for the App Runner automatic scaling configuration resource that's
--   associated with this service.
newService :: Text -> Text -> Text -> Text -> UTCTime -> UTCTime -> ServiceStatus -> SourceConfiguration -> InstanceConfiguration -> AutoScalingConfigurationSummary -> Service

-- | Provides summary information for an App Runner service.
--   
--   This type contains limited information about a service. It doesn't
--   include configuration details. It's returned by the
--   <a>ListServices</a> action. Complete service information is returned
--   by the <a>CreateService</a>, <a>DescribeService</a>, and
--   <a>DeleteService</a> actions using the <a>Service</a> type.
--   
--   <i>See:</i> <a>newServiceSummary</a> smart constructor.
data ServiceSummary
ServiceSummary' :: Maybe ServiceStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ServiceSummary

-- | Create a value of <a>ServiceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ServiceSummary'</a>, <a>serviceSummary_status</a> - The
--   current state of the App Runner service. These particular values mean
--   the following.
--   
--   <ul>
--   <li><tt>CREATE_FAILED</tt> – The service failed to create. Read the
--   failure events and logs, change any parameters that need to be fixed,
--   and retry the call to create the service.The failed service isn't
--   usable, and still counts towards your service quota. When you're done
--   analyzing the failure, delete the service.</li>
--   <li><tt>DELETE_FAILED</tt> – The service failed to delete and can't be
--   successfully recovered. Retry the service deletion call to ensure that
--   all related resources are removed.</li>
--   </ul>
--   
--   <a>$sel:createdAt:ServiceSummary'</a>, <a>serviceSummary_createdAt</a>
--   - The time when the App Runner service was created. It's in the Unix
--   time stamp format.
--   
--   <a>$sel:serviceUrl:ServiceSummary'</a>,
--   <a>serviceSummary_serviceUrl</a> - A subdomain URL that App Runner
--   generated for this service. You can use this URL to access your
--   service web application.
--   
--   <a>$sel:serviceName:ServiceSummary'</a>,
--   <a>serviceSummary_serviceName</a> - The customer-provided service
--   name.
--   
--   <a>$sel:updatedAt:ServiceSummary'</a>, <a>serviceSummary_updatedAt</a>
--   - The time when the App Runner service was last updated. It's in
--   theUnix time stamp format.
--   
--   <a>$sel:serviceArn:ServiceSummary'</a>,
--   <a>serviceSummary_serviceArn</a> - The Amazon Resource Name (ARN) of
--   this service.
--   
--   <a>$sel:serviceId:ServiceSummary'</a>, <a>serviceSummary_serviceId</a>
--   - An ID that App Runner generated for this service. It's unique within
--   the Amazon Web Services Region.
newServiceSummary :: ServiceSummary

-- | Identifies a version of code that App Runner refers to within a source
--   code repository.
--   
--   <i>See:</i> <a>newSourceCodeVersion</a> smart constructor.
data SourceCodeVersion
SourceCodeVersion' :: SourceCodeVersionType -> Text -> SourceCodeVersion

-- | Create a value of <a>SourceCodeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':SourceCodeVersion'</a>, <a>sourceCodeVersion_type</a> -
--   The type of version identifier.
--   
--   For a git-based repository, branches represent versions.
--   
--   <a>$sel:value:SourceCodeVersion'</a>, <a>sourceCodeVersion_value</a> -
--   A source code version.
--   
--   For a git-based repository, a branch name maps to a specific version.
--   App Runner uses the most recent commit to the branch.
newSourceCodeVersion :: SourceCodeVersionType -> Text -> SourceCodeVersion

-- | Describes the source deployed to an App Runner service. It can be a
--   code or an image repository.
--   
--   <i>See:</i> <a>newSourceConfiguration</a> smart constructor.
data SourceConfiguration
SourceConfiguration' :: Maybe ImageRepository -> Maybe CodeRepository -> Maybe Bool -> Maybe AuthenticationConfiguration -> SourceConfiguration

-- | Create a value of <a>SourceConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRepository:SourceConfiguration'</a>,
--   <a>sourceConfiguration_imageRepository</a> - The description of a
--   source image repository.
--   
--   You must provide either this member or <tt>CodeRepository</tt> (but
--   not both).
--   
--   <a>$sel:codeRepository:SourceConfiguration'</a>,
--   <a>sourceConfiguration_codeRepository</a> - The description of a
--   source code repository.
--   
--   You must provide either this member or <tt>ImageRepository</tt> (but
--   not both).
--   
--   <a>$sel:autoDeploymentsEnabled:SourceConfiguration'</a>,
--   <a>sourceConfiguration_autoDeploymentsEnabled</a> - If <tt>true</tt>,
--   continuous integration from the source repository is enabled for the
--   App Runner service. Each repository change (including any source code
--   commit or new image version) starts a deployment.
--   
--   Default: App Runner sets to <tt>false</tt> for a source image that
--   uses an ECR Public repository or an ECR repository that's in an Amazon
--   Web Services account other than the one that the service is in. App
--   Runner sets to <tt>true</tt> in all other cases (which currently
--   include a source code repository or a source image using a
--   same-account ECR repository).
--   
--   <a>$sel:authenticationConfiguration:SourceConfiguration'</a>,
--   <a>sourceConfiguration_authenticationConfiguration</a> - Describes the
--   resources that are needed to authenticate access to some source
--   repositories.
newSourceConfiguration :: SourceConfiguration

-- | Describes a tag that is applied to an App Runner resource. A tag is a
--   metadata item consisting of a key-value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Tag
