-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-iotdeviceadvisorZSamazonka-iotdeviceadvisor
@version 2.0


module Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest

-- | Lists all the devices under test
--   
--   <i>See:</i> <a>newDeviceUnderTest</a> smart constructor.
data DeviceUnderTest
DeviceUnderTest' :: Maybe Text -> Maybe Text -> DeviceUnderTest

-- | Lists devices certificate arn
[$sel:certificateArn:DeviceUnderTest'] :: DeviceUnderTest -> Maybe Text

-- | Lists devices thing arn
[$sel:thingArn:DeviceUnderTest'] :: DeviceUnderTest -> Maybe Text

-- | Create a value of <a>DeviceUnderTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:DeviceUnderTest'</a>,
--   <a>deviceUnderTest_certificateArn</a> - Lists devices certificate arn
--   
--   <a>$sel:thingArn:DeviceUnderTest'</a>, <a>deviceUnderTest_thingArn</a>
--   - Lists devices thing arn
newDeviceUnderTest :: DeviceUnderTest

-- | Lists devices certificate arn
deviceUnderTest_certificateArn :: Lens' DeviceUnderTest (Maybe Text)

-- | Lists devices thing arn
deviceUnderTest_thingArn :: Lens' DeviceUnderTest (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.Types.DeviceUnderTest.DeviceUnderTest


module Amazonka.IoTDeviceAdvisor.Types.Status
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_CANCELED :: Status
pattern Status_ERROR :: Status
pattern Status_FAIL :: Status
pattern Status_PASS :: Status
pattern Status_PASS_WITH_WARNINGS :: Status
pattern Status_PENDING :: Status
pattern Status_RUNNING :: Status
pattern Status_STOPPED :: Status
pattern Status_STOPPING :: Status
instance Amazonka.Data.XML.ToXML Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Amazonka.Data.XML.FromXML Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Amazonka.Data.Log.ToLog Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Amazonka.Data.Text.ToText Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Amazonka.Data.Text.FromText Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance GHC.Classes.Ord Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.Status.Status
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.Status.Status


module Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration

-- | Gets Suite Definition Configuration.
--   
--   <i>See:</i> <a>newSuiteDefinitionConfiguration</a> smart constructor.
data SuiteDefinitionConfiguration
SuiteDefinitionConfiguration' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [DeviceUnderTest] -> Maybe Text -> SuiteDefinitionConfiguration

-- | Gets Suite Definition Configuration name.
[$sel:suiteDefinitionName:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Text

-- | Gets the tests intended for qualification in a suite.
[$sel:intendedForQualification:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Bool

-- | Gets device permission arn.
[$sel:devicePermissionRoleArn:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Text

-- | Gets the devices configured.
[$sel:devices:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe [DeviceUnderTest]

-- | Gets test suite root group.
[$sel:rootGroup:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Text

-- | Create a value of <a>SuiteDefinitionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionName:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_suiteDefinitionName</a> - Gets Suite
--   Definition Configuration name.
--   
--   <a>$sel:intendedForQualification:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_intendedForQualification</a> - Gets
--   the tests intended for qualification in a suite.
--   
--   <a>$sel:devicePermissionRoleArn:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_devicePermissionRoleArn</a> - Gets
--   device permission arn.
--   
--   <a>$sel:devices:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_devices</a> - Gets the devices
--   configured.
--   
--   <a>$sel:rootGroup:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_rootGroup</a> - Gets test suite root
--   group.
newSuiteDefinitionConfiguration :: SuiteDefinitionConfiguration

-- | Gets Suite Definition Configuration name.
suiteDefinitionConfiguration_suiteDefinitionName :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Gets the tests intended for qualification in a suite.
suiteDefinitionConfiguration_intendedForQualification :: Lens' SuiteDefinitionConfiguration (Maybe Bool)

-- | Gets device permission arn.
suiteDefinitionConfiguration_devicePermissionRoleArn :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Gets the devices configured.
suiteDefinitionConfiguration_devices :: Lens' SuiteDefinitionConfiguration (Maybe [DeviceUnderTest])

-- | Gets test suite root group.
suiteDefinitionConfiguration_rootGroup :: Lens' SuiteDefinitionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionConfiguration.SuiteDefinitionConfiguration


module Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation

-- | Information about the suite definition.
--   
--   <i>See:</i> <a>newSuiteDefinitionInformation</a> smart constructor.
data SuiteDefinitionInformation
SuiteDefinitionInformation' :: Maybe POSIX -> Maybe [DeviceUnderTest] -> Maybe Text -> Maybe Text -> Maybe Bool -> SuiteDefinitionInformation

-- | Date (in Unix epoch time) when the test suite was created.
[$sel:createdAt:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe POSIX

-- | Specifies the devices under test for the test suite.
[$sel:defaultDevices:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe [DeviceUnderTest]

-- | Suite definition Id of the test suite.
[$sel:suiteDefinitionId:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe Text

-- | Suite name of the test suite.
[$sel:suiteDefinitionName:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe Text

-- | Specifies if the test suite is intended for qualification.
[$sel:intendedForQualification:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe Bool

-- | Create a value of <a>SuiteDefinitionInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_createdAt</a> - Date (in Unix epoch
--   time) when the test suite was created.
--   
--   <a>$sel:defaultDevices:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_defaultDevices</a> - Specifies the
--   devices under test for the test suite.
--   
--   <a>$sel:suiteDefinitionId:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_suiteDefinitionId</a> - Suite definition
--   Id of the test suite.
--   
--   <a>$sel:suiteDefinitionName:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_suiteDefinitionName</a> - Suite name of
--   the test suite.
--   
--   <a>$sel:intendedForQualification:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_intendedForQualification</a> - Specifies
--   if the test suite is intended for qualification.
newSuiteDefinitionInformation :: SuiteDefinitionInformation

-- | Date (in Unix epoch time) when the test suite was created.
suiteDefinitionInformation_createdAt :: Lens' SuiteDefinitionInformation (Maybe UTCTime)

-- | Specifies the devices under test for the test suite.
suiteDefinitionInformation_defaultDevices :: Lens' SuiteDefinitionInformation (Maybe [DeviceUnderTest])

-- | Suite definition Id of the test suite.
suiteDefinitionInformation_suiteDefinitionId :: Lens' SuiteDefinitionInformation (Maybe Text)

-- | Suite name of the test suite.
suiteDefinitionInformation_suiteDefinitionName :: Lens' SuiteDefinitionInformation (Maybe Text)

-- | Specifies if the test suite is intended for qualification.
suiteDefinitionInformation_intendedForQualification :: Lens' SuiteDefinitionInformation (Maybe Bool)
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation.SuiteDefinitionInformation
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation.SuiteDefinitionInformation
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation.SuiteDefinitionInformation
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation.SuiteDefinitionInformation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation.SuiteDefinitionInformation
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation.SuiteDefinitionInformation
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.SuiteDefinitionInformation.SuiteDefinitionInformation


module Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration

-- | Gets suite run configuration.
--   
--   <i>See:</i> <a>newSuiteRunConfiguration</a> smart constructor.
data SuiteRunConfiguration
SuiteRunConfiguration' :: Maybe DeviceUnderTest -> Maybe [Text] -> SuiteRunConfiguration

-- | Gets the primary device for suite run.
[$sel:primaryDevice:SuiteRunConfiguration'] :: SuiteRunConfiguration -> Maybe DeviceUnderTest

-- | Gets test case list.
[$sel:selectedTestList:SuiteRunConfiguration'] :: SuiteRunConfiguration -> Maybe [Text]

-- | Create a value of <a>SuiteRunConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:primaryDevice:SuiteRunConfiguration'</a>,
--   <a>suiteRunConfiguration_primaryDevice</a> - Gets the primary device
--   for suite run.
--   
--   <a>$sel:selectedTestList:SuiteRunConfiguration'</a>,
--   <a>suiteRunConfiguration_selectedTestList</a> - Gets test case list.
newSuiteRunConfiguration :: SuiteRunConfiguration

-- | Gets the primary device for suite run.
suiteRunConfiguration_primaryDevice :: Lens' SuiteRunConfiguration (Maybe DeviceUnderTest)

-- | Gets test case list.
suiteRunConfiguration_selectedTestList :: Lens' SuiteRunConfiguration (Maybe [Text])
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.Types.SuiteRunConfiguration.SuiteRunConfiguration


module Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus
newtype SuiteRunStatus
SuiteRunStatus' :: Text -> SuiteRunStatus
[fromSuiteRunStatus] :: SuiteRunStatus -> Text
pattern SuiteRunStatus_CANCELED :: SuiteRunStatus
pattern SuiteRunStatus_ERROR :: SuiteRunStatus
pattern SuiteRunStatus_FAIL :: SuiteRunStatus
pattern SuiteRunStatus_PASS :: SuiteRunStatus
pattern SuiteRunStatus_PASS_WITH_WARNINGS :: SuiteRunStatus
pattern SuiteRunStatus_PENDING :: SuiteRunStatus
pattern SuiteRunStatus_RUNNING :: SuiteRunStatus
pattern SuiteRunStatus_STOPPED :: SuiteRunStatus
pattern SuiteRunStatus_STOPPING :: SuiteRunStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance GHC.Classes.Ord Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.SuiteRunStatus.SuiteRunStatus


module Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation

-- | Information about the suite run.
--   
--   <i>See:</i> <a>newSuiteRunInformation</a> smart constructor.
data SuiteRunInformation
SuiteRunInformation' :: Maybe SuiteRunStatus -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> SuiteRunInformation

-- | Status of the suite run.
[$sel:status:SuiteRunInformation'] :: SuiteRunInformation -> Maybe SuiteRunStatus

-- | Date (in Unix epoch time) when the suite run was created.
[$sel:createdAt:SuiteRunInformation'] :: SuiteRunInformation -> Maybe POSIX

-- | Number of test cases that passed in the suite run.
[$sel:passed:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Natural

-- | Suite definition Id of the suite run.
[$sel:suiteDefinitionId:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Suite definition version of the suite run.
[$sel:suiteDefinitionVersion:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Date (in Unix epoch time) when the suite run was started.
[$sel:startedAt:SuiteRunInformation'] :: SuiteRunInformation -> Maybe POSIX

-- | Suite definition name of the suite run.
[$sel:suiteDefinitionName:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Date (in Unix epoch time) when the suite run ended.
[$sel:endAt:SuiteRunInformation'] :: SuiteRunInformation -> Maybe POSIX

-- | Suite run Id of the suite run.
[$sel:suiteRunId:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Number of test cases that failed in the suite run.
[$sel:failed:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Natural

-- | Create a value of <a>SuiteRunInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_status</a> - Status of the suite run.
--   
--   <a>$sel:createdAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_createdAt</a> - Date (in Unix epoch time) when
--   the suite run was created.
--   
--   <a>$sel:passed:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_passed</a> - Number of test cases that passed
--   in the suite run.
--   
--   <a>$sel:suiteDefinitionId:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionId</a> - Suite definition Id of
--   the suite run.
--   
--   <a>$sel:suiteDefinitionVersion:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionVersion</a> - Suite definition
--   version of the suite run.
--   
--   <a>$sel:startedAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_startedAt</a> - Date (in Unix epoch time) when
--   the suite run was started.
--   
--   <a>$sel:suiteDefinitionName:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionName</a> - Suite definition name
--   of the suite run.
--   
--   <a>$sel:endAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_endAt</a> - Date (in Unix epoch time) when the
--   suite run ended.
--   
--   <a>$sel:suiteRunId:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteRunId</a> - Suite run Id of the suite run.
--   
--   <a>$sel:failed:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_failed</a> - Number of test cases that failed
--   in the suite run.
newSuiteRunInformation :: SuiteRunInformation

-- | Status of the suite run.
suiteRunInformation_status :: Lens' SuiteRunInformation (Maybe SuiteRunStatus)

-- | Date (in Unix epoch time) when the suite run was created.
suiteRunInformation_createdAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Number of test cases that passed in the suite run.
suiteRunInformation_passed :: Lens' SuiteRunInformation (Maybe Natural)

-- | Suite definition Id of the suite run.
suiteRunInformation_suiteDefinitionId :: Lens' SuiteRunInformation (Maybe Text)

-- | Suite definition version of the suite run.
suiteRunInformation_suiteDefinitionVersion :: Lens' SuiteRunInformation (Maybe Text)

-- | Date (in Unix epoch time) when the suite run was started.
suiteRunInformation_startedAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Suite definition name of the suite run.
suiteRunInformation_suiteDefinitionName :: Lens' SuiteRunInformation (Maybe Text)

-- | Date (in Unix epoch time) when the suite run ended.
suiteRunInformation_endAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Suite run Id of the suite run.
suiteRunInformation_suiteRunId :: Lens' SuiteRunInformation (Maybe Text)

-- | Number of test cases that failed in the suite run.
suiteRunInformation_failed :: Lens' SuiteRunInformation (Maybe Natural)
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation.SuiteRunInformation
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation.SuiteRunInformation
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation.SuiteRunInformation
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation.SuiteRunInformation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation.SuiteRunInformation
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation.SuiteRunInformation
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.SuiteRunInformation.SuiteRunInformation


module Amazonka.IoTDeviceAdvisor.Types.TestCaseRun

-- | Provides test case run.
--   
--   <i>See:</i> <a>newTestCaseRun</a> smart constructor.
data TestCaseRun
TestCaseRun' :: Maybe Status -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> TestCaseRun

-- | Provides test case run status.
[$sel:status:TestCaseRun'] :: TestCaseRun -> Maybe Status

-- | Provides test case run log Url.
[$sel:logUrl:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run start time.
[$sel:startTime:TestCaseRun'] :: TestCaseRun -> Maybe POSIX

-- | Provides test case run Id.
[$sel:testCaseRunId:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run warnings.
[$sel:warnings:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run end time.
[$sel:endTime:TestCaseRun'] :: TestCaseRun -> Maybe POSIX

-- | Provides test case run definition Id.
[$sel:testCaseDefinitionId:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run failure result.
[$sel:failure:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run definition Name.
[$sel:testCaseDefinitionName:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Create a value of <a>TestCaseRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestCaseRun'</a>, <a>testCaseRun_status</a> - Provides
--   test case run status.
--   
--   <a>$sel:logUrl:TestCaseRun'</a>, <a>testCaseRun_logUrl</a> - Provides
--   test case run log Url.
--   
--   <a>$sel:startTime:TestCaseRun'</a>, <a>testCaseRun_startTime</a> -
--   Provides test case run start time.
--   
--   <a>$sel:testCaseRunId:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseRunId</a> - Provides test case run Id.
--   
--   <a>$sel:warnings:TestCaseRun'</a>, <a>testCaseRun_warnings</a> -
--   Provides test case run warnings.
--   
--   <a>$sel:endTime:TestCaseRun'</a>, <a>testCaseRun_endTime</a> -
--   Provides test case run end time.
--   
--   <a>$sel:testCaseDefinitionId:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseDefinitionId</a> - Provides test case run
--   definition Id.
--   
--   <a>$sel:failure:TestCaseRun'</a>, <a>testCaseRun_failure</a> -
--   Provides test case run failure result.
--   
--   <a>$sel:testCaseDefinitionName:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseDefinitionName</a> - Provides test case run
--   definition Name.
newTestCaseRun :: TestCaseRun

-- | Provides test case run status.
testCaseRun_status :: Lens' TestCaseRun (Maybe Status)

-- | Provides test case run log Url.
testCaseRun_logUrl :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run start time.
testCaseRun_startTime :: Lens' TestCaseRun (Maybe UTCTime)

-- | Provides test case run Id.
testCaseRun_testCaseRunId :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run warnings.
testCaseRun_warnings :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run end time.
testCaseRun_endTime :: Lens' TestCaseRun (Maybe UTCTime)

-- | Provides test case run definition Id.
testCaseRun_testCaseDefinitionId :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run failure result.
testCaseRun_failure :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run definition Name.
testCaseRun_testCaseDefinitionName :: Lens' TestCaseRun (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.TestCaseRun.TestCaseRun
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.TestCaseRun.TestCaseRun
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.TestCaseRun.TestCaseRun
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.TestCaseRun.TestCaseRun
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.TestCaseRun.TestCaseRun
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.TestCaseRun.TestCaseRun
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.TestCaseRun.TestCaseRun


module Amazonka.IoTDeviceAdvisor.Types.GroupResult

-- | Show Group Result.
--   
--   <i>See:</i> <a>newGroupResult</a> smart constructor.
data GroupResult
GroupResult' :: Maybe [TestCaseRun] -> Maybe Text -> Maybe Text -> GroupResult

-- | Tests under Group Result.
[$sel:tests:GroupResult'] :: GroupResult -> Maybe [TestCaseRun]

-- | Group result Id.
[$sel:groupId:GroupResult'] :: GroupResult -> Maybe Text

-- | Group Result Name.
[$sel:groupName:GroupResult'] :: GroupResult -> Maybe Text

-- | Create a value of <a>GroupResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tests:GroupResult'</a>, <a>groupResult_tests</a> - Tests under
--   Group Result.
--   
--   <a>$sel:groupId:GroupResult'</a>, <a>groupResult_groupId</a> - Group
--   result Id.
--   
--   <a>$sel:groupName:GroupResult'</a>, <a>groupResult_groupName</a> -
--   Group Result Name.
newGroupResult :: GroupResult

-- | Tests under Group Result.
groupResult_tests :: Lens' GroupResult (Maybe [TestCaseRun])

-- | Group result Id.
groupResult_groupId :: Lens' GroupResult (Maybe Text)

-- | Group Result Name.
groupResult_groupName :: Lens' GroupResult (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.GroupResult.GroupResult
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.GroupResult.GroupResult
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.GroupResult.GroupResult
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.GroupResult.GroupResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.GroupResult.GroupResult
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.GroupResult.GroupResult
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.GroupResult.GroupResult


module Amazonka.IoTDeviceAdvisor.Types.TestResult

-- | Show each group result.
--   
--   <i>See:</i> <a>newTestResult</a> smart constructor.
data TestResult
TestResult' :: Maybe [GroupResult] -> TestResult

-- | Show each group of test results.
[$sel:groups:TestResult'] :: TestResult -> Maybe [GroupResult]

-- | Create a value of <a>TestResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:TestResult'</a>, <a>testResult_groups</a> - Show each
--   group of test results.
newTestResult :: TestResult

-- | Show each group of test results.
testResult_groups :: Lens' TestResult (Maybe [GroupResult])
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.Types.TestResult.TestResult
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.Types.TestResult.TestResult
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.Types.TestResult.TestResult
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.Types.TestResult.TestResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTDeviceAdvisor.Types.TestResult.TestResult
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.Types.TestResult.TestResult
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.Types.TestResult.TestResult


module Amazonka.IoTDeviceAdvisor.Types

-- | API version <tt>2020-09-18</tt> of the Amazon IoT Core Device Advisor
--   SDK configuration.
defaultService :: Service

-- | Sends invalid request exception.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Sends Conflict Exception.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Sends Internal Failure Exception.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Sends Resource Not Found Exception.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_CANCELED :: Status
pattern Status_ERROR :: Status
pattern Status_FAIL :: Status
pattern Status_PASS :: Status
pattern Status_PASS_WITH_WARNINGS :: Status
pattern Status_PENDING :: Status
pattern Status_RUNNING :: Status
pattern Status_STOPPED :: Status
pattern Status_STOPPING :: Status
newtype SuiteRunStatus
SuiteRunStatus' :: Text -> SuiteRunStatus
[fromSuiteRunStatus] :: SuiteRunStatus -> Text
pattern SuiteRunStatus_CANCELED :: SuiteRunStatus
pattern SuiteRunStatus_ERROR :: SuiteRunStatus
pattern SuiteRunStatus_FAIL :: SuiteRunStatus
pattern SuiteRunStatus_PASS :: SuiteRunStatus
pattern SuiteRunStatus_PASS_WITH_WARNINGS :: SuiteRunStatus
pattern SuiteRunStatus_PENDING :: SuiteRunStatus
pattern SuiteRunStatus_RUNNING :: SuiteRunStatus
pattern SuiteRunStatus_STOPPED :: SuiteRunStatus
pattern SuiteRunStatus_STOPPING :: SuiteRunStatus

-- | Lists all the devices under test
--   
--   <i>See:</i> <a>newDeviceUnderTest</a> smart constructor.
data DeviceUnderTest
DeviceUnderTest' :: Maybe Text -> Maybe Text -> DeviceUnderTest

-- | Lists devices certificate arn
[$sel:certificateArn:DeviceUnderTest'] :: DeviceUnderTest -> Maybe Text

-- | Lists devices thing arn
[$sel:thingArn:DeviceUnderTest'] :: DeviceUnderTest -> Maybe Text

-- | Create a value of <a>DeviceUnderTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:DeviceUnderTest'</a>,
--   <a>deviceUnderTest_certificateArn</a> - Lists devices certificate arn
--   
--   <a>$sel:thingArn:DeviceUnderTest'</a>, <a>deviceUnderTest_thingArn</a>
--   - Lists devices thing arn
newDeviceUnderTest :: DeviceUnderTest

-- | Lists devices certificate arn
deviceUnderTest_certificateArn :: Lens' DeviceUnderTest (Maybe Text)

-- | Lists devices thing arn
deviceUnderTest_thingArn :: Lens' DeviceUnderTest (Maybe Text)

-- | Show Group Result.
--   
--   <i>See:</i> <a>newGroupResult</a> smart constructor.
data GroupResult
GroupResult' :: Maybe [TestCaseRun] -> Maybe Text -> Maybe Text -> GroupResult

-- | Tests under Group Result.
[$sel:tests:GroupResult'] :: GroupResult -> Maybe [TestCaseRun]

-- | Group result Id.
[$sel:groupId:GroupResult'] :: GroupResult -> Maybe Text

-- | Group Result Name.
[$sel:groupName:GroupResult'] :: GroupResult -> Maybe Text

-- | Create a value of <a>GroupResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tests:GroupResult'</a>, <a>groupResult_tests</a> - Tests under
--   Group Result.
--   
--   <a>$sel:groupId:GroupResult'</a>, <a>groupResult_groupId</a> - Group
--   result Id.
--   
--   <a>$sel:groupName:GroupResult'</a>, <a>groupResult_groupName</a> -
--   Group Result Name.
newGroupResult :: GroupResult

-- | Tests under Group Result.
groupResult_tests :: Lens' GroupResult (Maybe [TestCaseRun])

-- | Group result Id.
groupResult_groupId :: Lens' GroupResult (Maybe Text)

-- | Group Result Name.
groupResult_groupName :: Lens' GroupResult (Maybe Text)

-- | Gets Suite Definition Configuration.
--   
--   <i>See:</i> <a>newSuiteDefinitionConfiguration</a> smart constructor.
data SuiteDefinitionConfiguration
SuiteDefinitionConfiguration' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [DeviceUnderTest] -> Maybe Text -> SuiteDefinitionConfiguration

-- | Gets Suite Definition Configuration name.
[$sel:suiteDefinitionName:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Text

-- | Gets the tests intended for qualification in a suite.
[$sel:intendedForQualification:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Bool

-- | Gets device permission arn.
[$sel:devicePermissionRoleArn:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Text

-- | Gets the devices configured.
[$sel:devices:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe [DeviceUnderTest]

-- | Gets test suite root group.
[$sel:rootGroup:SuiteDefinitionConfiguration'] :: SuiteDefinitionConfiguration -> Maybe Text

-- | Create a value of <a>SuiteDefinitionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionName:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_suiteDefinitionName</a> - Gets Suite
--   Definition Configuration name.
--   
--   <a>$sel:intendedForQualification:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_intendedForQualification</a> - Gets
--   the tests intended for qualification in a suite.
--   
--   <a>$sel:devicePermissionRoleArn:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_devicePermissionRoleArn</a> - Gets
--   device permission arn.
--   
--   <a>$sel:devices:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_devices</a> - Gets the devices
--   configured.
--   
--   <a>$sel:rootGroup:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_rootGroup</a> - Gets test suite root
--   group.
newSuiteDefinitionConfiguration :: SuiteDefinitionConfiguration

-- | Gets Suite Definition Configuration name.
suiteDefinitionConfiguration_suiteDefinitionName :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Gets the tests intended for qualification in a suite.
suiteDefinitionConfiguration_intendedForQualification :: Lens' SuiteDefinitionConfiguration (Maybe Bool)

-- | Gets device permission arn.
suiteDefinitionConfiguration_devicePermissionRoleArn :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Gets the devices configured.
suiteDefinitionConfiguration_devices :: Lens' SuiteDefinitionConfiguration (Maybe [DeviceUnderTest])

-- | Gets test suite root group.
suiteDefinitionConfiguration_rootGroup :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Information about the suite definition.
--   
--   <i>See:</i> <a>newSuiteDefinitionInformation</a> smart constructor.
data SuiteDefinitionInformation
SuiteDefinitionInformation' :: Maybe POSIX -> Maybe [DeviceUnderTest] -> Maybe Text -> Maybe Text -> Maybe Bool -> SuiteDefinitionInformation

-- | Date (in Unix epoch time) when the test suite was created.
[$sel:createdAt:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe POSIX

-- | Specifies the devices under test for the test suite.
[$sel:defaultDevices:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe [DeviceUnderTest]

-- | Suite definition Id of the test suite.
[$sel:suiteDefinitionId:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe Text

-- | Suite name of the test suite.
[$sel:suiteDefinitionName:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe Text

-- | Specifies if the test suite is intended for qualification.
[$sel:intendedForQualification:SuiteDefinitionInformation'] :: SuiteDefinitionInformation -> Maybe Bool

-- | Create a value of <a>SuiteDefinitionInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_createdAt</a> - Date (in Unix epoch
--   time) when the test suite was created.
--   
--   <a>$sel:defaultDevices:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_defaultDevices</a> - Specifies the
--   devices under test for the test suite.
--   
--   <a>$sel:suiteDefinitionId:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_suiteDefinitionId</a> - Suite definition
--   Id of the test suite.
--   
--   <a>$sel:suiteDefinitionName:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_suiteDefinitionName</a> - Suite name of
--   the test suite.
--   
--   <a>$sel:intendedForQualification:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_intendedForQualification</a> - Specifies
--   if the test suite is intended for qualification.
newSuiteDefinitionInformation :: SuiteDefinitionInformation

-- | Date (in Unix epoch time) when the test suite was created.
suiteDefinitionInformation_createdAt :: Lens' SuiteDefinitionInformation (Maybe UTCTime)

-- | Specifies the devices under test for the test suite.
suiteDefinitionInformation_defaultDevices :: Lens' SuiteDefinitionInformation (Maybe [DeviceUnderTest])

-- | Suite definition Id of the test suite.
suiteDefinitionInformation_suiteDefinitionId :: Lens' SuiteDefinitionInformation (Maybe Text)

-- | Suite name of the test suite.
suiteDefinitionInformation_suiteDefinitionName :: Lens' SuiteDefinitionInformation (Maybe Text)

-- | Specifies if the test suite is intended for qualification.
suiteDefinitionInformation_intendedForQualification :: Lens' SuiteDefinitionInformation (Maybe Bool)

-- | Gets suite run configuration.
--   
--   <i>See:</i> <a>newSuiteRunConfiguration</a> smart constructor.
data SuiteRunConfiguration
SuiteRunConfiguration' :: Maybe DeviceUnderTest -> Maybe [Text] -> SuiteRunConfiguration

-- | Gets the primary device for suite run.
[$sel:primaryDevice:SuiteRunConfiguration'] :: SuiteRunConfiguration -> Maybe DeviceUnderTest

-- | Gets test case list.
[$sel:selectedTestList:SuiteRunConfiguration'] :: SuiteRunConfiguration -> Maybe [Text]

-- | Create a value of <a>SuiteRunConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:primaryDevice:SuiteRunConfiguration'</a>,
--   <a>suiteRunConfiguration_primaryDevice</a> - Gets the primary device
--   for suite run.
--   
--   <a>$sel:selectedTestList:SuiteRunConfiguration'</a>,
--   <a>suiteRunConfiguration_selectedTestList</a> - Gets test case list.
newSuiteRunConfiguration :: SuiteRunConfiguration

-- | Gets the primary device for suite run.
suiteRunConfiguration_primaryDevice :: Lens' SuiteRunConfiguration (Maybe DeviceUnderTest)

-- | Gets test case list.
suiteRunConfiguration_selectedTestList :: Lens' SuiteRunConfiguration (Maybe [Text])

-- | Information about the suite run.
--   
--   <i>See:</i> <a>newSuiteRunInformation</a> smart constructor.
data SuiteRunInformation
SuiteRunInformation' :: Maybe SuiteRunStatus -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> SuiteRunInformation

-- | Status of the suite run.
[$sel:status:SuiteRunInformation'] :: SuiteRunInformation -> Maybe SuiteRunStatus

-- | Date (in Unix epoch time) when the suite run was created.
[$sel:createdAt:SuiteRunInformation'] :: SuiteRunInformation -> Maybe POSIX

-- | Number of test cases that passed in the suite run.
[$sel:passed:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Natural

-- | Suite definition Id of the suite run.
[$sel:suiteDefinitionId:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Suite definition version of the suite run.
[$sel:suiteDefinitionVersion:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Date (in Unix epoch time) when the suite run was started.
[$sel:startedAt:SuiteRunInformation'] :: SuiteRunInformation -> Maybe POSIX

-- | Suite definition name of the suite run.
[$sel:suiteDefinitionName:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Date (in Unix epoch time) when the suite run ended.
[$sel:endAt:SuiteRunInformation'] :: SuiteRunInformation -> Maybe POSIX

-- | Suite run Id of the suite run.
[$sel:suiteRunId:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Text

-- | Number of test cases that failed in the suite run.
[$sel:failed:SuiteRunInformation'] :: SuiteRunInformation -> Maybe Natural

-- | Create a value of <a>SuiteRunInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_status</a> - Status of the suite run.
--   
--   <a>$sel:createdAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_createdAt</a> - Date (in Unix epoch time) when
--   the suite run was created.
--   
--   <a>$sel:passed:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_passed</a> - Number of test cases that passed
--   in the suite run.
--   
--   <a>$sel:suiteDefinitionId:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionId</a> - Suite definition Id of
--   the suite run.
--   
--   <a>$sel:suiteDefinitionVersion:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionVersion</a> - Suite definition
--   version of the suite run.
--   
--   <a>$sel:startedAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_startedAt</a> - Date (in Unix epoch time) when
--   the suite run was started.
--   
--   <a>$sel:suiteDefinitionName:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionName</a> - Suite definition name
--   of the suite run.
--   
--   <a>$sel:endAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_endAt</a> - Date (in Unix epoch time) when the
--   suite run ended.
--   
--   <a>$sel:suiteRunId:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteRunId</a> - Suite run Id of the suite run.
--   
--   <a>$sel:failed:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_failed</a> - Number of test cases that failed
--   in the suite run.
newSuiteRunInformation :: SuiteRunInformation

-- | Status of the suite run.
suiteRunInformation_status :: Lens' SuiteRunInformation (Maybe SuiteRunStatus)

-- | Date (in Unix epoch time) when the suite run was created.
suiteRunInformation_createdAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Number of test cases that passed in the suite run.
suiteRunInformation_passed :: Lens' SuiteRunInformation (Maybe Natural)

-- | Suite definition Id of the suite run.
suiteRunInformation_suiteDefinitionId :: Lens' SuiteRunInformation (Maybe Text)

-- | Suite definition version of the suite run.
suiteRunInformation_suiteDefinitionVersion :: Lens' SuiteRunInformation (Maybe Text)

-- | Date (in Unix epoch time) when the suite run was started.
suiteRunInformation_startedAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Suite definition name of the suite run.
suiteRunInformation_suiteDefinitionName :: Lens' SuiteRunInformation (Maybe Text)

-- | Date (in Unix epoch time) when the suite run ended.
suiteRunInformation_endAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Suite run Id of the suite run.
suiteRunInformation_suiteRunId :: Lens' SuiteRunInformation (Maybe Text)

-- | Number of test cases that failed in the suite run.
suiteRunInformation_failed :: Lens' SuiteRunInformation (Maybe Natural)

-- | Provides test case run.
--   
--   <i>See:</i> <a>newTestCaseRun</a> smart constructor.
data TestCaseRun
TestCaseRun' :: Maybe Status -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> TestCaseRun

-- | Provides test case run status.
[$sel:status:TestCaseRun'] :: TestCaseRun -> Maybe Status

-- | Provides test case run log Url.
[$sel:logUrl:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run start time.
[$sel:startTime:TestCaseRun'] :: TestCaseRun -> Maybe POSIX

-- | Provides test case run Id.
[$sel:testCaseRunId:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run warnings.
[$sel:warnings:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run end time.
[$sel:endTime:TestCaseRun'] :: TestCaseRun -> Maybe POSIX

-- | Provides test case run definition Id.
[$sel:testCaseDefinitionId:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run failure result.
[$sel:failure:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Provides test case run definition Name.
[$sel:testCaseDefinitionName:TestCaseRun'] :: TestCaseRun -> Maybe Text

-- | Create a value of <a>TestCaseRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestCaseRun'</a>, <a>testCaseRun_status</a> - Provides
--   test case run status.
--   
--   <a>$sel:logUrl:TestCaseRun'</a>, <a>testCaseRun_logUrl</a> - Provides
--   test case run log Url.
--   
--   <a>$sel:startTime:TestCaseRun'</a>, <a>testCaseRun_startTime</a> -
--   Provides test case run start time.
--   
--   <a>$sel:testCaseRunId:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseRunId</a> - Provides test case run Id.
--   
--   <a>$sel:warnings:TestCaseRun'</a>, <a>testCaseRun_warnings</a> -
--   Provides test case run warnings.
--   
--   <a>$sel:endTime:TestCaseRun'</a>, <a>testCaseRun_endTime</a> -
--   Provides test case run end time.
--   
--   <a>$sel:testCaseDefinitionId:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseDefinitionId</a> - Provides test case run
--   definition Id.
--   
--   <a>$sel:failure:TestCaseRun'</a>, <a>testCaseRun_failure</a> -
--   Provides test case run failure result.
--   
--   <a>$sel:testCaseDefinitionName:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseDefinitionName</a> - Provides test case run
--   definition Name.
newTestCaseRun :: TestCaseRun

-- | Provides test case run status.
testCaseRun_status :: Lens' TestCaseRun (Maybe Status)

-- | Provides test case run log Url.
testCaseRun_logUrl :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run start time.
testCaseRun_startTime :: Lens' TestCaseRun (Maybe UTCTime)

-- | Provides test case run Id.
testCaseRun_testCaseRunId :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run warnings.
testCaseRun_warnings :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run end time.
testCaseRun_endTime :: Lens' TestCaseRun (Maybe UTCTime)

-- | Provides test case run definition Id.
testCaseRun_testCaseDefinitionId :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run failure result.
testCaseRun_failure :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run definition Name.
testCaseRun_testCaseDefinitionName :: Lens' TestCaseRun (Maybe Text)

-- | Show each group result.
--   
--   <i>See:</i> <a>newTestResult</a> smart constructor.
data TestResult
TestResult' :: Maybe [GroupResult] -> TestResult

-- | Show each group of test results.
[$sel:groups:TestResult'] :: TestResult -> Maybe [GroupResult]

-- | Create a value of <a>TestResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:TestResult'</a>, <a>testResult_groups</a> - Show each
--   group of test results.
newTestResult :: TestResult

-- | Show each group of test results.
testResult_groups :: Lens' TestResult (Maybe [GroupResult])


-- | Adds to and modifies existing tags of an IoT Device Advisor resource.
module Amazonka.IoTDeviceAdvisor.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The resource ARN of an IoT Device Advisor resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to be attached to the IoT Device Advisor resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The resource ARN of an IoT Device Advisor resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   be attached to the IoT Device Advisor resource.
newTagResource :: Text -> TagResource

-- | The resource ARN of an IoT Device Advisor resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to be attached to the IoT Device Advisor resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.TagResource.TagResource


-- | Stops a Device Advisor test suite run that is currently running.
module Amazonka.IoTDeviceAdvisor.StopSuiteRun

-- | <i>See:</i> <a>newStopSuiteRun</a> smart constructor.
data StopSuiteRun
StopSuiteRun' :: Text -> Text -> StopSuiteRun

-- | Suite definition Id of the test suite run to be stopped.
[$sel:suiteDefinitionId:StopSuiteRun'] :: StopSuiteRun -> Text

-- | Suite run Id of the test suite run to be stopped.
[$sel:suiteRunId:StopSuiteRun'] :: StopSuiteRun -> Text

-- | Create a value of <a>StopSuiteRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:StopSuiteRun'</a>,
--   <a>stopSuiteRun_suiteDefinitionId</a> - Suite definition Id of the
--   test suite run to be stopped.
--   
--   <a>$sel:suiteRunId:StopSuiteRun'</a>, <a>stopSuiteRun_suiteRunId</a> -
--   Suite run Id of the test suite run to be stopped.
newStopSuiteRun :: Text -> Text -> StopSuiteRun

-- | Suite definition Id of the test suite run to be stopped.
stopSuiteRun_suiteDefinitionId :: Lens' StopSuiteRun Text

-- | Suite run Id of the test suite run to be stopped.
stopSuiteRun_suiteRunId :: Lens' StopSuiteRun Text

-- | <i>See:</i> <a>newStopSuiteRunResponse</a> smart constructor.
data StopSuiteRunResponse
StopSuiteRunResponse' :: Int -> StopSuiteRunResponse

-- | The response's http status code.
[$sel:httpStatus:StopSuiteRunResponse'] :: StopSuiteRunResponse -> Int

-- | Create a value of <a>StopSuiteRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopSuiteRunResponse'</a>,
--   <a>stopSuiteRunResponse_httpStatus</a> - The response's http status
--   code.
newStopSuiteRunResponse :: Int -> StopSuiteRunResponse

-- | The response's http status code.
stopSuiteRunResponse_httpStatus :: Lens' StopSuiteRunResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRunResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRunResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRunResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRunResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRunResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.StopSuiteRun.StopSuiteRun


-- | Starts a Device Advisor test suite run.
module Amazonka.IoTDeviceAdvisor.StartSuiteRun

-- | <i>See:</i> <a>newStartSuiteRun</a> smart constructor.
data StartSuiteRun
StartSuiteRun' :: Maybe SuiteRunConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> StartSuiteRun

-- | Suite run configuration.
[$sel:suiteRunConfiguration:StartSuiteRun'] :: StartSuiteRun -> Maybe SuiteRunConfiguration

-- | Suite definition version of the test suite.
[$sel:suiteDefinitionVersion:StartSuiteRun'] :: StartSuiteRun -> Maybe Text

-- | The tags to be attached to the suite run.
[$sel:tags:StartSuiteRun'] :: StartSuiteRun -> Maybe (HashMap Text Text)

-- | Suite definition Id of the test suite.
[$sel:suiteDefinitionId:StartSuiteRun'] :: StartSuiteRun -> Text

-- | Create a value of <a>StartSuiteRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteRunConfiguration:StartSuiteRun'</a>,
--   <a>startSuiteRun_suiteRunConfiguration</a> - Suite run configuration.
--   
--   <a>$sel:suiteDefinitionVersion:StartSuiteRun'</a>,
--   <a>startSuiteRun_suiteDefinitionVersion</a> - Suite definition version
--   of the test suite.
--   
--   <a>$sel:tags:StartSuiteRun'</a>, <a>startSuiteRun_tags</a> - The tags
--   to be attached to the suite run.
--   
--   <a>$sel:suiteDefinitionId:StartSuiteRun'</a>,
--   <a>startSuiteRun_suiteDefinitionId</a> - Suite definition Id of the
--   test suite.
newStartSuiteRun :: Text -> StartSuiteRun

-- | Suite run configuration.
startSuiteRun_suiteRunConfiguration :: Lens' StartSuiteRun (Maybe SuiteRunConfiguration)

-- | Suite definition version of the test suite.
startSuiteRun_suiteDefinitionVersion :: Lens' StartSuiteRun (Maybe Text)

-- | The tags to be attached to the suite run.
startSuiteRun_tags :: Lens' StartSuiteRun (Maybe (HashMap Text Text))

-- | Suite definition Id of the test suite.
startSuiteRun_suiteDefinitionId :: Lens' StartSuiteRun Text

-- | <i>See:</i> <a>newStartSuiteRunResponse</a> smart constructor.
data StartSuiteRunResponse
StartSuiteRunResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> StartSuiteRunResponse

-- | Date (in Unix epoch time) when the suite run was created.
[$sel:createdAt:StartSuiteRunResponse'] :: StartSuiteRunResponse -> Maybe POSIX

-- | Amazon resource name of the started suite run.
[$sel:suiteRunArn:StartSuiteRunResponse'] :: StartSuiteRunResponse -> Maybe Text

-- | Suite Run Id of the started suite run.
[$sel:suiteRunId:StartSuiteRunResponse'] :: StartSuiteRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartSuiteRunResponse'] :: StartSuiteRunResponse -> Int

-- | Create a value of <a>StartSuiteRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_createdAt</a> - Date (in Unix epoch time)
--   when the suite run was created.
--   
--   <a>$sel:suiteRunArn:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_suiteRunArn</a> - Amazon resource name of the
--   started suite run.
--   
--   <a>$sel:suiteRunId:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_suiteRunId</a> - Suite Run Id of the started
--   suite run.
--   
--   <a>$sel:httpStatus:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_httpStatus</a> - The response's http status
--   code.
newStartSuiteRunResponse :: Int -> StartSuiteRunResponse

-- | Date (in Unix epoch time) when the suite run was created.
startSuiteRunResponse_createdAt :: Lens' StartSuiteRunResponse (Maybe UTCTime)

-- | Amazon resource name of the started suite run.
startSuiteRunResponse_suiteRunArn :: Lens' StartSuiteRunResponse (Maybe Text)

-- | Suite Run Id of the started suite run.
startSuiteRunResponse_suiteRunId :: Lens' StartSuiteRunResponse (Maybe Text)

-- | The response's http status code.
startSuiteRunResponse_httpStatus :: Lens' StartSuiteRunResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRunResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRunResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRunResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRunResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRunResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.StartSuiteRun.StartSuiteRun


-- | Lists the tags attached to an IoT Device Advisor resource.
module Amazonka.IoTDeviceAdvisor.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the IoT Device Advisor resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the IoT Device
--   Advisor resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the IoT Device Advisor resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags attached to the IoT Device Advisor resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags attached to the IoT
--   Device Advisor resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags attached to the IoT Device Advisor resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.ListTagsForResource.ListTagsForResource


-- | Lists the runs of the specified Device Advisor test suite. You can
--   list all runs of the test suite, or the runs of a specific version of
--   the test suite.
module Amazonka.IoTDeviceAdvisor.ListSuiteRuns

-- | <i>See:</i> <a>newListSuiteRuns</a> smart constructor.
data ListSuiteRuns
ListSuiteRuns' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListSuiteRuns

-- | Lists the test suite runs of the specified test suite based on suite
--   definition Id.
[$sel:suiteDefinitionId:ListSuiteRuns'] :: ListSuiteRuns -> Maybe Text

-- | Must be passed along with suiteDefinitionId. Lists the test suite runs
--   of the specified test suite based on suite definition version.
[$sel:suiteDefinitionVersion:ListSuiteRuns'] :: ListSuiteRuns -> Maybe Text

-- | A token to retrieve the next set of results.
[$sel:nextToken:ListSuiteRuns'] :: ListSuiteRuns -> Maybe Text

-- | The maximum number of results to return at once.
[$sel:maxResults:ListSuiteRuns'] :: ListSuiteRuns -> Maybe Natural

-- | Create a value of <a>ListSuiteRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:ListSuiteRuns'</a>,
--   <a>listSuiteRuns_suiteDefinitionId</a> - Lists the test suite runs of
--   the specified test suite based on suite definition Id.
--   
--   <a>$sel:suiteDefinitionVersion:ListSuiteRuns'</a>,
--   <a>listSuiteRuns_suiteDefinitionVersion</a> - Must be passed along
--   with suiteDefinitionId. Lists the test suite runs of the specified
--   test suite based on suite definition version.
--   
--   <a>$sel:nextToken:ListSuiteRuns'</a>, <a>listSuiteRuns_nextToken</a> -
--   A token to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListSuiteRuns'</a>, <a>listSuiteRuns_maxResults</a>
--   - The maximum number of results to return at once.
newListSuiteRuns :: ListSuiteRuns

-- | Lists the test suite runs of the specified test suite based on suite
--   definition Id.
listSuiteRuns_suiteDefinitionId :: Lens' ListSuiteRuns (Maybe Text)

-- | Must be passed along with suiteDefinitionId. Lists the test suite runs
--   of the specified test suite based on suite definition version.
listSuiteRuns_suiteDefinitionVersion :: Lens' ListSuiteRuns (Maybe Text)

-- | A token to retrieve the next set of results.
listSuiteRuns_nextToken :: Lens' ListSuiteRuns (Maybe Text)

-- | The maximum number of results to return at once.
listSuiteRuns_maxResults :: Lens' ListSuiteRuns (Maybe Natural)

-- | <i>See:</i> <a>newListSuiteRunsResponse</a> smart constructor.
data ListSuiteRunsResponse
ListSuiteRunsResponse' :: Maybe Text -> Maybe [SuiteRunInformation] -> Int -> ListSuiteRunsResponse

-- | A token to retrieve the next set of results.
[$sel:nextToken:ListSuiteRunsResponse'] :: ListSuiteRunsResponse -> Maybe Text

-- | An array of objects that provide summaries of information about the
--   suite runs in the list.
[$sel:suiteRunsList:ListSuiteRunsResponse'] :: ListSuiteRunsResponse -> Maybe [SuiteRunInformation]

-- | The response's http status code.
[$sel:httpStatus:ListSuiteRunsResponse'] :: ListSuiteRunsResponse -> Int

-- | Create a value of <a>ListSuiteRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuiteRuns'</a>,
--   <a>listSuiteRunsResponse_nextToken</a> - A token to retrieve the next
--   set of results.
--   
--   <a>$sel:suiteRunsList:ListSuiteRunsResponse'</a>,
--   <a>listSuiteRunsResponse_suiteRunsList</a> - An array of objects that
--   provide summaries of information about the suite runs in the list.
--   
--   <a>$sel:httpStatus:ListSuiteRunsResponse'</a>,
--   <a>listSuiteRunsResponse_httpStatus</a> - The response's http status
--   code.
newListSuiteRunsResponse :: Int -> ListSuiteRunsResponse

-- | A token to retrieve the next set of results.
listSuiteRunsResponse_nextToken :: Lens' ListSuiteRunsResponse (Maybe Text)

-- | An array of objects that provide summaries of information about the
--   suite runs in the list.
listSuiteRunsResponse_suiteRunsList :: Lens' ListSuiteRunsResponse (Maybe [SuiteRunInformation])

-- | The response's http status code.
listSuiteRunsResponse_httpStatus :: Lens' ListSuiteRunsResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRunsResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRunsResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRunsResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRunsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRunsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.ListSuiteRuns.ListSuiteRuns


-- | Lists the Device Advisor test suites you have created.
module Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions

-- | <i>See:</i> <a>newListSuiteDefinitions</a> smart constructor.
data ListSuiteDefinitions
ListSuiteDefinitions' :: Maybe Text -> Maybe Natural -> ListSuiteDefinitions

-- | A token used to get the next set of results.
[$sel:nextToken:ListSuiteDefinitions'] :: ListSuiteDefinitions -> Maybe Text

-- | The maximum number of results to return at once.
[$sel:maxResults:ListSuiteDefinitions'] :: ListSuiteDefinitions -> Maybe Natural

-- | Create a value of <a>ListSuiteDefinitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuiteDefinitions'</a>,
--   <a>listSuiteDefinitions_nextToken</a> - A token used to get the next
--   set of results.
--   
--   <a>$sel:maxResults:ListSuiteDefinitions'</a>,
--   <a>listSuiteDefinitions_maxResults</a> - The maximum number of results
--   to return at once.
newListSuiteDefinitions :: ListSuiteDefinitions

-- | A token used to get the next set of results.
listSuiteDefinitions_nextToken :: Lens' ListSuiteDefinitions (Maybe Text)

-- | The maximum number of results to return at once.
listSuiteDefinitions_maxResults :: Lens' ListSuiteDefinitions (Maybe Natural)

-- | <i>See:</i> <a>newListSuiteDefinitionsResponse</a> smart constructor.
data ListSuiteDefinitionsResponse
ListSuiteDefinitionsResponse' :: Maybe [SuiteDefinitionInformation] -> Maybe Text -> Int -> ListSuiteDefinitionsResponse

-- | An array of objects that provide summaries of information about the
--   suite definitions in the list.
[$sel:suiteDefinitionInformationList:ListSuiteDefinitionsResponse'] :: ListSuiteDefinitionsResponse -> Maybe [SuiteDefinitionInformation]

-- | A token used to get the next set of results.
[$sel:nextToken:ListSuiteDefinitionsResponse'] :: ListSuiteDefinitionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSuiteDefinitionsResponse'] :: ListSuiteDefinitionsResponse -> Int

-- | Create a value of <a>ListSuiteDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:suiteDefinitionInformationList:ListSuiteDefinitionsResponse'</a>,
--   <a>listSuiteDefinitionsResponse_suiteDefinitionInformationList</a> -
--   An array of objects that provide summaries of information about the
--   suite definitions in the list.
--   
--   <a>$sel:nextToken:ListSuiteDefinitions'</a>,
--   <a>listSuiteDefinitionsResponse_nextToken</a> - A token used to get
--   the next set of results.
--   
--   <a>$sel:httpStatus:ListSuiteDefinitionsResponse'</a>,
--   <a>listSuiteDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListSuiteDefinitionsResponse :: Int -> ListSuiteDefinitionsResponse

-- | An array of objects that provide summaries of information about the
--   suite definitions in the list.
listSuiteDefinitionsResponse_suiteDefinitionInformationList :: Lens' ListSuiteDefinitionsResponse (Maybe [SuiteDefinitionInformation])

-- | A token used to get the next set of results.
listSuiteDefinitionsResponse_nextToken :: Lens' ListSuiteDefinitionsResponse (Maybe Text)

-- | The response's http status code.
listSuiteDefinitionsResponse_httpStatus :: Lens' ListSuiteDefinitionsResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitionsResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitionsResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitionsResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitionsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitionsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.ListSuiteDefinitions.ListSuiteDefinitions


-- | Gets a report download link for a successful Device Advisor qualifying
--   test suite run.
module Amazonka.IoTDeviceAdvisor.GetSuiteRunReport

-- | <i>See:</i> <a>newGetSuiteRunReport</a> smart constructor.
data GetSuiteRunReport
GetSuiteRunReport' :: Text -> Text -> GetSuiteRunReport

-- | Suite definition Id of the test suite.
[$sel:suiteDefinitionId:GetSuiteRunReport'] :: GetSuiteRunReport -> Text

-- | Suite run Id of the test suite run.
[$sel:suiteRunId:GetSuiteRunReport'] :: GetSuiteRunReport -> Text

-- | Create a value of <a>GetSuiteRunReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:GetSuiteRunReport'</a>,
--   <a>getSuiteRunReport_suiteDefinitionId</a> - Suite definition Id of
--   the test suite.
--   
--   <a>$sel:suiteRunId:GetSuiteRunReport'</a>,
--   <a>getSuiteRunReport_suiteRunId</a> - Suite run Id of the test suite
--   run.
newGetSuiteRunReport :: Text -> Text -> GetSuiteRunReport

-- | Suite definition Id of the test suite.
getSuiteRunReport_suiteDefinitionId :: Lens' GetSuiteRunReport Text

-- | Suite run Id of the test suite run.
getSuiteRunReport_suiteRunId :: Lens' GetSuiteRunReport Text

-- | <i>See:</i> <a>newGetSuiteRunReportResponse</a> smart constructor.
data GetSuiteRunReportResponse
GetSuiteRunReportResponse' :: Maybe Text -> Int -> GetSuiteRunReportResponse

-- | Download URL of the qualification report.
[$sel:qualificationReportDownloadUrl:GetSuiteRunReportResponse'] :: GetSuiteRunReportResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSuiteRunReportResponse'] :: GetSuiteRunReportResponse -> Int

-- | Create a value of <a>GetSuiteRunReportResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationReportDownloadUrl:GetSuiteRunReportResponse'</a>,
--   <a>getSuiteRunReportResponse_qualificationReportDownloadUrl</a> -
--   Download URL of the qualification report.
--   
--   <a>$sel:httpStatus:GetSuiteRunReportResponse'</a>,
--   <a>getSuiteRunReportResponse_httpStatus</a> - The response's http
--   status code.
newGetSuiteRunReportResponse :: Int -> GetSuiteRunReportResponse

-- | Download URL of the qualification report.
getSuiteRunReportResponse_qualificationReportDownloadUrl :: Lens' GetSuiteRunReportResponse (Maybe Text)

-- | The response's http status code.
getSuiteRunReportResponse_httpStatus :: Lens' GetSuiteRunReportResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReportResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReportResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReportResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReportResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReportResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.GetSuiteRunReport.GetSuiteRunReport


-- | Gets information about a Device Advisor test suite run.
module Amazonka.IoTDeviceAdvisor.GetSuiteRun

-- | <i>See:</i> <a>newGetSuiteRun</a> smart constructor.
data GetSuiteRun
GetSuiteRun' :: Text -> Text -> GetSuiteRun

-- | Suite definition Id for the test suite run.
[$sel:suiteDefinitionId:GetSuiteRun'] :: GetSuiteRun -> Text

-- | Suite run Id for the test suite run.
[$sel:suiteRunId:GetSuiteRun'] :: GetSuiteRun -> Text

-- | Create a value of <a>GetSuiteRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:GetSuiteRun'</a>,
--   <a>getSuiteRun_suiteDefinitionId</a> - Suite definition Id for the
--   test suite run.
--   
--   <a>$sel:suiteRunId:GetSuiteRun'</a>, <a>getSuiteRun_suiteRunId</a> -
--   Suite run Id for the test suite run.
newGetSuiteRun :: Text -> Text -> GetSuiteRun

-- | Suite definition Id for the test suite run.
getSuiteRun_suiteDefinitionId :: Lens' GetSuiteRun Text

-- | Suite run Id for the test suite run.
getSuiteRun_suiteRunId :: Lens' GetSuiteRun Text

-- | <i>See:</i> <a>newGetSuiteRunResponse</a> smart constructor.
data GetSuiteRunResponse
GetSuiteRunResponse' :: Maybe SuiteRunStatus -> Maybe SuiteRunConfiguration -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TestResult -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetSuiteRunResponse

-- | Status for the test suite run.
[$sel:status:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe SuiteRunStatus

-- | Suite run configuration for the test suite run.
[$sel:suiteRunConfiguration:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe SuiteRunConfiguration

-- | Date (in Unix epoch time) when the test suite run was started.
[$sel:startTime:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe POSIX

-- | Suite definition Id for the test suite run.
[$sel:suiteDefinitionId:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe Text

-- | Suite definition version for the test suite run.
[$sel:suiteDefinitionVersion:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe Text

-- | Error reason for any test suite run failure.
[$sel:errorReason:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe Text

-- | Test results for the test suite run.
[$sel:testResult:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe TestResult

-- | Date (in Unix epoch time) when the test suite run ended.
[$sel:endTime:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe POSIX

-- | The ARN of the suite run.
[$sel:suiteRunArn:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe Text

-- | Suite run Id for the test suite run.
[$sel:suiteRunId:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe Text

-- | The tags attached to the suite run.
[$sel:tags:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetSuiteRunResponse'] :: GetSuiteRunResponse -> Int

-- | Create a value of <a>GetSuiteRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_status</a> - Status for the test suite run.
--   
--   <a>$sel:suiteRunConfiguration:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_suiteRunConfiguration</a> - Suite run
--   configuration for the test suite run.
--   
--   <a>$sel:startTime:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_startTime</a> - Date (in Unix epoch time) when
--   the test suite run was started.
--   
--   <a>$sel:suiteDefinitionId:GetSuiteRun'</a>,
--   <a>getSuiteRunResponse_suiteDefinitionId</a> - Suite definition Id for
--   the test suite run.
--   
--   <a>$sel:suiteDefinitionVersion:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_suiteDefinitionVersion</a> - Suite definition
--   version for the test suite run.
--   
--   <a>$sel:errorReason:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_errorReason</a> - Error reason for any test
--   suite run failure.
--   
--   <a>$sel:testResult:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_testResult</a> - Test results for the test
--   suite run.
--   
--   <a>$sel:endTime:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_endTime</a> - Date (in Unix epoch time) when
--   the test suite run ended.
--   
--   <a>$sel:suiteRunArn:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_suiteRunArn</a> - The ARN of the suite run.
--   
--   <a>$sel:suiteRunId:GetSuiteRun'</a>,
--   <a>getSuiteRunResponse_suiteRunId</a> - Suite run Id for the test
--   suite run.
--   
--   <a>$sel:tags:GetSuiteRunResponse'</a>, <a>getSuiteRunResponse_tags</a>
--   - The tags attached to the suite run.
--   
--   <a>$sel:httpStatus:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_httpStatus</a> - The response's http status
--   code.
newGetSuiteRunResponse :: Int -> GetSuiteRunResponse

-- | Status for the test suite run.
getSuiteRunResponse_status :: Lens' GetSuiteRunResponse (Maybe SuiteRunStatus)

-- | Suite run configuration for the test suite run.
getSuiteRunResponse_suiteRunConfiguration :: Lens' GetSuiteRunResponse (Maybe SuiteRunConfiguration)

-- | Date (in Unix epoch time) when the test suite run was started.
getSuiteRunResponse_startTime :: Lens' GetSuiteRunResponse (Maybe UTCTime)

-- | Suite definition Id for the test suite run.
getSuiteRunResponse_suiteDefinitionId :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Suite definition version for the test suite run.
getSuiteRunResponse_suiteDefinitionVersion :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Error reason for any test suite run failure.
getSuiteRunResponse_errorReason :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Test results for the test suite run.
getSuiteRunResponse_testResult :: Lens' GetSuiteRunResponse (Maybe TestResult)

-- | Date (in Unix epoch time) when the test suite run ended.
getSuiteRunResponse_endTime :: Lens' GetSuiteRunResponse (Maybe UTCTime)

-- | The ARN of the suite run.
getSuiteRunResponse_suiteRunArn :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Suite run Id for the test suite run.
getSuiteRunResponse_suiteRunId :: Lens' GetSuiteRunResponse (Maybe Text)

-- | The tags attached to the suite run.
getSuiteRunResponse_tags :: Lens' GetSuiteRunResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSuiteRunResponse_httpStatus :: Lens' GetSuiteRunResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRunResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRunResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRunResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRunResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRunResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.GetSuiteRun.GetSuiteRun


-- | Gets information about a Device Advisor test suite.
module Amazonka.IoTDeviceAdvisor.GetSuiteDefinition

-- | <i>See:</i> <a>newGetSuiteDefinition</a> smart constructor.
data GetSuiteDefinition
GetSuiteDefinition' :: Maybe Text -> Text -> GetSuiteDefinition

-- | Suite definition version of the test suite to get.
[$sel:suiteDefinitionVersion:GetSuiteDefinition'] :: GetSuiteDefinition -> Maybe Text

-- | Suite definition Id of the test suite to get.
[$sel:suiteDefinitionId:GetSuiteDefinition'] :: GetSuiteDefinition -> Text

-- | Create a value of <a>GetSuiteDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionVersion:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinition_suiteDefinitionVersion</a> - Suite definition
--   version of the test suite to get.
--   
--   <a>$sel:suiteDefinitionId:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinition_suiteDefinitionId</a> - Suite definition Id of
--   the test suite to get.
newGetSuiteDefinition :: Text -> GetSuiteDefinition

-- | Suite definition version of the test suite to get.
getSuiteDefinition_suiteDefinitionVersion :: Lens' GetSuiteDefinition (Maybe Text)

-- | Suite definition Id of the test suite to get.
getSuiteDefinition_suiteDefinitionId :: Lens' GetSuiteDefinition Text

-- | <i>See:</i> <a>newGetSuiteDefinitionResponse</a> smart constructor.
data GetSuiteDefinitionResponse
GetSuiteDefinitionResponse' :: Maybe POSIX -> Maybe SuiteDefinitionConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetSuiteDefinitionResponse

-- | Date (in Unix epoch time) when the suite definition was created.
[$sel:createdAt:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe POSIX

-- | Suite configuration of the suite definition.
[$sel:suiteDefinitionConfiguration:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe SuiteDefinitionConfiguration

-- | The ARN of the suite definition.
[$sel:suiteDefinitionArn:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe Text

-- | Date (in Unix epoch time) when the suite definition was last modified.
[$sel:lastModifiedAt:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe POSIX

-- | Suite definition Id of the suite definition.
[$sel:suiteDefinitionId:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe Text

-- | Suite definition version of the suite definition.
[$sel:suiteDefinitionVersion:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe Text

-- | Latest suite definition version of the suite definition.
[$sel:latestVersion:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe Text

-- | Tags attached to the suite definition.
[$sel:tags:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetSuiteDefinitionResponse'] :: GetSuiteDefinitionResponse -> Int

-- | Create a value of <a>GetSuiteDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_createdAt</a> - Date (in Unix epoch
--   time) when the suite definition was created.
--   
--   <a>$sel:suiteDefinitionConfiguration:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionConfiguration</a> - Suite
--   configuration of the suite definition.
--   
--   <a>$sel:suiteDefinitionArn:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionArn</a> - The ARN of the
--   suite definition.
--   
--   <a>$sel:lastModifiedAt:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_lastModifiedAt</a> - Date (in Unix epoch
--   time) when the suite definition was last modified.
--   
--   <a>$sel:suiteDefinitionId:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionId</a> - Suite definition
--   Id of the suite definition.
--   
--   <a>$sel:suiteDefinitionVersion:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionVersion</a> - Suite
--   definition version of the suite definition.
--   
--   <a>$sel:latestVersion:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_latestVersion</a> - Latest suite
--   definition version of the suite definition.
--   
--   <a>$sel:tags:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_tags</a> - Tags attached to the suite
--   definition.
--   
--   <a>$sel:httpStatus:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetSuiteDefinitionResponse :: Int -> GetSuiteDefinitionResponse

-- | Date (in Unix epoch time) when the suite definition was created.
getSuiteDefinitionResponse_createdAt :: Lens' GetSuiteDefinitionResponse (Maybe UTCTime)

-- | Suite configuration of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionConfiguration :: Lens' GetSuiteDefinitionResponse (Maybe SuiteDefinitionConfiguration)

-- | The ARN of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionArn :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Date (in Unix epoch time) when the suite definition was last modified.
getSuiteDefinitionResponse_lastModifiedAt :: Lens' GetSuiteDefinitionResponse (Maybe UTCTime)

-- | Suite definition Id of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionId :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Suite definition version of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionVersion :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Latest suite definition version of the suite definition.
getSuiteDefinitionResponse_latestVersion :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Tags attached to the suite definition.
getSuiteDefinitionResponse_tags :: Lens' GetSuiteDefinitionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSuiteDefinitionResponse_httpStatus :: Lens' GetSuiteDefinitionResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinitionResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinitionResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinitionResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinitionResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinitionResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.GetSuiteDefinition.GetSuiteDefinition


-- | Deletes a Device Advisor test suite.
module Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition

-- | <i>See:</i> <a>newDeleteSuiteDefinition</a> smart constructor.
data DeleteSuiteDefinition
DeleteSuiteDefinition' :: Text -> DeleteSuiteDefinition

-- | Suite definition Id of the test suite to be deleted.
[$sel:suiteDefinitionId:DeleteSuiteDefinition'] :: DeleteSuiteDefinition -> Text

-- | Create a value of <a>DeleteSuiteDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:DeleteSuiteDefinition'</a>,
--   <a>deleteSuiteDefinition_suiteDefinitionId</a> - Suite definition Id
--   of the test suite to be deleted.
newDeleteSuiteDefinition :: Text -> DeleteSuiteDefinition

-- | Suite definition Id of the test suite to be deleted.
deleteSuiteDefinition_suiteDefinitionId :: Lens' DeleteSuiteDefinition Text

-- | <i>See:</i> <a>newDeleteSuiteDefinitionResponse</a> smart constructor.
data DeleteSuiteDefinitionResponse
DeleteSuiteDefinitionResponse' :: Int -> DeleteSuiteDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSuiteDefinitionResponse'] :: DeleteSuiteDefinitionResponse -> Int

-- | Create a value of <a>DeleteSuiteDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSuiteDefinitionResponse'</a>,
--   <a>deleteSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSuiteDefinitionResponse :: Int -> DeleteSuiteDefinitionResponse

-- | The response's http status code.
deleteSuiteDefinitionResponse_httpStatus :: Lens' DeleteSuiteDefinitionResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinitionResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinitionResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinitionResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinitionResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinitionResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.DeleteSuiteDefinition.DeleteSuiteDefinition


-- | Creates a Device Advisor test suite.
module Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition

-- | <i>See:</i> <a>newCreateSuiteDefinition</a> smart constructor.
data CreateSuiteDefinition
CreateSuiteDefinition' :: Maybe SuiteDefinitionConfiguration -> Maybe (HashMap Text Text) -> CreateSuiteDefinition

-- | Creates a Device Advisor test suite with suite definition
--   configuration.
[$sel:suiteDefinitionConfiguration:CreateSuiteDefinition'] :: CreateSuiteDefinition -> Maybe SuiteDefinitionConfiguration

-- | The tags to be attached to the suite definition.
[$sel:tags:CreateSuiteDefinition'] :: CreateSuiteDefinition -> Maybe (HashMap Text Text)

-- | Create a value of <a>CreateSuiteDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionConfiguration:CreateSuiteDefinition'</a>,
--   <a>createSuiteDefinition_suiteDefinitionConfiguration</a> - Creates a
--   Device Advisor test suite with suite definition configuration.
--   
--   <a>$sel:tags:CreateSuiteDefinition'</a>,
--   <a>createSuiteDefinition_tags</a> - The tags to be attached to the
--   suite definition.
newCreateSuiteDefinition :: CreateSuiteDefinition

-- | Creates a Device Advisor test suite with suite definition
--   configuration.
createSuiteDefinition_suiteDefinitionConfiguration :: Lens' CreateSuiteDefinition (Maybe SuiteDefinitionConfiguration)

-- | The tags to be attached to the suite definition.
createSuiteDefinition_tags :: Lens' CreateSuiteDefinition (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newCreateSuiteDefinitionResponse</a> smart constructor.
data CreateSuiteDefinitionResponse
CreateSuiteDefinitionResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSuiteDefinitionResponse

-- | Creates a Device Advisor test suite with TimeStamp of when it was
--   created.
[$sel:createdAt:CreateSuiteDefinitionResponse'] :: CreateSuiteDefinitionResponse -> Maybe POSIX

-- | Creates a Device Advisor test suite with Amazon Resource name.
[$sel:suiteDefinitionArn:CreateSuiteDefinitionResponse'] :: CreateSuiteDefinitionResponse -> Maybe Text

-- | Creates a Device Advisor test suite with suite UUID.
[$sel:suiteDefinitionId:CreateSuiteDefinitionResponse'] :: CreateSuiteDefinitionResponse -> Maybe Text

-- | Creates a Device Advisor test suite with suite definition name.
[$sel:suiteDefinitionName:CreateSuiteDefinitionResponse'] :: CreateSuiteDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSuiteDefinitionResponse'] :: CreateSuiteDefinitionResponse -> Int

-- | Create a value of <a>CreateSuiteDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_createdAt</a> - Creates a Device
--   Advisor test suite with TimeStamp of when it was created.
--   
--   <a>$sel:suiteDefinitionArn:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_suiteDefinitionArn</a> - Creates a
--   Device Advisor test suite with Amazon Resource name.
--   
--   <a>$sel:suiteDefinitionId:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_suiteDefinitionId</a> - Creates a
--   Device Advisor test suite with suite UUID.
--   
--   <a>$sel:suiteDefinitionName:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_suiteDefinitionName</a> - Creates a
--   Device Advisor test suite with suite definition name.
--   
--   <a>$sel:httpStatus:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateSuiteDefinitionResponse :: Int -> CreateSuiteDefinitionResponse

-- | Creates a Device Advisor test suite with TimeStamp of when it was
--   created.
createSuiteDefinitionResponse_createdAt :: Lens' CreateSuiteDefinitionResponse (Maybe UTCTime)

-- | Creates a Device Advisor test suite with Amazon Resource name.
createSuiteDefinitionResponse_suiteDefinitionArn :: Lens' CreateSuiteDefinitionResponse (Maybe Text)

-- | Creates a Device Advisor test suite with suite UUID.
createSuiteDefinitionResponse_suiteDefinitionId :: Lens' CreateSuiteDefinitionResponse (Maybe Text)

-- | Creates a Device Advisor test suite with suite definition name.
createSuiteDefinitionResponse_suiteDefinitionName :: Lens' CreateSuiteDefinitionResponse (Maybe Text)

-- | The response's http status code.
createSuiteDefinitionResponse_httpStatus :: Lens' CreateSuiteDefinitionResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinitionResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinitionResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinitionResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinitionResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinitionResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.CreateSuiteDefinition.CreateSuiteDefinition


-- | Removes tags from an IoT Device Advisor resource.
module Amazonka.IoTDeviceAdvisor.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The resource ARN of an IoT Device Advisor resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | List of tag keys to remove from the IoT Device Advisor resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The resource ARN of an IoT Device
--   Advisor resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   List of tag keys to remove from the IoT Device Advisor resource.
newUntagResource :: Text -> UntagResource

-- | The resource ARN of an IoT Device Advisor resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | List of tag keys to remove from the IoT Device Advisor resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.UntagResource.UntagResource


-- | Updates a Device Advisor test suite.
module Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition

-- | <i>See:</i> <a>newUpdateSuiteDefinition</a> smart constructor.
data UpdateSuiteDefinition
UpdateSuiteDefinition' :: Maybe SuiteDefinitionConfiguration -> Text -> UpdateSuiteDefinition

-- | Updates a Device Advisor test suite with suite definition
--   configuration.
[$sel:suiteDefinitionConfiguration:UpdateSuiteDefinition'] :: UpdateSuiteDefinition -> Maybe SuiteDefinitionConfiguration

-- | Suite definition Id of the test suite to be updated.
[$sel:suiteDefinitionId:UpdateSuiteDefinition'] :: UpdateSuiteDefinition -> Text

-- | Create a value of <a>UpdateSuiteDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionConfiguration:UpdateSuiteDefinition'</a>,
--   <a>updateSuiteDefinition_suiteDefinitionConfiguration</a> - Updates a
--   Device Advisor test suite with suite definition configuration.
--   
--   <a>$sel:suiteDefinitionId:UpdateSuiteDefinition'</a>,
--   <a>updateSuiteDefinition_suiteDefinitionId</a> - Suite definition Id
--   of the test suite to be updated.
newUpdateSuiteDefinition :: Text -> UpdateSuiteDefinition

-- | Updates a Device Advisor test suite with suite definition
--   configuration.
updateSuiteDefinition_suiteDefinitionConfiguration :: Lens' UpdateSuiteDefinition (Maybe SuiteDefinitionConfiguration)

-- | Suite definition Id of the test suite to be updated.
updateSuiteDefinition_suiteDefinitionId :: Lens' UpdateSuiteDefinition Text

-- | <i>See:</i> <a>newUpdateSuiteDefinitionResponse</a> smart constructor.
data UpdateSuiteDefinitionResponse
UpdateSuiteDefinitionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateSuiteDefinitionResponse

-- | Timestamp of when the test suite was updated.
[$sel:lastUpdatedAt:UpdateSuiteDefinitionResponse'] :: UpdateSuiteDefinitionResponse -> Maybe POSIX

-- | Timestamp of when the test suite was created.
[$sel:createdAt:UpdateSuiteDefinitionResponse'] :: UpdateSuiteDefinitionResponse -> Maybe POSIX

-- | Amazon Resource name of the updated test suite.
[$sel:suiteDefinitionArn:UpdateSuiteDefinitionResponse'] :: UpdateSuiteDefinitionResponse -> Maybe Text

-- | Suite definition Id of the updated test suite.
[$sel:suiteDefinitionId:UpdateSuiteDefinitionResponse'] :: UpdateSuiteDefinitionResponse -> Maybe Text

-- | Suite definition version of the updated test suite.
[$sel:suiteDefinitionVersion:UpdateSuiteDefinitionResponse'] :: UpdateSuiteDefinitionResponse -> Maybe Text

-- | Suite definition name of the updated test suite.
[$sel:suiteDefinitionName:UpdateSuiteDefinitionResponse'] :: UpdateSuiteDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateSuiteDefinitionResponse'] :: UpdateSuiteDefinitionResponse -> Int

-- | Create a value of <a>UpdateSuiteDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_lastUpdatedAt</a> - Timestamp of when
--   the test suite was updated.
--   
--   <a>$sel:createdAt:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_createdAt</a> - Timestamp of when the
--   test suite was created.
--   
--   <a>$sel:suiteDefinitionArn:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionArn</a> - Amazon
--   Resource name of the updated test suite.
--   
--   <a>$sel:suiteDefinitionId:UpdateSuiteDefinition'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionId</a> - Suite
--   definition Id of the updated test suite.
--   
--   <a>$sel:suiteDefinitionVersion:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionVersion</a> - Suite
--   definition version of the updated test suite.
--   
--   <a>$sel:suiteDefinitionName:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionName</a> - Suite
--   definition name of the updated test suite.
--   
--   <a>$sel:httpStatus:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSuiteDefinitionResponse :: Int -> UpdateSuiteDefinitionResponse

-- | Timestamp of when the test suite was updated.
updateSuiteDefinitionResponse_lastUpdatedAt :: Lens' UpdateSuiteDefinitionResponse (Maybe UTCTime)

-- | Timestamp of when the test suite was created.
updateSuiteDefinitionResponse_createdAt :: Lens' UpdateSuiteDefinitionResponse (Maybe UTCTime)

-- | Amazon Resource name of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionArn :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | Suite definition Id of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionId :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | Suite definition version of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionVersion :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | Suite definition name of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionName :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | The response's http status code.
updateSuiteDefinitionResponse_httpStatus :: Lens' UpdateSuiteDefinitionResponse Int
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance GHC.Generics.Generic Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinitionResponse
instance GHC.Show.Show Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinitionResponse
instance GHC.Read.Read Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinitionResponse
instance GHC.Classes.Eq Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinitionResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinitionResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance Control.DeepSeq.NFData Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance Amazonka.Data.Path.ToPath Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition
instance Amazonka.Data.Query.ToQuery Amazonka.IoTDeviceAdvisor.UpdateSuiteDefinition.UpdateSuiteDefinition


module Amazonka.IoTDeviceAdvisor.Lens

-- | Suite definition Id of the test suite.
getSuiteRunReport_suiteDefinitionId :: Lens' GetSuiteRunReport Text

-- | Suite run Id of the test suite run.
getSuiteRunReport_suiteRunId :: Lens' GetSuiteRunReport Text

-- | Download URL of the qualification report.
getSuiteRunReportResponse_qualificationReportDownloadUrl :: Lens' GetSuiteRunReportResponse (Maybe Text)

-- | The response's http status code.
getSuiteRunReportResponse_httpStatus :: Lens' GetSuiteRunReportResponse Int

-- | Suite run configuration.
startSuiteRun_suiteRunConfiguration :: Lens' StartSuiteRun (Maybe SuiteRunConfiguration)

-- | Suite definition version of the test suite.
startSuiteRun_suiteDefinitionVersion :: Lens' StartSuiteRun (Maybe Text)

-- | The tags to be attached to the suite run.
startSuiteRun_tags :: Lens' StartSuiteRun (Maybe (HashMap Text Text))

-- | Suite definition Id of the test suite.
startSuiteRun_suiteDefinitionId :: Lens' StartSuiteRun Text

-- | Date (in Unix epoch time) when the suite run was created.
startSuiteRunResponse_createdAt :: Lens' StartSuiteRunResponse (Maybe UTCTime)

-- | Amazon resource name of the started suite run.
startSuiteRunResponse_suiteRunArn :: Lens' StartSuiteRunResponse (Maybe Text)

-- | Suite Run Id of the started suite run.
startSuiteRunResponse_suiteRunId :: Lens' StartSuiteRunResponse (Maybe Text)

-- | The response's http status code.
startSuiteRunResponse_httpStatus :: Lens' StartSuiteRunResponse Int

-- | A token used to get the next set of results.
listSuiteDefinitions_nextToken :: Lens' ListSuiteDefinitions (Maybe Text)

-- | The maximum number of results to return at once.
listSuiteDefinitions_maxResults :: Lens' ListSuiteDefinitions (Maybe Natural)

-- | An array of objects that provide summaries of information about the
--   suite definitions in the list.
listSuiteDefinitionsResponse_suiteDefinitionInformationList :: Lens' ListSuiteDefinitionsResponse (Maybe [SuiteDefinitionInformation])

-- | A token used to get the next set of results.
listSuiteDefinitionsResponse_nextToken :: Lens' ListSuiteDefinitionsResponse (Maybe Text)

-- | The response's http status code.
listSuiteDefinitionsResponse_httpStatus :: Lens' ListSuiteDefinitionsResponse Int

-- | The ARN of the IoT Device Advisor resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags attached to the IoT Device Advisor resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Suite definition Id of the test suite to be deleted.
deleteSuiteDefinition_suiteDefinitionId :: Lens' DeleteSuiteDefinition Text

-- | The response's http status code.
deleteSuiteDefinitionResponse_httpStatus :: Lens' DeleteSuiteDefinitionResponse Int

-- | Updates a Device Advisor test suite with suite definition
--   configuration.
updateSuiteDefinition_suiteDefinitionConfiguration :: Lens' UpdateSuiteDefinition (Maybe SuiteDefinitionConfiguration)

-- | Suite definition Id of the test suite to be updated.
updateSuiteDefinition_suiteDefinitionId :: Lens' UpdateSuiteDefinition Text

-- | Timestamp of when the test suite was updated.
updateSuiteDefinitionResponse_lastUpdatedAt :: Lens' UpdateSuiteDefinitionResponse (Maybe UTCTime)

-- | Timestamp of when the test suite was created.
updateSuiteDefinitionResponse_createdAt :: Lens' UpdateSuiteDefinitionResponse (Maybe UTCTime)

-- | Amazon Resource name of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionArn :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | Suite definition Id of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionId :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | Suite definition version of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionVersion :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | Suite definition name of the updated test suite.
updateSuiteDefinitionResponse_suiteDefinitionName :: Lens' UpdateSuiteDefinitionResponse (Maybe Text)

-- | The response's http status code.
updateSuiteDefinitionResponse_httpStatus :: Lens' UpdateSuiteDefinitionResponse Int

-- | Creates a Device Advisor test suite with suite definition
--   configuration.
createSuiteDefinition_suiteDefinitionConfiguration :: Lens' CreateSuiteDefinition (Maybe SuiteDefinitionConfiguration)

-- | The tags to be attached to the suite definition.
createSuiteDefinition_tags :: Lens' CreateSuiteDefinition (Maybe (HashMap Text Text))

-- | Creates a Device Advisor test suite with TimeStamp of when it was
--   created.
createSuiteDefinitionResponse_createdAt :: Lens' CreateSuiteDefinitionResponse (Maybe UTCTime)

-- | Creates a Device Advisor test suite with Amazon Resource name.
createSuiteDefinitionResponse_suiteDefinitionArn :: Lens' CreateSuiteDefinitionResponse (Maybe Text)

-- | Creates a Device Advisor test suite with suite UUID.
createSuiteDefinitionResponse_suiteDefinitionId :: Lens' CreateSuiteDefinitionResponse (Maybe Text)

-- | Creates a Device Advisor test suite with suite definition name.
createSuiteDefinitionResponse_suiteDefinitionName :: Lens' CreateSuiteDefinitionResponse (Maybe Text)

-- | The response's http status code.
createSuiteDefinitionResponse_httpStatus :: Lens' CreateSuiteDefinitionResponse Int

-- | Suite definition Id of the test suite run to be stopped.
stopSuiteRun_suiteDefinitionId :: Lens' StopSuiteRun Text

-- | Suite run Id of the test suite run to be stopped.
stopSuiteRun_suiteRunId :: Lens' StopSuiteRun Text

-- | The response's http status code.
stopSuiteRunResponse_httpStatus :: Lens' StopSuiteRunResponse Int

-- | Suite definition version of the test suite to get.
getSuiteDefinition_suiteDefinitionVersion :: Lens' GetSuiteDefinition (Maybe Text)

-- | Suite definition Id of the test suite to get.
getSuiteDefinition_suiteDefinitionId :: Lens' GetSuiteDefinition Text

-- | Date (in Unix epoch time) when the suite definition was created.
getSuiteDefinitionResponse_createdAt :: Lens' GetSuiteDefinitionResponse (Maybe UTCTime)

-- | Suite configuration of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionConfiguration :: Lens' GetSuiteDefinitionResponse (Maybe SuiteDefinitionConfiguration)

-- | The ARN of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionArn :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Date (in Unix epoch time) when the suite definition was last modified.
getSuiteDefinitionResponse_lastModifiedAt :: Lens' GetSuiteDefinitionResponse (Maybe UTCTime)

-- | Suite definition Id of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionId :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Suite definition version of the suite definition.
getSuiteDefinitionResponse_suiteDefinitionVersion :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Latest suite definition version of the suite definition.
getSuiteDefinitionResponse_latestVersion :: Lens' GetSuiteDefinitionResponse (Maybe Text)

-- | Tags attached to the suite definition.
getSuiteDefinitionResponse_tags :: Lens' GetSuiteDefinitionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSuiteDefinitionResponse_httpStatus :: Lens' GetSuiteDefinitionResponse Int

-- | The resource ARN of an IoT Device Advisor resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to be attached to the IoT Device Advisor resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The resource ARN of an IoT Device Advisor resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | List of tag keys to remove from the IoT Device Advisor resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | Lists the test suite runs of the specified test suite based on suite
--   definition Id.
listSuiteRuns_suiteDefinitionId :: Lens' ListSuiteRuns (Maybe Text)

-- | Must be passed along with suiteDefinitionId. Lists the test suite runs
--   of the specified test suite based on suite definition version.
listSuiteRuns_suiteDefinitionVersion :: Lens' ListSuiteRuns (Maybe Text)

-- | A token to retrieve the next set of results.
listSuiteRuns_nextToken :: Lens' ListSuiteRuns (Maybe Text)

-- | The maximum number of results to return at once.
listSuiteRuns_maxResults :: Lens' ListSuiteRuns (Maybe Natural)

-- | A token to retrieve the next set of results.
listSuiteRunsResponse_nextToken :: Lens' ListSuiteRunsResponse (Maybe Text)

-- | An array of objects that provide summaries of information about the
--   suite runs in the list.
listSuiteRunsResponse_suiteRunsList :: Lens' ListSuiteRunsResponse (Maybe [SuiteRunInformation])

-- | The response's http status code.
listSuiteRunsResponse_httpStatus :: Lens' ListSuiteRunsResponse Int

-- | Suite definition Id for the test suite run.
getSuiteRun_suiteDefinitionId :: Lens' GetSuiteRun Text

-- | Suite run Id for the test suite run.
getSuiteRun_suiteRunId :: Lens' GetSuiteRun Text

-- | Status for the test suite run.
getSuiteRunResponse_status :: Lens' GetSuiteRunResponse (Maybe SuiteRunStatus)

-- | Suite run configuration for the test suite run.
getSuiteRunResponse_suiteRunConfiguration :: Lens' GetSuiteRunResponse (Maybe SuiteRunConfiguration)

-- | Date (in Unix epoch time) when the test suite run was started.
getSuiteRunResponse_startTime :: Lens' GetSuiteRunResponse (Maybe UTCTime)

-- | Suite definition Id for the test suite run.
getSuiteRunResponse_suiteDefinitionId :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Suite definition version for the test suite run.
getSuiteRunResponse_suiteDefinitionVersion :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Error reason for any test suite run failure.
getSuiteRunResponse_errorReason :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Test results for the test suite run.
getSuiteRunResponse_testResult :: Lens' GetSuiteRunResponse (Maybe TestResult)

-- | Date (in Unix epoch time) when the test suite run ended.
getSuiteRunResponse_endTime :: Lens' GetSuiteRunResponse (Maybe UTCTime)

-- | The ARN of the suite run.
getSuiteRunResponse_suiteRunArn :: Lens' GetSuiteRunResponse (Maybe Text)

-- | Suite run Id for the test suite run.
getSuiteRunResponse_suiteRunId :: Lens' GetSuiteRunResponse (Maybe Text)

-- | The tags attached to the suite run.
getSuiteRunResponse_tags :: Lens' GetSuiteRunResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSuiteRunResponse_httpStatus :: Lens' GetSuiteRunResponse Int

-- | Lists devices certificate arn
deviceUnderTest_certificateArn :: Lens' DeviceUnderTest (Maybe Text)

-- | Lists devices thing arn
deviceUnderTest_thingArn :: Lens' DeviceUnderTest (Maybe Text)

-- | Tests under Group Result.
groupResult_tests :: Lens' GroupResult (Maybe [TestCaseRun])

-- | Group result Id.
groupResult_groupId :: Lens' GroupResult (Maybe Text)

-- | Group Result Name.
groupResult_groupName :: Lens' GroupResult (Maybe Text)

-- | Gets Suite Definition Configuration name.
suiteDefinitionConfiguration_suiteDefinitionName :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Gets the tests intended for qualification in a suite.
suiteDefinitionConfiguration_intendedForQualification :: Lens' SuiteDefinitionConfiguration (Maybe Bool)

-- | Gets device permission arn.
suiteDefinitionConfiguration_devicePermissionRoleArn :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Gets the devices configured.
suiteDefinitionConfiguration_devices :: Lens' SuiteDefinitionConfiguration (Maybe [DeviceUnderTest])

-- | Gets test suite root group.
suiteDefinitionConfiguration_rootGroup :: Lens' SuiteDefinitionConfiguration (Maybe Text)

-- | Date (in Unix epoch time) when the test suite was created.
suiteDefinitionInformation_createdAt :: Lens' SuiteDefinitionInformation (Maybe UTCTime)

-- | Specifies the devices under test for the test suite.
suiteDefinitionInformation_defaultDevices :: Lens' SuiteDefinitionInformation (Maybe [DeviceUnderTest])

-- | Suite definition Id of the test suite.
suiteDefinitionInformation_suiteDefinitionId :: Lens' SuiteDefinitionInformation (Maybe Text)

-- | Suite name of the test suite.
suiteDefinitionInformation_suiteDefinitionName :: Lens' SuiteDefinitionInformation (Maybe Text)

-- | Specifies if the test suite is intended for qualification.
suiteDefinitionInformation_intendedForQualification :: Lens' SuiteDefinitionInformation (Maybe Bool)

-- | Gets the primary device for suite run.
suiteRunConfiguration_primaryDevice :: Lens' SuiteRunConfiguration (Maybe DeviceUnderTest)

-- | Gets test case list.
suiteRunConfiguration_selectedTestList :: Lens' SuiteRunConfiguration (Maybe [Text])

-- | Status of the suite run.
suiteRunInformation_status :: Lens' SuiteRunInformation (Maybe SuiteRunStatus)

-- | Date (in Unix epoch time) when the suite run was created.
suiteRunInformation_createdAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Number of test cases that passed in the suite run.
suiteRunInformation_passed :: Lens' SuiteRunInformation (Maybe Natural)

-- | Suite definition Id of the suite run.
suiteRunInformation_suiteDefinitionId :: Lens' SuiteRunInformation (Maybe Text)

-- | Suite definition version of the suite run.
suiteRunInformation_suiteDefinitionVersion :: Lens' SuiteRunInformation (Maybe Text)

-- | Date (in Unix epoch time) when the suite run was started.
suiteRunInformation_startedAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Suite definition name of the suite run.
suiteRunInformation_suiteDefinitionName :: Lens' SuiteRunInformation (Maybe Text)

-- | Date (in Unix epoch time) when the suite run ended.
suiteRunInformation_endAt :: Lens' SuiteRunInformation (Maybe UTCTime)

-- | Suite run Id of the suite run.
suiteRunInformation_suiteRunId :: Lens' SuiteRunInformation (Maybe Text)

-- | Number of test cases that failed in the suite run.
suiteRunInformation_failed :: Lens' SuiteRunInformation (Maybe Natural)

-- | Provides test case run status.
testCaseRun_status :: Lens' TestCaseRun (Maybe Status)

-- | Provides test case run log Url.
testCaseRun_logUrl :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run start time.
testCaseRun_startTime :: Lens' TestCaseRun (Maybe UTCTime)

-- | Provides test case run Id.
testCaseRun_testCaseRunId :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run warnings.
testCaseRun_warnings :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run end time.
testCaseRun_endTime :: Lens' TestCaseRun (Maybe UTCTime)

-- | Provides test case run definition Id.
testCaseRun_testCaseDefinitionId :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run failure result.
testCaseRun_failure :: Lens' TestCaseRun (Maybe Text)

-- | Provides test case run definition Name.
testCaseRun_testCaseDefinitionName :: Lens' TestCaseRun (Maybe Text)

-- | Show each group of test results.
testResult_groups :: Lens' TestResult (Maybe [GroupResult])


module Amazonka.IoTDeviceAdvisor.Waiters


-- | Derived from API version <tt>2020-09-18</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS IoT Core Device Advisor is a cloud-based, fully managed test
--   capability for validating IoT devices during device software
--   development. Device Advisor provides pre-built tests that you can use
--   to validate IoT devices for reliable and secure connectivity with AWS
--   IoT Core before deploying devices to production. By using Device
--   Advisor, you can confirm that your devices can connect to AWS IoT
--   Core, follow security best practices and, if applicable, receive
--   software updates from IoT Device Management. You can also download
--   signed qualification reports to submit to the AWS Partner Network to
--   get your device qualified for the AWS Partner Device Catalog without
--   the need to send your device in and wait for it to be tested.
module Amazonka.IoTDeviceAdvisor

-- | API version <tt>2020-09-18</tt> of the Amazon IoT Core Device Advisor
--   SDK configuration.
defaultService :: Service

-- | Sends invalid request exception.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Sends Conflict Exception.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Sends Internal Failure Exception.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Sends Resource Not Found Exception.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetSuiteRunReport</a> smart constructor.
data GetSuiteRunReport
GetSuiteRunReport' :: Text -> Text -> GetSuiteRunReport

-- | Create a value of <a>GetSuiteRunReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:GetSuiteRunReport'</a>,
--   <a>getSuiteRunReport_suiteDefinitionId</a> - Suite definition Id of
--   the test suite.
--   
--   <a>$sel:suiteRunId:GetSuiteRunReport'</a>,
--   <a>getSuiteRunReport_suiteRunId</a> - Suite run Id of the test suite
--   run.
newGetSuiteRunReport :: Text -> Text -> GetSuiteRunReport

-- | <i>See:</i> <a>newGetSuiteRunReportResponse</a> smart constructor.
data GetSuiteRunReportResponse
GetSuiteRunReportResponse' :: Maybe Text -> Int -> GetSuiteRunReportResponse

-- | Create a value of <a>GetSuiteRunReportResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationReportDownloadUrl:GetSuiteRunReportResponse'</a>,
--   <a>getSuiteRunReportResponse_qualificationReportDownloadUrl</a> -
--   Download URL of the qualification report.
--   
--   <a>$sel:httpStatus:GetSuiteRunReportResponse'</a>,
--   <a>getSuiteRunReportResponse_httpStatus</a> - The response's http
--   status code.
newGetSuiteRunReportResponse :: Int -> GetSuiteRunReportResponse

-- | <i>See:</i> <a>newStartSuiteRun</a> smart constructor.
data StartSuiteRun
StartSuiteRun' :: Maybe SuiteRunConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> StartSuiteRun

-- | Create a value of <a>StartSuiteRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteRunConfiguration:StartSuiteRun'</a>,
--   <a>startSuiteRun_suiteRunConfiguration</a> - Suite run configuration.
--   
--   <a>$sel:suiteDefinitionVersion:StartSuiteRun'</a>,
--   <a>startSuiteRun_suiteDefinitionVersion</a> - Suite definition version
--   of the test suite.
--   
--   <a>$sel:tags:StartSuiteRun'</a>, <a>startSuiteRun_tags</a> - The tags
--   to be attached to the suite run.
--   
--   <a>$sel:suiteDefinitionId:StartSuiteRun'</a>,
--   <a>startSuiteRun_suiteDefinitionId</a> - Suite definition Id of the
--   test suite.
newStartSuiteRun :: Text -> StartSuiteRun

-- | <i>See:</i> <a>newStartSuiteRunResponse</a> smart constructor.
data StartSuiteRunResponse
StartSuiteRunResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> StartSuiteRunResponse

-- | Create a value of <a>StartSuiteRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_createdAt</a> - Date (in Unix epoch time)
--   when the suite run was created.
--   
--   <a>$sel:suiteRunArn:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_suiteRunArn</a> - Amazon resource name of the
--   started suite run.
--   
--   <a>$sel:suiteRunId:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_suiteRunId</a> - Suite Run Id of the started
--   suite run.
--   
--   <a>$sel:httpStatus:StartSuiteRunResponse'</a>,
--   <a>startSuiteRunResponse_httpStatus</a> - The response's http status
--   code.
newStartSuiteRunResponse :: Int -> StartSuiteRunResponse

-- | <i>See:</i> <a>newListSuiteDefinitions</a> smart constructor.
data ListSuiteDefinitions
ListSuiteDefinitions' :: Maybe Text -> Maybe Natural -> ListSuiteDefinitions

-- | Create a value of <a>ListSuiteDefinitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuiteDefinitions'</a>,
--   <a>listSuiteDefinitions_nextToken</a> - A token used to get the next
--   set of results.
--   
--   <a>$sel:maxResults:ListSuiteDefinitions'</a>,
--   <a>listSuiteDefinitions_maxResults</a> - The maximum number of results
--   to return at once.
newListSuiteDefinitions :: ListSuiteDefinitions

-- | <i>See:</i> <a>newListSuiteDefinitionsResponse</a> smart constructor.
data ListSuiteDefinitionsResponse
ListSuiteDefinitionsResponse' :: Maybe [SuiteDefinitionInformation] -> Maybe Text -> Int -> ListSuiteDefinitionsResponse

-- | Create a value of <a>ListSuiteDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:suiteDefinitionInformationList:ListSuiteDefinitionsResponse'</a>,
--   <a>listSuiteDefinitionsResponse_suiteDefinitionInformationList</a> -
--   An array of objects that provide summaries of information about the
--   suite definitions in the list.
--   
--   <a>$sel:nextToken:ListSuiteDefinitions'</a>,
--   <a>listSuiteDefinitionsResponse_nextToken</a> - A token used to get
--   the next set of results.
--   
--   <a>$sel:httpStatus:ListSuiteDefinitionsResponse'</a>,
--   <a>listSuiteDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListSuiteDefinitionsResponse :: Int -> ListSuiteDefinitionsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the IoT Device
--   Advisor resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags attached to the IoT
--   Device Advisor resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteSuiteDefinition</a> smart constructor.
data DeleteSuiteDefinition
DeleteSuiteDefinition' :: Text -> DeleteSuiteDefinition

-- | Create a value of <a>DeleteSuiteDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:DeleteSuiteDefinition'</a>,
--   <a>deleteSuiteDefinition_suiteDefinitionId</a> - Suite definition Id
--   of the test suite to be deleted.
newDeleteSuiteDefinition :: Text -> DeleteSuiteDefinition

-- | <i>See:</i> <a>newDeleteSuiteDefinitionResponse</a> smart constructor.
data DeleteSuiteDefinitionResponse
DeleteSuiteDefinitionResponse' :: Int -> DeleteSuiteDefinitionResponse

-- | Create a value of <a>DeleteSuiteDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSuiteDefinitionResponse'</a>,
--   <a>deleteSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSuiteDefinitionResponse :: Int -> DeleteSuiteDefinitionResponse

-- | <i>See:</i> <a>newUpdateSuiteDefinition</a> smart constructor.
data UpdateSuiteDefinition
UpdateSuiteDefinition' :: Maybe SuiteDefinitionConfiguration -> Text -> UpdateSuiteDefinition

-- | Create a value of <a>UpdateSuiteDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionConfiguration:UpdateSuiteDefinition'</a>,
--   <a>updateSuiteDefinition_suiteDefinitionConfiguration</a> - Updates a
--   Device Advisor test suite with suite definition configuration.
--   
--   <a>$sel:suiteDefinitionId:UpdateSuiteDefinition'</a>,
--   <a>updateSuiteDefinition_suiteDefinitionId</a> - Suite definition Id
--   of the test suite to be updated.
newUpdateSuiteDefinition :: Text -> UpdateSuiteDefinition

-- | <i>See:</i> <a>newUpdateSuiteDefinitionResponse</a> smart constructor.
data UpdateSuiteDefinitionResponse
UpdateSuiteDefinitionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateSuiteDefinitionResponse

-- | Create a value of <a>UpdateSuiteDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_lastUpdatedAt</a> - Timestamp of when
--   the test suite was updated.
--   
--   <a>$sel:createdAt:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_createdAt</a> - Timestamp of when the
--   test suite was created.
--   
--   <a>$sel:suiteDefinitionArn:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionArn</a> - Amazon
--   Resource name of the updated test suite.
--   
--   <a>$sel:suiteDefinitionId:UpdateSuiteDefinition'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionId</a> - Suite
--   definition Id of the updated test suite.
--   
--   <a>$sel:suiteDefinitionVersion:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionVersion</a> - Suite
--   definition version of the updated test suite.
--   
--   <a>$sel:suiteDefinitionName:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_suiteDefinitionName</a> - Suite
--   definition name of the updated test suite.
--   
--   <a>$sel:httpStatus:UpdateSuiteDefinitionResponse'</a>,
--   <a>updateSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSuiteDefinitionResponse :: Int -> UpdateSuiteDefinitionResponse

-- | <i>See:</i> <a>newCreateSuiteDefinition</a> smart constructor.
data CreateSuiteDefinition
CreateSuiteDefinition' :: Maybe SuiteDefinitionConfiguration -> Maybe (HashMap Text Text) -> CreateSuiteDefinition

-- | Create a value of <a>CreateSuiteDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionConfiguration:CreateSuiteDefinition'</a>,
--   <a>createSuiteDefinition_suiteDefinitionConfiguration</a> - Creates a
--   Device Advisor test suite with suite definition configuration.
--   
--   <a>$sel:tags:CreateSuiteDefinition'</a>,
--   <a>createSuiteDefinition_tags</a> - The tags to be attached to the
--   suite definition.
newCreateSuiteDefinition :: CreateSuiteDefinition

-- | <i>See:</i> <a>newCreateSuiteDefinitionResponse</a> smart constructor.
data CreateSuiteDefinitionResponse
CreateSuiteDefinitionResponse' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSuiteDefinitionResponse

-- | Create a value of <a>CreateSuiteDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_createdAt</a> - Creates a Device
--   Advisor test suite with TimeStamp of when it was created.
--   
--   <a>$sel:suiteDefinitionArn:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_suiteDefinitionArn</a> - Creates a
--   Device Advisor test suite with Amazon Resource name.
--   
--   <a>$sel:suiteDefinitionId:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_suiteDefinitionId</a> - Creates a
--   Device Advisor test suite with suite UUID.
--   
--   <a>$sel:suiteDefinitionName:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_suiteDefinitionName</a> - Creates a
--   Device Advisor test suite with suite definition name.
--   
--   <a>$sel:httpStatus:CreateSuiteDefinitionResponse'</a>,
--   <a>createSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateSuiteDefinitionResponse :: Int -> CreateSuiteDefinitionResponse

-- | <i>See:</i> <a>newStopSuiteRun</a> smart constructor.
data StopSuiteRun
StopSuiteRun' :: Text -> Text -> StopSuiteRun

-- | Create a value of <a>StopSuiteRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:StopSuiteRun'</a>,
--   <a>stopSuiteRun_suiteDefinitionId</a> - Suite definition Id of the
--   test suite run to be stopped.
--   
--   <a>$sel:suiteRunId:StopSuiteRun'</a>, <a>stopSuiteRun_suiteRunId</a> -
--   Suite run Id of the test suite run to be stopped.
newStopSuiteRun :: Text -> Text -> StopSuiteRun

-- | <i>See:</i> <a>newStopSuiteRunResponse</a> smart constructor.
data StopSuiteRunResponse
StopSuiteRunResponse' :: Int -> StopSuiteRunResponse

-- | Create a value of <a>StopSuiteRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopSuiteRunResponse'</a>,
--   <a>stopSuiteRunResponse_httpStatus</a> - The response's http status
--   code.
newStopSuiteRunResponse :: Int -> StopSuiteRunResponse

-- | <i>See:</i> <a>newGetSuiteDefinition</a> smart constructor.
data GetSuiteDefinition
GetSuiteDefinition' :: Maybe Text -> Text -> GetSuiteDefinition

-- | Create a value of <a>GetSuiteDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionVersion:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinition_suiteDefinitionVersion</a> - Suite definition
--   version of the test suite to get.
--   
--   <a>$sel:suiteDefinitionId:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinition_suiteDefinitionId</a> - Suite definition Id of
--   the test suite to get.
newGetSuiteDefinition :: Text -> GetSuiteDefinition

-- | <i>See:</i> <a>newGetSuiteDefinitionResponse</a> smart constructor.
data GetSuiteDefinitionResponse
GetSuiteDefinitionResponse' :: Maybe POSIX -> Maybe SuiteDefinitionConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetSuiteDefinitionResponse

-- | Create a value of <a>GetSuiteDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_createdAt</a> - Date (in Unix epoch
--   time) when the suite definition was created.
--   
--   <a>$sel:suiteDefinitionConfiguration:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionConfiguration</a> - Suite
--   configuration of the suite definition.
--   
--   <a>$sel:suiteDefinitionArn:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionArn</a> - The ARN of the
--   suite definition.
--   
--   <a>$sel:lastModifiedAt:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_lastModifiedAt</a> - Date (in Unix epoch
--   time) when the suite definition was last modified.
--   
--   <a>$sel:suiteDefinitionId:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionId</a> - Suite definition
--   Id of the suite definition.
--   
--   <a>$sel:suiteDefinitionVersion:GetSuiteDefinition'</a>,
--   <a>getSuiteDefinitionResponse_suiteDefinitionVersion</a> - Suite
--   definition version of the suite definition.
--   
--   <a>$sel:latestVersion:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_latestVersion</a> - Latest suite
--   definition version of the suite definition.
--   
--   <a>$sel:tags:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_tags</a> - Tags attached to the suite
--   definition.
--   
--   <a>$sel:httpStatus:GetSuiteDefinitionResponse'</a>,
--   <a>getSuiteDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetSuiteDefinitionResponse :: Int -> GetSuiteDefinitionResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The resource ARN of an IoT Device Advisor resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   be attached to the IoT Device Advisor resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The resource ARN of an IoT Device
--   Advisor resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   List of tag keys to remove from the IoT Device Advisor resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newListSuiteRuns</a> smart constructor.
data ListSuiteRuns
ListSuiteRuns' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListSuiteRuns

-- | Create a value of <a>ListSuiteRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:ListSuiteRuns'</a>,
--   <a>listSuiteRuns_suiteDefinitionId</a> - Lists the test suite runs of
--   the specified test suite based on suite definition Id.
--   
--   <a>$sel:suiteDefinitionVersion:ListSuiteRuns'</a>,
--   <a>listSuiteRuns_suiteDefinitionVersion</a> - Must be passed along
--   with suiteDefinitionId. Lists the test suite runs of the specified
--   test suite based on suite definition version.
--   
--   <a>$sel:nextToken:ListSuiteRuns'</a>, <a>listSuiteRuns_nextToken</a> -
--   A token to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListSuiteRuns'</a>, <a>listSuiteRuns_maxResults</a>
--   - The maximum number of results to return at once.
newListSuiteRuns :: ListSuiteRuns

-- | <i>See:</i> <a>newListSuiteRunsResponse</a> smart constructor.
data ListSuiteRunsResponse
ListSuiteRunsResponse' :: Maybe Text -> Maybe [SuiteRunInformation] -> Int -> ListSuiteRunsResponse

-- | Create a value of <a>ListSuiteRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuiteRuns'</a>,
--   <a>listSuiteRunsResponse_nextToken</a> - A token to retrieve the next
--   set of results.
--   
--   <a>$sel:suiteRunsList:ListSuiteRunsResponse'</a>,
--   <a>listSuiteRunsResponse_suiteRunsList</a> - An array of objects that
--   provide summaries of information about the suite runs in the list.
--   
--   <a>$sel:httpStatus:ListSuiteRunsResponse'</a>,
--   <a>listSuiteRunsResponse_httpStatus</a> - The response's http status
--   code.
newListSuiteRunsResponse :: Int -> ListSuiteRunsResponse

-- | <i>See:</i> <a>newGetSuiteRun</a> smart constructor.
data GetSuiteRun
GetSuiteRun' :: Text -> Text -> GetSuiteRun

-- | Create a value of <a>GetSuiteRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionId:GetSuiteRun'</a>,
--   <a>getSuiteRun_suiteDefinitionId</a> - Suite definition Id for the
--   test suite run.
--   
--   <a>$sel:suiteRunId:GetSuiteRun'</a>, <a>getSuiteRun_suiteRunId</a> -
--   Suite run Id for the test suite run.
newGetSuiteRun :: Text -> Text -> GetSuiteRun

-- | <i>See:</i> <a>newGetSuiteRunResponse</a> smart constructor.
data GetSuiteRunResponse
GetSuiteRunResponse' :: Maybe SuiteRunStatus -> Maybe SuiteRunConfiguration -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TestResult -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetSuiteRunResponse

-- | Create a value of <a>GetSuiteRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_status</a> - Status for the test suite run.
--   
--   <a>$sel:suiteRunConfiguration:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_suiteRunConfiguration</a> - Suite run
--   configuration for the test suite run.
--   
--   <a>$sel:startTime:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_startTime</a> - Date (in Unix epoch time) when
--   the test suite run was started.
--   
--   <a>$sel:suiteDefinitionId:GetSuiteRun'</a>,
--   <a>getSuiteRunResponse_suiteDefinitionId</a> - Suite definition Id for
--   the test suite run.
--   
--   <a>$sel:suiteDefinitionVersion:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_suiteDefinitionVersion</a> - Suite definition
--   version for the test suite run.
--   
--   <a>$sel:errorReason:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_errorReason</a> - Error reason for any test
--   suite run failure.
--   
--   <a>$sel:testResult:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_testResult</a> - Test results for the test
--   suite run.
--   
--   <a>$sel:endTime:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_endTime</a> - Date (in Unix epoch time) when
--   the test suite run ended.
--   
--   <a>$sel:suiteRunArn:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_suiteRunArn</a> - The ARN of the suite run.
--   
--   <a>$sel:suiteRunId:GetSuiteRun'</a>,
--   <a>getSuiteRunResponse_suiteRunId</a> - Suite run Id for the test
--   suite run.
--   
--   <a>$sel:tags:GetSuiteRunResponse'</a>, <a>getSuiteRunResponse_tags</a>
--   - The tags attached to the suite run.
--   
--   <a>$sel:httpStatus:GetSuiteRunResponse'</a>,
--   <a>getSuiteRunResponse_httpStatus</a> - The response's http status
--   code.
newGetSuiteRunResponse :: Int -> GetSuiteRunResponse
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_CANCELED :: Status
pattern Status_ERROR :: Status
pattern Status_FAIL :: Status
pattern Status_PASS :: Status
pattern Status_PASS_WITH_WARNINGS :: Status
pattern Status_PENDING :: Status
pattern Status_RUNNING :: Status
pattern Status_STOPPED :: Status
pattern Status_STOPPING :: Status
newtype SuiteRunStatus
SuiteRunStatus' :: Text -> SuiteRunStatus
[fromSuiteRunStatus] :: SuiteRunStatus -> Text
pattern SuiteRunStatus_CANCELED :: SuiteRunStatus
pattern SuiteRunStatus_ERROR :: SuiteRunStatus
pattern SuiteRunStatus_FAIL :: SuiteRunStatus
pattern SuiteRunStatus_PASS :: SuiteRunStatus
pattern SuiteRunStatus_PASS_WITH_WARNINGS :: SuiteRunStatus
pattern SuiteRunStatus_PENDING :: SuiteRunStatus
pattern SuiteRunStatus_RUNNING :: SuiteRunStatus
pattern SuiteRunStatus_STOPPED :: SuiteRunStatus
pattern SuiteRunStatus_STOPPING :: SuiteRunStatus

-- | Lists all the devices under test
--   
--   <i>See:</i> <a>newDeviceUnderTest</a> smart constructor.
data DeviceUnderTest
DeviceUnderTest' :: Maybe Text -> Maybe Text -> DeviceUnderTest

-- | Create a value of <a>DeviceUnderTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:DeviceUnderTest'</a>,
--   <a>deviceUnderTest_certificateArn</a> - Lists devices certificate arn
--   
--   <a>$sel:thingArn:DeviceUnderTest'</a>, <a>deviceUnderTest_thingArn</a>
--   - Lists devices thing arn
newDeviceUnderTest :: DeviceUnderTest

-- | Show Group Result.
--   
--   <i>See:</i> <a>newGroupResult</a> smart constructor.
data GroupResult
GroupResult' :: Maybe [TestCaseRun] -> Maybe Text -> Maybe Text -> GroupResult

-- | Create a value of <a>GroupResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tests:GroupResult'</a>, <a>groupResult_tests</a> - Tests under
--   Group Result.
--   
--   <a>$sel:groupId:GroupResult'</a>, <a>groupResult_groupId</a> - Group
--   result Id.
--   
--   <a>$sel:groupName:GroupResult'</a>, <a>groupResult_groupName</a> -
--   Group Result Name.
newGroupResult :: GroupResult

-- | Gets Suite Definition Configuration.
--   
--   <i>See:</i> <a>newSuiteDefinitionConfiguration</a> smart constructor.
data SuiteDefinitionConfiguration
SuiteDefinitionConfiguration' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [DeviceUnderTest] -> Maybe Text -> SuiteDefinitionConfiguration

-- | Create a value of <a>SuiteDefinitionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suiteDefinitionName:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_suiteDefinitionName</a> - Gets Suite
--   Definition Configuration name.
--   
--   <a>$sel:intendedForQualification:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_intendedForQualification</a> - Gets
--   the tests intended for qualification in a suite.
--   
--   <a>$sel:devicePermissionRoleArn:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_devicePermissionRoleArn</a> - Gets
--   device permission arn.
--   
--   <a>$sel:devices:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_devices</a> - Gets the devices
--   configured.
--   
--   <a>$sel:rootGroup:SuiteDefinitionConfiguration'</a>,
--   <a>suiteDefinitionConfiguration_rootGroup</a> - Gets test suite root
--   group.
newSuiteDefinitionConfiguration :: SuiteDefinitionConfiguration

-- | Information about the suite definition.
--   
--   <i>See:</i> <a>newSuiteDefinitionInformation</a> smart constructor.
data SuiteDefinitionInformation
SuiteDefinitionInformation' :: Maybe POSIX -> Maybe [DeviceUnderTest] -> Maybe Text -> Maybe Text -> Maybe Bool -> SuiteDefinitionInformation

-- | Create a value of <a>SuiteDefinitionInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_createdAt</a> - Date (in Unix epoch
--   time) when the test suite was created.
--   
--   <a>$sel:defaultDevices:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_defaultDevices</a> - Specifies the
--   devices under test for the test suite.
--   
--   <a>$sel:suiteDefinitionId:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_suiteDefinitionId</a> - Suite definition
--   Id of the test suite.
--   
--   <a>$sel:suiteDefinitionName:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_suiteDefinitionName</a> - Suite name of
--   the test suite.
--   
--   <a>$sel:intendedForQualification:SuiteDefinitionInformation'</a>,
--   <a>suiteDefinitionInformation_intendedForQualification</a> - Specifies
--   if the test suite is intended for qualification.
newSuiteDefinitionInformation :: SuiteDefinitionInformation

-- | Gets suite run configuration.
--   
--   <i>See:</i> <a>newSuiteRunConfiguration</a> smart constructor.
data SuiteRunConfiguration
SuiteRunConfiguration' :: Maybe DeviceUnderTest -> Maybe [Text] -> SuiteRunConfiguration

-- | Create a value of <a>SuiteRunConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:primaryDevice:SuiteRunConfiguration'</a>,
--   <a>suiteRunConfiguration_primaryDevice</a> - Gets the primary device
--   for suite run.
--   
--   <a>$sel:selectedTestList:SuiteRunConfiguration'</a>,
--   <a>suiteRunConfiguration_selectedTestList</a> - Gets test case list.
newSuiteRunConfiguration :: SuiteRunConfiguration

-- | Information about the suite run.
--   
--   <i>See:</i> <a>newSuiteRunInformation</a> smart constructor.
data SuiteRunInformation
SuiteRunInformation' :: Maybe SuiteRunStatus -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> SuiteRunInformation

-- | Create a value of <a>SuiteRunInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_status</a> - Status of the suite run.
--   
--   <a>$sel:createdAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_createdAt</a> - Date (in Unix epoch time) when
--   the suite run was created.
--   
--   <a>$sel:passed:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_passed</a> - Number of test cases that passed
--   in the suite run.
--   
--   <a>$sel:suiteDefinitionId:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionId</a> - Suite definition Id of
--   the suite run.
--   
--   <a>$sel:suiteDefinitionVersion:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionVersion</a> - Suite definition
--   version of the suite run.
--   
--   <a>$sel:startedAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_startedAt</a> - Date (in Unix epoch time) when
--   the suite run was started.
--   
--   <a>$sel:suiteDefinitionName:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteDefinitionName</a> - Suite definition name
--   of the suite run.
--   
--   <a>$sel:endAt:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_endAt</a> - Date (in Unix epoch time) when the
--   suite run ended.
--   
--   <a>$sel:suiteRunId:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_suiteRunId</a> - Suite run Id of the suite run.
--   
--   <a>$sel:failed:SuiteRunInformation'</a>,
--   <a>suiteRunInformation_failed</a> - Number of test cases that failed
--   in the suite run.
newSuiteRunInformation :: SuiteRunInformation

-- | Provides test case run.
--   
--   <i>See:</i> <a>newTestCaseRun</a> smart constructor.
data TestCaseRun
TestCaseRun' :: Maybe Status -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> TestCaseRun

-- | Create a value of <a>TestCaseRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestCaseRun'</a>, <a>testCaseRun_status</a> - Provides
--   test case run status.
--   
--   <a>$sel:logUrl:TestCaseRun'</a>, <a>testCaseRun_logUrl</a> - Provides
--   test case run log Url.
--   
--   <a>$sel:startTime:TestCaseRun'</a>, <a>testCaseRun_startTime</a> -
--   Provides test case run start time.
--   
--   <a>$sel:testCaseRunId:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseRunId</a> - Provides test case run Id.
--   
--   <a>$sel:warnings:TestCaseRun'</a>, <a>testCaseRun_warnings</a> -
--   Provides test case run warnings.
--   
--   <a>$sel:endTime:TestCaseRun'</a>, <a>testCaseRun_endTime</a> -
--   Provides test case run end time.
--   
--   <a>$sel:testCaseDefinitionId:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseDefinitionId</a> - Provides test case run
--   definition Id.
--   
--   <a>$sel:failure:TestCaseRun'</a>, <a>testCaseRun_failure</a> -
--   Provides test case run failure result.
--   
--   <a>$sel:testCaseDefinitionName:TestCaseRun'</a>,
--   <a>testCaseRun_testCaseDefinitionName</a> - Provides test case run
--   definition Name.
newTestCaseRun :: TestCaseRun

-- | Show each group result.
--   
--   <i>See:</i> <a>newTestResult</a> smart constructor.
data TestResult
TestResult' :: Maybe [GroupResult] -> TestResult

-- | Create a value of <a>TestResult</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:TestResult'</a>, <a>testResult_groups</a> - Show each
--   group of test results.
newTestResult :: TestResult
