-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-clouddirectoryZSamazonka-clouddirectory
@version 1.6.1


module Network.AWS.CloudDirectory.Types.AttributeKey

-- | A unique identifier for an attribute.
--   
--   <i>See:</i> <a>newAttributeKey</a> smart constructor.
data AttributeKey
AttributeKey' :: Text -> Text -> Text -> AttributeKey

-- | The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
[$sel:schemaArn:AttributeKey'] :: AttributeKey -> Text

-- | The name of the facet that the attribute exists within.
[$sel:facetName:AttributeKey'] :: AttributeKey -> Text

-- | The name of the attribute.
[$sel:name:AttributeKey'] :: AttributeKey -> Text

-- | Create a value of <a>AttributeKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:AttributeKey'</a>, <a>attributeKey_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
--   
--   <a>$sel:facetName:AttributeKey'</a>, <a>attributeKey_facetName</a> -
--   The name of the facet that the attribute exists within.
--   
--   <a>$sel:name:AttributeKey'</a>, <a>attributeKey_name</a> - The name of
--   the attribute.
newAttributeKey :: Text -> Text -> Text -> AttributeKey

-- | The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
attributeKey_schemaArn :: Lens' AttributeKey Text

-- | The name of the facet that the attribute exists within.
attributeKey_facetName :: Lens' AttributeKey Text

-- | The name of the attribute.
attributeKey_name :: Lens' AttributeKey Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.AttributeKey.AttributeKey


module Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse

-- | The result of a batch add facet to object operation.
--   
--   <i>See:</i> <a>newBatchAddFacetToObjectResponse</a> smart constructor.
data BatchAddFacetToObjectResponse
BatchAddFacetToObjectResponse' :: BatchAddFacetToObjectResponse

-- | Create a value of <a>BatchAddFacetToObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchAddFacetToObjectResponse :: BatchAddFacetToObjectResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse.BatchAddFacetToObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse.BatchAddFacetToObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse.BatchAddFacetToObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse.BatchAddFacetToObjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse.BatchAddFacetToObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse.BatchAddFacetToObjectResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAddFacetToObjectResponse.BatchAddFacetToObjectResponse


module Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse

-- | Represents the output batch AttachObject response operation.
--   
--   <i>See:</i> <a>newBatchAttachObjectResponse</a> smart constructor.
data BatchAttachObjectResponse
BatchAttachObjectResponse' :: Maybe Text -> BatchAttachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the object that has been attached.
[$sel:attachedObjectIdentifier:BatchAttachObjectResponse'] :: BatchAttachObjectResponse -> Maybe Text

-- | Create a value of <a>BatchAttachObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:BatchAttachObjectResponse'</a>,
--   <a>batchAttachObjectResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that has been attached.
newBatchAttachObjectResponse :: BatchAttachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the object that has been attached.
batchAttachObjectResponse_attachedObjectIdentifier :: Lens' BatchAttachObjectResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse.BatchAttachObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse.BatchAttachObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse.BatchAttachObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse.BatchAttachObjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse.BatchAttachObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse.BatchAttachObjectResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachObjectResponse.BatchAttachObjectResponse


module Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse

-- | Represents the output of an AttachPolicy response operation.
--   
--   <i>See:</i> <a>newBatchAttachPolicyResponse</a> smart constructor.
data BatchAttachPolicyResponse
BatchAttachPolicyResponse' :: BatchAttachPolicyResponse

-- | Create a value of <a>BatchAttachPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchAttachPolicyResponse :: BatchAttachPolicyResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse.BatchAttachPolicyResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse.BatchAttachPolicyResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse.BatchAttachPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse.BatchAttachPolicyResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse.BatchAttachPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse.BatchAttachPolicyResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachPolicyResponse.BatchAttachPolicyResponse


module Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse

-- | Represents the output of a AttachToIndex response operation.
--   
--   <i>See:</i> <a>newBatchAttachToIndexResponse</a> smart constructor.
data BatchAttachToIndexResponse
BatchAttachToIndexResponse' :: Maybe Text -> BatchAttachToIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
[$sel:attachedObjectIdentifier:BatchAttachToIndexResponse'] :: BatchAttachToIndexResponse -> Maybe Text

-- | Create a value of <a>BatchAttachToIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:BatchAttachToIndexResponse'</a>,
--   <a>batchAttachToIndexResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
newBatchAttachToIndexResponse :: BatchAttachToIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
batchAttachToIndexResponse_attachedObjectIdentifier :: Lens' BatchAttachToIndexResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse.BatchAttachToIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse.BatchAttachToIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse.BatchAttachToIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse.BatchAttachToIndexResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse.BatchAttachToIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse.BatchAttachToIndexResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachToIndexResponse.BatchAttachToIndexResponse


module Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse

-- | Represents the output of a CreateIndex response operation.
--   
--   <i>See:</i> <a>newBatchCreateIndexResponse</a> smart constructor.
data BatchCreateIndexResponse
BatchCreateIndexResponse' :: Maybe Text -> BatchCreateIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
[$sel:objectIdentifier:BatchCreateIndexResponse'] :: BatchCreateIndexResponse -> Maybe Text

-- | Create a value of <a>BatchCreateIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchCreateIndexResponse'</a>,
--   <a>batchCreateIndexResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the index created by this operation.
newBatchCreateIndexResponse :: BatchCreateIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
batchCreateIndexResponse_objectIdentifier :: Lens' BatchCreateIndexResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse.BatchCreateIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse.BatchCreateIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse.BatchCreateIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse.BatchCreateIndexResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse.BatchCreateIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse.BatchCreateIndexResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchCreateIndexResponse.BatchCreateIndexResponse


module Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse

-- | Represents the output of a CreateObject response operation.
--   
--   <i>See:</i> <a>newBatchCreateObjectResponse</a> smart constructor.
data BatchCreateObjectResponse
BatchCreateObjectResponse' :: Maybe Text -> BatchCreateObjectResponse

-- | The ID that is associated with the object.
[$sel:objectIdentifier:BatchCreateObjectResponse'] :: BatchCreateObjectResponse -> Maybe Text

-- | Create a value of <a>BatchCreateObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchCreateObjectResponse'</a>,
--   <a>batchCreateObjectResponse_objectIdentifier</a> - The ID that is
--   associated with the object.
newBatchCreateObjectResponse :: BatchCreateObjectResponse

-- | The ID that is associated with the object.
batchCreateObjectResponse_objectIdentifier :: Lens' BatchCreateObjectResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse.BatchCreateObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse.BatchCreateObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse.BatchCreateObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse.BatchCreateObjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse.BatchCreateObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse.BatchCreateObjectResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchCreateObjectResponse.BatchCreateObjectResponse


module Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse

-- | Represents the output of a DeleteObject response operation.
--   
--   <i>See:</i> <a>newBatchDeleteObjectResponse</a> smart constructor.
data BatchDeleteObjectResponse
BatchDeleteObjectResponse' :: BatchDeleteObjectResponse

-- | Create a value of <a>BatchDeleteObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDeleteObjectResponse :: BatchDeleteObjectResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse.BatchDeleteObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse.BatchDeleteObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse.BatchDeleteObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse.BatchDeleteObjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse.BatchDeleteObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse.BatchDeleteObjectResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDeleteObjectResponse.BatchDeleteObjectResponse


module Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse

-- | Represents the output of a DetachFromIndex response operation.
--   
--   <i>See:</i> <a>newBatchDetachFromIndexResponse</a> smart constructor.
data BatchDetachFromIndexResponse
BatchDetachFromIndexResponse' :: Maybe Text -> BatchDetachFromIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
[$sel:detachedObjectIdentifier:BatchDetachFromIndexResponse'] :: BatchDetachFromIndexResponse -> Maybe Text

-- | Create a value of <a>BatchDetachFromIndexResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:BatchDetachFromIndexResponse'</a>,
--   <a>batchDetachFromIndexResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
newBatchDetachFromIndexResponse :: BatchDetachFromIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
batchDetachFromIndexResponse_detachedObjectIdentifier :: Lens' BatchDetachFromIndexResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse.BatchDetachFromIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse.BatchDetachFromIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse.BatchDetachFromIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse.BatchDetachFromIndexResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse.BatchDetachFromIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse.BatchDetachFromIndexResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachFromIndexResponse.BatchDetachFromIndexResponse


module Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse

-- | Represents the output of a DetachObject response operation.
--   
--   <i>See:</i> <a>newBatchDetachObjectResponse</a> smart constructor.
data BatchDetachObjectResponse
BatchDetachObjectResponse' :: Maybe Text -> BatchDetachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the detached object.
[$sel:detachedObjectIdentifier:BatchDetachObjectResponse'] :: BatchDetachObjectResponse -> Maybe Text

-- | Create a value of <a>BatchDetachObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:BatchDetachObjectResponse'</a>,
--   <a>batchDetachObjectResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the detached object.
newBatchDetachObjectResponse :: BatchDetachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the detached object.
batchDetachObjectResponse_detachedObjectIdentifier :: Lens' BatchDetachObjectResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse.BatchDetachObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse.BatchDetachObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse.BatchDetachObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse.BatchDetachObjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse.BatchDetachObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse.BatchDetachObjectResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachObjectResponse.BatchDetachObjectResponse


module Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse

-- | Represents the output of a DetachPolicy response operation.
--   
--   <i>See:</i> <a>newBatchDetachPolicyResponse</a> smart constructor.
data BatchDetachPolicyResponse
BatchDetachPolicyResponse' :: BatchDetachPolicyResponse

-- | Create a value of <a>BatchDetachPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDetachPolicyResponse :: BatchDetachPolicyResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse.BatchDetachPolicyResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse.BatchDetachPolicyResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse.BatchDetachPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse.BatchDetachPolicyResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse.BatchDetachPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse.BatchDetachPolicyResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachPolicyResponse.BatchDetachPolicyResponse


module Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse

-- | Represents the output of a DetachTypedLink response operation.
--   
--   <i>See:</i> <a>newBatchDetachTypedLinkResponse</a> smart constructor.
data BatchDetachTypedLinkResponse
BatchDetachTypedLinkResponse' :: BatchDetachTypedLinkResponse

-- | Create a value of <a>BatchDetachTypedLinkResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDetachTypedLinkResponse :: BatchDetachTypedLinkResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse.BatchDetachTypedLinkResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse.BatchDetachTypedLinkResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse.BatchDetachTypedLinkResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse.BatchDetachTypedLinkResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse.BatchDetachTypedLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse.BatchDetachTypedLinkResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachTypedLinkResponse.BatchDetachTypedLinkResponse


module Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse

-- | Represents the output of a ListObjectChildren response operation.
--   
--   <i>See:</i> <a>newBatchListObjectChildrenResponse</a> smart
--   constructor.
data BatchListObjectChildrenResponse
BatchListObjectChildrenResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> BatchListObjectChildrenResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectChildrenResponse'] :: BatchListObjectChildrenResponse -> Maybe Text

-- | The children structure, which is a map with the key as the
--   <tt>LinkName</tt> and <tt>ObjectIdentifier</tt> as the value.
[$sel:children:BatchListObjectChildrenResponse'] :: BatchListObjectChildrenResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>BatchListObjectChildrenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectChildrenResponse'</a>,
--   <a>batchListObjectChildrenResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:children:BatchListObjectChildrenResponse'</a>,
--   <a>batchListObjectChildrenResponse_children</a> - The children
--   structure, which is a map with the key as the <tt>LinkName</tt> and
--   <tt>ObjectIdentifier</tt> as the value.
newBatchListObjectChildrenResponse :: BatchListObjectChildrenResponse

-- | The pagination token.
batchListObjectChildrenResponse_nextToken :: Lens' BatchListObjectChildrenResponse (Maybe Text)

-- | The children structure, which is a map with the key as the
--   <tt>LinkName</tt> and <tt>ObjectIdentifier</tt> as the value.
batchListObjectChildrenResponse_children :: Lens' BatchListObjectChildrenResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse.BatchListObjectChildrenResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse.BatchListObjectChildrenResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse.BatchListObjectChildrenResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse.BatchListObjectChildrenResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse.BatchListObjectChildrenResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse.BatchListObjectChildrenResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectChildrenResponse.BatchListObjectChildrenResponse


module Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse

-- | Represents the output of a ListObjectPolicies response operation.
--   
--   <i>See:</i> <a>newBatchListObjectPoliciesResponse</a> smart
--   constructor.
data BatchListObjectPoliciesResponse
BatchListObjectPoliciesResponse' :: Maybe Text -> Maybe [Text] -> BatchListObjectPoliciesResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectPoliciesResponse'] :: BatchListObjectPoliciesResponse -> Maybe Text

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
[$sel:attachedPolicyIds:BatchListObjectPoliciesResponse'] :: BatchListObjectPoliciesResponse -> Maybe [Text]

-- | Create a value of <a>BatchListObjectPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectPoliciesResponse'</a>,
--   <a>batchListObjectPoliciesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attachedPolicyIds:BatchListObjectPoliciesResponse'</a>,
--   <a>batchListObjectPoliciesResponse_attachedPolicyIds</a> - A list of
--   policy <tt>ObjectIdentifiers</tt>, that are attached to the object.
newBatchListObjectPoliciesResponse :: BatchListObjectPoliciesResponse

-- | The pagination token.
batchListObjectPoliciesResponse_nextToken :: Lens' BatchListObjectPoliciesResponse (Maybe Text)

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
batchListObjectPoliciesResponse_attachedPolicyIds :: Lens' BatchListObjectPoliciesResponse (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse.BatchListObjectPoliciesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse.BatchListObjectPoliciesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse.BatchListObjectPoliciesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse.BatchListObjectPoliciesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse.BatchListObjectPoliciesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse.BatchListObjectPoliciesResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectPoliciesResponse.BatchListObjectPoliciesResponse


module Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse

-- | Represents the output of a ListPolicyAttachments response operation.
--   
--   <i>See:</i> <a>newBatchListPolicyAttachmentsResponse</a> smart
--   constructor.
data BatchListPolicyAttachmentsResponse
BatchListPolicyAttachmentsResponse' :: Maybe Text -> Maybe [Text] -> BatchListPolicyAttachmentsResponse

-- | The pagination token.
[$sel:nextToken:BatchListPolicyAttachmentsResponse'] :: BatchListPolicyAttachmentsResponse -> Maybe Text

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
[$sel:objectIdentifiers:BatchListPolicyAttachmentsResponse'] :: BatchListPolicyAttachmentsResponse -> Maybe [Text]

-- | Create a value of <a>BatchListPolicyAttachmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListPolicyAttachmentsResponse'</a>,
--   <a>batchListPolicyAttachmentsResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:objectIdentifiers:BatchListPolicyAttachmentsResponse'</a>,
--   <a>batchListPolicyAttachmentsResponse_objectIdentifiers</a> - A list
--   of <tt>ObjectIdentifiers</tt> to which the policy is attached.
newBatchListPolicyAttachmentsResponse :: BatchListPolicyAttachmentsResponse

-- | The pagination token.
batchListPolicyAttachmentsResponse_nextToken :: Lens' BatchListPolicyAttachmentsResponse (Maybe Text)

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
batchListPolicyAttachmentsResponse_objectIdentifiers :: Lens' BatchListPolicyAttachmentsResponse (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse.BatchListPolicyAttachmentsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse.BatchListPolicyAttachmentsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse.BatchListPolicyAttachmentsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse.BatchListPolicyAttachmentsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse.BatchListPolicyAttachmentsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse.BatchListPolicyAttachmentsResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListPolicyAttachmentsResponse.BatchListPolicyAttachmentsResponse


module Network.AWS.CloudDirectory.Types.BatchReadExceptionType
newtype BatchReadExceptionType
BatchReadExceptionType' :: Text -> BatchReadExceptionType
[fromBatchReadExceptionType] :: BatchReadExceptionType -> Text
pattern BatchReadExceptionType_AccessDeniedException :: BatchReadExceptionType
pattern BatchReadExceptionType_CannotListParentOfRootException :: BatchReadExceptionType
pattern BatchReadExceptionType_DirectoryNotEnabledException :: BatchReadExceptionType
pattern BatchReadExceptionType_FacetValidationException :: BatchReadExceptionType
pattern BatchReadExceptionType_InternalServiceException :: BatchReadExceptionType
pattern BatchReadExceptionType_InvalidArnException :: BatchReadExceptionType
pattern BatchReadExceptionType_InvalidNextTokenException :: BatchReadExceptionType
pattern BatchReadExceptionType_LimitExceededException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotIndexException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotNodeException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotPolicyException :: BatchReadExceptionType
pattern BatchReadExceptionType_ResourceNotFoundException :: BatchReadExceptionType
pattern BatchReadExceptionType_ValidationException :: BatchReadExceptionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchReadExceptionType.BatchReadExceptionType


module Network.AWS.CloudDirectory.Types.BatchReadException

-- | The batch read exception structure, which contains the exception type
--   and message.
--   
--   <i>See:</i> <a>newBatchReadException</a> smart constructor.
data BatchReadException
BatchReadException' :: Maybe Text -> Maybe BatchReadExceptionType -> BatchReadException

-- | An exception message that is associated with the failure.
[$sel:message:BatchReadException'] :: BatchReadException -> Maybe Text

-- | A type of exception, such as <tt>InvalidArnException</tt>.
[$sel:type':BatchReadException'] :: BatchReadException -> Maybe BatchReadExceptionType

-- | Create a value of <a>BatchReadException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:BatchReadException'</a>,
--   <a>batchReadException_message</a> - An exception message that is
--   associated with the failure.
--   
--   <a>$sel:type':BatchReadException'</a>, <a>batchReadException_type</a>
--   - A type of exception, such as <tt>InvalidArnException</tt>.
newBatchReadException :: BatchReadException

-- | An exception message that is associated with the failure.
batchReadException_message :: Lens' BatchReadException (Maybe Text)

-- | A type of exception, such as <tt>InvalidArnException</tt>.
batchReadException_type :: Lens' BatchReadException (Maybe BatchReadExceptionType)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchReadException.BatchReadException
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchReadException.BatchReadException
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchReadException.BatchReadException
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchReadException.BatchReadException
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchReadException.BatchReadException
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchReadException.BatchReadException
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchReadException.BatchReadException


module Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse

-- | An empty result that represents success.
--   
--   <i>See:</i> <a>newBatchRemoveFacetFromObjectResponse</a> smart
--   constructor.
data BatchRemoveFacetFromObjectResponse
BatchRemoveFacetFromObjectResponse' :: BatchRemoveFacetFromObjectResponse

-- | Create a value of <a>BatchRemoveFacetFromObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchRemoveFacetFromObjectResponse :: BatchRemoveFacetFromObjectResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse.BatchRemoveFacetFromObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse.BatchRemoveFacetFromObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse.BatchRemoveFacetFromObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse.BatchRemoveFacetFromObjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse.BatchRemoveFacetFromObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse.BatchRemoveFacetFromObjectResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObjectResponse.BatchRemoveFacetFromObjectResponse


module Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse

-- | Represents the output of a UpdateLinkAttributes response operation.
--   
--   <i>See:</i> <a>newBatchUpdateLinkAttributesResponse</a> smart
--   constructor.
data BatchUpdateLinkAttributesResponse
BatchUpdateLinkAttributesResponse' :: BatchUpdateLinkAttributesResponse

-- | Create a value of <a>BatchUpdateLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchUpdateLinkAttributesResponse :: BatchUpdateLinkAttributesResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse.BatchUpdateLinkAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse.BatchUpdateLinkAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse.BatchUpdateLinkAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse.BatchUpdateLinkAttributesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse.BatchUpdateLinkAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse.BatchUpdateLinkAttributesResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributesResponse.BatchUpdateLinkAttributesResponse


module Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse

-- | Represents the output of a <tt>BatchUpdate</tt> response operation.
--   
--   <i>See:</i> <a>newBatchUpdateObjectAttributesResponse</a> smart
--   constructor.
data BatchUpdateObjectAttributesResponse
BatchUpdateObjectAttributesResponse' :: Maybe Text -> BatchUpdateObjectAttributesResponse

-- | ID that is associated with the object.
[$sel:objectIdentifier:BatchUpdateObjectAttributesResponse'] :: BatchUpdateObjectAttributesResponse -> Maybe Text

-- | Create a value of <a>BatchUpdateObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchUpdateObjectAttributesResponse'</a>,
--   <a>batchUpdateObjectAttributesResponse_objectIdentifier</a> - ID that
--   is associated with the object.
newBatchUpdateObjectAttributesResponse :: BatchUpdateObjectAttributesResponse

-- | ID that is associated with the object.
batchUpdateObjectAttributesResponse_objectIdentifier :: Lens' BatchUpdateObjectAttributesResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse.BatchUpdateObjectAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse.BatchUpdateObjectAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse.BatchUpdateObjectAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse.BatchUpdateObjectAttributesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse.BatchUpdateObjectAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse.BatchUpdateObjectAttributesResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributesResponse.BatchUpdateObjectAttributesResponse


module Network.AWS.CloudDirectory.Types.ConsistencyLevel
newtype ConsistencyLevel
ConsistencyLevel' :: Text -> ConsistencyLevel
[fromConsistencyLevel] :: ConsistencyLevel -> Text
pattern ConsistencyLevel_EVENTUAL :: ConsistencyLevel
pattern ConsistencyLevel_SERIALIZABLE :: ConsistencyLevel
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.ConsistencyLevel.ConsistencyLevel


module Network.AWS.CloudDirectory.Types.DirectoryState
newtype DirectoryState
DirectoryState' :: Text -> DirectoryState
[fromDirectoryState] :: DirectoryState -> Text
pattern DirectoryState_DELETED :: DirectoryState
pattern DirectoryState_DISABLED :: DirectoryState
pattern DirectoryState_ENABLED :: DirectoryState
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.DirectoryState.DirectoryState


module Network.AWS.CloudDirectory.Types.Directory

-- | Directory structure that includes the directory name and directory
--   ARN.
--   
--   <i>See:</i> <a>newDirectory</a> smart constructor.
data Directory
Directory' :: Maybe Text -> Maybe Text -> Maybe DirectoryState -> Maybe POSIX -> Directory

-- | The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
[$sel:directoryArn:Directory'] :: Directory -> Maybe Text

-- | The name of the directory.
[$sel:name:Directory'] :: Directory -> Maybe Text

-- | The state of the directory. Can be either <tt>Enabled</tt>,
--   <tt>Disabled</tt>, or <tt>Deleted</tt>.
[$sel:state:Directory'] :: Directory -> Maybe DirectoryState

-- | The date and time when the directory was created.
[$sel:creationDateTime:Directory'] :: Directory -> Maybe POSIX

-- | Create a value of <a>Directory</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:Directory'</a>, <a>directory_directoryArn</a> -
--   The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
--   
--   <a>$sel:name:Directory'</a>, <a>directory_name</a> - The name of the
--   directory.
--   
--   <a>$sel:state:Directory'</a>, <a>directory_state</a> - The state of
--   the directory. Can be either <tt>Enabled</tt>, <tt>Disabled</tt>, or
--   <tt>Deleted</tt>.
--   
--   <a>$sel:creationDateTime:Directory'</a>,
--   <a>directory_creationDateTime</a> - The date and time when the
--   directory was created.
newDirectory :: Directory

-- | The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
directory_directoryArn :: Lens' Directory (Maybe Text)

-- | The name of the directory.
directory_name :: Lens' Directory (Maybe Text)

-- | The state of the directory. Can be either <tt>Enabled</tt>,
--   <tt>Disabled</tt>, or <tt>Deleted</tt>.
directory_state :: Lens' Directory (Maybe DirectoryState)

-- | The date and time when the directory was created.
directory_creationDateTime :: Lens' Directory (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.Directory.Directory
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.Directory.Directory
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.Directory.Directory
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.Directory.Directory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.Directory.Directory
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.Directory.Directory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.Directory.Directory


module Network.AWS.CloudDirectory.Types.FacetAttributeReference

-- | The facet attribute reference that specifies the attribute definition
--   that contains the attribute facet name and attribute name.
--   
--   <i>See:</i> <a>newFacetAttributeReference</a> smart constructor.
data FacetAttributeReference
FacetAttributeReference' :: Text -> Text -> FacetAttributeReference

-- | The target facet name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
[$sel:targetFacetName:FacetAttributeReference'] :: FacetAttributeReference -> Text

-- | The target attribute name that is associated with the facet reference.
--   See <a>Attribute References</a> for more information.
[$sel:targetAttributeName:FacetAttributeReference'] :: FacetAttributeReference -> Text

-- | Create a value of <a>FacetAttributeReference</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetFacetName:FacetAttributeReference'</a>,
--   <a>facetAttributeReference_targetFacetName</a> - The target facet name
--   that is associated with the facet reference. See <a>Attribute
--   References</a> for more information.
--   
--   <a>$sel:targetAttributeName:FacetAttributeReference'</a>,
--   <a>facetAttributeReference_targetAttributeName</a> - The target
--   attribute name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
newFacetAttributeReference :: Text -> Text -> FacetAttributeReference

-- | The target facet name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
facetAttributeReference_targetFacetName :: Lens' FacetAttributeReference Text

-- | The target attribute name that is associated with the facet reference.
--   See <a>Attribute References</a> for more information.
facetAttributeReference_targetAttributeName :: Lens' FacetAttributeReference Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.FacetAttributeReference.FacetAttributeReference


module Network.AWS.CloudDirectory.Types.FacetAttributeType
newtype FacetAttributeType
FacetAttributeType' :: Text -> FacetAttributeType
[fromFacetAttributeType] :: FacetAttributeType -> Text
pattern FacetAttributeType_BINARY :: FacetAttributeType
pattern FacetAttributeType_BOOLEAN :: FacetAttributeType
pattern FacetAttributeType_DATETIME :: FacetAttributeType
pattern FacetAttributeType_NUMBER :: FacetAttributeType
pattern FacetAttributeType_STRING :: FacetAttributeType
pattern FacetAttributeType_VARIANT :: FacetAttributeType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.FacetAttributeType.FacetAttributeType


module Network.AWS.CloudDirectory.Types.FacetStyle
newtype FacetStyle
FacetStyle' :: Text -> FacetStyle
[fromFacetStyle] :: FacetStyle -> Text
pattern FacetStyle_DYNAMIC :: FacetStyle
pattern FacetStyle_STATIC :: FacetStyle
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.FacetStyle.FacetStyle


module Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple

-- | A pair of ObjectIdentifier and LinkName.
--   
--   <i>See:</i> <a>newObjectIdentifierAndLinkNameTuple</a> smart
--   constructor.
data ObjectIdentifierAndLinkNameTuple
ObjectIdentifierAndLinkNameTuple' :: Maybe Text -> Maybe Text -> ObjectIdentifierAndLinkNameTuple

-- | The name of the link between the parent and the child object.
[$sel:linkName:ObjectIdentifierAndLinkNameTuple'] :: ObjectIdentifierAndLinkNameTuple -> Maybe Text

-- | The ID that is associated with the object.
[$sel:objectIdentifier:ObjectIdentifierAndLinkNameTuple'] :: ObjectIdentifierAndLinkNameTuple -> Maybe Text

-- | Create a value of <a>ObjectIdentifierAndLinkNameTuple</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:ObjectIdentifierAndLinkNameTuple'</a>,
--   <a>objectIdentifierAndLinkNameTuple_linkName</a> - The name of the
--   link between the parent and the child object.
--   
--   <a>$sel:objectIdentifier:ObjectIdentifierAndLinkNameTuple'</a>,
--   <a>objectIdentifierAndLinkNameTuple_objectIdentifier</a> - The ID that
--   is associated with the object.
newObjectIdentifierAndLinkNameTuple :: ObjectIdentifierAndLinkNameTuple

-- | The name of the link between the parent and the child object.
objectIdentifierAndLinkNameTuple_linkName :: Lens' ObjectIdentifierAndLinkNameTuple (Maybe Text)

-- | The ID that is associated with the object.
objectIdentifierAndLinkNameTuple_objectIdentifier :: Lens' ObjectIdentifierAndLinkNameTuple (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple.ObjectIdentifierAndLinkNameTuple
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple.ObjectIdentifierAndLinkNameTuple
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple.ObjectIdentifierAndLinkNameTuple
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple.ObjectIdentifierAndLinkNameTuple
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple.ObjectIdentifierAndLinkNameTuple
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple.ObjectIdentifierAndLinkNameTuple
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.ObjectIdentifierAndLinkNameTuple.ObjectIdentifierAndLinkNameTuple


module Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse

-- | Represents the output of a ListObjectParents response operation.
--   
--   <i>See:</i> <a>newBatchListObjectParentsResponse</a> smart
--   constructor.
data BatchListObjectParentsResponse
BatchListObjectParentsResponse' :: Maybe [ObjectIdentifierAndLinkNameTuple] -> Maybe Text -> BatchListObjectParentsResponse

-- | Returns a list of parent reference and LinkName Tuples.
[$sel:parentLinks:BatchListObjectParentsResponse'] :: BatchListObjectParentsResponse -> Maybe [ObjectIdentifierAndLinkNameTuple]

-- | The pagination token.
[$sel:nextToken:BatchListObjectParentsResponse'] :: BatchListObjectParentsResponse -> Maybe Text

-- | Create a value of <a>BatchListObjectParentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentLinks:BatchListObjectParentsResponse'</a>,
--   <a>batchListObjectParentsResponse_parentLinks</a> - Returns a list of
--   parent reference and LinkName Tuples.
--   
--   <a>$sel:nextToken:BatchListObjectParentsResponse'</a>,
--   <a>batchListObjectParentsResponse_nextToken</a> - The pagination
--   token.
newBatchListObjectParentsResponse :: BatchListObjectParentsResponse

-- | Returns a list of parent reference and LinkName Tuples.
batchListObjectParentsResponse_parentLinks :: Lens' BatchListObjectParentsResponse (Maybe [ObjectIdentifierAndLinkNameTuple])

-- | The pagination token.
batchListObjectParentsResponse_nextToken :: Lens' BatchListObjectParentsResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse.BatchListObjectParentsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse.BatchListObjectParentsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse.BatchListObjectParentsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse.BatchListObjectParentsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse.BatchListObjectParentsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse.BatchListObjectParentsResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectParentsResponse.BatchListObjectParentsResponse


module Network.AWS.CloudDirectory.Types.ObjectReference

-- | The reference that identifies an object.
--   
--   <i>See:</i> <a>newObjectReference</a> smart constructor.
data ObjectReference
ObjectReference' :: Maybe Text -> ObjectReference

-- | A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
[$sel:selector:ObjectReference'] :: ObjectReference -> Maybe Text

-- | Create a value of <a>ObjectReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selector:ObjectReference'</a>, <a>objectReference_selector</a>
--   - A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
newObjectReference :: ObjectReference

-- | A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
objectReference_selector :: Lens' ObjectReference (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.ObjectReference.ObjectReference


module Network.AWS.CloudDirectory.Types.BatchLookupPolicy

-- | Lists all policies from the root of the Directory to the object
--   specified inside a BatchRead operation. For more information, see
--   LookupPolicy and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchLookupPolicy</a> smart constructor.
data BatchLookupPolicy
BatchLookupPolicy' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchLookupPolicy

-- | The pagination token.
[$sel:nextToken:BatchLookupPolicy'] :: BatchLookupPolicy -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchLookupPolicy'] :: BatchLookupPolicy -> Maybe Natural

-- | Reference that identifies the object whose policies will be looked up.
[$sel:objectReference:BatchLookupPolicy'] :: BatchLookupPolicy -> ObjectReference

-- | Create a value of <a>BatchLookupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:objectReference:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_objectReference</a> - Reference that identifies
--   the object whose policies will be looked up.
newBatchLookupPolicy :: ObjectReference -> BatchLookupPolicy

-- | The pagination token.
batchLookupPolicy_nextToken :: Lens' BatchLookupPolicy (Maybe Text)

-- | The maximum number of results to retrieve.
batchLookupPolicy_maxResults :: Lens' BatchLookupPolicy (Maybe Natural)

-- | Reference that identifies the object whose policies will be looked up.
batchLookupPolicy_objectReference :: Lens' BatchLookupPolicy ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchLookupPolicy.BatchLookupPolicy
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchLookupPolicy.BatchLookupPolicy
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchLookupPolicy.BatchLookupPolicy
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchLookupPolicy.BatchLookupPolicy
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchLookupPolicy.BatchLookupPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchLookupPolicy.BatchLookupPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchLookupPolicy.BatchLookupPolicy


module Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached inside a BatchRead operation. For more information, see
--   ListPolicyAttachments and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListPolicyAttachments</a> smart constructor.
data BatchListPolicyAttachments
BatchListPolicyAttachments' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListPolicyAttachments

-- | The pagination token.
[$sel:nextToken:BatchListPolicyAttachments'] :: BatchListPolicyAttachments -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListPolicyAttachments'] :: BatchListPolicyAttachments -> Maybe Natural

-- | The reference that identifies the policy object.
[$sel:policyReference:BatchListPolicyAttachments'] :: BatchListPolicyAttachments -> ObjectReference

-- | Create a value of <a>BatchListPolicyAttachments</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:policyReference:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_policyReference</a> - The reference that
--   identifies the policy object.
newBatchListPolicyAttachments :: ObjectReference -> BatchListPolicyAttachments

-- | The pagination token.
batchListPolicyAttachments_nextToken :: Lens' BatchListPolicyAttachments (Maybe Text)

-- | The maximum number of results to retrieve.
batchListPolicyAttachments_maxResults :: Lens' BatchListPolicyAttachments (Maybe Natural)

-- | The reference that identifies the policy object.
batchListPolicyAttachments_policyReference :: Lens' BatchListPolicyAttachments ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments.BatchListPolicyAttachments
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments.BatchListPolicyAttachments
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments.BatchListPolicyAttachments
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments.BatchListPolicyAttachments
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments.BatchListPolicyAttachments
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments.BatchListPolicyAttachments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListPolicyAttachments.BatchListPolicyAttachments


module Network.AWS.CloudDirectory.Types.BatchListObjectPolicies

-- | Returns policies attached to an object in pagination fashion inside a
--   BatchRead operation. For more information, see ListObjectPolicies and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListObjectPolicies</a> smart constructor.
data BatchListObjectPolicies
BatchListObjectPolicies' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectPolicies

-- | The pagination token.
[$sel:nextToken:BatchListObjectPolicies'] :: BatchListObjectPolicies -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListObjectPolicies'] :: BatchListObjectPolicies -> Maybe Natural

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListObjectPolicies'] :: BatchListObjectPolicies -> ObjectReference

-- | Create a value of <a>BatchListObjectPolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:objectReference:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newBatchListObjectPolicies :: ObjectReference -> BatchListObjectPolicies

-- | The pagination token.
batchListObjectPolicies_nextToken :: Lens' BatchListObjectPolicies (Maybe Text)

-- | The maximum number of results to retrieve.
batchListObjectPolicies_maxResults :: Lens' BatchListObjectPolicies (Maybe Natural)

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListObjectPolicies_objectReference :: Lens' BatchListObjectPolicies ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectPolicies.BatchListObjectPolicies
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectPolicies.BatchListObjectPolicies
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectPolicies.BatchListObjectPolicies
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectPolicies.BatchListObjectPolicies
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectPolicies.BatchListObjectPolicies
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectPolicies.BatchListObjectPolicies
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListObjectPolicies.BatchListObjectPolicies


module Network.AWS.CloudDirectory.Types.BatchListObjectParents

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
--   
--   <i>See:</i> <a>newBatchListObjectParents</a> smart constructor.
data BatchListObjectParents
BatchListObjectParents' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectParents

-- | The pagination token.
[$sel:nextToken:BatchListObjectParents'] :: BatchListObjectParents -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:BatchListObjectParents'] :: BatchListObjectParents -> Maybe Natural
[$sel:objectReference:BatchListObjectParents'] :: BatchListObjectParents -> ObjectReference

-- | Create a value of <a>BatchListObjectParents</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:objectReference:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_objectReference</a> - Undocumented member.
newBatchListObjectParents :: ObjectReference -> BatchListObjectParents

-- | The pagination token.
batchListObjectParents_nextToken :: Lens' BatchListObjectParents (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
batchListObjectParents_maxResults :: Lens' BatchListObjectParents (Maybe Natural)

-- | Undocumented member.
batchListObjectParents_objectReference :: Lens' BatchListObjectParents ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectParents.BatchListObjectParents
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectParents.BatchListObjectParents
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectParents.BatchListObjectParents
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectParents.BatchListObjectParents
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectParents.BatchListObjectParents
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectParents.BatchListObjectParents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListObjectParents.BatchListObjectParents


module Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects inside a BatchRead
--   operation. For more information, see ListObjectParentPaths and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListObjectParentPaths</a> smart constructor.
data BatchListObjectParentPaths
BatchListObjectParentPaths' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectParentPaths

-- | The pagination token.
[$sel:nextToken:BatchListObjectParentPaths'] :: BatchListObjectParentPaths -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListObjectParentPaths'] :: BatchListObjectParentPaths -> Maybe Natural

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListObjectParentPaths'] :: BatchListObjectParentPaths -> ObjectReference

-- | Create a value of <a>BatchListObjectParentPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:objectReference:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newBatchListObjectParentPaths :: ObjectReference -> BatchListObjectParentPaths

-- | The pagination token.
batchListObjectParentPaths_nextToken :: Lens' BatchListObjectParentPaths (Maybe Text)

-- | The maximum number of results to retrieve.
batchListObjectParentPaths_maxResults :: Lens' BatchListObjectParentPaths (Maybe Natural)

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListObjectParentPaths_objectReference :: Lens' BatchListObjectParentPaths ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths.BatchListObjectParentPaths
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths.BatchListObjectParentPaths
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths.BatchListObjectParentPaths
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths.BatchListObjectParentPaths
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths.BatchListObjectParentPaths
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths.BatchListObjectParentPaths
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListObjectParentPaths.BatchListObjectParentPaths


module Network.AWS.CloudDirectory.Types.BatchListObjectChildren

-- | Represents the output of a ListObjectChildren operation.
--   
--   <i>See:</i> <a>newBatchListObjectChildren</a> smart constructor.
data BatchListObjectChildren
BatchListObjectChildren' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectChildren

-- | The pagination token.
[$sel:nextToken:BatchListObjectChildren'] :: BatchListObjectChildren -> Maybe Text

-- | Maximum number of items to be retrieved in a single call. This is an
--   approximate number.
[$sel:maxResults:BatchListObjectChildren'] :: BatchListObjectChildren -> Maybe Natural

-- | Reference of the object for which child objects are being listed.
[$sel:objectReference:BatchListObjectChildren'] :: BatchListObjectChildren -> ObjectReference

-- | Create a value of <a>BatchListObjectChildren</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_maxResults</a> - Maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:objectReference:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_objectReference</a> - Reference of the
--   object for which child objects are being listed.
newBatchListObjectChildren :: ObjectReference -> BatchListObjectChildren

-- | The pagination token.
batchListObjectChildren_nextToken :: Lens' BatchListObjectChildren (Maybe Text)

-- | Maximum number of items to be retrieved in a single call. This is an
--   approximate number.
batchListObjectChildren_maxResults :: Lens' BatchListObjectChildren (Maybe Natural)

-- | Reference of the object for which child objects are being listed.
batchListObjectChildren_objectReference :: Lens' BatchListObjectChildren ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectChildren.BatchListObjectChildren
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectChildren.BatchListObjectChildren
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectChildren.BatchListObjectChildren
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectChildren.BatchListObjectChildren
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectChildren.BatchListObjectChildren
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectChildren.BatchListObjectChildren
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListObjectChildren.BatchListObjectChildren


module Network.AWS.CloudDirectory.Types.BatchListAttachedIndices

-- | Lists indices attached to an object inside a BatchRead operation. For
--   more information, see ListAttachedIndices and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListAttachedIndices</a> smart constructor.
data BatchListAttachedIndices
BatchListAttachedIndices' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListAttachedIndices

-- | The pagination token.
[$sel:nextToken:BatchListAttachedIndices'] :: BatchListAttachedIndices -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListAttachedIndices'] :: BatchListAttachedIndices -> Maybe Natural

-- | A reference to the object that has indices attached.
[$sel:targetReference:BatchListAttachedIndices'] :: BatchListAttachedIndices -> ObjectReference

-- | Create a value of <a>BatchListAttachedIndices</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:targetReference:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_targetReference</a> - A reference to the
--   object that has indices attached.
newBatchListAttachedIndices :: ObjectReference -> BatchListAttachedIndices

-- | The pagination token.
batchListAttachedIndices_nextToken :: Lens' BatchListAttachedIndices (Maybe Text)

-- | The maximum number of results to retrieve.
batchListAttachedIndices_maxResults :: Lens' BatchListAttachedIndices (Maybe Natural)

-- | A reference to the object that has indices attached.
batchListAttachedIndices_targetReference :: Lens' BatchListAttachedIndices ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListAttachedIndices.BatchListAttachedIndices
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListAttachedIndices.BatchListAttachedIndices
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListAttachedIndices.BatchListAttachedIndices
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListAttachedIndices.BatchListAttachedIndices
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListAttachedIndices.BatchListAttachedIndices
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListAttachedIndices.BatchListAttachedIndices
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListAttachedIndices.BatchListAttachedIndices


module Network.AWS.CloudDirectory.Types.BatchGetObjectInformation

-- | Retrieves metadata about an object inside a BatchRead operation. For
--   more information, see GetObjectInformation and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetObjectInformation</a> smart constructor.
data BatchGetObjectInformation
BatchGetObjectInformation' :: ObjectReference -> BatchGetObjectInformation

-- | A reference to the object.
[$sel:objectReference:BatchGetObjectInformation'] :: BatchGetObjectInformation -> ObjectReference

-- | Create a value of <a>BatchGetObjectInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchGetObjectInformation'</a>,
--   <a>batchGetObjectInformation_objectReference</a> - A reference to the
--   object.
newBatchGetObjectInformation :: ObjectReference -> BatchGetObjectInformation

-- | A reference to the object.
batchGetObjectInformation_objectReference :: Lens' BatchGetObjectInformation ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchGetObjectInformation.BatchGetObjectInformation
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchGetObjectInformation.BatchGetObjectInformation
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchGetObjectInformation.BatchGetObjectInformation
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchGetObjectInformation.BatchGetObjectInformation
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchGetObjectInformation.BatchGetObjectInformation
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchGetObjectInformation.BatchGetObjectInformation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchGetObjectInformation.BatchGetObjectInformation


module Network.AWS.CloudDirectory.Types.BatchDetachPolicy

-- | Detaches the specified policy from the specified directory inside a
--   BatchWrite operation. For more information, see DetachPolicy and
--   BatchWriteRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachPolicy</a> smart constructor.
data BatchDetachPolicy
BatchDetachPolicy' :: ObjectReference -> ObjectReference -> BatchDetachPolicy

-- | Reference that identifies the policy object.
[$sel:policyReference:BatchDetachPolicy'] :: BatchDetachPolicy -> ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
[$sel:objectReference:BatchDetachPolicy'] :: BatchDetachPolicy -> ObjectReference

-- | Create a value of <a>BatchDetachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyReference:BatchDetachPolicy'</a>,
--   <a>batchDetachPolicy_policyReference</a> - Reference that identifies
--   the policy object.
--   
--   <a>$sel:objectReference:BatchDetachPolicy'</a>,
--   <a>batchDetachPolicy_objectReference</a> - Reference that identifies
--   the object whose policy object will be detached.
newBatchDetachPolicy :: ObjectReference -> ObjectReference -> BatchDetachPolicy

-- | Reference that identifies the policy object.
batchDetachPolicy_policyReference :: Lens' BatchDetachPolicy ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
batchDetachPolicy_objectReference :: Lens' BatchDetachPolicy ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachPolicy.BatchDetachPolicy
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachPolicy.BatchDetachPolicy
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachPolicy.BatchDetachPolicy
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachPolicy.BatchDetachPolicy
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachPolicy.BatchDetachPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachPolicy.BatchDetachPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchDetachPolicy.BatchDetachPolicy


module Network.AWS.CloudDirectory.Types.BatchDetachObject

-- | Represents the output of a DetachObject operation.
--   
--   <i>See:</i> <a>newBatchDetachObject</a> smart constructor.
data BatchDetachObject
BatchDetachObject' :: Maybe Text -> ObjectReference -> Text -> BatchDetachObject

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
[$sel:batchReferenceName:BatchDetachObject'] :: BatchDetachObject -> Maybe Text

-- | Parent reference from which the object with the specified link name is
--   detached.
[$sel:parentReference:BatchDetachObject'] :: BatchDetachObject -> ObjectReference

-- | The name of the link.
[$sel:linkName:BatchDetachObject'] :: BatchDetachObject -> Text

-- | Create a value of <a>BatchDetachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchReferenceName:BatchDetachObject'</a>,
--   <a>batchDetachObject_batchReferenceName</a> - The batch reference
--   name. See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:parentReference:BatchDetachObject'</a>,
--   <a>batchDetachObject_parentReference</a> - Parent reference from which
--   the object with the specified link name is detached.
--   
--   <a>$sel:linkName:BatchDetachObject'</a>,
--   <a>batchDetachObject_linkName</a> - The name of the link.
newBatchDetachObject :: ObjectReference -> Text -> BatchDetachObject

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchDetachObject_batchReferenceName :: Lens' BatchDetachObject (Maybe Text)

-- | Parent reference from which the object with the specified link name is
--   detached.
batchDetachObject_parentReference :: Lens' BatchDetachObject ObjectReference

-- | The name of the link.
batchDetachObject_linkName :: Lens' BatchDetachObject Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachObject.BatchDetachObject
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachObject.BatchDetachObject
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachObject.BatchDetachObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachObject.BatchDetachObject
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachObject.BatchDetachObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachObject.BatchDetachObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchDetachObject.BatchDetachObject


module Network.AWS.CloudDirectory.Types.BatchDetachFromIndex

-- | Detaches the specified object from the specified index inside a
--   BatchRead operation. For more information, see DetachFromIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachFromIndex</a> smart constructor.
data BatchDetachFromIndex
BatchDetachFromIndex' :: ObjectReference -> ObjectReference -> BatchDetachFromIndex

-- | A reference to the index object.
[$sel:indexReference:BatchDetachFromIndex'] :: BatchDetachFromIndex -> ObjectReference

-- | A reference to the object being detached from the index.
[$sel:targetReference:BatchDetachFromIndex'] :: BatchDetachFromIndex -> ObjectReference

-- | Create a value of <a>BatchDetachFromIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexReference:BatchDetachFromIndex'</a>,
--   <a>batchDetachFromIndex_indexReference</a> - A reference to the index
--   object.
--   
--   <a>$sel:targetReference:BatchDetachFromIndex'</a>,
--   <a>batchDetachFromIndex_targetReference</a> - A reference to the
--   object being detached from the index.
newBatchDetachFromIndex :: ObjectReference -> ObjectReference -> BatchDetachFromIndex

-- | A reference to the index object.
batchDetachFromIndex_indexReference :: Lens' BatchDetachFromIndex ObjectReference

-- | A reference to the object being detached from the index.
batchDetachFromIndex_targetReference :: Lens' BatchDetachFromIndex ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachFromIndex.BatchDetachFromIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachFromIndex.BatchDetachFromIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachFromIndex.BatchDetachFromIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachFromIndex.BatchDetachFromIndex
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachFromIndex.BatchDetachFromIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachFromIndex.BatchDetachFromIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchDetachFromIndex.BatchDetachFromIndex


module Network.AWS.CloudDirectory.Types.BatchDeleteObject

-- | Represents the output of a DeleteObject operation.
--   
--   <i>See:</i> <a>newBatchDeleteObject</a> smart constructor.
data BatchDeleteObject
BatchDeleteObject' :: ObjectReference -> BatchDeleteObject

-- | The reference that identifies the object.
[$sel:objectReference:BatchDeleteObject'] :: BatchDeleteObject -> ObjectReference

-- | Create a value of <a>BatchDeleteObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchDeleteObject'</a>,
--   <a>batchDeleteObject_objectReference</a> - The reference that
--   identifies the object.
newBatchDeleteObject :: ObjectReference -> BatchDeleteObject

-- | The reference that identifies the object.
batchDeleteObject_objectReference :: Lens' BatchDeleteObject ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDeleteObject.BatchDeleteObject
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDeleteObject.BatchDeleteObject
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDeleteObject.BatchDeleteObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDeleteObject.BatchDeleteObject
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDeleteObject.BatchDeleteObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDeleteObject.BatchDeleteObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchDeleteObject.BatchDeleteObject


module Network.AWS.CloudDirectory.Types.BatchCreateIndex

-- | Creates an index object inside of a BatchRead operation. For more
--   information, see CreateIndex and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchCreateIndex</a> smart constructor.
data BatchCreateIndex
BatchCreateIndex' :: Maybe Text -> Maybe ObjectReference -> Maybe Text -> [AttributeKey] -> Bool -> BatchCreateIndex

-- | The name of the link between the parent object and the index object.
[$sel:linkName:BatchCreateIndex'] :: BatchCreateIndex -> Maybe Text

-- | A reference to the parent object that contains the index object.
[$sel:parentReference:BatchCreateIndex'] :: BatchCreateIndex -> Maybe ObjectReference

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
[$sel:batchReferenceName:BatchCreateIndex'] :: BatchCreateIndex -> Maybe Text

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
[$sel:orderedIndexedAttributeList:BatchCreateIndex'] :: BatchCreateIndex -> [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
[$sel:isUnique:BatchCreateIndex'] :: BatchCreateIndex -> Bool

-- | Create a value of <a>BatchCreateIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_linkName</a> - The name of the link between the
--   parent object and the index object.
--   
--   <a>$sel:parentReference:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_parentReference</a> - A reference to the parent
--   object that contains the index object.
--   
--   <a>$sel:batchReferenceName:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_batchReferenceName</a> - The batch reference name.
--   See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:orderedIndexedAttributeList:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_orderedIndexedAttributeList</a> - Specifies the
--   attributes that should be indexed on. Currently only a single
--   attribute is supported.
--   
--   <a>$sel:isUnique:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_isUnique</a> - Indicates whether the attribute
--   that is being indexed has unique values or not.
newBatchCreateIndex :: Bool -> BatchCreateIndex

-- | The name of the link between the parent object and the index object.
batchCreateIndex_linkName :: Lens' BatchCreateIndex (Maybe Text)

-- | A reference to the parent object that contains the index object.
batchCreateIndex_parentReference :: Lens' BatchCreateIndex (Maybe ObjectReference)

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchCreateIndex_batchReferenceName :: Lens' BatchCreateIndex (Maybe Text)

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
batchCreateIndex_orderedIndexedAttributeList :: Lens' BatchCreateIndex [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
batchCreateIndex_isUnique :: Lens' BatchCreateIndex Bool
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchCreateIndex.BatchCreateIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchCreateIndex.BatchCreateIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchCreateIndex.BatchCreateIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchCreateIndex.BatchCreateIndex
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchCreateIndex.BatchCreateIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchCreateIndex.BatchCreateIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchCreateIndex.BatchCreateIndex


module Network.AWS.CloudDirectory.Types.BatchAttachToIndex

-- | Attaches the specified object to the specified index inside a
--   BatchRead operation. For more information, see AttachToIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachToIndex</a> smart constructor.
data BatchAttachToIndex
BatchAttachToIndex' :: ObjectReference -> ObjectReference -> BatchAttachToIndex

-- | A reference to the index that you are attaching the object to.
[$sel:indexReference:BatchAttachToIndex'] :: BatchAttachToIndex -> ObjectReference

-- | A reference to the object that you are attaching to the index.
[$sel:targetReference:BatchAttachToIndex'] :: BatchAttachToIndex -> ObjectReference

-- | Create a value of <a>BatchAttachToIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexReference:BatchAttachToIndex'</a>,
--   <a>batchAttachToIndex_indexReference</a> - A reference to the index
--   that you are attaching the object to.
--   
--   <a>$sel:targetReference:BatchAttachToIndex'</a>,
--   <a>batchAttachToIndex_targetReference</a> - A reference to the object
--   that you are attaching to the index.
newBatchAttachToIndex :: ObjectReference -> ObjectReference -> BatchAttachToIndex

-- | A reference to the index that you are attaching the object to.
batchAttachToIndex_indexReference :: Lens' BatchAttachToIndex ObjectReference

-- | A reference to the object that you are attaching to the index.
batchAttachToIndex_targetReference :: Lens' BatchAttachToIndex ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachToIndex.BatchAttachToIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachToIndex.BatchAttachToIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachToIndex.BatchAttachToIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachToIndex.BatchAttachToIndex
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachToIndex.BatchAttachToIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachToIndex.BatchAttachToIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchAttachToIndex.BatchAttachToIndex


module Network.AWS.CloudDirectory.Types.BatchAttachPolicy

-- | Attaches a policy object to a regular object inside a BatchRead
--   operation. For more information, see AttachPolicy and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachPolicy</a> smart constructor.
data BatchAttachPolicy
BatchAttachPolicy' :: ObjectReference -> ObjectReference -> BatchAttachPolicy

-- | The reference that is associated with the policy object.
[$sel:policyReference:BatchAttachPolicy'] :: BatchAttachPolicy -> ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
[$sel:objectReference:BatchAttachPolicy'] :: BatchAttachPolicy -> ObjectReference

-- | Create a value of <a>BatchAttachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyReference:BatchAttachPolicy'</a>,
--   <a>batchAttachPolicy_policyReference</a> - The reference that is
--   associated with the policy object.
--   
--   <a>$sel:objectReference:BatchAttachPolicy'</a>,
--   <a>batchAttachPolicy_objectReference</a> - The reference that
--   identifies the object to which the policy will be attached.
newBatchAttachPolicy :: ObjectReference -> ObjectReference -> BatchAttachPolicy

-- | The reference that is associated with the policy object.
batchAttachPolicy_policyReference :: Lens' BatchAttachPolicy ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
batchAttachPolicy_objectReference :: Lens' BatchAttachPolicy ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachPolicy.BatchAttachPolicy
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachPolicy.BatchAttachPolicy
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachPolicy.BatchAttachPolicy
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachPolicy.BatchAttachPolicy
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachPolicy.BatchAttachPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachPolicy.BatchAttachPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchAttachPolicy.BatchAttachPolicy


module Network.AWS.CloudDirectory.Types.BatchAttachObject

-- | Represents the output of an AttachObject operation.
--   
--   <i>See:</i> <a>newBatchAttachObject</a> smart constructor.
data BatchAttachObject
BatchAttachObject' :: ObjectReference -> ObjectReference -> Text -> BatchAttachObject

-- | The parent object reference.
[$sel:parentReference:BatchAttachObject'] :: BatchAttachObject -> ObjectReference

-- | The child object reference that is to be attached to the object.
[$sel:childReference:BatchAttachObject'] :: BatchAttachObject -> ObjectReference

-- | The name of the link.
[$sel:linkName:BatchAttachObject'] :: BatchAttachObject -> Text

-- | Create a value of <a>BatchAttachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentReference:BatchAttachObject'</a>,
--   <a>batchAttachObject_parentReference</a> - The parent object
--   reference.
--   
--   <a>$sel:childReference:BatchAttachObject'</a>,
--   <a>batchAttachObject_childReference</a> - The child object reference
--   that is to be attached to the object.
--   
--   <a>$sel:linkName:BatchAttachObject'</a>,
--   <a>batchAttachObject_linkName</a> - The name of the link.
newBatchAttachObject :: ObjectReference -> ObjectReference -> Text -> BatchAttachObject

-- | The parent object reference.
batchAttachObject_parentReference :: Lens' BatchAttachObject ObjectReference

-- | The child object reference that is to be attached to the object.
batchAttachObject_childReference :: Lens' BatchAttachObject ObjectReference

-- | The name of the link.
batchAttachObject_linkName :: Lens' BatchAttachObject Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachObject.BatchAttachObject
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachObject.BatchAttachObject
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachObject.BatchAttachObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachObject.BatchAttachObject
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachObject.BatchAttachObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachObject.BatchAttachObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchAttachObject.BatchAttachObject


module Network.AWS.CloudDirectory.Types.ObjectType
newtype ObjectType
ObjectType' :: Text -> ObjectType
[fromObjectType] :: ObjectType -> Text
pattern ObjectType_INDEX :: ObjectType
pattern ObjectType_LEAF_NODE :: ObjectType
pattern ObjectType_NODE :: ObjectType
pattern ObjectType_POLICY :: ObjectType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.ObjectType.ObjectType
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.ObjectType.ObjectType


module Network.AWS.CloudDirectory.Types.Facet

-- | A structure that contains <tt>Name</tt>, <tt>ARN</tt>,
--   <tt>Attributes</tt>, <tt> Rules</tt>, and <tt>ObjectTypes</tt>. See
--   <a>Facets</a> for more information.
--   
--   <i>See:</i> <a>newFacet</a> smart constructor.
data Facet
Facet' :: Maybe FacetStyle -> Maybe Text -> Maybe ObjectType -> Facet

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
[$sel:facetStyle:Facet'] :: Facet -> Maybe FacetStyle

-- | The name of the Facet.
[$sel:name:Facet'] :: Facet -> Maybe Text

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
[$sel:objectType:Facet'] :: Facet -> Maybe ObjectType

-- | Create a value of <a>Facet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:facetStyle:Facet'</a>, <a>facet_facetStyle</a> - There are two
--   different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
--   
--   <a>$sel:name:Facet'</a>, <a>facet_name</a> - The name of the Facet.
--   
--   <a>$sel:objectType:Facet'</a>, <a>facet_objectType</a> - The object
--   type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
newFacet :: Facet

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
facet_facetStyle :: Lens' Facet (Maybe FacetStyle)

-- | The name of the Facet.
facet_name :: Lens' Facet (Maybe Text)

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
facet_objectType :: Lens' Facet (Maybe ObjectType)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.Facet.Facet
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.Facet.Facet
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.Facet.Facet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.Facet.Facet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.Facet.Facet
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.Facet.Facet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.Facet.Facet


module Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that is associated
--   with the directory.
--   
--   <i>See:</i> <a>newPathToObjectIdentifiers</a> smart constructor.
data PathToObjectIdentifiers
PathToObjectIdentifiers' :: Maybe [Text] -> Maybe Text -> PathToObjectIdentifiers

-- | Lists <tt>ObjectIdentifiers</tt> starting from directory root to the
--   object in the request.
[$sel:objectIdentifiers:PathToObjectIdentifiers'] :: PathToObjectIdentifiers -> Maybe [Text]

-- | The path that is used to identify the object starting from directory
--   root.
[$sel:path:PathToObjectIdentifiers'] :: PathToObjectIdentifiers -> Maybe Text

-- | Create a value of <a>PathToObjectIdentifiers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifiers:PathToObjectIdentifiers'</a>,
--   <a>pathToObjectIdentifiers_objectIdentifiers</a> - Lists
--   <tt>ObjectIdentifiers</tt> starting from directory root to the object
--   in the request.
--   
--   <a>$sel:path:PathToObjectIdentifiers'</a>,
--   <a>pathToObjectIdentifiers_path</a> - The path that is used to
--   identify the object starting from directory root.
newPathToObjectIdentifiers :: PathToObjectIdentifiers

-- | Lists <tt>ObjectIdentifiers</tt> starting from directory root to the
--   object in the request.
pathToObjectIdentifiers_objectIdentifiers :: Lens' PathToObjectIdentifiers (Maybe [Text])

-- | The path that is used to identify the object starting from directory
--   root.
pathToObjectIdentifiers_path :: Lens' PathToObjectIdentifiers (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers.PathToObjectIdentifiers
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers.PathToObjectIdentifiers
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers.PathToObjectIdentifiers
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers.PathToObjectIdentifiers
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers.PathToObjectIdentifiers
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers.PathToObjectIdentifiers
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.PathToObjectIdentifiers.PathToObjectIdentifiers


module Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse

-- | Represents the output of a ListObjectParentPaths response operation.
--   
--   <i>See:</i> <a>newBatchListObjectParentPathsResponse</a> smart
--   constructor.
data BatchListObjectParentPathsResponse
BatchListObjectParentPathsResponse' :: Maybe Text -> Maybe [PathToObjectIdentifiers] -> BatchListObjectParentPathsResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectParentPathsResponse'] :: BatchListObjectParentPathsResponse -> Maybe Text

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
[$sel:pathToObjectIdentifiersList:BatchListObjectParentPathsResponse'] :: BatchListObjectParentPathsResponse -> Maybe [PathToObjectIdentifiers]

-- | Create a value of <a>BatchListObjectParentPathsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParentPathsResponse'</a>,
--   <a>batchListObjectParentPathsResponse_nextToken</a> - The pagination
--   token.
--   
--   
--   <a>$sel:pathToObjectIdentifiersList:BatchListObjectParentPathsResponse'</a>,
--   <a>batchListObjectParentPathsResponse_pathToObjectIdentifiersList</a>
--   - Returns the path to the <tt>ObjectIdentifiers</tt> that are
--   associated with the directory.
newBatchListObjectParentPathsResponse :: BatchListObjectParentPathsResponse

-- | The pagination token.
batchListObjectParentPathsResponse_nextToken :: Lens' BatchListObjectParentPathsResponse (Maybe Text)

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
batchListObjectParentPathsResponse_pathToObjectIdentifiersList :: Lens' BatchListObjectParentPathsResponse (Maybe [PathToObjectIdentifiers])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse.BatchListObjectParentPathsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse.BatchListObjectParentPathsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse.BatchListObjectParentPathsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse.BatchListObjectParentPathsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse.BatchListObjectParentPathsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse.BatchListObjectParentPathsResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectParentPathsResponse.BatchListObjectParentPathsResponse


module Network.AWS.CloudDirectory.Types.PolicyAttachment

-- | Contains the <tt>PolicyType</tt>, <tt>PolicyId</tt>, and the
--   <tt>ObjectIdentifier</tt> to which it is attached. For more
--   information, see <a>Policies</a>.
--   
--   <i>See:</i> <a>newPolicyAttachment</a> smart constructor.
data PolicyAttachment
PolicyAttachment' :: Maybe Text -> Maybe Text -> Maybe Text -> PolicyAttachment

-- | The type of policy that can be associated with
--   <tt>PolicyAttachment</tt>.
[$sel:policyType:PolicyAttachment'] :: PolicyAttachment -> Maybe Text

-- | The <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
[$sel:objectIdentifier:PolicyAttachment'] :: PolicyAttachment -> Maybe Text

-- | The ID of <tt>PolicyAttachment</tt>.
[$sel:policyId:PolicyAttachment'] :: PolicyAttachment -> Maybe Text

-- | Create a value of <a>PolicyAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyType:PolicyAttachment'</a>,
--   <a>policyAttachment_policyType</a> - The type of policy that can be
--   associated with <tt>PolicyAttachment</tt>.
--   
--   <a>$sel:objectIdentifier:PolicyAttachment'</a>,
--   <a>policyAttachment_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
--   
--   <a>$sel:policyId:PolicyAttachment'</a>,
--   <a>policyAttachment_policyId</a> - The ID of
--   <tt>PolicyAttachment</tt>.
newPolicyAttachment :: PolicyAttachment

-- | The type of policy that can be associated with
--   <tt>PolicyAttachment</tt>.
policyAttachment_policyType :: Lens' PolicyAttachment (Maybe Text)

-- | The <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
policyAttachment_objectIdentifier :: Lens' PolicyAttachment (Maybe Text)

-- | The ID of <tt>PolicyAttachment</tt>.
policyAttachment_policyId :: Lens' PolicyAttachment (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.PolicyAttachment.PolicyAttachment
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.PolicyAttachment.PolicyAttachment
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.PolicyAttachment.PolicyAttachment
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.PolicyAttachment.PolicyAttachment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.PolicyAttachment.PolicyAttachment
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.PolicyAttachment.PolicyAttachment
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.PolicyAttachment.PolicyAttachment


module Network.AWS.CloudDirectory.Types.PolicyToPath

-- | Used when a regular object exists in a Directory and you want to find
--   all of the policies that are associated with that object and the
--   parent to that object.
--   
--   <i>See:</i> <a>newPolicyToPath</a> smart constructor.
data PolicyToPath
PolicyToPath' :: Maybe [PolicyAttachment] -> Maybe Text -> PolicyToPath

-- | List of policy objects.
[$sel:policies:PolicyToPath'] :: PolicyToPath -> Maybe [PolicyAttachment]

-- | The path that is referenced from the root.
[$sel:path:PolicyToPath'] :: PolicyToPath -> Maybe Text

-- | Create a value of <a>PolicyToPath</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policies:PolicyToPath'</a>, <a>policyToPath_policies</a> -
--   List of policy objects.
--   
--   <a>$sel:path:PolicyToPath'</a>, <a>policyToPath_path</a> - The path
--   that is referenced from the root.
newPolicyToPath :: PolicyToPath

-- | List of policy objects.
policyToPath_policies :: Lens' PolicyToPath (Maybe [PolicyAttachment])

-- | The path that is referenced from the root.
policyToPath_path :: Lens' PolicyToPath (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.PolicyToPath.PolicyToPath
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.PolicyToPath.PolicyToPath
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.PolicyToPath.PolicyToPath
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.PolicyToPath.PolicyToPath
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.PolicyToPath.PolicyToPath
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.PolicyToPath.PolicyToPath
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.PolicyToPath.PolicyToPath


module Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse

-- | Represents the output of a LookupPolicy response operation.
--   
--   <i>See:</i> <a>newBatchLookupPolicyResponse</a> smart constructor.
data BatchLookupPolicyResponse
BatchLookupPolicyResponse' :: Maybe Text -> Maybe [PolicyToPath] -> BatchLookupPolicyResponse

-- | The pagination token.
[$sel:nextToken:BatchLookupPolicyResponse'] :: BatchLookupPolicyResponse -> Maybe Text

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
[$sel:policyToPathList:BatchLookupPolicyResponse'] :: BatchLookupPolicyResponse -> Maybe [PolicyToPath]

-- | Create a value of <a>BatchLookupPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchLookupPolicyResponse'</a>,
--   <a>batchLookupPolicyResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:policyToPathList:BatchLookupPolicyResponse'</a>,
--   <a>batchLookupPolicyResponse_policyToPathList</a> - Provides list of
--   path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
newBatchLookupPolicyResponse :: BatchLookupPolicyResponse

-- | The pagination token.
batchLookupPolicyResponse_nextToken :: Lens' BatchLookupPolicyResponse (Maybe Text)

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
batchLookupPolicyResponse_policyToPathList :: Lens' BatchLookupPolicyResponse (Maybe [PolicyToPath])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse.BatchLookupPolicyResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse.BatchLookupPolicyResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse.BatchLookupPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse.BatchLookupPolicyResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse.BatchLookupPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse.BatchLookupPolicyResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchLookupPolicyResponse.BatchLookupPolicyResponse


module Network.AWS.CloudDirectory.Types.RangeMode
newtype RangeMode
RangeMode' :: Text -> RangeMode
[fromRangeMode] :: RangeMode -> Text
pattern RangeMode_EXCLUSIVE :: RangeMode
pattern RangeMode_FIRST :: RangeMode
pattern RangeMode_INCLUSIVE :: RangeMode
pattern RangeMode_LAST :: RangeMode
pattern RangeMode_LAST_BEFORE_MISSING_VALUES :: RangeMode
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.RangeMode.RangeMode
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.RangeMode.RangeMode


module Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior
newtype RequiredAttributeBehavior
RequiredAttributeBehavior' :: Text -> RequiredAttributeBehavior
[fromRequiredAttributeBehavior] :: RequiredAttributeBehavior -> Text
pattern RequiredAttributeBehavior_NOT_REQUIRED :: RequiredAttributeBehavior
pattern RequiredAttributeBehavior_REQUIRED_ALWAYS :: RequiredAttributeBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.RequiredAttributeBehavior.RequiredAttributeBehavior


module Network.AWS.CloudDirectory.Types.RuleType
newtype RuleType
RuleType' :: Text -> RuleType
[fromRuleType] :: RuleType -> Text
pattern RuleType_BINARY_LENGTH :: RuleType
pattern RuleType_NUMBER_COMPARISON :: RuleType
pattern RuleType_STRING_FROM_SET :: RuleType
pattern RuleType_STRING_LENGTH :: RuleType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.RuleType.RuleType
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.RuleType.RuleType


module Network.AWS.CloudDirectory.Types.Rule

-- | Contains an Amazon Resource Name (ARN) and parameters that are
--   associated with the rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe RuleType -> Maybe (HashMap Text Text) -> Rule

-- | The type of attribute validation rule.
[$sel:type':Rule'] :: Rule -> Maybe RuleType

-- | The minimum and maximum parameters that are associated with the rule.
[$sel:parameters:Rule'] :: Rule -> Maybe (HashMap Text Text)

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Rule'</a>, <a>rule_type</a> - The type of attribute
--   validation rule.
--   
--   <a>$sel:parameters:Rule'</a>, <a>rule_parameters</a> - The minimum and
--   maximum parameters that are associated with the rule.
newRule :: Rule

-- | The type of attribute validation rule.
rule_type :: Lens' Rule (Maybe RuleType)

-- | The minimum and maximum parameters that are associated with the rule.
rule_parameters :: Lens' Rule (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.Rule.Rule
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.Rule.Rule
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.Rule.Rule
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.Rule.Rule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.Rule.Rule
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.Rule.Rule
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.Rule.Rule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.Rule.Rule


module Network.AWS.CloudDirectory.Types.SchemaFacet

-- | A facet.
--   
--   <i>See:</i> <a>newSchemaFacet</a> smart constructor.
data SchemaFacet
SchemaFacet' :: Maybe Text -> Maybe Text -> SchemaFacet

-- | The ARN of the schema that contains the facet with no minor component.
--   See arns and <a>In-Place Schema Upgrade</a> for a description of when
--   to provide minor versions. If this value is set, FacetName must also
--   be set.
[$sel:schemaArn:SchemaFacet'] :: SchemaFacet -> Maybe Text

-- | The name of the facet. If this value is set, SchemaArn must also be
--   set.
[$sel:facetName:SchemaFacet'] :: SchemaFacet -> Maybe Text

-- | Create a value of <a>SchemaFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:SchemaFacet'</a>, <a>schemaFacet_schemaArn</a> - The
--   ARN of the schema that contains the facet with no minor component. See
--   arns and <a>In-Place Schema Upgrade</a> for a description of when to
--   provide minor versions. If this value is set, FacetName must also be
--   set.
--   
--   <a>$sel:facetName:SchemaFacet'</a>, <a>schemaFacet_facetName</a> - The
--   name of the facet. If this value is set, SchemaArn must also be set.
newSchemaFacet :: SchemaFacet

-- | The ARN of the schema that contains the facet with no minor component.
--   See arns and <a>In-Place Schema Upgrade</a> for a description of when
--   to provide minor versions. If this value is set, FacetName must also
--   be set.
schemaFacet_schemaArn :: Lens' SchemaFacet (Maybe Text)

-- | The name of the facet. If this value is set, SchemaArn must also be
--   set.
schemaFacet_facetName :: Lens' SchemaFacet (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.SchemaFacet.SchemaFacet


module Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject

-- | A batch operation to remove a facet from an object.
--   
--   <i>See:</i> <a>newBatchRemoveFacetFromObject</a> smart constructor.
data BatchRemoveFacetFromObject
BatchRemoveFacetFromObject' :: SchemaFacet -> ObjectReference -> BatchRemoveFacetFromObject

-- | The facet to remove from the object.
[$sel:schemaFacet:BatchRemoveFacetFromObject'] :: BatchRemoveFacetFromObject -> SchemaFacet

-- | A reference to the object whose facet will be removed.
[$sel:objectReference:BatchRemoveFacetFromObject'] :: BatchRemoveFacetFromObject -> ObjectReference

-- | Create a value of <a>BatchRemoveFacetFromObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacet:BatchRemoveFacetFromObject'</a>,
--   <a>batchRemoveFacetFromObject_schemaFacet</a> - The facet to remove
--   from the object.
--   
--   <a>$sel:objectReference:BatchRemoveFacetFromObject'</a>,
--   <a>batchRemoveFacetFromObject_objectReference</a> - A reference to the
--   object whose facet will be removed.
newBatchRemoveFacetFromObject :: SchemaFacet -> ObjectReference -> BatchRemoveFacetFromObject

-- | The facet to remove from the object.
batchRemoveFacetFromObject_schemaFacet :: Lens' BatchRemoveFacetFromObject SchemaFacet

-- | A reference to the object whose facet will be removed.
batchRemoveFacetFromObject_objectReference :: Lens' BatchRemoveFacetFromObject ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject.BatchRemoveFacetFromObject
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject.BatchRemoveFacetFromObject
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject.BatchRemoveFacetFromObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject.BatchRemoveFacetFromObject
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject.BatchRemoveFacetFromObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject.BatchRemoveFacetFromObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchRemoveFacetFromObject.BatchRemoveFacetFromObject


module Network.AWS.CloudDirectory.Types.BatchListObjectAttributes

-- | Represents the output of a ListObjectAttributes operation.
--   
--   <i>See:</i> <a>newBatchListObjectAttributes</a> smart constructor.
data BatchListObjectAttributes
BatchListObjectAttributes' :: Maybe Text -> Maybe Natural -> Maybe SchemaFacet -> ObjectReference -> BatchListObjectAttributes

-- | The pagination token.
[$sel:nextToken:BatchListObjectAttributes'] :: BatchListObjectAttributes -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:BatchListObjectAttributes'] :: BatchListObjectAttributes -> Maybe Natural

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
[$sel:facetFilter:BatchListObjectAttributes'] :: BatchListObjectAttributes -> Maybe SchemaFacet

-- | Reference of the object whose attributes need to be listed.
[$sel:objectReference:BatchListObjectAttributes'] :: BatchListObjectAttributes -> ObjectReference

-- | Create a value of <a>BatchListObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_maxResults</a> - The maximum number of
--   items to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:facetFilter:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_facetFilter</a> - Used to filter the list
--   of object attributes that are associated with a certain facet.
--   
--   <a>$sel:objectReference:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_objectReference</a> - Reference of the
--   object whose attributes need to be listed.
newBatchListObjectAttributes :: ObjectReference -> BatchListObjectAttributes

-- | The pagination token.
batchListObjectAttributes_nextToken :: Lens' BatchListObjectAttributes (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
batchListObjectAttributes_maxResults :: Lens' BatchListObjectAttributes (Maybe Natural)

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
batchListObjectAttributes_facetFilter :: Lens' BatchListObjectAttributes (Maybe SchemaFacet)

-- | Reference of the object whose attributes need to be listed.
batchListObjectAttributes_objectReference :: Lens' BatchListObjectAttributes ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectAttributes.BatchListObjectAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectAttributes.BatchListObjectAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectAttributes.BatchListObjectAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectAttributes.BatchListObjectAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectAttributes.BatchListObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectAttributes.BatchListObjectAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListObjectAttributes.BatchListObjectAttributes


module Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse

-- | Represents the output of a GetObjectInformation response operation.
--   
--   <i>See:</i> <a>newBatchGetObjectInformationResponse</a> smart
--   constructor.
data BatchGetObjectInformationResponse
BatchGetObjectInformationResponse' :: Maybe [SchemaFacet] -> Maybe Text -> BatchGetObjectInformationResponse

-- | The facets attached to the specified object.
[$sel:schemaFacets:BatchGetObjectInformationResponse'] :: BatchGetObjectInformationResponse -> Maybe [SchemaFacet]

-- | The <tt>ObjectIdentifier</tt> of the specified object.
[$sel:objectIdentifier:BatchGetObjectInformationResponse'] :: BatchGetObjectInformationResponse -> Maybe Text

-- | Create a value of <a>BatchGetObjectInformationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacets:BatchGetObjectInformationResponse'</a>,
--   <a>batchGetObjectInformationResponse_schemaFacets</a> - The facets
--   attached to the specified object.
--   
--   <a>$sel:objectIdentifier:BatchGetObjectInformationResponse'</a>,
--   <a>batchGetObjectInformationResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the specified object.
newBatchGetObjectInformationResponse :: BatchGetObjectInformationResponse

-- | The facets attached to the specified object.
batchGetObjectInformationResponse_schemaFacets :: Lens' BatchGetObjectInformationResponse (Maybe [SchemaFacet])

-- | The <tt>ObjectIdentifier</tt> of the specified object.
batchGetObjectInformationResponse_objectIdentifier :: Lens' BatchGetObjectInformationResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse.BatchGetObjectInformationResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse.BatchGetObjectInformationResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse.BatchGetObjectInformationResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse.BatchGetObjectInformationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse.BatchGetObjectInformationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse.BatchGetObjectInformationResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchGetObjectInformationResponse.BatchGetObjectInformationResponse


module Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes

-- | Retrieves attributes within a facet that are associated with an object
--   inside an BatchRead operation. For more information, see
--   GetObjectAttributes and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetObjectAttributes</a> smart constructor.
data BatchGetObjectAttributes
BatchGetObjectAttributes' :: ObjectReference -> SchemaFacet -> [Text] -> BatchGetObjectAttributes

-- | Reference that identifies the object whose attributes will be
--   retrieved.
[$sel:objectReference:BatchGetObjectAttributes'] :: BatchGetObjectAttributes -> ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
[$sel:schemaFacet:BatchGetObjectAttributes'] :: BatchGetObjectAttributes -> SchemaFacet

-- | List of attribute names whose values will be retrieved.
[$sel:attributeNames:BatchGetObjectAttributes'] :: BatchGetObjectAttributes -> [Text]

-- | Create a value of <a>BatchGetObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_objectReference</a> - Reference that
--   identifies the object whose attributes will be retrieved.
--   
--   <a>$sel:schemaFacet:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_schemaFacet</a> - Identifier for the facet
--   whose attributes will be retrieved. See SchemaFacet for details.
--   
--   <a>$sel:attributeNames:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_attributeNames</a> - List of attribute
--   names whose values will be retrieved.
newBatchGetObjectAttributes :: ObjectReference -> SchemaFacet -> BatchGetObjectAttributes

-- | Reference that identifies the object whose attributes will be
--   retrieved.
batchGetObjectAttributes_objectReference :: Lens' BatchGetObjectAttributes ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
batchGetObjectAttributes_schemaFacet :: Lens' BatchGetObjectAttributes SchemaFacet

-- | List of attribute names whose values will be retrieved.
batchGetObjectAttributes_attributeNames :: Lens' BatchGetObjectAttributes [Text]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes.BatchGetObjectAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes.BatchGetObjectAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes.BatchGetObjectAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes.BatchGetObjectAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes.BatchGetObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes.BatchGetObjectAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchGetObjectAttributes.BatchGetObjectAttributes


module Network.AWS.CloudDirectory.Types.Tag

-- | The tag structure that contains a tag key and value.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The key that is associated with the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The value that is associated with the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key that is associated with
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value that is
--   associated with the tag.
newTag :: Tag

-- | The key that is associated with the tag.
tag_key :: Lens' Tag (Maybe Text)

-- | The value that is associated with the tag.
tag_value :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.Tag.Tag


module Network.AWS.CloudDirectory.Types.TypedAttributeValue

-- | Represents the data for a typed attribute. You can set one, and only
--   one, of the elements. Each attribute in an item is a name-value pair.
--   Attributes have a single value.
--   
--   <i>See:</i> <a>newTypedAttributeValue</a> smart constructor.
data TypedAttributeValue
TypedAttributeValue' :: Maybe Text -> Maybe Bool -> Maybe Base64 -> Maybe Text -> Maybe POSIX -> TypedAttributeValue

-- | A string data value.
[$sel:stringValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Text

-- | A Boolean data value.
[$sel:booleanValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Bool

-- | A binary data value.
[$sel:binaryValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Base64

-- | A number data value.
[$sel:numberValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Text

-- | A date and time value.
[$sel:datetimeValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe POSIX

-- | Create a value of <a>TypedAttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_stringValue</a> - A string data value.
--   
--   <a>$sel:booleanValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_booleanValue</a> - A Boolean data value.
--   
--   <a>$sel:binaryValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_binaryValue</a> - A binary data value.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:numberValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_numberValue</a> - A number data value.
--   
--   <a>$sel:datetimeValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_datetimeValue</a> - A date and time value.
newTypedAttributeValue :: TypedAttributeValue

-- | A string data value.
typedAttributeValue_stringValue :: Lens' TypedAttributeValue (Maybe Text)

-- | A Boolean data value.
typedAttributeValue_booleanValue :: Lens' TypedAttributeValue (Maybe Bool)

-- | A binary data value.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
typedAttributeValue_binaryValue :: Lens' TypedAttributeValue (Maybe ByteString)

-- | A number data value.
typedAttributeValue_numberValue :: Lens' TypedAttributeValue (Maybe Text)

-- | A date and time value.
typedAttributeValue_datetimeValue :: Lens' TypedAttributeValue (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedAttributeValue.TypedAttributeValue


module Network.AWS.CloudDirectory.Types.FacetAttributeDefinition

-- | A facet attribute definition. See <a>Attribute References</a> for more
--   information.
--   
--   <i>See:</i> <a>newFacetAttributeDefinition</a> smart constructor.
data FacetAttributeDefinition
FacetAttributeDefinition' :: Maybe Bool -> Maybe (HashMap Text Rule) -> Maybe TypedAttributeValue -> FacetAttributeType -> FacetAttributeDefinition

-- | Whether the attribute is mutable or not.
[$sel:isImmutable:FacetAttributeDefinition'] :: FacetAttributeDefinition -> Maybe Bool

-- | Validation rules attached to the attribute definition.
[$sel:rules:FacetAttributeDefinition'] :: FacetAttributeDefinition -> Maybe (HashMap Text Rule)

-- | The default value of the attribute (if configured).
[$sel:defaultValue:FacetAttributeDefinition'] :: FacetAttributeDefinition -> Maybe TypedAttributeValue

-- | The type of the attribute.
[$sel:type':FacetAttributeDefinition'] :: FacetAttributeDefinition -> FacetAttributeType

-- | Create a value of <a>FacetAttributeDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isImmutable:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_isImmutable</a> - Whether the attribute is
--   mutable or not.
--   
--   <a>$sel:rules:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_rules</a> - Validation rules attached to
--   the attribute definition.
--   
--   <a>$sel:defaultValue:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_defaultValue</a> - The default value of
--   the attribute (if configured).
--   
--   <a>$sel:type':FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_type</a> - The type of the attribute.
newFacetAttributeDefinition :: FacetAttributeType -> FacetAttributeDefinition

-- | Whether the attribute is mutable or not.
facetAttributeDefinition_isImmutable :: Lens' FacetAttributeDefinition (Maybe Bool)

-- | Validation rules attached to the attribute definition.
facetAttributeDefinition_rules :: Lens' FacetAttributeDefinition (Maybe (HashMap Text Rule))

-- | The default value of the attribute (if configured).
facetAttributeDefinition_defaultValue :: Lens' FacetAttributeDefinition (Maybe TypedAttributeValue)

-- | The type of the attribute.
facetAttributeDefinition_type :: Lens' FacetAttributeDefinition FacetAttributeType
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.FacetAttributeDefinition.FacetAttributeDefinition


module Network.AWS.CloudDirectory.Types.FacetAttribute

-- | An attribute that is associated with the Facet.
--   
--   <i>See:</i> <a>newFacetAttribute</a> smart constructor.
data FacetAttribute
FacetAttribute' :: Maybe FacetAttributeReference -> Maybe RequiredAttributeBehavior -> Maybe FacetAttributeDefinition -> Text -> FacetAttribute

-- | An attribute reference that is associated with the attribute. See
--   <a>Attribute References</a> for more information.
[$sel:attributeReference:FacetAttribute'] :: FacetAttribute -> Maybe FacetAttributeReference

-- | The required behavior of the <tt>FacetAttribute</tt>.
[$sel:requiredBehavior:FacetAttribute'] :: FacetAttribute -> Maybe RequiredAttributeBehavior

-- | A facet attribute consists of either a definition or a reference. This
--   structure contains the attribute definition. See <a>Attribute
--   References</a> for more information.
[$sel:attributeDefinition:FacetAttribute'] :: FacetAttribute -> Maybe FacetAttributeDefinition

-- | The name of the facet attribute.
[$sel:name:FacetAttribute'] :: FacetAttribute -> Text

-- | Create a value of <a>FacetAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeReference:FacetAttribute'</a>,
--   <a>facetAttribute_attributeReference</a> - An attribute reference that
--   is associated with the attribute. See <a>Attribute References</a> for
--   more information.
--   
--   <a>$sel:requiredBehavior:FacetAttribute'</a>,
--   <a>facetAttribute_requiredBehavior</a> - The required behavior of the
--   <tt>FacetAttribute</tt>.
--   
--   <a>$sel:attributeDefinition:FacetAttribute'</a>,
--   <a>facetAttribute_attributeDefinition</a> - A facet attribute consists
--   of either a definition or a reference. This structure contains the
--   attribute definition. See <a>Attribute References</a> for more
--   information.
--   
--   <a>$sel:name:FacetAttribute'</a>, <a>facetAttribute_name</a> - The
--   name of the facet attribute.
newFacetAttribute :: Text -> FacetAttribute

-- | An attribute reference that is associated with the attribute. See
--   <a>Attribute References</a> for more information.
facetAttribute_attributeReference :: Lens' FacetAttribute (Maybe FacetAttributeReference)

-- | The required behavior of the <tt>FacetAttribute</tt>.
facetAttribute_requiredBehavior :: Lens' FacetAttribute (Maybe RequiredAttributeBehavior)

-- | A facet attribute consists of either a definition or a reference. This
--   structure contains the attribute definition. See <a>Attribute
--   References</a> for more information.
facetAttribute_attributeDefinition :: Lens' FacetAttribute (Maybe FacetAttributeDefinition)

-- | The name of the facet attribute.
facetAttribute_name :: Lens' FacetAttribute Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.FacetAttribute.FacetAttribute


module Network.AWS.CloudDirectory.Types.AttributeNameAndValue

-- | Identifies the attribute name and value for a typed link.
--   
--   <i>See:</i> <a>newAttributeNameAndValue</a> smart constructor.
data AttributeNameAndValue
AttributeNameAndValue' :: Text -> TypedAttributeValue -> AttributeNameAndValue

-- | The attribute name of the typed link.
[$sel:attributeName:AttributeNameAndValue'] :: AttributeNameAndValue -> Text

-- | The value for the typed link.
[$sel:value:AttributeNameAndValue'] :: AttributeNameAndValue -> TypedAttributeValue

-- | Create a value of <a>AttributeNameAndValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:AttributeNameAndValue'</a>,
--   <a>attributeNameAndValue_attributeName</a> - The attribute name of the
--   typed link.
--   
--   <a>$sel:value:AttributeNameAndValue'</a>,
--   <a>attributeNameAndValue_value</a> - The value for the typed link.
newAttributeNameAndValue :: Text -> TypedAttributeValue -> AttributeNameAndValue

-- | The attribute name of the typed link.
attributeNameAndValue_attributeName :: Lens' AttributeNameAndValue Text

-- | The value for the typed link.
attributeNameAndValue_value :: Lens' AttributeNameAndValue TypedAttributeValue
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.AttributeNameAndValue.AttributeNameAndValue


module Network.AWS.CloudDirectory.Types.AttributeKeyAndValue

-- | The combination of an attribute key and an attribute value.
--   
--   <i>See:</i> <a>newAttributeKeyAndValue</a> smart constructor.
data AttributeKeyAndValue
AttributeKeyAndValue' :: AttributeKey -> TypedAttributeValue -> AttributeKeyAndValue

-- | The key of the attribute.
[$sel:key:AttributeKeyAndValue'] :: AttributeKeyAndValue -> AttributeKey

-- | The value of the attribute.
[$sel:value:AttributeKeyAndValue'] :: AttributeKeyAndValue -> TypedAttributeValue

-- | Create a value of <a>AttributeKeyAndValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AttributeKeyAndValue'</a>, <a>attributeKeyAndValue_key</a>
--   - The key of the attribute.
--   
--   <a>$sel:value:AttributeKeyAndValue'</a>,
--   <a>attributeKeyAndValue_value</a> - The value of the attribute.
newAttributeKeyAndValue :: AttributeKey -> TypedAttributeValue -> AttributeKeyAndValue

-- | The key of the attribute.
attributeKeyAndValue_key :: Lens' AttributeKeyAndValue AttributeKey

-- | The value of the attribute.
attributeKeyAndValue_value :: Lens' AttributeKeyAndValue TypedAttributeValue
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.AttributeKeyAndValue.AttributeKeyAndValue


module Network.AWS.CloudDirectory.Types.IndexAttachment

-- | Represents an index and an attached object.
--   
--   <i>See:</i> <a>newIndexAttachment</a> smart constructor.
data IndexAttachment
IndexAttachment' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> IndexAttachment

-- | In response to ListIndex, the <tt>ObjectIdentifier</tt> of the object
--   attached to the index. In response to ListAttachedIndices, the
--   <tt>ObjectIdentifier</tt> of the index attached to the object. This
--   field will always contain the <tt>ObjectIdentifier</tt> of the object
--   on the opposite side of the attachment specified in the query.
[$sel:objectIdentifier:IndexAttachment'] :: IndexAttachment -> Maybe Text

-- | The indexed attribute values.
[$sel:indexedAttributes:IndexAttachment'] :: IndexAttachment -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>IndexAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:IndexAttachment'</a>,
--   <a>indexAttachment_objectIdentifier</a> - In response to ListIndex,
--   the <tt>ObjectIdentifier</tt> of the object attached to the index. In
--   response to ListAttachedIndices, the <tt>ObjectIdentifier</tt> of the
--   index attached to the object. This field will always contain the
--   <tt>ObjectIdentifier</tt> of the object on the opposite side of the
--   attachment specified in the query.
--   
--   <a>$sel:indexedAttributes:IndexAttachment'</a>,
--   <a>indexAttachment_indexedAttributes</a> - The indexed attribute
--   values.
newIndexAttachment :: IndexAttachment

-- | In response to ListIndex, the <tt>ObjectIdentifier</tt> of the object
--   attached to the index. In response to ListAttachedIndices, the
--   <tt>ObjectIdentifier</tt> of the index attached to the object. This
--   field will always contain the <tt>ObjectIdentifier</tt> of the object
--   on the opposite side of the attachment specified in the query.
indexAttachment_objectIdentifier :: Lens' IndexAttachment (Maybe Text)

-- | The indexed attribute values.
indexAttachment_indexedAttributes :: Lens' IndexAttachment (Maybe [AttributeKeyAndValue])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.IndexAttachment.IndexAttachment
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.IndexAttachment.IndexAttachment
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.IndexAttachment.IndexAttachment
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.IndexAttachment.IndexAttachment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.IndexAttachment.IndexAttachment
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.IndexAttachment.IndexAttachment
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.IndexAttachment.IndexAttachment


module Network.AWS.CloudDirectory.Types.BatchListIndexResponse

-- | Represents the output of a ListIndex response operation.
--   
--   <i>See:</i> <a>newBatchListIndexResponse</a> smart constructor.
data BatchListIndexResponse
BatchListIndexResponse' :: Maybe Text -> Maybe [IndexAttachment] -> BatchListIndexResponse

-- | The pagination token.
[$sel:nextToken:BatchListIndexResponse'] :: BatchListIndexResponse -> Maybe Text

-- | The objects and indexed values attached to the index.
[$sel:indexAttachments:BatchListIndexResponse'] :: BatchListIndexResponse -> Maybe [IndexAttachment]

-- | Create a value of <a>BatchListIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIndexResponse'</a>,
--   <a>batchListIndexResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:indexAttachments:BatchListIndexResponse'</a>,
--   <a>batchListIndexResponse_indexAttachments</a> - The objects and
--   indexed values attached to the index.
newBatchListIndexResponse :: BatchListIndexResponse

-- | The pagination token.
batchListIndexResponse_nextToken :: Lens' BatchListIndexResponse (Maybe Text)

-- | The objects and indexed values attached to the index.
batchListIndexResponse_indexAttachments :: Lens' BatchListIndexResponse (Maybe [IndexAttachment])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListIndexResponse.BatchListIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListIndexResponse.BatchListIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListIndexResponse.BatchListIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListIndexResponse.BatchListIndexResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListIndexResponse.BatchListIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListIndexResponse.BatchListIndexResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListIndexResponse.BatchListIndexResponse


module Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse

-- | Represents the output of a ListAttachedIndices response operation.
--   
--   <i>See:</i> <a>newBatchListAttachedIndicesResponse</a> smart
--   constructor.
data BatchListAttachedIndicesResponse
BatchListAttachedIndicesResponse' :: Maybe Text -> Maybe [IndexAttachment] -> BatchListAttachedIndicesResponse

-- | The pagination token.
[$sel:nextToken:BatchListAttachedIndicesResponse'] :: BatchListAttachedIndicesResponse -> Maybe Text

-- | The indices attached to the specified object.
[$sel:indexAttachments:BatchListAttachedIndicesResponse'] :: BatchListAttachedIndicesResponse -> Maybe [IndexAttachment]

-- | Create a value of <a>BatchListAttachedIndicesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListAttachedIndicesResponse'</a>,
--   <a>batchListAttachedIndicesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:indexAttachments:BatchListAttachedIndicesResponse'</a>,
--   <a>batchListAttachedIndicesResponse_indexAttachments</a> - The indices
--   attached to the specified object.
newBatchListAttachedIndicesResponse :: BatchListAttachedIndicesResponse

-- | The pagination token.
batchListAttachedIndicesResponse_nextToken :: Lens' BatchListAttachedIndicesResponse (Maybe Text)

-- | The indices attached to the specified object.
batchListAttachedIndicesResponse_indexAttachments :: Lens' BatchListAttachedIndicesResponse (Maybe [IndexAttachment])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse.BatchListAttachedIndicesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse.BatchListAttachedIndicesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse.BatchListAttachedIndicesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse.BatchListAttachedIndicesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse.BatchListAttachedIndicesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse.BatchListAttachedIndicesResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListAttachedIndicesResponse.BatchListAttachedIndicesResponse


module Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse

-- | Represents the output of a ListObjectAttributes response operation.
--   
--   <i>See:</i> <a>newBatchListObjectAttributesResponse</a> smart
--   constructor.
data BatchListObjectAttributesResponse
BatchListObjectAttributesResponse' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> BatchListObjectAttributesResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectAttributesResponse'] :: BatchListObjectAttributesResponse -> Maybe Text

-- | The attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key; attribute value is the value.
[$sel:attributes:BatchListObjectAttributesResponse'] :: BatchListObjectAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>BatchListObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectAttributesResponse'</a>,
--   <a>batchListObjectAttributesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attributes:BatchListObjectAttributesResponse'</a>,
--   <a>batchListObjectAttributesResponse_attributes</a> - The attributes
--   map that is associated with the object. <tt>AttributeArn</tt> is the
--   key; attribute value is the value.
newBatchListObjectAttributesResponse :: BatchListObjectAttributesResponse

-- | The pagination token.
batchListObjectAttributesResponse_nextToken :: Lens' BatchListObjectAttributesResponse (Maybe Text)

-- | The attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key; attribute value is the value.
batchListObjectAttributesResponse_attributes :: Lens' BatchListObjectAttributesResponse (Maybe [AttributeKeyAndValue])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse.BatchListObjectAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse.BatchListObjectAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse.BatchListObjectAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse.BatchListObjectAttributesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse.BatchListObjectAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse.BatchListObjectAttributesResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListObjectAttributesResponse.BatchListObjectAttributesResponse


module Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse

-- | Represents the output of a GetObjectAttributes response operation.
--   
--   <i>See:</i> <a>newBatchGetObjectAttributesResponse</a> smart
--   constructor.
data BatchGetObjectAttributesResponse
BatchGetObjectAttributesResponse' :: Maybe [AttributeKeyAndValue] -> BatchGetObjectAttributesResponse

-- | The attribute values that are associated with an object.
[$sel:attributes:BatchGetObjectAttributesResponse'] :: BatchGetObjectAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>BatchGetObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:BatchGetObjectAttributesResponse'</a>,
--   <a>batchGetObjectAttributesResponse_attributes</a> - The attribute
--   values that are associated with an object.
newBatchGetObjectAttributesResponse :: BatchGetObjectAttributesResponse

-- | The attribute values that are associated with an object.
batchGetObjectAttributesResponse_attributes :: Lens' BatchGetObjectAttributesResponse (Maybe [AttributeKeyAndValue])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse.BatchGetObjectAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse.BatchGetObjectAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse.BatchGetObjectAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse.BatchGetObjectAttributesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse.BatchGetObjectAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse.BatchGetObjectAttributesResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchGetObjectAttributesResponse.BatchGetObjectAttributesResponse


module Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse

-- | Represents the output of a GetLinkAttributes response operation.
--   
--   <i>See:</i> <a>newBatchGetLinkAttributesResponse</a> smart
--   constructor.
data BatchGetLinkAttributesResponse
BatchGetLinkAttributesResponse' :: Maybe [AttributeKeyAndValue] -> BatchGetLinkAttributesResponse

-- | The attributes that are associated with the typed link.
[$sel:attributes:BatchGetLinkAttributesResponse'] :: BatchGetLinkAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>BatchGetLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:BatchGetLinkAttributesResponse'</a>,
--   <a>batchGetLinkAttributesResponse_attributes</a> - The attributes that
--   are associated with the typed link.
newBatchGetLinkAttributesResponse :: BatchGetLinkAttributesResponse

-- | The attributes that are associated with the typed link.
batchGetLinkAttributesResponse_attributes :: Lens' BatchGetLinkAttributesResponse (Maybe [AttributeKeyAndValue])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse.BatchGetLinkAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse.BatchGetLinkAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse.BatchGetLinkAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse.BatchGetLinkAttributesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse.BatchGetLinkAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse.BatchGetLinkAttributesResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchGetLinkAttributesResponse.BatchGetLinkAttributesResponse


module Network.AWS.CloudDirectory.Types.BatchCreateObject

-- | Represents the output of a CreateObject operation.
--   
--   <i>See:</i> <a>newBatchCreateObject</a> smart constructor.
data BatchCreateObject
BatchCreateObject' :: Maybe Text -> Maybe ObjectReference -> Maybe Text -> [SchemaFacet] -> [AttributeKeyAndValue] -> BatchCreateObject

-- | The name of the link.
[$sel:linkName:BatchCreateObject'] :: BatchCreateObject -> Maybe Text

-- | If specified, the parent reference to which this object will be
--   attached.
[$sel:parentReference:BatchCreateObject'] :: BatchCreateObject -> Maybe ObjectReference

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
[$sel:batchReferenceName:BatchCreateObject'] :: BatchCreateObject -> Maybe Text

-- | A list of <tt>FacetArns</tt> that will be associated with the object.
--   For more information, see arns.
[$sel:schemaFacet:BatchCreateObject'] :: BatchCreateObject -> [SchemaFacet]

-- | An attribute map, which contains an attribute ARN as the key and
--   attribute value as the map value.
[$sel:objectAttributeList:BatchCreateObject'] :: BatchCreateObject -> [AttributeKeyAndValue]

-- | Create a value of <a>BatchCreateObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:BatchCreateObject'</a>,
--   <a>batchCreateObject_linkName</a> - The name of the link.
--   
--   <a>$sel:parentReference:BatchCreateObject'</a>,
--   <a>batchCreateObject_parentReference</a> - If specified, the parent
--   reference to which this object will be attached.
--   
--   <a>$sel:batchReferenceName:BatchCreateObject'</a>,
--   <a>batchCreateObject_batchReferenceName</a> - The batch reference
--   name. See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:schemaFacet:BatchCreateObject'</a>,
--   <a>batchCreateObject_schemaFacet</a> - A list of <tt>FacetArns</tt>
--   that will be associated with the object. For more information, see
--   arns.
--   
--   <a>$sel:objectAttributeList:BatchCreateObject'</a>,
--   <a>batchCreateObject_objectAttributeList</a> - An attribute map, which
--   contains an attribute ARN as the key and attribute value as the map
--   value.
newBatchCreateObject :: BatchCreateObject

-- | The name of the link.
batchCreateObject_linkName :: Lens' BatchCreateObject (Maybe Text)

-- | If specified, the parent reference to which this object will be
--   attached.
batchCreateObject_parentReference :: Lens' BatchCreateObject (Maybe ObjectReference)

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchCreateObject_batchReferenceName :: Lens' BatchCreateObject (Maybe Text)

-- | A list of <tt>FacetArns</tt> that will be associated with the object.
--   For more information, see arns.
batchCreateObject_schemaFacet :: Lens' BatchCreateObject [SchemaFacet]

-- | An attribute map, which contains an attribute ARN as the key and
--   attribute value as the map value.
batchCreateObject_objectAttributeList :: Lens' BatchCreateObject [AttributeKeyAndValue]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchCreateObject.BatchCreateObject
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchCreateObject.BatchCreateObject
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchCreateObject.BatchCreateObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchCreateObject.BatchCreateObject
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchCreateObject.BatchCreateObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchCreateObject.BatchCreateObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchCreateObject.BatchCreateObject


module Network.AWS.CloudDirectory.Types.BatchAddFacetToObject

-- | Represents the output of a batch add facet to object operation.
--   
--   <i>See:</i> <a>newBatchAddFacetToObject</a> smart constructor.
data BatchAddFacetToObject
BatchAddFacetToObject' :: SchemaFacet -> [AttributeKeyAndValue] -> ObjectReference -> BatchAddFacetToObject

-- | Represents the facet being added to the object.
[$sel:schemaFacet:BatchAddFacetToObject'] :: BatchAddFacetToObject -> SchemaFacet

-- | The attributes to set on the object.
[$sel:objectAttributeList:BatchAddFacetToObject'] :: BatchAddFacetToObject -> [AttributeKeyAndValue]

-- | A reference to the object being mutated.
[$sel:objectReference:BatchAddFacetToObject'] :: BatchAddFacetToObject -> ObjectReference

-- | Create a value of <a>BatchAddFacetToObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacet:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_schemaFacet</a> - Represents the facet being
--   added to the object.
--   
--   <a>$sel:objectAttributeList:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_objectAttributeList</a> - The attributes to
--   set on the object.
--   
--   <a>$sel:objectReference:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_objectReference</a> - A reference to the
--   object being mutated.
newBatchAddFacetToObject :: SchemaFacet -> ObjectReference -> BatchAddFacetToObject

-- | Represents the facet being added to the object.
batchAddFacetToObject_schemaFacet :: Lens' BatchAddFacetToObject SchemaFacet

-- | The attributes to set on the object.
batchAddFacetToObject_objectAttributeList :: Lens' BatchAddFacetToObject [AttributeKeyAndValue]

-- | A reference to the object being mutated.
batchAddFacetToObject_objectReference :: Lens' BatchAddFacetToObject ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAddFacetToObject.BatchAddFacetToObject
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAddFacetToObject.BatchAddFacetToObject
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAddFacetToObject.BatchAddFacetToObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAddFacetToObject.BatchAddFacetToObject
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAddFacetToObject.BatchAddFacetToObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAddFacetToObject.BatchAddFacetToObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchAddFacetToObject.BatchAddFacetToObject


module Network.AWS.CloudDirectory.Types.TypedAttributeValueRange

-- | A range of attribute values. For more information, see <a>Range
--   Filters</a>.
--   
--   <i>See:</i> <a>newTypedAttributeValueRange</a> smart constructor.
data TypedAttributeValueRange
TypedAttributeValueRange' :: Maybe TypedAttributeValue -> Maybe TypedAttributeValue -> RangeMode -> RangeMode -> TypedAttributeValueRange

-- | The attribute value to terminate the range at.
[$sel:endValue:TypedAttributeValueRange'] :: TypedAttributeValueRange -> Maybe TypedAttributeValue

-- | The value to start the range at.
[$sel:startValue:TypedAttributeValueRange'] :: TypedAttributeValueRange -> Maybe TypedAttributeValue

-- | The inclusive or exclusive range start.
[$sel:startMode:TypedAttributeValueRange'] :: TypedAttributeValueRange -> RangeMode

-- | The inclusive or exclusive range end.
[$sel:endMode:TypedAttributeValueRange'] :: TypedAttributeValueRange -> RangeMode

-- | Create a value of <a>TypedAttributeValueRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endValue:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_endValue</a> - The attribute value to
--   terminate the range at.
--   
--   <a>$sel:startValue:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_startValue</a> - The value to start the
--   range at.
--   
--   <a>$sel:startMode:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_startMode</a> - The inclusive or exclusive
--   range start.
--   
--   <a>$sel:endMode:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_endMode</a> - The inclusive or exclusive
--   range end.
newTypedAttributeValueRange :: RangeMode -> RangeMode -> TypedAttributeValueRange

-- | The attribute value to terminate the range at.
typedAttributeValueRange_endValue :: Lens' TypedAttributeValueRange (Maybe TypedAttributeValue)

-- | The value to start the range at.
typedAttributeValueRange_startValue :: Lens' TypedAttributeValueRange (Maybe TypedAttributeValue)

-- | The inclusive or exclusive range start.
typedAttributeValueRange_startMode :: Lens' TypedAttributeValueRange RangeMode

-- | The inclusive or exclusive range end.
typedAttributeValueRange_endMode :: Lens' TypedAttributeValueRange RangeMode
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedAttributeValueRange.TypedAttributeValueRange
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedAttributeValueRange.TypedAttributeValueRange
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedAttributeValueRange.TypedAttributeValueRange
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedAttributeValueRange.TypedAttributeValueRange
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedAttributeValueRange.TypedAttributeValueRange
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedAttributeValueRange.TypedAttributeValueRange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedAttributeValueRange.TypedAttributeValueRange


module Network.AWS.CloudDirectory.Types.ObjectAttributeRange

-- | A range of attributes.
--   
--   <i>See:</i> <a>newObjectAttributeRange</a> smart constructor.
data ObjectAttributeRange
ObjectAttributeRange' :: Maybe TypedAttributeValueRange -> Maybe AttributeKey -> ObjectAttributeRange

-- | The range of attribute values being selected.
[$sel:range:ObjectAttributeRange'] :: ObjectAttributeRange -> Maybe TypedAttributeValueRange

-- | The key of the attribute that the attribute range covers.
[$sel:attributeKey:ObjectAttributeRange'] :: ObjectAttributeRange -> Maybe AttributeKey

-- | Create a value of <a>ObjectAttributeRange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:range:ObjectAttributeRange'</a>,
--   <a>objectAttributeRange_range</a> - The range of attribute values
--   being selected.
--   
--   <a>$sel:attributeKey:ObjectAttributeRange'</a>,
--   <a>objectAttributeRange_attributeKey</a> - The key of the attribute
--   that the attribute range covers.
newObjectAttributeRange :: ObjectAttributeRange

-- | The range of attribute values being selected.
objectAttributeRange_range :: Lens' ObjectAttributeRange (Maybe TypedAttributeValueRange)

-- | The key of the attribute that the attribute range covers.
objectAttributeRange_attributeKey :: Lens' ObjectAttributeRange (Maybe AttributeKey)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.ObjectAttributeRange.ObjectAttributeRange
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.ObjectAttributeRange.ObjectAttributeRange
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.ObjectAttributeRange.ObjectAttributeRange
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.ObjectAttributeRange.ObjectAttributeRange
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.ObjectAttributeRange.ObjectAttributeRange
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.ObjectAttributeRange.ObjectAttributeRange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.ObjectAttributeRange.ObjectAttributeRange


module Network.AWS.CloudDirectory.Types.BatchListIndex

-- | Lists objects attached to the specified index inside a BatchRead
--   operation. For more information, see ListIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListIndex</a> smart constructor.
data BatchListIndex
BatchListIndex' :: Maybe Text -> Maybe Natural -> Maybe [ObjectAttributeRange] -> ObjectReference -> BatchListIndex

-- | The pagination token.
[$sel:nextToken:BatchListIndex'] :: BatchListIndex -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListIndex'] :: BatchListIndex -> Maybe Natural

-- | Specifies the ranges of indexed values that you want to query.
[$sel:rangesOnIndexedValues:BatchListIndex'] :: BatchListIndex -> Maybe [ObjectAttributeRange]

-- | The reference to the index to list.
[$sel:indexReference:BatchListIndex'] :: BatchListIndex -> ObjectReference

-- | Create a value of <a>BatchListIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIndex'</a>, <a>batchListIndex_nextToken</a>
--   - The pagination token.
--   
--   <a>$sel:maxResults:BatchListIndex'</a>,
--   <a>batchListIndex_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:rangesOnIndexedValues:BatchListIndex'</a>,
--   <a>batchListIndex_rangesOnIndexedValues</a> - Specifies the ranges of
--   indexed values that you want to query.
--   
--   <a>$sel:indexReference:BatchListIndex'</a>,
--   <a>batchListIndex_indexReference</a> - The reference to the index to
--   list.
newBatchListIndex :: ObjectReference -> BatchListIndex

-- | The pagination token.
batchListIndex_nextToken :: Lens' BatchListIndex (Maybe Text)

-- | The maximum number of results to retrieve.
batchListIndex_maxResults :: Lens' BatchListIndex (Maybe Natural)

-- | Specifies the ranges of indexed values that you want to query.
batchListIndex_rangesOnIndexedValues :: Lens' BatchListIndex (Maybe [ObjectAttributeRange])

-- | The reference to the index to list.
batchListIndex_indexReference :: Lens' BatchListIndex ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListIndex.BatchListIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListIndex.BatchListIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListIndex.BatchListIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListIndex.BatchListIndex
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListIndex.BatchListIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListIndex.BatchListIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListIndex.BatchListIndex


module Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition

-- | A typed link attribute definition.
--   
--   <i>See:</i> <a>newTypedLinkAttributeDefinition</a> smart constructor.
data TypedLinkAttributeDefinition
TypedLinkAttributeDefinition' :: Maybe Bool -> Maybe (HashMap Text Rule) -> Maybe TypedAttributeValue -> Text -> FacetAttributeType -> RequiredAttributeBehavior -> TypedLinkAttributeDefinition

-- | Whether the attribute is mutable or not.
[$sel:isImmutable:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Maybe Bool

-- | Validation rules that are attached to the attribute definition.
[$sel:rules:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Maybe (HashMap Text Rule)

-- | The default value of the attribute (if configured).
[$sel:defaultValue:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Maybe TypedAttributeValue

-- | The unique name of the typed link attribute.
[$sel:name:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Text

-- | The type of the attribute.
[$sel:type':TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> FacetAttributeType

-- | The required behavior of the <tt>TypedLinkAttributeDefinition</tt>.
[$sel:requiredBehavior:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> RequiredAttributeBehavior

-- | Create a value of <a>TypedLinkAttributeDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isImmutable:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_isImmutable</a> - Whether the
--   attribute is mutable or not.
--   
--   <a>$sel:rules:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_rules</a> - Validation rules that are
--   attached to the attribute definition.
--   
--   <a>$sel:defaultValue:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_defaultValue</a> - The default value
--   of the attribute (if configured).
--   
--   <a>$sel:name:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_name</a> - The unique name of the
--   typed link attribute.
--   
--   <a>$sel:type':TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_type</a> - The type of the attribute.
--   
--   <a>$sel:requiredBehavior:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_requiredBehavior</a> - The required
--   behavior of the <tt>TypedLinkAttributeDefinition</tt>.
newTypedLinkAttributeDefinition :: Text -> FacetAttributeType -> RequiredAttributeBehavior -> TypedLinkAttributeDefinition

-- | Whether the attribute is mutable or not.
typedLinkAttributeDefinition_isImmutable :: Lens' TypedLinkAttributeDefinition (Maybe Bool)

-- | Validation rules that are attached to the attribute definition.
typedLinkAttributeDefinition_rules :: Lens' TypedLinkAttributeDefinition (Maybe (HashMap Text Rule))

-- | The default value of the attribute (if configured).
typedLinkAttributeDefinition_defaultValue :: Lens' TypedLinkAttributeDefinition (Maybe TypedAttributeValue)

-- | The unique name of the typed link attribute.
typedLinkAttributeDefinition_name :: Lens' TypedLinkAttributeDefinition Text

-- | The type of the attribute.
typedLinkAttributeDefinition_type :: Lens' TypedLinkAttributeDefinition FacetAttributeType

-- | The required behavior of the <tt>TypedLinkAttributeDefinition</tt>.
typedLinkAttributeDefinition_requiredBehavior :: Lens' TypedLinkAttributeDefinition RequiredAttributeBehavior
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedLinkAttributeDefinition.TypedLinkAttributeDefinition


module Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange

-- | Identifies the range of attributes that are used by a specified
--   filter.
--   
--   <i>See:</i> <a>newTypedLinkAttributeRange</a> smart constructor.
data TypedLinkAttributeRange
TypedLinkAttributeRange' :: Maybe Text -> TypedAttributeValueRange -> TypedLinkAttributeRange

-- | The unique name of the typed link attribute.
[$sel:attributeName:TypedLinkAttributeRange'] :: TypedLinkAttributeRange -> Maybe Text

-- | The range of attribute values that are being selected.
[$sel:range:TypedLinkAttributeRange'] :: TypedLinkAttributeRange -> TypedAttributeValueRange

-- | Create a value of <a>TypedLinkAttributeRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:TypedLinkAttributeRange'</a>,
--   <a>typedLinkAttributeRange_attributeName</a> - The unique name of the
--   typed link attribute.
--   
--   <a>$sel:range:TypedLinkAttributeRange'</a>,
--   <a>typedLinkAttributeRange_range</a> - The range of attribute values
--   that are being selected.
newTypedLinkAttributeRange :: TypedAttributeValueRange -> TypedLinkAttributeRange

-- | The unique name of the typed link attribute.
typedLinkAttributeRange_attributeName :: Lens' TypedLinkAttributeRange (Maybe Text)

-- | The range of attribute values that are being selected.
typedLinkAttributeRange_range :: Lens' TypedLinkAttributeRange TypedAttributeValueRange
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange.TypedLinkAttributeRange
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange.TypedLinkAttributeRange
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange.TypedLinkAttributeRange
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange.TypedLinkAttributeRange
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange.TypedLinkAttributeRange
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange.TypedLinkAttributeRange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedLinkAttributeRange.TypedLinkAttributeRange


module Network.AWS.CloudDirectory.Types.TypedLinkFacet

-- | Defines the typed links structure and its attributes. To create a
--   typed link facet, use the CreateTypedLinkFacet API.
--   
--   <i>See:</i> <a>newTypedLinkFacet</a> smart constructor.
data TypedLinkFacet
TypedLinkFacet' :: Text -> [TypedLinkAttributeDefinition] -> [Text] -> TypedLinkFacet

-- | The unique name of the typed link facet.
[$sel:name:TypedLinkFacet'] :: TypedLinkFacet -> Text

-- | A set of key-value pairs associated with the typed link. Typed link
--   attributes are used when you have data values that are related to the
--   link itself, and not to one of the two objects being linked. Identity
--   attributes also serve to distinguish the link from others of the same
--   type between the same objects.
[$sel:attributes:TypedLinkFacet'] :: TypedLinkFacet -> [TypedLinkAttributeDefinition]

-- | The set of attributes that distinguish links made from this facet from
--   each other, in the order of significance. Listing typed links can
--   filter on the values of these attributes. See ListOutgoingTypedLinks
--   and ListIncomingTypedLinks for details.
[$sel:identityAttributeOrder:TypedLinkFacet'] :: TypedLinkFacet -> [Text]

-- | Create a value of <a>TypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TypedLinkFacet'</a>, <a>typedLinkFacet_name</a> - The
--   unique name of the typed link facet.
--   
--   <a>$sel:attributes:TypedLinkFacet'</a>,
--   <a>typedLinkFacet_attributes</a> - A set of key-value pairs associated
--   with the typed link. Typed link attributes are used when you have data
--   values that are related to the link itself, and not to one of the two
--   objects being linked. Identity attributes also serve to distinguish
--   the link from others of the same type between the same objects.
--   
--   <a>$sel:identityAttributeOrder:TypedLinkFacet'</a>,
--   <a>typedLinkFacet_identityAttributeOrder</a> - The set of attributes
--   that distinguish links made from this facet from each other, in the
--   order of significance. Listing typed links can filter on the values of
--   these attributes. See ListOutgoingTypedLinks and
--   ListIncomingTypedLinks for details.
newTypedLinkFacet :: Text -> TypedLinkFacet

-- | The unique name of the typed link facet.
typedLinkFacet_name :: Lens' TypedLinkFacet Text

-- | A set of key-value pairs associated with the typed link. Typed link
--   attributes are used when you have data values that are related to the
--   link itself, and not to one of the two objects being linked. Identity
--   attributes also serve to distinguish the link from others of the same
--   type between the same objects.
typedLinkFacet_attributes :: Lens' TypedLinkFacet [TypedLinkAttributeDefinition]

-- | The set of attributes that distinguish links made from this facet from
--   each other, in the order of significance. Listing typed links can
--   filter on the values of these attributes. See ListOutgoingTypedLinks
--   and ListIncomingTypedLinks for details.
typedLinkFacet_identityAttributeOrder :: Lens' TypedLinkFacet [Text]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedLinkFacet.TypedLinkFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedLinkFacet.TypedLinkFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedLinkFacet.TypedLinkFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedLinkFacet.TypedLinkFacet
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedLinkFacet.TypedLinkFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedLinkFacet.TypedLinkFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedLinkFacet.TypedLinkFacet


module Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName

-- | Identifies the schema Amazon Resource Name (ARN) and facet name for
--   the typed link.
--   
--   <i>See:</i> <a>newTypedLinkSchemaAndFacetName</a> smart constructor.
data TypedLinkSchemaAndFacetName
TypedLinkSchemaAndFacetName' :: Text -> Text -> TypedLinkSchemaAndFacetName

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:TypedLinkSchemaAndFacetName'] :: TypedLinkSchemaAndFacetName -> Text

-- | The unique name of the typed link facet.
[$sel:typedLinkName:TypedLinkSchemaAndFacetName'] :: TypedLinkSchemaAndFacetName -> Text

-- | Create a value of <a>TypedLinkSchemaAndFacetName</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:TypedLinkSchemaAndFacetName'</a>,
--   <a>typedLinkSchemaAndFacetName_schemaArn</a> - The Amazon Resource
--   Name (ARN) that is associated with the schema. For more information,
--   see arns.
--   
--   <a>$sel:typedLinkName:TypedLinkSchemaAndFacetName'</a>,
--   <a>typedLinkSchemaAndFacetName_typedLinkName</a> - The unique name of
--   the typed link facet.
newTypedLinkSchemaAndFacetName :: Text -> Text -> TypedLinkSchemaAndFacetName

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
typedLinkSchemaAndFacetName_schemaArn :: Lens' TypedLinkSchemaAndFacetName Text

-- | The unique name of the typed link facet.
typedLinkSchemaAndFacetName_typedLinkName :: Lens' TypedLinkSchemaAndFacetName Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedLinkSchemaAndFacetName.TypedLinkSchemaAndFacetName


module Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object inside a BatchRead operation. For more
--   information, see ListOutgoingTypedLinks and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListOutgoingTypedLinks</a> smart constructor.
data BatchListOutgoingTypedLinks
BatchListOutgoingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe [TypedLinkAttributeRange] -> ObjectReference -> BatchListOutgoingTypedLinks

-- | The pagination token.
[$sel:nextToken:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe Text

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
[$sel:filterTypedLink:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe TypedLinkSchemaAndFacetName

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe Natural

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
[$sel:filterAttributeRanges:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe [TypedLinkAttributeRange]

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> ObjectReference

-- | Create a value of <a>BatchListOutgoingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes defined on the typed link
--   facet, not the order they are supplied to any API calls.
--   
--   <a>$sel:maxResults:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:filterAttributeRanges:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_filterAttributeRanges</a> - Provides
--   range filters for multiple attributes. When providing ranges to typed
--   link selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:objectReference:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_objectReference</a> - The reference
--   that identifies the object whose attributes will be listed.
newBatchListOutgoingTypedLinks :: ObjectReference -> BatchListOutgoingTypedLinks

-- | The pagination token.
batchListOutgoingTypedLinks_nextToken :: Lens' BatchListOutgoingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
batchListOutgoingTypedLinks_filterTypedLink :: Lens' BatchListOutgoingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
batchListOutgoingTypedLinks_maxResults :: Lens' BatchListOutgoingTypedLinks (Maybe Natural)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
batchListOutgoingTypedLinks_filterAttributeRanges :: Lens' BatchListOutgoingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListOutgoingTypedLinks_objectReference :: Lens' BatchListOutgoingTypedLinks ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks.BatchListOutgoingTypedLinks
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks.BatchListOutgoingTypedLinks
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks.BatchListOutgoingTypedLinks
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks.BatchListOutgoingTypedLinks
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks.BatchListOutgoingTypedLinks
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks.BatchListOutgoingTypedLinks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinks.BatchListOutgoingTypedLinks


module Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object inside a BatchRead operation. For more
--   information, see ListIncomingTypedLinks and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListIncomingTypedLinks</a> smart constructor.
data BatchListIncomingTypedLinks
BatchListIncomingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe [TypedLinkAttributeRange] -> ObjectReference -> BatchListIncomingTypedLinks

-- | The pagination token.
[$sel:nextToken:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe Text

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
[$sel:filterTypedLink:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe TypedLinkSchemaAndFacetName

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe Natural

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
[$sel:filterAttributeRanges:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe [TypedLinkAttributeRange]

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> ObjectReference

-- | Create a value of <a>BatchListIncomingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls.
--   
--   <a>$sel:maxResults:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:filterAttributeRanges:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_filterAttributeRanges</a> - Provides
--   range filters for multiple attributes. When providing ranges to typed
--   link selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:objectReference:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_objectReference</a> - The reference
--   that identifies the object whose attributes will be listed.
newBatchListIncomingTypedLinks :: ObjectReference -> BatchListIncomingTypedLinks

-- | The pagination token.
batchListIncomingTypedLinks_nextToken :: Lens' BatchListIncomingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
batchListIncomingTypedLinks_filterTypedLink :: Lens' BatchListIncomingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
batchListIncomingTypedLinks_maxResults :: Lens' BatchListIncomingTypedLinks (Maybe Natural)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
batchListIncomingTypedLinks_filterAttributeRanges :: Lens' BatchListIncomingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListIncomingTypedLinks_objectReference :: Lens' BatchListIncomingTypedLinks ObjectReference
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks.BatchListIncomingTypedLinks
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks.BatchListIncomingTypedLinks
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks.BatchListIncomingTypedLinks
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks.BatchListIncomingTypedLinks
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks.BatchListIncomingTypedLinks
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks.BatchListIncomingTypedLinks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinks.BatchListIncomingTypedLinks


module Network.AWS.CloudDirectory.Types.BatchAttachTypedLink

-- | Attaches a typed link to a specified source and target object inside a
--   BatchRead operation. For more information, see AttachTypedLink and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachTypedLink</a> smart constructor.
data BatchAttachTypedLink
BatchAttachTypedLink' :: ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> [AttributeNameAndValue] -> BatchAttachTypedLink

-- | Identifies the source object that the typed link will attach to.
[$sel:sourceObjectReference:BatchAttachTypedLink'] :: BatchAttachTypedLink -> ObjectReference

-- | Identifies the target object that the typed link will attach to.
[$sel:targetObjectReference:BatchAttachTypedLink'] :: BatchAttachTypedLink -> ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
[$sel:typedLinkFacet:BatchAttachTypedLink'] :: BatchAttachTypedLink -> TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
[$sel:attributes:BatchAttachTypedLink'] :: BatchAttachTypedLink -> [AttributeNameAndValue]

-- | Create a value of <a>BatchAttachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceObjectReference:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_sourceObjectReference</a> - Identifies the
--   source object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_targetObjectReference</a> - Identifies the
--   target object that the typed link will attach to.
--   
--   <a>$sel:typedLinkFacet:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:attributes:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_attributes</a> - A set of attributes that are
--   associated with the typed link.
newBatchAttachTypedLink :: ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> BatchAttachTypedLink

-- | Identifies the source object that the typed link will attach to.
batchAttachTypedLink_sourceObjectReference :: Lens' BatchAttachTypedLink ObjectReference

-- | Identifies the target object that the typed link will attach to.
batchAttachTypedLink_targetObjectReference :: Lens' BatchAttachTypedLink ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
batchAttachTypedLink_typedLinkFacet :: Lens' BatchAttachTypedLink TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
batchAttachTypedLink_attributes :: Lens' BatchAttachTypedLink [AttributeNameAndValue]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachTypedLink.BatchAttachTypedLink
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachTypedLink.BatchAttachTypedLink
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachTypedLink.BatchAttachTypedLink
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachTypedLink.BatchAttachTypedLink
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachTypedLink.BatchAttachTypedLink
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachTypedLink.BatchAttachTypedLink
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchAttachTypedLink.BatchAttachTypedLink


module Network.AWS.CloudDirectory.Types.TypedLinkSpecifier

-- | Contains all the information that is used to uniquely identify a typed
--   link. The parameters discussed in this topic are used to uniquely
--   specify the typed link being operated on. The AttachTypedLink API
--   returns a typed link specifier while the DetachTypedLink API accepts
--   one as input. Similarly, the ListIncomingTypedLinks and
--   ListOutgoingTypedLinks API operations provide typed link specifiers as
--   output. You can also construct a typed link specifier from scratch.
--   
--   <i>See:</i> <a>newTypedLinkSpecifier</a> smart constructor.
data TypedLinkSpecifier
TypedLinkSpecifier' :: TypedLinkSchemaAndFacetName -> ObjectReference -> ObjectReference -> [AttributeNameAndValue] -> TypedLinkSpecifier

-- | Identifies the typed link facet that is associated with the typed
--   link.
[$sel:typedLinkFacet:TypedLinkSpecifier'] :: TypedLinkSpecifier -> TypedLinkSchemaAndFacetName

-- | Identifies the source object that the typed link will attach to.
[$sel:sourceObjectReference:TypedLinkSpecifier'] :: TypedLinkSpecifier -> ObjectReference

-- | Identifies the target object that the typed link will attach to.
[$sel:targetObjectReference:TypedLinkSpecifier'] :: TypedLinkSpecifier -> ObjectReference

-- | Identifies the attribute value to update.
[$sel:identityAttributeValues:TypedLinkSpecifier'] :: TypedLinkSpecifier -> [AttributeNameAndValue]

-- | Create a value of <a>TypedLinkSpecifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkFacet:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:sourceObjectReference:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_sourceObjectReference</a> - Identifies the
--   source object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_targetObjectReference</a> - Identifies the
--   target object that the typed link will attach to.
--   
--   <a>$sel:identityAttributeValues:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_identityAttributeValues</a> - Identifies the
--   attribute value to update.
newTypedLinkSpecifier :: TypedLinkSchemaAndFacetName -> ObjectReference -> ObjectReference -> TypedLinkSpecifier

-- | Identifies the typed link facet that is associated with the typed
--   link.
typedLinkSpecifier_typedLinkFacet :: Lens' TypedLinkSpecifier TypedLinkSchemaAndFacetName

-- | Identifies the source object that the typed link will attach to.
typedLinkSpecifier_sourceObjectReference :: Lens' TypedLinkSpecifier ObjectReference

-- | Identifies the target object that the typed link will attach to.
typedLinkSpecifier_targetObjectReference :: Lens' TypedLinkSpecifier ObjectReference

-- | Identifies the attribute value to update.
typedLinkSpecifier_identityAttributeValues :: Lens' TypedLinkSpecifier [AttributeNameAndValue]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedLinkSpecifier.TypedLinkSpecifier


module Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse

-- | Represents the output of a ListOutgoingTypedLinks response operation.
--   
--   <i>See:</i> <a>newBatchListOutgoingTypedLinksResponse</a> smart
--   constructor.
data BatchListOutgoingTypedLinksResponse
BatchListOutgoingTypedLinksResponse' :: Maybe Text -> Maybe [TypedLinkSpecifier] -> BatchListOutgoingTypedLinksResponse

-- | The pagination token.
[$sel:nextToken:BatchListOutgoingTypedLinksResponse'] :: BatchListOutgoingTypedLinksResponse -> Maybe Text

-- | Returns a typed link specifier as output.
[$sel:typedLinkSpecifiers:BatchListOutgoingTypedLinksResponse'] :: BatchListOutgoingTypedLinksResponse -> Maybe [TypedLinkSpecifier]

-- | Create a value of <a>BatchListOutgoingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListOutgoingTypedLinksResponse'</a>,
--   <a>batchListOutgoingTypedLinksResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:typedLinkSpecifiers:BatchListOutgoingTypedLinksResponse'</a>,
--   <a>batchListOutgoingTypedLinksResponse_typedLinkSpecifiers</a> -
--   Returns a typed link specifier as output.
newBatchListOutgoingTypedLinksResponse :: BatchListOutgoingTypedLinksResponse

-- | The pagination token.
batchListOutgoingTypedLinksResponse_nextToken :: Lens' BatchListOutgoingTypedLinksResponse (Maybe Text)

-- | Returns a typed link specifier as output.
batchListOutgoingTypedLinksResponse_typedLinkSpecifiers :: Lens' BatchListOutgoingTypedLinksResponse (Maybe [TypedLinkSpecifier])
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse.BatchListOutgoingTypedLinksResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse.BatchListOutgoingTypedLinksResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse.BatchListOutgoingTypedLinksResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse.BatchListOutgoingTypedLinksResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse.BatchListOutgoingTypedLinksResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse.BatchListOutgoingTypedLinksResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListOutgoingTypedLinksResponse.BatchListOutgoingTypedLinksResponse


module Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse

-- | Represents the output of a ListIncomingTypedLinks response operation.
--   
--   <i>See:</i> <a>newBatchListIncomingTypedLinksResponse</a> smart
--   constructor.
data BatchListIncomingTypedLinksResponse
BatchListIncomingTypedLinksResponse' :: Maybe [TypedLinkSpecifier] -> Maybe Text -> BatchListIncomingTypedLinksResponse

-- | Returns one or more typed link specifiers as output.
[$sel:linkSpecifiers:BatchListIncomingTypedLinksResponse'] :: BatchListIncomingTypedLinksResponse -> Maybe [TypedLinkSpecifier]

-- | The pagination token.
[$sel:nextToken:BatchListIncomingTypedLinksResponse'] :: BatchListIncomingTypedLinksResponse -> Maybe Text

-- | Create a value of <a>BatchListIncomingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkSpecifiers:BatchListIncomingTypedLinksResponse'</a>,
--   <a>batchListIncomingTypedLinksResponse_linkSpecifiers</a> - Returns
--   one or more typed link specifiers as output.
--   
--   <a>$sel:nextToken:BatchListIncomingTypedLinksResponse'</a>,
--   <a>batchListIncomingTypedLinksResponse_nextToken</a> - The pagination
--   token.
newBatchListIncomingTypedLinksResponse :: BatchListIncomingTypedLinksResponse

-- | Returns one or more typed link specifiers as output.
batchListIncomingTypedLinksResponse_linkSpecifiers :: Lens' BatchListIncomingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The pagination token.
batchListIncomingTypedLinksResponse_nextToken :: Lens' BatchListIncomingTypedLinksResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse.BatchListIncomingTypedLinksResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse.BatchListIncomingTypedLinksResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse.BatchListIncomingTypedLinksResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse.BatchListIncomingTypedLinksResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse.BatchListIncomingTypedLinksResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse.BatchListIncomingTypedLinksResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchListIncomingTypedLinksResponse.BatchListIncomingTypedLinksResponse


module Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse

-- | Represents the output of a <tt>BatchRead</tt> success response
--   operation.
--   
--   <i>See:</i> <a>newBatchReadSuccessfulResponse</a> smart constructor.
data BatchReadSuccessfulResponse
BatchReadSuccessfulResponse' :: Maybe BatchGetObjectInformationResponse -> Maybe BatchGetObjectAttributesResponse -> Maybe BatchListIncomingTypedLinksResponse -> Maybe BatchListObjectParentsResponse -> Maybe BatchListPolicyAttachmentsResponse -> Maybe BatchListObjectAttributesResponse -> Maybe BatchListObjectParentPathsResponse -> Maybe BatchLookupPolicyResponse -> Maybe BatchListAttachedIndicesResponse -> Maybe BatchListObjectChildrenResponse -> Maybe BatchListIndexResponse -> Maybe BatchListObjectPoliciesResponse -> Maybe BatchGetLinkAttributesResponse -> Maybe BatchListOutgoingTypedLinksResponse -> BatchReadSuccessfulResponse

-- | Retrieves metadata about an object.
[$sel:getObjectInformation:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchGetObjectInformationResponse

-- | Retrieves attributes within a facet that are associated with an
--   object.
[$sel:getObjectAttributes:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchGetObjectAttributesResponse

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listIncomingTypedLinks:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListIncomingTypedLinksResponse

-- | The list of parent objects to retrieve.
[$sel:listObjectParents:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectParentsResponse

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
[$sel:listPolicyAttachments:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListPolicyAttachmentsResponse

-- | Lists all attributes that are associated with an object.
[$sel:listObjectAttributes:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectAttributesResponse

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
[$sel:listObjectParentPaths:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectParentPathsResponse

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
[$sel:lookupPolicy:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchLookupPolicyResponse

-- | Lists indices attached to an object.
[$sel:listAttachedIndices:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListAttachedIndicesResponse

-- | Returns a paginated list of child objects that are associated with a
--   given object.
[$sel:listObjectChildren:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectChildrenResponse

-- | Lists objects attached to the specified index.
[$sel:listIndex:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListIndexResponse

-- | Returns policies attached to an object in pagination fashion.
[$sel:listObjectPolicies:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectPoliciesResponse

-- | The list of attributes to retrieve from the typed link.
[$sel:getLinkAttributes:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchGetLinkAttributesResponse

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listOutgoingTypedLinks:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListOutgoingTypedLinksResponse

-- | Create a value of <a>BatchReadSuccessfulResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:getObjectInformation:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getObjectInformation</a> - Retrieves
--   metadata about an object.
--   
--   <a>$sel:getObjectAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getObjectAttributes</a> - Retrieves
--   attributes within a facet that are associated with an object.
--   
--   <a>$sel:listIncomingTypedLinks:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listIncomingTypedLinks</a> - Returns a
--   paginated list of all the incoming TypedLinkSpecifier information for
--   an object. It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
--   
--   <a>$sel:listObjectParents:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectParents</a> - The list of
--   parent objects to retrieve.
--   
--   <a>$sel:listPolicyAttachments:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listPolicyAttachments</a> - Returns all
--   of the <tt>ObjectIdentifiers</tt> to which a given policy is attached.
--   
--   <a>$sel:listObjectAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectAttributes</a> - Lists all
--   attributes that are associated with an object.
--   
--   <a>$sel:listObjectParentPaths:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectParentPaths</a> - Retrieves
--   all available parent paths for any object type such as node, leaf
--   node, policy node, and index node objects. For more information about
--   objects, see <a>Directory Structure</a>.
--   
--   <a>$sel:lookupPolicy:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_lookupPolicy</a> - Lists all policies
--   from the root of the Directory to the object specified. If there are
--   no policies present, an empty list is returned. If policies are
--   present, and if some objects don't have the policies attached, it
--   returns the <tt>ObjectIdentifier</tt> for such objects. If policies
--   are present, it returns <tt>ObjectIdentifier</tt>, <tt>policyId</tt>,
--   and <tt>policyType</tt>. Paths that don't lead to the root from the
--   target object are ignored. For more information, see <a>Policies</a>.
--   
--   <a>$sel:listAttachedIndices:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listAttachedIndices</a> - Lists indices
--   attached to an object.
--   
--   <a>$sel:listObjectChildren:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectChildren</a> - Returns a
--   paginated list of child objects that are associated with a given
--   object.
--   
--   <a>$sel:listIndex:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listIndex</a> - Lists objects attached
--   to the specified index.
--   
--   <a>$sel:listObjectPolicies:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectPolicies</a> - Returns
--   policies attached to an object in pagination fashion.
--   
--   <a>$sel:getLinkAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getLinkAttributes</a> - The list of
--   attributes to retrieve from the typed link.
--   
--   <a>$sel:listOutgoingTypedLinks:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listOutgoingTypedLinks</a> - Returns a
--   paginated list of all the outgoing TypedLinkSpecifier information for
--   an object. It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
newBatchReadSuccessfulResponse :: BatchReadSuccessfulResponse

-- | Retrieves metadata about an object.
batchReadSuccessfulResponse_getObjectInformation :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetObjectInformationResponse)

-- | Retrieves attributes within a facet that are associated with an
--   object.
batchReadSuccessfulResponse_getObjectAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetObjectAttributesResponse)

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadSuccessfulResponse_listIncomingTypedLinks :: Lens' BatchReadSuccessfulResponse (Maybe BatchListIncomingTypedLinksResponse)

-- | The list of parent objects to retrieve.
batchReadSuccessfulResponse_listObjectParents :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectParentsResponse)

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
batchReadSuccessfulResponse_listPolicyAttachments :: Lens' BatchReadSuccessfulResponse (Maybe BatchListPolicyAttachmentsResponse)

-- | Lists all attributes that are associated with an object.
batchReadSuccessfulResponse_listObjectAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectAttributesResponse)

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
batchReadSuccessfulResponse_listObjectParentPaths :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectParentPathsResponse)

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
batchReadSuccessfulResponse_lookupPolicy :: Lens' BatchReadSuccessfulResponse (Maybe BatchLookupPolicyResponse)

-- | Lists indices attached to an object.
batchReadSuccessfulResponse_listAttachedIndices :: Lens' BatchReadSuccessfulResponse (Maybe BatchListAttachedIndicesResponse)

-- | Returns a paginated list of child objects that are associated with a
--   given object.
batchReadSuccessfulResponse_listObjectChildren :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectChildrenResponse)

-- | Lists objects attached to the specified index.
batchReadSuccessfulResponse_listIndex :: Lens' BatchReadSuccessfulResponse (Maybe BatchListIndexResponse)

-- | Returns policies attached to an object in pagination fashion.
batchReadSuccessfulResponse_listObjectPolicies :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectPoliciesResponse)

-- | The list of attributes to retrieve from the typed link.
batchReadSuccessfulResponse_getLinkAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetLinkAttributesResponse)

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadSuccessfulResponse_listOutgoingTypedLinks :: Lens' BatchReadSuccessfulResponse (Maybe BatchListOutgoingTypedLinksResponse)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse.BatchReadSuccessfulResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse.BatchReadSuccessfulResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse.BatchReadSuccessfulResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse.BatchReadSuccessfulResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse.BatchReadSuccessfulResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse.BatchReadSuccessfulResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchReadSuccessfulResponse.BatchReadSuccessfulResponse


module Network.AWS.CloudDirectory.Types.BatchReadOperationResponse

-- | Represents the output of a <tt>BatchRead</tt> response operation.
--   
--   <i>See:</i> <a>newBatchReadOperationResponse</a> smart constructor.
data BatchReadOperationResponse
BatchReadOperationResponse' :: Maybe BatchReadSuccessfulResponse -> Maybe BatchReadException -> BatchReadOperationResponse

-- | Identifies which operation in a batch has succeeded.
[$sel:successfulResponse:BatchReadOperationResponse'] :: BatchReadOperationResponse -> Maybe BatchReadSuccessfulResponse

-- | Identifies which operation in a batch has failed.
[$sel:exceptionResponse:BatchReadOperationResponse'] :: BatchReadOperationResponse -> Maybe BatchReadException

-- | Create a value of <a>BatchReadOperationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successfulResponse:BatchReadOperationResponse'</a>,
--   <a>batchReadOperationResponse_successfulResponse</a> - Identifies
--   which operation in a batch has succeeded.
--   
--   <a>$sel:exceptionResponse:BatchReadOperationResponse'</a>,
--   <a>batchReadOperationResponse_exceptionResponse</a> - Identifies which
--   operation in a batch has failed.
newBatchReadOperationResponse :: BatchReadOperationResponse

-- | Identifies which operation in a batch has succeeded.
batchReadOperationResponse_successfulResponse :: Lens' BatchReadOperationResponse (Maybe BatchReadSuccessfulResponse)

-- | Identifies which operation in a batch has failed.
batchReadOperationResponse_exceptionResponse :: Lens' BatchReadOperationResponse (Maybe BatchReadException)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchReadOperationResponse.BatchReadOperationResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchReadOperationResponse.BatchReadOperationResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchReadOperationResponse.BatchReadOperationResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchReadOperationResponse.BatchReadOperationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchReadOperationResponse.BatchReadOperationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchReadOperationResponse.BatchReadOperationResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchReadOperationResponse.BatchReadOperationResponse


module Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes

-- | Retrieves attributes that are associated with a typed link inside a
--   BatchRead operation. For more information, see GetLinkAttributes and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetLinkAttributes</a> smart constructor.
data BatchGetLinkAttributes
BatchGetLinkAttributes' :: TypedLinkSpecifier -> [Text] -> BatchGetLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
[$sel:typedLinkSpecifier:BatchGetLinkAttributes'] :: BatchGetLinkAttributes -> TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
[$sel:attributeNames:BatchGetLinkAttributes'] :: BatchGetLinkAttributes -> [Text]

-- | Create a value of <a>BatchGetLinkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchGetLinkAttributes'</a>,
--   <a>batchGetLinkAttributes_typedLinkSpecifier</a> - Allows a typed link
--   specifier to be accepted as input.
--   
--   <a>$sel:attributeNames:BatchGetLinkAttributes'</a>,
--   <a>batchGetLinkAttributes_attributeNames</a> - A list of attribute
--   names whose values will be retrieved.
newBatchGetLinkAttributes :: TypedLinkSpecifier -> BatchGetLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
batchGetLinkAttributes_typedLinkSpecifier :: Lens' BatchGetLinkAttributes TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
batchGetLinkAttributes_attributeNames :: Lens' BatchGetLinkAttributes [Text]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes.BatchGetLinkAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes.BatchGetLinkAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes.BatchGetLinkAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes.BatchGetLinkAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes.BatchGetLinkAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes.BatchGetLinkAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchGetLinkAttributes.BatchGetLinkAttributes


module Network.AWS.CloudDirectory.Types.BatchReadOperation

-- | Represents the output of a <tt>BatchRead</tt> operation.
--   
--   <i>See:</i> <a>newBatchReadOperation</a> smart constructor.
data BatchReadOperation
BatchReadOperation' :: Maybe BatchGetObjectInformation -> Maybe BatchGetObjectAttributes -> Maybe BatchListIncomingTypedLinks -> Maybe BatchListObjectParents -> Maybe BatchListPolicyAttachments -> Maybe BatchListObjectAttributes -> Maybe BatchListObjectParentPaths -> Maybe BatchLookupPolicy -> Maybe BatchListAttachedIndices -> Maybe BatchListObjectChildren -> Maybe BatchListIndex -> Maybe BatchListObjectPolicies -> Maybe BatchGetLinkAttributes -> Maybe BatchListOutgoingTypedLinks -> BatchReadOperation

-- | Retrieves metadata about an object.
[$sel:getObjectInformation:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchGetObjectInformation

-- | Retrieves attributes within a facet that are associated with an
--   object.
[$sel:getObjectAttributes:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchGetObjectAttributes

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listIncomingTypedLinks:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListIncomingTypedLinks

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
[$sel:listObjectParents:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectParents

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
[$sel:listPolicyAttachments:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListPolicyAttachments

-- | Lists all attributes that are associated with an object.
[$sel:listObjectAttributes:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectAttributes

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
[$sel:listObjectParentPaths:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectParentPaths

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
[$sel:lookupPolicy:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchLookupPolicy

-- | Lists indices attached to an object.
[$sel:listAttachedIndices:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListAttachedIndices

-- | Returns a paginated list of child objects that are associated with a
--   given object.
[$sel:listObjectChildren:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectChildren

-- | Lists objects attached to the specified index.
[$sel:listIndex:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListIndex

-- | Returns policies attached to an object in pagination fashion.
[$sel:listObjectPolicies:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectPolicies

-- | Retrieves attributes that are associated with a typed link.
[$sel:getLinkAttributes:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchGetLinkAttributes

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listOutgoingTypedLinks:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListOutgoingTypedLinks

-- | Create a value of <a>BatchReadOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:getObjectInformation:BatchReadOperation'</a>,
--   <a>batchReadOperation_getObjectInformation</a> - Retrieves metadata
--   about an object.
--   
--   <a>$sel:getObjectAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_getObjectAttributes</a> - Retrieves attributes
--   within a facet that are associated with an object.
--   
--   <a>$sel:listIncomingTypedLinks:BatchReadOperation'</a>,
--   <a>batchReadOperation_listIncomingTypedLinks</a> - Returns a paginated
--   list of all the incoming TypedLinkSpecifier information for an object.
--   It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
--   
--   <a>$sel:listObjectParents:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectParents</a> - Lists parent objects
--   that are associated with a given object in pagination fashion.
--   
--   <a>$sel:listPolicyAttachments:BatchReadOperation'</a>,
--   <a>batchReadOperation_listPolicyAttachments</a> - Returns all of the
--   <tt>ObjectIdentifiers</tt> to which a given policy is attached.
--   
--   <a>$sel:listObjectAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectAttributes</a> - Lists all attributes
--   that are associated with an object.
--   
--   <a>$sel:listObjectParentPaths:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectParentPaths</a> - Retrieves all
--   available parent paths for any object type such as node, leaf node,
--   policy node, and index node objects. For more information about
--   objects, see <a>Directory Structure</a>.
--   
--   <a>$sel:lookupPolicy:BatchReadOperation'</a>,
--   <a>batchReadOperation_lookupPolicy</a> - Lists all policies from the
--   root of the Directory to the object specified. If there are no
--   policies present, an empty list is returned. If policies are present,
--   and if some objects don't have the policies attached, it returns the
--   <tt>ObjectIdentifier</tt> for such objects. If policies are present,
--   it returns <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and
--   <tt>policyType</tt>. Paths that don't lead to the root from the target
--   object are ignored. For more information, see <a>Policies</a>.
--   
--   <a>$sel:listAttachedIndices:BatchReadOperation'</a>,
--   <a>batchReadOperation_listAttachedIndices</a> - Lists indices attached
--   to an object.
--   
--   <a>$sel:listObjectChildren:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectChildren</a> - Returns a paginated
--   list of child objects that are associated with a given object.
--   
--   <a>$sel:listIndex:BatchReadOperation'</a>,
--   <a>batchReadOperation_listIndex</a> - Lists objects attached to the
--   specified index.
--   
--   <a>$sel:listObjectPolicies:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectPolicies</a> - Returns policies
--   attached to an object in pagination fashion.
--   
--   <a>$sel:getLinkAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_getLinkAttributes</a> - Retrieves attributes
--   that are associated with a typed link.
--   
--   <a>$sel:listOutgoingTypedLinks:BatchReadOperation'</a>,
--   <a>batchReadOperation_listOutgoingTypedLinks</a> - Returns a paginated
--   list of all the outgoing TypedLinkSpecifier information for an object.
--   It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
newBatchReadOperation :: BatchReadOperation

-- | Retrieves metadata about an object.
batchReadOperation_getObjectInformation :: Lens' BatchReadOperation (Maybe BatchGetObjectInformation)

-- | Retrieves attributes within a facet that are associated with an
--   object.
batchReadOperation_getObjectAttributes :: Lens' BatchReadOperation (Maybe BatchGetObjectAttributes)

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadOperation_listIncomingTypedLinks :: Lens' BatchReadOperation (Maybe BatchListIncomingTypedLinks)

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
batchReadOperation_listObjectParents :: Lens' BatchReadOperation (Maybe BatchListObjectParents)

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
batchReadOperation_listPolicyAttachments :: Lens' BatchReadOperation (Maybe BatchListPolicyAttachments)

-- | Lists all attributes that are associated with an object.
batchReadOperation_listObjectAttributes :: Lens' BatchReadOperation (Maybe BatchListObjectAttributes)

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
batchReadOperation_listObjectParentPaths :: Lens' BatchReadOperation (Maybe BatchListObjectParentPaths)

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
batchReadOperation_lookupPolicy :: Lens' BatchReadOperation (Maybe BatchLookupPolicy)

-- | Lists indices attached to an object.
batchReadOperation_listAttachedIndices :: Lens' BatchReadOperation (Maybe BatchListAttachedIndices)

-- | Returns a paginated list of child objects that are associated with a
--   given object.
batchReadOperation_listObjectChildren :: Lens' BatchReadOperation (Maybe BatchListObjectChildren)

-- | Lists objects attached to the specified index.
batchReadOperation_listIndex :: Lens' BatchReadOperation (Maybe BatchListIndex)

-- | Returns policies attached to an object in pagination fashion.
batchReadOperation_listObjectPolicies :: Lens' BatchReadOperation (Maybe BatchListObjectPolicies)

-- | Retrieves attributes that are associated with a typed link.
batchReadOperation_getLinkAttributes :: Lens' BatchReadOperation (Maybe BatchGetLinkAttributes)

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadOperation_listOutgoingTypedLinks :: Lens' BatchReadOperation (Maybe BatchListOutgoingTypedLinks)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchReadOperation.BatchReadOperation
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchReadOperation.BatchReadOperation
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchReadOperation.BatchReadOperation
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchReadOperation.BatchReadOperation
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchReadOperation.BatchReadOperation
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchReadOperation.BatchReadOperation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchReadOperation.BatchReadOperation


module Network.AWS.CloudDirectory.Types.BatchDetachTypedLink

-- | Detaches a typed link from a specified source and target object inside
--   a BatchRead operation. For more information, see DetachTypedLink and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachTypedLink</a> smart constructor.
data BatchDetachTypedLink
BatchDetachTypedLink' :: TypedLinkSpecifier -> BatchDetachTypedLink

-- | Used to accept a typed link specifier as input.
[$sel:typedLinkSpecifier:BatchDetachTypedLink'] :: BatchDetachTypedLink -> TypedLinkSpecifier

-- | Create a value of <a>BatchDetachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchDetachTypedLink'</a>,
--   <a>batchDetachTypedLink_typedLinkSpecifier</a> - Used to accept a
--   typed link specifier as input.
newBatchDetachTypedLink :: TypedLinkSpecifier -> BatchDetachTypedLink

-- | Used to accept a typed link specifier as input.
batchDetachTypedLink_typedLinkSpecifier :: Lens' BatchDetachTypedLink TypedLinkSpecifier
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchDetachTypedLink.BatchDetachTypedLink
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchDetachTypedLink.BatchDetachTypedLink
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchDetachTypedLink.BatchDetachTypedLink
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchDetachTypedLink.BatchDetachTypedLink
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchDetachTypedLink.BatchDetachTypedLink
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchDetachTypedLink.BatchDetachTypedLink
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchDetachTypedLink.BatchDetachTypedLink


module Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse

-- | Represents the output of a AttachTypedLink response operation.
--   
--   <i>See:</i> <a>newBatchAttachTypedLinkResponse</a> smart constructor.
data BatchAttachTypedLinkResponse
BatchAttachTypedLinkResponse' :: Maybe TypedLinkSpecifier -> BatchAttachTypedLinkResponse

-- | Returns a typed link specifier as output.
[$sel:typedLinkSpecifier:BatchAttachTypedLinkResponse'] :: BatchAttachTypedLinkResponse -> Maybe TypedLinkSpecifier

-- | Create a value of <a>BatchAttachTypedLinkResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchAttachTypedLinkResponse'</a>,
--   <a>batchAttachTypedLinkResponse_typedLinkSpecifier</a> - Returns a
--   typed link specifier as output.
newBatchAttachTypedLinkResponse :: BatchAttachTypedLinkResponse

-- | Returns a typed link specifier as output.
batchAttachTypedLinkResponse_typedLinkSpecifier :: Lens' BatchAttachTypedLinkResponse (Maybe TypedLinkSpecifier)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse.BatchAttachTypedLinkResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse.BatchAttachTypedLinkResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse.BatchAttachTypedLinkResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse.BatchAttachTypedLinkResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse.BatchAttachTypedLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse.BatchAttachTypedLinkResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchAttachTypedLinkResponse.BatchAttachTypedLinkResponse


module Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
--   
--   <i>See:</i> <a>newBatchWriteOperationResponse</a> smart constructor.
data BatchWriteOperationResponse
BatchWriteOperationResponse' :: Maybe BatchAttachTypedLinkResponse -> Maybe BatchDeleteObjectResponse -> Maybe BatchCreateObjectResponse -> Maybe BatchUpdateLinkAttributesResponse -> Maybe BatchDetachTypedLinkResponse -> Maybe BatchCreateIndexResponse -> Maybe BatchDetachFromIndexResponse -> Maybe BatchDetachPolicyResponse -> Maybe BatchAttachObjectResponse -> Maybe BatchAttachToIndexResponse -> Maybe BatchAttachPolicyResponse -> Maybe BatchUpdateObjectAttributesResponse -> Maybe BatchRemoveFacetFromObjectResponse -> Maybe BatchDetachObjectResponse -> Maybe BatchAddFacetToObjectResponse -> BatchWriteOperationResponse

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:attachTypedLink:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachTypedLinkResponse

-- | Deletes an object in a Directory.
[$sel:deleteObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDeleteObjectResponse

-- | Creates an object in a Directory.
[$sel:createObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchCreateObjectResponse

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
[$sel:updateLinkAttributes:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchUpdateLinkAttributesResponse

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:detachTypedLink:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachTypedLinkResponse

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
[$sel:createIndex:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchCreateIndexResponse

-- | Detaches the specified object from the specified index.
[$sel:detachFromIndex:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachFromIndexResponse

-- | Detaches a policy from a Directory.
[$sel:detachPolicy:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachPolicyResponse

-- | Attaches an object to a Directory.
[$sel:attachObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachObjectResponse

-- | Attaches the specified object to the specified index.
[$sel:attachToIndex:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachToIndexResponse

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
[$sel:attachPolicy:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachPolicyResponse

-- | Updates a given object’s attributes.
[$sel:updateObjectAttributes:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchUpdateObjectAttributesResponse

-- | The result of a batch remove facet from object operation.
[$sel:removeFacetFromObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchRemoveFacetFromObjectResponse

-- | Detaches an object from a Directory.
[$sel:detachObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachObjectResponse

-- | The result of an add facet to object batch operation.
[$sel:addFacetToObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAddFacetToObjectResponse

-- | Create a value of <a>BatchWriteOperationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachTypedLink:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachTypedLink</a> - Attaches a typed
--   link to a specified source and target object. For more information,
--   see <a>Typed Links</a>.
--   
--   <a>$sel:deleteObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_deleteObject</a> - Deletes an object in
--   a Directory.
--   
--   <a>$sel:createObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_createObject</a> - Creates an object in
--   a Directory.
--   
--   <a>$sel:updateLinkAttributes:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_updateLinkAttributes</a> - Represents
--   the output of a <tt>BatchWrite</tt> response operation.
--   
--   <a>$sel:detachTypedLink:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachTypedLink</a> - Detaches a typed
--   link from a specified source and target object. For more information,
--   see <a>Typed Links</a>.
--   
--   <a>$sel:createIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_createIndex</a> - Creates an index
--   object. See <a>Indexing and search</a> for more information.
--   
--   <a>$sel:detachFromIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachFromIndex</a> - Detaches the
--   specified object from the specified index.
--   
--   <a>$sel:detachPolicy:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachPolicy</a> - Detaches a policy
--   from a Directory.
--   
--   <a>$sel:attachObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachObject</a> - Attaches an object
--   to a Directory.
--   
--   <a>$sel:attachToIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachToIndex</a> - Attaches the
--   specified object to the specified index.
--   
--   <a>$sel:attachPolicy:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachPolicy</a> - Attaches a policy
--   object to a regular object. An object can have a limited number of
--   attached policies.
--   
--   <a>$sel:updateObjectAttributes:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_updateObjectAttributes</a> - Updates a
--   given object’s attributes.
--   
--   <a>$sel:removeFacetFromObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_removeFacetFromObject</a> - The result
--   of a batch remove facet from object operation.
--   
--   <a>$sel:detachObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachObject</a> - Detaches an object
--   from a Directory.
--   
--   <a>$sel:addFacetToObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_addFacetToObject</a> - The result of an
--   add facet to object batch operation.
newBatchWriteOperationResponse :: BatchWriteOperationResponse

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperationResponse_attachTypedLink :: Lens' BatchWriteOperationResponse (Maybe BatchAttachTypedLinkResponse)

-- | Deletes an object in a Directory.
batchWriteOperationResponse_deleteObject :: Lens' BatchWriteOperationResponse (Maybe BatchDeleteObjectResponse)

-- | Creates an object in a Directory.
batchWriteOperationResponse_createObject :: Lens' BatchWriteOperationResponse (Maybe BatchCreateObjectResponse)

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
batchWriteOperationResponse_updateLinkAttributes :: Lens' BatchWriteOperationResponse (Maybe BatchUpdateLinkAttributesResponse)

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperationResponse_detachTypedLink :: Lens' BatchWriteOperationResponse (Maybe BatchDetachTypedLinkResponse)

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
batchWriteOperationResponse_createIndex :: Lens' BatchWriteOperationResponse (Maybe BatchCreateIndexResponse)

-- | Detaches the specified object from the specified index.
batchWriteOperationResponse_detachFromIndex :: Lens' BatchWriteOperationResponse (Maybe BatchDetachFromIndexResponse)

-- | Detaches a policy from a Directory.
batchWriteOperationResponse_detachPolicy :: Lens' BatchWriteOperationResponse (Maybe BatchDetachPolicyResponse)

-- | Attaches an object to a Directory.
batchWriteOperationResponse_attachObject :: Lens' BatchWriteOperationResponse (Maybe BatchAttachObjectResponse)

-- | Attaches the specified object to the specified index.
batchWriteOperationResponse_attachToIndex :: Lens' BatchWriteOperationResponse (Maybe BatchAttachToIndexResponse)

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
batchWriteOperationResponse_attachPolicy :: Lens' BatchWriteOperationResponse (Maybe BatchAttachPolicyResponse)

-- | Updates a given object’s attributes.
batchWriteOperationResponse_updateObjectAttributes :: Lens' BatchWriteOperationResponse (Maybe BatchUpdateObjectAttributesResponse)

-- | The result of a batch remove facet from object operation.
batchWriteOperationResponse_removeFacetFromObject :: Lens' BatchWriteOperationResponse (Maybe BatchRemoveFacetFromObjectResponse)

-- | Detaches an object from a Directory.
batchWriteOperationResponse_detachObject :: Lens' BatchWriteOperationResponse (Maybe BatchDetachObjectResponse)

-- | The result of an add facet to object batch operation.
batchWriteOperationResponse_addFacetToObject :: Lens' BatchWriteOperationResponse (Maybe BatchAddFacetToObjectResponse)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse.BatchWriteOperationResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse.BatchWriteOperationResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse.BatchWriteOperationResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse.BatchWriteOperationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse.BatchWriteOperationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse.BatchWriteOperationResponse
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchWriteOperationResponse.BatchWriteOperationResponse


module Network.AWS.CloudDirectory.Types.UpdateActionType
newtype UpdateActionType
UpdateActionType' :: Text -> UpdateActionType
[fromUpdateActionType] :: UpdateActionType -> Text
pattern UpdateActionType_CREATE_OR_UPDATE :: UpdateActionType
pattern UpdateActionType_DELETE :: UpdateActionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance GHC.Classes.Ord Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.UpdateActionType.UpdateActionType


module Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate

-- | A typed link facet attribute update.
--   
--   <i>See:</i> <a>newTypedLinkFacetAttributeUpdate</a> smart constructor.
data TypedLinkFacetAttributeUpdate
TypedLinkFacetAttributeUpdate' :: TypedLinkAttributeDefinition -> UpdateActionType -> TypedLinkFacetAttributeUpdate

-- | The attribute to update.
[$sel:attribute:TypedLinkFacetAttributeUpdate'] :: TypedLinkFacetAttributeUpdate -> TypedLinkAttributeDefinition

-- | The action to perform when updating the attribute.
[$sel:action:TypedLinkFacetAttributeUpdate'] :: TypedLinkFacetAttributeUpdate -> UpdateActionType

-- | Create a value of <a>TypedLinkFacetAttributeUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:TypedLinkFacetAttributeUpdate'</a>,
--   <a>typedLinkFacetAttributeUpdate_attribute</a> - The attribute to
--   update.
--   
--   <a>$sel:action:TypedLinkFacetAttributeUpdate'</a>,
--   <a>typedLinkFacetAttributeUpdate_action</a> - The action to perform
--   when updating the attribute.
newTypedLinkFacetAttributeUpdate :: TypedLinkAttributeDefinition -> UpdateActionType -> TypedLinkFacetAttributeUpdate

-- | The attribute to update.
typedLinkFacetAttributeUpdate_attribute :: Lens' TypedLinkFacetAttributeUpdate TypedLinkAttributeDefinition

-- | The action to perform when updating the attribute.
typedLinkFacetAttributeUpdate_action :: Lens' TypedLinkFacetAttributeUpdate UpdateActionType
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate.TypedLinkFacetAttributeUpdate
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate.TypedLinkFacetAttributeUpdate
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate.TypedLinkFacetAttributeUpdate
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate.TypedLinkFacetAttributeUpdate
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate.TypedLinkFacetAttributeUpdate
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate.TypedLinkFacetAttributeUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.TypedLinkFacetAttributeUpdate.TypedLinkFacetAttributeUpdate


module Network.AWS.CloudDirectory.Types.ObjectAttributeAction

-- | The action to take on the object attribute.
--   
--   <i>See:</i> <a>newObjectAttributeAction</a> smart constructor.
data ObjectAttributeAction
ObjectAttributeAction' :: Maybe UpdateActionType -> Maybe TypedAttributeValue -> ObjectAttributeAction

-- | A type that can be either <tt>Update</tt> or <tt>Delete</tt>.
[$sel:objectAttributeActionType:ObjectAttributeAction'] :: ObjectAttributeAction -> Maybe UpdateActionType

-- | The value that you want to update to.
[$sel:objectAttributeUpdateValue:ObjectAttributeAction'] :: ObjectAttributeAction -> Maybe TypedAttributeValue

-- | Create a value of <a>ObjectAttributeAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeActionType:ObjectAttributeAction'</a>,
--   <a>objectAttributeAction_objectAttributeActionType</a> - A type that
--   can be either <tt>Update</tt> or <tt>Delete</tt>.
--   
--   <a>$sel:objectAttributeUpdateValue:ObjectAttributeAction'</a>,
--   <a>objectAttributeAction_objectAttributeUpdateValue</a> - The value
--   that you want to update to.
newObjectAttributeAction :: ObjectAttributeAction

-- | A type that can be either <tt>Update</tt> or <tt>Delete</tt>.
objectAttributeAction_objectAttributeActionType :: Lens' ObjectAttributeAction (Maybe UpdateActionType)

-- | The value that you want to update to.
objectAttributeAction_objectAttributeUpdateValue :: Lens' ObjectAttributeAction (Maybe TypedAttributeValue)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.ObjectAttributeAction.ObjectAttributeAction
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.ObjectAttributeAction.ObjectAttributeAction
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.ObjectAttributeAction.ObjectAttributeAction
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.ObjectAttributeAction.ObjectAttributeAction
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.ObjectAttributeAction.ObjectAttributeAction
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.ObjectAttributeAction.ObjectAttributeAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.ObjectAttributeAction.ObjectAttributeAction


module Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate

-- | Structure that contains attribute update information.
--   
--   <i>See:</i> <a>newObjectAttributeUpdate</a> smart constructor.
data ObjectAttributeUpdate
ObjectAttributeUpdate' :: Maybe ObjectAttributeAction -> Maybe AttributeKey -> ObjectAttributeUpdate

-- | The action to perform as part of the attribute update.
[$sel:objectAttributeAction:ObjectAttributeUpdate'] :: ObjectAttributeUpdate -> Maybe ObjectAttributeAction

-- | The key of the attribute being updated.
[$sel:objectAttributeKey:ObjectAttributeUpdate'] :: ObjectAttributeUpdate -> Maybe AttributeKey

-- | Create a value of <a>ObjectAttributeUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeAction:ObjectAttributeUpdate'</a>,
--   <a>objectAttributeUpdate_objectAttributeAction</a> - The action to
--   perform as part of the attribute update.
--   
--   <a>$sel:objectAttributeKey:ObjectAttributeUpdate'</a>,
--   <a>objectAttributeUpdate_objectAttributeKey</a> - The key of the
--   attribute being updated.
newObjectAttributeUpdate :: ObjectAttributeUpdate

-- | The action to perform as part of the attribute update.
objectAttributeUpdate_objectAttributeAction :: Lens' ObjectAttributeUpdate (Maybe ObjectAttributeAction)

-- | The key of the attribute being updated.
objectAttributeUpdate_objectAttributeKey :: Lens' ObjectAttributeUpdate (Maybe AttributeKey)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate.ObjectAttributeUpdate
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate.ObjectAttributeUpdate
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate.ObjectAttributeUpdate
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate.ObjectAttributeUpdate
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate.ObjectAttributeUpdate
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate.ObjectAttributeUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.ObjectAttributeUpdate.ObjectAttributeUpdate


module Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes

-- | Represents the output of a <tt>BatchUpdate</tt> operation.
--   
--   <i>See:</i> <a>newBatchUpdateObjectAttributes</a> smart constructor.
data BatchUpdateObjectAttributes
BatchUpdateObjectAttributes' :: ObjectReference -> [ObjectAttributeUpdate] -> BatchUpdateObjectAttributes

-- | Reference that identifies the object.
[$sel:objectReference:BatchUpdateObjectAttributes'] :: BatchUpdateObjectAttributes -> ObjectReference

-- | Attributes update structure.
[$sel:attributeUpdates:BatchUpdateObjectAttributes'] :: BatchUpdateObjectAttributes -> [ObjectAttributeUpdate]

-- | Create a value of <a>BatchUpdateObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchUpdateObjectAttributes'</a>,
--   <a>batchUpdateObjectAttributes_objectReference</a> - Reference that
--   identifies the object.
--   
--   <a>$sel:attributeUpdates:BatchUpdateObjectAttributes'</a>,
--   <a>batchUpdateObjectAttributes_attributeUpdates</a> - Attributes
--   update structure.
newBatchUpdateObjectAttributes :: ObjectReference -> BatchUpdateObjectAttributes

-- | Reference that identifies the object.
batchUpdateObjectAttributes_objectReference :: Lens' BatchUpdateObjectAttributes ObjectReference

-- | Attributes update structure.
batchUpdateObjectAttributes_attributeUpdates :: Lens' BatchUpdateObjectAttributes [ObjectAttributeUpdate]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes.BatchUpdateObjectAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes.BatchUpdateObjectAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes.BatchUpdateObjectAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes.BatchUpdateObjectAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes.BatchUpdateObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes.BatchUpdateObjectAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchUpdateObjectAttributes.BatchUpdateObjectAttributes


module Network.AWS.CloudDirectory.Types.LinkAttributeAction

-- | The action to take on a typed link attribute value. Updates are only
--   supported for attributes which don’t contribute to link identity.
--   
--   <i>See:</i> <a>newLinkAttributeAction</a> smart constructor.
data LinkAttributeAction
LinkAttributeAction' :: Maybe TypedAttributeValue -> Maybe UpdateActionType -> LinkAttributeAction

-- | The value that you want to update to.
[$sel:attributeUpdateValue:LinkAttributeAction'] :: LinkAttributeAction -> Maybe TypedAttributeValue

-- | A type that can be either <tt>UPDATE_OR_CREATE</tt> or
--   <tt>DELETE</tt>.
[$sel:attributeActionType:LinkAttributeAction'] :: LinkAttributeAction -> Maybe UpdateActionType

-- | Create a value of <a>LinkAttributeAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeUpdateValue:LinkAttributeAction'</a>,
--   <a>linkAttributeAction_attributeUpdateValue</a> - The value that you
--   want to update to.
--   
--   <a>$sel:attributeActionType:LinkAttributeAction'</a>,
--   <a>linkAttributeAction_attributeActionType</a> - A type that can be
--   either <tt>UPDATE_OR_CREATE</tt> or <tt>DELETE</tt>.
newLinkAttributeAction :: LinkAttributeAction

-- | The value that you want to update to.
linkAttributeAction_attributeUpdateValue :: Lens' LinkAttributeAction (Maybe TypedAttributeValue)

-- | A type that can be either <tt>UPDATE_OR_CREATE</tt> or
--   <tt>DELETE</tt>.
linkAttributeAction_attributeActionType :: Lens' LinkAttributeAction (Maybe UpdateActionType)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.LinkAttributeAction.LinkAttributeAction
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.LinkAttributeAction.LinkAttributeAction
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.LinkAttributeAction.LinkAttributeAction
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.LinkAttributeAction.LinkAttributeAction
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.LinkAttributeAction.LinkAttributeAction
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.LinkAttributeAction.LinkAttributeAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.LinkAttributeAction.LinkAttributeAction


module Network.AWS.CloudDirectory.Types.LinkAttributeUpdate

-- | Structure that contains attribute update information.
--   
--   <i>See:</i> <a>newLinkAttributeUpdate</a> smart constructor.
data LinkAttributeUpdate
LinkAttributeUpdate' :: Maybe LinkAttributeAction -> Maybe AttributeKey -> LinkAttributeUpdate

-- | The action to perform as part of the attribute update.
[$sel:attributeAction:LinkAttributeUpdate'] :: LinkAttributeUpdate -> Maybe LinkAttributeAction

-- | The key of the attribute being updated.
[$sel:attributeKey:LinkAttributeUpdate'] :: LinkAttributeUpdate -> Maybe AttributeKey

-- | Create a value of <a>LinkAttributeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeAction:LinkAttributeUpdate'</a>,
--   <a>linkAttributeUpdate_attributeAction</a> - The action to perform as
--   part of the attribute update.
--   
--   <a>$sel:attributeKey:LinkAttributeUpdate'</a>,
--   <a>linkAttributeUpdate_attributeKey</a> - The key of the attribute
--   being updated.
newLinkAttributeUpdate :: LinkAttributeUpdate

-- | The action to perform as part of the attribute update.
linkAttributeUpdate_attributeAction :: Lens' LinkAttributeUpdate (Maybe LinkAttributeAction)

-- | The key of the attribute being updated.
linkAttributeUpdate_attributeKey :: Lens' LinkAttributeUpdate (Maybe AttributeKey)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.LinkAttributeUpdate.LinkAttributeUpdate
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.LinkAttributeUpdate.LinkAttributeUpdate
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.LinkAttributeUpdate.LinkAttributeUpdate
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.LinkAttributeUpdate.LinkAttributeUpdate
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.LinkAttributeUpdate.LinkAttributeUpdate
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.LinkAttributeUpdate.LinkAttributeUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.LinkAttributeUpdate.LinkAttributeUpdate


module Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes

-- | Updates a given typed link’s attributes inside a BatchRead operation.
--   Attributes to be updated must not contribute to the typed link’s
--   identity, as defined by its <tt>IdentityAttributeOrder</tt>. For more
--   information, see UpdateLinkAttributes and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchUpdateLinkAttributes</a> smart constructor.
data BatchUpdateLinkAttributes
BatchUpdateLinkAttributes' :: TypedLinkSpecifier -> [LinkAttributeUpdate] -> BatchUpdateLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
[$sel:typedLinkSpecifier:BatchUpdateLinkAttributes'] :: BatchUpdateLinkAttributes -> TypedLinkSpecifier

-- | The attributes update structure.
[$sel:attributeUpdates:BatchUpdateLinkAttributes'] :: BatchUpdateLinkAttributes -> [LinkAttributeUpdate]

-- | Create a value of <a>BatchUpdateLinkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchUpdateLinkAttributes'</a>,
--   <a>batchUpdateLinkAttributes_typedLinkSpecifier</a> - Allows a typed
--   link specifier to be accepted as input.
--   
--   <a>$sel:attributeUpdates:BatchUpdateLinkAttributes'</a>,
--   <a>batchUpdateLinkAttributes_attributeUpdates</a> - The attributes
--   update structure.
newBatchUpdateLinkAttributes :: TypedLinkSpecifier -> BatchUpdateLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
batchUpdateLinkAttributes_typedLinkSpecifier :: Lens' BatchUpdateLinkAttributes TypedLinkSpecifier

-- | The attributes update structure.
batchUpdateLinkAttributes_attributeUpdates :: Lens' BatchUpdateLinkAttributes [LinkAttributeUpdate]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes.BatchUpdateLinkAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes.BatchUpdateLinkAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes.BatchUpdateLinkAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes.BatchUpdateLinkAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes.BatchUpdateLinkAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes.BatchUpdateLinkAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchUpdateLinkAttributes.BatchUpdateLinkAttributes


module Network.AWS.CloudDirectory.Types.BatchWriteOperation

-- | Represents the output of a <tt>BatchWrite</tt> operation.
--   
--   <i>See:</i> <a>newBatchWriteOperation</a> smart constructor.
data BatchWriteOperation
BatchWriteOperation' :: Maybe BatchAttachTypedLink -> Maybe BatchDeleteObject -> Maybe BatchCreateObject -> Maybe BatchUpdateLinkAttributes -> Maybe BatchDetachTypedLink -> Maybe BatchCreateIndex -> Maybe BatchDetachFromIndex -> Maybe BatchDetachPolicy -> Maybe BatchAttachObject -> Maybe BatchAttachToIndex -> Maybe BatchAttachPolicy -> Maybe BatchUpdateObjectAttributes -> Maybe BatchRemoveFacetFromObject -> Maybe BatchDetachObject -> Maybe BatchAddFacetToObject -> BatchWriteOperation

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:attachTypedLink:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachTypedLink

-- | Deletes an object in a Directory.
[$sel:deleteObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDeleteObject

-- | Creates an object.
[$sel:createObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchCreateObject

-- | Updates a given object's attributes.
[$sel:updateLinkAttributes:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchUpdateLinkAttributes

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:detachTypedLink:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachTypedLink

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
[$sel:createIndex:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchCreateIndex

-- | Detaches the specified object from the specified index.
[$sel:detachFromIndex:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachFromIndex

-- | Detaches a policy from a Directory.
[$sel:detachPolicy:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachPolicy

-- | Attaches an object to a Directory.
[$sel:attachObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachObject

-- | Attaches the specified object to the specified index.
[$sel:attachToIndex:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachToIndex

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
[$sel:attachPolicy:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachPolicy

-- | Updates a given object's attributes.
[$sel:updateObjectAttributes:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchUpdateObjectAttributes

-- | A batch operation that removes a facet from an object.
[$sel:removeFacetFromObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchRemoveFacetFromObject

-- | Detaches an object from a Directory.
[$sel:detachObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachObject

-- | A batch operation that adds a facet to an object.
[$sel:addFacetToObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAddFacetToObject

-- | Create a value of <a>BatchWriteOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachTypedLink:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachTypedLink</a> - Attaches a typed link to
--   a specified source and target object. For more information, see
--   <a>Typed Links</a>.
--   
--   <a>$sel:deleteObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_deleteObject</a> - Deletes an object in a
--   Directory.
--   
--   <a>$sel:createObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_createObject</a> - Creates an object.
--   
--   <a>$sel:updateLinkAttributes:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_updateLinkAttributes</a> - Updates a given
--   object's attributes.
--   
--   <a>$sel:detachTypedLink:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachTypedLink</a> - Detaches a typed link
--   from a specified source and target object. For more information, see
--   <a>Typed Links</a>.
--   
--   <a>$sel:createIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_createIndex</a> - Creates an index object. See
--   <a>Indexing and search</a> for more information.
--   
--   <a>$sel:detachFromIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachFromIndex</a> - Detaches the specified
--   object from the specified index.
--   
--   <a>$sel:detachPolicy:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachPolicy</a> - Detaches a policy from a
--   Directory.
--   
--   <a>$sel:attachObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachObject</a> - Attaches an object to a
--   Directory.
--   
--   <a>$sel:attachToIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachToIndex</a> - Attaches the specified
--   object to the specified index.
--   
--   <a>$sel:attachPolicy:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachPolicy</a> - Attaches a policy object to
--   a regular object. An object can have a limited number of attached
--   policies.
--   
--   <a>$sel:updateObjectAttributes:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_updateObjectAttributes</a> - Updates a given
--   object's attributes.
--   
--   <a>$sel:removeFacetFromObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_removeFacetFromObject</a> - A batch operation
--   that removes a facet from an object.
--   
--   <a>$sel:detachObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachObject</a> - Detaches an object from a
--   Directory.
--   
--   <a>$sel:addFacetToObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_addFacetToObject</a> - A batch operation that
--   adds a facet to an object.
newBatchWriteOperation :: BatchWriteOperation

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperation_attachTypedLink :: Lens' BatchWriteOperation (Maybe BatchAttachTypedLink)

-- | Deletes an object in a Directory.
batchWriteOperation_deleteObject :: Lens' BatchWriteOperation (Maybe BatchDeleteObject)

-- | Creates an object.
batchWriteOperation_createObject :: Lens' BatchWriteOperation (Maybe BatchCreateObject)

-- | Updates a given object's attributes.
batchWriteOperation_updateLinkAttributes :: Lens' BatchWriteOperation (Maybe BatchUpdateLinkAttributes)

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperation_detachTypedLink :: Lens' BatchWriteOperation (Maybe BatchDetachTypedLink)

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
batchWriteOperation_createIndex :: Lens' BatchWriteOperation (Maybe BatchCreateIndex)

-- | Detaches the specified object from the specified index.
batchWriteOperation_detachFromIndex :: Lens' BatchWriteOperation (Maybe BatchDetachFromIndex)

-- | Detaches a policy from a Directory.
batchWriteOperation_detachPolicy :: Lens' BatchWriteOperation (Maybe BatchDetachPolicy)

-- | Attaches an object to a Directory.
batchWriteOperation_attachObject :: Lens' BatchWriteOperation (Maybe BatchAttachObject)

-- | Attaches the specified object to the specified index.
batchWriteOperation_attachToIndex :: Lens' BatchWriteOperation (Maybe BatchAttachToIndex)

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
batchWriteOperation_attachPolicy :: Lens' BatchWriteOperation (Maybe BatchAttachPolicy)

-- | Updates a given object's attributes.
batchWriteOperation_updateObjectAttributes :: Lens' BatchWriteOperation (Maybe BatchUpdateObjectAttributes)

-- | A batch operation that removes a facet from an object.
batchWriteOperation_removeFacetFromObject :: Lens' BatchWriteOperation (Maybe BatchRemoveFacetFromObject)

-- | Detaches an object from a Directory.
batchWriteOperation_detachObject :: Lens' BatchWriteOperation (Maybe BatchDetachObject)

-- | A batch operation that adds a facet to an object.
batchWriteOperation_addFacetToObject :: Lens' BatchWriteOperation (Maybe BatchAddFacetToObject)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.BatchWriteOperation.BatchWriteOperation
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.BatchWriteOperation.BatchWriteOperation
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.BatchWriteOperation.BatchWriteOperation
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.BatchWriteOperation.BatchWriteOperation
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.BatchWriteOperation.BatchWriteOperation
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.BatchWriteOperation.BatchWriteOperation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.BatchWriteOperation.BatchWriteOperation


module Network.AWS.CloudDirectory.Types.FacetAttributeUpdate

-- | A structure that contains information used to update an attribute.
--   
--   <i>See:</i> <a>newFacetAttributeUpdate</a> smart constructor.
data FacetAttributeUpdate
FacetAttributeUpdate' :: Maybe FacetAttribute -> Maybe UpdateActionType -> FacetAttributeUpdate

-- | The attribute to update.
[$sel:attribute:FacetAttributeUpdate'] :: FacetAttributeUpdate -> Maybe FacetAttribute

-- | The action to perform when updating the attribute.
[$sel:action:FacetAttributeUpdate'] :: FacetAttributeUpdate -> Maybe UpdateActionType

-- | Create a value of <a>FacetAttributeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:FacetAttributeUpdate'</a>,
--   <a>facetAttributeUpdate_attribute</a> - The attribute to update.
--   
--   <a>$sel:action:FacetAttributeUpdate'</a>,
--   <a>facetAttributeUpdate_action</a> - The action to perform when
--   updating the attribute.
newFacetAttributeUpdate :: FacetAttributeUpdate

-- | The attribute to update.
facetAttributeUpdate_attribute :: Lens' FacetAttributeUpdate (Maybe FacetAttribute)

-- | The action to perform when updating the attribute.
facetAttributeUpdate_action :: Lens' FacetAttributeUpdate (Maybe UpdateActionType)
instance GHC.Generics.Generic Network.AWS.CloudDirectory.Types.FacetAttributeUpdate.FacetAttributeUpdate
instance GHC.Show.Show Network.AWS.CloudDirectory.Types.FacetAttributeUpdate.FacetAttributeUpdate
instance GHC.Read.Read Network.AWS.CloudDirectory.Types.FacetAttributeUpdate.FacetAttributeUpdate
instance GHC.Classes.Eq Network.AWS.CloudDirectory.Types.FacetAttributeUpdate.FacetAttributeUpdate
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.Types.FacetAttributeUpdate.FacetAttributeUpdate
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.Types.FacetAttributeUpdate.FacetAttributeUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.Types.FacetAttributeUpdate.FacetAttributeUpdate


module Network.AWS.CloudDirectory.Types

-- | API version <tt>2017-01-11</tt> of the Amazon CloudDirectory SDK
--   configuration.
defaultService :: Service

-- | Indicates a failure occurred while performing a check for backward
--   compatibility between the specified schema and the schema that is
--   currently applied to the directory.
_IncompatibleSchemaException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that an attempt to make an attachment was invalid. For
--   example, attaching two nodes with a link type that is not applicable
--   to the nodes or attempting to apply a schema to a directory a second
--   time.
_InvalidAttachmentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Facet that you provided was not well formed or could not be
--   validated with the schema.
_FacetValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A <tt>BatchWrite</tt> exception has occurred.
_BatchWriteException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when deleting a facet that contains an attribute that is a
--   target to an attribute reference in a different facet.
_FacetInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the provided ARN value is not valid.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A directory that has been deleted and to which access has been
--   attempted. Note: The requested resource will eventually cease to
--   exist.
_DirectoryDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when any of the rule parameter keys or values are invalid.
_InvalidRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates a problem that must be resolved by Amazon Web Services. This
--   might be a transient error in which case you can retry your request
--   until it succeeds. Otherwise, go to the <a>AWS Service Health
--   Dashboard</a> site to see if there are any operational issues with the
--   service.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a link could not be created due to a naming conflict.
--   Choose a different name and then try again.
_LinkNameAlreadyInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can occur for multiple reasons such as when you tag a resource that
--   doesn’t exist or if you specify a higher number of tags for a resource
--   than the allowed limit. Allowed limit is 50 tags per resource.
_InvalidTaggingRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the <tt>NextToken</tt> value is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested operation can only operate on policy
--   objects.
_NotPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Cannot list the parents of a Directory root.
_CannotListParentOfRootException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the provided <tt>SchemaDoc</tt> value is not valid.
_InvalidSchemaDocException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested index type is not supported.
_UnsupportedIndexTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access denied or directory not found. Either you don't have
--   permissions for this directory or the directory does not exist. Try
--   calling ListDirectories and check your permissions.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested operation can only operate on index
--   objects.
_NotIndexException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A facet with the same name already exists.
_FacetAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that your request is malformed in some manner. See the
--   exception message.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested operation cannot be completed because the
--   object has not been detached from the tree.
_ObjectNotDetachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Facet could not be found.
_FacetNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that limits are exceeded. See <a>Limits</a> for more
--   information.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The object could not be deleted because links still exist. Remove the
--   links and then try the operation again.
_StillContainsLinksException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Operations are only permitted on enabled directories.
_DirectoryNotEnabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource could not be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when a conflict with a previous successful write is detected.
--   For example, if a write operation occurs on an object and then an
--   attempt is made to read the object using “SERIALIZABLE” consistency,
--   this exception may result. This generally occurs when the previous
--   write did not have time to propagate to the host serving the current
--   request. A retry (with appropriate backoff logic) is the recommended
--   response to this exception.
_RetryableConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An operation can only operate on a disabled directory.
_DirectoryNotDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a schema could not be created due to a naming conflict.
--   Please select a different name and then try again.
_SchemaAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a Directory could not be created due to a naming
--   conflict. Choose a different name and try again.
_DirectoryAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a schema is already published.
_SchemaAlreadyPublishedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An object has been attempted to be attached to an object that does not
--   have the appropriate attribute value.
_IndexedAttributeMissingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when any invalid operations are performed on an object that is
--   not a node, such as calling <tt>ListObjectChildren</tt> for a leaf
--   node object.
_NotNodeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the object is not attached to the index.
_ObjectAlreadyDetachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An attempt to modify a Facet resulted in an invalid schema exception.
_InvalidFacetUpdateException :: AsError a => Getting (First ServiceError) a ServiceError
newtype BatchReadExceptionType
BatchReadExceptionType' :: Text -> BatchReadExceptionType
[fromBatchReadExceptionType] :: BatchReadExceptionType -> Text
pattern BatchReadExceptionType_AccessDeniedException :: BatchReadExceptionType
pattern BatchReadExceptionType_CannotListParentOfRootException :: BatchReadExceptionType
pattern BatchReadExceptionType_DirectoryNotEnabledException :: BatchReadExceptionType
pattern BatchReadExceptionType_FacetValidationException :: BatchReadExceptionType
pattern BatchReadExceptionType_InternalServiceException :: BatchReadExceptionType
pattern BatchReadExceptionType_InvalidArnException :: BatchReadExceptionType
pattern BatchReadExceptionType_InvalidNextTokenException :: BatchReadExceptionType
pattern BatchReadExceptionType_LimitExceededException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotIndexException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotNodeException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotPolicyException :: BatchReadExceptionType
pattern BatchReadExceptionType_ResourceNotFoundException :: BatchReadExceptionType
pattern BatchReadExceptionType_ValidationException :: BatchReadExceptionType
newtype ConsistencyLevel
ConsistencyLevel' :: Text -> ConsistencyLevel
[fromConsistencyLevel] :: ConsistencyLevel -> Text
pattern ConsistencyLevel_EVENTUAL :: ConsistencyLevel
pattern ConsistencyLevel_SERIALIZABLE :: ConsistencyLevel
newtype DirectoryState
DirectoryState' :: Text -> DirectoryState
[fromDirectoryState] :: DirectoryState -> Text
pattern DirectoryState_DELETED :: DirectoryState
pattern DirectoryState_DISABLED :: DirectoryState
pattern DirectoryState_ENABLED :: DirectoryState
newtype FacetAttributeType
FacetAttributeType' :: Text -> FacetAttributeType
[fromFacetAttributeType] :: FacetAttributeType -> Text
pattern FacetAttributeType_BINARY :: FacetAttributeType
pattern FacetAttributeType_BOOLEAN :: FacetAttributeType
pattern FacetAttributeType_DATETIME :: FacetAttributeType
pattern FacetAttributeType_NUMBER :: FacetAttributeType
pattern FacetAttributeType_STRING :: FacetAttributeType
pattern FacetAttributeType_VARIANT :: FacetAttributeType
newtype FacetStyle
FacetStyle' :: Text -> FacetStyle
[fromFacetStyle] :: FacetStyle -> Text
pattern FacetStyle_DYNAMIC :: FacetStyle
pattern FacetStyle_STATIC :: FacetStyle
newtype ObjectType
ObjectType' :: Text -> ObjectType
[fromObjectType] :: ObjectType -> Text
pattern ObjectType_INDEX :: ObjectType
pattern ObjectType_LEAF_NODE :: ObjectType
pattern ObjectType_NODE :: ObjectType
pattern ObjectType_POLICY :: ObjectType
newtype RangeMode
RangeMode' :: Text -> RangeMode
[fromRangeMode] :: RangeMode -> Text
pattern RangeMode_EXCLUSIVE :: RangeMode
pattern RangeMode_FIRST :: RangeMode
pattern RangeMode_INCLUSIVE :: RangeMode
pattern RangeMode_LAST :: RangeMode
pattern RangeMode_LAST_BEFORE_MISSING_VALUES :: RangeMode
newtype RequiredAttributeBehavior
RequiredAttributeBehavior' :: Text -> RequiredAttributeBehavior
[fromRequiredAttributeBehavior] :: RequiredAttributeBehavior -> Text
pattern RequiredAttributeBehavior_NOT_REQUIRED :: RequiredAttributeBehavior
pattern RequiredAttributeBehavior_REQUIRED_ALWAYS :: RequiredAttributeBehavior
newtype RuleType
RuleType' :: Text -> RuleType
[fromRuleType] :: RuleType -> Text
pattern RuleType_BINARY_LENGTH :: RuleType
pattern RuleType_NUMBER_COMPARISON :: RuleType
pattern RuleType_STRING_FROM_SET :: RuleType
pattern RuleType_STRING_LENGTH :: RuleType
newtype UpdateActionType
UpdateActionType' :: Text -> UpdateActionType
[fromUpdateActionType] :: UpdateActionType -> Text
pattern UpdateActionType_CREATE_OR_UPDATE :: UpdateActionType
pattern UpdateActionType_DELETE :: UpdateActionType

-- | A unique identifier for an attribute.
--   
--   <i>See:</i> <a>newAttributeKey</a> smart constructor.
data AttributeKey
AttributeKey' :: Text -> Text -> Text -> AttributeKey

-- | The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
[$sel:schemaArn:AttributeKey'] :: AttributeKey -> Text

-- | The name of the facet that the attribute exists within.
[$sel:facetName:AttributeKey'] :: AttributeKey -> Text

-- | The name of the attribute.
[$sel:name:AttributeKey'] :: AttributeKey -> Text

-- | Create a value of <a>AttributeKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:AttributeKey'</a>, <a>attributeKey_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
--   
--   <a>$sel:facetName:AttributeKey'</a>, <a>attributeKey_facetName</a> -
--   The name of the facet that the attribute exists within.
--   
--   <a>$sel:name:AttributeKey'</a>, <a>attributeKey_name</a> - The name of
--   the attribute.
newAttributeKey :: Text -> Text -> Text -> AttributeKey

-- | The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
attributeKey_schemaArn :: Lens' AttributeKey Text

-- | The name of the facet that the attribute exists within.
attributeKey_facetName :: Lens' AttributeKey Text

-- | The name of the attribute.
attributeKey_name :: Lens' AttributeKey Text

-- | The combination of an attribute key and an attribute value.
--   
--   <i>See:</i> <a>newAttributeKeyAndValue</a> smart constructor.
data AttributeKeyAndValue
AttributeKeyAndValue' :: AttributeKey -> TypedAttributeValue -> AttributeKeyAndValue

-- | The key of the attribute.
[$sel:key:AttributeKeyAndValue'] :: AttributeKeyAndValue -> AttributeKey

-- | The value of the attribute.
[$sel:value:AttributeKeyAndValue'] :: AttributeKeyAndValue -> TypedAttributeValue

-- | Create a value of <a>AttributeKeyAndValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AttributeKeyAndValue'</a>, <a>attributeKeyAndValue_key</a>
--   - The key of the attribute.
--   
--   <a>$sel:value:AttributeKeyAndValue'</a>,
--   <a>attributeKeyAndValue_value</a> - The value of the attribute.
newAttributeKeyAndValue :: AttributeKey -> TypedAttributeValue -> AttributeKeyAndValue

-- | The key of the attribute.
attributeKeyAndValue_key :: Lens' AttributeKeyAndValue AttributeKey

-- | The value of the attribute.
attributeKeyAndValue_value :: Lens' AttributeKeyAndValue TypedAttributeValue

-- | Identifies the attribute name and value for a typed link.
--   
--   <i>See:</i> <a>newAttributeNameAndValue</a> smart constructor.
data AttributeNameAndValue
AttributeNameAndValue' :: Text -> TypedAttributeValue -> AttributeNameAndValue

-- | The attribute name of the typed link.
[$sel:attributeName:AttributeNameAndValue'] :: AttributeNameAndValue -> Text

-- | The value for the typed link.
[$sel:value:AttributeNameAndValue'] :: AttributeNameAndValue -> TypedAttributeValue

-- | Create a value of <a>AttributeNameAndValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:AttributeNameAndValue'</a>,
--   <a>attributeNameAndValue_attributeName</a> - The attribute name of the
--   typed link.
--   
--   <a>$sel:value:AttributeNameAndValue'</a>,
--   <a>attributeNameAndValue_value</a> - The value for the typed link.
newAttributeNameAndValue :: Text -> TypedAttributeValue -> AttributeNameAndValue

-- | The attribute name of the typed link.
attributeNameAndValue_attributeName :: Lens' AttributeNameAndValue Text

-- | The value for the typed link.
attributeNameAndValue_value :: Lens' AttributeNameAndValue TypedAttributeValue

-- | Represents the output of a batch add facet to object operation.
--   
--   <i>See:</i> <a>newBatchAddFacetToObject</a> smart constructor.
data BatchAddFacetToObject
BatchAddFacetToObject' :: SchemaFacet -> [AttributeKeyAndValue] -> ObjectReference -> BatchAddFacetToObject

-- | Represents the facet being added to the object.
[$sel:schemaFacet:BatchAddFacetToObject'] :: BatchAddFacetToObject -> SchemaFacet

-- | The attributes to set on the object.
[$sel:objectAttributeList:BatchAddFacetToObject'] :: BatchAddFacetToObject -> [AttributeKeyAndValue]

-- | A reference to the object being mutated.
[$sel:objectReference:BatchAddFacetToObject'] :: BatchAddFacetToObject -> ObjectReference

-- | Create a value of <a>BatchAddFacetToObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacet:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_schemaFacet</a> - Represents the facet being
--   added to the object.
--   
--   <a>$sel:objectAttributeList:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_objectAttributeList</a> - The attributes to
--   set on the object.
--   
--   <a>$sel:objectReference:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_objectReference</a> - A reference to the
--   object being mutated.
newBatchAddFacetToObject :: SchemaFacet -> ObjectReference -> BatchAddFacetToObject

-- | Represents the facet being added to the object.
batchAddFacetToObject_schemaFacet :: Lens' BatchAddFacetToObject SchemaFacet

-- | The attributes to set on the object.
batchAddFacetToObject_objectAttributeList :: Lens' BatchAddFacetToObject [AttributeKeyAndValue]

-- | A reference to the object being mutated.
batchAddFacetToObject_objectReference :: Lens' BatchAddFacetToObject ObjectReference

-- | The result of a batch add facet to object operation.
--   
--   <i>See:</i> <a>newBatchAddFacetToObjectResponse</a> smart constructor.
data BatchAddFacetToObjectResponse
BatchAddFacetToObjectResponse' :: BatchAddFacetToObjectResponse

-- | Create a value of <a>BatchAddFacetToObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchAddFacetToObjectResponse :: BatchAddFacetToObjectResponse

-- | Represents the output of an AttachObject operation.
--   
--   <i>See:</i> <a>newBatchAttachObject</a> smart constructor.
data BatchAttachObject
BatchAttachObject' :: ObjectReference -> ObjectReference -> Text -> BatchAttachObject

-- | The parent object reference.
[$sel:parentReference:BatchAttachObject'] :: BatchAttachObject -> ObjectReference

-- | The child object reference that is to be attached to the object.
[$sel:childReference:BatchAttachObject'] :: BatchAttachObject -> ObjectReference

-- | The name of the link.
[$sel:linkName:BatchAttachObject'] :: BatchAttachObject -> Text

-- | Create a value of <a>BatchAttachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentReference:BatchAttachObject'</a>,
--   <a>batchAttachObject_parentReference</a> - The parent object
--   reference.
--   
--   <a>$sel:childReference:BatchAttachObject'</a>,
--   <a>batchAttachObject_childReference</a> - The child object reference
--   that is to be attached to the object.
--   
--   <a>$sel:linkName:BatchAttachObject'</a>,
--   <a>batchAttachObject_linkName</a> - The name of the link.
newBatchAttachObject :: ObjectReference -> ObjectReference -> Text -> BatchAttachObject

-- | The parent object reference.
batchAttachObject_parentReference :: Lens' BatchAttachObject ObjectReference

-- | The child object reference that is to be attached to the object.
batchAttachObject_childReference :: Lens' BatchAttachObject ObjectReference

-- | The name of the link.
batchAttachObject_linkName :: Lens' BatchAttachObject Text

-- | Represents the output batch AttachObject response operation.
--   
--   <i>See:</i> <a>newBatchAttachObjectResponse</a> smart constructor.
data BatchAttachObjectResponse
BatchAttachObjectResponse' :: Maybe Text -> BatchAttachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the object that has been attached.
[$sel:attachedObjectIdentifier:BatchAttachObjectResponse'] :: BatchAttachObjectResponse -> Maybe Text

-- | Create a value of <a>BatchAttachObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:BatchAttachObjectResponse'</a>,
--   <a>batchAttachObjectResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that has been attached.
newBatchAttachObjectResponse :: BatchAttachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the object that has been attached.
batchAttachObjectResponse_attachedObjectIdentifier :: Lens' BatchAttachObjectResponse (Maybe Text)

-- | Attaches a policy object to a regular object inside a BatchRead
--   operation. For more information, see AttachPolicy and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachPolicy</a> smart constructor.
data BatchAttachPolicy
BatchAttachPolicy' :: ObjectReference -> ObjectReference -> BatchAttachPolicy

-- | The reference that is associated with the policy object.
[$sel:policyReference:BatchAttachPolicy'] :: BatchAttachPolicy -> ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
[$sel:objectReference:BatchAttachPolicy'] :: BatchAttachPolicy -> ObjectReference

-- | Create a value of <a>BatchAttachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyReference:BatchAttachPolicy'</a>,
--   <a>batchAttachPolicy_policyReference</a> - The reference that is
--   associated with the policy object.
--   
--   <a>$sel:objectReference:BatchAttachPolicy'</a>,
--   <a>batchAttachPolicy_objectReference</a> - The reference that
--   identifies the object to which the policy will be attached.
newBatchAttachPolicy :: ObjectReference -> ObjectReference -> BatchAttachPolicy

-- | The reference that is associated with the policy object.
batchAttachPolicy_policyReference :: Lens' BatchAttachPolicy ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
batchAttachPolicy_objectReference :: Lens' BatchAttachPolicy ObjectReference

-- | Represents the output of an AttachPolicy response operation.
--   
--   <i>See:</i> <a>newBatchAttachPolicyResponse</a> smart constructor.
data BatchAttachPolicyResponse
BatchAttachPolicyResponse' :: BatchAttachPolicyResponse

-- | Create a value of <a>BatchAttachPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchAttachPolicyResponse :: BatchAttachPolicyResponse

-- | Attaches the specified object to the specified index inside a
--   BatchRead operation. For more information, see AttachToIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachToIndex</a> smart constructor.
data BatchAttachToIndex
BatchAttachToIndex' :: ObjectReference -> ObjectReference -> BatchAttachToIndex

-- | A reference to the index that you are attaching the object to.
[$sel:indexReference:BatchAttachToIndex'] :: BatchAttachToIndex -> ObjectReference

-- | A reference to the object that you are attaching to the index.
[$sel:targetReference:BatchAttachToIndex'] :: BatchAttachToIndex -> ObjectReference

-- | Create a value of <a>BatchAttachToIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexReference:BatchAttachToIndex'</a>,
--   <a>batchAttachToIndex_indexReference</a> - A reference to the index
--   that you are attaching the object to.
--   
--   <a>$sel:targetReference:BatchAttachToIndex'</a>,
--   <a>batchAttachToIndex_targetReference</a> - A reference to the object
--   that you are attaching to the index.
newBatchAttachToIndex :: ObjectReference -> ObjectReference -> BatchAttachToIndex

-- | A reference to the index that you are attaching the object to.
batchAttachToIndex_indexReference :: Lens' BatchAttachToIndex ObjectReference

-- | A reference to the object that you are attaching to the index.
batchAttachToIndex_targetReference :: Lens' BatchAttachToIndex ObjectReference

-- | Represents the output of a AttachToIndex response operation.
--   
--   <i>See:</i> <a>newBatchAttachToIndexResponse</a> smart constructor.
data BatchAttachToIndexResponse
BatchAttachToIndexResponse' :: Maybe Text -> BatchAttachToIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
[$sel:attachedObjectIdentifier:BatchAttachToIndexResponse'] :: BatchAttachToIndexResponse -> Maybe Text

-- | Create a value of <a>BatchAttachToIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:BatchAttachToIndexResponse'</a>,
--   <a>batchAttachToIndexResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
newBatchAttachToIndexResponse :: BatchAttachToIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
batchAttachToIndexResponse_attachedObjectIdentifier :: Lens' BatchAttachToIndexResponse (Maybe Text)

-- | Attaches a typed link to a specified source and target object inside a
--   BatchRead operation. For more information, see AttachTypedLink and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachTypedLink</a> smart constructor.
data BatchAttachTypedLink
BatchAttachTypedLink' :: ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> [AttributeNameAndValue] -> BatchAttachTypedLink

-- | Identifies the source object that the typed link will attach to.
[$sel:sourceObjectReference:BatchAttachTypedLink'] :: BatchAttachTypedLink -> ObjectReference

-- | Identifies the target object that the typed link will attach to.
[$sel:targetObjectReference:BatchAttachTypedLink'] :: BatchAttachTypedLink -> ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
[$sel:typedLinkFacet:BatchAttachTypedLink'] :: BatchAttachTypedLink -> TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
[$sel:attributes:BatchAttachTypedLink'] :: BatchAttachTypedLink -> [AttributeNameAndValue]

-- | Create a value of <a>BatchAttachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceObjectReference:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_sourceObjectReference</a> - Identifies the
--   source object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_targetObjectReference</a> - Identifies the
--   target object that the typed link will attach to.
--   
--   <a>$sel:typedLinkFacet:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:attributes:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_attributes</a> - A set of attributes that are
--   associated with the typed link.
newBatchAttachTypedLink :: ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> BatchAttachTypedLink

-- | Identifies the source object that the typed link will attach to.
batchAttachTypedLink_sourceObjectReference :: Lens' BatchAttachTypedLink ObjectReference

-- | Identifies the target object that the typed link will attach to.
batchAttachTypedLink_targetObjectReference :: Lens' BatchAttachTypedLink ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
batchAttachTypedLink_typedLinkFacet :: Lens' BatchAttachTypedLink TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
batchAttachTypedLink_attributes :: Lens' BatchAttachTypedLink [AttributeNameAndValue]

-- | Represents the output of a AttachTypedLink response operation.
--   
--   <i>See:</i> <a>newBatchAttachTypedLinkResponse</a> smart constructor.
data BatchAttachTypedLinkResponse
BatchAttachTypedLinkResponse' :: Maybe TypedLinkSpecifier -> BatchAttachTypedLinkResponse

-- | Returns a typed link specifier as output.
[$sel:typedLinkSpecifier:BatchAttachTypedLinkResponse'] :: BatchAttachTypedLinkResponse -> Maybe TypedLinkSpecifier

-- | Create a value of <a>BatchAttachTypedLinkResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchAttachTypedLinkResponse'</a>,
--   <a>batchAttachTypedLinkResponse_typedLinkSpecifier</a> - Returns a
--   typed link specifier as output.
newBatchAttachTypedLinkResponse :: BatchAttachTypedLinkResponse

-- | Returns a typed link specifier as output.
batchAttachTypedLinkResponse_typedLinkSpecifier :: Lens' BatchAttachTypedLinkResponse (Maybe TypedLinkSpecifier)

-- | Creates an index object inside of a BatchRead operation. For more
--   information, see CreateIndex and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchCreateIndex</a> smart constructor.
data BatchCreateIndex
BatchCreateIndex' :: Maybe Text -> Maybe ObjectReference -> Maybe Text -> [AttributeKey] -> Bool -> BatchCreateIndex

-- | The name of the link between the parent object and the index object.
[$sel:linkName:BatchCreateIndex'] :: BatchCreateIndex -> Maybe Text

-- | A reference to the parent object that contains the index object.
[$sel:parentReference:BatchCreateIndex'] :: BatchCreateIndex -> Maybe ObjectReference

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
[$sel:batchReferenceName:BatchCreateIndex'] :: BatchCreateIndex -> Maybe Text

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
[$sel:orderedIndexedAttributeList:BatchCreateIndex'] :: BatchCreateIndex -> [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
[$sel:isUnique:BatchCreateIndex'] :: BatchCreateIndex -> Bool

-- | Create a value of <a>BatchCreateIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_linkName</a> - The name of the link between the
--   parent object and the index object.
--   
--   <a>$sel:parentReference:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_parentReference</a> - A reference to the parent
--   object that contains the index object.
--   
--   <a>$sel:batchReferenceName:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_batchReferenceName</a> - The batch reference name.
--   See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:orderedIndexedAttributeList:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_orderedIndexedAttributeList</a> - Specifies the
--   attributes that should be indexed on. Currently only a single
--   attribute is supported.
--   
--   <a>$sel:isUnique:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_isUnique</a> - Indicates whether the attribute
--   that is being indexed has unique values or not.
newBatchCreateIndex :: Bool -> BatchCreateIndex

-- | The name of the link between the parent object and the index object.
batchCreateIndex_linkName :: Lens' BatchCreateIndex (Maybe Text)

-- | A reference to the parent object that contains the index object.
batchCreateIndex_parentReference :: Lens' BatchCreateIndex (Maybe ObjectReference)

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchCreateIndex_batchReferenceName :: Lens' BatchCreateIndex (Maybe Text)

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
batchCreateIndex_orderedIndexedAttributeList :: Lens' BatchCreateIndex [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
batchCreateIndex_isUnique :: Lens' BatchCreateIndex Bool

-- | Represents the output of a CreateIndex response operation.
--   
--   <i>See:</i> <a>newBatchCreateIndexResponse</a> smart constructor.
data BatchCreateIndexResponse
BatchCreateIndexResponse' :: Maybe Text -> BatchCreateIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
[$sel:objectIdentifier:BatchCreateIndexResponse'] :: BatchCreateIndexResponse -> Maybe Text

-- | Create a value of <a>BatchCreateIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchCreateIndexResponse'</a>,
--   <a>batchCreateIndexResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the index created by this operation.
newBatchCreateIndexResponse :: BatchCreateIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
batchCreateIndexResponse_objectIdentifier :: Lens' BatchCreateIndexResponse (Maybe Text)

-- | Represents the output of a CreateObject operation.
--   
--   <i>See:</i> <a>newBatchCreateObject</a> smart constructor.
data BatchCreateObject
BatchCreateObject' :: Maybe Text -> Maybe ObjectReference -> Maybe Text -> [SchemaFacet] -> [AttributeKeyAndValue] -> BatchCreateObject

-- | The name of the link.
[$sel:linkName:BatchCreateObject'] :: BatchCreateObject -> Maybe Text

-- | If specified, the parent reference to which this object will be
--   attached.
[$sel:parentReference:BatchCreateObject'] :: BatchCreateObject -> Maybe ObjectReference

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
[$sel:batchReferenceName:BatchCreateObject'] :: BatchCreateObject -> Maybe Text

-- | A list of <tt>FacetArns</tt> that will be associated with the object.
--   For more information, see arns.
[$sel:schemaFacet:BatchCreateObject'] :: BatchCreateObject -> [SchemaFacet]

-- | An attribute map, which contains an attribute ARN as the key and
--   attribute value as the map value.
[$sel:objectAttributeList:BatchCreateObject'] :: BatchCreateObject -> [AttributeKeyAndValue]

-- | Create a value of <a>BatchCreateObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:BatchCreateObject'</a>,
--   <a>batchCreateObject_linkName</a> - The name of the link.
--   
--   <a>$sel:parentReference:BatchCreateObject'</a>,
--   <a>batchCreateObject_parentReference</a> - If specified, the parent
--   reference to which this object will be attached.
--   
--   <a>$sel:batchReferenceName:BatchCreateObject'</a>,
--   <a>batchCreateObject_batchReferenceName</a> - The batch reference
--   name. See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:schemaFacet:BatchCreateObject'</a>,
--   <a>batchCreateObject_schemaFacet</a> - A list of <tt>FacetArns</tt>
--   that will be associated with the object. For more information, see
--   arns.
--   
--   <a>$sel:objectAttributeList:BatchCreateObject'</a>,
--   <a>batchCreateObject_objectAttributeList</a> - An attribute map, which
--   contains an attribute ARN as the key and attribute value as the map
--   value.
newBatchCreateObject :: BatchCreateObject

-- | The name of the link.
batchCreateObject_linkName :: Lens' BatchCreateObject (Maybe Text)

-- | If specified, the parent reference to which this object will be
--   attached.
batchCreateObject_parentReference :: Lens' BatchCreateObject (Maybe ObjectReference)

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchCreateObject_batchReferenceName :: Lens' BatchCreateObject (Maybe Text)

-- | A list of <tt>FacetArns</tt> that will be associated with the object.
--   For more information, see arns.
batchCreateObject_schemaFacet :: Lens' BatchCreateObject [SchemaFacet]

-- | An attribute map, which contains an attribute ARN as the key and
--   attribute value as the map value.
batchCreateObject_objectAttributeList :: Lens' BatchCreateObject [AttributeKeyAndValue]

-- | Represents the output of a CreateObject response operation.
--   
--   <i>See:</i> <a>newBatchCreateObjectResponse</a> smart constructor.
data BatchCreateObjectResponse
BatchCreateObjectResponse' :: Maybe Text -> BatchCreateObjectResponse

-- | The ID that is associated with the object.
[$sel:objectIdentifier:BatchCreateObjectResponse'] :: BatchCreateObjectResponse -> Maybe Text

-- | Create a value of <a>BatchCreateObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchCreateObjectResponse'</a>,
--   <a>batchCreateObjectResponse_objectIdentifier</a> - The ID that is
--   associated with the object.
newBatchCreateObjectResponse :: BatchCreateObjectResponse

-- | The ID that is associated with the object.
batchCreateObjectResponse_objectIdentifier :: Lens' BatchCreateObjectResponse (Maybe Text)

-- | Represents the output of a DeleteObject operation.
--   
--   <i>See:</i> <a>newBatchDeleteObject</a> smart constructor.
data BatchDeleteObject
BatchDeleteObject' :: ObjectReference -> BatchDeleteObject

-- | The reference that identifies the object.
[$sel:objectReference:BatchDeleteObject'] :: BatchDeleteObject -> ObjectReference

-- | Create a value of <a>BatchDeleteObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchDeleteObject'</a>,
--   <a>batchDeleteObject_objectReference</a> - The reference that
--   identifies the object.
newBatchDeleteObject :: ObjectReference -> BatchDeleteObject

-- | The reference that identifies the object.
batchDeleteObject_objectReference :: Lens' BatchDeleteObject ObjectReference

-- | Represents the output of a DeleteObject response operation.
--   
--   <i>See:</i> <a>newBatchDeleteObjectResponse</a> smart constructor.
data BatchDeleteObjectResponse
BatchDeleteObjectResponse' :: BatchDeleteObjectResponse

-- | Create a value of <a>BatchDeleteObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDeleteObjectResponse :: BatchDeleteObjectResponse

-- | Detaches the specified object from the specified index inside a
--   BatchRead operation. For more information, see DetachFromIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachFromIndex</a> smart constructor.
data BatchDetachFromIndex
BatchDetachFromIndex' :: ObjectReference -> ObjectReference -> BatchDetachFromIndex

-- | A reference to the index object.
[$sel:indexReference:BatchDetachFromIndex'] :: BatchDetachFromIndex -> ObjectReference

-- | A reference to the object being detached from the index.
[$sel:targetReference:BatchDetachFromIndex'] :: BatchDetachFromIndex -> ObjectReference

-- | Create a value of <a>BatchDetachFromIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexReference:BatchDetachFromIndex'</a>,
--   <a>batchDetachFromIndex_indexReference</a> - A reference to the index
--   object.
--   
--   <a>$sel:targetReference:BatchDetachFromIndex'</a>,
--   <a>batchDetachFromIndex_targetReference</a> - A reference to the
--   object being detached from the index.
newBatchDetachFromIndex :: ObjectReference -> ObjectReference -> BatchDetachFromIndex

-- | A reference to the index object.
batchDetachFromIndex_indexReference :: Lens' BatchDetachFromIndex ObjectReference

-- | A reference to the object being detached from the index.
batchDetachFromIndex_targetReference :: Lens' BatchDetachFromIndex ObjectReference

-- | Represents the output of a DetachFromIndex response operation.
--   
--   <i>See:</i> <a>newBatchDetachFromIndexResponse</a> smart constructor.
data BatchDetachFromIndexResponse
BatchDetachFromIndexResponse' :: Maybe Text -> BatchDetachFromIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
[$sel:detachedObjectIdentifier:BatchDetachFromIndexResponse'] :: BatchDetachFromIndexResponse -> Maybe Text

-- | Create a value of <a>BatchDetachFromIndexResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:BatchDetachFromIndexResponse'</a>,
--   <a>batchDetachFromIndexResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
newBatchDetachFromIndexResponse :: BatchDetachFromIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
batchDetachFromIndexResponse_detachedObjectIdentifier :: Lens' BatchDetachFromIndexResponse (Maybe Text)

-- | Represents the output of a DetachObject operation.
--   
--   <i>See:</i> <a>newBatchDetachObject</a> smart constructor.
data BatchDetachObject
BatchDetachObject' :: Maybe Text -> ObjectReference -> Text -> BatchDetachObject

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
[$sel:batchReferenceName:BatchDetachObject'] :: BatchDetachObject -> Maybe Text

-- | Parent reference from which the object with the specified link name is
--   detached.
[$sel:parentReference:BatchDetachObject'] :: BatchDetachObject -> ObjectReference

-- | The name of the link.
[$sel:linkName:BatchDetachObject'] :: BatchDetachObject -> Text

-- | Create a value of <a>BatchDetachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchReferenceName:BatchDetachObject'</a>,
--   <a>batchDetachObject_batchReferenceName</a> - The batch reference
--   name. See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:parentReference:BatchDetachObject'</a>,
--   <a>batchDetachObject_parentReference</a> - Parent reference from which
--   the object with the specified link name is detached.
--   
--   <a>$sel:linkName:BatchDetachObject'</a>,
--   <a>batchDetachObject_linkName</a> - The name of the link.
newBatchDetachObject :: ObjectReference -> Text -> BatchDetachObject

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchDetachObject_batchReferenceName :: Lens' BatchDetachObject (Maybe Text)

-- | Parent reference from which the object with the specified link name is
--   detached.
batchDetachObject_parentReference :: Lens' BatchDetachObject ObjectReference

-- | The name of the link.
batchDetachObject_linkName :: Lens' BatchDetachObject Text

-- | Represents the output of a DetachObject response operation.
--   
--   <i>See:</i> <a>newBatchDetachObjectResponse</a> smart constructor.
data BatchDetachObjectResponse
BatchDetachObjectResponse' :: Maybe Text -> BatchDetachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the detached object.
[$sel:detachedObjectIdentifier:BatchDetachObjectResponse'] :: BatchDetachObjectResponse -> Maybe Text

-- | Create a value of <a>BatchDetachObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:BatchDetachObjectResponse'</a>,
--   <a>batchDetachObjectResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the detached object.
newBatchDetachObjectResponse :: BatchDetachObjectResponse

-- | The <tt>ObjectIdentifier</tt> of the detached object.
batchDetachObjectResponse_detachedObjectIdentifier :: Lens' BatchDetachObjectResponse (Maybe Text)

-- | Detaches the specified policy from the specified directory inside a
--   BatchWrite operation. For more information, see DetachPolicy and
--   BatchWriteRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachPolicy</a> smart constructor.
data BatchDetachPolicy
BatchDetachPolicy' :: ObjectReference -> ObjectReference -> BatchDetachPolicy

-- | Reference that identifies the policy object.
[$sel:policyReference:BatchDetachPolicy'] :: BatchDetachPolicy -> ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
[$sel:objectReference:BatchDetachPolicy'] :: BatchDetachPolicy -> ObjectReference

-- | Create a value of <a>BatchDetachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyReference:BatchDetachPolicy'</a>,
--   <a>batchDetachPolicy_policyReference</a> - Reference that identifies
--   the policy object.
--   
--   <a>$sel:objectReference:BatchDetachPolicy'</a>,
--   <a>batchDetachPolicy_objectReference</a> - Reference that identifies
--   the object whose policy object will be detached.
newBatchDetachPolicy :: ObjectReference -> ObjectReference -> BatchDetachPolicy

-- | Reference that identifies the policy object.
batchDetachPolicy_policyReference :: Lens' BatchDetachPolicy ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
batchDetachPolicy_objectReference :: Lens' BatchDetachPolicy ObjectReference

-- | Represents the output of a DetachPolicy response operation.
--   
--   <i>See:</i> <a>newBatchDetachPolicyResponse</a> smart constructor.
data BatchDetachPolicyResponse
BatchDetachPolicyResponse' :: BatchDetachPolicyResponse

-- | Create a value of <a>BatchDetachPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDetachPolicyResponse :: BatchDetachPolicyResponse

-- | Detaches a typed link from a specified source and target object inside
--   a BatchRead operation. For more information, see DetachTypedLink and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachTypedLink</a> smart constructor.
data BatchDetachTypedLink
BatchDetachTypedLink' :: TypedLinkSpecifier -> BatchDetachTypedLink

-- | Used to accept a typed link specifier as input.
[$sel:typedLinkSpecifier:BatchDetachTypedLink'] :: BatchDetachTypedLink -> TypedLinkSpecifier

-- | Create a value of <a>BatchDetachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchDetachTypedLink'</a>,
--   <a>batchDetachTypedLink_typedLinkSpecifier</a> - Used to accept a
--   typed link specifier as input.
newBatchDetachTypedLink :: TypedLinkSpecifier -> BatchDetachTypedLink

-- | Used to accept a typed link specifier as input.
batchDetachTypedLink_typedLinkSpecifier :: Lens' BatchDetachTypedLink TypedLinkSpecifier

-- | Represents the output of a DetachTypedLink response operation.
--   
--   <i>See:</i> <a>newBatchDetachTypedLinkResponse</a> smart constructor.
data BatchDetachTypedLinkResponse
BatchDetachTypedLinkResponse' :: BatchDetachTypedLinkResponse

-- | Create a value of <a>BatchDetachTypedLinkResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDetachTypedLinkResponse :: BatchDetachTypedLinkResponse

-- | Retrieves attributes that are associated with a typed link inside a
--   BatchRead operation. For more information, see GetLinkAttributes and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetLinkAttributes</a> smart constructor.
data BatchGetLinkAttributes
BatchGetLinkAttributes' :: TypedLinkSpecifier -> [Text] -> BatchGetLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
[$sel:typedLinkSpecifier:BatchGetLinkAttributes'] :: BatchGetLinkAttributes -> TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
[$sel:attributeNames:BatchGetLinkAttributes'] :: BatchGetLinkAttributes -> [Text]

-- | Create a value of <a>BatchGetLinkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchGetLinkAttributes'</a>,
--   <a>batchGetLinkAttributes_typedLinkSpecifier</a> - Allows a typed link
--   specifier to be accepted as input.
--   
--   <a>$sel:attributeNames:BatchGetLinkAttributes'</a>,
--   <a>batchGetLinkAttributes_attributeNames</a> - A list of attribute
--   names whose values will be retrieved.
newBatchGetLinkAttributes :: TypedLinkSpecifier -> BatchGetLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
batchGetLinkAttributes_typedLinkSpecifier :: Lens' BatchGetLinkAttributes TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
batchGetLinkAttributes_attributeNames :: Lens' BatchGetLinkAttributes [Text]

-- | Represents the output of a GetLinkAttributes response operation.
--   
--   <i>See:</i> <a>newBatchGetLinkAttributesResponse</a> smart
--   constructor.
data BatchGetLinkAttributesResponse
BatchGetLinkAttributesResponse' :: Maybe [AttributeKeyAndValue] -> BatchGetLinkAttributesResponse

-- | The attributes that are associated with the typed link.
[$sel:attributes:BatchGetLinkAttributesResponse'] :: BatchGetLinkAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>BatchGetLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:BatchGetLinkAttributesResponse'</a>,
--   <a>batchGetLinkAttributesResponse_attributes</a> - The attributes that
--   are associated with the typed link.
newBatchGetLinkAttributesResponse :: BatchGetLinkAttributesResponse

-- | The attributes that are associated with the typed link.
batchGetLinkAttributesResponse_attributes :: Lens' BatchGetLinkAttributesResponse (Maybe [AttributeKeyAndValue])

-- | Retrieves attributes within a facet that are associated with an object
--   inside an BatchRead operation. For more information, see
--   GetObjectAttributes and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetObjectAttributes</a> smart constructor.
data BatchGetObjectAttributes
BatchGetObjectAttributes' :: ObjectReference -> SchemaFacet -> [Text] -> BatchGetObjectAttributes

-- | Reference that identifies the object whose attributes will be
--   retrieved.
[$sel:objectReference:BatchGetObjectAttributes'] :: BatchGetObjectAttributes -> ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
[$sel:schemaFacet:BatchGetObjectAttributes'] :: BatchGetObjectAttributes -> SchemaFacet

-- | List of attribute names whose values will be retrieved.
[$sel:attributeNames:BatchGetObjectAttributes'] :: BatchGetObjectAttributes -> [Text]

-- | Create a value of <a>BatchGetObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_objectReference</a> - Reference that
--   identifies the object whose attributes will be retrieved.
--   
--   <a>$sel:schemaFacet:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_schemaFacet</a> - Identifier for the facet
--   whose attributes will be retrieved. See SchemaFacet for details.
--   
--   <a>$sel:attributeNames:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_attributeNames</a> - List of attribute
--   names whose values will be retrieved.
newBatchGetObjectAttributes :: ObjectReference -> SchemaFacet -> BatchGetObjectAttributes

-- | Reference that identifies the object whose attributes will be
--   retrieved.
batchGetObjectAttributes_objectReference :: Lens' BatchGetObjectAttributes ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
batchGetObjectAttributes_schemaFacet :: Lens' BatchGetObjectAttributes SchemaFacet

-- | List of attribute names whose values will be retrieved.
batchGetObjectAttributes_attributeNames :: Lens' BatchGetObjectAttributes [Text]

-- | Represents the output of a GetObjectAttributes response operation.
--   
--   <i>See:</i> <a>newBatchGetObjectAttributesResponse</a> smart
--   constructor.
data BatchGetObjectAttributesResponse
BatchGetObjectAttributesResponse' :: Maybe [AttributeKeyAndValue] -> BatchGetObjectAttributesResponse

-- | The attribute values that are associated with an object.
[$sel:attributes:BatchGetObjectAttributesResponse'] :: BatchGetObjectAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>BatchGetObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:BatchGetObjectAttributesResponse'</a>,
--   <a>batchGetObjectAttributesResponse_attributes</a> - The attribute
--   values that are associated with an object.
newBatchGetObjectAttributesResponse :: BatchGetObjectAttributesResponse

-- | The attribute values that are associated with an object.
batchGetObjectAttributesResponse_attributes :: Lens' BatchGetObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | Retrieves metadata about an object inside a BatchRead operation. For
--   more information, see GetObjectInformation and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetObjectInformation</a> smart constructor.
data BatchGetObjectInformation
BatchGetObjectInformation' :: ObjectReference -> BatchGetObjectInformation

-- | A reference to the object.
[$sel:objectReference:BatchGetObjectInformation'] :: BatchGetObjectInformation -> ObjectReference

-- | Create a value of <a>BatchGetObjectInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchGetObjectInformation'</a>,
--   <a>batchGetObjectInformation_objectReference</a> - A reference to the
--   object.
newBatchGetObjectInformation :: ObjectReference -> BatchGetObjectInformation

-- | A reference to the object.
batchGetObjectInformation_objectReference :: Lens' BatchGetObjectInformation ObjectReference

-- | Represents the output of a GetObjectInformation response operation.
--   
--   <i>See:</i> <a>newBatchGetObjectInformationResponse</a> smart
--   constructor.
data BatchGetObjectInformationResponse
BatchGetObjectInformationResponse' :: Maybe [SchemaFacet] -> Maybe Text -> BatchGetObjectInformationResponse

-- | The facets attached to the specified object.
[$sel:schemaFacets:BatchGetObjectInformationResponse'] :: BatchGetObjectInformationResponse -> Maybe [SchemaFacet]

-- | The <tt>ObjectIdentifier</tt> of the specified object.
[$sel:objectIdentifier:BatchGetObjectInformationResponse'] :: BatchGetObjectInformationResponse -> Maybe Text

-- | Create a value of <a>BatchGetObjectInformationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacets:BatchGetObjectInformationResponse'</a>,
--   <a>batchGetObjectInformationResponse_schemaFacets</a> - The facets
--   attached to the specified object.
--   
--   <a>$sel:objectIdentifier:BatchGetObjectInformationResponse'</a>,
--   <a>batchGetObjectInformationResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the specified object.
newBatchGetObjectInformationResponse :: BatchGetObjectInformationResponse

-- | The facets attached to the specified object.
batchGetObjectInformationResponse_schemaFacets :: Lens' BatchGetObjectInformationResponse (Maybe [SchemaFacet])

-- | The <tt>ObjectIdentifier</tt> of the specified object.
batchGetObjectInformationResponse_objectIdentifier :: Lens' BatchGetObjectInformationResponse (Maybe Text)

-- | Lists indices attached to an object inside a BatchRead operation. For
--   more information, see ListAttachedIndices and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListAttachedIndices</a> smart constructor.
data BatchListAttachedIndices
BatchListAttachedIndices' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListAttachedIndices

-- | The pagination token.
[$sel:nextToken:BatchListAttachedIndices'] :: BatchListAttachedIndices -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListAttachedIndices'] :: BatchListAttachedIndices -> Maybe Natural

-- | A reference to the object that has indices attached.
[$sel:targetReference:BatchListAttachedIndices'] :: BatchListAttachedIndices -> ObjectReference

-- | Create a value of <a>BatchListAttachedIndices</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:targetReference:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_targetReference</a> - A reference to the
--   object that has indices attached.
newBatchListAttachedIndices :: ObjectReference -> BatchListAttachedIndices

-- | The pagination token.
batchListAttachedIndices_nextToken :: Lens' BatchListAttachedIndices (Maybe Text)

-- | The maximum number of results to retrieve.
batchListAttachedIndices_maxResults :: Lens' BatchListAttachedIndices (Maybe Natural)

-- | A reference to the object that has indices attached.
batchListAttachedIndices_targetReference :: Lens' BatchListAttachedIndices ObjectReference

-- | Represents the output of a ListAttachedIndices response operation.
--   
--   <i>See:</i> <a>newBatchListAttachedIndicesResponse</a> smart
--   constructor.
data BatchListAttachedIndicesResponse
BatchListAttachedIndicesResponse' :: Maybe Text -> Maybe [IndexAttachment] -> BatchListAttachedIndicesResponse

-- | The pagination token.
[$sel:nextToken:BatchListAttachedIndicesResponse'] :: BatchListAttachedIndicesResponse -> Maybe Text

-- | The indices attached to the specified object.
[$sel:indexAttachments:BatchListAttachedIndicesResponse'] :: BatchListAttachedIndicesResponse -> Maybe [IndexAttachment]

-- | Create a value of <a>BatchListAttachedIndicesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListAttachedIndicesResponse'</a>,
--   <a>batchListAttachedIndicesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:indexAttachments:BatchListAttachedIndicesResponse'</a>,
--   <a>batchListAttachedIndicesResponse_indexAttachments</a> - The indices
--   attached to the specified object.
newBatchListAttachedIndicesResponse :: BatchListAttachedIndicesResponse

-- | The pagination token.
batchListAttachedIndicesResponse_nextToken :: Lens' BatchListAttachedIndicesResponse (Maybe Text)

-- | The indices attached to the specified object.
batchListAttachedIndicesResponse_indexAttachments :: Lens' BatchListAttachedIndicesResponse (Maybe [IndexAttachment])

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object inside a BatchRead operation. For more
--   information, see ListIncomingTypedLinks and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListIncomingTypedLinks</a> smart constructor.
data BatchListIncomingTypedLinks
BatchListIncomingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe [TypedLinkAttributeRange] -> ObjectReference -> BatchListIncomingTypedLinks

-- | The pagination token.
[$sel:nextToken:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe Text

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
[$sel:filterTypedLink:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe TypedLinkSchemaAndFacetName

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe Natural

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
[$sel:filterAttributeRanges:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> Maybe [TypedLinkAttributeRange]

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListIncomingTypedLinks'] :: BatchListIncomingTypedLinks -> ObjectReference

-- | Create a value of <a>BatchListIncomingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls.
--   
--   <a>$sel:maxResults:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:filterAttributeRanges:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_filterAttributeRanges</a> - Provides
--   range filters for multiple attributes. When providing ranges to typed
--   link selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:objectReference:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_objectReference</a> - The reference
--   that identifies the object whose attributes will be listed.
newBatchListIncomingTypedLinks :: ObjectReference -> BatchListIncomingTypedLinks

-- | The pagination token.
batchListIncomingTypedLinks_nextToken :: Lens' BatchListIncomingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
batchListIncomingTypedLinks_filterTypedLink :: Lens' BatchListIncomingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
batchListIncomingTypedLinks_maxResults :: Lens' BatchListIncomingTypedLinks (Maybe Natural)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
batchListIncomingTypedLinks_filterAttributeRanges :: Lens' BatchListIncomingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListIncomingTypedLinks_objectReference :: Lens' BatchListIncomingTypedLinks ObjectReference

-- | Represents the output of a ListIncomingTypedLinks response operation.
--   
--   <i>See:</i> <a>newBatchListIncomingTypedLinksResponse</a> smart
--   constructor.
data BatchListIncomingTypedLinksResponse
BatchListIncomingTypedLinksResponse' :: Maybe [TypedLinkSpecifier] -> Maybe Text -> BatchListIncomingTypedLinksResponse

-- | Returns one or more typed link specifiers as output.
[$sel:linkSpecifiers:BatchListIncomingTypedLinksResponse'] :: BatchListIncomingTypedLinksResponse -> Maybe [TypedLinkSpecifier]

-- | The pagination token.
[$sel:nextToken:BatchListIncomingTypedLinksResponse'] :: BatchListIncomingTypedLinksResponse -> Maybe Text

-- | Create a value of <a>BatchListIncomingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkSpecifiers:BatchListIncomingTypedLinksResponse'</a>,
--   <a>batchListIncomingTypedLinksResponse_linkSpecifiers</a> - Returns
--   one or more typed link specifiers as output.
--   
--   <a>$sel:nextToken:BatchListIncomingTypedLinksResponse'</a>,
--   <a>batchListIncomingTypedLinksResponse_nextToken</a> - The pagination
--   token.
newBatchListIncomingTypedLinksResponse :: BatchListIncomingTypedLinksResponse

-- | Returns one or more typed link specifiers as output.
batchListIncomingTypedLinksResponse_linkSpecifiers :: Lens' BatchListIncomingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The pagination token.
batchListIncomingTypedLinksResponse_nextToken :: Lens' BatchListIncomingTypedLinksResponse (Maybe Text)

-- | Lists objects attached to the specified index inside a BatchRead
--   operation. For more information, see ListIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListIndex</a> smart constructor.
data BatchListIndex
BatchListIndex' :: Maybe Text -> Maybe Natural -> Maybe [ObjectAttributeRange] -> ObjectReference -> BatchListIndex

-- | The pagination token.
[$sel:nextToken:BatchListIndex'] :: BatchListIndex -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListIndex'] :: BatchListIndex -> Maybe Natural

-- | Specifies the ranges of indexed values that you want to query.
[$sel:rangesOnIndexedValues:BatchListIndex'] :: BatchListIndex -> Maybe [ObjectAttributeRange]

-- | The reference to the index to list.
[$sel:indexReference:BatchListIndex'] :: BatchListIndex -> ObjectReference

-- | Create a value of <a>BatchListIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIndex'</a>, <a>batchListIndex_nextToken</a>
--   - The pagination token.
--   
--   <a>$sel:maxResults:BatchListIndex'</a>,
--   <a>batchListIndex_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:rangesOnIndexedValues:BatchListIndex'</a>,
--   <a>batchListIndex_rangesOnIndexedValues</a> - Specifies the ranges of
--   indexed values that you want to query.
--   
--   <a>$sel:indexReference:BatchListIndex'</a>,
--   <a>batchListIndex_indexReference</a> - The reference to the index to
--   list.
newBatchListIndex :: ObjectReference -> BatchListIndex

-- | The pagination token.
batchListIndex_nextToken :: Lens' BatchListIndex (Maybe Text)

-- | The maximum number of results to retrieve.
batchListIndex_maxResults :: Lens' BatchListIndex (Maybe Natural)

-- | Specifies the ranges of indexed values that you want to query.
batchListIndex_rangesOnIndexedValues :: Lens' BatchListIndex (Maybe [ObjectAttributeRange])

-- | The reference to the index to list.
batchListIndex_indexReference :: Lens' BatchListIndex ObjectReference

-- | Represents the output of a ListIndex response operation.
--   
--   <i>See:</i> <a>newBatchListIndexResponse</a> smart constructor.
data BatchListIndexResponse
BatchListIndexResponse' :: Maybe Text -> Maybe [IndexAttachment] -> BatchListIndexResponse

-- | The pagination token.
[$sel:nextToken:BatchListIndexResponse'] :: BatchListIndexResponse -> Maybe Text

-- | The objects and indexed values attached to the index.
[$sel:indexAttachments:BatchListIndexResponse'] :: BatchListIndexResponse -> Maybe [IndexAttachment]

-- | Create a value of <a>BatchListIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIndexResponse'</a>,
--   <a>batchListIndexResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:indexAttachments:BatchListIndexResponse'</a>,
--   <a>batchListIndexResponse_indexAttachments</a> - The objects and
--   indexed values attached to the index.
newBatchListIndexResponse :: BatchListIndexResponse

-- | The pagination token.
batchListIndexResponse_nextToken :: Lens' BatchListIndexResponse (Maybe Text)

-- | The objects and indexed values attached to the index.
batchListIndexResponse_indexAttachments :: Lens' BatchListIndexResponse (Maybe [IndexAttachment])

-- | Represents the output of a ListObjectAttributes operation.
--   
--   <i>See:</i> <a>newBatchListObjectAttributes</a> smart constructor.
data BatchListObjectAttributes
BatchListObjectAttributes' :: Maybe Text -> Maybe Natural -> Maybe SchemaFacet -> ObjectReference -> BatchListObjectAttributes

-- | The pagination token.
[$sel:nextToken:BatchListObjectAttributes'] :: BatchListObjectAttributes -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:BatchListObjectAttributes'] :: BatchListObjectAttributes -> Maybe Natural

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
[$sel:facetFilter:BatchListObjectAttributes'] :: BatchListObjectAttributes -> Maybe SchemaFacet

-- | Reference of the object whose attributes need to be listed.
[$sel:objectReference:BatchListObjectAttributes'] :: BatchListObjectAttributes -> ObjectReference

-- | Create a value of <a>BatchListObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_maxResults</a> - The maximum number of
--   items to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:facetFilter:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_facetFilter</a> - Used to filter the list
--   of object attributes that are associated with a certain facet.
--   
--   <a>$sel:objectReference:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_objectReference</a> - Reference of the
--   object whose attributes need to be listed.
newBatchListObjectAttributes :: ObjectReference -> BatchListObjectAttributes

-- | The pagination token.
batchListObjectAttributes_nextToken :: Lens' BatchListObjectAttributes (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
batchListObjectAttributes_maxResults :: Lens' BatchListObjectAttributes (Maybe Natural)

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
batchListObjectAttributes_facetFilter :: Lens' BatchListObjectAttributes (Maybe SchemaFacet)

-- | Reference of the object whose attributes need to be listed.
batchListObjectAttributes_objectReference :: Lens' BatchListObjectAttributes ObjectReference

-- | Represents the output of a ListObjectAttributes response operation.
--   
--   <i>See:</i> <a>newBatchListObjectAttributesResponse</a> smart
--   constructor.
data BatchListObjectAttributesResponse
BatchListObjectAttributesResponse' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> BatchListObjectAttributesResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectAttributesResponse'] :: BatchListObjectAttributesResponse -> Maybe Text

-- | The attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key; attribute value is the value.
[$sel:attributes:BatchListObjectAttributesResponse'] :: BatchListObjectAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>BatchListObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectAttributesResponse'</a>,
--   <a>batchListObjectAttributesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attributes:BatchListObjectAttributesResponse'</a>,
--   <a>batchListObjectAttributesResponse_attributes</a> - The attributes
--   map that is associated with the object. <tt>AttributeArn</tt> is the
--   key; attribute value is the value.
newBatchListObjectAttributesResponse :: BatchListObjectAttributesResponse

-- | The pagination token.
batchListObjectAttributesResponse_nextToken :: Lens' BatchListObjectAttributesResponse (Maybe Text)

-- | The attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key; attribute value is the value.
batchListObjectAttributesResponse_attributes :: Lens' BatchListObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | Represents the output of a ListObjectChildren operation.
--   
--   <i>See:</i> <a>newBatchListObjectChildren</a> smart constructor.
data BatchListObjectChildren
BatchListObjectChildren' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectChildren

-- | The pagination token.
[$sel:nextToken:BatchListObjectChildren'] :: BatchListObjectChildren -> Maybe Text

-- | Maximum number of items to be retrieved in a single call. This is an
--   approximate number.
[$sel:maxResults:BatchListObjectChildren'] :: BatchListObjectChildren -> Maybe Natural

-- | Reference of the object for which child objects are being listed.
[$sel:objectReference:BatchListObjectChildren'] :: BatchListObjectChildren -> ObjectReference

-- | Create a value of <a>BatchListObjectChildren</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_maxResults</a> - Maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:objectReference:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_objectReference</a> - Reference of the
--   object for which child objects are being listed.
newBatchListObjectChildren :: ObjectReference -> BatchListObjectChildren

-- | The pagination token.
batchListObjectChildren_nextToken :: Lens' BatchListObjectChildren (Maybe Text)

-- | Maximum number of items to be retrieved in a single call. This is an
--   approximate number.
batchListObjectChildren_maxResults :: Lens' BatchListObjectChildren (Maybe Natural)

-- | Reference of the object for which child objects are being listed.
batchListObjectChildren_objectReference :: Lens' BatchListObjectChildren ObjectReference

-- | Represents the output of a ListObjectChildren response operation.
--   
--   <i>See:</i> <a>newBatchListObjectChildrenResponse</a> smart
--   constructor.
data BatchListObjectChildrenResponse
BatchListObjectChildrenResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> BatchListObjectChildrenResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectChildrenResponse'] :: BatchListObjectChildrenResponse -> Maybe Text

-- | The children structure, which is a map with the key as the
--   <tt>LinkName</tt> and <tt>ObjectIdentifier</tt> as the value.
[$sel:children:BatchListObjectChildrenResponse'] :: BatchListObjectChildrenResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>BatchListObjectChildrenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectChildrenResponse'</a>,
--   <a>batchListObjectChildrenResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:children:BatchListObjectChildrenResponse'</a>,
--   <a>batchListObjectChildrenResponse_children</a> - The children
--   structure, which is a map with the key as the <tt>LinkName</tt> and
--   <tt>ObjectIdentifier</tt> as the value.
newBatchListObjectChildrenResponse :: BatchListObjectChildrenResponse

-- | The pagination token.
batchListObjectChildrenResponse_nextToken :: Lens' BatchListObjectChildrenResponse (Maybe Text)

-- | The children structure, which is a map with the key as the
--   <tt>LinkName</tt> and <tt>ObjectIdentifier</tt> as the value.
batchListObjectChildrenResponse_children :: Lens' BatchListObjectChildrenResponse (Maybe (HashMap Text Text))

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects inside a BatchRead
--   operation. For more information, see ListObjectParentPaths and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListObjectParentPaths</a> smart constructor.
data BatchListObjectParentPaths
BatchListObjectParentPaths' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectParentPaths

-- | The pagination token.
[$sel:nextToken:BatchListObjectParentPaths'] :: BatchListObjectParentPaths -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListObjectParentPaths'] :: BatchListObjectParentPaths -> Maybe Natural

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListObjectParentPaths'] :: BatchListObjectParentPaths -> ObjectReference

-- | Create a value of <a>BatchListObjectParentPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:objectReference:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newBatchListObjectParentPaths :: ObjectReference -> BatchListObjectParentPaths

-- | The pagination token.
batchListObjectParentPaths_nextToken :: Lens' BatchListObjectParentPaths (Maybe Text)

-- | The maximum number of results to retrieve.
batchListObjectParentPaths_maxResults :: Lens' BatchListObjectParentPaths (Maybe Natural)

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListObjectParentPaths_objectReference :: Lens' BatchListObjectParentPaths ObjectReference

-- | Represents the output of a ListObjectParentPaths response operation.
--   
--   <i>See:</i> <a>newBatchListObjectParentPathsResponse</a> smart
--   constructor.
data BatchListObjectParentPathsResponse
BatchListObjectParentPathsResponse' :: Maybe Text -> Maybe [PathToObjectIdentifiers] -> BatchListObjectParentPathsResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectParentPathsResponse'] :: BatchListObjectParentPathsResponse -> Maybe Text

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
[$sel:pathToObjectIdentifiersList:BatchListObjectParentPathsResponse'] :: BatchListObjectParentPathsResponse -> Maybe [PathToObjectIdentifiers]

-- | Create a value of <a>BatchListObjectParentPathsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParentPathsResponse'</a>,
--   <a>batchListObjectParentPathsResponse_nextToken</a> - The pagination
--   token.
--   
--   
--   <a>$sel:pathToObjectIdentifiersList:BatchListObjectParentPathsResponse'</a>,
--   <a>batchListObjectParentPathsResponse_pathToObjectIdentifiersList</a>
--   - Returns the path to the <tt>ObjectIdentifiers</tt> that are
--   associated with the directory.
newBatchListObjectParentPathsResponse :: BatchListObjectParentPathsResponse

-- | The pagination token.
batchListObjectParentPathsResponse_nextToken :: Lens' BatchListObjectParentPathsResponse (Maybe Text)

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
batchListObjectParentPathsResponse_pathToObjectIdentifiersList :: Lens' BatchListObjectParentPathsResponse (Maybe [PathToObjectIdentifiers])

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
--   
--   <i>See:</i> <a>newBatchListObjectParents</a> smart constructor.
data BatchListObjectParents
BatchListObjectParents' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectParents

-- | The pagination token.
[$sel:nextToken:BatchListObjectParents'] :: BatchListObjectParents -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:BatchListObjectParents'] :: BatchListObjectParents -> Maybe Natural
[$sel:objectReference:BatchListObjectParents'] :: BatchListObjectParents -> ObjectReference

-- | Create a value of <a>BatchListObjectParents</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:objectReference:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_objectReference</a> - Undocumented member.
newBatchListObjectParents :: ObjectReference -> BatchListObjectParents

-- | The pagination token.
batchListObjectParents_nextToken :: Lens' BatchListObjectParents (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
batchListObjectParents_maxResults :: Lens' BatchListObjectParents (Maybe Natural)

-- | Undocumented member.
batchListObjectParents_objectReference :: Lens' BatchListObjectParents ObjectReference

-- | Represents the output of a ListObjectParents response operation.
--   
--   <i>See:</i> <a>newBatchListObjectParentsResponse</a> smart
--   constructor.
data BatchListObjectParentsResponse
BatchListObjectParentsResponse' :: Maybe [ObjectIdentifierAndLinkNameTuple] -> Maybe Text -> BatchListObjectParentsResponse

-- | Returns a list of parent reference and LinkName Tuples.
[$sel:parentLinks:BatchListObjectParentsResponse'] :: BatchListObjectParentsResponse -> Maybe [ObjectIdentifierAndLinkNameTuple]

-- | The pagination token.
[$sel:nextToken:BatchListObjectParentsResponse'] :: BatchListObjectParentsResponse -> Maybe Text

-- | Create a value of <a>BatchListObjectParentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentLinks:BatchListObjectParentsResponse'</a>,
--   <a>batchListObjectParentsResponse_parentLinks</a> - Returns a list of
--   parent reference and LinkName Tuples.
--   
--   <a>$sel:nextToken:BatchListObjectParentsResponse'</a>,
--   <a>batchListObjectParentsResponse_nextToken</a> - The pagination
--   token.
newBatchListObjectParentsResponse :: BatchListObjectParentsResponse

-- | Returns a list of parent reference and LinkName Tuples.
batchListObjectParentsResponse_parentLinks :: Lens' BatchListObjectParentsResponse (Maybe [ObjectIdentifierAndLinkNameTuple])

-- | The pagination token.
batchListObjectParentsResponse_nextToken :: Lens' BatchListObjectParentsResponse (Maybe Text)

-- | Returns policies attached to an object in pagination fashion inside a
--   BatchRead operation. For more information, see ListObjectPolicies and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListObjectPolicies</a> smart constructor.
data BatchListObjectPolicies
BatchListObjectPolicies' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectPolicies

-- | The pagination token.
[$sel:nextToken:BatchListObjectPolicies'] :: BatchListObjectPolicies -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListObjectPolicies'] :: BatchListObjectPolicies -> Maybe Natural

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListObjectPolicies'] :: BatchListObjectPolicies -> ObjectReference

-- | Create a value of <a>BatchListObjectPolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:objectReference:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newBatchListObjectPolicies :: ObjectReference -> BatchListObjectPolicies

-- | The pagination token.
batchListObjectPolicies_nextToken :: Lens' BatchListObjectPolicies (Maybe Text)

-- | The maximum number of results to retrieve.
batchListObjectPolicies_maxResults :: Lens' BatchListObjectPolicies (Maybe Natural)

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListObjectPolicies_objectReference :: Lens' BatchListObjectPolicies ObjectReference

-- | Represents the output of a ListObjectPolicies response operation.
--   
--   <i>See:</i> <a>newBatchListObjectPoliciesResponse</a> smart
--   constructor.
data BatchListObjectPoliciesResponse
BatchListObjectPoliciesResponse' :: Maybe Text -> Maybe [Text] -> BatchListObjectPoliciesResponse

-- | The pagination token.
[$sel:nextToken:BatchListObjectPoliciesResponse'] :: BatchListObjectPoliciesResponse -> Maybe Text

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
[$sel:attachedPolicyIds:BatchListObjectPoliciesResponse'] :: BatchListObjectPoliciesResponse -> Maybe [Text]

-- | Create a value of <a>BatchListObjectPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectPoliciesResponse'</a>,
--   <a>batchListObjectPoliciesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attachedPolicyIds:BatchListObjectPoliciesResponse'</a>,
--   <a>batchListObjectPoliciesResponse_attachedPolicyIds</a> - A list of
--   policy <tt>ObjectIdentifiers</tt>, that are attached to the object.
newBatchListObjectPoliciesResponse :: BatchListObjectPoliciesResponse

-- | The pagination token.
batchListObjectPoliciesResponse_nextToken :: Lens' BatchListObjectPoliciesResponse (Maybe Text)

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
batchListObjectPoliciesResponse_attachedPolicyIds :: Lens' BatchListObjectPoliciesResponse (Maybe [Text])

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object inside a BatchRead operation. For more
--   information, see ListOutgoingTypedLinks and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListOutgoingTypedLinks</a> smart constructor.
data BatchListOutgoingTypedLinks
BatchListOutgoingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe [TypedLinkAttributeRange] -> ObjectReference -> BatchListOutgoingTypedLinks

-- | The pagination token.
[$sel:nextToken:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe Text

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
[$sel:filterTypedLink:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe TypedLinkSchemaAndFacetName

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe Natural

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
[$sel:filterAttributeRanges:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> Maybe [TypedLinkAttributeRange]

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:BatchListOutgoingTypedLinks'] :: BatchListOutgoingTypedLinks -> ObjectReference

-- | Create a value of <a>BatchListOutgoingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes defined on the typed link
--   facet, not the order they are supplied to any API calls.
--   
--   <a>$sel:maxResults:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:filterAttributeRanges:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_filterAttributeRanges</a> - Provides
--   range filters for multiple attributes. When providing ranges to typed
--   link selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:objectReference:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_objectReference</a> - The reference
--   that identifies the object whose attributes will be listed.
newBatchListOutgoingTypedLinks :: ObjectReference -> BatchListOutgoingTypedLinks

-- | The pagination token.
batchListOutgoingTypedLinks_nextToken :: Lens' BatchListOutgoingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
batchListOutgoingTypedLinks_filterTypedLink :: Lens' BatchListOutgoingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
batchListOutgoingTypedLinks_maxResults :: Lens' BatchListOutgoingTypedLinks (Maybe Natural)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
batchListOutgoingTypedLinks_filterAttributeRanges :: Lens' BatchListOutgoingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListOutgoingTypedLinks_objectReference :: Lens' BatchListOutgoingTypedLinks ObjectReference

-- | Represents the output of a ListOutgoingTypedLinks response operation.
--   
--   <i>See:</i> <a>newBatchListOutgoingTypedLinksResponse</a> smart
--   constructor.
data BatchListOutgoingTypedLinksResponse
BatchListOutgoingTypedLinksResponse' :: Maybe Text -> Maybe [TypedLinkSpecifier] -> BatchListOutgoingTypedLinksResponse

-- | The pagination token.
[$sel:nextToken:BatchListOutgoingTypedLinksResponse'] :: BatchListOutgoingTypedLinksResponse -> Maybe Text

-- | Returns a typed link specifier as output.
[$sel:typedLinkSpecifiers:BatchListOutgoingTypedLinksResponse'] :: BatchListOutgoingTypedLinksResponse -> Maybe [TypedLinkSpecifier]

-- | Create a value of <a>BatchListOutgoingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListOutgoingTypedLinksResponse'</a>,
--   <a>batchListOutgoingTypedLinksResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:typedLinkSpecifiers:BatchListOutgoingTypedLinksResponse'</a>,
--   <a>batchListOutgoingTypedLinksResponse_typedLinkSpecifiers</a> -
--   Returns a typed link specifier as output.
newBatchListOutgoingTypedLinksResponse :: BatchListOutgoingTypedLinksResponse

-- | The pagination token.
batchListOutgoingTypedLinksResponse_nextToken :: Lens' BatchListOutgoingTypedLinksResponse (Maybe Text)

-- | Returns a typed link specifier as output.
batchListOutgoingTypedLinksResponse_typedLinkSpecifiers :: Lens' BatchListOutgoingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached inside a BatchRead operation. For more information, see
--   ListPolicyAttachments and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListPolicyAttachments</a> smart constructor.
data BatchListPolicyAttachments
BatchListPolicyAttachments' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListPolicyAttachments

-- | The pagination token.
[$sel:nextToken:BatchListPolicyAttachments'] :: BatchListPolicyAttachments -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchListPolicyAttachments'] :: BatchListPolicyAttachments -> Maybe Natural

-- | The reference that identifies the policy object.
[$sel:policyReference:BatchListPolicyAttachments'] :: BatchListPolicyAttachments -> ObjectReference

-- | Create a value of <a>BatchListPolicyAttachments</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:policyReference:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_policyReference</a> - The reference that
--   identifies the policy object.
newBatchListPolicyAttachments :: ObjectReference -> BatchListPolicyAttachments

-- | The pagination token.
batchListPolicyAttachments_nextToken :: Lens' BatchListPolicyAttachments (Maybe Text)

-- | The maximum number of results to retrieve.
batchListPolicyAttachments_maxResults :: Lens' BatchListPolicyAttachments (Maybe Natural)

-- | The reference that identifies the policy object.
batchListPolicyAttachments_policyReference :: Lens' BatchListPolicyAttachments ObjectReference

-- | Represents the output of a ListPolicyAttachments response operation.
--   
--   <i>See:</i> <a>newBatchListPolicyAttachmentsResponse</a> smart
--   constructor.
data BatchListPolicyAttachmentsResponse
BatchListPolicyAttachmentsResponse' :: Maybe Text -> Maybe [Text] -> BatchListPolicyAttachmentsResponse

-- | The pagination token.
[$sel:nextToken:BatchListPolicyAttachmentsResponse'] :: BatchListPolicyAttachmentsResponse -> Maybe Text

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
[$sel:objectIdentifiers:BatchListPolicyAttachmentsResponse'] :: BatchListPolicyAttachmentsResponse -> Maybe [Text]

-- | Create a value of <a>BatchListPolicyAttachmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListPolicyAttachmentsResponse'</a>,
--   <a>batchListPolicyAttachmentsResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:objectIdentifiers:BatchListPolicyAttachmentsResponse'</a>,
--   <a>batchListPolicyAttachmentsResponse_objectIdentifiers</a> - A list
--   of <tt>ObjectIdentifiers</tt> to which the policy is attached.
newBatchListPolicyAttachmentsResponse :: BatchListPolicyAttachmentsResponse

-- | The pagination token.
batchListPolicyAttachmentsResponse_nextToken :: Lens' BatchListPolicyAttachmentsResponse (Maybe Text)

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
batchListPolicyAttachmentsResponse_objectIdentifiers :: Lens' BatchListPolicyAttachmentsResponse (Maybe [Text])

-- | Lists all policies from the root of the Directory to the object
--   specified inside a BatchRead operation. For more information, see
--   LookupPolicy and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchLookupPolicy</a> smart constructor.
data BatchLookupPolicy
BatchLookupPolicy' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchLookupPolicy

-- | The pagination token.
[$sel:nextToken:BatchLookupPolicy'] :: BatchLookupPolicy -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:BatchLookupPolicy'] :: BatchLookupPolicy -> Maybe Natural

-- | Reference that identifies the object whose policies will be looked up.
[$sel:objectReference:BatchLookupPolicy'] :: BatchLookupPolicy -> ObjectReference

-- | Create a value of <a>BatchLookupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:objectReference:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_objectReference</a> - Reference that identifies
--   the object whose policies will be looked up.
newBatchLookupPolicy :: ObjectReference -> BatchLookupPolicy

-- | The pagination token.
batchLookupPolicy_nextToken :: Lens' BatchLookupPolicy (Maybe Text)

-- | The maximum number of results to retrieve.
batchLookupPolicy_maxResults :: Lens' BatchLookupPolicy (Maybe Natural)

-- | Reference that identifies the object whose policies will be looked up.
batchLookupPolicy_objectReference :: Lens' BatchLookupPolicy ObjectReference

-- | Represents the output of a LookupPolicy response operation.
--   
--   <i>See:</i> <a>newBatchLookupPolicyResponse</a> smart constructor.
data BatchLookupPolicyResponse
BatchLookupPolicyResponse' :: Maybe Text -> Maybe [PolicyToPath] -> BatchLookupPolicyResponse

-- | The pagination token.
[$sel:nextToken:BatchLookupPolicyResponse'] :: BatchLookupPolicyResponse -> Maybe Text

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
[$sel:policyToPathList:BatchLookupPolicyResponse'] :: BatchLookupPolicyResponse -> Maybe [PolicyToPath]

-- | Create a value of <a>BatchLookupPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchLookupPolicyResponse'</a>,
--   <a>batchLookupPolicyResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:policyToPathList:BatchLookupPolicyResponse'</a>,
--   <a>batchLookupPolicyResponse_policyToPathList</a> - Provides list of
--   path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
newBatchLookupPolicyResponse :: BatchLookupPolicyResponse

-- | The pagination token.
batchLookupPolicyResponse_nextToken :: Lens' BatchLookupPolicyResponse (Maybe Text)

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
batchLookupPolicyResponse_policyToPathList :: Lens' BatchLookupPolicyResponse (Maybe [PolicyToPath])

-- | The batch read exception structure, which contains the exception type
--   and message.
--   
--   <i>See:</i> <a>newBatchReadException</a> smart constructor.
data BatchReadException
BatchReadException' :: Maybe Text -> Maybe BatchReadExceptionType -> BatchReadException

-- | An exception message that is associated with the failure.
[$sel:message:BatchReadException'] :: BatchReadException -> Maybe Text

-- | A type of exception, such as <tt>InvalidArnException</tt>.
[$sel:type':BatchReadException'] :: BatchReadException -> Maybe BatchReadExceptionType

-- | Create a value of <a>BatchReadException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:BatchReadException'</a>,
--   <a>batchReadException_message</a> - An exception message that is
--   associated with the failure.
--   
--   <a>$sel:type':BatchReadException'</a>, <a>batchReadException_type</a>
--   - A type of exception, such as <tt>InvalidArnException</tt>.
newBatchReadException :: BatchReadException

-- | An exception message that is associated with the failure.
batchReadException_message :: Lens' BatchReadException (Maybe Text)

-- | A type of exception, such as <tt>InvalidArnException</tt>.
batchReadException_type :: Lens' BatchReadException (Maybe BatchReadExceptionType)

-- | Represents the output of a <tt>BatchRead</tt> operation.
--   
--   <i>See:</i> <a>newBatchReadOperation</a> smart constructor.
data BatchReadOperation
BatchReadOperation' :: Maybe BatchGetObjectInformation -> Maybe BatchGetObjectAttributes -> Maybe BatchListIncomingTypedLinks -> Maybe BatchListObjectParents -> Maybe BatchListPolicyAttachments -> Maybe BatchListObjectAttributes -> Maybe BatchListObjectParentPaths -> Maybe BatchLookupPolicy -> Maybe BatchListAttachedIndices -> Maybe BatchListObjectChildren -> Maybe BatchListIndex -> Maybe BatchListObjectPolicies -> Maybe BatchGetLinkAttributes -> Maybe BatchListOutgoingTypedLinks -> BatchReadOperation

-- | Retrieves metadata about an object.
[$sel:getObjectInformation:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchGetObjectInformation

-- | Retrieves attributes within a facet that are associated with an
--   object.
[$sel:getObjectAttributes:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchGetObjectAttributes

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listIncomingTypedLinks:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListIncomingTypedLinks

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
[$sel:listObjectParents:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectParents

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
[$sel:listPolicyAttachments:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListPolicyAttachments

-- | Lists all attributes that are associated with an object.
[$sel:listObjectAttributes:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectAttributes

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
[$sel:listObjectParentPaths:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectParentPaths

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
[$sel:lookupPolicy:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchLookupPolicy

-- | Lists indices attached to an object.
[$sel:listAttachedIndices:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListAttachedIndices

-- | Returns a paginated list of child objects that are associated with a
--   given object.
[$sel:listObjectChildren:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectChildren

-- | Lists objects attached to the specified index.
[$sel:listIndex:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListIndex

-- | Returns policies attached to an object in pagination fashion.
[$sel:listObjectPolicies:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListObjectPolicies

-- | Retrieves attributes that are associated with a typed link.
[$sel:getLinkAttributes:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchGetLinkAttributes

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listOutgoingTypedLinks:BatchReadOperation'] :: BatchReadOperation -> Maybe BatchListOutgoingTypedLinks

-- | Create a value of <a>BatchReadOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:getObjectInformation:BatchReadOperation'</a>,
--   <a>batchReadOperation_getObjectInformation</a> - Retrieves metadata
--   about an object.
--   
--   <a>$sel:getObjectAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_getObjectAttributes</a> - Retrieves attributes
--   within a facet that are associated with an object.
--   
--   <a>$sel:listIncomingTypedLinks:BatchReadOperation'</a>,
--   <a>batchReadOperation_listIncomingTypedLinks</a> - Returns a paginated
--   list of all the incoming TypedLinkSpecifier information for an object.
--   It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
--   
--   <a>$sel:listObjectParents:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectParents</a> - Lists parent objects
--   that are associated with a given object in pagination fashion.
--   
--   <a>$sel:listPolicyAttachments:BatchReadOperation'</a>,
--   <a>batchReadOperation_listPolicyAttachments</a> - Returns all of the
--   <tt>ObjectIdentifiers</tt> to which a given policy is attached.
--   
--   <a>$sel:listObjectAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectAttributes</a> - Lists all attributes
--   that are associated with an object.
--   
--   <a>$sel:listObjectParentPaths:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectParentPaths</a> - Retrieves all
--   available parent paths for any object type such as node, leaf node,
--   policy node, and index node objects. For more information about
--   objects, see <a>Directory Structure</a>.
--   
--   <a>$sel:lookupPolicy:BatchReadOperation'</a>,
--   <a>batchReadOperation_lookupPolicy</a> - Lists all policies from the
--   root of the Directory to the object specified. If there are no
--   policies present, an empty list is returned. If policies are present,
--   and if some objects don't have the policies attached, it returns the
--   <tt>ObjectIdentifier</tt> for such objects. If policies are present,
--   it returns <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and
--   <tt>policyType</tt>. Paths that don't lead to the root from the target
--   object are ignored. For more information, see <a>Policies</a>.
--   
--   <a>$sel:listAttachedIndices:BatchReadOperation'</a>,
--   <a>batchReadOperation_listAttachedIndices</a> - Lists indices attached
--   to an object.
--   
--   <a>$sel:listObjectChildren:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectChildren</a> - Returns a paginated
--   list of child objects that are associated with a given object.
--   
--   <a>$sel:listIndex:BatchReadOperation'</a>,
--   <a>batchReadOperation_listIndex</a> - Lists objects attached to the
--   specified index.
--   
--   <a>$sel:listObjectPolicies:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectPolicies</a> - Returns policies
--   attached to an object in pagination fashion.
--   
--   <a>$sel:getLinkAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_getLinkAttributes</a> - Retrieves attributes
--   that are associated with a typed link.
--   
--   <a>$sel:listOutgoingTypedLinks:BatchReadOperation'</a>,
--   <a>batchReadOperation_listOutgoingTypedLinks</a> - Returns a paginated
--   list of all the outgoing TypedLinkSpecifier information for an object.
--   It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
newBatchReadOperation :: BatchReadOperation

-- | Retrieves metadata about an object.
batchReadOperation_getObjectInformation :: Lens' BatchReadOperation (Maybe BatchGetObjectInformation)

-- | Retrieves attributes within a facet that are associated with an
--   object.
batchReadOperation_getObjectAttributes :: Lens' BatchReadOperation (Maybe BatchGetObjectAttributes)

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadOperation_listIncomingTypedLinks :: Lens' BatchReadOperation (Maybe BatchListIncomingTypedLinks)

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
batchReadOperation_listObjectParents :: Lens' BatchReadOperation (Maybe BatchListObjectParents)

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
batchReadOperation_listPolicyAttachments :: Lens' BatchReadOperation (Maybe BatchListPolicyAttachments)

-- | Lists all attributes that are associated with an object.
batchReadOperation_listObjectAttributes :: Lens' BatchReadOperation (Maybe BatchListObjectAttributes)

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
batchReadOperation_listObjectParentPaths :: Lens' BatchReadOperation (Maybe BatchListObjectParentPaths)

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
batchReadOperation_lookupPolicy :: Lens' BatchReadOperation (Maybe BatchLookupPolicy)

-- | Lists indices attached to an object.
batchReadOperation_listAttachedIndices :: Lens' BatchReadOperation (Maybe BatchListAttachedIndices)

-- | Returns a paginated list of child objects that are associated with a
--   given object.
batchReadOperation_listObjectChildren :: Lens' BatchReadOperation (Maybe BatchListObjectChildren)

-- | Lists objects attached to the specified index.
batchReadOperation_listIndex :: Lens' BatchReadOperation (Maybe BatchListIndex)

-- | Returns policies attached to an object in pagination fashion.
batchReadOperation_listObjectPolicies :: Lens' BatchReadOperation (Maybe BatchListObjectPolicies)

-- | Retrieves attributes that are associated with a typed link.
batchReadOperation_getLinkAttributes :: Lens' BatchReadOperation (Maybe BatchGetLinkAttributes)

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadOperation_listOutgoingTypedLinks :: Lens' BatchReadOperation (Maybe BatchListOutgoingTypedLinks)

-- | Represents the output of a <tt>BatchRead</tt> response operation.
--   
--   <i>See:</i> <a>newBatchReadOperationResponse</a> smart constructor.
data BatchReadOperationResponse
BatchReadOperationResponse' :: Maybe BatchReadSuccessfulResponse -> Maybe BatchReadException -> BatchReadOperationResponse

-- | Identifies which operation in a batch has succeeded.
[$sel:successfulResponse:BatchReadOperationResponse'] :: BatchReadOperationResponse -> Maybe BatchReadSuccessfulResponse

-- | Identifies which operation in a batch has failed.
[$sel:exceptionResponse:BatchReadOperationResponse'] :: BatchReadOperationResponse -> Maybe BatchReadException

-- | Create a value of <a>BatchReadOperationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successfulResponse:BatchReadOperationResponse'</a>,
--   <a>batchReadOperationResponse_successfulResponse</a> - Identifies
--   which operation in a batch has succeeded.
--   
--   <a>$sel:exceptionResponse:BatchReadOperationResponse'</a>,
--   <a>batchReadOperationResponse_exceptionResponse</a> - Identifies which
--   operation in a batch has failed.
newBatchReadOperationResponse :: BatchReadOperationResponse

-- | Identifies which operation in a batch has succeeded.
batchReadOperationResponse_successfulResponse :: Lens' BatchReadOperationResponse (Maybe BatchReadSuccessfulResponse)

-- | Identifies which operation in a batch has failed.
batchReadOperationResponse_exceptionResponse :: Lens' BatchReadOperationResponse (Maybe BatchReadException)

-- | Represents the output of a <tt>BatchRead</tt> success response
--   operation.
--   
--   <i>See:</i> <a>newBatchReadSuccessfulResponse</a> smart constructor.
data BatchReadSuccessfulResponse
BatchReadSuccessfulResponse' :: Maybe BatchGetObjectInformationResponse -> Maybe BatchGetObjectAttributesResponse -> Maybe BatchListIncomingTypedLinksResponse -> Maybe BatchListObjectParentsResponse -> Maybe BatchListPolicyAttachmentsResponse -> Maybe BatchListObjectAttributesResponse -> Maybe BatchListObjectParentPathsResponse -> Maybe BatchLookupPolicyResponse -> Maybe BatchListAttachedIndicesResponse -> Maybe BatchListObjectChildrenResponse -> Maybe BatchListIndexResponse -> Maybe BatchListObjectPoliciesResponse -> Maybe BatchGetLinkAttributesResponse -> Maybe BatchListOutgoingTypedLinksResponse -> BatchReadSuccessfulResponse

-- | Retrieves metadata about an object.
[$sel:getObjectInformation:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchGetObjectInformationResponse

-- | Retrieves attributes within a facet that are associated with an
--   object.
[$sel:getObjectAttributes:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchGetObjectAttributesResponse

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listIncomingTypedLinks:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListIncomingTypedLinksResponse

-- | The list of parent objects to retrieve.
[$sel:listObjectParents:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectParentsResponse

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
[$sel:listPolicyAttachments:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListPolicyAttachmentsResponse

-- | Lists all attributes that are associated with an object.
[$sel:listObjectAttributes:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectAttributesResponse

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
[$sel:listObjectParentPaths:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectParentPathsResponse

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
[$sel:lookupPolicy:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchLookupPolicyResponse

-- | Lists indices attached to an object.
[$sel:listAttachedIndices:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListAttachedIndicesResponse

-- | Returns a paginated list of child objects that are associated with a
--   given object.
[$sel:listObjectChildren:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectChildrenResponse

-- | Lists objects attached to the specified index.
[$sel:listIndex:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListIndexResponse

-- | Returns policies attached to an object in pagination fashion.
[$sel:listObjectPolicies:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListObjectPoliciesResponse

-- | The list of attributes to retrieve from the typed link.
[$sel:getLinkAttributes:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchGetLinkAttributesResponse

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
[$sel:listOutgoingTypedLinks:BatchReadSuccessfulResponse'] :: BatchReadSuccessfulResponse -> Maybe BatchListOutgoingTypedLinksResponse

-- | Create a value of <a>BatchReadSuccessfulResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:getObjectInformation:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getObjectInformation</a> - Retrieves
--   metadata about an object.
--   
--   <a>$sel:getObjectAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getObjectAttributes</a> - Retrieves
--   attributes within a facet that are associated with an object.
--   
--   <a>$sel:listIncomingTypedLinks:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listIncomingTypedLinks</a> - Returns a
--   paginated list of all the incoming TypedLinkSpecifier information for
--   an object. It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
--   
--   <a>$sel:listObjectParents:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectParents</a> - The list of
--   parent objects to retrieve.
--   
--   <a>$sel:listPolicyAttachments:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listPolicyAttachments</a> - Returns all
--   of the <tt>ObjectIdentifiers</tt> to which a given policy is attached.
--   
--   <a>$sel:listObjectAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectAttributes</a> - Lists all
--   attributes that are associated with an object.
--   
--   <a>$sel:listObjectParentPaths:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectParentPaths</a> - Retrieves
--   all available parent paths for any object type such as node, leaf
--   node, policy node, and index node objects. For more information about
--   objects, see <a>Directory Structure</a>.
--   
--   <a>$sel:lookupPolicy:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_lookupPolicy</a> - Lists all policies
--   from the root of the Directory to the object specified. If there are
--   no policies present, an empty list is returned. If policies are
--   present, and if some objects don't have the policies attached, it
--   returns the <tt>ObjectIdentifier</tt> for such objects. If policies
--   are present, it returns <tt>ObjectIdentifier</tt>, <tt>policyId</tt>,
--   and <tt>policyType</tt>. Paths that don't lead to the root from the
--   target object are ignored. For more information, see <a>Policies</a>.
--   
--   <a>$sel:listAttachedIndices:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listAttachedIndices</a> - Lists indices
--   attached to an object.
--   
--   <a>$sel:listObjectChildren:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectChildren</a> - Returns a
--   paginated list of child objects that are associated with a given
--   object.
--   
--   <a>$sel:listIndex:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listIndex</a> - Lists objects attached
--   to the specified index.
--   
--   <a>$sel:listObjectPolicies:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectPolicies</a> - Returns
--   policies attached to an object in pagination fashion.
--   
--   <a>$sel:getLinkAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getLinkAttributes</a> - The list of
--   attributes to retrieve from the typed link.
--   
--   <a>$sel:listOutgoingTypedLinks:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listOutgoingTypedLinks</a> - Returns a
--   paginated list of all the outgoing TypedLinkSpecifier information for
--   an object. It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
newBatchReadSuccessfulResponse :: BatchReadSuccessfulResponse

-- | Retrieves metadata about an object.
batchReadSuccessfulResponse_getObjectInformation :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetObjectInformationResponse)

-- | Retrieves attributes within a facet that are associated with an
--   object.
batchReadSuccessfulResponse_getObjectAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetObjectAttributesResponse)

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadSuccessfulResponse_listIncomingTypedLinks :: Lens' BatchReadSuccessfulResponse (Maybe BatchListIncomingTypedLinksResponse)

-- | The list of parent objects to retrieve.
batchReadSuccessfulResponse_listObjectParents :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectParentsResponse)

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
batchReadSuccessfulResponse_listPolicyAttachments :: Lens' BatchReadSuccessfulResponse (Maybe BatchListPolicyAttachmentsResponse)

-- | Lists all attributes that are associated with an object.
batchReadSuccessfulResponse_listObjectAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectAttributesResponse)

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
batchReadSuccessfulResponse_listObjectParentPaths :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectParentPathsResponse)

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
batchReadSuccessfulResponse_lookupPolicy :: Lens' BatchReadSuccessfulResponse (Maybe BatchLookupPolicyResponse)

-- | Lists indices attached to an object.
batchReadSuccessfulResponse_listAttachedIndices :: Lens' BatchReadSuccessfulResponse (Maybe BatchListAttachedIndicesResponse)

-- | Returns a paginated list of child objects that are associated with a
--   given object.
batchReadSuccessfulResponse_listObjectChildren :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectChildrenResponse)

-- | Lists objects attached to the specified index.
batchReadSuccessfulResponse_listIndex :: Lens' BatchReadSuccessfulResponse (Maybe BatchListIndexResponse)

-- | Returns policies attached to an object in pagination fashion.
batchReadSuccessfulResponse_listObjectPolicies :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectPoliciesResponse)

-- | The list of attributes to retrieve from the typed link.
batchReadSuccessfulResponse_getLinkAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetLinkAttributesResponse)

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadSuccessfulResponse_listOutgoingTypedLinks :: Lens' BatchReadSuccessfulResponse (Maybe BatchListOutgoingTypedLinksResponse)

-- | A batch operation to remove a facet from an object.
--   
--   <i>See:</i> <a>newBatchRemoveFacetFromObject</a> smart constructor.
data BatchRemoveFacetFromObject
BatchRemoveFacetFromObject' :: SchemaFacet -> ObjectReference -> BatchRemoveFacetFromObject

-- | The facet to remove from the object.
[$sel:schemaFacet:BatchRemoveFacetFromObject'] :: BatchRemoveFacetFromObject -> SchemaFacet

-- | A reference to the object whose facet will be removed.
[$sel:objectReference:BatchRemoveFacetFromObject'] :: BatchRemoveFacetFromObject -> ObjectReference

-- | Create a value of <a>BatchRemoveFacetFromObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacet:BatchRemoveFacetFromObject'</a>,
--   <a>batchRemoveFacetFromObject_schemaFacet</a> - The facet to remove
--   from the object.
--   
--   <a>$sel:objectReference:BatchRemoveFacetFromObject'</a>,
--   <a>batchRemoveFacetFromObject_objectReference</a> - A reference to the
--   object whose facet will be removed.
newBatchRemoveFacetFromObject :: SchemaFacet -> ObjectReference -> BatchRemoveFacetFromObject

-- | The facet to remove from the object.
batchRemoveFacetFromObject_schemaFacet :: Lens' BatchRemoveFacetFromObject SchemaFacet

-- | A reference to the object whose facet will be removed.
batchRemoveFacetFromObject_objectReference :: Lens' BatchRemoveFacetFromObject ObjectReference

-- | An empty result that represents success.
--   
--   <i>See:</i> <a>newBatchRemoveFacetFromObjectResponse</a> smart
--   constructor.
data BatchRemoveFacetFromObjectResponse
BatchRemoveFacetFromObjectResponse' :: BatchRemoveFacetFromObjectResponse

-- | Create a value of <a>BatchRemoveFacetFromObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchRemoveFacetFromObjectResponse :: BatchRemoveFacetFromObjectResponse

-- | Updates a given typed link’s attributes inside a BatchRead operation.
--   Attributes to be updated must not contribute to the typed link’s
--   identity, as defined by its <tt>IdentityAttributeOrder</tt>. For more
--   information, see UpdateLinkAttributes and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchUpdateLinkAttributes</a> smart constructor.
data BatchUpdateLinkAttributes
BatchUpdateLinkAttributes' :: TypedLinkSpecifier -> [LinkAttributeUpdate] -> BatchUpdateLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
[$sel:typedLinkSpecifier:BatchUpdateLinkAttributes'] :: BatchUpdateLinkAttributes -> TypedLinkSpecifier

-- | The attributes update structure.
[$sel:attributeUpdates:BatchUpdateLinkAttributes'] :: BatchUpdateLinkAttributes -> [LinkAttributeUpdate]

-- | Create a value of <a>BatchUpdateLinkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchUpdateLinkAttributes'</a>,
--   <a>batchUpdateLinkAttributes_typedLinkSpecifier</a> - Allows a typed
--   link specifier to be accepted as input.
--   
--   <a>$sel:attributeUpdates:BatchUpdateLinkAttributes'</a>,
--   <a>batchUpdateLinkAttributes_attributeUpdates</a> - The attributes
--   update structure.
newBatchUpdateLinkAttributes :: TypedLinkSpecifier -> BatchUpdateLinkAttributes

-- | Allows a typed link specifier to be accepted as input.
batchUpdateLinkAttributes_typedLinkSpecifier :: Lens' BatchUpdateLinkAttributes TypedLinkSpecifier

-- | The attributes update structure.
batchUpdateLinkAttributes_attributeUpdates :: Lens' BatchUpdateLinkAttributes [LinkAttributeUpdate]

-- | Represents the output of a UpdateLinkAttributes response operation.
--   
--   <i>See:</i> <a>newBatchUpdateLinkAttributesResponse</a> smart
--   constructor.
data BatchUpdateLinkAttributesResponse
BatchUpdateLinkAttributesResponse' :: BatchUpdateLinkAttributesResponse

-- | Create a value of <a>BatchUpdateLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchUpdateLinkAttributesResponse :: BatchUpdateLinkAttributesResponse

-- | Represents the output of a <tt>BatchUpdate</tt> operation.
--   
--   <i>See:</i> <a>newBatchUpdateObjectAttributes</a> smart constructor.
data BatchUpdateObjectAttributes
BatchUpdateObjectAttributes' :: ObjectReference -> [ObjectAttributeUpdate] -> BatchUpdateObjectAttributes

-- | Reference that identifies the object.
[$sel:objectReference:BatchUpdateObjectAttributes'] :: BatchUpdateObjectAttributes -> ObjectReference

-- | Attributes update structure.
[$sel:attributeUpdates:BatchUpdateObjectAttributes'] :: BatchUpdateObjectAttributes -> [ObjectAttributeUpdate]

-- | Create a value of <a>BatchUpdateObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchUpdateObjectAttributes'</a>,
--   <a>batchUpdateObjectAttributes_objectReference</a> - Reference that
--   identifies the object.
--   
--   <a>$sel:attributeUpdates:BatchUpdateObjectAttributes'</a>,
--   <a>batchUpdateObjectAttributes_attributeUpdates</a> - Attributes
--   update structure.
newBatchUpdateObjectAttributes :: ObjectReference -> BatchUpdateObjectAttributes

-- | Reference that identifies the object.
batchUpdateObjectAttributes_objectReference :: Lens' BatchUpdateObjectAttributes ObjectReference

-- | Attributes update structure.
batchUpdateObjectAttributes_attributeUpdates :: Lens' BatchUpdateObjectAttributes [ObjectAttributeUpdate]

-- | Represents the output of a <tt>BatchUpdate</tt> response operation.
--   
--   <i>See:</i> <a>newBatchUpdateObjectAttributesResponse</a> smart
--   constructor.
data BatchUpdateObjectAttributesResponse
BatchUpdateObjectAttributesResponse' :: Maybe Text -> BatchUpdateObjectAttributesResponse

-- | ID that is associated with the object.
[$sel:objectIdentifier:BatchUpdateObjectAttributesResponse'] :: BatchUpdateObjectAttributesResponse -> Maybe Text

-- | Create a value of <a>BatchUpdateObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchUpdateObjectAttributesResponse'</a>,
--   <a>batchUpdateObjectAttributesResponse_objectIdentifier</a> - ID that
--   is associated with the object.
newBatchUpdateObjectAttributesResponse :: BatchUpdateObjectAttributesResponse

-- | ID that is associated with the object.
batchUpdateObjectAttributesResponse_objectIdentifier :: Lens' BatchUpdateObjectAttributesResponse (Maybe Text)

-- | Represents the output of a <tt>BatchWrite</tt> operation.
--   
--   <i>See:</i> <a>newBatchWriteOperation</a> smart constructor.
data BatchWriteOperation
BatchWriteOperation' :: Maybe BatchAttachTypedLink -> Maybe BatchDeleteObject -> Maybe BatchCreateObject -> Maybe BatchUpdateLinkAttributes -> Maybe BatchDetachTypedLink -> Maybe BatchCreateIndex -> Maybe BatchDetachFromIndex -> Maybe BatchDetachPolicy -> Maybe BatchAttachObject -> Maybe BatchAttachToIndex -> Maybe BatchAttachPolicy -> Maybe BatchUpdateObjectAttributes -> Maybe BatchRemoveFacetFromObject -> Maybe BatchDetachObject -> Maybe BatchAddFacetToObject -> BatchWriteOperation

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:attachTypedLink:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachTypedLink

-- | Deletes an object in a Directory.
[$sel:deleteObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDeleteObject

-- | Creates an object.
[$sel:createObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchCreateObject

-- | Updates a given object's attributes.
[$sel:updateLinkAttributes:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchUpdateLinkAttributes

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:detachTypedLink:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachTypedLink

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
[$sel:createIndex:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchCreateIndex

-- | Detaches the specified object from the specified index.
[$sel:detachFromIndex:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachFromIndex

-- | Detaches a policy from a Directory.
[$sel:detachPolicy:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachPolicy

-- | Attaches an object to a Directory.
[$sel:attachObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachObject

-- | Attaches the specified object to the specified index.
[$sel:attachToIndex:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachToIndex

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
[$sel:attachPolicy:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAttachPolicy

-- | Updates a given object's attributes.
[$sel:updateObjectAttributes:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchUpdateObjectAttributes

-- | A batch operation that removes a facet from an object.
[$sel:removeFacetFromObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchRemoveFacetFromObject

-- | Detaches an object from a Directory.
[$sel:detachObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchDetachObject

-- | A batch operation that adds a facet to an object.
[$sel:addFacetToObject:BatchWriteOperation'] :: BatchWriteOperation -> Maybe BatchAddFacetToObject

-- | Create a value of <a>BatchWriteOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachTypedLink:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachTypedLink</a> - Attaches a typed link to
--   a specified source and target object. For more information, see
--   <a>Typed Links</a>.
--   
--   <a>$sel:deleteObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_deleteObject</a> - Deletes an object in a
--   Directory.
--   
--   <a>$sel:createObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_createObject</a> - Creates an object.
--   
--   <a>$sel:updateLinkAttributes:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_updateLinkAttributes</a> - Updates a given
--   object's attributes.
--   
--   <a>$sel:detachTypedLink:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachTypedLink</a> - Detaches a typed link
--   from a specified source and target object. For more information, see
--   <a>Typed Links</a>.
--   
--   <a>$sel:createIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_createIndex</a> - Creates an index object. See
--   <a>Indexing and search</a> for more information.
--   
--   <a>$sel:detachFromIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachFromIndex</a> - Detaches the specified
--   object from the specified index.
--   
--   <a>$sel:detachPolicy:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachPolicy</a> - Detaches a policy from a
--   Directory.
--   
--   <a>$sel:attachObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachObject</a> - Attaches an object to a
--   Directory.
--   
--   <a>$sel:attachToIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachToIndex</a> - Attaches the specified
--   object to the specified index.
--   
--   <a>$sel:attachPolicy:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachPolicy</a> - Attaches a policy object to
--   a regular object. An object can have a limited number of attached
--   policies.
--   
--   <a>$sel:updateObjectAttributes:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_updateObjectAttributes</a> - Updates a given
--   object's attributes.
--   
--   <a>$sel:removeFacetFromObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_removeFacetFromObject</a> - A batch operation
--   that removes a facet from an object.
--   
--   <a>$sel:detachObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachObject</a> - Detaches an object from a
--   Directory.
--   
--   <a>$sel:addFacetToObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_addFacetToObject</a> - A batch operation that
--   adds a facet to an object.
newBatchWriteOperation :: BatchWriteOperation

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperation_attachTypedLink :: Lens' BatchWriteOperation (Maybe BatchAttachTypedLink)

-- | Deletes an object in a Directory.
batchWriteOperation_deleteObject :: Lens' BatchWriteOperation (Maybe BatchDeleteObject)

-- | Creates an object.
batchWriteOperation_createObject :: Lens' BatchWriteOperation (Maybe BatchCreateObject)

-- | Updates a given object's attributes.
batchWriteOperation_updateLinkAttributes :: Lens' BatchWriteOperation (Maybe BatchUpdateLinkAttributes)

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperation_detachTypedLink :: Lens' BatchWriteOperation (Maybe BatchDetachTypedLink)

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
batchWriteOperation_createIndex :: Lens' BatchWriteOperation (Maybe BatchCreateIndex)

-- | Detaches the specified object from the specified index.
batchWriteOperation_detachFromIndex :: Lens' BatchWriteOperation (Maybe BatchDetachFromIndex)

-- | Detaches a policy from a Directory.
batchWriteOperation_detachPolicy :: Lens' BatchWriteOperation (Maybe BatchDetachPolicy)

-- | Attaches an object to a Directory.
batchWriteOperation_attachObject :: Lens' BatchWriteOperation (Maybe BatchAttachObject)

-- | Attaches the specified object to the specified index.
batchWriteOperation_attachToIndex :: Lens' BatchWriteOperation (Maybe BatchAttachToIndex)

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
batchWriteOperation_attachPolicy :: Lens' BatchWriteOperation (Maybe BatchAttachPolicy)

-- | Updates a given object's attributes.
batchWriteOperation_updateObjectAttributes :: Lens' BatchWriteOperation (Maybe BatchUpdateObjectAttributes)

-- | A batch operation that removes a facet from an object.
batchWriteOperation_removeFacetFromObject :: Lens' BatchWriteOperation (Maybe BatchRemoveFacetFromObject)

-- | Detaches an object from a Directory.
batchWriteOperation_detachObject :: Lens' BatchWriteOperation (Maybe BatchDetachObject)

-- | A batch operation that adds a facet to an object.
batchWriteOperation_addFacetToObject :: Lens' BatchWriteOperation (Maybe BatchAddFacetToObject)

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
--   
--   <i>See:</i> <a>newBatchWriteOperationResponse</a> smart constructor.
data BatchWriteOperationResponse
BatchWriteOperationResponse' :: Maybe BatchAttachTypedLinkResponse -> Maybe BatchDeleteObjectResponse -> Maybe BatchCreateObjectResponse -> Maybe BatchUpdateLinkAttributesResponse -> Maybe BatchDetachTypedLinkResponse -> Maybe BatchCreateIndexResponse -> Maybe BatchDetachFromIndexResponse -> Maybe BatchDetachPolicyResponse -> Maybe BatchAttachObjectResponse -> Maybe BatchAttachToIndexResponse -> Maybe BatchAttachPolicyResponse -> Maybe BatchUpdateObjectAttributesResponse -> Maybe BatchRemoveFacetFromObjectResponse -> Maybe BatchDetachObjectResponse -> Maybe BatchAddFacetToObjectResponse -> BatchWriteOperationResponse

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:attachTypedLink:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachTypedLinkResponse

-- | Deletes an object in a Directory.
[$sel:deleteObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDeleteObjectResponse

-- | Creates an object in a Directory.
[$sel:createObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchCreateObjectResponse

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
[$sel:updateLinkAttributes:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchUpdateLinkAttributesResponse

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
[$sel:detachTypedLink:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachTypedLinkResponse

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
[$sel:createIndex:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchCreateIndexResponse

-- | Detaches the specified object from the specified index.
[$sel:detachFromIndex:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachFromIndexResponse

-- | Detaches a policy from a Directory.
[$sel:detachPolicy:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachPolicyResponse

-- | Attaches an object to a Directory.
[$sel:attachObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachObjectResponse

-- | Attaches the specified object to the specified index.
[$sel:attachToIndex:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachToIndexResponse

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
[$sel:attachPolicy:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAttachPolicyResponse

-- | Updates a given object’s attributes.
[$sel:updateObjectAttributes:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchUpdateObjectAttributesResponse

-- | The result of a batch remove facet from object operation.
[$sel:removeFacetFromObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchRemoveFacetFromObjectResponse

-- | Detaches an object from a Directory.
[$sel:detachObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchDetachObjectResponse

-- | The result of an add facet to object batch operation.
[$sel:addFacetToObject:BatchWriteOperationResponse'] :: BatchWriteOperationResponse -> Maybe BatchAddFacetToObjectResponse

-- | Create a value of <a>BatchWriteOperationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachTypedLink:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachTypedLink</a> - Attaches a typed
--   link to a specified source and target object. For more information,
--   see <a>Typed Links</a>.
--   
--   <a>$sel:deleteObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_deleteObject</a> - Deletes an object in
--   a Directory.
--   
--   <a>$sel:createObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_createObject</a> - Creates an object in
--   a Directory.
--   
--   <a>$sel:updateLinkAttributes:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_updateLinkAttributes</a> - Represents
--   the output of a <tt>BatchWrite</tt> response operation.
--   
--   <a>$sel:detachTypedLink:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachTypedLink</a> - Detaches a typed
--   link from a specified source and target object. For more information,
--   see <a>Typed Links</a>.
--   
--   <a>$sel:createIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_createIndex</a> - Creates an index
--   object. See <a>Indexing and search</a> for more information.
--   
--   <a>$sel:detachFromIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachFromIndex</a> - Detaches the
--   specified object from the specified index.
--   
--   <a>$sel:detachPolicy:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachPolicy</a> - Detaches a policy
--   from a Directory.
--   
--   <a>$sel:attachObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachObject</a> - Attaches an object
--   to a Directory.
--   
--   <a>$sel:attachToIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachToIndex</a> - Attaches the
--   specified object to the specified index.
--   
--   <a>$sel:attachPolicy:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachPolicy</a> - Attaches a policy
--   object to a regular object. An object can have a limited number of
--   attached policies.
--   
--   <a>$sel:updateObjectAttributes:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_updateObjectAttributes</a> - Updates a
--   given object’s attributes.
--   
--   <a>$sel:removeFacetFromObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_removeFacetFromObject</a> - The result
--   of a batch remove facet from object operation.
--   
--   <a>$sel:detachObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachObject</a> - Detaches an object
--   from a Directory.
--   
--   <a>$sel:addFacetToObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_addFacetToObject</a> - The result of an
--   add facet to object batch operation.
newBatchWriteOperationResponse :: BatchWriteOperationResponse

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperationResponse_attachTypedLink :: Lens' BatchWriteOperationResponse (Maybe BatchAttachTypedLinkResponse)

-- | Deletes an object in a Directory.
batchWriteOperationResponse_deleteObject :: Lens' BatchWriteOperationResponse (Maybe BatchDeleteObjectResponse)

-- | Creates an object in a Directory.
batchWriteOperationResponse_createObject :: Lens' BatchWriteOperationResponse (Maybe BatchCreateObjectResponse)

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
batchWriteOperationResponse_updateLinkAttributes :: Lens' BatchWriteOperationResponse (Maybe BatchUpdateLinkAttributesResponse)

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperationResponse_detachTypedLink :: Lens' BatchWriteOperationResponse (Maybe BatchDetachTypedLinkResponse)

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
batchWriteOperationResponse_createIndex :: Lens' BatchWriteOperationResponse (Maybe BatchCreateIndexResponse)

-- | Detaches the specified object from the specified index.
batchWriteOperationResponse_detachFromIndex :: Lens' BatchWriteOperationResponse (Maybe BatchDetachFromIndexResponse)

-- | Detaches a policy from a Directory.
batchWriteOperationResponse_detachPolicy :: Lens' BatchWriteOperationResponse (Maybe BatchDetachPolicyResponse)

-- | Attaches an object to a Directory.
batchWriteOperationResponse_attachObject :: Lens' BatchWriteOperationResponse (Maybe BatchAttachObjectResponse)

-- | Attaches the specified object to the specified index.
batchWriteOperationResponse_attachToIndex :: Lens' BatchWriteOperationResponse (Maybe BatchAttachToIndexResponse)

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
batchWriteOperationResponse_attachPolicy :: Lens' BatchWriteOperationResponse (Maybe BatchAttachPolicyResponse)

-- | Updates a given object’s attributes.
batchWriteOperationResponse_updateObjectAttributes :: Lens' BatchWriteOperationResponse (Maybe BatchUpdateObjectAttributesResponse)

-- | The result of a batch remove facet from object operation.
batchWriteOperationResponse_removeFacetFromObject :: Lens' BatchWriteOperationResponse (Maybe BatchRemoveFacetFromObjectResponse)

-- | Detaches an object from a Directory.
batchWriteOperationResponse_detachObject :: Lens' BatchWriteOperationResponse (Maybe BatchDetachObjectResponse)

-- | The result of an add facet to object batch operation.
batchWriteOperationResponse_addFacetToObject :: Lens' BatchWriteOperationResponse (Maybe BatchAddFacetToObjectResponse)

-- | Directory structure that includes the directory name and directory
--   ARN.
--   
--   <i>See:</i> <a>newDirectory</a> smart constructor.
data Directory
Directory' :: Maybe Text -> Maybe Text -> Maybe DirectoryState -> Maybe POSIX -> Directory

-- | The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
[$sel:directoryArn:Directory'] :: Directory -> Maybe Text

-- | The name of the directory.
[$sel:name:Directory'] :: Directory -> Maybe Text

-- | The state of the directory. Can be either <tt>Enabled</tt>,
--   <tt>Disabled</tt>, or <tt>Deleted</tt>.
[$sel:state:Directory'] :: Directory -> Maybe DirectoryState

-- | The date and time when the directory was created.
[$sel:creationDateTime:Directory'] :: Directory -> Maybe POSIX

-- | Create a value of <a>Directory</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:Directory'</a>, <a>directory_directoryArn</a> -
--   The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
--   
--   <a>$sel:name:Directory'</a>, <a>directory_name</a> - The name of the
--   directory.
--   
--   <a>$sel:state:Directory'</a>, <a>directory_state</a> - The state of
--   the directory. Can be either <tt>Enabled</tt>, <tt>Disabled</tt>, or
--   <tt>Deleted</tt>.
--   
--   <a>$sel:creationDateTime:Directory'</a>,
--   <a>directory_creationDateTime</a> - The date and time when the
--   directory was created.
newDirectory :: Directory

-- | The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
directory_directoryArn :: Lens' Directory (Maybe Text)

-- | The name of the directory.
directory_name :: Lens' Directory (Maybe Text)

-- | The state of the directory. Can be either <tt>Enabled</tt>,
--   <tt>Disabled</tt>, or <tt>Deleted</tt>.
directory_state :: Lens' Directory (Maybe DirectoryState)

-- | The date and time when the directory was created.
directory_creationDateTime :: Lens' Directory (Maybe UTCTime)

-- | A structure that contains <tt>Name</tt>, <tt>ARN</tt>,
--   <tt>Attributes</tt>, <tt> Rules</tt>, and <tt>ObjectTypes</tt>. See
--   <a>Facets</a> for more information.
--   
--   <i>See:</i> <a>newFacet</a> smart constructor.
data Facet
Facet' :: Maybe FacetStyle -> Maybe Text -> Maybe ObjectType -> Facet

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
[$sel:facetStyle:Facet'] :: Facet -> Maybe FacetStyle

-- | The name of the Facet.
[$sel:name:Facet'] :: Facet -> Maybe Text

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
[$sel:objectType:Facet'] :: Facet -> Maybe ObjectType

-- | Create a value of <a>Facet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:facetStyle:Facet'</a>, <a>facet_facetStyle</a> - There are two
--   different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
--   
--   <a>$sel:name:Facet'</a>, <a>facet_name</a> - The name of the Facet.
--   
--   <a>$sel:objectType:Facet'</a>, <a>facet_objectType</a> - The object
--   type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
newFacet :: Facet

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
facet_facetStyle :: Lens' Facet (Maybe FacetStyle)

-- | The name of the Facet.
facet_name :: Lens' Facet (Maybe Text)

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
facet_objectType :: Lens' Facet (Maybe ObjectType)

-- | An attribute that is associated with the Facet.
--   
--   <i>See:</i> <a>newFacetAttribute</a> smart constructor.
data FacetAttribute
FacetAttribute' :: Maybe FacetAttributeReference -> Maybe RequiredAttributeBehavior -> Maybe FacetAttributeDefinition -> Text -> FacetAttribute

-- | An attribute reference that is associated with the attribute. See
--   <a>Attribute References</a> for more information.
[$sel:attributeReference:FacetAttribute'] :: FacetAttribute -> Maybe FacetAttributeReference

-- | The required behavior of the <tt>FacetAttribute</tt>.
[$sel:requiredBehavior:FacetAttribute'] :: FacetAttribute -> Maybe RequiredAttributeBehavior

-- | A facet attribute consists of either a definition or a reference. This
--   structure contains the attribute definition. See <a>Attribute
--   References</a> for more information.
[$sel:attributeDefinition:FacetAttribute'] :: FacetAttribute -> Maybe FacetAttributeDefinition

-- | The name of the facet attribute.
[$sel:name:FacetAttribute'] :: FacetAttribute -> Text

-- | Create a value of <a>FacetAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeReference:FacetAttribute'</a>,
--   <a>facetAttribute_attributeReference</a> - An attribute reference that
--   is associated with the attribute. See <a>Attribute References</a> for
--   more information.
--   
--   <a>$sel:requiredBehavior:FacetAttribute'</a>,
--   <a>facetAttribute_requiredBehavior</a> - The required behavior of the
--   <tt>FacetAttribute</tt>.
--   
--   <a>$sel:attributeDefinition:FacetAttribute'</a>,
--   <a>facetAttribute_attributeDefinition</a> - A facet attribute consists
--   of either a definition or a reference. This structure contains the
--   attribute definition. See <a>Attribute References</a> for more
--   information.
--   
--   <a>$sel:name:FacetAttribute'</a>, <a>facetAttribute_name</a> - The
--   name of the facet attribute.
newFacetAttribute :: Text -> FacetAttribute

-- | An attribute reference that is associated with the attribute. See
--   <a>Attribute References</a> for more information.
facetAttribute_attributeReference :: Lens' FacetAttribute (Maybe FacetAttributeReference)

-- | The required behavior of the <tt>FacetAttribute</tt>.
facetAttribute_requiredBehavior :: Lens' FacetAttribute (Maybe RequiredAttributeBehavior)

-- | A facet attribute consists of either a definition or a reference. This
--   structure contains the attribute definition. See <a>Attribute
--   References</a> for more information.
facetAttribute_attributeDefinition :: Lens' FacetAttribute (Maybe FacetAttributeDefinition)

-- | The name of the facet attribute.
facetAttribute_name :: Lens' FacetAttribute Text

-- | A facet attribute definition. See <a>Attribute References</a> for more
--   information.
--   
--   <i>See:</i> <a>newFacetAttributeDefinition</a> smart constructor.
data FacetAttributeDefinition
FacetAttributeDefinition' :: Maybe Bool -> Maybe (HashMap Text Rule) -> Maybe TypedAttributeValue -> FacetAttributeType -> FacetAttributeDefinition

-- | Whether the attribute is mutable or not.
[$sel:isImmutable:FacetAttributeDefinition'] :: FacetAttributeDefinition -> Maybe Bool

-- | Validation rules attached to the attribute definition.
[$sel:rules:FacetAttributeDefinition'] :: FacetAttributeDefinition -> Maybe (HashMap Text Rule)

-- | The default value of the attribute (if configured).
[$sel:defaultValue:FacetAttributeDefinition'] :: FacetAttributeDefinition -> Maybe TypedAttributeValue

-- | The type of the attribute.
[$sel:type':FacetAttributeDefinition'] :: FacetAttributeDefinition -> FacetAttributeType

-- | Create a value of <a>FacetAttributeDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isImmutable:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_isImmutable</a> - Whether the attribute is
--   mutable or not.
--   
--   <a>$sel:rules:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_rules</a> - Validation rules attached to
--   the attribute definition.
--   
--   <a>$sel:defaultValue:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_defaultValue</a> - The default value of
--   the attribute (if configured).
--   
--   <a>$sel:type':FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_type</a> - The type of the attribute.
newFacetAttributeDefinition :: FacetAttributeType -> FacetAttributeDefinition

-- | Whether the attribute is mutable or not.
facetAttributeDefinition_isImmutable :: Lens' FacetAttributeDefinition (Maybe Bool)

-- | Validation rules attached to the attribute definition.
facetAttributeDefinition_rules :: Lens' FacetAttributeDefinition (Maybe (HashMap Text Rule))

-- | The default value of the attribute (if configured).
facetAttributeDefinition_defaultValue :: Lens' FacetAttributeDefinition (Maybe TypedAttributeValue)

-- | The type of the attribute.
facetAttributeDefinition_type :: Lens' FacetAttributeDefinition FacetAttributeType

-- | The facet attribute reference that specifies the attribute definition
--   that contains the attribute facet name and attribute name.
--   
--   <i>See:</i> <a>newFacetAttributeReference</a> smart constructor.
data FacetAttributeReference
FacetAttributeReference' :: Text -> Text -> FacetAttributeReference

-- | The target facet name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
[$sel:targetFacetName:FacetAttributeReference'] :: FacetAttributeReference -> Text

-- | The target attribute name that is associated with the facet reference.
--   See <a>Attribute References</a> for more information.
[$sel:targetAttributeName:FacetAttributeReference'] :: FacetAttributeReference -> Text

-- | Create a value of <a>FacetAttributeReference</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetFacetName:FacetAttributeReference'</a>,
--   <a>facetAttributeReference_targetFacetName</a> - The target facet name
--   that is associated with the facet reference. See <a>Attribute
--   References</a> for more information.
--   
--   <a>$sel:targetAttributeName:FacetAttributeReference'</a>,
--   <a>facetAttributeReference_targetAttributeName</a> - The target
--   attribute name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
newFacetAttributeReference :: Text -> Text -> FacetAttributeReference

-- | The target facet name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
facetAttributeReference_targetFacetName :: Lens' FacetAttributeReference Text

-- | The target attribute name that is associated with the facet reference.
--   See <a>Attribute References</a> for more information.
facetAttributeReference_targetAttributeName :: Lens' FacetAttributeReference Text

-- | A structure that contains information used to update an attribute.
--   
--   <i>See:</i> <a>newFacetAttributeUpdate</a> smart constructor.
data FacetAttributeUpdate
FacetAttributeUpdate' :: Maybe FacetAttribute -> Maybe UpdateActionType -> FacetAttributeUpdate

-- | The attribute to update.
[$sel:attribute:FacetAttributeUpdate'] :: FacetAttributeUpdate -> Maybe FacetAttribute

-- | The action to perform when updating the attribute.
[$sel:action:FacetAttributeUpdate'] :: FacetAttributeUpdate -> Maybe UpdateActionType

-- | Create a value of <a>FacetAttributeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:FacetAttributeUpdate'</a>,
--   <a>facetAttributeUpdate_attribute</a> - The attribute to update.
--   
--   <a>$sel:action:FacetAttributeUpdate'</a>,
--   <a>facetAttributeUpdate_action</a> - The action to perform when
--   updating the attribute.
newFacetAttributeUpdate :: FacetAttributeUpdate

-- | The attribute to update.
facetAttributeUpdate_attribute :: Lens' FacetAttributeUpdate (Maybe FacetAttribute)

-- | The action to perform when updating the attribute.
facetAttributeUpdate_action :: Lens' FacetAttributeUpdate (Maybe UpdateActionType)

-- | Represents an index and an attached object.
--   
--   <i>See:</i> <a>newIndexAttachment</a> smart constructor.
data IndexAttachment
IndexAttachment' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> IndexAttachment

-- | In response to ListIndex, the <tt>ObjectIdentifier</tt> of the object
--   attached to the index. In response to ListAttachedIndices, the
--   <tt>ObjectIdentifier</tt> of the index attached to the object. This
--   field will always contain the <tt>ObjectIdentifier</tt> of the object
--   on the opposite side of the attachment specified in the query.
[$sel:objectIdentifier:IndexAttachment'] :: IndexAttachment -> Maybe Text

-- | The indexed attribute values.
[$sel:indexedAttributes:IndexAttachment'] :: IndexAttachment -> Maybe [AttributeKeyAndValue]

-- | Create a value of <a>IndexAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:IndexAttachment'</a>,
--   <a>indexAttachment_objectIdentifier</a> - In response to ListIndex,
--   the <tt>ObjectIdentifier</tt> of the object attached to the index. In
--   response to ListAttachedIndices, the <tt>ObjectIdentifier</tt> of the
--   index attached to the object. This field will always contain the
--   <tt>ObjectIdentifier</tt> of the object on the opposite side of the
--   attachment specified in the query.
--   
--   <a>$sel:indexedAttributes:IndexAttachment'</a>,
--   <a>indexAttachment_indexedAttributes</a> - The indexed attribute
--   values.
newIndexAttachment :: IndexAttachment

-- | In response to ListIndex, the <tt>ObjectIdentifier</tt> of the object
--   attached to the index. In response to ListAttachedIndices, the
--   <tt>ObjectIdentifier</tt> of the index attached to the object. This
--   field will always contain the <tt>ObjectIdentifier</tt> of the object
--   on the opposite side of the attachment specified in the query.
indexAttachment_objectIdentifier :: Lens' IndexAttachment (Maybe Text)

-- | The indexed attribute values.
indexAttachment_indexedAttributes :: Lens' IndexAttachment (Maybe [AttributeKeyAndValue])

-- | The action to take on a typed link attribute value. Updates are only
--   supported for attributes which don’t contribute to link identity.
--   
--   <i>See:</i> <a>newLinkAttributeAction</a> smart constructor.
data LinkAttributeAction
LinkAttributeAction' :: Maybe TypedAttributeValue -> Maybe UpdateActionType -> LinkAttributeAction

-- | The value that you want to update to.
[$sel:attributeUpdateValue:LinkAttributeAction'] :: LinkAttributeAction -> Maybe TypedAttributeValue

-- | A type that can be either <tt>UPDATE_OR_CREATE</tt> or
--   <tt>DELETE</tt>.
[$sel:attributeActionType:LinkAttributeAction'] :: LinkAttributeAction -> Maybe UpdateActionType

-- | Create a value of <a>LinkAttributeAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeUpdateValue:LinkAttributeAction'</a>,
--   <a>linkAttributeAction_attributeUpdateValue</a> - The value that you
--   want to update to.
--   
--   <a>$sel:attributeActionType:LinkAttributeAction'</a>,
--   <a>linkAttributeAction_attributeActionType</a> - A type that can be
--   either <tt>UPDATE_OR_CREATE</tt> or <tt>DELETE</tt>.
newLinkAttributeAction :: LinkAttributeAction

-- | The value that you want to update to.
linkAttributeAction_attributeUpdateValue :: Lens' LinkAttributeAction (Maybe TypedAttributeValue)

-- | A type that can be either <tt>UPDATE_OR_CREATE</tt> or
--   <tt>DELETE</tt>.
linkAttributeAction_attributeActionType :: Lens' LinkAttributeAction (Maybe UpdateActionType)

-- | Structure that contains attribute update information.
--   
--   <i>See:</i> <a>newLinkAttributeUpdate</a> smart constructor.
data LinkAttributeUpdate
LinkAttributeUpdate' :: Maybe LinkAttributeAction -> Maybe AttributeKey -> LinkAttributeUpdate

-- | The action to perform as part of the attribute update.
[$sel:attributeAction:LinkAttributeUpdate'] :: LinkAttributeUpdate -> Maybe LinkAttributeAction

-- | The key of the attribute being updated.
[$sel:attributeKey:LinkAttributeUpdate'] :: LinkAttributeUpdate -> Maybe AttributeKey

-- | Create a value of <a>LinkAttributeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeAction:LinkAttributeUpdate'</a>,
--   <a>linkAttributeUpdate_attributeAction</a> - The action to perform as
--   part of the attribute update.
--   
--   <a>$sel:attributeKey:LinkAttributeUpdate'</a>,
--   <a>linkAttributeUpdate_attributeKey</a> - The key of the attribute
--   being updated.
newLinkAttributeUpdate :: LinkAttributeUpdate

-- | The action to perform as part of the attribute update.
linkAttributeUpdate_attributeAction :: Lens' LinkAttributeUpdate (Maybe LinkAttributeAction)

-- | The key of the attribute being updated.
linkAttributeUpdate_attributeKey :: Lens' LinkAttributeUpdate (Maybe AttributeKey)

-- | The action to take on the object attribute.
--   
--   <i>See:</i> <a>newObjectAttributeAction</a> smart constructor.
data ObjectAttributeAction
ObjectAttributeAction' :: Maybe UpdateActionType -> Maybe TypedAttributeValue -> ObjectAttributeAction

-- | A type that can be either <tt>Update</tt> or <tt>Delete</tt>.
[$sel:objectAttributeActionType:ObjectAttributeAction'] :: ObjectAttributeAction -> Maybe UpdateActionType

-- | The value that you want to update to.
[$sel:objectAttributeUpdateValue:ObjectAttributeAction'] :: ObjectAttributeAction -> Maybe TypedAttributeValue

-- | Create a value of <a>ObjectAttributeAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeActionType:ObjectAttributeAction'</a>,
--   <a>objectAttributeAction_objectAttributeActionType</a> - A type that
--   can be either <tt>Update</tt> or <tt>Delete</tt>.
--   
--   <a>$sel:objectAttributeUpdateValue:ObjectAttributeAction'</a>,
--   <a>objectAttributeAction_objectAttributeUpdateValue</a> - The value
--   that you want to update to.
newObjectAttributeAction :: ObjectAttributeAction

-- | A type that can be either <tt>Update</tt> or <tt>Delete</tt>.
objectAttributeAction_objectAttributeActionType :: Lens' ObjectAttributeAction (Maybe UpdateActionType)

-- | The value that you want to update to.
objectAttributeAction_objectAttributeUpdateValue :: Lens' ObjectAttributeAction (Maybe TypedAttributeValue)

-- | A range of attributes.
--   
--   <i>See:</i> <a>newObjectAttributeRange</a> smart constructor.
data ObjectAttributeRange
ObjectAttributeRange' :: Maybe TypedAttributeValueRange -> Maybe AttributeKey -> ObjectAttributeRange

-- | The range of attribute values being selected.
[$sel:range:ObjectAttributeRange'] :: ObjectAttributeRange -> Maybe TypedAttributeValueRange

-- | The key of the attribute that the attribute range covers.
[$sel:attributeKey:ObjectAttributeRange'] :: ObjectAttributeRange -> Maybe AttributeKey

-- | Create a value of <a>ObjectAttributeRange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:range:ObjectAttributeRange'</a>,
--   <a>objectAttributeRange_range</a> - The range of attribute values
--   being selected.
--   
--   <a>$sel:attributeKey:ObjectAttributeRange'</a>,
--   <a>objectAttributeRange_attributeKey</a> - The key of the attribute
--   that the attribute range covers.
newObjectAttributeRange :: ObjectAttributeRange

-- | The range of attribute values being selected.
objectAttributeRange_range :: Lens' ObjectAttributeRange (Maybe TypedAttributeValueRange)

-- | The key of the attribute that the attribute range covers.
objectAttributeRange_attributeKey :: Lens' ObjectAttributeRange (Maybe AttributeKey)

-- | Structure that contains attribute update information.
--   
--   <i>See:</i> <a>newObjectAttributeUpdate</a> smart constructor.
data ObjectAttributeUpdate
ObjectAttributeUpdate' :: Maybe ObjectAttributeAction -> Maybe AttributeKey -> ObjectAttributeUpdate

-- | The action to perform as part of the attribute update.
[$sel:objectAttributeAction:ObjectAttributeUpdate'] :: ObjectAttributeUpdate -> Maybe ObjectAttributeAction

-- | The key of the attribute being updated.
[$sel:objectAttributeKey:ObjectAttributeUpdate'] :: ObjectAttributeUpdate -> Maybe AttributeKey

-- | Create a value of <a>ObjectAttributeUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeAction:ObjectAttributeUpdate'</a>,
--   <a>objectAttributeUpdate_objectAttributeAction</a> - The action to
--   perform as part of the attribute update.
--   
--   <a>$sel:objectAttributeKey:ObjectAttributeUpdate'</a>,
--   <a>objectAttributeUpdate_objectAttributeKey</a> - The key of the
--   attribute being updated.
newObjectAttributeUpdate :: ObjectAttributeUpdate

-- | The action to perform as part of the attribute update.
objectAttributeUpdate_objectAttributeAction :: Lens' ObjectAttributeUpdate (Maybe ObjectAttributeAction)

-- | The key of the attribute being updated.
objectAttributeUpdate_objectAttributeKey :: Lens' ObjectAttributeUpdate (Maybe AttributeKey)

-- | A pair of ObjectIdentifier and LinkName.
--   
--   <i>See:</i> <a>newObjectIdentifierAndLinkNameTuple</a> smart
--   constructor.
data ObjectIdentifierAndLinkNameTuple
ObjectIdentifierAndLinkNameTuple' :: Maybe Text -> Maybe Text -> ObjectIdentifierAndLinkNameTuple

-- | The name of the link between the parent and the child object.
[$sel:linkName:ObjectIdentifierAndLinkNameTuple'] :: ObjectIdentifierAndLinkNameTuple -> Maybe Text

-- | The ID that is associated with the object.
[$sel:objectIdentifier:ObjectIdentifierAndLinkNameTuple'] :: ObjectIdentifierAndLinkNameTuple -> Maybe Text

-- | Create a value of <a>ObjectIdentifierAndLinkNameTuple</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:ObjectIdentifierAndLinkNameTuple'</a>,
--   <a>objectIdentifierAndLinkNameTuple_linkName</a> - The name of the
--   link between the parent and the child object.
--   
--   <a>$sel:objectIdentifier:ObjectIdentifierAndLinkNameTuple'</a>,
--   <a>objectIdentifierAndLinkNameTuple_objectIdentifier</a> - The ID that
--   is associated with the object.
newObjectIdentifierAndLinkNameTuple :: ObjectIdentifierAndLinkNameTuple

-- | The name of the link between the parent and the child object.
objectIdentifierAndLinkNameTuple_linkName :: Lens' ObjectIdentifierAndLinkNameTuple (Maybe Text)

-- | The ID that is associated with the object.
objectIdentifierAndLinkNameTuple_objectIdentifier :: Lens' ObjectIdentifierAndLinkNameTuple (Maybe Text)

-- | The reference that identifies an object.
--   
--   <i>See:</i> <a>newObjectReference</a> smart constructor.
data ObjectReference
ObjectReference' :: Maybe Text -> ObjectReference

-- | A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
[$sel:selector:ObjectReference'] :: ObjectReference -> Maybe Text

-- | Create a value of <a>ObjectReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selector:ObjectReference'</a>, <a>objectReference_selector</a>
--   - A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
newObjectReference :: ObjectReference

-- | A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
objectReference_selector :: Lens' ObjectReference (Maybe Text)

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that is associated
--   with the directory.
--   
--   <i>See:</i> <a>newPathToObjectIdentifiers</a> smart constructor.
data PathToObjectIdentifiers
PathToObjectIdentifiers' :: Maybe [Text] -> Maybe Text -> PathToObjectIdentifiers

-- | Lists <tt>ObjectIdentifiers</tt> starting from directory root to the
--   object in the request.
[$sel:objectIdentifiers:PathToObjectIdentifiers'] :: PathToObjectIdentifiers -> Maybe [Text]

-- | The path that is used to identify the object starting from directory
--   root.
[$sel:path:PathToObjectIdentifiers'] :: PathToObjectIdentifiers -> Maybe Text

-- | Create a value of <a>PathToObjectIdentifiers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifiers:PathToObjectIdentifiers'</a>,
--   <a>pathToObjectIdentifiers_objectIdentifiers</a> - Lists
--   <tt>ObjectIdentifiers</tt> starting from directory root to the object
--   in the request.
--   
--   <a>$sel:path:PathToObjectIdentifiers'</a>,
--   <a>pathToObjectIdentifiers_path</a> - The path that is used to
--   identify the object starting from directory root.
newPathToObjectIdentifiers :: PathToObjectIdentifiers

-- | Lists <tt>ObjectIdentifiers</tt> starting from directory root to the
--   object in the request.
pathToObjectIdentifiers_objectIdentifiers :: Lens' PathToObjectIdentifiers (Maybe [Text])

-- | The path that is used to identify the object starting from directory
--   root.
pathToObjectIdentifiers_path :: Lens' PathToObjectIdentifiers (Maybe Text)

-- | Contains the <tt>PolicyType</tt>, <tt>PolicyId</tt>, and the
--   <tt>ObjectIdentifier</tt> to which it is attached. For more
--   information, see <a>Policies</a>.
--   
--   <i>See:</i> <a>newPolicyAttachment</a> smart constructor.
data PolicyAttachment
PolicyAttachment' :: Maybe Text -> Maybe Text -> Maybe Text -> PolicyAttachment

-- | The type of policy that can be associated with
--   <tt>PolicyAttachment</tt>.
[$sel:policyType:PolicyAttachment'] :: PolicyAttachment -> Maybe Text

-- | The <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
[$sel:objectIdentifier:PolicyAttachment'] :: PolicyAttachment -> Maybe Text

-- | The ID of <tt>PolicyAttachment</tt>.
[$sel:policyId:PolicyAttachment'] :: PolicyAttachment -> Maybe Text

-- | Create a value of <a>PolicyAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyType:PolicyAttachment'</a>,
--   <a>policyAttachment_policyType</a> - The type of policy that can be
--   associated with <tt>PolicyAttachment</tt>.
--   
--   <a>$sel:objectIdentifier:PolicyAttachment'</a>,
--   <a>policyAttachment_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
--   
--   <a>$sel:policyId:PolicyAttachment'</a>,
--   <a>policyAttachment_policyId</a> - The ID of
--   <tt>PolicyAttachment</tt>.
newPolicyAttachment :: PolicyAttachment

-- | The type of policy that can be associated with
--   <tt>PolicyAttachment</tt>.
policyAttachment_policyType :: Lens' PolicyAttachment (Maybe Text)

-- | The <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
policyAttachment_objectIdentifier :: Lens' PolicyAttachment (Maybe Text)

-- | The ID of <tt>PolicyAttachment</tt>.
policyAttachment_policyId :: Lens' PolicyAttachment (Maybe Text)

-- | Used when a regular object exists in a Directory and you want to find
--   all of the policies that are associated with that object and the
--   parent to that object.
--   
--   <i>See:</i> <a>newPolicyToPath</a> smart constructor.
data PolicyToPath
PolicyToPath' :: Maybe [PolicyAttachment] -> Maybe Text -> PolicyToPath

-- | List of policy objects.
[$sel:policies:PolicyToPath'] :: PolicyToPath -> Maybe [PolicyAttachment]

-- | The path that is referenced from the root.
[$sel:path:PolicyToPath'] :: PolicyToPath -> Maybe Text

-- | Create a value of <a>PolicyToPath</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policies:PolicyToPath'</a>, <a>policyToPath_policies</a> -
--   List of policy objects.
--   
--   <a>$sel:path:PolicyToPath'</a>, <a>policyToPath_path</a> - The path
--   that is referenced from the root.
newPolicyToPath :: PolicyToPath

-- | List of policy objects.
policyToPath_policies :: Lens' PolicyToPath (Maybe [PolicyAttachment])

-- | The path that is referenced from the root.
policyToPath_path :: Lens' PolicyToPath (Maybe Text)

-- | Contains an Amazon Resource Name (ARN) and parameters that are
--   associated with the rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe RuleType -> Maybe (HashMap Text Text) -> Rule

-- | The type of attribute validation rule.
[$sel:type':Rule'] :: Rule -> Maybe RuleType

-- | The minimum and maximum parameters that are associated with the rule.
[$sel:parameters:Rule'] :: Rule -> Maybe (HashMap Text Text)

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Rule'</a>, <a>rule_type</a> - The type of attribute
--   validation rule.
--   
--   <a>$sel:parameters:Rule'</a>, <a>rule_parameters</a> - The minimum and
--   maximum parameters that are associated with the rule.
newRule :: Rule

-- | The type of attribute validation rule.
rule_type :: Lens' Rule (Maybe RuleType)

-- | The minimum and maximum parameters that are associated with the rule.
rule_parameters :: Lens' Rule (Maybe (HashMap Text Text))

-- | A facet.
--   
--   <i>See:</i> <a>newSchemaFacet</a> smart constructor.
data SchemaFacet
SchemaFacet' :: Maybe Text -> Maybe Text -> SchemaFacet

-- | The ARN of the schema that contains the facet with no minor component.
--   See arns and <a>In-Place Schema Upgrade</a> for a description of when
--   to provide minor versions. If this value is set, FacetName must also
--   be set.
[$sel:schemaArn:SchemaFacet'] :: SchemaFacet -> Maybe Text

-- | The name of the facet. If this value is set, SchemaArn must also be
--   set.
[$sel:facetName:SchemaFacet'] :: SchemaFacet -> Maybe Text

-- | Create a value of <a>SchemaFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:SchemaFacet'</a>, <a>schemaFacet_schemaArn</a> - The
--   ARN of the schema that contains the facet with no minor component. See
--   arns and <a>In-Place Schema Upgrade</a> for a description of when to
--   provide minor versions. If this value is set, FacetName must also be
--   set.
--   
--   <a>$sel:facetName:SchemaFacet'</a>, <a>schemaFacet_facetName</a> - The
--   name of the facet. If this value is set, SchemaArn must also be set.
newSchemaFacet :: SchemaFacet

-- | The ARN of the schema that contains the facet with no minor component.
--   See arns and <a>In-Place Schema Upgrade</a> for a description of when
--   to provide minor versions. If this value is set, FacetName must also
--   be set.
schemaFacet_schemaArn :: Lens' SchemaFacet (Maybe Text)

-- | The name of the facet. If this value is set, SchemaArn must also be
--   set.
schemaFacet_facetName :: Lens' SchemaFacet (Maybe Text)

-- | The tag structure that contains a tag key and value.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The key that is associated with the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The value that is associated with the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key that is associated with
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value that is
--   associated with the tag.
newTag :: Tag

-- | The key that is associated with the tag.
tag_key :: Lens' Tag (Maybe Text)

-- | The value that is associated with the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | Represents the data for a typed attribute. You can set one, and only
--   one, of the elements. Each attribute in an item is a name-value pair.
--   Attributes have a single value.
--   
--   <i>See:</i> <a>newTypedAttributeValue</a> smart constructor.
data TypedAttributeValue
TypedAttributeValue' :: Maybe Text -> Maybe Bool -> Maybe Base64 -> Maybe Text -> Maybe POSIX -> TypedAttributeValue

-- | A string data value.
[$sel:stringValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Text

-- | A Boolean data value.
[$sel:booleanValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Bool

-- | A binary data value.
[$sel:binaryValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Base64

-- | A number data value.
[$sel:numberValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe Text

-- | A date and time value.
[$sel:datetimeValue:TypedAttributeValue'] :: TypedAttributeValue -> Maybe POSIX

-- | Create a value of <a>TypedAttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_stringValue</a> - A string data value.
--   
--   <a>$sel:booleanValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_booleanValue</a> - A Boolean data value.
--   
--   <a>$sel:binaryValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_binaryValue</a> - A binary data value.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:numberValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_numberValue</a> - A number data value.
--   
--   <a>$sel:datetimeValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_datetimeValue</a> - A date and time value.
newTypedAttributeValue :: TypedAttributeValue

-- | A string data value.
typedAttributeValue_stringValue :: Lens' TypedAttributeValue (Maybe Text)

-- | A Boolean data value.
typedAttributeValue_booleanValue :: Lens' TypedAttributeValue (Maybe Bool)

-- | A binary data value.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
typedAttributeValue_binaryValue :: Lens' TypedAttributeValue (Maybe ByteString)

-- | A number data value.
typedAttributeValue_numberValue :: Lens' TypedAttributeValue (Maybe Text)

-- | A date and time value.
typedAttributeValue_datetimeValue :: Lens' TypedAttributeValue (Maybe UTCTime)

-- | A range of attribute values. For more information, see <a>Range
--   Filters</a>.
--   
--   <i>See:</i> <a>newTypedAttributeValueRange</a> smart constructor.
data TypedAttributeValueRange
TypedAttributeValueRange' :: Maybe TypedAttributeValue -> Maybe TypedAttributeValue -> RangeMode -> RangeMode -> TypedAttributeValueRange

-- | The attribute value to terminate the range at.
[$sel:endValue:TypedAttributeValueRange'] :: TypedAttributeValueRange -> Maybe TypedAttributeValue

-- | The value to start the range at.
[$sel:startValue:TypedAttributeValueRange'] :: TypedAttributeValueRange -> Maybe TypedAttributeValue

-- | The inclusive or exclusive range start.
[$sel:startMode:TypedAttributeValueRange'] :: TypedAttributeValueRange -> RangeMode

-- | The inclusive or exclusive range end.
[$sel:endMode:TypedAttributeValueRange'] :: TypedAttributeValueRange -> RangeMode

-- | Create a value of <a>TypedAttributeValueRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endValue:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_endValue</a> - The attribute value to
--   terminate the range at.
--   
--   <a>$sel:startValue:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_startValue</a> - The value to start the
--   range at.
--   
--   <a>$sel:startMode:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_startMode</a> - The inclusive or exclusive
--   range start.
--   
--   <a>$sel:endMode:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_endMode</a> - The inclusive or exclusive
--   range end.
newTypedAttributeValueRange :: RangeMode -> RangeMode -> TypedAttributeValueRange

-- | The attribute value to terminate the range at.
typedAttributeValueRange_endValue :: Lens' TypedAttributeValueRange (Maybe TypedAttributeValue)

-- | The value to start the range at.
typedAttributeValueRange_startValue :: Lens' TypedAttributeValueRange (Maybe TypedAttributeValue)

-- | The inclusive or exclusive range start.
typedAttributeValueRange_startMode :: Lens' TypedAttributeValueRange RangeMode

-- | The inclusive or exclusive range end.
typedAttributeValueRange_endMode :: Lens' TypedAttributeValueRange RangeMode

-- | A typed link attribute definition.
--   
--   <i>See:</i> <a>newTypedLinkAttributeDefinition</a> smart constructor.
data TypedLinkAttributeDefinition
TypedLinkAttributeDefinition' :: Maybe Bool -> Maybe (HashMap Text Rule) -> Maybe TypedAttributeValue -> Text -> FacetAttributeType -> RequiredAttributeBehavior -> TypedLinkAttributeDefinition

-- | Whether the attribute is mutable or not.
[$sel:isImmutable:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Maybe Bool

-- | Validation rules that are attached to the attribute definition.
[$sel:rules:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Maybe (HashMap Text Rule)

-- | The default value of the attribute (if configured).
[$sel:defaultValue:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Maybe TypedAttributeValue

-- | The unique name of the typed link attribute.
[$sel:name:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> Text

-- | The type of the attribute.
[$sel:type':TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> FacetAttributeType

-- | The required behavior of the <tt>TypedLinkAttributeDefinition</tt>.
[$sel:requiredBehavior:TypedLinkAttributeDefinition'] :: TypedLinkAttributeDefinition -> RequiredAttributeBehavior

-- | Create a value of <a>TypedLinkAttributeDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isImmutable:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_isImmutable</a> - Whether the
--   attribute is mutable or not.
--   
--   <a>$sel:rules:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_rules</a> - Validation rules that are
--   attached to the attribute definition.
--   
--   <a>$sel:defaultValue:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_defaultValue</a> - The default value
--   of the attribute (if configured).
--   
--   <a>$sel:name:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_name</a> - The unique name of the
--   typed link attribute.
--   
--   <a>$sel:type':TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_type</a> - The type of the attribute.
--   
--   <a>$sel:requiredBehavior:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_requiredBehavior</a> - The required
--   behavior of the <tt>TypedLinkAttributeDefinition</tt>.
newTypedLinkAttributeDefinition :: Text -> FacetAttributeType -> RequiredAttributeBehavior -> TypedLinkAttributeDefinition

-- | Whether the attribute is mutable or not.
typedLinkAttributeDefinition_isImmutable :: Lens' TypedLinkAttributeDefinition (Maybe Bool)

-- | Validation rules that are attached to the attribute definition.
typedLinkAttributeDefinition_rules :: Lens' TypedLinkAttributeDefinition (Maybe (HashMap Text Rule))

-- | The default value of the attribute (if configured).
typedLinkAttributeDefinition_defaultValue :: Lens' TypedLinkAttributeDefinition (Maybe TypedAttributeValue)

-- | The unique name of the typed link attribute.
typedLinkAttributeDefinition_name :: Lens' TypedLinkAttributeDefinition Text

-- | The type of the attribute.
typedLinkAttributeDefinition_type :: Lens' TypedLinkAttributeDefinition FacetAttributeType

-- | The required behavior of the <tt>TypedLinkAttributeDefinition</tt>.
typedLinkAttributeDefinition_requiredBehavior :: Lens' TypedLinkAttributeDefinition RequiredAttributeBehavior

-- | Identifies the range of attributes that are used by a specified
--   filter.
--   
--   <i>See:</i> <a>newTypedLinkAttributeRange</a> smart constructor.
data TypedLinkAttributeRange
TypedLinkAttributeRange' :: Maybe Text -> TypedAttributeValueRange -> TypedLinkAttributeRange

-- | The unique name of the typed link attribute.
[$sel:attributeName:TypedLinkAttributeRange'] :: TypedLinkAttributeRange -> Maybe Text

-- | The range of attribute values that are being selected.
[$sel:range:TypedLinkAttributeRange'] :: TypedLinkAttributeRange -> TypedAttributeValueRange

-- | Create a value of <a>TypedLinkAttributeRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:TypedLinkAttributeRange'</a>,
--   <a>typedLinkAttributeRange_attributeName</a> - The unique name of the
--   typed link attribute.
--   
--   <a>$sel:range:TypedLinkAttributeRange'</a>,
--   <a>typedLinkAttributeRange_range</a> - The range of attribute values
--   that are being selected.
newTypedLinkAttributeRange :: TypedAttributeValueRange -> TypedLinkAttributeRange

-- | The unique name of the typed link attribute.
typedLinkAttributeRange_attributeName :: Lens' TypedLinkAttributeRange (Maybe Text)

-- | The range of attribute values that are being selected.
typedLinkAttributeRange_range :: Lens' TypedLinkAttributeRange TypedAttributeValueRange

-- | Defines the typed links structure and its attributes. To create a
--   typed link facet, use the CreateTypedLinkFacet API.
--   
--   <i>See:</i> <a>newTypedLinkFacet</a> smart constructor.
data TypedLinkFacet
TypedLinkFacet' :: Text -> [TypedLinkAttributeDefinition] -> [Text] -> TypedLinkFacet

-- | The unique name of the typed link facet.
[$sel:name:TypedLinkFacet'] :: TypedLinkFacet -> Text

-- | A set of key-value pairs associated with the typed link. Typed link
--   attributes are used when you have data values that are related to the
--   link itself, and not to one of the two objects being linked. Identity
--   attributes also serve to distinguish the link from others of the same
--   type between the same objects.
[$sel:attributes:TypedLinkFacet'] :: TypedLinkFacet -> [TypedLinkAttributeDefinition]

-- | The set of attributes that distinguish links made from this facet from
--   each other, in the order of significance. Listing typed links can
--   filter on the values of these attributes. See ListOutgoingTypedLinks
--   and ListIncomingTypedLinks for details.
[$sel:identityAttributeOrder:TypedLinkFacet'] :: TypedLinkFacet -> [Text]

-- | Create a value of <a>TypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TypedLinkFacet'</a>, <a>typedLinkFacet_name</a> - The
--   unique name of the typed link facet.
--   
--   <a>$sel:attributes:TypedLinkFacet'</a>,
--   <a>typedLinkFacet_attributes</a> - A set of key-value pairs associated
--   with the typed link. Typed link attributes are used when you have data
--   values that are related to the link itself, and not to one of the two
--   objects being linked. Identity attributes also serve to distinguish
--   the link from others of the same type between the same objects.
--   
--   <a>$sel:identityAttributeOrder:TypedLinkFacet'</a>,
--   <a>typedLinkFacet_identityAttributeOrder</a> - The set of attributes
--   that distinguish links made from this facet from each other, in the
--   order of significance. Listing typed links can filter on the values of
--   these attributes. See ListOutgoingTypedLinks and
--   ListIncomingTypedLinks for details.
newTypedLinkFacet :: Text -> TypedLinkFacet

-- | The unique name of the typed link facet.
typedLinkFacet_name :: Lens' TypedLinkFacet Text

-- | A set of key-value pairs associated with the typed link. Typed link
--   attributes are used when you have data values that are related to the
--   link itself, and not to one of the two objects being linked. Identity
--   attributes also serve to distinguish the link from others of the same
--   type between the same objects.
typedLinkFacet_attributes :: Lens' TypedLinkFacet [TypedLinkAttributeDefinition]

-- | The set of attributes that distinguish links made from this facet from
--   each other, in the order of significance. Listing typed links can
--   filter on the values of these attributes. See ListOutgoingTypedLinks
--   and ListIncomingTypedLinks for details.
typedLinkFacet_identityAttributeOrder :: Lens' TypedLinkFacet [Text]

-- | A typed link facet attribute update.
--   
--   <i>See:</i> <a>newTypedLinkFacetAttributeUpdate</a> smart constructor.
data TypedLinkFacetAttributeUpdate
TypedLinkFacetAttributeUpdate' :: TypedLinkAttributeDefinition -> UpdateActionType -> TypedLinkFacetAttributeUpdate

-- | The attribute to update.
[$sel:attribute:TypedLinkFacetAttributeUpdate'] :: TypedLinkFacetAttributeUpdate -> TypedLinkAttributeDefinition

-- | The action to perform when updating the attribute.
[$sel:action:TypedLinkFacetAttributeUpdate'] :: TypedLinkFacetAttributeUpdate -> UpdateActionType

-- | Create a value of <a>TypedLinkFacetAttributeUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:TypedLinkFacetAttributeUpdate'</a>,
--   <a>typedLinkFacetAttributeUpdate_attribute</a> - The attribute to
--   update.
--   
--   <a>$sel:action:TypedLinkFacetAttributeUpdate'</a>,
--   <a>typedLinkFacetAttributeUpdate_action</a> - The action to perform
--   when updating the attribute.
newTypedLinkFacetAttributeUpdate :: TypedLinkAttributeDefinition -> UpdateActionType -> TypedLinkFacetAttributeUpdate

-- | The attribute to update.
typedLinkFacetAttributeUpdate_attribute :: Lens' TypedLinkFacetAttributeUpdate TypedLinkAttributeDefinition

-- | The action to perform when updating the attribute.
typedLinkFacetAttributeUpdate_action :: Lens' TypedLinkFacetAttributeUpdate UpdateActionType

-- | Identifies the schema Amazon Resource Name (ARN) and facet name for
--   the typed link.
--   
--   <i>See:</i> <a>newTypedLinkSchemaAndFacetName</a> smart constructor.
data TypedLinkSchemaAndFacetName
TypedLinkSchemaAndFacetName' :: Text -> Text -> TypedLinkSchemaAndFacetName

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:TypedLinkSchemaAndFacetName'] :: TypedLinkSchemaAndFacetName -> Text

-- | The unique name of the typed link facet.
[$sel:typedLinkName:TypedLinkSchemaAndFacetName'] :: TypedLinkSchemaAndFacetName -> Text

-- | Create a value of <a>TypedLinkSchemaAndFacetName</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:TypedLinkSchemaAndFacetName'</a>,
--   <a>typedLinkSchemaAndFacetName_schemaArn</a> - The Amazon Resource
--   Name (ARN) that is associated with the schema. For more information,
--   see arns.
--   
--   <a>$sel:typedLinkName:TypedLinkSchemaAndFacetName'</a>,
--   <a>typedLinkSchemaAndFacetName_typedLinkName</a> - The unique name of
--   the typed link facet.
newTypedLinkSchemaAndFacetName :: Text -> Text -> TypedLinkSchemaAndFacetName

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
typedLinkSchemaAndFacetName_schemaArn :: Lens' TypedLinkSchemaAndFacetName Text

-- | The unique name of the typed link facet.
typedLinkSchemaAndFacetName_typedLinkName :: Lens' TypedLinkSchemaAndFacetName Text

-- | Contains all the information that is used to uniquely identify a typed
--   link. The parameters discussed in this topic are used to uniquely
--   specify the typed link being operated on. The AttachTypedLink API
--   returns a typed link specifier while the DetachTypedLink API accepts
--   one as input. Similarly, the ListIncomingTypedLinks and
--   ListOutgoingTypedLinks API operations provide typed link specifiers as
--   output. You can also construct a typed link specifier from scratch.
--   
--   <i>See:</i> <a>newTypedLinkSpecifier</a> smart constructor.
data TypedLinkSpecifier
TypedLinkSpecifier' :: TypedLinkSchemaAndFacetName -> ObjectReference -> ObjectReference -> [AttributeNameAndValue] -> TypedLinkSpecifier

-- | Identifies the typed link facet that is associated with the typed
--   link.
[$sel:typedLinkFacet:TypedLinkSpecifier'] :: TypedLinkSpecifier -> TypedLinkSchemaAndFacetName

-- | Identifies the source object that the typed link will attach to.
[$sel:sourceObjectReference:TypedLinkSpecifier'] :: TypedLinkSpecifier -> ObjectReference

-- | Identifies the target object that the typed link will attach to.
[$sel:targetObjectReference:TypedLinkSpecifier'] :: TypedLinkSpecifier -> ObjectReference

-- | Identifies the attribute value to update.
[$sel:identityAttributeValues:TypedLinkSpecifier'] :: TypedLinkSpecifier -> [AttributeNameAndValue]

-- | Create a value of <a>TypedLinkSpecifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkFacet:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:sourceObjectReference:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_sourceObjectReference</a> - Identifies the
--   source object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_targetObjectReference</a> - Identifies the
--   target object that the typed link will attach to.
--   
--   <a>$sel:identityAttributeValues:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_identityAttributeValues</a> - Identifies the
--   attribute value to update.
newTypedLinkSpecifier :: TypedLinkSchemaAndFacetName -> ObjectReference -> ObjectReference -> TypedLinkSpecifier

-- | Identifies the typed link facet that is associated with the typed
--   link.
typedLinkSpecifier_typedLinkFacet :: Lens' TypedLinkSpecifier TypedLinkSchemaAndFacetName

-- | Identifies the source object that the typed link will attach to.
typedLinkSpecifier_sourceObjectReference :: Lens' TypedLinkSpecifier ObjectReference

-- | Identifies the target object that the typed link will attach to.
typedLinkSpecifier_targetObjectReference :: Lens' TypedLinkSpecifier ObjectReference

-- | Identifies the attribute value to update.
typedLinkSpecifier_identityAttributeValues :: Lens' TypedLinkSpecifier [AttributeNameAndValue]


-- | An API operation for adding tags to a resource.
module Network.AWS.CloudDirectory.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A list of tag key-value pairs.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of tag
--   key-value pairs.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tag key-value pairs.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.TagResource.TagResource
instance GHC.Show.Show Network.AWS.CloudDirectory.TagResource.TagResource
instance GHC.Read.Read Network.AWS.CloudDirectory.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.CloudDirectory.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.CloudDirectory.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.TagResource.TagResource


-- | Removes the specified facet from the specified object.
module Network.AWS.CloudDirectory.RemoveFacetFromObject

-- | <i>See:</i> <a>newRemoveFacetFromObject</a> smart constructor.
data RemoveFacetFromObject
RemoveFacetFromObject' :: Text -> SchemaFacet -> ObjectReference -> RemoveFacetFromObject

-- | The ARN of the directory in which the object resides.
[$sel:directoryArn:RemoveFacetFromObject'] :: RemoveFacetFromObject -> Text

-- | The facet to remove. See SchemaFacet for details.
[$sel:schemaFacet:RemoveFacetFromObject'] :: RemoveFacetFromObject -> SchemaFacet

-- | A reference to the object to remove the facet from.
[$sel:objectReference:RemoveFacetFromObject'] :: RemoveFacetFromObject -> ObjectReference

-- | Create a value of <a>RemoveFacetFromObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:RemoveFacetFromObject'</a>,
--   <a>removeFacetFromObject_directoryArn</a> - The ARN of the directory
--   in which the object resides.
--   
--   <a>$sel:schemaFacet:RemoveFacetFromObject'</a>,
--   <a>removeFacetFromObject_schemaFacet</a> - The facet to remove. See
--   SchemaFacet for details.
--   
--   <a>$sel:objectReference:RemoveFacetFromObject'</a>,
--   <a>removeFacetFromObject_objectReference</a> - A reference to the
--   object to remove the facet from.
newRemoveFacetFromObject :: Text -> SchemaFacet -> ObjectReference -> RemoveFacetFromObject

-- | The ARN of the directory in which the object resides.
removeFacetFromObject_directoryArn :: Lens' RemoveFacetFromObject Text

-- | The facet to remove. See SchemaFacet for details.
removeFacetFromObject_schemaFacet :: Lens' RemoveFacetFromObject SchemaFacet

-- | A reference to the object to remove the facet from.
removeFacetFromObject_objectReference :: Lens' RemoveFacetFromObject ObjectReference

-- | <i>See:</i> <a>newRemoveFacetFromObjectResponse</a> smart constructor.
data RemoveFacetFromObjectResponse
RemoveFacetFromObjectResponse' :: Int -> RemoveFacetFromObjectResponse

-- | The response's http status code.
[$sel:httpStatus:RemoveFacetFromObjectResponse'] :: RemoveFacetFromObjectResponse -> Int

-- | Create a value of <a>RemoveFacetFromObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveFacetFromObjectResponse'</a>,
--   <a>removeFacetFromObjectResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFacetFromObjectResponse :: Int -> RemoveFacetFromObjectResponse

-- | The response's http status code.
removeFacetFromObjectResponse_httpStatus :: Lens' RemoveFacetFromObjectResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance GHC.Show.Show Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance GHC.Read.Read Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance GHC.Generics.Generic Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.RemoveFacetFromObject.RemoveFacetFromObject


-- | Allows a schema to be updated using JSON upload. Only available for
--   development schemas. See <a>JSON Schema Format</a> for more
--   information.
module Network.AWS.CloudDirectory.PutSchemaFromJson

-- | <i>See:</i> <a>newPutSchemaFromJson</a> smart constructor.
data PutSchemaFromJson
PutSchemaFromJson' :: Text -> Text -> PutSchemaFromJson

-- | The ARN of the schema to update.
[$sel:schemaArn:PutSchemaFromJson'] :: PutSchemaFromJson -> Text

-- | The replacement JSON schema.
[$sel:document:PutSchemaFromJson'] :: PutSchemaFromJson -> Text

-- | Create a value of <a>PutSchemaFromJson</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:PutSchemaFromJson'</a>,
--   <a>putSchemaFromJson_schemaArn</a> - The ARN of the schema to update.
--   
--   <a>$sel:document:PutSchemaFromJson'</a>,
--   <a>putSchemaFromJson_document</a> - The replacement JSON schema.
newPutSchemaFromJson :: Text -> Text -> PutSchemaFromJson

-- | The ARN of the schema to update.
putSchemaFromJson_schemaArn :: Lens' PutSchemaFromJson Text

-- | The replacement JSON schema.
putSchemaFromJson_document :: Lens' PutSchemaFromJson Text

-- | <i>See:</i> <a>newPutSchemaFromJsonResponse</a> smart constructor.
data PutSchemaFromJsonResponse
PutSchemaFromJsonResponse' :: Maybe Text -> Int -> PutSchemaFromJsonResponse

-- | The ARN of the schema to update.
[$sel:arn:PutSchemaFromJsonResponse'] :: PutSchemaFromJsonResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutSchemaFromJsonResponse'] :: PutSchemaFromJsonResponse -> Int

-- | Create a value of <a>PutSchemaFromJsonResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutSchemaFromJsonResponse'</a>,
--   <a>putSchemaFromJsonResponse_arn</a> - The ARN of the schema to
--   update.
--   
--   <a>$sel:httpStatus:PutSchemaFromJsonResponse'</a>,
--   <a>putSchemaFromJsonResponse_httpStatus</a> - The response's http
--   status code.
newPutSchemaFromJsonResponse :: Int -> PutSchemaFromJsonResponse

-- | The ARN of the schema to update.
putSchemaFromJsonResponse_arn :: Lens' PutSchemaFromJsonResponse (Maybe Text)

-- | The response's http status code.
putSchemaFromJsonResponse_httpStatus :: Lens' PutSchemaFromJsonResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance GHC.Show.Show Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance GHC.Read.Read Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance GHC.Classes.Eq Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance GHC.Generics.Generic Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJsonResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJsonResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJsonResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJsonResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJsonResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.PutSchemaFromJson.PutSchemaFromJson


-- | Publishes a development schema with a major version and a recommended
--   minor version.
module Network.AWS.CloudDirectory.PublishSchema

-- | <i>See:</i> <a>newPublishSchema</a> smart constructor.
data PublishSchema
PublishSchema' :: Maybe Text -> Maybe Text -> Text -> Text -> PublishSchema

-- | The new name under which the schema will be published. If this is not
--   provided, the development schema is considered.
[$sel:name:PublishSchema'] :: PublishSchema -> Maybe Text

-- | The minor version under which the schema will be published. This
--   parameter is recommended. Schemas have both a major and minor version
--   associated with them.
[$sel:minorVersion:PublishSchema'] :: PublishSchema -> Maybe Text

-- | The Amazon Resource Name (ARN) that is associated with the development
--   schema. For more information, see arns.
[$sel:developmentSchemaArn:PublishSchema'] :: PublishSchema -> Text

-- | The major version under which the schema will be published. Schemas
--   have both a major and minor version associated with them.
[$sel:version:PublishSchema'] :: PublishSchema -> Text

-- | Create a value of <a>PublishSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PublishSchema'</a>, <a>publishSchema_name</a> - The new
--   name under which the schema will be published. If this is not
--   provided, the development schema is considered.
--   
--   <a>$sel:minorVersion:PublishSchema'</a>,
--   <a>publishSchema_minorVersion</a> - The minor version under which the
--   schema will be published. This parameter is recommended. Schemas have
--   both a major and minor version associated with them.
--   
--   <a>$sel:developmentSchemaArn:PublishSchema'</a>,
--   <a>publishSchema_developmentSchemaArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the development schema. For more
--   information, see arns.
--   
--   <a>$sel:version:PublishSchema'</a>, <a>publishSchema_version</a> - The
--   major version under which the schema will be published. Schemas have
--   both a major and minor version associated with them.
newPublishSchema :: Text -> Text -> PublishSchema

-- | The new name under which the schema will be published. If this is not
--   provided, the development schema is considered.
publishSchema_name :: Lens' PublishSchema (Maybe Text)

-- | The minor version under which the schema will be published. This
--   parameter is recommended. Schemas have both a major and minor version
--   associated with them.
publishSchema_minorVersion :: Lens' PublishSchema (Maybe Text)

-- | The Amazon Resource Name (ARN) that is associated with the development
--   schema. For more information, see arns.
publishSchema_developmentSchemaArn :: Lens' PublishSchema Text

-- | The major version under which the schema will be published. Schemas
--   have both a major and minor version associated with them.
publishSchema_version :: Lens' PublishSchema Text

-- | <i>See:</i> <a>newPublishSchemaResponse</a> smart constructor.
data PublishSchemaResponse
PublishSchemaResponse' :: Maybe Text -> Int -> PublishSchemaResponse

-- | The ARN that is associated with the published schema. For more
--   information, see arns.
[$sel:publishedSchemaArn:PublishSchemaResponse'] :: PublishSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PublishSchemaResponse'] :: PublishSchemaResponse -> Int

-- | Create a value of <a>PublishSchemaResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:publishedSchemaArn:PublishSchemaResponse'</a>,
--   <a>publishSchemaResponse_publishedSchemaArn</a> - The ARN that is
--   associated with the published schema. For more information, see arns.
--   
--   <a>$sel:httpStatus:PublishSchemaResponse'</a>,
--   <a>publishSchemaResponse_httpStatus</a> - The response's http status
--   code.
newPublishSchemaResponse :: Int -> PublishSchemaResponse

-- | The ARN that is associated with the published schema. For more
--   information, see arns.
publishSchemaResponse_publishedSchemaArn :: Lens' PublishSchemaResponse (Maybe Text)

-- | The response's http status code.
publishSchemaResponse_httpStatus :: Lens' PublishSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance GHC.Show.Show Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance GHC.Read.Read Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance GHC.Classes.Eq Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance GHC.Generics.Generic Network.AWS.CloudDirectory.PublishSchema.PublishSchemaResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.PublishSchema.PublishSchemaResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.PublishSchema.PublishSchemaResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.PublishSchema.PublishSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.PublishSchema.PublishSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.PublishSchema.PublishSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.PublishSchema.PublishSchema


-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.LookupPolicy

-- | <i>See:</i> <a>newLookupPolicy</a> smart constructor.
data LookupPolicy
LookupPolicy' :: Maybe Text -> Maybe Natural -> Text -> ObjectReference -> LookupPolicy

-- | The token to request the next page of results.
[$sel:nextToken:LookupPolicy'] :: LookupPolicy -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:LookupPolicy'] :: LookupPolicy -> Maybe Natural

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
[$sel:directoryArn:LookupPolicy'] :: LookupPolicy -> Text

-- | Reference that identifies the object whose policies will be looked up.
[$sel:objectReference:LookupPolicy'] :: LookupPolicy -> ObjectReference

-- | Create a value of <a>LookupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupPolicy'</a>, <a>lookupPolicy_nextToken</a> -
--   The token to request the next page of results.
--   
--   <a>$sel:maxResults:LookupPolicy'</a>, <a>lookupPolicy_maxResults</a> -
--   The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
--   
--   <a>$sel:directoryArn:LookupPolicy'</a>,
--   <a>lookupPolicy_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory. For more information, see arns.
--   
--   <a>$sel:objectReference:LookupPolicy'</a>,
--   <a>lookupPolicy_objectReference</a> - Reference that identifies the
--   object whose policies will be looked up.
newLookupPolicy :: Text -> ObjectReference -> LookupPolicy

-- | The token to request the next page of results.
lookupPolicy_nextToken :: Lens' LookupPolicy (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
lookupPolicy_maxResults :: Lens' LookupPolicy (Maybe Natural)

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
lookupPolicy_directoryArn :: Lens' LookupPolicy Text

-- | Reference that identifies the object whose policies will be looked up.
lookupPolicy_objectReference :: Lens' LookupPolicy ObjectReference

-- | <i>See:</i> <a>newLookupPolicyResponse</a> smart constructor.
data LookupPolicyResponse
LookupPolicyResponse' :: Maybe Text -> Maybe [PolicyToPath] -> Int -> LookupPolicyResponse

-- | The pagination token.
[$sel:nextToken:LookupPolicyResponse'] :: LookupPolicyResponse -> Maybe Text

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
[$sel:policyToPathList:LookupPolicyResponse'] :: LookupPolicyResponse -> Maybe [PolicyToPath]

-- | The response's http status code.
[$sel:httpStatus:LookupPolicyResponse'] :: LookupPolicyResponse -> Int

-- | Create a value of <a>LookupPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupPolicy'</a>,
--   <a>lookupPolicyResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:policyToPathList:LookupPolicyResponse'</a>,
--   <a>lookupPolicyResponse_policyToPathList</a> - Provides list of path
--   to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
--   
--   <a>$sel:httpStatus:LookupPolicyResponse'</a>,
--   <a>lookupPolicyResponse_httpStatus</a> - The response's http status
--   code.
newLookupPolicyResponse :: Int -> LookupPolicyResponse

-- | The pagination token.
lookupPolicyResponse_nextToken :: Lens' LookupPolicyResponse (Maybe Text)

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
lookupPolicyResponse_policyToPathList :: Lens' LookupPolicyResponse (Maybe [PolicyToPath])

-- | The response's http status code.
lookupPolicyResponse_httpStatus :: Lens' LookupPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance GHC.Show.Show Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance GHC.Read.Read Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance GHC.Classes.Eq Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance GHC.Generics.Generic Network.AWS.CloudDirectory.LookupPolicy.LookupPolicyResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.LookupPolicy.LookupPolicyResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.LookupPolicy.LookupPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.LookupPolicy.LookupPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.LookupPolicy.LookupPolicyResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.LookupPolicy.LookupPolicy


-- | Returns a paginated list of <tt>TypedLink</tt> facet names for a
--   particular schema. For more information, see <a>Typed Links</a>.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListTypedLinkFacetNames

-- | <i>See:</i> <a>newListTypedLinkFacetNames</a> smart constructor.
data ListTypedLinkFacetNames
ListTypedLinkFacetNames' :: Maybe Text -> Maybe Natural -> Text -> ListTypedLinkFacetNames

-- | The pagination token.
[$sel:nextToken:ListTypedLinkFacetNames'] :: ListTypedLinkFacetNames -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListTypedLinkFacetNames'] :: ListTypedLinkFacetNames -> Maybe Natural

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:ListTypedLinkFacetNames'] :: ListTypedLinkFacetNames -> Text

-- | Create a value of <a>ListTypedLinkFacetNames</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNames_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNames_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:schemaArn:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNames_schemaArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the schema. For more information, see
--   arns.
newListTypedLinkFacetNames :: Text -> ListTypedLinkFacetNames

-- | The pagination token.
listTypedLinkFacetNames_nextToken :: Lens' ListTypedLinkFacetNames (Maybe Text)

-- | The maximum number of results to retrieve.
listTypedLinkFacetNames_maxResults :: Lens' ListTypedLinkFacetNames (Maybe Natural)

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
listTypedLinkFacetNames_schemaArn :: Lens' ListTypedLinkFacetNames Text

-- | <i>See:</i> <a>newListTypedLinkFacetNamesResponse</a> smart
--   constructor.
data ListTypedLinkFacetNamesResponse
ListTypedLinkFacetNamesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListTypedLinkFacetNamesResponse

-- | The pagination token.
[$sel:nextToken:ListTypedLinkFacetNamesResponse'] :: ListTypedLinkFacetNamesResponse -> Maybe Text

-- | The names of typed link facets that exist within the schema.
[$sel:facetNames:ListTypedLinkFacetNamesResponse'] :: ListTypedLinkFacetNamesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListTypedLinkFacetNamesResponse'] :: ListTypedLinkFacetNamesResponse -> Int

-- | Create a value of <a>ListTypedLinkFacetNamesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNamesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:facetNames:ListTypedLinkFacetNamesResponse'</a>,
--   <a>listTypedLinkFacetNamesResponse_facetNames</a> - The names of typed
--   link facets that exist within the schema.
--   
--   <a>$sel:httpStatus:ListTypedLinkFacetNamesResponse'</a>,
--   <a>listTypedLinkFacetNamesResponse_httpStatus</a> - The response's
--   http status code.
newListTypedLinkFacetNamesResponse :: Int -> ListTypedLinkFacetNamesResponse

-- | The pagination token.
listTypedLinkFacetNamesResponse_nextToken :: Lens' ListTypedLinkFacetNamesResponse (Maybe Text)

-- | The names of typed link facets that exist within the schema.
listTypedLinkFacetNamesResponse_facetNames :: Lens' ListTypedLinkFacetNamesResponse (Maybe [Text])

-- | The response's http status code.
listTypedLinkFacetNamesResponse_httpStatus :: Lens' ListTypedLinkFacetNamesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance GHC.Show.Show Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance GHC.Read.Read Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNamesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNamesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNamesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNamesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNamesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListTypedLinkFacetNames.ListTypedLinkFacetNames


-- | Returns a paginated list of all attribute definitions for a particular
--   TypedLinkFacet. For more information, see <a>Typed Links</a>.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes

-- | <i>See:</i> <a>newListTypedLinkFacetAttributes</a> smart constructor.
data ListTypedLinkFacetAttributes
ListTypedLinkFacetAttributes' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListTypedLinkFacetAttributes

-- | The pagination token.
[$sel:nextToken:ListTypedLinkFacetAttributes'] :: ListTypedLinkFacetAttributes -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListTypedLinkFacetAttributes'] :: ListTypedLinkFacetAttributes -> Maybe Natural

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:ListTypedLinkFacetAttributes'] :: ListTypedLinkFacetAttributes -> Text

-- | The unique name of the typed link facet.
[$sel:name:ListTypedLinkFacetAttributes'] :: ListTypedLinkFacetAttributes -> Text

-- | Create a value of <a>ListTypedLinkFacetAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:schemaArn:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_schemaArn</a> - The Amazon Resource
--   Name (ARN) that is associated with the schema. For more information,
--   see arns.
--   
--   <a>$sel:name:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_name</a> - The unique name of the
--   typed link facet.
newListTypedLinkFacetAttributes :: Text -> Text -> ListTypedLinkFacetAttributes

-- | The pagination token.
listTypedLinkFacetAttributes_nextToken :: Lens' ListTypedLinkFacetAttributes (Maybe Text)

-- | The maximum number of results to retrieve.
listTypedLinkFacetAttributes_maxResults :: Lens' ListTypedLinkFacetAttributes (Maybe Natural)

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
listTypedLinkFacetAttributes_schemaArn :: Lens' ListTypedLinkFacetAttributes Text

-- | The unique name of the typed link facet.
listTypedLinkFacetAttributes_name :: Lens' ListTypedLinkFacetAttributes Text

-- | <i>See:</i> <a>newListTypedLinkFacetAttributesResponse</a> smart
--   constructor.
data ListTypedLinkFacetAttributesResponse
ListTypedLinkFacetAttributesResponse' :: Maybe Text -> Maybe [TypedLinkAttributeDefinition] -> Int -> ListTypedLinkFacetAttributesResponse

-- | The pagination token.
[$sel:nextToken:ListTypedLinkFacetAttributesResponse'] :: ListTypedLinkFacetAttributesResponse -> Maybe Text

-- | An ordered set of attributes associate with the typed link.
[$sel:attributes:ListTypedLinkFacetAttributesResponse'] :: ListTypedLinkFacetAttributesResponse -> Maybe [TypedLinkAttributeDefinition]

-- | The response's http status code.
[$sel:httpStatus:ListTypedLinkFacetAttributesResponse'] :: ListTypedLinkFacetAttributesResponse -> Int

-- | Create a value of <a>ListTypedLinkFacetAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attributes:ListTypedLinkFacetAttributesResponse'</a>,
--   <a>listTypedLinkFacetAttributesResponse_attributes</a> - An ordered
--   set of attributes associate with the typed link.
--   
--   <a>$sel:httpStatus:ListTypedLinkFacetAttributesResponse'</a>,
--   <a>listTypedLinkFacetAttributesResponse_httpStatus</a> - The
--   response's http status code.
newListTypedLinkFacetAttributesResponse :: Int -> ListTypedLinkFacetAttributesResponse

-- | The pagination token.
listTypedLinkFacetAttributesResponse_nextToken :: Lens' ListTypedLinkFacetAttributesResponse (Maybe Text)

-- | An ordered set of attributes associate with the typed link.
listTypedLinkFacetAttributesResponse_attributes :: Lens' ListTypedLinkFacetAttributesResponse (Maybe [TypedLinkAttributeDefinition])

-- | The response's http status code.
listTypedLinkFacetAttributesResponse_httpStatus :: Lens' ListTypedLinkFacetAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListTypedLinkFacetAttributes.ListTypedLinkFacetAttributes


-- | Returns tags for a resource. Tagging is currently supported only for
--   directories with a limit of 50 tags per directory. All 50 tags are
--   returned for a given directory with this API call.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | The pagination token. This is for future use. Currently pagination is
--   not supported for tagging.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The <tt>MaxResults</tt> parameter sets the maximum number of results
--   returned in a single page. This is for future use and is not supported
--   currently.
[$sel:maxResults:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The pagination token. This is
--   for future use. Currently pagination is not supported for tagging.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The <tt>MaxResults</tt>
--   parameter sets the maximum number of results returned in a single
--   page. This is for future use and is not supported currently.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource. Tagging is only supported for directories.
newListTagsForResource :: Text -> ListTagsForResource

-- | The pagination token. This is for future use. Currently pagination is
--   not supported for tagging.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The <tt>MaxResults</tt> parameter sets the maximum number of results
--   returned in a single page. This is for future use and is not supported
--   currently.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | A list of tag key value pairs that are associated with the response.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. This value is null when there are
--   no more results to return.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key value
--   pairs that are associated with the response.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tag key value pairs that are associated with the response.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListTagsForResource.ListTagsForResource


-- | Lists the major version families of each published schema. If a major
--   version ARN is provided as <tt>SchemaArn</tt>, the minor version
--   revisions in that family are listed instead.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListPublishedSchemaArns

-- | <i>See:</i> <a>newListPublishedSchemaArns</a> smart constructor.
data ListPublishedSchemaArns
ListPublishedSchemaArns' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListPublishedSchemaArns

-- | The pagination token.
[$sel:nextToken:ListPublishedSchemaArns'] :: ListPublishedSchemaArns -> Maybe Text

-- | The response for <tt>ListPublishedSchemaArns</tt> when this parameter
--   is used will list all minor version ARNs for a major version.
[$sel:schemaArn:ListPublishedSchemaArns'] :: ListPublishedSchemaArns -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListPublishedSchemaArns'] :: ListPublishedSchemaArns -> Maybe Natural

-- | Create a value of <a>ListPublishedSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:schemaArn:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArns_schemaArn</a> - The response for
--   <tt>ListPublishedSchemaArns</tt> when this parameter is used will list
--   all minor version ARNs for a major version.
--   
--   <a>$sel:maxResults:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
newListPublishedSchemaArns :: ListPublishedSchemaArns

-- | The pagination token.
listPublishedSchemaArns_nextToken :: Lens' ListPublishedSchemaArns (Maybe Text)

-- | The response for <tt>ListPublishedSchemaArns</tt> when this parameter
--   is used will list all minor version ARNs for a major version.
listPublishedSchemaArns_schemaArn :: Lens' ListPublishedSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listPublishedSchemaArns_maxResults :: Lens' ListPublishedSchemaArns (Maybe Natural)

-- | <i>See:</i> <a>newListPublishedSchemaArnsResponse</a> smart
--   constructor.
data ListPublishedSchemaArnsResponse
ListPublishedSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListPublishedSchemaArnsResponse

-- | The ARNs of published schemas.
[$sel:schemaArns:ListPublishedSchemaArnsResponse'] :: ListPublishedSchemaArnsResponse -> Maybe [Text]

-- | The pagination token.
[$sel:nextToken:ListPublishedSchemaArnsResponse'] :: ListPublishedSchemaArnsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPublishedSchemaArnsResponse'] :: ListPublishedSchemaArnsResponse -> Int

-- | Create a value of <a>ListPublishedSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListPublishedSchemaArnsResponse'</a>,
--   <a>listPublishedSchemaArnsResponse_schemaArns</a> - The ARNs of
--   published schemas.
--   
--   <a>$sel:nextToken:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArnsResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:httpStatus:ListPublishedSchemaArnsResponse'</a>,
--   <a>listPublishedSchemaArnsResponse_httpStatus</a> - The response's
--   http status code.
newListPublishedSchemaArnsResponse :: Int -> ListPublishedSchemaArnsResponse

-- | The ARNs of published schemas.
listPublishedSchemaArnsResponse_schemaArns :: Lens' ListPublishedSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listPublishedSchemaArnsResponse_nextToken :: Lens' ListPublishedSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listPublishedSchemaArnsResponse_httpStatus :: Lens' ListPublishedSchemaArnsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance GHC.Show.Show Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance GHC.Read.Read Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArnsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArnsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArnsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArnsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArnsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListPublishedSchemaArns.ListPublishedSchemaArns


-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListPolicyAttachments

-- | <i>See:</i> <a>newListPolicyAttachments</a> smart constructor.
data ListPolicyAttachments
ListPolicyAttachments' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListPolicyAttachments

-- | The pagination token.
[$sel:nextToken:ListPolicyAttachments'] :: ListPolicyAttachments -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:ListPolicyAttachments'] :: ListPolicyAttachments -> Maybe Natural

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
[$sel:consistencyLevel:ListPolicyAttachments'] :: ListPolicyAttachments -> Maybe ConsistencyLevel

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
[$sel:directoryArn:ListPolicyAttachments'] :: ListPolicyAttachments -> Text

-- | The reference that identifies the policy object.
[$sel:policyReference:ListPolicyAttachments'] :: ListPolicyAttachments -> ObjectReference

-- | Create a value of <a>ListPolicyAttachments</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_consistencyLevel</a> - Represents the manner
--   and timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where objects reside. For
--   more information, see arns.
--   
--   <a>$sel:policyReference:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_policyReference</a> - The reference that
--   identifies the policy object.
newListPolicyAttachments :: Text -> ObjectReference -> ListPolicyAttachments

-- | The pagination token.
listPolicyAttachments_nextToken :: Lens' ListPolicyAttachments (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listPolicyAttachments_maxResults :: Lens' ListPolicyAttachments (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listPolicyAttachments_consistencyLevel :: Lens' ListPolicyAttachments (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
listPolicyAttachments_directoryArn :: Lens' ListPolicyAttachments Text

-- | The reference that identifies the policy object.
listPolicyAttachments_policyReference :: Lens' ListPolicyAttachments ObjectReference

-- | <i>See:</i> <a>newListPolicyAttachmentsResponse</a> smart constructor.
data ListPolicyAttachmentsResponse
ListPolicyAttachmentsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListPolicyAttachmentsResponse

-- | The pagination token.
[$sel:nextToken:ListPolicyAttachmentsResponse'] :: ListPolicyAttachmentsResponse -> Maybe Text

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
[$sel:objectIdentifiers:ListPolicyAttachmentsResponse'] :: ListPolicyAttachmentsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListPolicyAttachmentsResponse'] :: ListPolicyAttachmentsResponse -> Int

-- | Create a value of <a>ListPolicyAttachmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachmentsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:objectIdentifiers:ListPolicyAttachmentsResponse'</a>,
--   <a>listPolicyAttachmentsResponse_objectIdentifiers</a> - A list of
--   <tt>ObjectIdentifiers</tt> to which the policy is attached.
--   
--   <a>$sel:httpStatus:ListPolicyAttachmentsResponse'</a>,
--   <a>listPolicyAttachmentsResponse_httpStatus</a> - The response's http
--   status code.
newListPolicyAttachmentsResponse :: Int -> ListPolicyAttachmentsResponse

-- | The pagination token.
listPolicyAttachmentsResponse_nextToken :: Lens' ListPolicyAttachmentsResponse (Maybe Text)

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
listPolicyAttachmentsResponse_objectIdentifiers :: Lens' ListPolicyAttachmentsResponse (Maybe [Text])

-- | The response's http status code.
listPolicyAttachmentsResponse_httpStatus :: Lens' ListPolicyAttachmentsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance GHC.Show.Show Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance GHC.Read.Read Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachmentsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachmentsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachmentsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachmentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachmentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListPolicyAttachments.ListPolicyAttachments


-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListOutgoingTypedLinks

-- | <i>See:</i> <a>newListOutgoingTypedLinks</a> smart constructor.
data ListOutgoingTypedLinks
ListOutgoingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe [TypedLinkAttributeRange] -> Text -> ObjectReference -> ListOutgoingTypedLinks

-- | The pagination token.
[$sel:nextToken:ListOutgoingTypedLinks'] :: ListOutgoingTypedLinks -> Maybe Text

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
[$sel:filterTypedLink:ListOutgoingTypedLinks'] :: ListOutgoingTypedLinks -> Maybe TypedLinkSchemaAndFacetName

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListOutgoingTypedLinks'] :: ListOutgoingTypedLinks -> Maybe Natural

-- | The consistency level to execute the request at.
[$sel:consistencyLevel:ListOutgoingTypedLinks'] :: ListOutgoingTypedLinks -> Maybe ConsistencyLevel

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
[$sel:filterAttributeRanges:ListOutgoingTypedLinks'] :: ListOutgoingTypedLinks -> Maybe [TypedLinkAttributeRange]

-- | The Amazon Resource Name (ARN) of the directory where you want to list
--   the typed links.
[$sel:directoryArn:ListOutgoingTypedLinks'] :: ListOutgoingTypedLinks -> Text

-- | A reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:ListOutgoingTypedLinks'] :: ListOutgoingTypedLinks -> ObjectReference

-- | Create a value of <a>ListOutgoingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes defined on the typed link
--   facet, not the order they are supplied to any API calls.
--   
--   <a>$sel:maxResults:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:consistencyLevel:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_consistencyLevel</a> - The consistency level
--   to execute the request at.
--   
--   <a>$sel:filterAttributeRanges:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_filterAttributeRanges</a> - Provides range
--   filters for multiple attributes. When providing ranges to typed link
--   selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:directoryArn:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_directoryArn</a> - The Amazon Resource Name
--   (ARN) of the directory where you want to list the typed links.
--   
--   <a>$sel:objectReference:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_objectReference</a> - A reference that
--   identifies the object whose attributes will be listed.
newListOutgoingTypedLinks :: Text -> ObjectReference -> ListOutgoingTypedLinks

-- | The pagination token.
listOutgoingTypedLinks_nextToken :: Lens' ListOutgoingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
listOutgoingTypedLinks_filterTypedLink :: Lens' ListOutgoingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
listOutgoingTypedLinks_maxResults :: Lens' ListOutgoingTypedLinks (Maybe Natural)

-- | The consistency level to execute the request at.
listOutgoingTypedLinks_consistencyLevel :: Lens' ListOutgoingTypedLinks (Maybe ConsistencyLevel)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
listOutgoingTypedLinks_filterAttributeRanges :: Lens' ListOutgoingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The Amazon Resource Name (ARN) of the directory where you want to list
--   the typed links.
listOutgoingTypedLinks_directoryArn :: Lens' ListOutgoingTypedLinks Text

-- | A reference that identifies the object whose attributes will be
--   listed.
listOutgoingTypedLinks_objectReference :: Lens' ListOutgoingTypedLinks ObjectReference

-- | <i>See:</i> <a>newListOutgoingTypedLinksResponse</a> smart
--   constructor.
data ListOutgoingTypedLinksResponse
ListOutgoingTypedLinksResponse' :: Maybe Text -> Maybe [TypedLinkSpecifier] -> Int -> ListOutgoingTypedLinksResponse

-- | The pagination token.
[$sel:nextToken:ListOutgoingTypedLinksResponse'] :: ListOutgoingTypedLinksResponse -> Maybe Text

-- | Returns a typed link specifier as output.
[$sel:typedLinkSpecifiers:ListOutgoingTypedLinksResponse'] :: ListOutgoingTypedLinksResponse -> Maybe [TypedLinkSpecifier]

-- | The response's http status code.
[$sel:httpStatus:ListOutgoingTypedLinksResponse'] :: ListOutgoingTypedLinksResponse -> Int

-- | Create a value of <a>ListOutgoingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinksResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:typedLinkSpecifiers:ListOutgoingTypedLinksResponse'</a>,
--   <a>listOutgoingTypedLinksResponse_typedLinkSpecifiers</a> - Returns a
--   typed link specifier as output.
--   
--   <a>$sel:httpStatus:ListOutgoingTypedLinksResponse'</a>,
--   <a>listOutgoingTypedLinksResponse_httpStatus</a> - The response's http
--   status code.
newListOutgoingTypedLinksResponse :: Int -> ListOutgoingTypedLinksResponse

-- | The pagination token.
listOutgoingTypedLinksResponse_nextToken :: Lens' ListOutgoingTypedLinksResponse (Maybe Text)

-- | Returns a typed link specifier as output.
listOutgoingTypedLinksResponse_typedLinkSpecifiers :: Lens' ListOutgoingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The response's http status code.
listOutgoingTypedLinksResponse_httpStatus :: Lens' ListOutgoingTypedLinksResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance GHC.Show.Show Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance GHC.Read.Read Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinksResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinksResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinksResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListOutgoingTypedLinks.ListOutgoingTypedLinks


-- | Returns policies attached to an object in pagination fashion.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListObjectPolicies

-- | <i>See:</i> <a>newListObjectPolicies</a> smart constructor.
data ListObjectPolicies
ListObjectPolicies' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListObjectPolicies

-- | The pagination token.
[$sel:nextToken:ListObjectPolicies'] :: ListObjectPolicies -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:ListObjectPolicies'] :: ListObjectPolicies -> Maybe Natural

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
[$sel:consistencyLevel:ListObjectPolicies'] :: ListObjectPolicies -> Maybe ConsistencyLevel

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
[$sel:directoryArn:ListObjectPolicies'] :: ListObjectPolicies -> Text

-- | Reference that identifies the object for which policies will be
--   listed.
[$sel:objectReference:ListObjectPolicies'] :: ListObjectPolicies -> ObjectReference

-- | Create a value of <a>ListObjectPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_maxResults</a> - The maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_consistencyLevel</a> - Represents the manner and
--   timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where objects reside. For
--   more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_objectReference</a> - Reference that identifies
--   the object for which policies will be listed.
newListObjectPolicies :: Text -> ObjectReference -> ListObjectPolicies

-- | The pagination token.
listObjectPolicies_nextToken :: Lens' ListObjectPolicies (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectPolicies_maxResults :: Lens' ListObjectPolicies (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectPolicies_consistencyLevel :: Lens' ListObjectPolicies (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
listObjectPolicies_directoryArn :: Lens' ListObjectPolicies Text

-- | Reference that identifies the object for which policies will be
--   listed.
listObjectPolicies_objectReference :: Lens' ListObjectPolicies ObjectReference

-- | <i>See:</i> <a>newListObjectPoliciesResponse</a> smart constructor.
data ListObjectPoliciesResponse
ListObjectPoliciesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListObjectPoliciesResponse

-- | The pagination token.
[$sel:nextToken:ListObjectPoliciesResponse'] :: ListObjectPoliciesResponse -> Maybe Text

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
[$sel:attachedPolicyIds:ListObjectPoliciesResponse'] :: ListObjectPoliciesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListObjectPoliciesResponse'] :: ListObjectPoliciesResponse -> Int

-- | Create a value of <a>ListObjectPoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectPolicies'</a>,
--   <a>listObjectPoliciesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:attachedPolicyIds:ListObjectPoliciesResponse'</a>,
--   <a>listObjectPoliciesResponse_attachedPolicyIds</a> - A list of policy
--   <tt>ObjectIdentifiers</tt>, that are attached to the object.
--   
--   <a>$sel:httpStatus:ListObjectPoliciesResponse'</a>,
--   <a>listObjectPoliciesResponse_httpStatus</a> - The response's http
--   status code.
newListObjectPoliciesResponse :: Int -> ListObjectPoliciesResponse

-- | The pagination token.
listObjectPoliciesResponse_nextToken :: Lens' ListObjectPoliciesResponse (Maybe Text)

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
listObjectPoliciesResponse_attachedPolicyIds :: Lens' ListObjectPoliciesResponse (Maybe [Text])

-- | The response's http status code.
listObjectPoliciesResponse_httpStatus :: Lens' ListObjectPoliciesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPoliciesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPoliciesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPoliciesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPoliciesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListObjectPolicies.ListObjectPolicies


-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
module Network.AWS.CloudDirectory.ListObjectParents

-- | <i>See:</i> <a>newListObjectParents</a> smart constructor.
data ListObjectParents
ListObjectParents' :: Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListObjectParents

-- | The pagination token.
[$sel:nextToken:ListObjectParents'] :: ListObjectParents -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:ListObjectParents'] :: ListObjectParents -> Maybe Natural

-- | When set to True, returns all ListObjectParentsResponse$ParentLinks.
--   There could be multiple links between a parent-child pair.
[$sel:includeAllLinksToEachParent:ListObjectParents'] :: ListObjectParents -> Maybe Bool

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
[$sel:consistencyLevel:ListObjectParents'] :: ListObjectParents -> Maybe ConsistencyLevel

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
[$sel:directoryArn:ListObjectParents'] :: ListObjectParents -> Text

-- | The reference that identifies the object for which parent objects are
--   being listed.
[$sel:objectReference:ListObjectParents'] :: ListObjectParents -> ObjectReference

-- | Create a value of <a>ListObjectParents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectParents'</a>,
--   <a>listObjectParents_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectParents'</a>,
--   <a>listObjectParents_maxResults</a> - The maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:includeAllLinksToEachParent:ListObjectParents'</a>,
--   <a>listObjectParents_includeAllLinksToEachParent</a> - When set to
--   True, returns all ListObjectParentsResponse$ParentLinks. There could
--   be multiple links between a parent-child pair.
--   
--   <a>$sel:consistencyLevel:ListObjectParents'</a>,
--   <a>listObjectParents_consistencyLevel</a> - Represents the manner and
--   timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListObjectParents'</a>,
--   <a>listObjectParents_directoryArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the Directory where the object resides. For
--   more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectParents'</a>,
--   <a>listObjectParents_objectReference</a> - The reference that
--   identifies the object for which parent objects are being listed.
newListObjectParents :: Text -> ObjectReference -> ListObjectParents

-- | The pagination token.
listObjectParents_nextToken :: Lens' ListObjectParents (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectParents_maxResults :: Lens' ListObjectParents (Maybe Natural)

-- | When set to True, returns all ListObjectParentsResponse$ParentLinks.
--   There could be multiple links between a parent-child pair.
listObjectParents_includeAllLinksToEachParent :: Lens' ListObjectParents (Maybe Bool)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectParents_consistencyLevel :: Lens' ListObjectParents (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
listObjectParents_directoryArn :: Lens' ListObjectParents Text

-- | The reference that identifies the object for which parent objects are
--   being listed.
listObjectParents_objectReference :: Lens' ListObjectParents ObjectReference

-- | <i>See:</i> <a>newListObjectParentsResponse</a> smart constructor.
data ListObjectParentsResponse
ListObjectParentsResponse' :: Maybe [ObjectIdentifierAndLinkNameTuple] -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> ListObjectParentsResponse

-- | Returns a list of parent reference and LinkName Tuples.
[$sel:parentLinks:ListObjectParentsResponse'] :: ListObjectParentsResponse -> Maybe [ObjectIdentifierAndLinkNameTuple]

-- | The parent structure, which is a map with key as the
--   <tt>ObjectIdentifier</tt> and LinkName as the value.
[$sel:parents:ListObjectParentsResponse'] :: ListObjectParentsResponse -> Maybe (HashMap Text Text)

-- | The pagination token.
[$sel:nextToken:ListObjectParentsResponse'] :: ListObjectParentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListObjectParentsResponse'] :: ListObjectParentsResponse -> Int

-- | Create a value of <a>ListObjectParentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentLinks:ListObjectParentsResponse'</a>,
--   <a>listObjectParentsResponse_parentLinks</a> - Returns a list of
--   parent reference and LinkName Tuples.
--   
--   <a>$sel:parents:ListObjectParentsResponse'</a>,
--   <a>listObjectParentsResponse_parents</a> - The parent structure, which
--   is a map with key as the <tt>ObjectIdentifier</tt> and LinkName as the
--   value.
--   
--   <a>$sel:nextToken:ListObjectParents'</a>,
--   <a>listObjectParentsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListObjectParentsResponse'</a>,
--   <a>listObjectParentsResponse_httpStatus</a> - The response's http
--   status code.
newListObjectParentsResponse :: Int -> ListObjectParentsResponse

-- | Returns a list of parent reference and LinkName Tuples.
listObjectParentsResponse_parentLinks :: Lens' ListObjectParentsResponse (Maybe [ObjectIdentifierAndLinkNameTuple])

-- | The parent structure, which is a map with key as the
--   <tt>ObjectIdentifier</tt> and LinkName as the value.
listObjectParentsResponse_parents :: Lens' ListObjectParentsResponse (Maybe (HashMap Text Text))

-- | The pagination token.
listObjectParentsResponse_nextToken :: Lens' ListObjectParentsResponse (Maybe Text)

-- | The response's http status code.
listObjectParentsResponse_httpStatus :: Lens' ListObjectParentsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectParents.ListObjectParentsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectParents.ListObjectParentsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectParents.ListObjectParentsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectParents.ListObjectParentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectParents.ListObjectParentsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListObjectParents.ListObjectParents


-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
--   
--   Use this API to evaluate all parents for an object. The call returns
--   all objects from the root of the directory up to the requested object.
--   The API returns the number of paths based on user-defined
--   <tt>MaxResults</tt>, in case there are multiple paths to the parent.
--   The order of the paths and nodes returned is consistent among multiple
--   API calls unless the objects are deleted or moved. Paths not leading
--   to the directory root are ignored from the target object.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListObjectParentPaths

-- | <i>See:</i> <a>newListObjectParentPaths</a> smart constructor.
data ListObjectParentPaths
ListObjectParentPaths' :: Maybe Text -> Maybe Natural -> Text -> ObjectReference -> ListObjectParentPaths

-- | The pagination token.
[$sel:nextToken:ListObjectParentPaths'] :: ListObjectParentPaths -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:ListObjectParentPaths'] :: ListObjectParentPaths -> Maybe Natural

-- | The ARN of the directory to which the parent path applies.
[$sel:directoryArn:ListObjectParentPaths'] :: ListObjectParentPaths -> Text

-- | The reference that identifies the object whose parent paths are
--   listed.
[$sel:objectReference:ListObjectParentPaths'] :: ListObjectParentPaths -> ObjectReference

-- | Create a value of <a>ListObjectParentPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:directoryArn:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_directoryArn</a> - The ARN of the directory
--   to which the parent path applies.
--   
--   <a>$sel:objectReference:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_objectReference</a> - The reference that
--   identifies the object whose parent paths are listed.
newListObjectParentPaths :: Text -> ObjectReference -> ListObjectParentPaths

-- | The pagination token.
listObjectParentPaths_nextToken :: Lens' ListObjectParentPaths (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectParentPaths_maxResults :: Lens' ListObjectParentPaths (Maybe Natural)

-- | The ARN of the directory to which the parent path applies.
listObjectParentPaths_directoryArn :: Lens' ListObjectParentPaths Text

-- | The reference that identifies the object whose parent paths are
--   listed.
listObjectParentPaths_objectReference :: Lens' ListObjectParentPaths ObjectReference

-- | <i>See:</i> <a>newListObjectParentPathsResponse</a> smart constructor.
data ListObjectParentPathsResponse
ListObjectParentPathsResponse' :: Maybe Text -> Maybe [PathToObjectIdentifiers] -> Int -> ListObjectParentPathsResponse

-- | The pagination token.
[$sel:nextToken:ListObjectParentPathsResponse'] :: ListObjectParentPathsResponse -> Maybe Text

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
[$sel:pathToObjectIdentifiersList:ListObjectParentPathsResponse'] :: ListObjectParentPathsResponse -> Maybe [PathToObjectIdentifiers]

-- | The response's http status code.
[$sel:httpStatus:ListObjectParentPathsResponse'] :: ListObjectParentPathsResponse -> Int

-- | Create a value of <a>ListObjectParentPathsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectParentPaths'</a>,
--   <a>listObjectParentPathsResponse_nextToken</a> - The pagination token.
--   
--   
--   <a>$sel:pathToObjectIdentifiersList:ListObjectParentPathsResponse'</a>,
--   <a>listObjectParentPathsResponse_pathToObjectIdentifiersList</a> -
--   Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
--   
--   <a>$sel:httpStatus:ListObjectParentPathsResponse'</a>,
--   <a>listObjectParentPathsResponse_httpStatus</a> - The response's http
--   status code.
newListObjectParentPathsResponse :: Int -> ListObjectParentPathsResponse

-- | The pagination token.
listObjectParentPathsResponse_nextToken :: Lens' ListObjectParentPathsResponse (Maybe Text)

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
listObjectParentPathsResponse_pathToObjectIdentifiersList :: Lens' ListObjectParentPathsResponse (Maybe [PathToObjectIdentifiers])

-- | The response's http status code.
listObjectParentPathsResponse_httpStatus :: Lens' ListObjectParentPathsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPathsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPathsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPathsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPathsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPathsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListObjectParentPaths.ListObjectParentPaths


-- | Returns a paginated list of child objects that are associated with a
--   given object.
module Network.AWS.CloudDirectory.ListObjectChildren

-- | <i>See:</i> <a>newListObjectChildren</a> smart constructor.
data ListObjectChildren
ListObjectChildren' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListObjectChildren

-- | The pagination token.
[$sel:nextToken:ListObjectChildren'] :: ListObjectChildren -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:ListObjectChildren'] :: ListObjectChildren -> Maybe Natural

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
[$sel:consistencyLevel:ListObjectChildren'] :: ListObjectChildren -> Maybe ConsistencyLevel

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
[$sel:directoryArn:ListObjectChildren'] :: ListObjectChildren -> Text

-- | The reference that identifies the object for which child objects are
--   being listed.
[$sel:objectReference:ListObjectChildren'] :: ListObjectChildren -> ObjectReference

-- | Create a value of <a>ListObjectChildren</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectChildren'</a>,
--   <a>listObjectChildren_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectChildren'</a>,
--   <a>listObjectChildren_maxResults</a> - The maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListObjectChildren'</a>,
--   <a>listObjectChildren_consistencyLevel</a> - Represents the manner and
--   timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListObjectChildren'</a>,
--   <a>listObjectChildren_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   For more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectChildren'</a>,
--   <a>listObjectChildren_objectReference</a> - The reference that
--   identifies the object for which child objects are being listed.
newListObjectChildren :: Text -> ObjectReference -> ListObjectChildren

-- | The pagination token.
listObjectChildren_nextToken :: Lens' ListObjectChildren (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectChildren_maxResults :: Lens' ListObjectChildren (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectChildren_consistencyLevel :: Lens' ListObjectChildren (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
listObjectChildren_directoryArn :: Lens' ListObjectChildren Text

-- | The reference that identifies the object for which child objects are
--   being listed.
listObjectChildren_objectReference :: Lens' ListObjectChildren ObjectReference

-- | <i>See:</i> <a>newListObjectChildrenResponse</a> smart constructor.
data ListObjectChildrenResponse
ListObjectChildrenResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> ListObjectChildrenResponse

-- | The pagination token.
[$sel:nextToken:ListObjectChildrenResponse'] :: ListObjectChildrenResponse -> Maybe Text

-- | Children structure, which is a map with key as the <tt>LinkName</tt>
--   and <tt>ObjectIdentifier</tt> as the value.
[$sel:children:ListObjectChildrenResponse'] :: ListObjectChildrenResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListObjectChildrenResponse'] :: ListObjectChildrenResponse -> Int

-- | Create a value of <a>ListObjectChildrenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectChildren'</a>,
--   <a>listObjectChildrenResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:children:ListObjectChildrenResponse'</a>,
--   <a>listObjectChildrenResponse_children</a> - Children structure, which
--   is a map with key as the <tt>LinkName</tt> and
--   <tt>ObjectIdentifier</tt> as the value.
--   
--   <a>$sel:httpStatus:ListObjectChildrenResponse'</a>,
--   <a>listObjectChildrenResponse_httpStatus</a> - The response's http
--   status code.
newListObjectChildrenResponse :: Int -> ListObjectChildrenResponse

-- | The pagination token.
listObjectChildrenResponse_nextToken :: Lens' ListObjectChildrenResponse (Maybe Text)

-- | Children structure, which is a map with key as the <tt>LinkName</tt>
--   and <tt>ObjectIdentifier</tt> as the value.
listObjectChildrenResponse_children :: Lens' ListObjectChildrenResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listObjectChildrenResponse_httpStatus :: Lens' ListObjectChildrenResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildrenResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildrenResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildrenResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildrenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildrenResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListObjectChildren.ListObjectChildren


-- | Lists all attributes that are associated with an object.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListObjectAttributes

-- | <i>See:</i> <a>newListObjectAttributes</a> smart constructor.
data ListObjectAttributes
ListObjectAttributes' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe SchemaFacet -> Text -> ObjectReference -> ListObjectAttributes

-- | The pagination token.
[$sel:nextToken:ListObjectAttributes'] :: ListObjectAttributes -> Maybe Text

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
[$sel:maxResults:ListObjectAttributes'] :: ListObjectAttributes -> Maybe Natural

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
[$sel:consistencyLevel:ListObjectAttributes'] :: ListObjectAttributes -> Maybe ConsistencyLevel

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
[$sel:facetFilter:ListObjectAttributes'] :: ListObjectAttributes -> Maybe SchemaFacet

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
[$sel:directoryArn:ListObjectAttributes'] :: ListObjectAttributes -> Text

-- | The reference that identifies the object whose attributes will be
--   listed.
[$sel:objectReference:ListObjectAttributes'] :: ListObjectAttributes -> ObjectReference

-- | Create a value of <a>ListObjectAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_consistencyLevel</a> - Represents the manner
--   and timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:facetFilter:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_facetFilter</a> - Used to filter the list of
--   object attributes that are associated with a certain facet.
--   
--   <a>$sel:directoryArn:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   For more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newListObjectAttributes :: Text -> ObjectReference -> ListObjectAttributes

-- | The pagination token.
listObjectAttributes_nextToken :: Lens' ListObjectAttributes (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectAttributes_maxResults :: Lens' ListObjectAttributes (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectAttributes_consistencyLevel :: Lens' ListObjectAttributes (Maybe ConsistencyLevel)

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
listObjectAttributes_facetFilter :: Lens' ListObjectAttributes (Maybe SchemaFacet)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
listObjectAttributes_directoryArn :: Lens' ListObjectAttributes Text

-- | The reference that identifies the object whose attributes will be
--   listed.
listObjectAttributes_objectReference :: Lens' ListObjectAttributes ObjectReference

-- | <i>See:</i> <a>newListObjectAttributesResponse</a> smart constructor.
data ListObjectAttributesResponse
ListObjectAttributesResponse' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> Int -> ListObjectAttributesResponse

-- | The pagination token.
[$sel:nextToken:ListObjectAttributesResponse'] :: ListObjectAttributesResponse -> Maybe Text

-- | Attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key, and attribute value is the value.
[$sel:attributes:ListObjectAttributesResponse'] :: ListObjectAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | The response's http status code.
[$sel:httpStatus:ListObjectAttributesResponse'] :: ListObjectAttributesResponse -> Int

-- | Create a value of <a>ListObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectAttributes'</a>,
--   <a>listObjectAttributesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:attributes:ListObjectAttributesResponse'</a>,
--   <a>listObjectAttributesResponse_attributes</a> - Attributes map that
--   is associated with the object. <tt>AttributeArn</tt> is the key, and
--   attribute value is the value.
--   
--   <a>$sel:httpStatus:ListObjectAttributesResponse'</a>,
--   <a>listObjectAttributesResponse_httpStatus</a> - The response's http
--   status code.
newListObjectAttributesResponse :: Int -> ListObjectAttributesResponse

-- | The pagination token.
listObjectAttributesResponse_nextToken :: Lens' ListObjectAttributesResponse (Maybe Text)

-- | Attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key, and attribute value is the value.
listObjectAttributesResponse_attributes :: Lens' ListObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | The response's http status code.
listObjectAttributesResponse_httpStatus :: Lens' ListObjectAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListObjectAttributes.ListObjectAttributes


-- | Lists the major version families of each managed schema. If a major
--   version ARN is provided as SchemaArn, the minor version revisions in
--   that family are listed instead.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListManagedSchemaArns

-- | <i>See:</i> <a>newListManagedSchemaArns</a> smart constructor.
data ListManagedSchemaArns
ListManagedSchemaArns' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListManagedSchemaArns

-- | The pagination token.
[$sel:nextToken:ListManagedSchemaArns'] :: ListManagedSchemaArns -> Maybe Text

-- | The response for ListManagedSchemaArns. When this parameter is used,
--   all minor version ARNs for a major version are listed.
[$sel:schemaArn:ListManagedSchemaArns'] :: ListManagedSchemaArns -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListManagedSchemaArns'] :: ListManagedSchemaArns -> Maybe Natural

-- | Create a value of <a>ListManagedSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:schemaArn:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArns_schemaArn</a> - The response for
--   ListManagedSchemaArns. When this parameter is used, all minor version
--   ARNs for a major version are listed.
--   
--   <a>$sel:maxResults:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
newListManagedSchemaArns :: ListManagedSchemaArns

-- | The pagination token.
listManagedSchemaArns_nextToken :: Lens' ListManagedSchemaArns (Maybe Text)

-- | The response for ListManagedSchemaArns. When this parameter is used,
--   all minor version ARNs for a major version are listed.
listManagedSchemaArns_schemaArn :: Lens' ListManagedSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listManagedSchemaArns_maxResults :: Lens' ListManagedSchemaArns (Maybe Natural)

-- | <i>See:</i> <a>newListManagedSchemaArnsResponse</a> smart constructor.
data ListManagedSchemaArnsResponse
ListManagedSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListManagedSchemaArnsResponse

-- | The ARNs for all AWS managed schemas.
[$sel:schemaArns:ListManagedSchemaArnsResponse'] :: ListManagedSchemaArnsResponse -> Maybe [Text]

-- | The pagination token.
[$sel:nextToken:ListManagedSchemaArnsResponse'] :: ListManagedSchemaArnsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListManagedSchemaArnsResponse'] :: ListManagedSchemaArnsResponse -> Int

-- | Create a value of <a>ListManagedSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListManagedSchemaArnsResponse'</a>,
--   <a>listManagedSchemaArnsResponse_schemaArns</a> - The ARNs for all AWS
--   managed schemas.
--   
--   <a>$sel:nextToken:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArnsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListManagedSchemaArnsResponse'</a>,
--   <a>listManagedSchemaArnsResponse_httpStatus</a> - The response's http
--   status code.
newListManagedSchemaArnsResponse :: Int -> ListManagedSchemaArnsResponse

-- | The ARNs for all AWS managed schemas.
listManagedSchemaArnsResponse_schemaArns :: Lens' ListManagedSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listManagedSchemaArnsResponse_nextToken :: Lens' ListManagedSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listManagedSchemaArnsResponse_httpStatus :: Lens' ListManagedSchemaArnsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance GHC.Show.Show Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance GHC.Read.Read Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArnsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArnsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArnsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArnsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArnsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListManagedSchemaArns.ListManagedSchemaArns


-- | Lists objects attached to the specified index.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListIndex

-- | <i>See:</i> <a>newListIndex</a> smart constructor.
data ListIndex
ListIndex' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe [ObjectAttributeRange] -> Text -> ObjectReference -> ListIndex

-- | The pagination token.
[$sel:nextToken:ListIndex'] :: ListIndex -> Maybe Text

-- | The maximum number of objects in a single page to retrieve from the
--   index during a request. For more information, see <a>Amazon Cloud
--   Directory Limits</a>.
[$sel:maxResults:ListIndex'] :: ListIndex -> Maybe Natural

-- | The consistency level to execute the request at.
[$sel:consistencyLevel:ListIndex'] :: ListIndex -> Maybe ConsistencyLevel

-- | Specifies the ranges of indexed values that you want to query.
[$sel:rangesOnIndexedValues:ListIndex'] :: ListIndex -> Maybe [ObjectAttributeRange]

-- | The ARN of the directory that the index exists in.
[$sel:directoryArn:ListIndex'] :: ListIndex -> Text

-- | The reference to the index to list.
[$sel:indexReference:ListIndex'] :: ListIndex -> ObjectReference

-- | Create a value of <a>ListIndex</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIndex'</a>, <a>listIndex_nextToken</a> - The
--   pagination token.
--   
--   <a>$sel:maxResults:ListIndex'</a>, <a>listIndex_maxResults</a> - The
--   maximum number of objects in a single page to retrieve from the index
--   during a request. For more information, see <a>Amazon Cloud Directory
--   Limits</a>.
--   
--   <a>$sel:consistencyLevel:ListIndex'</a>,
--   <a>listIndex_consistencyLevel</a> - The consistency level to execute
--   the request at.
--   
--   <a>$sel:rangesOnIndexedValues:ListIndex'</a>,
--   <a>listIndex_rangesOnIndexedValues</a> - Specifies the ranges of
--   indexed values that you want to query.
--   
--   <a>$sel:directoryArn:ListIndex'</a>, <a>listIndex_directoryArn</a> -
--   The ARN of the directory that the index exists in.
--   
--   <a>$sel:indexReference:ListIndex'</a>, <a>listIndex_indexReference</a>
--   - The reference to the index to list.
newListIndex :: Text -> ObjectReference -> ListIndex

-- | The pagination token.
listIndex_nextToken :: Lens' ListIndex (Maybe Text)

-- | The maximum number of objects in a single page to retrieve from the
--   index during a request. For more information, see <a>Amazon Cloud
--   Directory Limits</a>.
listIndex_maxResults :: Lens' ListIndex (Maybe Natural)

-- | The consistency level to execute the request at.
listIndex_consistencyLevel :: Lens' ListIndex (Maybe ConsistencyLevel)

-- | Specifies the ranges of indexed values that you want to query.
listIndex_rangesOnIndexedValues :: Lens' ListIndex (Maybe [ObjectAttributeRange])

-- | The ARN of the directory that the index exists in.
listIndex_directoryArn :: Lens' ListIndex Text

-- | The reference to the index to list.
listIndex_indexReference :: Lens' ListIndex ObjectReference

-- | <i>See:</i> <a>newListIndexResponse</a> smart constructor.
data ListIndexResponse
ListIndexResponse' :: Maybe Text -> Maybe [IndexAttachment] -> Int -> ListIndexResponse

-- | The pagination token.
[$sel:nextToken:ListIndexResponse'] :: ListIndexResponse -> Maybe Text

-- | The objects and indexed values attached to the index.
[$sel:indexAttachments:ListIndexResponse'] :: ListIndexResponse -> Maybe [IndexAttachment]

-- | The response's http status code.
[$sel:httpStatus:ListIndexResponse'] :: ListIndexResponse -> Int

-- | Create a value of <a>ListIndexResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIndex'</a>, <a>listIndexResponse_nextToken</a> -
--   The pagination token.
--   
--   <a>$sel:indexAttachments:ListIndexResponse'</a>,
--   <a>listIndexResponse_indexAttachments</a> - The objects and indexed
--   values attached to the index.
--   
--   <a>$sel:httpStatus:ListIndexResponse'</a>,
--   <a>listIndexResponse_httpStatus</a> - The response's http status code.
newListIndexResponse :: Int -> ListIndexResponse

-- | The pagination token.
listIndexResponse_nextToken :: Lens' ListIndexResponse (Maybe Text)

-- | The objects and indexed values attached to the index.
listIndexResponse_indexAttachments :: Lens' ListIndexResponse (Maybe [IndexAttachment])

-- | The response's http status code.
listIndexResponse_httpStatus :: Lens' ListIndexResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListIndex.ListIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.ListIndex.ListIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.ListIndex.ListIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListIndex.ListIndex
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListIndex.ListIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListIndex.ListIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListIndex.ListIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListIndex.ListIndexResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListIndex.ListIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListIndex.ListIndexResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListIndex.ListIndex
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListIndex.ListIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListIndex.ListIndex
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListIndex.ListIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListIndex.ListIndex
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListIndex.ListIndex
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListIndex.ListIndex


-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListIncomingTypedLinks

-- | <i>See:</i> <a>newListIncomingTypedLinks</a> smart constructor.
data ListIncomingTypedLinks
ListIncomingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe [TypedLinkAttributeRange] -> Text -> ObjectReference -> ListIncomingTypedLinks

-- | The pagination token.
[$sel:nextToken:ListIncomingTypedLinks'] :: ListIncomingTypedLinks -> Maybe Text

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
[$sel:filterTypedLink:ListIncomingTypedLinks'] :: ListIncomingTypedLinks -> Maybe TypedLinkSchemaAndFacetName

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListIncomingTypedLinks'] :: ListIncomingTypedLinks -> Maybe Natural

-- | The consistency level to execute the request at.
[$sel:consistencyLevel:ListIncomingTypedLinks'] :: ListIncomingTypedLinks -> Maybe ConsistencyLevel

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
[$sel:filterAttributeRanges:ListIncomingTypedLinks'] :: ListIncomingTypedLinks -> Maybe [TypedLinkAttributeRange]

-- | The Amazon Resource Name (ARN) of the directory where you want to list
--   the typed links.
[$sel:directoryArn:ListIncomingTypedLinks'] :: ListIncomingTypedLinks -> Text

-- | Reference that identifies the object whose attributes will be listed.
[$sel:objectReference:ListIncomingTypedLinks'] :: ListIncomingTypedLinks -> ObjectReference

-- | Create a value of <a>ListIncomingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls.
--   
--   <a>$sel:maxResults:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:consistencyLevel:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_consistencyLevel</a> - The consistency level
--   to execute the request at.
--   
--   <a>$sel:filterAttributeRanges:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_filterAttributeRanges</a> - Provides range
--   filters for multiple attributes. When providing ranges to typed link
--   selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:directoryArn:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_directoryArn</a> - The Amazon Resource Name
--   (ARN) of the directory where you want to list the typed links.
--   
--   <a>$sel:objectReference:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_objectReference</a> - Reference that
--   identifies the object whose attributes will be listed.
newListIncomingTypedLinks :: Text -> ObjectReference -> ListIncomingTypedLinks

-- | The pagination token.
listIncomingTypedLinks_nextToken :: Lens' ListIncomingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
listIncomingTypedLinks_filterTypedLink :: Lens' ListIncomingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
listIncomingTypedLinks_maxResults :: Lens' ListIncomingTypedLinks (Maybe Natural)

-- | The consistency level to execute the request at.
listIncomingTypedLinks_consistencyLevel :: Lens' ListIncomingTypedLinks (Maybe ConsistencyLevel)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
listIncomingTypedLinks_filterAttributeRanges :: Lens' ListIncomingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The Amazon Resource Name (ARN) of the directory where you want to list
--   the typed links.
listIncomingTypedLinks_directoryArn :: Lens' ListIncomingTypedLinks Text

-- | Reference that identifies the object whose attributes will be listed.
listIncomingTypedLinks_objectReference :: Lens' ListIncomingTypedLinks ObjectReference

-- | <i>See:</i> <a>newListIncomingTypedLinksResponse</a> smart
--   constructor.
data ListIncomingTypedLinksResponse
ListIncomingTypedLinksResponse' :: Maybe [TypedLinkSpecifier] -> Maybe Text -> Int -> ListIncomingTypedLinksResponse

-- | Returns one or more typed link specifiers as output.
[$sel:linkSpecifiers:ListIncomingTypedLinksResponse'] :: ListIncomingTypedLinksResponse -> Maybe [TypedLinkSpecifier]

-- | The pagination token.
[$sel:nextToken:ListIncomingTypedLinksResponse'] :: ListIncomingTypedLinksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListIncomingTypedLinksResponse'] :: ListIncomingTypedLinksResponse -> Int

-- | Create a value of <a>ListIncomingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkSpecifiers:ListIncomingTypedLinksResponse'</a>,
--   <a>listIncomingTypedLinksResponse_linkSpecifiers</a> - Returns one or
--   more typed link specifiers as output.
--   
--   <a>$sel:nextToken:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinksResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:httpStatus:ListIncomingTypedLinksResponse'</a>,
--   <a>listIncomingTypedLinksResponse_httpStatus</a> - The response's http
--   status code.
newListIncomingTypedLinksResponse :: Int -> ListIncomingTypedLinksResponse

-- | Returns one or more typed link specifiers as output.
listIncomingTypedLinksResponse_linkSpecifiers :: Lens' ListIncomingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The pagination token.
listIncomingTypedLinksResponse_nextToken :: Lens' ListIncomingTypedLinksResponse (Maybe Text)

-- | The response's http status code.
listIncomingTypedLinksResponse_httpStatus :: Lens' ListIncomingTypedLinksResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance GHC.Show.Show Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance GHC.Read.Read Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinksResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinksResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinksResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListIncomingTypedLinks.ListIncomingTypedLinks


-- | Retrieves the names of facets that exist in a schema.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListFacetNames

-- | <i>See:</i> <a>newListFacetNames</a> smart constructor.
data ListFacetNames
ListFacetNames' :: Maybe Text -> Maybe Natural -> Text -> ListFacetNames

-- | The pagination token.
[$sel:nextToken:ListFacetNames'] :: ListFacetNames -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListFacetNames'] :: ListFacetNames -> Maybe Natural

-- | The Amazon Resource Name (ARN) to retrieve facet names from.
[$sel:schemaArn:ListFacetNames'] :: ListFacetNames -> Text

-- | Create a value of <a>ListFacetNames</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetNames'</a>, <a>listFacetNames_nextToken</a>
--   - The pagination token.
--   
--   <a>$sel:maxResults:ListFacetNames'</a>,
--   <a>listFacetNames_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:schemaArn:ListFacetNames'</a>, <a>listFacetNames_schemaArn</a>
--   - The Amazon Resource Name (ARN) to retrieve facet names from.
newListFacetNames :: Text -> ListFacetNames

-- | The pagination token.
listFacetNames_nextToken :: Lens' ListFacetNames (Maybe Text)

-- | The maximum number of results to retrieve.
listFacetNames_maxResults :: Lens' ListFacetNames (Maybe Natural)

-- | The Amazon Resource Name (ARN) to retrieve facet names from.
listFacetNames_schemaArn :: Lens' ListFacetNames Text

-- | <i>See:</i> <a>newListFacetNamesResponse</a> smart constructor.
data ListFacetNamesResponse
ListFacetNamesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListFacetNamesResponse

-- | The pagination token.
[$sel:nextToken:ListFacetNamesResponse'] :: ListFacetNamesResponse -> Maybe Text

-- | The names of facets that exist within the schema.
[$sel:facetNames:ListFacetNamesResponse'] :: ListFacetNamesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListFacetNamesResponse'] :: ListFacetNamesResponse -> Int

-- | Create a value of <a>ListFacetNamesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetNames'</a>,
--   <a>listFacetNamesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:facetNames:ListFacetNamesResponse'</a>,
--   <a>listFacetNamesResponse_facetNames</a> - The names of facets that
--   exist within the schema.
--   
--   <a>$sel:httpStatus:ListFacetNamesResponse'</a>,
--   <a>listFacetNamesResponse_httpStatus</a> - The response's http status
--   code.
newListFacetNamesResponse :: Int -> ListFacetNamesResponse

-- | The pagination token.
listFacetNamesResponse_nextToken :: Lens' ListFacetNamesResponse (Maybe Text)

-- | The names of facets that exist within the schema.
listFacetNamesResponse_facetNames :: Lens' ListFacetNamesResponse (Maybe [Text])

-- | The response's http status code.
listFacetNamesResponse_httpStatus :: Lens' ListFacetNamesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance GHC.Show.Show Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance GHC.Read.Read Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListFacetNames.ListFacetNamesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListFacetNames.ListFacetNamesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListFacetNames.ListFacetNamesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListFacetNames.ListFacetNamesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListFacetNames.ListFacetNamesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListFacetNames.ListFacetNames


-- | Retrieves attributes attached to the facet.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListFacetAttributes

-- | <i>See:</i> <a>newListFacetAttributes</a> smart constructor.
data ListFacetAttributes
ListFacetAttributes' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListFacetAttributes

-- | The pagination token.
[$sel:nextToken:ListFacetAttributes'] :: ListFacetAttributes -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListFacetAttributes'] :: ListFacetAttributes -> Maybe Natural

-- | The ARN of the schema where the facet resides.
[$sel:schemaArn:ListFacetAttributes'] :: ListFacetAttributes -> Text

-- | The name of the facet whose attributes will be retrieved.
[$sel:name:ListFacetAttributes'] :: ListFacetAttributes -> Text

-- | Create a value of <a>ListFacetAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetAttributes'</a>,
--   <a>listFacetAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListFacetAttributes'</a>,
--   <a>listFacetAttributes_maxResults</a> - The maximum number of results
--   to retrieve.
--   
--   <a>$sel:schemaArn:ListFacetAttributes'</a>,
--   <a>listFacetAttributes_schemaArn</a> - The ARN of the schema where the
--   facet resides.
--   
--   <a>$sel:name:ListFacetAttributes'</a>, <a>listFacetAttributes_name</a>
--   - The name of the facet whose attributes will be retrieved.
newListFacetAttributes :: Text -> Text -> ListFacetAttributes

-- | The pagination token.
listFacetAttributes_nextToken :: Lens' ListFacetAttributes (Maybe Text)

-- | The maximum number of results to retrieve.
listFacetAttributes_maxResults :: Lens' ListFacetAttributes (Maybe Natural)

-- | The ARN of the schema where the facet resides.
listFacetAttributes_schemaArn :: Lens' ListFacetAttributes Text

-- | The name of the facet whose attributes will be retrieved.
listFacetAttributes_name :: Lens' ListFacetAttributes Text

-- | <i>See:</i> <a>newListFacetAttributesResponse</a> smart constructor.
data ListFacetAttributesResponse
ListFacetAttributesResponse' :: Maybe Text -> Maybe [FacetAttribute] -> Int -> ListFacetAttributesResponse

-- | The pagination token.
[$sel:nextToken:ListFacetAttributesResponse'] :: ListFacetAttributesResponse -> Maybe Text

-- | The attributes attached to the facet.
[$sel:attributes:ListFacetAttributesResponse'] :: ListFacetAttributesResponse -> Maybe [FacetAttribute]

-- | The response's http status code.
[$sel:httpStatus:ListFacetAttributesResponse'] :: ListFacetAttributesResponse -> Int

-- | Create a value of <a>ListFacetAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetAttributes'</a>,
--   <a>listFacetAttributesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:attributes:ListFacetAttributesResponse'</a>,
--   <a>listFacetAttributesResponse_attributes</a> - The attributes
--   attached to the facet.
--   
--   <a>$sel:httpStatus:ListFacetAttributesResponse'</a>,
--   <a>listFacetAttributesResponse_httpStatus</a> - The response's http
--   status code.
newListFacetAttributesResponse :: Int -> ListFacetAttributesResponse

-- | The pagination token.
listFacetAttributesResponse_nextToken :: Lens' ListFacetAttributesResponse (Maybe Text)

-- | The attributes attached to the facet.
listFacetAttributesResponse_attributes :: Lens' ListFacetAttributesResponse (Maybe [FacetAttribute])

-- | The response's http status code.
listFacetAttributesResponse_httpStatus :: Lens' ListFacetAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListFacetAttributes.ListFacetAttributes


-- | Lists directories created within an account.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListDirectories

-- | <i>See:</i> <a>newListDirectories</a> smart constructor.
data ListDirectories
ListDirectories' :: Maybe Text -> Maybe Natural -> Maybe DirectoryState -> ListDirectories

-- | The pagination token.
[$sel:nextToken:ListDirectories'] :: ListDirectories -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListDirectories'] :: ListDirectories -> Maybe Natural

-- | The state of the directories in the list. Can be either Enabled,
--   Disabled, or Deleted.
[$sel:state:ListDirectories'] :: ListDirectories -> Maybe DirectoryState

-- | Create a value of <a>ListDirectories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDirectories'</a>,
--   <a>listDirectories_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListDirectories'</a>,
--   <a>listDirectories_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:state:ListDirectories'</a>, <a>listDirectories_state</a> - The
--   state of the directories in the list. Can be either Enabled, Disabled,
--   or Deleted.
newListDirectories :: ListDirectories

-- | The pagination token.
listDirectories_nextToken :: Lens' ListDirectories (Maybe Text)

-- | The maximum number of results to retrieve.
listDirectories_maxResults :: Lens' ListDirectories (Maybe Natural)

-- | The state of the directories in the list. Can be either Enabled,
--   Disabled, or Deleted.
listDirectories_state :: Lens' ListDirectories (Maybe DirectoryState)

-- | <i>See:</i> <a>newListDirectoriesResponse</a> smart constructor.
data ListDirectoriesResponse
ListDirectoriesResponse' :: Maybe Text -> Int -> [Directory] -> ListDirectoriesResponse

-- | The pagination token.
[$sel:nextToken:ListDirectoriesResponse'] :: ListDirectoriesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDirectoriesResponse'] :: ListDirectoriesResponse -> Int

-- | Lists all directories that are associated with your account in
--   pagination fashion.
[$sel:directories:ListDirectoriesResponse'] :: ListDirectoriesResponse -> [Directory]

-- | Create a value of <a>ListDirectoriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDirectories'</a>,
--   <a>listDirectoriesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListDirectoriesResponse'</a>,
--   <a>listDirectoriesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directories:ListDirectoriesResponse'</a>,
--   <a>listDirectoriesResponse_directories</a> - Lists all directories
--   that are associated with your account in pagination fashion.
newListDirectoriesResponse :: Int -> ListDirectoriesResponse

-- | The pagination token.
listDirectoriesResponse_nextToken :: Lens' ListDirectoriesResponse (Maybe Text)

-- | The response's http status code.
listDirectoriesResponse_httpStatus :: Lens' ListDirectoriesResponse Int

-- | Lists all directories that are associated with your account in
--   pagination fashion.
listDirectoriesResponse_directories :: Lens' ListDirectoriesResponse [Directory]
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance GHC.Show.Show Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance GHC.Read.Read Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListDirectories.ListDirectoriesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListDirectories.ListDirectoriesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListDirectories.ListDirectoriesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListDirectories.ListDirectoriesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListDirectories.ListDirectoriesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListDirectories.ListDirectories
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListDirectories.ListDirectories


-- | Retrieves each Amazon Resource Name (ARN) of schemas in the
--   development state.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListDevelopmentSchemaArns

-- | <i>See:</i> <a>newListDevelopmentSchemaArns</a> smart constructor.
data ListDevelopmentSchemaArns
ListDevelopmentSchemaArns' :: Maybe Text -> Maybe Natural -> ListDevelopmentSchemaArns

-- | The pagination token.
[$sel:nextToken:ListDevelopmentSchemaArns'] :: ListDevelopmentSchemaArns -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListDevelopmentSchemaArns'] :: ListDevelopmentSchemaArns -> Maybe Natural

-- | Create a value of <a>ListDevelopmentSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevelopmentSchemaArns'</a>,
--   <a>listDevelopmentSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListDevelopmentSchemaArns'</a>,
--   <a>listDevelopmentSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
newListDevelopmentSchemaArns :: ListDevelopmentSchemaArns

-- | The pagination token.
listDevelopmentSchemaArns_nextToken :: Lens' ListDevelopmentSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listDevelopmentSchemaArns_maxResults :: Lens' ListDevelopmentSchemaArns (Maybe Natural)

-- | <i>See:</i> <a>newListDevelopmentSchemaArnsResponse</a> smart
--   constructor.
data ListDevelopmentSchemaArnsResponse
ListDevelopmentSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListDevelopmentSchemaArnsResponse

-- | The ARNs of retrieved development schemas.
[$sel:schemaArns:ListDevelopmentSchemaArnsResponse'] :: ListDevelopmentSchemaArnsResponse -> Maybe [Text]

-- | The pagination token.
[$sel:nextToken:ListDevelopmentSchemaArnsResponse'] :: ListDevelopmentSchemaArnsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDevelopmentSchemaArnsResponse'] :: ListDevelopmentSchemaArnsResponse -> Int

-- | Create a value of <a>ListDevelopmentSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListDevelopmentSchemaArnsResponse'</a>,
--   <a>listDevelopmentSchemaArnsResponse_schemaArns</a> - The ARNs of
--   retrieved development schemas.
--   
--   <a>$sel:nextToken:ListDevelopmentSchemaArns'</a>,
--   <a>listDevelopmentSchemaArnsResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:httpStatus:ListDevelopmentSchemaArnsResponse'</a>,
--   <a>listDevelopmentSchemaArnsResponse_httpStatus</a> - The response's
--   http status code.
newListDevelopmentSchemaArnsResponse :: Int -> ListDevelopmentSchemaArnsResponse

-- | The ARNs of retrieved development schemas.
listDevelopmentSchemaArnsResponse_schemaArns :: Lens' ListDevelopmentSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listDevelopmentSchemaArnsResponse_nextToken :: Lens' ListDevelopmentSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listDevelopmentSchemaArnsResponse_httpStatus :: Lens' ListDevelopmentSchemaArnsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance GHC.Show.Show Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance GHC.Read.Read Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArnsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArnsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArnsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArnsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArnsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListDevelopmentSchemaArns.ListDevelopmentSchemaArns


-- | Lists indices attached to the specified object.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListAttachedIndices

-- | <i>See:</i> <a>newListAttachedIndices</a> smart constructor.
data ListAttachedIndices
ListAttachedIndices' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListAttachedIndices

-- | The pagination token.
[$sel:nextToken:ListAttachedIndices'] :: ListAttachedIndices -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListAttachedIndices'] :: ListAttachedIndices -> Maybe Natural

-- | The consistency level to use for this operation.
[$sel:consistencyLevel:ListAttachedIndices'] :: ListAttachedIndices -> Maybe ConsistencyLevel

-- | The ARN of the directory.
[$sel:directoryArn:ListAttachedIndices'] :: ListAttachedIndices -> Text

-- | A reference to the object that has indices attached.
[$sel:targetReference:ListAttachedIndices'] :: ListAttachedIndices -> ObjectReference

-- | Create a value of <a>ListAttachedIndices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_maxResults</a> - The maximum number of results
--   to retrieve.
--   
--   <a>$sel:consistencyLevel:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_consistencyLevel</a> - The consistency level to
--   use for this operation.
--   
--   <a>$sel:directoryArn:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_directoryArn</a> - The ARN of the directory.
--   
--   <a>$sel:targetReference:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_targetReference</a> - A reference to the object
--   that has indices attached.
newListAttachedIndices :: Text -> ObjectReference -> ListAttachedIndices

-- | The pagination token.
listAttachedIndices_nextToken :: Lens' ListAttachedIndices (Maybe Text)

-- | The maximum number of results to retrieve.
listAttachedIndices_maxResults :: Lens' ListAttachedIndices (Maybe Natural)

-- | The consistency level to use for this operation.
listAttachedIndices_consistencyLevel :: Lens' ListAttachedIndices (Maybe ConsistencyLevel)

-- | The ARN of the directory.
listAttachedIndices_directoryArn :: Lens' ListAttachedIndices Text

-- | A reference to the object that has indices attached.
listAttachedIndices_targetReference :: Lens' ListAttachedIndices ObjectReference

-- | <i>See:</i> <a>newListAttachedIndicesResponse</a> smart constructor.
data ListAttachedIndicesResponse
ListAttachedIndicesResponse' :: Maybe Text -> Maybe [IndexAttachment] -> Int -> ListAttachedIndicesResponse

-- | The pagination token.
[$sel:nextToken:ListAttachedIndicesResponse'] :: ListAttachedIndicesResponse -> Maybe Text

-- | The indices attached to the specified object.
[$sel:indexAttachments:ListAttachedIndicesResponse'] :: ListAttachedIndicesResponse -> Maybe [IndexAttachment]

-- | The response's http status code.
[$sel:httpStatus:ListAttachedIndicesResponse'] :: ListAttachedIndicesResponse -> Int

-- | Create a value of <a>ListAttachedIndicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAttachedIndices'</a>,
--   <a>listAttachedIndicesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:indexAttachments:ListAttachedIndicesResponse'</a>,
--   <a>listAttachedIndicesResponse_indexAttachments</a> - The indices
--   attached to the specified object.
--   
--   <a>$sel:httpStatus:ListAttachedIndicesResponse'</a>,
--   <a>listAttachedIndicesResponse_httpStatus</a> - The response's http
--   status code.
newListAttachedIndicesResponse :: Int -> ListAttachedIndicesResponse

-- | The pagination token.
listAttachedIndicesResponse_nextToken :: Lens' ListAttachedIndicesResponse (Maybe Text)

-- | The indices attached to the specified object.
listAttachedIndicesResponse_indexAttachments :: Lens' ListAttachedIndicesResponse (Maybe [IndexAttachment])

-- | The response's http status code.
listAttachedIndicesResponse_httpStatus :: Lens' ListAttachedIndicesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance GHC.Show.Show Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance GHC.Read.Read Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndicesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndicesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndicesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndicesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListAttachedIndices.ListAttachedIndices


-- | Lists schema major versions applied to a directory. If
--   <tt>SchemaArn</tt> is provided, lists the minor version.
--   
--   This operation returns paginated results.
module Network.AWS.CloudDirectory.ListAppliedSchemaArns

-- | <i>See:</i> <a>newListAppliedSchemaArns</a> smart constructor.
data ListAppliedSchemaArns
ListAppliedSchemaArns' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListAppliedSchemaArns

-- | The pagination token.
[$sel:nextToken:ListAppliedSchemaArns'] :: ListAppliedSchemaArns -> Maybe Text

-- | The response for <tt>ListAppliedSchemaArns</tt> when this parameter is
--   used will list all minor version ARNs for a major version.
[$sel:schemaArn:ListAppliedSchemaArns'] :: ListAppliedSchemaArns -> Maybe Text

-- | The maximum number of results to retrieve.
[$sel:maxResults:ListAppliedSchemaArns'] :: ListAppliedSchemaArns -> Maybe Natural

-- | The ARN of the directory you are listing.
[$sel:directoryArn:ListAppliedSchemaArns'] :: ListAppliedSchemaArns -> Text

-- | Create a value of <a>ListAppliedSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:schemaArn:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_schemaArn</a> - The response for
--   <tt>ListAppliedSchemaArns</tt> when this parameter is used will list
--   all minor version ARNs for a major version.
--   
--   <a>$sel:maxResults:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:directoryArn:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_directoryArn</a> - The ARN of the directory
--   you are listing.
newListAppliedSchemaArns :: Text -> ListAppliedSchemaArns

-- | The pagination token.
listAppliedSchemaArns_nextToken :: Lens' ListAppliedSchemaArns (Maybe Text)

-- | The response for <tt>ListAppliedSchemaArns</tt> when this parameter is
--   used will list all minor version ARNs for a major version.
listAppliedSchemaArns_schemaArn :: Lens' ListAppliedSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listAppliedSchemaArns_maxResults :: Lens' ListAppliedSchemaArns (Maybe Natural)

-- | The ARN of the directory you are listing.
listAppliedSchemaArns_directoryArn :: Lens' ListAppliedSchemaArns Text

-- | <i>See:</i> <a>newListAppliedSchemaArnsResponse</a> smart constructor.
data ListAppliedSchemaArnsResponse
ListAppliedSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAppliedSchemaArnsResponse

-- | The ARNs of schemas that are applied to the directory.
[$sel:schemaArns:ListAppliedSchemaArnsResponse'] :: ListAppliedSchemaArnsResponse -> Maybe [Text]

-- | The pagination token.
[$sel:nextToken:ListAppliedSchemaArnsResponse'] :: ListAppliedSchemaArnsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAppliedSchemaArnsResponse'] :: ListAppliedSchemaArnsResponse -> Int

-- | Create a value of <a>ListAppliedSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListAppliedSchemaArnsResponse'</a>,
--   <a>listAppliedSchemaArnsResponse_schemaArns</a> - The ARNs of schemas
--   that are applied to the directory.
--   
--   <a>$sel:nextToken:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArnsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListAppliedSchemaArnsResponse'</a>,
--   <a>listAppliedSchemaArnsResponse_httpStatus</a> - The response's http
--   status code.
newListAppliedSchemaArnsResponse :: Int -> ListAppliedSchemaArnsResponse

-- | The ARNs of schemas that are applied to the directory.
listAppliedSchemaArnsResponse_schemaArns :: Lens' ListAppliedSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listAppliedSchemaArnsResponse_nextToken :: Lens' ListAppliedSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listAppliedSchemaArnsResponse_httpStatus :: Lens' ListAppliedSchemaArnsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance GHC.Show.Show Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance GHC.Read.Read Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArnsResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArnsResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArnsResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArnsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArnsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ListAppliedSchemaArns.ListAppliedSchemaArns


-- | Returns the identity attribute order for a specific TypedLinkFacet.
--   For more information, see <a>Typed Links</a>.
module Network.AWS.CloudDirectory.GetTypedLinkFacetInformation

-- | <i>See:</i> <a>newGetTypedLinkFacetInformation</a> smart constructor.
data GetTypedLinkFacetInformation
GetTypedLinkFacetInformation' :: Text -> Text -> GetTypedLinkFacetInformation

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:GetTypedLinkFacetInformation'] :: GetTypedLinkFacetInformation -> Text

-- | The unique name of the typed link facet.
[$sel:name:GetTypedLinkFacetInformation'] :: GetTypedLinkFacetInformation -> Text

-- | Create a value of <a>GetTypedLinkFacetInformation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetTypedLinkFacetInformation'</a>,
--   <a>getTypedLinkFacetInformation_schemaArn</a> - The Amazon Resource
--   Name (ARN) that is associated with the schema. For more information,
--   see arns.
--   
--   <a>$sel:name:GetTypedLinkFacetInformation'</a>,
--   <a>getTypedLinkFacetInformation_name</a> - The unique name of the
--   typed link facet.
newGetTypedLinkFacetInformation :: Text -> Text -> GetTypedLinkFacetInformation

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
getTypedLinkFacetInformation_schemaArn :: Lens' GetTypedLinkFacetInformation Text

-- | The unique name of the typed link facet.
getTypedLinkFacetInformation_name :: Lens' GetTypedLinkFacetInformation Text

-- | <i>See:</i> <a>newGetTypedLinkFacetInformationResponse</a> smart
--   constructor.
data GetTypedLinkFacetInformationResponse
GetTypedLinkFacetInformationResponse' :: Maybe [Text] -> Int -> GetTypedLinkFacetInformationResponse

-- | The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
[$sel:identityAttributeOrder:GetTypedLinkFacetInformationResponse'] :: GetTypedLinkFacetInformationResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:GetTypedLinkFacetInformationResponse'] :: GetTypedLinkFacetInformationResponse -> Int

-- | Create a value of <a>GetTypedLinkFacetInformationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:identityAttributeOrder:GetTypedLinkFacetInformationResponse'</a>,
--   <a>getTypedLinkFacetInformationResponse_identityAttributeOrder</a> -
--   The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
--   
--   <a>$sel:httpStatus:GetTypedLinkFacetInformationResponse'</a>,
--   <a>getTypedLinkFacetInformationResponse_httpStatus</a> - The
--   response's http status code.
newGetTypedLinkFacetInformationResponse :: Int -> GetTypedLinkFacetInformationResponse

-- | The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
getTypedLinkFacetInformationResponse_identityAttributeOrder :: Lens' GetTypedLinkFacetInformationResponse (Maybe [Text])

-- | The response's http status code.
getTypedLinkFacetInformationResponse_httpStatus :: Lens' GetTypedLinkFacetInformationResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance GHC.Show.Show Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance GHC.Read.Read Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformationResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformationResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformationResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetTypedLinkFacetInformation.GetTypedLinkFacetInformation


-- | Retrieves a JSON representation of the schema. See <a>JSON Schema
--   Format</a> for more information.
module Network.AWS.CloudDirectory.GetSchemaAsJson

-- | <i>See:</i> <a>newGetSchemaAsJson</a> smart constructor.
data GetSchemaAsJson
GetSchemaAsJson' :: Text -> GetSchemaAsJson

-- | The ARN of the schema to retrieve.
[$sel:schemaArn:GetSchemaAsJson'] :: GetSchemaAsJson -> Text

-- | Create a value of <a>GetSchemaAsJson</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetSchemaAsJson'</a>,
--   <a>getSchemaAsJson_schemaArn</a> - The ARN of the schema to retrieve.
newGetSchemaAsJson :: Text -> GetSchemaAsJson

-- | The ARN of the schema to retrieve.
getSchemaAsJson_schemaArn :: Lens' GetSchemaAsJson Text

-- | <i>See:</i> <a>newGetSchemaAsJsonResponse</a> smart constructor.
data GetSchemaAsJsonResponse
GetSchemaAsJsonResponse' :: Maybe Text -> Maybe Text -> Int -> GetSchemaAsJsonResponse

-- | The name of the retrieved schema.
[$sel:name:GetSchemaAsJsonResponse'] :: GetSchemaAsJsonResponse -> Maybe Text

-- | The JSON representation of the schema document.
[$sel:document:GetSchemaAsJsonResponse'] :: GetSchemaAsJsonResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSchemaAsJsonResponse'] :: GetSchemaAsJsonResponse -> Int

-- | Create a value of <a>GetSchemaAsJsonResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetSchemaAsJsonResponse'</a>,
--   <a>getSchemaAsJsonResponse_name</a> - The name of the retrieved
--   schema.
--   
--   <a>$sel:document:GetSchemaAsJsonResponse'</a>,
--   <a>getSchemaAsJsonResponse_document</a> - The JSON representation of
--   the schema document.
--   
--   <a>$sel:httpStatus:GetSchemaAsJsonResponse'</a>,
--   <a>getSchemaAsJsonResponse_httpStatus</a> - The response's http status
--   code.
newGetSchemaAsJsonResponse :: Int -> GetSchemaAsJsonResponse

-- | The name of the retrieved schema.
getSchemaAsJsonResponse_name :: Lens' GetSchemaAsJsonResponse (Maybe Text)

-- | The JSON representation of the schema document.
getSchemaAsJsonResponse_document :: Lens' GetSchemaAsJsonResponse (Maybe Text)

-- | The response's http status code.
getSchemaAsJsonResponse_httpStatus :: Lens' GetSchemaAsJsonResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance GHC.Show.Show Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance GHC.Read.Read Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJsonResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJsonResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJsonResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJsonResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJsonResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetSchemaAsJson.GetSchemaAsJson


-- | Retrieves metadata about an object.
module Network.AWS.CloudDirectory.GetObjectInformation

-- | <i>See:</i> <a>newGetObjectInformation</a> smart constructor.
data GetObjectInformation
GetObjectInformation' :: Maybe ConsistencyLevel -> Text -> ObjectReference -> GetObjectInformation

-- | The consistency level at which to retrieve the object information.
[$sel:consistencyLevel:GetObjectInformation'] :: GetObjectInformation -> Maybe ConsistencyLevel

-- | The ARN of the directory being retrieved.
[$sel:directoryArn:GetObjectInformation'] :: GetObjectInformation -> Text

-- | A reference to the object.
[$sel:objectReference:GetObjectInformation'] :: GetObjectInformation -> ObjectReference

-- | Create a value of <a>GetObjectInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:GetObjectInformation'</a>,
--   <a>getObjectInformation_consistencyLevel</a> - The consistency level
--   at which to retrieve the object information.
--   
--   <a>$sel:directoryArn:GetObjectInformation'</a>,
--   <a>getObjectInformation_directoryArn</a> - The ARN of the directory
--   being retrieved.
--   
--   <a>$sel:objectReference:GetObjectInformation'</a>,
--   <a>getObjectInformation_objectReference</a> - A reference to the
--   object.
newGetObjectInformation :: Text -> ObjectReference -> GetObjectInformation

-- | The consistency level at which to retrieve the object information.
getObjectInformation_consistencyLevel :: Lens' GetObjectInformation (Maybe ConsistencyLevel)

-- | The ARN of the directory being retrieved.
getObjectInformation_directoryArn :: Lens' GetObjectInformation Text

-- | A reference to the object.
getObjectInformation_objectReference :: Lens' GetObjectInformation ObjectReference

-- | <i>See:</i> <a>newGetObjectInformationResponse</a> smart constructor.
data GetObjectInformationResponse
GetObjectInformationResponse' :: Maybe [SchemaFacet] -> Maybe Text -> Int -> GetObjectInformationResponse

-- | The facets attached to the specified object. Although the response
--   does not include minor version information, the most recently applied
--   minor version of each Facet is in effect. See GetAppliedSchemaVersion
--   for details.
[$sel:schemaFacets:GetObjectInformationResponse'] :: GetObjectInformationResponse -> Maybe [SchemaFacet]

-- | The <tt>ObjectIdentifier</tt> of the specified object.
[$sel:objectIdentifier:GetObjectInformationResponse'] :: GetObjectInformationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetObjectInformationResponse'] :: GetObjectInformationResponse -> Int

-- | Create a value of <a>GetObjectInformationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacets:GetObjectInformationResponse'</a>,
--   <a>getObjectInformationResponse_schemaFacets</a> - The facets attached
--   to the specified object. Although the response does not include minor
--   version information, the most recently applied minor version of each
--   Facet is in effect. See GetAppliedSchemaVersion for details.
--   
--   <a>$sel:objectIdentifier:GetObjectInformationResponse'</a>,
--   <a>getObjectInformationResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the specified object.
--   
--   <a>$sel:httpStatus:GetObjectInformationResponse'</a>,
--   <a>getObjectInformationResponse_httpStatus</a> - The response's http
--   status code.
newGetObjectInformationResponse :: Int -> GetObjectInformationResponse

-- | The facets attached to the specified object. Although the response
--   does not include minor version information, the most recently applied
--   minor version of each Facet is in effect. See GetAppliedSchemaVersion
--   for details.
getObjectInformationResponse_schemaFacets :: Lens' GetObjectInformationResponse (Maybe [SchemaFacet])

-- | The <tt>ObjectIdentifier</tt> of the specified object.
getObjectInformationResponse_objectIdentifier :: Lens' GetObjectInformationResponse (Maybe Text)

-- | The response's http status code.
getObjectInformationResponse_httpStatus :: Lens' GetObjectInformationResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance GHC.Show.Show Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance GHC.Read.Read Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformationResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformationResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformationResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetObjectInformation.GetObjectInformation


-- | Retrieves attributes within a facet that are associated with an
--   object.
module Network.AWS.CloudDirectory.GetObjectAttributes

-- | <i>See:</i> <a>newGetObjectAttributes</a> smart constructor.
data GetObjectAttributes
GetObjectAttributes' :: Maybe ConsistencyLevel -> Text -> ObjectReference -> SchemaFacet -> [Text] -> GetObjectAttributes

-- | The consistency level at which to retrieve the attributes on an
--   object.
[$sel:consistencyLevel:GetObjectAttributes'] :: GetObjectAttributes -> Maybe ConsistencyLevel

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides.
[$sel:directoryArn:GetObjectAttributes'] :: GetObjectAttributes -> Text

-- | Reference that identifies the object whose attributes will be
--   retrieved.
[$sel:objectReference:GetObjectAttributes'] :: GetObjectAttributes -> ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
[$sel:schemaFacet:GetObjectAttributes'] :: GetObjectAttributes -> SchemaFacet

-- | List of attribute names whose values will be retrieved.
[$sel:attributeNames:GetObjectAttributes'] :: GetObjectAttributes -> [Text]

-- | Create a value of <a>GetObjectAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_consistencyLevel</a> - The consistency level at
--   which to retrieve the attributes on an object.
--   
--   <a>$sel:directoryArn:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   
--   <a>$sel:objectReference:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_objectReference</a> - Reference that identifies
--   the object whose attributes will be retrieved.
--   
--   <a>$sel:schemaFacet:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_schemaFacet</a> - Identifier for the facet
--   whose attributes will be retrieved. See SchemaFacet for details.
--   
--   <a>$sel:attributeNames:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_attributeNames</a> - List of attribute names
--   whose values will be retrieved.
newGetObjectAttributes :: Text -> ObjectReference -> SchemaFacet -> GetObjectAttributes

-- | The consistency level at which to retrieve the attributes on an
--   object.
getObjectAttributes_consistencyLevel :: Lens' GetObjectAttributes (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides.
getObjectAttributes_directoryArn :: Lens' GetObjectAttributes Text

-- | Reference that identifies the object whose attributes will be
--   retrieved.
getObjectAttributes_objectReference :: Lens' GetObjectAttributes ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
getObjectAttributes_schemaFacet :: Lens' GetObjectAttributes SchemaFacet

-- | List of attribute names whose values will be retrieved.
getObjectAttributes_attributeNames :: Lens' GetObjectAttributes [Text]

-- | <i>See:</i> <a>newGetObjectAttributesResponse</a> smart constructor.
data GetObjectAttributesResponse
GetObjectAttributesResponse' :: Maybe [AttributeKeyAndValue] -> Int -> GetObjectAttributesResponse

-- | The attributes that are associated with the object.
[$sel:attributes:GetObjectAttributesResponse'] :: GetObjectAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | The response's http status code.
[$sel:httpStatus:GetObjectAttributesResponse'] :: GetObjectAttributesResponse -> Int

-- | Create a value of <a>GetObjectAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetObjectAttributesResponse'</a>,
--   <a>getObjectAttributesResponse_attributes</a> - The attributes that
--   are associated with the object.
--   
--   <a>$sel:httpStatus:GetObjectAttributesResponse'</a>,
--   <a>getObjectAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetObjectAttributesResponse :: Int -> GetObjectAttributesResponse

-- | The attributes that are associated with the object.
getObjectAttributesResponse_attributes :: Lens' GetObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | The response's http status code.
getObjectAttributesResponse_httpStatus :: Lens' GetObjectAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetObjectAttributes.GetObjectAttributes


-- | Retrieves attributes that are associated with a typed link.
module Network.AWS.CloudDirectory.GetLinkAttributes

-- | <i>See:</i> <a>newGetLinkAttributes</a> smart constructor.
data GetLinkAttributes
GetLinkAttributes' :: Maybe ConsistencyLevel -> Text -> TypedLinkSpecifier -> [Text] -> GetLinkAttributes

-- | The consistency level at which to retrieve the attributes on a typed
--   link.
[$sel:consistencyLevel:GetLinkAttributes'] :: GetLinkAttributes -> Maybe ConsistencyLevel

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the typed link resides. For more information, see arns or
--   <a>Typed Links</a>.
[$sel:directoryArn:GetLinkAttributes'] :: GetLinkAttributes -> Text

-- | Allows a typed link specifier to be accepted as input.
[$sel:typedLinkSpecifier:GetLinkAttributes'] :: GetLinkAttributes -> TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
[$sel:attributeNames:GetLinkAttributes'] :: GetLinkAttributes -> [Text]

-- | Create a value of <a>GetLinkAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_consistencyLevel</a> - The consistency level at
--   which to retrieve the attributes on a typed link.
--   
--   <a>$sel:directoryArn:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_directoryArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the Directory where the typed link resides.
--   For more information, see arns or <a>Typed Links</a>.
--   
--   <a>$sel:typedLinkSpecifier:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_typedLinkSpecifier</a> - Allows a typed link
--   specifier to be accepted as input.
--   
--   <a>$sel:attributeNames:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_attributeNames</a> - A list of attribute names
--   whose values will be retrieved.
newGetLinkAttributes :: Text -> TypedLinkSpecifier -> GetLinkAttributes

-- | The consistency level at which to retrieve the attributes on a typed
--   link.
getLinkAttributes_consistencyLevel :: Lens' GetLinkAttributes (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the typed link resides. For more information, see arns or
--   <a>Typed Links</a>.
getLinkAttributes_directoryArn :: Lens' GetLinkAttributes Text

-- | Allows a typed link specifier to be accepted as input.
getLinkAttributes_typedLinkSpecifier :: Lens' GetLinkAttributes TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
getLinkAttributes_attributeNames :: Lens' GetLinkAttributes [Text]

-- | <i>See:</i> <a>newGetLinkAttributesResponse</a> smart constructor.
data GetLinkAttributesResponse
GetLinkAttributesResponse' :: Maybe [AttributeKeyAndValue] -> Int -> GetLinkAttributesResponse

-- | The attributes that are associated with the typed link.
[$sel:attributes:GetLinkAttributesResponse'] :: GetLinkAttributesResponse -> Maybe [AttributeKeyAndValue]

-- | The response's http status code.
[$sel:httpStatus:GetLinkAttributesResponse'] :: GetLinkAttributesResponse -> Int

-- | Create a value of <a>GetLinkAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetLinkAttributesResponse'</a>,
--   <a>getLinkAttributesResponse_attributes</a> - The attributes that are
--   associated with the typed link.
--   
--   <a>$sel:httpStatus:GetLinkAttributesResponse'</a>,
--   <a>getLinkAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetLinkAttributesResponse :: Int -> GetLinkAttributesResponse

-- | The attributes that are associated with the typed link.
getLinkAttributesResponse_attributes :: Lens' GetLinkAttributesResponse (Maybe [AttributeKeyAndValue])

-- | The response's http status code.
getLinkAttributesResponse_httpStatus :: Lens' GetLinkAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetLinkAttributes.GetLinkAttributes


-- | Gets details of the Facet, such as facet name, attributes, Rules, or
--   <tt>ObjectType</tt>. You can call this on all kinds of schema facets
--   -- published, development, or applied.
module Network.AWS.CloudDirectory.GetFacet

-- | <i>See:</i> <a>newGetFacet</a> smart constructor.
data GetFacet
GetFacet' :: Text -> Text -> GetFacet

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
[$sel:schemaArn:GetFacet'] :: GetFacet -> Text

-- | The name of the facet to retrieve.
[$sel:name:GetFacet'] :: GetFacet -> Text

-- | Create a value of <a>GetFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetFacet'</a>, <a>getFacet_schemaArn</a> - The
--   Amazon Resource Name (ARN) that is associated with the Facet. For more
--   information, see arns.
--   
--   <a>$sel:name:GetFacet'</a>, <a>getFacet_name</a> - The name of the
--   facet to retrieve.
newGetFacet :: Text -> Text -> GetFacet

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
getFacet_schemaArn :: Lens' GetFacet Text

-- | The name of the facet to retrieve.
getFacet_name :: Lens' GetFacet Text

-- | <i>See:</i> <a>newGetFacetResponse</a> smart constructor.
data GetFacetResponse
GetFacetResponse' :: Maybe Facet -> Int -> GetFacetResponse

-- | The Facet structure that is associated with the facet.
[$sel:facet:GetFacetResponse'] :: GetFacetResponse -> Maybe Facet

-- | The response's http status code.
[$sel:httpStatus:GetFacetResponse'] :: GetFacetResponse -> Int

-- | Create a value of <a>GetFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:facet:GetFacetResponse'</a>, <a>getFacetResponse_facet</a> -
--   The Facet structure that is associated with the facet.
--   
--   <a>$sel:httpStatus:GetFacetResponse'</a>,
--   <a>getFacetResponse_httpStatus</a> - The response's http status code.
newGetFacetResponse :: Int -> GetFacetResponse

-- | The Facet structure that is associated with the facet.
getFacetResponse_facet :: Lens' GetFacetResponse (Maybe Facet)

-- | The response's http status code.
getFacetResponse_httpStatus :: Lens' GetFacetResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetFacet.GetFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.GetFacet.GetFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.GetFacet.GetFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetFacet.GetFacet
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetFacet.GetFacetResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetFacet.GetFacetResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetFacet.GetFacetResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetFacet.GetFacetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetFacet.GetFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetFacet.GetFacetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetFacet.GetFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetFacet.GetFacet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetFacet.GetFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetFacet.GetFacet
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetFacet.GetFacet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetFacet.GetFacet


-- | Retrieves metadata about a directory.
module Network.AWS.CloudDirectory.GetDirectory

-- | <i>See:</i> <a>newGetDirectory</a> smart constructor.
data GetDirectory
GetDirectory' :: Text -> GetDirectory

-- | The ARN of the directory.
[$sel:directoryArn:GetDirectory'] :: GetDirectory -> Text

-- | Create a value of <a>GetDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:GetDirectory'</a>,
--   <a>getDirectory_directoryArn</a> - The ARN of the directory.
newGetDirectory :: Text -> GetDirectory

-- | The ARN of the directory.
getDirectory_directoryArn :: Lens' GetDirectory Text

-- | <i>See:</i> <a>newGetDirectoryResponse</a> smart constructor.
data GetDirectoryResponse
GetDirectoryResponse' :: Int -> Directory -> GetDirectoryResponse

-- | The response's http status code.
[$sel:httpStatus:GetDirectoryResponse'] :: GetDirectoryResponse -> Int

-- | Metadata about the directory.
[$sel:directory:GetDirectoryResponse'] :: GetDirectoryResponse -> Directory

-- | Create a value of <a>GetDirectoryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDirectoryResponse'</a>,
--   <a>getDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directory:GetDirectoryResponse'</a>,
--   <a>getDirectoryResponse_directory</a> - Metadata about the directory.
newGetDirectoryResponse :: Int -> Directory -> GetDirectoryResponse

-- | The response's http status code.
getDirectoryResponse_httpStatus :: Lens' GetDirectoryResponse Int

-- | Metadata about the directory.
getDirectoryResponse_directory :: Lens' GetDirectoryResponse Directory
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance GHC.Show.Show Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance GHC.Read.Read Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetDirectory.GetDirectoryResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetDirectory.GetDirectoryResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetDirectory.GetDirectoryResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetDirectory.GetDirectoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetDirectory.GetDirectoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetDirectory.GetDirectory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetDirectory.GetDirectory


-- | Returns current applied schema version ARN, including the minor
--   version in use.
module Network.AWS.CloudDirectory.GetAppliedSchemaVersion

-- | <i>See:</i> <a>newGetAppliedSchemaVersion</a> smart constructor.
data GetAppliedSchemaVersion
GetAppliedSchemaVersion' :: Text -> GetAppliedSchemaVersion

-- | The ARN of the applied schema.
[$sel:schemaArn:GetAppliedSchemaVersion'] :: GetAppliedSchemaVersion -> Text

-- | Create a value of <a>GetAppliedSchemaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetAppliedSchemaVersion'</a>,
--   <a>getAppliedSchemaVersion_schemaArn</a> - The ARN of the applied
--   schema.
newGetAppliedSchemaVersion :: Text -> GetAppliedSchemaVersion

-- | The ARN of the applied schema.
getAppliedSchemaVersion_schemaArn :: Lens' GetAppliedSchemaVersion Text

-- | <i>See:</i> <a>newGetAppliedSchemaVersionResponse</a> smart
--   constructor.
data GetAppliedSchemaVersionResponse
GetAppliedSchemaVersionResponse' :: Maybe Text -> Int -> GetAppliedSchemaVersionResponse

-- | Current applied schema ARN, including the minor version in use if one
--   was provided.
[$sel:appliedSchemaArn:GetAppliedSchemaVersionResponse'] :: GetAppliedSchemaVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAppliedSchemaVersionResponse'] :: GetAppliedSchemaVersionResponse -> Int

-- | Create a value of <a>GetAppliedSchemaVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appliedSchemaArn:GetAppliedSchemaVersionResponse'</a>,
--   <a>getAppliedSchemaVersionResponse_appliedSchemaArn</a> - Current
--   applied schema ARN, including the minor version in use if one was
--   provided.
--   
--   <a>$sel:httpStatus:GetAppliedSchemaVersionResponse'</a>,
--   <a>getAppliedSchemaVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetAppliedSchemaVersionResponse :: Int -> GetAppliedSchemaVersionResponse

-- | Current applied schema ARN, including the minor version in use if one
--   was provided.
getAppliedSchemaVersionResponse_appliedSchemaArn :: Lens' GetAppliedSchemaVersionResponse (Maybe Text)

-- | The response's http status code.
getAppliedSchemaVersionResponse_httpStatus :: Lens' GetAppliedSchemaVersionResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance GHC.Show.Show Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance GHC.Read.Read Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance GHC.Generics.Generic Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersionResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersionResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersionResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.GetAppliedSchemaVersion.GetAppliedSchemaVersion


-- | Enables the specified directory. Only disabled directories can be
--   enabled. Once enabled, the directory can then be read and written to.
module Network.AWS.CloudDirectory.EnableDirectory

-- | <i>See:</i> <a>newEnableDirectory</a> smart constructor.
data EnableDirectory
EnableDirectory' :: Text -> EnableDirectory

-- | The ARN of the directory to enable.
[$sel:directoryArn:EnableDirectory'] :: EnableDirectory -> Text

-- | Create a value of <a>EnableDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:EnableDirectory'</a>,
--   <a>enableDirectory_directoryArn</a> - The ARN of the directory to
--   enable.
newEnableDirectory :: Text -> EnableDirectory

-- | The ARN of the directory to enable.
enableDirectory_directoryArn :: Lens' EnableDirectory Text

-- | <i>See:</i> <a>newEnableDirectoryResponse</a> smart constructor.
data EnableDirectoryResponse
EnableDirectoryResponse' :: Int -> Text -> EnableDirectoryResponse

-- | The response's http status code.
[$sel:httpStatus:EnableDirectoryResponse'] :: EnableDirectoryResponse -> Int

-- | The ARN of the enabled directory.
[$sel:directoryArn:EnableDirectoryResponse'] :: EnableDirectoryResponse -> Text

-- | Create a value of <a>EnableDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EnableDirectoryResponse'</a>,
--   <a>enableDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directoryArn:EnableDirectory'</a>,
--   <a>enableDirectoryResponse_directoryArn</a> - The ARN of the enabled
--   directory.
newEnableDirectoryResponse :: Int -> Text -> EnableDirectoryResponse

-- | The response's http status code.
enableDirectoryResponse_httpStatus :: Lens' EnableDirectoryResponse Int

-- | The ARN of the enabled directory.
enableDirectoryResponse_directoryArn :: Lens' EnableDirectoryResponse Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance GHC.Show.Show Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance GHC.Read.Read Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance GHC.Classes.Eq Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance GHC.Generics.Generic Network.AWS.CloudDirectory.EnableDirectory.EnableDirectoryResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.EnableDirectory.EnableDirectoryResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.EnableDirectory.EnableDirectoryResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.EnableDirectory.EnableDirectoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.EnableDirectory.EnableDirectoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.EnableDirectory.EnableDirectory


-- | Disables the specified directory. Disabled directories cannot be read
--   or written to. Only enabled directories can be disabled. Disabled
--   directories may be reenabled.
module Network.AWS.CloudDirectory.DisableDirectory

-- | <i>See:</i> <a>newDisableDirectory</a> smart constructor.
data DisableDirectory
DisableDirectory' :: Text -> DisableDirectory

-- | The ARN of the directory to disable.
[$sel:directoryArn:DisableDirectory'] :: DisableDirectory -> Text

-- | Create a value of <a>DisableDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DisableDirectory'</a>,
--   <a>disableDirectory_directoryArn</a> - The ARN of the directory to
--   disable.
newDisableDirectory :: Text -> DisableDirectory

-- | The ARN of the directory to disable.
disableDirectory_directoryArn :: Lens' DisableDirectory Text

-- | <i>See:</i> <a>newDisableDirectoryResponse</a> smart constructor.
data DisableDirectoryResponse
DisableDirectoryResponse' :: Int -> Text -> DisableDirectoryResponse

-- | The response's http status code.
[$sel:httpStatus:DisableDirectoryResponse'] :: DisableDirectoryResponse -> Int

-- | The ARN of the directory that has been disabled.
[$sel:directoryArn:DisableDirectoryResponse'] :: DisableDirectoryResponse -> Text

-- | Create a value of <a>DisableDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisableDirectoryResponse'</a>,
--   <a>disableDirectoryResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:directoryArn:DisableDirectory'</a>,
--   <a>disableDirectoryResponse_directoryArn</a> - The ARN of the
--   directory that has been disabled.
newDisableDirectoryResponse :: Int -> Text -> DisableDirectoryResponse

-- | The response's http status code.
disableDirectoryResponse_httpStatus :: Lens' DisableDirectoryResponse Int

-- | The ARN of the directory that has been disabled.
disableDirectoryResponse_directoryArn :: Lens' DisableDirectoryResponse Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance GHC.Show.Show Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance GHC.Read.Read Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DisableDirectory.DisableDirectoryResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DisableDirectory.DisableDirectoryResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DisableDirectory.DisableDirectoryResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DisableDirectory.DisableDirectoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DisableDirectory.DisableDirectoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DisableDirectory.DisableDirectory


-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
module Network.AWS.CloudDirectory.DetachTypedLink

-- | <i>See:</i> <a>newDetachTypedLink</a> smart constructor.
data DetachTypedLink
DetachTypedLink' :: Text -> TypedLinkSpecifier -> DetachTypedLink

-- | The Amazon Resource Name (ARN) of the directory where you want to
--   detach the typed link.
[$sel:directoryArn:DetachTypedLink'] :: DetachTypedLink -> Text

-- | Used to accept a typed link specifier as input.
[$sel:typedLinkSpecifier:DetachTypedLink'] :: DetachTypedLink -> TypedLinkSpecifier

-- | Create a value of <a>DetachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachTypedLink'</a>,
--   <a>detachTypedLink_directoryArn</a> - The Amazon Resource Name (ARN)
--   of the directory where you want to detach the typed link.
--   
--   <a>$sel:typedLinkSpecifier:DetachTypedLink'</a>,
--   <a>detachTypedLink_typedLinkSpecifier</a> - Used to accept a typed
--   link specifier as input.
newDetachTypedLink :: Text -> TypedLinkSpecifier -> DetachTypedLink

-- | The Amazon Resource Name (ARN) of the directory where you want to
--   detach the typed link.
detachTypedLink_directoryArn :: Lens' DetachTypedLink Text

-- | Used to accept a typed link specifier as input.
detachTypedLink_typedLinkSpecifier :: Lens' DetachTypedLink TypedLinkSpecifier

-- | <i>See:</i> <a>newDetachTypedLinkResponse</a> smart constructor.
data DetachTypedLinkResponse
DetachTypedLinkResponse' :: DetachTypedLinkResponse

-- | Create a value of <a>DetachTypedLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDetachTypedLinkResponse :: DetachTypedLinkResponse
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLinkResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLinkResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLinkResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLinkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DetachTypedLink.DetachTypedLink


-- | Detaches a policy from an object.
module Network.AWS.CloudDirectory.DetachPolicy

-- | <i>See:</i> <a>newDetachPolicy</a> smart constructor.
data DetachPolicy
DetachPolicy' :: Text -> ObjectReference -> ObjectReference -> DetachPolicy

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where both objects reside. For more information, see arns.
[$sel:directoryArn:DetachPolicy'] :: DetachPolicy -> Text

-- | Reference that identifies the policy object.
[$sel:policyReference:DetachPolicy'] :: DetachPolicy -> ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
[$sel:objectReference:DetachPolicy'] :: DetachPolicy -> ObjectReference

-- | Create a value of <a>DetachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachPolicy'</a>,
--   <a>detachPolicy_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where both objects reside. For more
--   information, see arns.
--   
--   <a>$sel:policyReference:DetachPolicy'</a>,
--   <a>detachPolicy_policyReference</a> - Reference that identifies the
--   policy object.
--   
--   <a>$sel:objectReference:DetachPolicy'</a>,
--   <a>detachPolicy_objectReference</a> - Reference that identifies the
--   object whose policy object will be detached.
newDetachPolicy :: Text -> ObjectReference -> ObjectReference -> DetachPolicy

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where both objects reside. For more information, see arns.
detachPolicy_directoryArn :: Lens' DetachPolicy Text

-- | Reference that identifies the policy object.
detachPolicy_policyReference :: Lens' DetachPolicy ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
detachPolicy_objectReference :: Lens' DetachPolicy ObjectReference

-- | <i>See:</i> <a>newDetachPolicyResponse</a> smart constructor.
data DetachPolicyResponse
DetachPolicyResponse' :: Int -> DetachPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DetachPolicyResponse'] :: DetachPolicyResponse -> Int

-- | Create a value of <a>DetachPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DetachPolicyResponse'</a>,
--   <a>detachPolicyResponse_httpStatus</a> - The response's http status
--   code.
newDetachPolicyResponse :: Int -> DetachPolicyResponse

-- | The response's http status code.
detachPolicyResponse_httpStatus :: Lens' DetachPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachPolicy.DetachPolicyResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachPolicy.DetachPolicyResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachPolicy.DetachPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachPolicy.DetachPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachPolicy.DetachPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DetachPolicy.DetachPolicy


-- | Detaches a given object from the parent object. The object that is to
--   be detached from the parent is specified by the link name.
module Network.AWS.CloudDirectory.DetachObject

-- | <i>See:</i> <a>newDetachObject</a> smart constructor.
data DetachObject
DetachObject' :: Text -> ObjectReference -> Text -> DetachObject

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
[$sel:directoryArn:DetachObject'] :: DetachObject -> Text

-- | The parent reference from which the object with the specified link
--   name is detached.
[$sel:parentReference:DetachObject'] :: DetachObject -> ObjectReference

-- | The link name associated with the object that needs to be detached.
[$sel:linkName:DetachObject'] :: DetachObject -> Text

-- | Create a value of <a>DetachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachObject'</a>,
--   <a>detachObject_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where objects reside. For more
--   information, see arns.
--   
--   <a>$sel:parentReference:DetachObject'</a>,
--   <a>detachObject_parentReference</a> - The parent reference from which
--   the object with the specified link name is detached.
--   
--   <a>$sel:linkName:DetachObject'</a>, <a>detachObject_linkName</a> - The
--   link name associated with the object that needs to be detached.
newDetachObject :: Text -> ObjectReference -> Text -> DetachObject

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
detachObject_directoryArn :: Lens' DetachObject Text

-- | The parent reference from which the object with the specified link
--   name is detached.
detachObject_parentReference :: Lens' DetachObject ObjectReference

-- | The link name associated with the object that needs to be detached.
detachObject_linkName :: Lens' DetachObject Text

-- | <i>See:</i> <a>newDetachObjectResponse</a> smart constructor.
data DetachObjectResponse
DetachObjectResponse' :: Maybe Text -> Int -> DetachObjectResponse

-- | The <tt>ObjectIdentifier</tt> that was detached from the object.
[$sel:detachedObjectIdentifier:DetachObjectResponse'] :: DetachObjectResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DetachObjectResponse'] :: DetachObjectResponse -> Int

-- | Create a value of <a>DetachObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:DetachObjectResponse'</a>,
--   <a>detachObjectResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> that was detached from the object.
--   
--   <a>$sel:httpStatus:DetachObjectResponse'</a>,
--   <a>detachObjectResponse_httpStatus</a> - The response's http status
--   code.
newDetachObjectResponse :: Int -> DetachObjectResponse

-- | The <tt>ObjectIdentifier</tt> that was detached from the object.
detachObjectResponse_detachedObjectIdentifier :: Lens' DetachObjectResponse (Maybe Text)

-- | The response's http status code.
detachObjectResponse_httpStatus :: Lens' DetachObjectResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachObject.DetachObject
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachObject.DetachObject
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachObject.DetachObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachObject.DetachObject
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachObject.DetachObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachObject.DetachObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachObject.DetachObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachObject.DetachObjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DetachObject.DetachObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachObject.DetachObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DetachObject.DetachObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachObject.DetachObject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DetachObject.DetachObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DetachObject.DetachObject
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DetachObject.DetachObject
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DetachObject.DetachObject


-- | Detaches the specified object from the specified index.
module Network.AWS.CloudDirectory.DetachFromIndex

-- | <i>See:</i> <a>newDetachFromIndex</a> smart constructor.
data DetachFromIndex
DetachFromIndex' :: Text -> ObjectReference -> ObjectReference -> DetachFromIndex

-- | The Amazon Resource Name (ARN) of the directory the index and object
--   exist in.
[$sel:directoryArn:DetachFromIndex'] :: DetachFromIndex -> Text

-- | A reference to the index object.
[$sel:indexReference:DetachFromIndex'] :: DetachFromIndex -> ObjectReference

-- | A reference to the object being detached from the index.
[$sel:targetReference:DetachFromIndex'] :: DetachFromIndex -> ObjectReference

-- | Create a value of <a>DetachFromIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachFromIndex'</a>,
--   <a>detachFromIndex_directoryArn</a> - The Amazon Resource Name (ARN)
--   of the directory the index and object exist in.
--   
--   <a>$sel:indexReference:DetachFromIndex'</a>,
--   <a>detachFromIndex_indexReference</a> - A reference to the index
--   object.
--   
--   <a>$sel:targetReference:DetachFromIndex'</a>,
--   <a>detachFromIndex_targetReference</a> - A reference to the object
--   being detached from the index.
newDetachFromIndex :: Text -> ObjectReference -> ObjectReference -> DetachFromIndex

-- | The Amazon Resource Name (ARN) of the directory the index and object
--   exist in.
detachFromIndex_directoryArn :: Lens' DetachFromIndex Text

-- | A reference to the index object.
detachFromIndex_indexReference :: Lens' DetachFromIndex ObjectReference

-- | A reference to the object being detached from the index.
detachFromIndex_targetReference :: Lens' DetachFromIndex ObjectReference

-- | <i>See:</i> <a>newDetachFromIndexResponse</a> smart constructor.
data DetachFromIndexResponse
DetachFromIndexResponse' :: Maybe Text -> Int -> DetachFromIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
[$sel:detachedObjectIdentifier:DetachFromIndexResponse'] :: DetachFromIndexResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DetachFromIndexResponse'] :: DetachFromIndexResponse -> Int

-- | Create a value of <a>DetachFromIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:DetachFromIndexResponse'</a>,
--   <a>detachFromIndexResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
--   
--   <a>$sel:httpStatus:DetachFromIndexResponse'</a>,
--   <a>detachFromIndexResponse_httpStatus</a> - The response's http status
--   code.
newDetachFromIndexResponse :: Int -> DetachFromIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
detachFromIndexResponse_detachedObjectIdentifier :: Lens' DetachFromIndexResponse (Maybe Text)

-- | The response's http status code.
detachFromIndexResponse_httpStatus :: Lens' DetachFromIndexResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndexResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DetachFromIndex.DetachFromIndex


-- | Deletes a TypedLinkFacet. For more information, see <a>Typed
--   Links</a>.
module Network.AWS.CloudDirectory.DeleteTypedLinkFacet

-- | <i>See:</i> <a>newDeleteTypedLinkFacet</a> smart constructor.
data DeleteTypedLinkFacet
DeleteTypedLinkFacet' :: Text -> Text -> DeleteTypedLinkFacet

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:DeleteTypedLinkFacet'] :: DeleteTypedLinkFacet -> Text

-- | The unique name of the typed link facet.
[$sel:name:DeleteTypedLinkFacet'] :: DeleteTypedLinkFacet -> Text

-- | Create a value of <a>DeleteTypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteTypedLinkFacet'</a>,
--   <a>deleteTypedLinkFacet_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:name:DeleteTypedLinkFacet'</a>,
--   <a>deleteTypedLinkFacet_name</a> - The unique name of the typed link
--   facet.
newDeleteTypedLinkFacet :: Text -> Text -> DeleteTypedLinkFacet

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
deleteTypedLinkFacet_schemaArn :: Lens' DeleteTypedLinkFacet Text

-- | The unique name of the typed link facet.
deleteTypedLinkFacet_name :: Lens' DeleteTypedLinkFacet Text

-- | <i>See:</i> <a>newDeleteTypedLinkFacetResponse</a> smart constructor.
data DeleteTypedLinkFacetResponse
DeleteTypedLinkFacetResponse' :: Int -> DeleteTypedLinkFacetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTypedLinkFacetResponse'] :: DeleteTypedLinkFacetResponse -> Int

-- | Create a value of <a>DeleteTypedLinkFacetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTypedLinkFacetResponse'</a>,
--   <a>deleteTypedLinkFacetResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTypedLinkFacetResponse :: Int -> DeleteTypedLinkFacetResponse

-- | The response's http status code.
deleteTypedLinkFacetResponse_httpStatus :: Lens' DeleteTypedLinkFacetResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacetResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacetResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacetResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DeleteTypedLinkFacet.DeleteTypedLinkFacet


-- | Deletes a given schema. Schemas in a development and published state
--   can only be deleted.
module Network.AWS.CloudDirectory.DeleteSchema

-- | <i>See:</i> <a>newDeleteSchema</a> smart constructor.
data DeleteSchema
DeleteSchema' :: Text -> DeleteSchema

-- | The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
[$sel:schemaArn:DeleteSchema'] :: DeleteSchema -> Text

-- | Create a value of <a>DeleteSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteSchema'</a>, <a>deleteSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
newDeleteSchema :: Text -> DeleteSchema

-- | The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
deleteSchema_schemaArn :: Lens' DeleteSchema Text

-- | <i>See:</i> <a>newDeleteSchemaResponse</a> smart constructor.
data DeleteSchemaResponse
DeleteSchemaResponse' :: Maybe Text -> Int -> DeleteSchemaResponse

-- | The input ARN that is returned as part of the response. For more
--   information, see arns.
[$sel:schemaArn:DeleteSchemaResponse'] :: DeleteSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteSchemaResponse'] :: DeleteSchemaResponse -> Int

-- | Create a value of <a>DeleteSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteSchema'</a>,
--   <a>deleteSchemaResponse_schemaArn</a> - The input ARN that is returned
--   as part of the response. For more information, see arns.
--   
--   <a>$sel:httpStatus:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSchemaResponse :: Int -> DeleteSchemaResponse

-- | The input ARN that is returned as part of the response. For more
--   information, see arns.
deleteSchemaResponse_schemaArn :: Lens' DeleteSchemaResponse (Maybe Text)

-- | The response's http status code.
deleteSchemaResponse_httpStatus :: Lens' DeleteSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteSchema.DeleteSchemaResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteSchema.DeleteSchemaResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteSchema.DeleteSchemaResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteSchema.DeleteSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteSchema.DeleteSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DeleteSchema.DeleteSchema


-- | Deletes an object and its associated attributes. Only objects with no
--   children and no parents can be deleted. The maximum number of
--   attributes that can be deleted during an object deletion is 30. For
--   more information, see <a>Amazon Cloud Directory Limits</a>.
module Network.AWS.CloudDirectory.DeleteObject

-- | <i>See:</i> <a>newDeleteObject</a> smart constructor.
data DeleteObject
DeleteObject' :: Text -> ObjectReference -> DeleteObject

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
[$sel:directoryArn:DeleteObject'] :: DeleteObject -> Text

-- | A reference that identifies the object.
[$sel:objectReference:DeleteObject'] :: DeleteObject -> ObjectReference

-- | Create a value of <a>DeleteObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DeleteObject'</a>,
--   <a>deleteObject_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where the object resides. For more
--   information, see arns.
--   
--   <a>$sel:objectReference:DeleteObject'</a>,
--   <a>deleteObject_objectReference</a> - A reference that identifies the
--   object.
newDeleteObject :: Text -> ObjectReference -> DeleteObject

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
deleteObject_directoryArn :: Lens' DeleteObject Text

-- | A reference that identifies the object.
deleteObject_objectReference :: Lens' DeleteObject ObjectReference

-- | <i>See:</i> <a>newDeleteObjectResponse</a> smart constructor.
data DeleteObjectResponse
DeleteObjectResponse' :: Int -> DeleteObjectResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteObjectResponse'] :: DeleteObjectResponse -> Int

-- | Create a value of <a>DeleteObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteObjectResponse'</a>,
--   <a>deleteObjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteObjectResponse :: Int -> DeleteObjectResponse

-- | The response's http status code.
deleteObjectResponse_httpStatus :: Lens' DeleteObjectResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteObject.DeleteObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteObject.DeleteObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteObject.DeleteObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteObject.DeleteObjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteObject.DeleteObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DeleteObject.DeleteObject
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DeleteObject.DeleteObject


-- | Deletes a given Facet. All attributes and Rules that are associated
--   with the facet will be deleted. Only development schema facets are
--   allowed deletion.
module Network.AWS.CloudDirectory.DeleteFacet

-- | <i>See:</i> <a>newDeleteFacet</a> smart constructor.
data DeleteFacet
DeleteFacet' :: Text -> Text -> DeleteFacet

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
[$sel:schemaArn:DeleteFacet'] :: DeleteFacet -> Text

-- | The name of the facet to delete.
[$sel:name:DeleteFacet'] :: DeleteFacet -> Text

-- | Create a value of <a>DeleteFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteFacet'</a>, <a>deleteFacet_schemaArn</a> - The
--   Amazon Resource Name (ARN) that is associated with the Facet. For more
--   information, see arns.
--   
--   <a>$sel:name:DeleteFacet'</a>, <a>deleteFacet_name</a> - The name of
--   the facet to delete.
newDeleteFacet :: Text -> Text -> DeleteFacet

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
deleteFacet_schemaArn :: Lens' DeleteFacet Text

-- | The name of the facet to delete.
deleteFacet_name :: Lens' DeleteFacet Text

-- | <i>See:</i> <a>newDeleteFacetResponse</a> smart constructor.
data DeleteFacetResponse
DeleteFacetResponse' :: Int -> DeleteFacetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteFacetResponse'] :: DeleteFacetResponse -> Int

-- | Create a value of <a>DeleteFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFacetResponse'</a>,
--   <a>deleteFacetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFacetResponse :: Int -> DeleteFacetResponse

-- | The response's http status code.
deleteFacetResponse_httpStatus :: Lens' DeleteFacetResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteFacet.DeleteFacetResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteFacet.DeleteFacetResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteFacet.DeleteFacetResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteFacet.DeleteFacetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteFacet.DeleteFacetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DeleteFacet.DeleteFacet


-- | Deletes a directory. Only disabled directories can be deleted. A
--   deleted directory cannot be undone. Exercise extreme caution when
--   deleting directories.
module Network.AWS.CloudDirectory.DeleteDirectory

-- | <i>See:</i> <a>newDeleteDirectory</a> smart constructor.
data DeleteDirectory
DeleteDirectory' :: Text -> DeleteDirectory

-- | The ARN of the directory to delete.
[$sel:directoryArn:DeleteDirectory'] :: DeleteDirectory -> Text

-- | Create a value of <a>DeleteDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DeleteDirectory'</a>,
--   <a>deleteDirectory_directoryArn</a> - The ARN of the directory to
--   delete.
newDeleteDirectory :: Text -> DeleteDirectory

-- | The ARN of the directory to delete.
deleteDirectory_directoryArn :: Lens' DeleteDirectory Text

-- | <i>See:</i> <a>newDeleteDirectoryResponse</a> smart constructor.
data DeleteDirectoryResponse
DeleteDirectoryResponse' :: Int -> Text -> DeleteDirectoryResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDirectoryResponse'] :: DeleteDirectoryResponse -> Int

-- | The ARN of the deleted directory.
[$sel:directoryArn:DeleteDirectoryResponse'] :: DeleteDirectoryResponse -> Text

-- | Create a value of <a>DeleteDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDirectoryResponse'</a>,
--   <a>deleteDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directoryArn:DeleteDirectory'</a>,
--   <a>deleteDirectoryResponse_directoryArn</a> - The ARN of the deleted
--   directory.
newDeleteDirectoryResponse :: Int -> Text -> DeleteDirectoryResponse

-- | The response's http status code.
deleteDirectoryResponse_httpStatus :: Lens' DeleteDirectoryResponse Int

-- | The ARN of the deleted directory.
deleteDirectoryResponse_directoryArn :: Lens' DeleteDirectoryResponse Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance GHC.Generics.Generic Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectoryResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectoryResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectoryResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.DeleteDirectory.DeleteDirectory


-- | Creates a TypedLinkFacet. For more information, see <a>Typed
--   Links</a>.
module Network.AWS.CloudDirectory.CreateTypedLinkFacet

-- | <i>See:</i> <a>newCreateTypedLinkFacet</a> smart constructor.
data CreateTypedLinkFacet
CreateTypedLinkFacet' :: Text -> TypedLinkFacet -> CreateTypedLinkFacet

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:CreateTypedLinkFacet'] :: CreateTypedLinkFacet -> Text

-- | Facet structure that is associated with the typed link facet.
[$sel:facet:CreateTypedLinkFacet'] :: CreateTypedLinkFacet -> TypedLinkFacet

-- | Create a value of <a>CreateTypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:CreateTypedLinkFacet'</a>,
--   <a>createTypedLinkFacet_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:facet:CreateTypedLinkFacet'</a>,
--   <a>createTypedLinkFacet_facet</a> - Facet structure that is associated
--   with the typed link facet.
newCreateTypedLinkFacet :: Text -> TypedLinkFacet -> CreateTypedLinkFacet

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
createTypedLinkFacet_schemaArn :: Lens' CreateTypedLinkFacet Text

-- | Facet structure that is associated with the typed link facet.
createTypedLinkFacet_facet :: Lens' CreateTypedLinkFacet TypedLinkFacet

-- | <i>See:</i> <a>newCreateTypedLinkFacetResponse</a> smart constructor.
data CreateTypedLinkFacetResponse
CreateTypedLinkFacetResponse' :: Int -> CreateTypedLinkFacetResponse

-- | The response's http status code.
[$sel:httpStatus:CreateTypedLinkFacetResponse'] :: CreateTypedLinkFacetResponse -> Int

-- | Create a value of <a>CreateTypedLinkFacetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTypedLinkFacetResponse'</a>,
--   <a>createTypedLinkFacetResponse_httpStatus</a> - The response's http
--   status code.
newCreateTypedLinkFacetResponse :: Int -> CreateTypedLinkFacetResponse

-- | The response's http status code.
createTypedLinkFacetResponse_httpStatus :: Lens' CreateTypedLinkFacetResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacetResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacetResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacetResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.CreateTypedLinkFacet.CreateTypedLinkFacet


-- | Creates a new schema in a development state. A schema can exist in
--   three phases:
--   
--   <ul>
--   <li><i>Development:</i> This is a mutable phase of the schema. All new
--   schemas are in the development phase. Once the schema is finalized, it
--   can be published.</li>
--   <li><i>Published:</i> Published schemas are immutable and have a
--   version associated with them.</li>
--   <li><i>Applied:</i> Applied schemas are mutable in a way that allows
--   you to add new schema facets. You can also add new, nonrequired
--   attributes to existing schema facets. You can apply only published
--   schemas to directories.</li>
--   </ul>
module Network.AWS.CloudDirectory.CreateSchema

-- | <i>See:</i> <a>newCreateSchema</a> smart constructor.
data CreateSchema
CreateSchema' :: Text -> CreateSchema

-- | The name that is associated with the schema. This is unique to each
--   account and in each region.
[$sel:name:CreateSchema'] :: CreateSchema -> Text

-- | Create a value of <a>CreateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSchema'</a>, <a>createSchema_name</a> - The name
--   that is associated with the schema. This is unique to each account and
--   in each region.
newCreateSchema :: Text -> CreateSchema

-- | The name that is associated with the schema. This is unique to each
--   account and in each region.
createSchema_name :: Lens' CreateSchema Text

-- | <i>See:</i> <a>newCreateSchemaResponse</a> smart constructor.
data CreateSchemaResponse
CreateSchemaResponse' :: Maybe Text -> Int -> CreateSchemaResponse

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSchemaResponse'] :: CreateSchemaResponse -> Int

-- | Create a value of <a>CreateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:httpStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_httpStatus</a> - The response's http status
--   code.
newCreateSchemaResponse :: Int -> CreateSchemaResponse

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
createSchemaResponse_schemaArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The response's http status code.
createSchemaResponse_httpStatus :: Lens' CreateSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateSchema.CreateSchemaResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateSchema.CreateSchemaResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateSchema.CreateSchemaResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateSchema.CreateSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateSchema.CreateSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.CreateSchema.CreateSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.CreateSchema.CreateSchema


-- | Creates an object in a Directory. Additionally attaches the object to
--   a parent, if a parent reference and <tt>LinkName</tt> is specified. An
--   object is simply a collection of Facet attributes. You can also use
--   this API call to create a policy object, if the facet from which you
--   create the object is a policy facet.
module Network.AWS.CloudDirectory.CreateObject

-- | <i>See:</i> <a>newCreateObject</a> smart constructor.
data CreateObject
CreateObject' :: Maybe Text -> Maybe ObjectReference -> Maybe [AttributeKeyAndValue] -> Text -> [SchemaFacet] -> CreateObject

-- | The name of link that is used to attach this object to a parent.
[$sel:linkName:CreateObject'] :: CreateObject -> Maybe Text

-- | If specified, the parent reference to which this object will be
--   attached.
[$sel:parentReference:CreateObject'] :: CreateObject -> Maybe ObjectReference

-- | The attribute map whose attribute ARN contains the key and attribute
--   value as the map value.
[$sel:objectAttributeList:CreateObject'] :: CreateObject -> Maybe [AttributeKeyAndValue]

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   in which the object will be created. For more information, see arns.
[$sel:directoryArn:CreateObject'] :: CreateObject -> Text

-- | A list of schema facets to be associated with the object. Do not
--   provide minor version components. See SchemaFacet for details.
[$sel:schemaFacets:CreateObject'] :: CreateObject -> [SchemaFacet]

-- | Create a value of <a>CreateObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:CreateObject'</a>, <a>createObject_linkName</a> - The
--   name of link that is used to attach this object to a parent.
--   
--   <a>$sel:parentReference:CreateObject'</a>,
--   <a>createObject_parentReference</a> - If specified, the parent
--   reference to which this object will be attached.
--   
--   <a>$sel:objectAttributeList:CreateObject'</a>,
--   <a>createObject_objectAttributeList</a> - The attribute map whose
--   attribute ARN contains the key and attribute value as the map value.
--   
--   <a>$sel:directoryArn:CreateObject'</a>,
--   <a>createObject_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory in which the object will be created.
--   For more information, see arns.
--   
--   <a>$sel:schemaFacets:CreateObject'</a>,
--   <a>createObject_schemaFacets</a> - A list of schema facets to be
--   associated with the object. Do not provide minor version components.
--   See SchemaFacet for details.
newCreateObject :: Text -> CreateObject

-- | The name of link that is used to attach this object to a parent.
createObject_linkName :: Lens' CreateObject (Maybe Text)

-- | If specified, the parent reference to which this object will be
--   attached.
createObject_parentReference :: Lens' CreateObject (Maybe ObjectReference)

-- | The attribute map whose attribute ARN contains the key and attribute
--   value as the map value.
createObject_objectAttributeList :: Lens' CreateObject (Maybe [AttributeKeyAndValue])

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   in which the object will be created. For more information, see arns.
createObject_directoryArn :: Lens' CreateObject Text

-- | A list of schema facets to be associated with the object. Do not
--   provide minor version components. See SchemaFacet for details.
createObject_schemaFacets :: Lens' CreateObject [SchemaFacet]

-- | <i>See:</i> <a>newCreateObjectResponse</a> smart constructor.
data CreateObjectResponse
CreateObjectResponse' :: Maybe Text -> Int -> CreateObjectResponse

-- | The identifier that is associated with the object.
[$sel:objectIdentifier:CreateObjectResponse'] :: CreateObjectResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateObjectResponse'] :: CreateObjectResponse -> Int

-- | Create a value of <a>CreateObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:CreateObjectResponse'</a>,
--   <a>createObjectResponse_objectIdentifier</a> - The identifier that is
--   associated with the object.
--   
--   <a>$sel:httpStatus:CreateObjectResponse'</a>,
--   <a>createObjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateObjectResponse :: Int -> CreateObjectResponse

-- | The identifier that is associated with the object.
createObjectResponse_objectIdentifier :: Lens' CreateObjectResponse (Maybe Text)

-- | The response's http status code.
createObjectResponse_httpStatus :: Lens' CreateObjectResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateObject.CreateObject
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateObject.CreateObject
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateObject.CreateObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateObject.CreateObject
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateObject.CreateObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateObject.CreateObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateObject.CreateObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateObject.CreateObjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.CreateObject.CreateObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateObject.CreateObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.CreateObject.CreateObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateObject.CreateObject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.CreateObject.CreateObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.CreateObject.CreateObject
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.CreateObject.CreateObject
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.CreateObject.CreateObject


-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
module Network.AWS.CloudDirectory.CreateIndex

-- | <i>See:</i> <a>newCreateIndex</a> smart constructor.
data CreateIndex
CreateIndex' :: Maybe Text -> Maybe ObjectReference -> Text -> [AttributeKey] -> Bool -> CreateIndex

-- | The name of the link between the parent object and the index object.
[$sel:linkName:CreateIndex'] :: CreateIndex -> Maybe Text

-- | A reference to the parent object that contains the index object.
[$sel:parentReference:CreateIndex'] :: CreateIndex -> Maybe ObjectReference

-- | The ARN of the directory where the index should be created.
[$sel:directoryArn:CreateIndex'] :: CreateIndex -> Text

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
[$sel:orderedIndexedAttributeList:CreateIndex'] :: CreateIndex -> [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
[$sel:isUnique:CreateIndex'] :: CreateIndex -> Bool

-- | Create a value of <a>CreateIndex</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:CreateIndex'</a>, <a>createIndex_linkName</a> - The
--   name of the link between the parent object and the index object.
--   
--   <a>$sel:parentReference:CreateIndex'</a>,
--   <a>createIndex_parentReference</a> - A reference to the parent object
--   that contains the index object.
--   
--   <a>$sel:directoryArn:CreateIndex'</a>, <a>createIndex_directoryArn</a>
--   - The ARN of the directory where the index should be created.
--   
--   <a>$sel:orderedIndexedAttributeList:CreateIndex'</a>,
--   <a>createIndex_orderedIndexedAttributeList</a> - Specifies the
--   attributes that should be indexed on. Currently only a single
--   attribute is supported.
--   
--   <a>$sel:isUnique:CreateIndex'</a>, <a>createIndex_isUnique</a> -
--   Indicates whether the attribute that is being indexed has unique
--   values or not.
newCreateIndex :: Text -> Bool -> CreateIndex

-- | The name of the link between the parent object and the index object.
createIndex_linkName :: Lens' CreateIndex (Maybe Text)

-- | A reference to the parent object that contains the index object.
createIndex_parentReference :: Lens' CreateIndex (Maybe ObjectReference)

-- | The ARN of the directory where the index should be created.
createIndex_directoryArn :: Lens' CreateIndex Text

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
createIndex_orderedIndexedAttributeList :: Lens' CreateIndex [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
createIndex_isUnique :: Lens' CreateIndex Bool

-- | <i>See:</i> <a>newCreateIndexResponse</a> smart constructor.
data CreateIndexResponse
CreateIndexResponse' :: Maybe Text -> Int -> CreateIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
[$sel:objectIdentifier:CreateIndexResponse'] :: CreateIndexResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateIndexResponse'] :: CreateIndexResponse -> Int

-- | Create a value of <a>CreateIndexResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:CreateIndexResponse'</a>,
--   <a>createIndexResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the index created by this operation.
--   
--   <a>$sel:httpStatus:CreateIndexResponse'</a>,
--   <a>createIndexResponse_httpStatus</a> - The response's http status
--   code.
newCreateIndexResponse :: Int -> CreateIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
createIndexResponse_objectIdentifier :: Lens' CreateIndexResponse (Maybe Text)

-- | The response's http status code.
createIndexResponse_httpStatus :: Lens' CreateIndexResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateIndex.CreateIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateIndex.CreateIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateIndex.CreateIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateIndex.CreateIndexResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateIndex.CreateIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.CreateIndex.CreateIndex
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.CreateIndex.CreateIndex


-- | Creates a new Facet in a schema. Facet creation is allowed only in
--   development or applied schemas.
module Network.AWS.CloudDirectory.CreateFacet

-- | <i>See:</i> <a>newCreateFacet</a> smart constructor.
data CreateFacet
CreateFacet' :: Maybe FacetStyle -> Maybe [FacetAttribute] -> Maybe ObjectType -> Text -> Text -> CreateFacet

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
[$sel:facetStyle:CreateFacet'] :: CreateFacet -> Maybe FacetStyle

-- | The attributes that are associated with the Facet.
[$sel:attributes:CreateFacet'] :: CreateFacet -> Maybe [FacetAttribute]

-- | Specifies whether a given object created from this facet is of type
--   node, leaf node, policy or index.
--   
--   <ul>
--   <li>Node: Can have multiple children but one parent.</li>
--   <li>Leaf node: Cannot have children but can have multiple
--   parents.</li>
--   <li>Policy: Allows you to store a policy document and policy type. For
--   more information, see <a>Policies</a>.</li>
--   <li>Index: Can be created with the Index API.</li>
--   </ul>
[$sel:objectType:CreateFacet'] :: CreateFacet -> Maybe ObjectType

-- | The schema ARN in which the new Facet will be created. For more
--   information, see arns.
[$sel:schemaArn:CreateFacet'] :: CreateFacet -> Text

-- | The name of the Facet, which is unique for a given schema.
[$sel:name:CreateFacet'] :: CreateFacet -> Text

-- | Create a value of <a>CreateFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:facetStyle:CreateFacet'</a>, <a>createFacet_facetStyle</a> -
--   There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
--   
--   <a>$sel:attributes:CreateFacet'</a>, <a>createFacet_attributes</a> -
--   The attributes that are associated with the Facet.
--   
--   <a>$sel:objectType:CreateFacet'</a>, <a>createFacet_objectType</a> -
--   Specifies whether a given object created from this facet is of type
--   node, leaf node, policy or index.
--   
--   <ul>
--   <li>Node: Can have multiple children but one parent.</li>
--   <li>Leaf node: Cannot have children but can have multiple
--   parents.</li>
--   <li>Policy: Allows you to store a policy document and policy type. For
--   more information, see <a>Policies</a>.</li>
--   <li>Index: Can be created with the Index API.</li>
--   </ul>
--   
--   <a>$sel:schemaArn:CreateFacet'</a>, <a>createFacet_schemaArn</a> - The
--   schema ARN in which the new Facet will be created. For more
--   information, see arns.
--   
--   <a>$sel:name:CreateFacet'</a>, <a>createFacet_name</a> - The name of
--   the Facet, which is unique for a given schema.
newCreateFacet :: Text -> Text -> CreateFacet

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
createFacet_facetStyle :: Lens' CreateFacet (Maybe FacetStyle)

-- | The attributes that are associated with the Facet.
createFacet_attributes :: Lens' CreateFacet (Maybe [FacetAttribute])

-- | Specifies whether a given object created from this facet is of type
--   node, leaf node, policy or index.
--   
--   <ul>
--   <li>Node: Can have multiple children but one parent.</li>
--   <li>Leaf node: Cannot have children but can have multiple
--   parents.</li>
--   <li>Policy: Allows you to store a policy document and policy type. For
--   more information, see <a>Policies</a>.</li>
--   <li>Index: Can be created with the Index API.</li>
--   </ul>
createFacet_objectType :: Lens' CreateFacet (Maybe ObjectType)

-- | The schema ARN in which the new Facet will be created. For more
--   information, see arns.
createFacet_schemaArn :: Lens' CreateFacet Text

-- | The name of the Facet, which is unique for a given schema.
createFacet_name :: Lens' CreateFacet Text

-- | <i>See:</i> <a>newCreateFacetResponse</a> smart constructor.
data CreateFacetResponse
CreateFacetResponse' :: Int -> CreateFacetResponse

-- | The response's http status code.
[$sel:httpStatus:CreateFacetResponse'] :: CreateFacetResponse -> Int

-- | Create a value of <a>CreateFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateFacetResponse'</a>,
--   <a>createFacetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFacetResponse :: Int -> CreateFacetResponse

-- | The response's http status code.
createFacetResponse_httpStatus :: Lens' CreateFacetResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateFacet.CreateFacetResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateFacet.CreateFacetResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateFacet.CreateFacetResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateFacet.CreateFacetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateFacet.CreateFacetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.CreateFacet.CreateFacet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.CreateFacet.CreateFacet


-- | Creates a Directory by copying the published schema into the
--   directory. A directory cannot be created without a schema.
--   
--   You can also quickly create a directory using a managed schema, called
--   the <tt>QuickStartSchema</tt>. For more information, see <a>Managed
--   Schema</a> in the <i>Amazon Cloud Directory Developer Guide</i>.
module Network.AWS.CloudDirectory.CreateDirectory

-- | <i>See:</i> <a>newCreateDirectory</a> smart constructor.
data CreateDirectory
CreateDirectory' :: Text -> Text -> CreateDirectory

-- | The name of the Directory. Should be unique per account, per region.
[$sel:name:CreateDirectory'] :: CreateDirectory -> Text

-- | The Amazon Resource Name (ARN) of the published schema that will be
--   copied into the data Directory. For more information, see arns.
[$sel:schemaArn:CreateDirectory'] :: CreateDirectory -> Text

-- | Create a value of <a>CreateDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateDirectory'</a>, <a>createDirectory_name</a> - The
--   name of the Directory. Should be unique per account, per region.
--   
--   <a>$sel:schemaArn:CreateDirectory'</a>,
--   <a>createDirectory_schemaArn</a> - The Amazon Resource Name (ARN) of
--   the published schema that will be copied into the data Directory. For
--   more information, see arns.
newCreateDirectory :: Text -> Text -> CreateDirectory

-- | The name of the Directory. Should be unique per account, per region.
createDirectory_name :: Lens' CreateDirectory Text

-- | The Amazon Resource Name (ARN) of the published schema that will be
--   copied into the data Directory. For more information, see arns.
createDirectory_schemaArn :: Lens' CreateDirectory Text

-- | <i>See:</i> <a>newCreateDirectoryResponse</a> smart constructor.
data CreateDirectoryResponse
CreateDirectoryResponse' :: Int -> Text -> Text -> Text -> Text -> CreateDirectoryResponse

-- | The response's http status code.
[$sel:httpStatus:CreateDirectoryResponse'] :: CreateDirectoryResponse -> Int

-- | The ARN that is associated with the Directory. For more information,
--   see arns.
[$sel:directoryArn:CreateDirectoryResponse'] :: CreateDirectoryResponse -> Text

-- | The name of the Directory.
[$sel:name:CreateDirectoryResponse'] :: CreateDirectoryResponse -> Text

-- | The root object node of the created directory.
[$sel:objectIdentifier:CreateDirectoryResponse'] :: CreateDirectoryResponse -> Text

-- | The ARN of the published schema in the Directory. Once a published
--   schema is copied into the directory, it has its own ARN, which is
--   referred to applied schema ARN. For more information, see arns.
[$sel:appliedSchemaArn:CreateDirectoryResponse'] :: CreateDirectoryResponse -> Text

-- | Create a value of <a>CreateDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directoryArn:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_directoryArn</a> - The ARN that is
--   associated with the Directory. For more information, see arns.
--   
--   <a>$sel:name:CreateDirectory'</a>, <a>createDirectoryResponse_name</a>
--   - The name of the Directory.
--   
--   <a>$sel:objectIdentifier:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_objectIdentifier</a> - The root object node
--   of the created directory.
--   
--   <a>$sel:appliedSchemaArn:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_appliedSchemaArn</a> - The ARN of the
--   published schema in the Directory. Once a published schema is copied
--   into the directory, it has its own ARN, which is referred to applied
--   schema ARN. For more information, see arns.
newCreateDirectoryResponse :: Int -> Text -> Text -> Text -> Text -> CreateDirectoryResponse

-- | The response's http status code.
createDirectoryResponse_httpStatus :: Lens' CreateDirectoryResponse Int

-- | The ARN that is associated with the Directory. For more information,
--   see arns.
createDirectoryResponse_directoryArn :: Lens' CreateDirectoryResponse Text

-- | The name of the Directory.
createDirectoryResponse_name :: Lens' CreateDirectoryResponse Text

-- | The root object node of the created directory.
createDirectoryResponse_objectIdentifier :: Lens' CreateDirectoryResponse Text

-- | The ARN of the published schema in the Directory. Once a published
--   schema is copied into the directory, it has its own ARN, which is
--   referred to applied schema ARN. For more information, see arns.
createDirectoryResponse_appliedSchemaArn :: Lens' CreateDirectoryResponse Text
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance GHC.Generics.Generic Network.AWS.CloudDirectory.CreateDirectory.CreateDirectoryResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.CreateDirectory.CreateDirectoryResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.CreateDirectory.CreateDirectoryResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.CreateDirectory.CreateDirectoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateDirectory.CreateDirectoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.CreateDirectory.CreateDirectory


-- | Performs all the write operations in a batch. Either all the
--   operations succeed or none.
module Network.AWS.CloudDirectory.BatchWrite

-- | <i>See:</i> <a>newBatchWrite</a> smart constructor.
data BatchWrite
BatchWrite' :: Text -> [BatchWriteOperation] -> BatchWrite

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
[$sel:directoryArn:BatchWrite'] :: BatchWrite -> Text

-- | A list of operations that are part of the batch.
[$sel:operations:BatchWrite'] :: BatchWrite -> [BatchWriteOperation]

-- | Create a value of <a>BatchWrite</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:BatchWrite'</a>, <a>batchWrite_directoryArn</a> -
--   The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
--   
--   <a>$sel:operations:BatchWrite'</a>, <a>batchWrite_operations</a> - A
--   list of operations that are part of the batch.
newBatchWrite :: Text -> BatchWrite

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
batchWrite_directoryArn :: Lens' BatchWrite Text

-- | A list of operations that are part of the batch.
batchWrite_operations :: Lens' BatchWrite [BatchWriteOperation]

-- | <i>See:</i> <a>newBatchWriteResponse</a> smart constructor.
data BatchWriteResponse
BatchWriteResponse' :: Maybe [BatchWriteOperationResponse] -> Int -> BatchWriteResponse

-- | A list of all the responses for each batch write.
[$sel:responses:BatchWriteResponse'] :: BatchWriteResponse -> Maybe [BatchWriteOperationResponse]

-- | The response's http status code.
[$sel:httpStatus:BatchWriteResponse'] :: BatchWriteResponse -> Int

-- | Create a value of <a>BatchWriteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responses:BatchWriteResponse'</a>,
--   <a>batchWriteResponse_responses</a> - A list of all the responses for
--   each batch write.
--   
--   <a>$sel:httpStatus:BatchWriteResponse'</a>,
--   <a>batchWriteResponse_httpStatus</a> - The response's http status
--   code.
newBatchWriteResponse :: Int -> BatchWriteResponse

-- | A list of all the responses for each batch write.
batchWriteResponse_responses :: Lens' BatchWriteResponse (Maybe [BatchWriteOperationResponse])

-- | The response's http status code.
batchWriteResponse_httpStatus :: Lens' BatchWriteResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance GHC.Show.Show Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance GHC.Read.Read Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance GHC.Classes.Eq Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance GHC.Generics.Generic Network.AWS.CloudDirectory.BatchWrite.BatchWriteResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.BatchWrite.BatchWriteResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.BatchWrite.BatchWriteResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.BatchWrite.BatchWriteResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.BatchWrite.BatchWriteResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.BatchWrite.BatchWrite
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.BatchWrite.BatchWrite


-- | Performs all the read operations in a batch.
module Network.AWS.CloudDirectory.BatchRead

-- | <i>See:</i> <a>newBatchRead</a> smart constructor.
data BatchRead
BatchRead' :: Maybe ConsistencyLevel -> Text -> [BatchReadOperation] -> BatchRead

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
[$sel:consistencyLevel:BatchRead'] :: BatchRead -> Maybe ConsistencyLevel

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
[$sel:directoryArn:BatchRead'] :: BatchRead -> Text

-- | A list of operations that are part of the batch.
[$sel:operations:BatchRead'] :: BatchRead -> [BatchReadOperation]

-- | Create a value of <a>BatchRead</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:BatchRead'</a>,
--   <a>batchRead_consistencyLevel</a> - Represents the manner and timing
--   in which the successful write or update of an object is reflected in a
--   subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:BatchRead'</a>, <a>batchRead_directoryArn</a> -
--   The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
--   
--   <a>$sel:operations:BatchRead'</a>, <a>batchRead_operations</a> - A
--   list of operations that are part of the batch.
newBatchRead :: Text -> BatchRead

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
batchRead_consistencyLevel :: Lens' BatchRead (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
batchRead_directoryArn :: Lens' BatchRead Text

-- | A list of operations that are part of the batch.
batchRead_operations :: Lens' BatchRead [BatchReadOperation]

-- | <i>See:</i> <a>newBatchReadResponse</a> smart constructor.
data BatchReadResponse
BatchReadResponse' :: Maybe [BatchReadOperationResponse] -> Int -> BatchReadResponse

-- | A list of all the responses for each batch read.
[$sel:responses:BatchReadResponse'] :: BatchReadResponse -> Maybe [BatchReadOperationResponse]

-- | The response's http status code.
[$sel:httpStatus:BatchReadResponse'] :: BatchReadResponse -> Int

-- | Create a value of <a>BatchReadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responses:BatchReadResponse'</a>,
--   <a>batchReadResponse_responses</a> - A list of all the responses for
--   each batch read.
--   
--   <a>$sel:httpStatus:BatchReadResponse'</a>,
--   <a>batchReadResponse_httpStatus</a> - The response's http status code.
newBatchReadResponse :: Int -> BatchReadResponse

-- | A list of all the responses for each batch read.
batchReadResponse_responses :: Lens' BatchReadResponse (Maybe [BatchReadOperationResponse])

-- | The response's http status code.
batchReadResponse_httpStatus :: Lens' BatchReadResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.BatchRead.BatchRead
instance GHC.Show.Show Network.AWS.CloudDirectory.BatchRead.BatchRead
instance GHC.Read.Read Network.AWS.CloudDirectory.BatchRead.BatchRead
instance GHC.Classes.Eq Network.AWS.CloudDirectory.BatchRead.BatchRead
instance GHC.Generics.Generic Network.AWS.CloudDirectory.BatchRead.BatchReadResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.BatchRead.BatchReadResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.BatchRead.BatchReadResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.BatchRead.BatchReadResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.BatchRead.BatchRead
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.BatchRead.BatchReadResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.BatchRead.BatchRead
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.BatchRead.BatchRead
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.BatchRead.BatchRead
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.BatchRead.BatchRead
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.BatchRead.BatchRead
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.BatchRead.BatchRead


-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
module Network.AWS.CloudDirectory.AttachTypedLink

-- | <i>See:</i> <a>newAttachTypedLink</a> smart constructor.
data AttachTypedLink
AttachTypedLink' :: Text -> ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> [AttributeNameAndValue] -> AttachTypedLink

-- | The Amazon Resource Name (ARN) of the directory where you want to
--   attach the typed link.
[$sel:directoryArn:AttachTypedLink'] :: AttachTypedLink -> Text

-- | Identifies the source object that the typed link will attach to.
[$sel:sourceObjectReference:AttachTypedLink'] :: AttachTypedLink -> ObjectReference

-- | Identifies the target object that the typed link will attach to.
[$sel:targetObjectReference:AttachTypedLink'] :: AttachTypedLink -> ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
[$sel:typedLinkFacet:AttachTypedLink'] :: AttachTypedLink -> TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
[$sel:attributes:AttachTypedLink'] :: AttachTypedLink -> [AttributeNameAndValue]

-- | Create a value of <a>AttachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachTypedLink'</a>,
--   <a>attachTypedLink_directoryArn</a> - The Amazon Resource Name (ARN)
--   of the directory where you want to attach the typed link.
--   
--   <a>$sel:sourceObjectReference:AttachTypedLink'</a>,
--   <a>attachTypedLink_sourceObjectReference</a> - Identifies the source
--   object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:AttachTypedLink'</a>,
--   <a>attachTypedLink_targetObjectReference</a> - Identifies the target
--   object that the typed link will attach to.
--   
--   <a>$sel:typedLinkFacet:AttachTypedLink'</a>,
--   <a>attachTypedLink_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:attributes:AttachTypedLink'</a>,
--   <a>attachTypedLink_attributes</a> - A set of attributes that are
--   associated with the typed link.
newAttachTypedLink :: Text -> ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> AttachTypedLink

-- | The Amazon Resource Name (ARN) of the directory where you want to
--   attach the typed link.
attachTypedLink_directoryArn :: Lens' AttachTypedLink Text

-- | Identifies the source object that the typed link will attach to.
attachTypedLink_sourceObjectReference :: Lens' AttachTypedLink ObjectReference

-- | Identifies the target object that the typed link will attach to.
attachTypedLink_targetObjectReference :: Lens' AttachTypedLink ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
attachTypedLink_typedLinkFacet :: Lens' AttachTypedLink TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
attachTypedLink_attributes :: Lens' AttachTypedLink [AttributeNameAndValue]

-- | <i>See:</i> <a>newAttachTypedLinkResponse</a> smart constructor.
data AttachTypedLinkResponse
AttachTypedLinkResponse' :: Maybe TypedLinkSpecifier -> Int -> AttachTypedLinkResponse

-- | Returns a typed link specifier as output.
[$sel:typedLinkSpecifier:AttachTypedLinkResponse'] :: AttachTypedLinkResponse -> Maybe TypedLinkSpecifier

-- | The response's http status code.
[$sel:httpStatus:AttachTypedLinkResponse'] :: AttachTypedLinkResponse -> Int

-- | Create a value of <a>AttachTypedLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:AttachTypedLinkResponse'</a>,
--   <a>attachTypedLinkResponse_typedLinkSpecifier</a> - Returns a typed
--   link specifier as output.
--   
--   <a>$sel:httpStatus:AttachTypedLinkResponse'</a>,
--   <a>attachTypedLinkResponse_httpStatus</a> - The response's http status
--   code.
newAttachTypedLinkResponse :: Int -> AttachTypedLinkResponse

-- | Returns a typed link specifier as output.
attachTypedLinkResponse_typedLinkSpecifier :: Lens' AttachTypedLinkResponse (Maybe TypedLinkSpecifier)

-- | The response's http status code.
attachTypedLinkResponse_httpStatus :: Lens' AttachTypedLinkResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLinkResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLinkResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLinkResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLinkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.AttachTypedLink.AttachTypedLink


-- | Attaches the specified object to the specified index.
module Network.AWS.CloudDirectory.AttachToIndex

-- | <i>See:</i> <a>newAttachToIndex</a> smart constructor.
data AttachToIndex
AttachToIndex' :: Text -> ObjectReference -> ObjectReference -> AttachToIndex

-- | The Amazon Resource Name (ARN) of the directory where the object and
--   index exist.
[$sel:directoryArn:AttachToIndex'] :: AttachToIndex -> Text

-- | A reference to the index that you are attaching the object to.
[$sel:indexReference:AttachToIndex'] :: AttachToIndex -> ObjectReference

-- | A reference to the object that you are attaching to the index.
[$sel:targetReference:AttachToIndex'] :: AttachToIndex -> ObjectReference

-- | Create a value of <a>AttachToIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachToIndex'</a>,
--   <a>attachToIndex_directoryArn</a> - The Amazon Resource Name (ARN) of
--   the directory where the object and index exist.
--   
--   <a>$sel:indexReference:AttachToIndex'</a>,
--   <a>attachToIndex_indexReference</a> - A reference to the index that
--   you are attaching the object to.
--   
--   <a>$sel:targetReference:AttachToIndex'</a>,
--   <a>attachToIndex_targetReference</a> - A reference to the object that
--   you are attaching to the index.
newAttachToIndex :: Text -> ObjectReference -> ObjectReference -> AttachToIndex

-- | The Amazon Resource Name (ARN) of the directory where the object and
--   index exist.
attachToIndex_directoryArn :: Lens' AttachToIndex Text

-- | A reference to the index that you are attaching the object to.
attachToIndex_indexReference :: Lens' AttachToIndex ObjectReference

-- | A reference to the object that you are attaching to the index.
attachToIndex_targetReference :: Lens' AttachToIndex ObjectReference

-- | <i>See:</i> <a>newAttachToIndexResponse</a> smart constructor.
data AttachToIndexResponse
AttachToIndexResponse' :: Maybe Text -> Int -> AttachToIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
[$sel:attachedObjectIdentifier:AttachToIndexResponse'] :: AttachToIndexResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AttachToIndexResponse'] :: AttachToIndexResponse -> Int

-- | Create a value of <a>AttachToIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:AttachToIndexResponse'</a>,
--   <a>attachToIndexResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
--   
--   <a>$sel:httpStatus:AttachToIndexResponse'</a>,
--   <a>attachToIndexResponse_httpStatus</a> - The response's http status
--   code.
newAttachToIndexResponse :: Int -> AttachToIndexResponse

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
attachToIndexResponse_attachedObjectIdentifier :: Lens' AttachToIndexResponse (Maybe Text)

-- | The response's http status code.
attachToIndexResponse_httpStatus :: Lens' AttachToIndexResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachToIndex.AttachToIndexResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachToIndex.AttachToIndexResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachToIndex.AttachToIndexResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachToIndex.AttachToIndexResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachToIndex.AttachToIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.AttachToIndex.AttachToIndex


-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
module Network.AWS.CloudDirectory.AttachPolicy

-- | <i>See:</i> <a>newAttachPolicy</a> smart constructor.
data AttachPolicy
AttachPolicy' :: Text -> ObjectReference -> ObjectReference -> AttachPolicy

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where both objects reside. For more information, see arns.
[$sel:directoryArn:AttachPolicy'] :: AttachPolicy -> Text

-- | The reference that is associated with the policy object.
[$sel:policyReference:AttachPolicy'] :: AttachPolicy -> ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
[$sel:objectReference:AttachPolicy'] :: AttachPolicy -> ObjectReference

-- | Create a value of <a>AttachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachPolicy'</a>,
--   <a>attachPolicy_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where both objects reside. For more
--   information, see arns.
--   
--   <a>$sel:policyReference:AttachPolicy'</a>,
--   <a>attachPolicy_policyReference</a> - The reference that is associated
--   with the policy object.
--   
--   <a>$sel:objectReference:AttachPolicy'</a>,
--   <a>attachPolicy_objectReference</a> - The reference that identifies
--   the object to which the policy will be attached.
newAttachPolicy :: Text -> ObjectReference -> ObjectReference -> AttachPolicy

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where both objects reside. For more information, see arns.
attachPolicy_directoryArn :: Lens' AttachPolicy Text

-- | The reference that is associated with the policy object.
attachPolicy_policyReference :: Lens' AttachPolicy ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
attachPolicy_objectReference :: Lens' AttachPolicy ObjectReference

-- | <i>See:</i> <a>newAttachPolicyResponse</a> smart constructor.
data AttachPolicyResponse
AttachPolicyResponse' :: Int -> AttachPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:AttachPolicyResponse'] :: AttachPolicyResponse -> Int

-- | Create a value of <a>AttachPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AttachPolicyResponse'</a>,
--   <a>attachPolicyResponse_httpStatus</a> - The response's http status
--   code.
newAttachPolicyResponse :: Int -> AttachPolicyResponse

-- | The response's http status code.
attachPolicyResponse_httpStatus :: Lens' AttachPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachPolicy.AttachPolicyResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachPolicy.AttachPolicyResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachPolicy.AttachPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachPolicy.AttachPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachPolicy.AttachPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.AttachPolicy.AttachPolicy


-- | Attaches an existing object to another object. An object can be
--   accessed in two ways:
--   
--   <ol>
--   <li>Using the path</li>
--   <li>Using <tt>ObjectIdentifier</tt></li>
--   </ol>
module Network.AWS.CloudDirectory.AttachObject

-- | <i>See:</i> <a>newAttachObject</a> smart constructor.
data AttachObject
AttachObject' :: Text -> ObjectReference -> ObjectReference -> Text -> AttachObject

-- | Amazon Resource Name (ARN) that is associated with the Directory where
--   both objects reside. For more information, see arns.
[$sel:directoryArn:AttachObject'] :: AttachObject -> Text

-- | The parent object reference.
[$sel:parentReference:AttachObject'] :: AttachObject -> ObjectReference

-- | The child object reference to be attached to the object.
[$sel:childReference:AttachObject'] :: AttachObject -> ObjectReference

-- | The link name with which the child object is attached to the parent.
[$sel:linkName:AttachObject'] :: AttachObject -> Text

-- | Create a value of <a>AttachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachObject'</a>,
--   <a>attachObject_directoryArn</a> - Amazon Resource Name (ARN) that is
--   associated with the Directory where both objects reside. For more
--   information, see arns.
--   
--   <a>$sel:parentReference:AttachObject'</a>,
--   <a>attachObject_parentReference</a> - The parent object reference.
--   
--   <a>$sel:childReference:AttachObject'</a>,
--   <a>attachObject_childReference</a> - The child object reference to be
--   attached to the object.
--   
--   <a>$sel:linkName:AttachObject'</a>, <a>attachObject_linkName</a> - The
--   link name with which the child object is attached to the parent.
newAttachObject :: Text -> ObjectReference -> ObjectReference -> Text -> AttachObject

-- | Amazon Resource Name (ARN) that is associated with the Directory where
--   both objects reside. For more information, see arns.
attachObject_directoryArn :: Lens' AttachObject Text

-- | The parent object reference.
attachObject_parentReference :: Lens' AttachObject ObjectReference

-- | The child object reference to be attached to the object.
attachObject_childReference :: Lens' AttachObject ObjectReference

-- | The link name with which the child object is attached to the parent.
attachObject_linkName :: Lens' AttachObject Text

-- | <i>See:</i> <a>newAttachObjectResponse</a> smart constructor.
data AttachObjectResponse
AttachObjectResponse' :: Maybe Text -> Int -> AttachObjectResponse

-- | The attached <tt>ObjectIdentifier</tt>, which is the child
--   <tt>ObjectIdentifier</tt>.
[$sel:attachedObjectIdentifier:AttachObjectResponse'] :: AttachObjectResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AttachObjectResponse'] :: AttachObjectResponse -> Int

-- | Create a value of <a>AttachObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:AttachObjectResponse'</a>,
--   <a>attachObjectResponse_attachedObjectIdentifier</a> - The attached
--   <tt>ObjectIdentifier</tt>, which is the child
--   <tt>ObjectIdentifier</tt>.
--   
--   <a>$sel:httpStatus:AttachObjectResponse'</a>,
--   <a>attachObjectResponse_httpStatus</a> - The response's http status
--   code.
newAttachObjectResponse :: Int -> AttachObjectResponse

-- | The attached <tt>ObjectIdentifier</tt>, which is the child
--   <tt>ObjectIdentifier</tt>.
attachObjectResponse_attachedObjectIdentifier :: Lens' AttachObjectResponse (Maybe Text)

-- | The response's http status code.
attachObjectResponse_httpStatus :: Lens' AttachObjectResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachObject.AttachObject
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachObject.AttachObject
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachObject.AttachObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachObject.AttachObject
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AttachObject.AttachObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.AttachObject.AttachObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.AttachObject.AttachObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AttachObject.AttachObjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.AttachObject.AttachObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachObject.AttachObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.AttachObject.AttachObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AttachObject.AttachObject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.AttachObject.AttachObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.AttachObject.AttachObject
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.AttachObject.AttachObject
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.AttachObject.AttachObject


-- | Copies the input published schema, at the specified version, into the
--   Directory with the same name and version as that of the published
--   schema.
module Network.AWS.CloudDirectory.ApplySchema

-- | <i>See:</i> <a>newApplySchema</a> smart constructor.
data ApplySchema
ApplySchema' :: Text -> Text -> ApplySchema

-- | Published schema Amazon Resource Name (ARN) that needs to be copied.
--   For more information, see arns.
[$sel:publishedSchemaArn:ApplySchema'] :: ApplySchema -> Text

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   into which the schema is copied. For more information, see arns.
[$sel:directoryArn:ApplySchema'] :: ApplySchema -> Text

-- | Create a value of <a>ApplySchema</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:publishedSchemaArn:ApplySchema'</a>,
--   <a>applySchema_publishedSchemaArn</a> - Published schema Amazon
--   Resource Name (ARN) that needs to be copied. For more information, see
--   arns.
--   
--   <a>$sel:directoryArn:ApplySchema'</a>, <a>applySchema_directoryArn</a>
--   - The Amazon Resource Name (ARN) that is associated with the Directory
--   into which the schema is copied. For more information, see arns.
newApplySchema :: Text -> Text -> ApplySchema

-- | Published schema Amazon Resource Name (ARN) that needs to be copied.
--   For more information, see arns.
applySchema_publishedSchemaArn :: Lens' ApplySchema Text

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   into which the schema is copied. For more information, see arns.
applySchema_directoryArn :: Lens' ApplySchema Text

-- | <i>See:</i> <a>newApplySchemaResponse</a> smart constructor.
data ApplySchemaResponse
ApplySchemaResponse' :: Maybe Text -> Maybe Text -> Int -> ApplySchemaResponse

-- | The ARN that is associated with the Directory. For more information,
--   see arns.
[$sel:directoryArn:ApplySchemaResponse'] :: ApplySchemaResponse -> Maybe Text

-- | The applied schema ARN that is associated with the copied schema in
--   the Directory. You can use this ARN to describe the schema information
--   applied on this directory. For more information, see arns.
[$sel:appliedSchemaArn:ApplySchemaResponse'] :: ApplySchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ApplySchemaResponse'] :: ApplySchemaResponse -> Int

-- | Create a value of <a>ApplySchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:ApplySchema'</a>,
--   <a>applySchemaResponse_directoryArn</a> - The ARN that is associated
--   with the Directory. For more information, see arns.
--   
--   <a>$sel:appliedSchemaArn:ApplySchemaResponse'</a>,
--   <a>applySchemaResponse_appliedSchemaArn</a> - The applied schema ARN
--   that is associated with the copied schema in the Directory. You can
--   use this ARN to describe the schema information applied on this
--   directory. For more information, see arns.
--   
--   <a>$sel:httpStatus:ApplySchemaResponse'</a>,
--   <a>applySchemaResponse_httpStatus</a> - The response's http status
--   code.
newApplySchemaResponse :: Int -> ApplySchemaResponse

-- | The ARN that is associated with the Directory. For more information,
--   see arns.
applySchemaResponse_directoryArn :: Lens' ApplySchemaResponse (Maybe Text)

-- | The applied schema ARN that is associated with the copied schema in
--   the Directory. You can use this ARN to describe the schema information
--   applied on this directory. For more information, see arns.
applySchemaResponse_appliedSchemaArn :: Lens' ApplySchemaResponse (Maybe Text)

-- | The response's http status code.
applySchemaResponse_httpStatus :: Lens' ApplySchemaResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance GHC.Show.Show Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance GHC.Read.Read Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance GHC.Generics.Generic Network.AWS.CloudDirectory.ApplySchema.ApplySchemaResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.ApplySchema.ApplySchemaResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.ApplySchema.ApplySchemaResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.ApplySchema.ApplySchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ApplySchema.ApplySchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.ApplySchema.ApplySchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.ApplySchema.ApplySchema


-- | Adds a new Facet to an object. An object can have more than one facet
--   applied on it.
module Network.AWS.CloudDirectory.AddFacetToObject

-- | <i>See:</i> <a>newAddFacetToObject</a> smart constructor.
data AddFacetToObject
AddFacetToObject' :: Maybe [AttributeKeyAndValue] -> Text -> SchemaFacet -> ObjectReference -> AddFacetToObject

-- | Attributes on the facet that you are adding to the object.
[$sel:objectAttributeList:AddFacetToObject'] :: AddFacetToObject -> Maybe [AttributeKeyAndValue]

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
[$sel:directoryArn:AddFacetToObject'] :: AddFacetToObject -> Text

-- | Identifiers for the facet that you are adding to the object. See
--   SchemaFacet for details.
[$sel:schemaFacet:AddFacetToObject'] :: AddFacetToObject -> SchemaFacet

-- | A reference to the object you are adding the specified facet to.
[$sel:objectReference:AddFacetToObject'] :: AddFacetToObject -> ObjectReference

-- | Create a value of <a>AddFacetToObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeList:AddFacetToObject'</a>,
--   <a>addFacetToObject_objectAttributeList</a> - Attributes on the facet
--   that you are adding to the object.
--   
--   <a>$sel:directoryArn:AddFacetToObject'</a>,
--   <a>addFacetToObject_directoryArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the Directory where the object resides. For
--   more information, see arns.
--   
--   <a>$sel:schemaFacet:AddFacetToObject'</a>,
--   <a>addFacetToObject_schemaFacet</a> - Identifiers for the facet that
--   you are adding to the object. See SchemaFacet for details.
--   
--   <a>$sel:objectReference:AddFacetToObject'</a>,
--   <a>addFacetToObject_objectReference</a> - A reference to the object
--   you are adding the specified facet to.
newAddFacetToObject :: Text -> SchemaFacet -> ObjectReference -> AddFacetToObject

-- | Attributes on the facet that you are adding to the object.
addFacetToObject_objectAttributeList :: Lens' AddFacetToObject (Maybe [AttributeKeyAndValue])

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
addFacetToObject_directoryArn :: Lens' AddFacetToObject Text

-- | Identifiers for the facet that you are adding to the object. See
--   SchemaFacet for details.
addFacetToObject_schemaFacet :: Lens' AddFacetToObject SchemaFacet

-- | A reference to the object you are adding the specified facet to.
addFacetToObject_objectReference :: Lens' AddFacetToObject ObjectReference

-- | <i>See:</i> <a>newAddFacetToObjectResponse</a> smart constructor.
data AddFacetToObjectResponse
AddFacetToObjectResponse' :: Int -> AddFacetToObjectResponse

-- | The response's http status code.
[$sel:httpStatus:AddFacetToObjectResponse'] :: AddFacetToObjectResponse -> Int

-- | Create a value of <a>AddFacetToObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddFacetToObjectResponse'</a>,
--   <a>addFacetToObjectResponse_httpStatus</a> - The response's http
--   status code.
newAddFacetToObjectResponse :: Int -> AddFacetToObjectResponse

-- | The response's http status code.
addFacetToObjectResponse_httpStatus :: Lens' AddFacetToObjectResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance GHC.Show.Show Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance GHC.Read.Read Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance GHC.Generics.Generic Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObjectResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObjectResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObjectResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.AddFacetToObject.AddFacetToObject


-- | An API operation for removing tags from a resource.
module Network.AWS.CloudDirectory.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Keys of the tag that need to be removed from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource. Tagging is only supported for directories.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Keys of the tag that need to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Keys of the tag that need to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.CloudDirectory.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.CloudDirectory.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UntagResource.UntagResource


-- | Does the following:
--   
--   <ol>
--   <li>Adds new <tt>Attributes</tt>, <tt>Rules</tt>, or
--   <tt>ObjectTypes</tt>.</li>
--   <li>Updates existing <tt>Attributes</tt>, <tt>Rules</tt>, or
--   <tt>ObjectTypes</tt>.</li>
--   <li>Deletes existing <tt>Attributes</tt>, <tt>Rules</tt>, or
--   <tt>ObjectTypes</tt>.</li>
--   </ol>
module Network.AWS.CloudDirectory.UpdateFacet

-- | <i>See:</i> <a>newUpdateFacet</a> smart constructor.
data UpdateFacet
UpdateFacet' :: Maybe [FacetAttributeUpdate] -> Maybe ObjectType -> Text -> Text -> UpdateFacet

-- | List of attributes that need to be updated in a given schema Facet.
--   Each attribute is followed by <tt>AttributeAction</tt>, which
--   specifies the type of update operation to perform.
[$sel:attributeUpdates:UpdateFacet'] :: UpdateFacet -> Maybe [FacetAttributeUpdate]

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
[$sel:objectType:UpdateFacet'] :: UpdateFacet -> Maybe ObjectType

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
[$sel:schemaArn:UpdateFacet'] :: UpdateFacet -> Text

-- | The name of the facet.
[$sel:name:UpdateFacet'] :: UpdateFacet -> Text

-- | Create a value of <a>UpdateFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeUpdates:UpdateFacet'</a>,
--   <a>updateFacet_attributeUpdates</a> - List of attributes that need to
--   be updated in a given schema Facet. Each attribute is followed by
--   <tt>AttributeAction</tt>, which specifies the type of update operation
--   to perform.
--   
--   <a>$sel:objectType:UpdateFacet'</a>, <a>updateFacet_objectType</a> -
--   The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
--   
--   <a>$sel:schemaArn:UpdateFacet'</a>, <a>updateFacet_schemaArn</a> - The
--   Amazon Resource Name (ARN) that is associated with the Facet. For more
--   information, see arns.
--   
--   <a>$sel:name:UpdateFacet'</a>, <a>updateFacet_name</a> - The name of
--   the facet.
newUpdateFacet :: Text -> Text -> UpdateFacet

-- | List of attributes that need to be updated in a given schema Facet.
--   Each attribute is followed by <tt>AttributeAction</tt>, which
--   specifies the type of update operation to perform.
updateFacet_attributeUpdates :: Lens' UpdateFacet (Maybe [FacetAttributeUpdate])

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
updateFacet_objectType :: Lens' UpdateFacet (Maybe ObjectType)

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
updateFacet_schemaArn :: Lens' UpdateFacet Text

-- | The name of the facet.
updateFacet_name :: Lens' UpdateFacet Text

-- | <i>See:</i> <a>newUpdateFacetResponse</a> smart constructor.
data UpdateFacetResponse
UpdateFacetResponse' :: Int -> UpdateFacetResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateFacetResponse'] :: UpdateFacetResponse -> Int

-- | Create a value of <a>UpdateFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateFacetResponse'</a>,
--   <a>updateFacetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateFacetResponse :: Int -> UpdateFacetResponse

-- | The response's http status code.
updateFacetResponse_httpStatus :: Lens' UpdateFacetResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateFacet.UpdateFacetResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateFacet.UpdateFacetResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateFacet.UpdateFacetResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateFacet.UpdateFacetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateFacet.UpdateFacetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UpdateFacet.UpdateFacet


-- | Updates a given typed link’s attributes. Attributes to be updated must
--   not contribute to the typed link’s identity, as defined by its
--   <tt>IdentityAttributeOrder</tt>.
module Network.AWS.CloudDirectory.UpdateLinkAttributes

-- | <i>See:</i> <a>newUpdateLinkAttributes</a> smart constructor.
data UpdateLinkAttributes
UpdateLinkAttributes' :: Text -> TypedLinkSpecifier -> [LinkAttributeUpdate] -> UpdateLinkAttributes

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the updated typed link resides. For more information, see arns
--   or <a>Typed Links</a>.
[$sel:directoryArn:UpdateLinkAttributes'] :: UpdateLinkAttributes -> Text

-- | Allows a typed link specifier to be accepted as input.
[$sel:typedLinkSpecifier:UpdateLinkAttributes'] :: UpdateLinkAttributes -> TypedLinkSpecifier

-- | The attributes update structure.
[$sel:attributeUpdates:UpdateLinkAttributes'] :: UpdateLinkAttributes -> [LinkAttributeUpdate]

-- | Create a value of <a>UpdateLinkAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:UpdateLinkAttributes'</a>,
--   <a>updateLinkAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the updated typed
--   link resides. For more information, see arns or <a>Typed Links</a>.
--   
--   <a>$sel:typedLinkSpecifier:UpdateLinkAttributes'</a>,
--   <a>updateLinkAttributes_typedLinkSpecifier</a> - Allows a typed link
--   specifier to be accepted as input.
--   
--   <a>$sel:attributeUpdates:UpdateLinkAttributes'</a>,
--   <a>updateLinkAttributes_attributeUpdates</a> - The attributes update
--   structure.
newUpdateLinkAttributes :: Text -> TypedLinkSpecifier -> UpdateLinkAttributes

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the updated typed link resides. For more information, see arns
--   or <a>Typed Links</a>.
updateLinkAttributes_directoryArn :: Lens' UpdateLinkAttributes Text

-- | Allows a typed link specifier to be accepted as input.
updateLinkAttributes_typedLinkSpecifier :: Lens' UpdateLinkAttributes TypedLinkSpecifier

-- | The attributes update structure.
updateLinkAttributes_attributeUpdates :: Lens' UpdateLinkAttributes [LinkAttributeUpdate]

-- | <i>See:</i> <a>newUpdateLinkAttributesResponse</a> smart constructor.
data UpdateLinkAttributesResponse
UpdateLinkAttributesResponse' :: Int -> UpdateLinkAttributesResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateLinkAttributesResponse'] :: UpdateLinkAttributesResponse -> Int

-- | Create a value of <a>UpdateLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLinkAttributesResponse'</a>,
--   <a>updateLinkAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLinkAttributesResponse :: Int -> UpdateLinkAttributesResponse

-- | The response's http status code.
updateLinkAttributesResponse_httpStatus :: Lens' UpdateLinkAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UpdateLinkAttributes.UpdateLinkAttributes


-- | Updates a given object's attributes.
module Network.AWS.CloudDirectory.UpdateObjectAttributes

-- | <i>See:</i> <a>newUpdateObjectAttributes</a> smart constructor.
data UpdateObjectAttributes
UpdateObjectAttributes' :: Text -> ObjectReference -> [ObjectAttributeUpdate] -> UpdateObjectAttributes

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
[$sel:directoryArn:UpdateObjectAttributes'] :: UpdateObjectAttributes -> Text

-- | The reference that identifies the object.
[$sel:objectReference:UpdateObjectAttributes'] :: UpdateObjectAttributes -> ObjectReference

-- | The attributes update structure.
[$sel:attributeUpdates:UpdateObjectAttributes'] :: UpdateObjectAttributes -> [ObjectAttributeUpdate]

-- | Create a value of <a>UpdateObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:UpdateObjectAttributes'</a>,
--   <a>updateObjectAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   For more information, see arns.
--   
--   <a>$sel:objectReference:UpdateObjectAttributes'</a>,
--   <a>updateObjectAttributes_objectReference</a> - The reference that
--   identifies the object.
--   
--   <a>$sel:attributeUpdates:UpdateObjectAttributes'</a>,
--   <a>updateObjectAttributes_attributeUpdates</a> - The attributes update
--   structure.
newUpdateObjectAttributes :: Text -> ObjectReference -> UpdateObjectAttributes

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
updateObjectAttributes_directoryArn :: Lens' UpdateObjectAttributes Text

-- | The reference that identifies the object.
updateObjectAttributes_objectReference :: Lens' UpdateObjectAttributes ObjectReference

-- | The attributes update structure.
updateObjectAttributes_attributeUpdates :: Lens' UpdateObjectAttributes [ObjectAttributeUpdate]

-- | <i>See:</i> <a>newUpdateObjectAttributesResponse</a> smart
--   constructor.
data UpdateObjectAttributesResponse
UpdateObjectAttributesResponse' :: Maybe Text -> Int -> UpdateObjectAttributesResponse

-- | The <tt>ObjectIdentifier</tt> of the updated object.
[$sel:objectIdentifier:UpdateObjectAttributesResponse'] :: UpdateObjectAttributesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateObjectAttributesResponse'] :: UpdateObjectAttributesResponse -> Int

-- | Create a value of <a>UpdateObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:UpdateObjectAttributesResponse'</a>,
--   <a>updateObjectAttributesResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the updated object.
--   
--   <a>$sel:httpStatus:UpdateObjectAttributesResponse'</a>,
--   <a>updateObjectAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateObjectAttributesResponse :: Int -> UpdateObjectAttributesResponse

-- | The <tt>ObjectIdentifier</tt> of the updated object.
updateObjectAttributesResponse_objectIdentifier :: Lens' UpdateObjectAttributesResponse (Maybe Text)

-- | The response's http status code.
updateObjectAttributesResponse_httpStatus :: Lens' UpdateObjectAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributesResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributesResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributesResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UpdateObjectAttributes.UpdateObjectAttributes


-- | Updates the schema name with a new name. Only development schema names
--   can be updated.
module Network.AWS.CloudDirectory.UpdateSchema

-- | <i>See:</i> <a>newUpdateSchema</a> smart constructor.
data UpdateSchema
UpdateSchema' :: Text -> Text -> UpdateSchema

-- | The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
[$sel:schemaArn:UpdateSchema'] :: UpdateSchema -> Text

-- | The name of the schema.
[$sel:name:UpdateSchema'] :: UpdateSchema -> Text

-- | Create a value of <a>UpdateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:UpdateSchema'</a>, <a>updateSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
--   
--   <a>$sel:name:UpdateSchema'</a>, <a>updateSchema_name</a> - The name of
--   the schema.
newUpdateSchema :: Text -> Text -> UpdateSchema

-- | The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
updateSchema_schemaArn :: Lens' UpdateSchema Text

-- | The name of the schema.
updateSchema_name :: Lens' UpdateSchema Text

-- | <i>See:</i> <a>newUpdateSchemaResponse</a> smart constructor.
data UpdateSchemaResponse
UpdateSchemaResponse' :: Maybe Text -> Int -> UpdateSchemaResponse

-- | The ARN that is associated with the updated schema. For more
--   information, see arns.
[$sel:schemaArn:UpdateSchemaResponse'] :: UpdateSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateSchemaResponse'] :: UpdateSchemaResponse -> Int

-- | Create a value of <a>UpdateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:UpdateSchema'</a>,
--   <a>updateSchemaResponse_schemaArn</a> - The ARN that is associated
--   with the updated schema. For more information, see arns.
--   
--   <a>$sel:httpStatus:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSchemaResponse :: Int -> UpdateSchemaResponse

-- | The ARN that is associated with the updated schema. For more
--   information, see arns.
updateSchemaResponse_schemaArn :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The response's http status code.
updateSchemaResponse_httpStatus :: Lens' UpdateSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateSchema.UpdateSchemaResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateSchema.UpdateSchemaResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateSchema.UpdateSchemaResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateSchema.UpdateSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateSchema.UpdateSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UpdateSchema.UpdateSchema


-- | Updates a TypedLinkFacet. For more information, see <a>Typed
--   Links</a>.
module Network.AWS.CloudDirectory.UpdateTypedLinkFacet

-- | <i>See:</i> <a>newUpdateTypedLinkFacet</a> smart constructor.
data UpdateTypedLinkFacet
UpdateTypedLinkFacet' :: Text -> Text -> [TypedLinkFacetAttributeUpdate] -> [Text] -> UpdateTypedLinkFacet

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
[$sel:schemaArn:UpdateTypedLinkFacet'] :: UpdateTypedLinkFacet -> Text

-- | The unique name of the typed link facet.
[$sel:name:UpdateTypedLinkFacet'] :: UpdateTypedLinkFacet -> Text

-- | Attributes update structure.
[$sel:attributeUpdates:UpdateTypedLinkFacet'] :: UpdateTypedLinkFacet -> [TypedLinkFacetAttributeUpdate]

-- | The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to a typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
[$sel:identityAttributeOrder:UpdateTypedLinkFacet'] :: UpdateTypedLinkFacet -> [Text]

-- | Create a value of <a>UpdateTypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:name:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_name</a> - The unique name of the typed link
--   facet.
--   
--   <a>$sel:attributeUpdates:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_attributeUpdates</a> - Attributes update
--   structure.
--   
--   <a>$sel:identityAttributeOrder:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_identityAttributeOrder</a> - The order of
--   identity attributes for the facet, from most significant to least
--   significant. The ability to filter typed links considers the order
--   that the attributes are defined on the typed link facet. When
--   providing ranges to a typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
newUpdateTypedLinkFacet :: Text -> Text -> UpdateTypedLinkFacet

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
updateTypedLinkFacet_schemaArn :: Lens' UpdateTypedLinkFacet Text

-- | The unique name of the typed link facet.
updateTypedLinkFacet_name :: Lens' UpdateTypedLinkFacet Text

-- | Attributes update structure.
updateTypedLinkFacet_attributeUpdates :: Lens' UpdateTypedLinkFacet [TypedLinkFacetAttributeUpdate]

-- | The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to a typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
updateTypedLinkFacet_identityAttributeOrder :: Lens' UpdateTypedLinkFacet [Text]

-- | <i>See:</i> <a>newUpdateTypedLinkFacetResponse</a> smart constructor.
data UpdateTypedLinkFacetResponse
UpdateTypedLinkFacetResponse' :: Int -> UpdateTypedLinkFacetResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateTypedLinkFacetResponse'] :: UpdateTypedLinkFacetResponse -> Int

-- | Create a value of <a>UpdateTypedLinkFacetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTypedLinkFacetResponse'</a>,
--   <a>updateTypedLinkFacetResponse_httpStatus</a> - The response's http
--   status code.
newUpdateTypedLinkFacetResponse :: Int -> UpdateTypedLinkFacetResponse

-- | The response's http status code.
updateTypedLinkFacetResponse_httpStatus :: Lens' UpdateTypedLinkFacetResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacetResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacetResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacetResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UpdateTypedLinkFacet.UpdateTypedLinkFacet


-- | Upgrades a single directory in-place using the
--   <tt>PublishedSchemaArn</tt> with schema updates found in
--   <tt>MinorVersion</tt>. Backwards-compatible minor version upgrades are
--   instantaneously available for readers on all objects in the directory.
--   Note: This is a synchronous API call and upgrades only one schema on a
--   given directory per call. To upgrade multiple directories from one
--   schema, you would need to call this API on each directory.
module Network.AWS.CloudDirectory.UpgradeAppliedSchema

-- | <i>See:</i> <a>newUpgradeAppliedSchema</a> smart constructor.
data UpgradeAppliedSchema
UpgradeAppliedSchema' :: Maybe Bool -> Text -> Text -> UpgradeAppliedSchema

-- | Used for testing whether the major version schemas are backward
--   compatible or not. If schema compatibility fails, an exception would
--   be thrown else the call would succeed but no changes will be saved.
--   This parameter is optional.
[$sel:dryRun:UpgradeAppliedSchema'] :: UpgradeAppliedSchema -> Maybe Bool

-- | The revision of the published schema to upgrade the directory to.
[$sel:publishedSchemaArn:UpgradeAppliedSchema'] :: UpgradeAppliedSchema -> Text

-- | The ARN for the directory to which the upgraded schema will be
--   applied.
[$sel:directoryArn:UpgradeAppliedSchema'] :: UpgradeAppliedSchema -> Text

-- | Create a value of <a>UpgradeAppliedSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dryRun:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchema_dryRun</a> - Used for testing whether the
--   major version schemas are backward compatible or not. If schema
--   compatibility fails, an exception would be thrown else the call would
--   succeed but no changes will be saved. This parameter is optional.
--   
--   <a>$sel:publishedSchemaArn:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchema_publishedSchemaArn</a> - The revision of the
--   published schema to upgrade the directory to.
--   
--   <a>$sel:directoryArn:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchema_directoryArn</a> - The ARN for the directory
--   to which the upgraded schema will be applied.
newUpgradeAppliedSchema :: Text -> Text -> UpgradeAppliedSchema

-- | Used for testing whether the major version schemas are backward
--   compatible or not. If schema compatibility fails, an exception would
--   be thrown else the call would succeed but no changes will be saved.
--   This parameter is optional.
upgradeAppliedSchema_dryRun :: Lens' UpgradeAppliedSchema (Maybe Bool)

-- | The revision of the published schema to upgrade the directory to.
upgradeAppliedSchema_publishedSchemaArn :: Lens' UpgradeAppliedSchema Text

-- | The ARN for the directory to which the upgraded schema will be
--   applied.
upgradeAppliedSchema_directoryArn :: Lens' UpgradeAppliedSchema Text

-- | <i>See:</i> <a>newUpgradeAppliedSchemaResponse</a> smart constructor.
data UpgradeAppliedSchemaResponse
UpgradeAppliedSchemaResponse' :: Maybe Text -> Maybe Text -> Int -> UpgradeAppliedSchemaResponse

-- | The ARN of the directory that is returned as part of the response.
[$sel:directoryArn:UpgradeAppliedSchemaResponse'] :: UpgradeAppliedSchemaResponse -> Maybe Text

-- | The ARN of the upgraded schema that is returned as part of the
--   response.
[$sel:upgradedSchemaArn:UpgradeAppliedSchemaResponse'] :: UpgradeAppliedSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpgradeAppliedSchemaResponse'] :: UpgradeAppliedSchemaResponse -> Int

-- | Create a value of <a>UpgradeAppliedSchemaResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchemaResponse_directoryArn</a> - The ARN of the
--   directory that is returned as part of the response.
--   
--   <a>$sel:upgradedSchemaArn:UpgradeAppliedSchemaResponse'</a>,
--   <a>upgradeAppliedSchemaResponse_upgradedSchemaArn</a> - The ARN of the
--   upgraded schema that is returned as part of the response.
--   
--   <a>$sel:httpStatus:UpgradeAppliedSchemaResponse'</a>,
--   <a>upgradeAppliedSchemaResponse_httpStatus</a> - The response's http
--   status code.
newUpgradeAppliedSchemaResponse :: Int -> UpgradeAppliedSchemaResponse

-- | The ARN of the directory that is returned as part of the response.
upgradeAppliedSchemaResponse_directoryArn :: Lens' UpgradeAppliedSchemaResponse (Maybe Text)

-- | The ARN of the upgraded schema that is returned as part of the
--   response.
upgradeAppliedSchemaResponse_upgradedSchemaArn :: Lens' UpgradeAppliedSchemaResponse (Maybe Text)

-- | The response's http status code.
upgradeAppliedSchemaResponse_httpStatus :: Lens' UpgradeAppliedSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance GHC.Show.Show Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance GHC.Read.Read Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchemaResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchemaResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchemaResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UpgradeAppliedSchema.UpgradeAppliedSchema


-- | Upgrades a published schema under a new minor version revision using
--   the current contents of <tt>DevelopmentSchemaArn</tt>.
module Network.AWS.CloudDirectory.UpgradePublishedSchema

-- | <i>See:</i> <a>newUpgradePublishedSchema</a> smart constructor.
data UpgradePublishedSchema
UpgradePublishedSchema' :: Maybe Bool -> Text -> Text -> Text -> UpgradePublishedSchema

-- | Used for testing whether the Development schema provided is backwards
--   compatible, or not, with the publish schema provided by the user to be
--   upgraded. If schema compatibility fails, an exception would be thrown
--   else the call would succeed. This parameter is optional and defaults
--   to false.
[$sel:dryRun:UpgradePublishedSchema'] :: UpgradePublishedSchema -> Maybe Bool

-- | The ARN of the development schema with the changes used for the
--   upgrade.
[$sel:developmentSchemaArn:UpgradePublishedSchema'] :: UpgradePublishedSchema -> Text

-- | The ARN of the published schema to be upgraded.
[$sel:publishedSchemaArn:UpgradePublishedSchema'] :: UpgradePublishedSchema -> Text

-- | Identifies the minor version of the published schema that will be
--   created. This parameter is NOT optional.
[$sel:minorVersion:UpgradePublishedSchema'] :: UpgradePublishedSchema -> Text

-- | Create a value of <a>UpgradePublishedSchema</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dryRun:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_dryRun</a> - Used for testing whether the
--   Development schema provided is backwards compatible, or not, with the
--   publish schema provided by the user to be upgraded. If schema
--   compatibility fails, an exception would be thrown else the call would
--   succeed. This parameter is optional and defaults to false.
--   
--   <a>$sel:developmentSchemaArn:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_developmentSchemaArn</a> - The ARN of the
--   development schema with the changes used for the upgrade.
--   
--   <a>$sel:publishedSchemaArn:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_publishedSchemaArn</a> - The ARN of the
--   published schema to be upgraded.
--   
--   <a>$sel:minorVersion:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_minorVersion</a> - Identifies the minor
--   version of the published schema that will be created. This parameter
--   is NOT optional.
newUpgradePublishedSchema :: Text -> Text -> Text -> UpgradePublishedSchema

-- | Used for testing whether the Development schema provided is backwards
--   compatible, or not, with the publish schema provided by the user to be
--   upgraded. If schema compatibility fails, an exception would be thrown
--   else the call would succeed. This parameter is optional and defaults
--   to false.
upgradePublishedSchema_dryRun :: Lens' UpgradePublishedSchema (Maybe Bool)

-- | The ARN of the development schema with the changes used for the
--   upgrade.
upgradePublishedSchema_developmentSchemaArn :: Lens' UpgradePublishedSchema Text

-- | The ARN of the published schema to be upgraded.
upgradePublishedSchema_publishedSchemaArn :: Lens' UpgradePublishedSchema Text

-- | Identifies the minor version of the published schema that will be
--   created. This parameter is NOT optional.
upgradePublishedSchema_minorVersion :: Lens' UpgradePublishedSchema Text

-- | <i>See:</i> <a>newUpgradePublishedSchemaResponse</a> smart
--   constructor.
data UpgradePublishedSchemaResponse
UpgradePublishedSchemaResponse' :: Maybe Text -> Int -> UpgradePublishedSchemaResponse

-- | The ARN of the upgraded schema that is returned as part of the
--   response.
[$sel:upgradedSchemaArn:UpgradePublishedSchemaResponse'] :: UpgradePublishedSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpgradePublishedSchemaResponse'] :: UpgradePublishedSchemaResponse -> Int

-- | Create a value of <a>UpgradePublishedSchemaResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upgradedSchemaArn:UpgradePublishedSchemaResponse'</a>,
--   <a>upgradePublishedSchemaResponse_upgradedSchemaArn</a> - The ARN of
--   the upgraded schema that is returned as part of the response.
--   
--   <a>$sel:httpStatus:UpgradePublishedSchemaResponse'</a>,
--   <a>upgradePublishedSchemaResponse_httpStatus</a> - The response's http
--   status code.
newUpgradePublishedSchemaResponse :: Int -> UpgradePublishedSchemaResponse

-- | The ARN of the upgraded schema that is returned as part of the
--   response.
upgradePublishedSchemaResponse_upgradedSchemaArn :: Lens' UpgradePublishedSchemaResponse (Maybe Text)

-- | The response's http status code.
upgradePublishedSchemaResponse_httpStatus :: Lens' UpgradePublishedSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance GHC.Show.Show Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance GHC.Read.Read Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance GHC.Generics.Generic Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchemaResponse
instance GHC.Show.Show Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchemaResponse
instance GHC.Read.Read Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchemaResponse
instance GHC.Classes.Eq Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance Control.DeepSeq.NFData Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudDirectory.UpgradePublishedSchema.UpgradePublishedSchema


module Network.AWS.CloudDirectory.Lens

-- | The pagination token.
listTypedLinkFacetNames_nextToken :: Lens' ListTypedLinkFacetNames (Maybe Text)

-- | The maximum number of results to retrieve.
listTypedLinkFacetNames_maxResults :: Lens' ListTypedLinkFacetNames (Maybe Natural)

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
listTypedLinkFacetNames_schemaArn :: Lens' ListTypedLinkFacetNames Text

-- | The pagination token.
listTypedLinkFacetNamesResponse_nextToken :: Lens' ListTypedLinkFacetNamesResponse (Maybe Text)

-- | The names of typed link facets that exist within the schema.
listTypedLinkFacetNamesResponse_facetNames :: Lens' ListTypedLinkFacetNamesResponse (Maybe [Text])

-- | The response's http status code.
listTypedLinkFacetNamesResponse_httpStatus :: Lens' ListTypedLinkFacetNamesResponse Int

-- | The ARN of the directory.
getDirectory_directoryArn :: Lens' GetDirectory Text

-- | The response's http status code.
getDirectoryResponse_httpStatus :: Lens' GetDirectoryResponse Int

-- | Metadata about the directory.
getDirectoryResponse_directory :: Lens' GetDirectoryResponse Directory

-- | The Amazon Resource Name (ARN) of the directory where you want to
--   attach the typed link.
attachTypedLink_directoryArn :: Lens' AttachTypedLink Text

-- | Identifies the source object that the typed link will attach to.
attachTypedLink_sourceObjectReference :: Lens' AttachTypedLink ObjectReference

-- | Identifies the target object that the typed link will attach to.
attachTypedLink_targetObjectReference :: Lens' AttachTypedLink ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
attachTypedLink_typedLinkFacet :: Lens' AttachTypedLink TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
attachTypedLink_attributes :: Lens' AttachTypedLink [AttributeNameAndValue]

-- | Returns a typed link specifier as output.
attachTypedLinkResponse_typedLinkSpecifier :: Lens' AttachTypedLinkResponse (Maybe TypedLinkSpecifier)

-- | The response's http status code.
attachTypedLinkResponse_httpStatus :: Lens' AttachTypedLinkResponse Int

-- | The consistency level at which to retrieve the object information.
getObjectInformation_consistencyLevel :: Lens' GetObjectInformation (Maybe ConsistencyLevel)

-- | The ARN of the directory being retrieved.
getObjectInformation_directoryArn :: Lens' GetObjectInformation Text

-- | A reference to the object.
getObjectInformation_objectReference :: Lens' GetObjectInformation ObjectReference

-- | The facets attached to the specified object. Although the response
--   does not include minor version information, the most recently applied
--   minor version of each Facet is in effect. See GetAppliedSchemaVersion
--   for details.
getObjectInformationResponse_schemaFacets :: Lens' GetObjectInformationResponse (Maybe [SchemaFacet])

-- | The <tt>ObjectIdentifier</tt> of the specified object.
getObjectInformationResponse_objectIdentifier :: Lens' GetObjectInformationResponse (Maybe Text)

-- | The response's http status code.
getObjectInformationResponse_httpStatus :: Lens' GetObjectInformationResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
deleteObject_directoryArn :: Lens' DeleteObject Text

-- | A reference that identifies the object.
deleteObject_objectReference :: Lens' DeleteObject ObjectReference

-- | The response's http status code.
deleteObjectResponse_httpStatus :: Lens' DeleteObjectResponse Int

-- | List of attributes that need to be updated in a given schema Facet.
--   Each attribute is followed by <tt>AttributeAction</tt>, which
--   specifies the type of update operation to perform.
updateFacet_attributeUpdates :: Lens' UpdateFacet (Maybe [FacetAttributeUpdate])

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
updateFacet_objectType :: Lens' UpdateFacet (Maybe ObjectType)

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
updateFacet_schemaArn :: Lens' UpdateFacet Text

-- | The name of the facet.
updateFacet_name :: Lens' UpdateFacet Text

-- | The response's http status code.
updateFacetResponse_httpStatus :: Lens' UpdateFacetResponse Int

-- | The consistency level at which to retrieve the attributes on an
--   object.
getObjectAttributes_consistencyLevel :: Lens' GetObjectAttributes (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides.
getObjectAttributes_directoryArn :: Lens' GetObjectAttributes Text

-- | Reference that identifies the object whose attributes will be
--   retrieved.
getObjectAttributes_objectReference :: Lens' GetObjectAttributes ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
getObjectAttributes_schemaFacet :: Lens' GetObjectAttributes SchemaFacet

-- | List of attribute names whose values will be retrieved.
getObjectAttributes_attributeNames :: Lens' GetObjectAttributes [Text]

-- | The attributes that are associated with the object.
getObjectAttributesResponse_attributes :: Lens' GetObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | The response's http status code.
getObjectAttributesResponse_httpStatus :: Lens' GetObjectAttributesResponse Int

-- | Used for testing whether the major version schemas are backward
--   compatible or not. If schema compatibility fails, an exception would
--   be thrown else the call would succeed but no changes will be saved.
--   This parameter is optional.
upgradeAppliedSchema_dryRun :: Lens' UpgradeAppliedSchema (Maybe Bool)

-- | The revision of the published schema to upgrade the directory to.
upgradeAppliedSchema_publishedSchemaArn :: Lens' UpgradeAppliedSchema Text

-- | The ARN for the directory to which the upgraded schema will be
--   applied.
upgradeAppliedSchema_directoryArn :: Lens' UpgradeAppliedSchema Text

-- | The ARN of the directory that is returned as part of the response.
upgradeAppliedSchemaResponse_directoryArn :: Lens' UpgradeAppliedSchemaResponse (Maybe Text)

-- | The ARN of the upgraded schema that is returned as part of the
--   response.
upgradeAppliedSchemaResponse_upgradedSchemaArn :: Lens' UpgradeAppliedSchemaResponse (Maybe Text)

-- | The response's http status code.
upgradeAppliedSchemaResponse_httpStatus :: Lens' UpgradeAppliedSchemaResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
deleteFacet_schemaArn :: Lens' DeleteFacet Text

-- | The name of the facet to delete.
deleteFacet_name :: Lens' DeleteFacet Text

-- | The response's http status code.
deleteFacetResponse_httpStatus :: Lens' DeleteFacetResponse Int

-- | The pagination token.
listTypedLinkFacetAttributes_nextToken :: Lens' ListTypedLinkFacetAttributes (Maybe Text)

-- | The maximum number of results to retrieve.
listTypedLinkFacetAttributes_maxResults :: Lens' ListTypedLinkFacetAttributes (Maybe Natural)

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
listTypedLinkFacetAttributes_schemaArn :: Lens' ListTypedLinkFacetAttributes Text

-- | The unique name of the typed link facet.
listTypedLinkFacetAttributes_name :: Lens' ListTypedLinkFacetAttributes Text

-- | The pagination token.
listTypedLinkFacetAttributesResponse_nextToken :: Lens' ListTypedLinkFacetAttributesResponse (Maybe Text)

-- | An ordered set of attributes associate with the typed link.
listTypedLinkFacetAttributesResponse_attributes :: Lens' ListTypedLinkFacetAttributesResponse (Maybe [TypedLinkAttributeDefinition])

-- | The response's http status code.
listTypedLinkFacetAttributesResponse_httpStatus :: Lens' ListTypedLinkFacetAttributesResponse Int

-- | Used for testing whether the Development schema provided is backwards
--   compatible, or not, with the publish schema provided by the user to be
--   upgraded. If schema compatibility fails, an exception would be thrown
--   else the call would succeed. This parameter is optional and defaults
--   to false.
upgradePublishedSchema_dryRun :: Lens' UpgradePublishedSchema (Maybe Bool)

-- | The ARN of the development schema with the changes used for the
--   upgrade.
upgradePublishedSchema_developmentSchemaArn :: Lens' UpgradePublishedSchema Text

-- | The ARN of the published schema to be upgraded.
upgradePublishedSchema_publishedSchemaArn :: Lens' UpgradePublishedSchema Text

-- | Identifies the minor version of the published schema that will be
--   created. This parameter is NOT optional.
upgradePublishedSchema_minorVersion :: Lens' UpgradePublishedSchema Text

-- | The ARN of the upgraded schema that is returned as part of the
--   response.
upgradePublishedSchemaResponse_upgradedSchemaArn :: Lens' UpgradePublishedSchemaResponse (Maybe Text)

-- | The response's http status code.
upgradePublishedSchemaResponse_httpStatus :: Lens' UpgradePublishedSchemaResponse Int

-- | The name of link that is used to attach this object to a parent.
createObject_linkName :: Lens' CreateObject (Maybe Text)

-- | If specified, the parent reference to which this object will be
--   attached.
createObject_parentReference :: Lens' CreateObject (Maybe ObjectReference)

-- | The attribute map whose attribute ARN contains the key and attribute
--   value as the map value.
createObject_objectAttributeList :: Lens' CreateObject (Maybe [AttributeKeyAndValue])

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   in which the object will be created. For more information, see arns.
createObject_directoryArn :: Lens' CreateObject Text

-- | A list of schema facets to be associated with the object. Do not
--   provide minor version components. See SchemaFacet for details.
createObject_schemaFacets :: Lens' CreateObject [SchemaFacet]

-- | The identifier that is associated with the object.
createObjectResponse_objectIdentifier :: Lens' CreateObjectResponse (Maybe Text)

-- | The response's http status code.
createObjectResponse_httpStatus :: Lens' CreateObjectResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
batchWrite_directoryArn :: Lens' BatchWrite Text

-- | A list of operations that are part of the batch.
batchWrite_operations :: Lens' BatchWrite [BatchWriteOperation]

-- | A list of all the responses for each batch write.
batchWriteResponse_responses :: Lens' BatchWriteResponse (Maybe [BatchWriteOperationResponse])

-- | The response's http status code.
batchWriteResponse_httpStatus :: Lens' BatchWriteResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the updated typed link resides. For more information, see arns
--   or <a>Typed Links</a>.
updateLinkAttributes_directoryArn :: Lens' UpdateLinkAttributes Text

-- | Allows a typed link specifier to be accepted as input.
updateLinkAttributes_typedLinkSpecifier :: Lens' UpdateLinkAttributes TypedLinkSpecifier

-- | The attributes update structure.
updateLinkAttributes_attributeUpdates :: Lens' UpdateLinkAttributes [LinkAttributeUpdate]

-- | The response's http status code.
updateLinkAttributesResponse_httpStatus :: Lens' UpdateLinkAttributesResponse Int

-- | The pagination token.
listDevelopmentSchemaArns_nextToken :: Lens' ListDevelopmentSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listDevelopmentSchemaArns_maxResults :: Lens' ListDevelopmentSchemaArns (Maybe Natural)

-- | The ARNs of retrieved development schemas.
listDevelopmentSchemaArnsResponse_schemaArns :: Lens' ListDevelopmentSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listDevelopmentSchemaArnsResponse_nextToken :: Lens' ListDevelopmentSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listDevelopmentSchemaArnsResponse_httpStatus :: Lens' ListDevelopmentSchemaArnsResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
getTypedLinkFacetInformation_schemaArn :: Lens' GetTypedLinkFacetInformation Text

-- | The unique name of the typed link facet.
getTypedLinkFacetInformation_name :: Lens' GetTypedLinkFacetInformation Text

-- | The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
getTypedLinkFacetInformationResponse_identityAttributeOrder :: Lens' GetTypedLinkFacetInformationResponse (Maybe [Text])

-- | The response's http status code.
getTypedLinkFacetInformationResponse_httpStatus :: Lens' GetTypedLinkFacetInformationResponse Int

-- | The Amazon Resource Name (ARN) of the directory where you want to
--   detach the typed link.
detachTypedLink_directoryArn :: Lens' DetachTypedLink Text

-- | Used to accept a typed link specifier as input.
detachTypedLink_typedLinkSpecifier :: Lens' DetachTypedLink TypedLinkSpecifier

-- | The Amazon Resource Name (ARN) that is associated with the Facet. For
--   more information, see arns.
getFacet_schemaArn :: Lens' GetFacet Text

-- | The name of the facet to retrieve.
getFacet_name :: Lens' GetFacet Text

-- | The Facet structure that is associated with the facet.
getFacetResponse_facet :: Lens' GetFacetResponse (Maybe Facet)

-- | The response's http status code.
getFacetResponse_httpStatus :: Lens' GetFacetResponse Int

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Keys of the tag that need to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The pagination token.
listIncomingTypedLinks_nextToken :: Lens' ListIncomingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
listIncomingTypedLinks_filterTypedLink :: Lens' ListIncomingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
listIncomingTypedLinks_maxResults :: Lens' ListIncomingTypedLinks (Maybe Natural)

-- | The consistency level to execute the request at.
listIncomingTypedLinks_consistencyLevel :: Lens' ListIncomingTypedLinks (Maybe ConsistencyLevel)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
listIncomingTypedLinks_filterAttributeRanges :: Lens' ListIncomingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The Amazon Resource Name (ARN) of the directory where you want to list
--   the typed links.
listIncomingTypedLinks_directoryArn :: Lens' ListIncomingTypedLinks Text

-- | Reference that identifies the object whose attributes will be listed.
listIncomingTypedLinks_objectReference :: Lens' ListIncomingTypedLinks ObjectReference

-- | Returns one or more typed link specifiers as output.
listIncomingTypedLinksResponse_linkSpecifiers :: Lens' ListIncomingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The pagination token.
listIncomingTypedLinksResponse_nextToken :: Lens' ListIncomingTypedLinksResponse (Maybe Text)

-- | The response's http status code.
listIncomingTypedLinksResponse_httpStatus :: Lens' ListIncomingTypedLinksResponse Int

-- | The pagination token.
listObjectParents_nextToken :: Lens' ListObjectParents (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectParents_maxResults :: Lens' ListObjectParents (Maybe Natural)

-- | When set to True, returns all ListObjectParentsResponse$ParentLinks.
--   There could be multiple links between a parent-child pair.
listObjectParents_includeAllLinksToEachParent :: Lens' ListObjectParents (Maybe Bool)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectParents_consistencyLevel :: Lens' ListObjectParents (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
listObjectParents_directoryArn :: Lens' ListObjectParents Text

-- | The reference that identifies the object for which parent objects are
--   being listed.
listObjectParents_objectReference :: Lens' ListObjectParents ObjectReference

-- | Returns a list of parent reference and LinkName Tuples.
listObjectParentsResponse_parentLinks :: Lens' ListObjectParentsResponse (Maybe [ObjectIdentifierAndLinkNameTuple])

-- | The parent structure, which is a map with key as the
--   <tt>ObjectIdentifier</tt> and LinkName as the value.
listObjectParentsResponse_parents :: Lens' ListObjectParentsResponse (Maybe (HashMap Text Text))

-- | The pagination token.
listObjectParentsResponse_nextToken :: Lens' ListObjectParentsResponse (Maybe Text)

-- | The response's http status code.
listObjectParentsResponse_httpStatus :: Lens' ListObjectParentsResponse Int

-- | The pagination token.
listPolicyAttachments_nextToken :: Lens' ListPolicyAttachments (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listPolicyAttachments_maxResults :: Lens' ListPolicyAttachments (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listPolicyAttachments_consistencyLevel :: Lens' ListPolicyAttachments (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
listPolicyAttachments_directoryArn :: Lens' ListPolicyAttachments Text

-- | The reference that identifies the policy object.
listPolicyAttachments_policyReference :: Lens' ListPolicyAttachments ObjectReference

-- | The pagination token.
listPolicyAttachmentsResponse_nextToken :: Lens' ListPolicyAttachmentsResponse (Maybe Text)

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
listPolicyAttachmentsResponse_objectIdentifiers :: Lens' ListPolicyAttachmentsResponse (Maybe [Text])

-- | The response's http status code.
listPolicyAttachmentsResponse_httpStatus :: Lens' ListPolicyAttachmentsResponse Int

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tag key-value pairs.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The pagination token.
listObjectAttributes_nextToken :: Lens' ListObjectAttributes (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectAttributes_maxResults :: Lens' ListObjectAttributes (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectAttributes_consistencyLevel :: Lens' ListObjectAttributes (Maybe ConsistencyLevel)

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
listObjectAttributes_facetFilter :: Lens' ListObjectAttributes (Maybe SchemaFacet)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
listObjectAttributes_directoryArn :: Lens' ListObjectAttributes Text

-- | The reference that identifies the object whose attributes will be
--   listed.
listObjectAttributes_objectReference :: Lens' ListObjectAttributes ObjectReference

-- | The pagination token.
listObjectAttributesResponse_nextToken :: Lens' ListObjectAttributesResponse (Maybe Text)

-- | Attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key, and attribute value is the value.
listObjectAttributesResponse_attributes :: Lens' ListObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | The response's http status code.
listObjectAttributesResponse_httpStatus :: Lens' ListObjectAttributesResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
deleteTypedLinkFacet_schemaArn :: Lens' DeleteTypedLinkFacet Text

-- | The unique name of the typed link facet.
deleteTypedLinkFacet_name :: Lens' DeleteTypedLinkFacet Text

-- | The response's http status code.
deleteTypedLinkFacetResponse_httpStatus :: Lens' DeleteTypedLinkFacetResponse Int

-- | The new name under which the schema will be published. If this is not
--   provided, the development schema is considered.
publishSchema_name :: Lens' PublishSchema (Maybe Text)

-- | The minor version under which the schema will be published. This
--   parameter is recommended. Schemas have both a major and minor version
--   associated with them.
publishSchema_minorVersion :: Lens' PublishSchema (Maybe Text)

-- | The Amazon Resource Name (ARN) that is associated with the development
--   schema. For more information, see arns.
publishSchema_developmentSchemaArn :: Lens' PublishSchema Text

-- | The major version under which the schema will be published. Schemas
--   have both a major and minor version associated with them.
publishSchema_version :: Lens' PublishSchema Text

-- | The ARN that is associated with the published schema. For more
--   information, see arns.
publishSchemaResponse_publishedSchemaArn :: Lens' PublishSchemaResponse (Maybe Text)

-- | The response's http status code.
publishSchemaResponse_httpStatus :: Lens' PublishSchemaResponse Int

-- | The ARN of the directory to delete.
deleteDirectory_directoryArn :: Lens' DeleteDirectory Text

-- | The response's http status code.
deleteDirectoryResponse_httpStatus :: Lens' DeleteDirectoryResponse Int

-- | The ARN of the deleted directory.
deleteDirectoryResponse_directoryArn :: Lens' DeleteDirectoryResponse Text

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
updateTypedLinkFacet_schemaArn :: Lens' UpdateTypedLinkFacet Text

-- | The unique name of the typed link facet.
updateTypedLinkFacet_name :: Lens' UpdateTypedLinkFacet Text

-- | Attributes update structure.
updateTypedLinkFacet_attributeUpdates :: Lens' UpdateTypedLinkFacet [TypedLinkFacetAttributeUpdate]

-- | The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to a typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
updateTypedLinkFacet_identityAttributeOrder :: Lens' UpdateTypedLinkFacet [Text]

-- | The response's http status code.
updateTypedLinkFacetResponse_httpStatus :: Lens' UpdateTypedLinkFacetResponse Int

-- | The name of the Directory. Should be unique per account, per region.
createDirectory_name :: Lens' CreateDirectory Text

-- | The Amazon Resource Name (ARN) of the published schema that will be
--   copied into the data Directory. For more information, see arns.
createDirectory_schemaArn :: Lens' CreateDirectory Text

-- | The response's http status code.
createDirectoryResponse_httpStatus :: Lens' CreateDirectoryResponse Int

-- | The ARN that is associated with the Directory. For more information,
--   see arns.
createDirectoryResponse_directoryArn :: Lens' CreateDirectoryResponse Text

-- | The name of the Directory.
createDirectoryResponse_name :: Lens' CreateDirectoryResponse Text

-- | The root object node of the created directory.
createDirectoryResponse_objectIdentifier :: Lens' CreateDirectoryResponse Text

-- | The ARN of the published schema in the Directory. Once a published
--   schema is copied into the directory, it has its own ARN, which is
--   referred to applied schema ARN. For more information, see arns.
createDirectoryResponse_appliedSchemaArn :: Lens' CreateDirectoryResponse Text

-- | The pagination token.
listPublishedSchemaArns_nextToken :: Lens' ListPublishedSchemaArns (Maybe Text)

-- | The response for <tt>ListPublishedSchemaArns</tt> when this parameter
--   is used will list all minor version ARNs for a major version.
listPublishedSchemaArns_schemaArn :: Lens' ListPublishedSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listPublishedSchemaArns_maxResults :: Lens' ListPublishedSchemaArns (Maybe Natural)

-- | The ARNs of published schemas.
listPublishedSchemaArnsResponse_schemaArns :: Lens' ListPublishedSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listPublishedSchemaArnsResponse_nextToken :: Lens' ListPublishedSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listPublishedSchemaArnsResponse_httpStatus :: Lens' ListPublishedSchemaArnsResponse Int

-- | The pagination token.
listDirectories_nextToken :: Lens' ListDirectories (Maybe Text)

-- | The maximum number of results to retrieve.
listDirectories_maxResults :: Lens' ListDirectories (Maybe Natural)

-- | The state of the directories in the list. Can be either Enabled,
--   Disabled, or Deleted.
listDirectories_state :: Lens' ListDirectories (Maybe DirectoryState)

-- | The pagination token.
listDirectoriesResponse_nextToken :: Lens' ListDirectoriesResponse (Maybe Text)

-- | The response's http status code.
listDirectoriesResponse_httpStatus :: Lens' ListDirectoriesResponse Int

-- | Lists all directories that are associated with your account in
--   pagination fashion.
listDirectoriesResponse_directories :: Lens' ListDirectoriesResponse [Directory]

-- | The pagination token.
listObjectParentPaths_nextToken :: Lens' ListObjectParentPaths (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectParentPaths_maxResults :: Lens' ListObjectParentPaths (Maybe Natural)

-- | The ARN of the directory to which the parent path applies.
listObjectParentPaths_directoryArn :: Lens' ListObjectParentPaths Text

-- | The reference that identifies the object whose parent paths are
--   listed.
listObjectParentPaths_objectReference :: Lens' ListObjectParentPaths ObjectReference

-- | The pagination token.
listObjectParentPathsResponse_nextToken :: Lens' ListObjectParentPathsResponse (Maybe Text)

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
listObjectParentPathsResponse_pathToObjectIdentifiersList :: Lens' ListObjectParentPathsResponse (Maybe [PathToObjectIdentifiers])

-- | The response's http status code.
listObjectParentPathsResponse_httpStatus :: Lens' ListObjectParentPathsResponse Int

-- | The name that is associated with the schema. This is unique to each
--   account and in each region.
createSchema_name :: Lens' CreateSchema Text

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
createSchemaResponse_schemaArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The response's http status code.
createSchemaResponse_httpStatus :: Lens' CreateSchemaResponse Int

-- | The token to request the next page of results.
lookupPolicy_nextToken :: Lens' LookupPolicy (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
lookupPolicy_maxResults :: Lens' LookupPolicy (Maybe Natural)

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
lookupPolicy_directoryArn :: Lens' LookupPolicy Text

-- | Reference that identifies the object whose policies will be looked up.
lookupPolicy_objectReference :: Lens' LookupPolicy ObjectReference

-- | The pagination token.
lookupPolicyResponse_nextToken :: Lens' LookupPolicyResponse (Maybe Text)

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
lookupPolicyResponse_policyToPathList :: Lens' LookupPolicyResponse (Maybe [PolicyToPath])

-- | The response's http status code.
lookupPolicyResponse_httpStatus :: Lens' LookupPolicyResponse Int

-- | The name of the link between the parent object and the index object.
createIndex_linkName :: Lens' CreateIndex (Maybe Text)

-- | A reference to the parent object that contains the index object.
createIndex_parentReference :: Lens' CreateIndex (Maybe ObjectReference)

-- | The ARN of the directory where the index should be created.
createIndex_directoryArn :: Lens' CreateIndex Text

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
createIndex_orderedIndexedAttributeList :: Lens' CreateIndex [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
createIndex_isUnique :: Lens' CreateIndex Bool

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
createIndexResponse_objectIdentifier :: Lens' CreateIndexResponse (Maybe Text)

-- | The response's http status code.
createIndexResponse_httpStatus :: Lens' CreateIndexResponse Int

-- | The Amazon Resource Name (ARN) of the directory the index and object
--   exist in.
detachFromIndex_directoryArn :: Lens' DetachFromIndex Text

-- | A reference to the index object.
detachFromIndex_indexReference :: Lens' DetachFromIndex ObjectReference

-- | A reference to the object being detached from the index.
detachFromIndex_targetReference :: Lens' DetachFromIndex ObjectReference

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
detachFromIndexResponse_detachedObjectIdentifier :: Lens' DetachFromIndexResponse (Maybe Text)

-- | The response's http status code.
detachFromIndexResponse_httpStatus :: Lens' DetachFromIndexResponse Int

-- | The pagination token.
listAttachedIndices_nextToken :: Lens' ListAttachedIndices (Maybe Text)

-- | The maximum number of results to retrieve.
listAttachedIndices_maxResults :: Lens' ListAttachedIndices (Maybe Natural)

-- | The consistency level to use for this operation.
listAttachedIndices_consistencyLevel :: Lens' ListAttachedIndices (Maybe ConsistencyLevel)

-- | The ARN of the directory.
listAttachedIndices_directoryArn :: Lens' ListAttachedIndices Text

-- | A reference to the object that has indices attached.
listAttachedIndices_targetReference :: Lens' ListAttachedIndices ObjectReference

-- | The pagination token.
listAttachedIndicesResponse_nextToken :: Lens' ListAttachedIndicesResponse (Maybe Text)

-- | The indices attached to the specified object.
listAttachedIndicesResponse_indexAttachments :: Lens' ListAttachedIndicesResponse (Maybe [IndexAttachment])

-- | The response's http status code.
listAttachedIndicesResponse_httpStatus :: Lens' ListAttachedIndicesResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where both objects reside. For more information, see arns.
detachPolicy_directoryArn :: Lens' DetachPolicy Text

-- | Reference that identifies the policy object.
detachPolicy_policyReference :: Lens' DetachPolicy ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
detachPolicy_objectReference :: Lens' DetachPolicy ObjectReference

-- | The response's http status code.
detachPolicyResponse_httpStatus :: Lens' DetachPolicyResponse Int

-- | The pagination token.
listObjectChildren_nextToken :: Lens' ListObjectChildren (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectChildren_maxResults :: Lens' ListObjectChildren (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectChildren_consistencyLevel :: Lens' ListObjectChildren (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
listObjectChildren_directoryArn :: Lens' ListObjectChildren Text

-- | The reference that identifies the object for which child objects are
--   being listed.
listObjectChildren_objectReference :: Lens' ListObjectChildren ObjectReference

-- | The pagination token.
listObjectChildrenResponse_nextToken :: Lens' ListObjectChildrenResponse (Maybe Text)

-- | Children structure, which is a map with key as the <tt>LinkName</tt>
--   and <tt>ObjectIdentifier</tt> as the value.
listObjectChildrenResponse_children :: Lens' ListObjectChildrenResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listObjectChildrenResponse_httpStatus :: Lens' ListObjectChildrenResponse Int

-- | The pagination token.
listIndex_nextToken :: Lens' ListIndex (Maybe Text)

-- | The maximum number of objects in a single page to retrieve from the
--   index during a request. For more information, see <a>Amazon Cloud
--   Directory Limits</a>.
listIndex_maxResults :: Lens' ListIndex (Maybe Natural)

-- | The consistency level to execute the request at.
listIndex_consistencyLevel :: Lens' ListIndex (Maybe ConsistencyLevel)

-- | Specifies the ranges of indexed values that you want to query.
listIndex_rangesOnIndexedValues :: Lens' ListIndex (Maybe [ObjectAttributeRange])

-- | The ARN of the directory that the index exists in.
listIndex_directoryArn :: Lens' ListIndex Text

-- | The reference to the index to list.
listIndex_indexReference :: Lens' ListIndex ObjectReference

-- | The pagination token.
listIndexResponse_nextToken :: Lens' ListIndexResponse (Maybe Text)

-- | The objects and indexed values attached to the index.
listIndexResponse_indexAttachments :: Lens' ListIndexResponse (Maybe [IndexAttachment])

-- | The response's http status code.
listIndexResponse_httpStatus :: Lens' ListIndexResponse Int

-- | The pagination token.
listObjectPolicies_nextToken :: Lens' ListObjectPolicies (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
listObjectPolicies_maxResults :: Lens' ListObjectPolicies (Maybe Natural)

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
listObjectPolicies_consistencyLevel :: Lens' ListObjectPolicies (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
listObjectPolicies_directoryArn :: Lens' ListObjectPolicies Text

-- | Reference that identifies the object for which policies will be
--   listed.
listObjectPolicies_objectReference :: Lens' ListObjectPolicies ObjectReference

-- | The pagination token.
listObjectPoliciesResponse_nextToken :: Lens' ListObjectPoliciesResponse (Maybe Text)

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
listObjectPoliciesResponse_attachedPolicyIds :: Lens' ListObjectPoliciesResponse (Maybe [Text])

-- | The response's http status code.
listObjectPoliciesResponse_httpStatus :: Lens' ListObjectPoliciesResponse Int

-- | The consistency level at which to retrieve the attributes on a typed
--   link.
getLinkAttributes_consistencyLevel :: Lens' GetLinkAttributes (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the typed link resides. For more information, see arns or
--   <a>Typed Links</a>.
getLinkAttributes_directoryArn :: Lens' GetLinkAttributes Text

-- | Allows a typed link specifier to be accepted as input.
getLinkAttributes_typedLinkSpecifier :: Lens' GetLinkAttributes TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
getLinkAttributes_attributeNames :: Lens' GetLinkAttributes [Text]

-- | The attributes that are associated with the typed link.
getLinkAttributesResponse_attributes :: Lens' GetLinkAttributesResponse (Maybe [AttributeKeyAndValue])

-- | The response's http status code.
getLinkAttributesResponse_httpStatus :: Lens' GetLinkAttributesResponse Int

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
createFacet_facetStyle :: Lens' CreateFacet (Maybe FacetStyle)

-- | The attributes that are associated with the Facet.
createFacet_attributes :: Lens' CreateFacet (Maybe [FacetAttribute])

-- | Specifies whether a given object created from this facet is of type
--   node, leaf node, policy or index.
--   
--   <ul>
--   <li>Node: Can have multiple children but one parent.</li>
--   <li>Leaf node: Cannot have children but can have multiple
--   parents.</li>
--   <li>Policy: Allows you to store a policy document and policy type. For
--   more information, see <a>Policies</a>.</li>
--   <li>Index: Can be created with the Index API.</li>
--   </ul>
createFacet_objectType :: Lens' CreateFacet (Maybe ObjectType)

-- | The schema ARN in which the new Facet will be created. For more
--   information, see arns.
createFacet_schemaArn :: Lens' CreateFacet Text

-- | The name of the Facet, which is unique for a given schema.
createFacet_name :: Lens' CreateFacet Text

-- | The response's http status code.
createFacetResponse_httpStatus :: Lens' CreateFacetResponse Int

-- | The ARN of the schema to update.
putSchemaFromJson_schemaArn :: Lens' PutSchemaFromJson Text

-- | The replacement JSON schema.
putSchemaFromJson_document :: Lens' PutSchemaFromJson Text

-- | The ARN of the schema to update.
putSchemaFromJsonResponse_arn :: Lens' PutSchemaFromJsonResponse (Maybe Text)

-- | The response's http status code.
putSchemaFromJsonResponse_httpStatus :: Lens' PutSchemaFromJsonResponse Int

-- | Represents the manner and timing in which the successful write or
--   update of an object is reflected in a subsequent read operation of
--   that same object.
batchRead_consistencyLevel :: Lens' BatchRead (Maybe ConsistencyLevel)

-- | The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
batchRead_directoryArn :: Lens' BatchRead Text

-- | A list of operations that are part of the batch.
batchRead_operations :: Lens' BatchRead [BatchReadOperation]

-- | A list of all the responses for each batch read.
batchReadResponse_responses :: Lens' BatchReadResponse (Maybe [BatchReadOperationResponse])

-- | The response's http status code.
batchReadResponse_httpStatus :: Lens' BatchReadResponse Int

-- | Amazon Resource Name (ARN) that is associated with the Directory where
--   both objects reside. For more information, see arns.
attachObject_directoryArn :: Lens' AttachObject Text

-- | The parent object reference.
attachObject_parentReference :: Lens' AttachObject ObjectReference

-- | The child object reference to be attached to the object.
attachObject_childReference :: Lens' AttachObject ObjectReference

-- | The link name with which the child object is attached to the parent.
attachObject_linkName :: Lens' AttachObject Text

-- | The attached <tt>ObjectIdentifier</tt>, which is the child
--   <tt>ObjectIdentifier</tt>.
attachObjectResponse_attachedObjectIdentifier :: Lens' AttachObjectResponse (Maybe Text)

-- | The response's http status code.
attachObjectResponse_httpStatus :: Lens' AttachObjectResponse Int

-- | The Amazon Resource Name (ARN) of the directory where the object and
--   index exist.
attachToIndex_directoryArn :: Lens' AttachToIndex Text

-- | A reference to the index that you are attaching the object to.
attachToIndex_indexReference :: Lens' AttachToIndex ObjectReference

-- | A reference to the object that you are attaching to the index.
attachToIndex_targetReference :: Lens' AttachToIndex ObjectReference

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
attachToIndexResponse_attachedObjectIdentifier :: Lens' AttachToIndexResponse (Maybe Text)

-- | The response's http status code.
attachToIndexResponse_httpStatus :: Lens' AttachToIndexResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where both objects reside. For more information, see arns.
attachPolicy_directoryArn :: Lens' AttachPolicy Text

-- | The reference that is associated with the policy object.
attachPolicy_policyReference :: Lens' AttachPolicy ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
attachPolicy_objectReference :: Lens' AttachPolicy ObjectReference

-- | The response's http status code.
attachPolicyResponse_httpStatus :: Lens' AttachPolicyResponse Int

-- | The pagination token.
listFacetNames_nextToken :: Lens' ListFacetNames (Maybe Text)

-- | The maximum number of results to retrieve.
listFacetNames_maxResults :: Lens' ListFacetNames (Maybe Natural)

-- | The Amazon Resource Name (ARN) to retrieve facet names from.
listFacetNames_schemaArn :: Lens' ListFacetNames Text

-- | The pagination token.
listFacetNamesResponse_nextToken :: Lens' ListFacetNamesResponse (Maybe Text)

-- | The names of facets that exist within the schema.
listFacetNamesResponse_facetNames :: Lens' ListFacetNamesResponse (Maybe [Text])

-- | The response's http status code.
listFacetNamesResponse_httpStatus :: Lens' ListFacetNamesResponse Int

-- | The pagination token.
listOutgoingTypedLinks_nextToken :: Lens' ListOutgoingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
listOutgoingTypedLinks_filterTypedLink :: Lens' ListOutgoingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
listOutgoingTypedLinks_maxResults :: Lens' ListOutgoingTypedLinks (Maybe Natural)

-- | The consistency level to execute the request at.
listOutgoingTypedLinks_consistencyLevel :: Lens' ListOutgoingTypedLinks (Maybe ConsistencyLevel)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
listOutgoingTypedLinks_filterAttributeRanges :: Lens' ListOutgoingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The Amazon Resource Name (ARN) of the directory where you want to list
--   the typed links.
listOutgoingTypedLinks_directoryArn :: Lens' ListOutgoingTypedLinks Text

-- | A reference that identifies the object whose attributes will be
--   listed.
listOutgoingTypedLinks_objectReference :: Lens' ListOutgoingTypedLinks ObjectReference

-- | The pagination token.
listOutgoingTypedLinksResponse_nextToken :: Lens' ListOutgoingTypedLinksResponse (Maybe Text)

-- | Returns a typed link specifier as output.
listOutgoingTypedLinksResponse_typedLinkSpecifiers :: Lens' ListOutgoingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The response's http status code.
listOutgoingTypedLinksResponse_httpStatus :: Lens' ListOutgoingTypedLinksResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
updateObjectAttributes_directoryArn :: Lens' UpdateObjectAttributes Text

-- | The reference that identifies the object.
updateObjectAttributes_objectReference :: Lens' UpdateObjectAttributes ObjectReference

-- | The attributes update structure.
updateObjectAttributes_attributeUpdates :: Lens' UpdateObjectAttributes [ObjectAttributeUpdate]

-- | The <tt>ObjectIdentifier</tt> of the updated object.
updateObjectAttributesResponse_objectIdentifier :: Lens' UpdateObjectAttributesResponse (Maybe Text)

-- | The response's http status code.
updateObjectAttributesResponse_httpStatus :: Lens' UpdateObjectAttributesResponse Int

-- | The pagination token.
listAppliedSchemaArns_nextToken :: Lens' ListAppliedSchemaArns (Maybe Text)

-- | The response for <tt>ListAppliedSchemaArns</tt> when this parameter is
--   used will list all minor version ARNs for a major version.
listAppliedSchemaArns_schemaArn :: Lens' ListAppliedSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listAppliedSchemaArns_maxResults :: Lens' ListAppliedSchemaArns (Maybe Natural)

-- | The ARN of the directory you are listing.
listAppliedSchemaArns_directoryArn :: Lens' ListAppliedSchemaArns Text

-- | The ARNs of schemas that are applied to the directory.
listAppliedSchemaArnsResponse_schemaArns :: Lens' ListAppliedSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listAppliedSchemaArnsResponse_nextToken :: Lens' ListAppliedSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listAppliedSchemaArnsResponse_httpStatus :: Lens' ListAppliedSchemaArnsResponse Int

-- | The pagination token.
listManagedSchemaArns_nextToken :: Lens' ListManagedSchemaArns (Maybe Text)

-- | The response for ListManagedSchemaArns. When this parameter is used,
--   all minor version ARNs for a major version are listed.
listManagedSchemaArns_schemaArn :: Lens' ListManagedSchemaArns (Maybe Text)

-- | The maximum number of results to retrieve.
listManagedSchemaArns_maxResults :: Lens' ListManagedSchemaArns (Maybe Natural)

-- | The ARNs for all AWS managed schemas.
listManagedSchemaArnsResponse_schemaArns :: Lens' ListManagedSchemaArnsResponse (Maybe [Text])

-- | The pagination token.
listManagedSchemaArnsResponse_nextToken :: Lens' ListManagedSchemaArnsResponse (Maybe Text)

-- | The response's http status code.
listManagedSchemaArnsResponse_httpStatus :: Lens' ListManagedSchemaArnsResponse Int

-- | The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
deleteSchema_schemaArn :: Lens' DeleteSchema Text

-- | The input ARN that is returned as part of the response. For more
--   information, see arns.
deleteSchemaResponse_schemaArn :: Lens' DeleteSchemaResponse (Maybe Text)

-- | The response's http status code.
deleteSchemaResponse_httpStatus :: Lens' DeleteSchemaResponse Int

-- | The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
updateSchema_schemaArn :: Lens' UpdateSchema Text

-- | The name of the schema.
updateSchema_name :: Lens' UpdateSchema Text

-- | The ARN that is associated with the updated schema. For more
--   information, see arns.
updateSchemaResponse_schemaArn :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The response's http status code.
updateSchemaResponse_httpStatus :: Lens' UpdateSchemaResponse Int

-- | The ARN of the directory in which the object resides.
removeFacetFromObject_directoryArn :: Lens' RemoveFacetFromObject Text

-- | The facet to remove. See SchemaFacet for details.
removeFacetFromObject_schemaFacet :: Lens' RemoveFacetFromObject SchemaFacet

-- | A reference to the object to remove the facet from.
removeFacetFromObject_objectReference :: Lens' RemoveFacetFromObject ObjectReference

-- | The response's http status code.
removeFacetFromObjectResponse_httpStatus :: Lens' RemoveFacetFromObjectResponse Int

-- | The pagination token.
listFacetAttributes_nextToken :: Lens' ListFacetAttributes (Maybe Text)

-- | The maximum number of results to retrieve.
listFacetAttributes_maxResults :: Lens' ListFacetAttributes (Maybe Natural)

-- | The ARN of the schema where the facet resides.
listFacetAttributes_schemaArn :: Lens' ListFacetAttributes Text

-- | The name of the facet whose attributes will be retrieved.
listFacetAttributes_name :: Lens' ListFacetAttributes Text

-- | The pagination token.
listFacetAttributesResponse_nextToken :: Lens' ListFacetAttributesResponse (Maybe Text)

-- | The attributes attached to the facet.
listFacetAttributesResponse_attributes :: Lens' ListFacetAttributesResponse (Maybe [FacetAttribute])

-- | The response's http status code.
listFacetAttributesResponse_httpStatus :: Lens' ListFacetAttributesResponse Int

-- | The ARN of the applied schema.
getAppliedSchemaVersion_schemaArn :: Lens' GetAppliedSchemaVersion Text

-- | Current applied schema ARN, including the minor version in use if one
--   was provided.
getAppliedSchemaVersionResponse_appliedSchemaArn :: Lens' GetAppliedSchemaVersionResponse (Maybe Text)

-- | The response's http status code.
getAppliedSchemaVersionResponse_httpStatus :: Lens' GetAppliedSchemaVersionResponse Int

-- | The ARN of the directory to enable.
enableDirectory_directoryArn :: Lens' EnableDirectory Text

-- | The response's http status code.
enableDirectoryResponse_httpStatus :: Lens' EnableDirectoryResponse Int

-- | The ARN of the enabled directory.
enableDirectoryResponse_directoryArn :: Lens' EnableDirectoryResponse Text

-- | Published schema Amazon Resource Name (ARN) that needs to be copied.
--   For more information, see arns.
applySchema_publishedSchemaArn :: Lens' ApplySchema Text

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   into which the schema is copied. For more information, see arns.
applySchema_directoryArn :: Lens' ApplySchema Text

-- | The ARN that is associated with the Directory. For more information,
--   see arns.
applySchemaResponse_directoryArn :: Lens' ApplySchemaResponse (Maybe Text)

-- | The applied schema ARN that is associated with the copied schema in
--   the Directory. You can use this ARN to describe the schema information
--   applied on this directory. For more information, see arns.
applySchemaResponse_appliedSchemaArn :: Lens' ApplySchemaResponse (Maybe Text)

-- | The response's http status code.
applySchemaResponse_httpStatus :: Lens' ApplySchemaResponse Int

-- | The ARN of the directory to disable.
disableDirectory_directoryArn :: Lens' DisableDirectory Text

-- | The response's http status code.
disableDirectoryResponse_httpStatus :: Lens' DisableDirectoryResponse Int

-- | The ARN of the directory that has been disabled.
disableDirectoryResponse_directoryArn :: Lens' DisableDirectoryResponse Text

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
createTypedLinkFacet_schemaArn :: Lens' CreateTypedLinkFacet Text

-- | Facet structure that is associated with the typed link facet.
createTypedLinkFacet_facet :: Lens' CreateTypedLinkFacet TypedLinkFacet

-- | The response's http status code.
createTypedLinkFacetResponse_httpStatus :: Lens' CreateTypedLinkFacetResponse Int

-- | The ARN of the schema to retrieve.
getSchemaAsJson_schemaArn :: Lens' GetSchemaAsJson Text

-- | The name of the retrieved schema.
getSchemaAsJsonResponse_name :: Lens' GetSchemaAsJsonResponse (Maybe Text)

-- | The JSON representation of the schema document.
getSchemaAsJsonResponse_document :: Lens' GetSchemaAsJsonResponse (Maybe Text)

-- | The response's http status code.
getSchemaAsJsonResponse_httpStatus :: Lens' GetSchemaAsJsonResponse Int

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where objects reside. For more information, see arns.
detachObject_directoryArn :: Lens' DetachObject Text

-- | The parent reference from which the object with the specified link
--   name is detached.
detachObject_parentReference :: Lens' DetachObject ObjectReference

-- | The link name associated with the object that needs to be detached.
detachObject_linkName :: Lens' DetachObject Text

-- | The <tt>ObjectIdentifier</tt> that was detached from the object.
detachObjectResponse_detachedObjectIdentifier :: Lens' DetachObjectResponse (Maybe Text)

-- | The response's http status code.
detachObjectResponse_httpStatus :: Lens' DetachObjectResponse Int

-- | Attributes on the facet that you are adding to the object.
addFacetToObject_objectAttributeList :: Lens' AddFacetToObject (Maybe [AttributeKeyAndValue])

-- | The Amazon Resource Name (ARN) that is associated with the Directory
--   where the object resides. For more information, see arns.
addFacetToObject_directoryArn :: Lens' AddFacetToObject Text

-- | Identifiers for the facet that you are adding to the object. See
--   SchemaFacet for details.
addFacetToObject_schemaFacet :: Lens' AddFacetToObject SchemaFacet

-- | A reference to the object you are adding the specified facet to.
addFacetToObject_objectReference :: Lens' AddFacetToObject ObjectReference

-- | The response's http status code.
addFacetToObjectResponse_httpStatus :: Lens' AddFacetToObjectResponse Int

-- | The pagination token. This is for future use. Currently pagination is
--   not supported for tagging.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The <tt>MaxResults</tt> parameter sets the maximum number of results
--   returned in a single page. This is for future use and is not supported
--   currently.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tag key value pairs that are associated with the response.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
attributeKey_schemaArn :: Lens' AttributeKey Text

-- | The name of the facet that the attribute exists within.
attributeKey_facetName :: Lens' AttributeKey Text

-- | The name of the attribute.
attributeKey_name :: Lens' AttributeKey Text

-- | The key of the attribute.
attributeKeyAndValue_key :: Lens' AttributeKeyAndValue AttributeKey

-- | The value of the attribute.
attributeKeyAndValue_value :: Lens' AttributeKeyAndValue TypedAttributeValue

-- | The attribute name of the typed link.
attributeNameAndValue_attributeName :: Lens' AttributeNameAndValue Text

-- | The value for the typed link.
attributeNameAndValue_value :: Lens' AttributeNameAndValue TypedAttributeValue

-- | Represents the facet being added to the object.
batchAddFacetToObject_schemaFacet :: Lens' BatchAddFacetToObject SchemaFacet

-- | The attributes to set on the object.
batchAddFacetToObject_objectAttributeList :: Lens' BatchAddFacetToObject [AttributeKeyAndValue]

-- | A reference to the object being mutated.
batchAddFacetToObject_objectReference :: Lens' BatchAddFacetToObject ObjectReference

-- | The parent object reference.
batchAttachObject_parentReference :: Lens' BatchAttachObject ObjectReference

-- | The child object reference that is to be attached to the object.
batchAttachObject_childReference :: Lens' BatchAttachObject ObjectReference

-- | The name of the link.
batchAttachObject_linkName :: Lens' BatchAttachObject Text

-- | The <tt>ObjectIdentifier</tt> of the object that has been attached.
batchAttachObjectResponse_attachedObjectIdentifier :: Lens' BatchAttachObjectResponse (Maybe Text)

-- | The reference that is associated with the policy object.
batchAttachPolicy_policyReference :: Lens' BatchAttachPolicy ObjectReference

-- | The reference that identifies the object to which the policy will be
--   attached.
batchAttachPolicy_objectReference :: Lens' BatchAttachPolicy ObjectReference

-- | A reference to the index that you are attaching the object to.
batchAttachToIndex_indexReference :: Lens' BatchAttachToIndex ObjectReference

-- | A reference to the object that you are attaching to the index.
batchAttachToIndex_targetReference :: Lens' BatchAttachToIndex ObjectReference

-- | The <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
batchAttachToIndexResponse_attachedObjectIdentifier :: Lens' BatchAttachToIndexResponse (Maybe Text)

-- | Identifies the source object that the typed link will attach to.
batchAttachTypedLink_sourceObjectReference :: Lens' BatchAttachTypedLink ObjectReference

-- | Identifies the target object that the typed link will attach to.
batchAttachTypedLink_targetObjectReference :: Lens' BatchAttachTypedLink ObjectReference

-- | Identifies the typed link facet that is associated with the typed
--   link.
batchAttachTypedLink_typedLinkFacet :: Lens' BatchAttachTypedLink TypedLinkSchemaAndFacetName

-- | A set of attributes that are associated with the typed link.
batchAttachTypedLink_attributes :: Lens' BatchAttachTypedLink [AttributeNameAndValue]

-- | Returns a typed link specifier as output.
batchAttachTypedLinkResponse_typedLinkSpecifier :: Lens' BatchAttachTypedLinkResponse (Maybe TypedLinkSpecifier)

-- | The name of the link between the parent object and the index object.
batchCreateIndex_linkName :: Lens' BatchCreateIndex (Maybe Text)

-- | A reference to the parent object that contains the index object.
batchCreateIndex_parentReference :: Lens' BatchCreateIndex (Maybe ObjectReference)

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchCreateIndex_batchReferenceName :: Lens' BatchCreateIndex (Maybe Text)

-- | Specifies the attributes that should be indexed on. Currently only a
--   single attribute is supported.
batchCreateIndex_orderedIndexedAttributeList :: Lens' BatchCreateIndex [AttributeKey]

-- | Indicates whether the attribute that is being indexed has unique
--   values or not.
batchCreateIndex_isUnique :: Lens' BatchCreateIndex Bool

-- | The <tt>ObjectIdentifier</tt> of the index created by this operation.
batchCreateIndexResponse_objectIdentifier :: Lens' BatchCreateIndexResponse (Maybe Text)

-- | The name of the link.
batchCreateObject_linkName :: Lens' BatchCreateObject (Maybe Text)

-- | If specified, the parent reference to which this object will be
--   attached.
batchCreateObject_parentReference :: Lens' BatchCreateObject (Maybe ObjectReference)

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchCreateObject_batchReferenceName :: Lens' BatchCreateObject (Maybe Text)

-- | A list of <tt>FacetArns</tt> that will be associated with the object.
--   For more information, see arns.
batchCreateObject_schemaFacet :: Lens' BatchCreateObject [SchemaFacet]

-- | An attribute map, which contains an attribute ARN as the key and
--   attribute value as the map value.
batchCreateObject_objectAttributeList :: Lens' BatchCreateObject [AttributeKeyAndValue]

-- | The ID that is associated with the object.
batchCreateObjectResponse_objectIdentifier :: Lens' BatchCreateObjectResponse (Maybe Text)

-- | The reference that identifies the object.
batchDeleteObject_objectReference :: Lens' BatchDeleteObject ObjectReference

-- | A reference to the index object.
batchDetachFromIndex_indexReference :: Lens' BatchDetachFromIndex ObjectReference

-- | A reference to the object being detached from the index.
batchDetachFromIndex_targetReference :: Lens' BatchDetachFromIndex ObjectReference

-- | The <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
batchDetachFromIndexResponse_detachedObjectIdentifier :: Lens' BatchDetachFromIndexResponse (Maybe Text)

-- | The batch reference name. See <a>Transaction Support</a> for more
--   information.
batchDetachObject_batchReferenceName :: Lens' BatchDetachObject (Maybe Text)

-- | Parent reference from which the object with the specified link name is
--   detached.
batchDetachObject_parentReference :: Lens' BatchDetachObject ObjectReference

-- | The name of the link.
batchDetachObject_linkName :: Lens' BatchDetachObject Text

-- | The <tt>ObjectIdentifier</tt> of the detached object.
batchDetachObjectResponse_detachedObjectIdentifier :: Lens' BatchDetachObjectResponse (Maybe Text)

-- | Reference that identifies the policy object.
batchDetachPolicy_policyReference :: Lens' BatchDetachPolicy ObjectReference

-- | Reference that identifies the object whose policy object will be
--   detached.
batchDetachPolicy_objectReference :: Lens' BatchDetachPolicy ObjectReference

-- | Used to accept a typed link specifier as input.
batchDetachTypedLink_typedLinkSpecifier :: Lens' BatchDetachTypedLink TypedLinkSpecifier

-- | Allows a typed link specifier to be accepted as input.
batchGetLinkAttributes_typedLinkSpecifier :: Lens' BatchGetLinkAttributes TypedLinkSpecifier

-- | A list of attribute names whose values will be retrieved.
batchGetLinkAttributes_attributeNames :: Lens' BatchGetLinkAttributes [Text]

-- | The attributes that are associated with the typed link.
batchGetLinkAttributesResponse_attributes :: Lens' BatchGetLinkAttributesResponse (Maybe [AttributeKeyAndValue])

-- | Reference that identifies the object whose attributes will be
--   retrieved.
batchGetObjectAttributes_objectReference :: Lens' BatchGetObjectAttributes ObjectReference

-- | Identifier for the facet whose attributes will be retrieved. See
--   SchemaFacet for details.
batchGetObjectAttributes_schemaFacet :: Lens' BatchGetObjectAttributes SchemaFacet

-- | List of attribute names whose values will be retrieved.
batchGetObjectAttributes_attributeNames :: Lens' BatchGetObjectAttributes [Text]

-- | The attribute values that are associated with an object.
batchGetObjectAttributesResponse_attributes :: Lens' BatchGetObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | A reference to the object.
batchGetObjectInformation_objectReference :: Lens' BatchGetObjectInformation ObjectReference

-- | The facets attached to the specified object.
batchGetObjectInformationResponse_schemaFacets :: Lens' BatchGetObjectInformationResponse (Maybe [SchemaFacet])

-- | The <tt>ObjectIdentifier</tt> of the specified object.
batchGetObjectInformationResponse_objectIdentifier :: Lens' BatchGetObjectInformationResponse (Maybe Text)

-- | The pagination token.
batchListAttachedIndices_nextToken :: Lens' BatchListAttachedIndices (Maybe Text)

-- | The maximum number of results to retrieve.
batchListAttachedIndices_maxResults :: Lens' BatchListAttachedIndices (Maybe Natural)

-- | A reference to the object that has indices attached.
batchListAttachedIndices_targetReference :: Lens' BatchListAttachedIndices ObjectReference

-- | The pagination token.
batchListAttachedIndicesResponse_nextToken :: Lens' BatchListAttachedIndicesResponse (Maybe Text)

-- | The indices attached to the specified object.
batchListAttachedIndicesResponse_indexAttachments :: Lens' BatchListAttachedIndicesResponse (Maybe [IndexAttachment])

-- | The pagination token.
batchListIncomingTypedLinks_nextToken :: Lens' BatchListIncomingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes on the typed
--   link facet, not the order in which they are supplied to any API calls.
batchListIncomingTypedLinks_filterTypedLink :: Lens' BatchListIncomingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
batchListIncomingTypedLinks_maxResults :: Lens' BatchListIncomingTypedLinks (Maybe Natural)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
batchListIncomingTypedLinks_filterAttributeRanges :: Lens' BatchListIncomingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListIncomingTypedLinks_objectReference :: Lens' BatchListIncomingTypedLinks ObjectReference

-- | Returns one or more typed link specifiers as output.
batchListIncomingTypedLinksResponse_linkSpecifiers :: Lens' BatchListIncomingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The pagination token.
batchListIncomingTypedLinksResponse_nextToken :: Lens' BatchListIncomingTypedLinksResponse (Maybe Text)

-- | The pagination token.
batchListIndex_nextToken :: Lens' BatchListIndex (Maybe Text)

-- | The maximum number of results to retrieve.
batchListIndex_maxResults :: Lens' BatchListIndex (Maybe Natural)

-- | Specifies the ranges of indexed values that you want to query.
batchListIndex_rangesOnIndexedValues :: Lens' BatchListIndex (Maybe [ObjectAttributeRange])

-- | The reference to the index to list.
batchListIndex_indexReference :: Lens' BatchListIndex ObjectReference

-- | The pagination token.
batchListIndexResponse_nextToken :: Lens' BatchListIndexResponse (Maybe Text)

-- | The objects and indexed values attached to the index.
batchListIndexResponse_indexAttachments :: Lens' BatchListIndexResponse (Maybe [IndexAttachment])

-- | The pagination token.
batchListObjectAttributes_nextToken :: Lens' BatchListObjectAttributes (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
batchListObjectAttributes_maxResults :: Lens' BatchListObjectAttributes (Maybe Natural)

-- | Used to filter the list of object attributes that are associated with
--   a certain facet.
batchListObjectAttributes_facetFilter :: Lens' BatchListObjectAttributes (Maybe SchemaFacet)

-- | Reference of the object whose attributes need to be listed.
batchListObjectAttributes_objectReference :: Lens' BatchListObjectAttributes ObjectReference

-- | The pagination token.
batchListObjectAttributesResponse_nextToken :: Lens' BatchListObjectAttributesResponse (Maybe Text)

-- | The attributes map that is associated with the object.
--   <tt>AttributeArn</tt> is the key; attribute value is the value.
batchListObjectAttributesResponse_attributes :: Lens' BatchListObjectAttributesResponse (Maybe [AttributeKeyAndValue])

-- | The pagination token.
batchListObjectChildren_nextToken :: Lens' BatchListObjectChildren (Maybe Text)

-- | Maximum number of items to be retrieved in a single call. This is an
--   approximate number.
batchListObjectChildren_maxResults :: Lens' BatchListObjectChildren (Maybe Natural)

-- | Reference of the object for which child objects are being listed.
batchListObjectChildren_objectReference :: Lens' BatchListObjectChildren ObjectReference

-- | The pagination token.
batchListObjectChildrenResponse_nextToken :: Lens' BatchListObjectChildrenResponse (Maybe Text)

-- | The children structure, which is a map with the key as the
--   <tt>LinkName</tt> and <tt>ObjectIdentifier</tt> as the value.
batchListObjectChildrenResponse_children :: Lens' BatchListObjectChildrenResponse (Maybe (HashMap Text Text))

-- | The pagination token.
batchListObjectParentPaths_nextToken :: Lens' BatchListObjectParentPaths (Maybe Text)

-- | The maximum number of results to retrieve.
batchListObjectParentPaths_maxResults :: Lens' BatchListObjectParentPaths (Maybe Natural)

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListObjectParentPaths_objectReference :: Lens' BatchListObjectParentPaths ObjectReference

-- | The pagination token.
batchListObjectParentPathsResponse_nextToken :: Lens' BatchListObjectParentPathsResponse (Maybe Text)

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
batchListObjectParentPathsResponse_pathToObjectIdentifiersList :: Lens' BatchListObjectParentPathsResponse (Maybe [PathToObjectIdentifiers])

-- | The pagination token.
batchListObjectParents_nextToken :: Lens' BatchListObjectParents (Maybe Text)

-- | The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
batchListObjectParents_maxResults :: Lens' BatchListObjectParents (Maybe Natural)

-- | Undocumented member.
batchListObjectParents_objectReference :: Lens' BatchListObjectParents ObjectReference

-- | Returns a list of parent reference and LinkName Tuples.
batchListObjectParentsResponse_parentLinks :: Lens' BatchListObjectParentsResponse (Maybe [ObjectIdentifierAndLinkNameTuple])

-- | The pagination token.
batchListObjectParentsResponse_nextToken :: Lens' BatchListObjectParentsResponse (Maybe Text)

-- | The pagination token.
batchListObjectPolicies_nextToken :: Lens' BatchListObjectPolicies (Maybe Text)

-- | The maximum number of results to retrieve.
batchListObjectPolicies_maxResults :: Lens' BatchListObjectPolicies (Maybe Natural)

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListObjectPolicies_objectReference :: Lens' BatchListObjectPolicies ObjectReference

-- | The pagination token.
batchListObjectPoliciesResponse_nextToken :: Lens' BatchListObjectPoliciesResponse (Maybe Text)

-- | A list of policy <tt>ObjectIdentifiers</tt>, that are attached to the
--   object.
batchListObjectPoliciesResponse_attachedPolicyIds :: Lens' BatchListObjectPoliciesResponse (Maybe [Text])

-- | The pagination token.
batchListOutgoingTypedLinks_nextToken :: Lens' BatchListOutgoingTypedLinks (Maybe Text)

-- | Filters are interpreted in the order of the attributes defined on the
--   typed link facet, not the order they are supplied to any API calls.
batchListOutgoingTypedLinks_filterTypedLink :: Lens' BatchListOutgoingTypedLinks (Maybe TypedLinkSchemaAndFacetName)

-- | The maximum number of results to retrieve.
batchListOutgoingTypedLinks_maxResults :: Lens' BatchListOutgoingTypedLinks (Maybe Natural)

-- | Provides range filters for multiple attributes. When providing ranges
--   to typed link selection, any inexact ranges must be specified at the
--   end. Any attributes that do not have a range specified are presumed to
--   match the entire range.
batchListOutgoingTypedLinks_filterAttributeRanges :: Lens' BatchListOutgoingTypedLinks (Maybe [TypedLinkAttributeRange])

-- | The reference that identifies the object whose attributes will be
--   listed.
batchListOutgoingTypedLinks_objectReference :: Lens' BatchListOutgoingTypedLinks ObjectReference

-- | The pagination token.
batchListOutgoingTypedLinksResponse_nextToken :: Lens' BatchListOutgoingTypedLinksResponse (Maybe Text)

-- | Returns a typed link specifier as output.
batchListOutgoingTypedLinksResponse_typedLinkSpecifiers :: Lens' BatchListOutgoingTypedLinksResponse (Maybe [TypedLinkSpecifier])

-- | The pagination token.
batchListPolicyAttachments_nextToken :: Lens' BatchListPolicyAttachments (Maybe Text)

-- | The maximum number of results to retrieve.
batchListPolicyAttachments_maxResults :: Lens' BatchListPolicyAttachments (Maybe Natural)

-- | The reference that identifies the policy object.
batchListPolicyAttachments_policyReference :: Lens' BatchListPolicyAttachments ObjectReference

-- | The pagination token.
batchListPolicyAttachmentsResponse_nextToken :: Lens' BatchListPolicyAttachmentsResponse (Maybe Text)

-- | A list of <tt>ObjectIdentifiers</tt> to which the policy is attached.
batchListPolicyAttachmentsResponse_objectIdentifiers :: Lens' BatchListPolicyAttachmentsResponse (Maybe [Text])

-- | The pagination token.
batchLookupPolicy_nextToken :: Lens' BatchLookupPolicy (Maybe Text)

-- | The maximum number of results to retrieve.
batchLookupPolicy_maxResults :: Lens' BatchLookupPolicy (Maybe Natural)

-- | Reference that identifies the object whose policies will be looked up.
batchLookupPolicy_objectReference :: Lens' BatchLookupPolicy ObjectReference

-- | The pagination token.
batchLookupPolicyResponse_nextToken :: Lens' BatchLookupPolicyResponse (Maybe Text)

-- | Provides list of path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
batchLookupPolicyResponse_policyToPathList :: Lens' BatchLookupPolicyResponse (Maybe [PolicyToPath])

-- | An exception message that is associated with the failure.
batchReadException_message :: Lens' BatchReadException (Maybe Text)

-- | A type of exception, such as <tt>InvalidArnException</tt>.
batchReadException_type :: Lens' BatchReadException (Maybe BatchReadExceptionType)

-- | Retrieves metadata about an object.
batchReadOperation_getObjectInformation :: Lens' BatchReadOperation (Maybe BatchGetObjectInformation)

-- | Retrieves attributes within a facet that are associated with an
--   object.
batchReadOperation_getObjectAttributes :: Lens' BatchReadOperation (Maybe BatchGetObjectAttributes)

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadOperation_listIncomingTypedLinks :: Lens' BatchReadOperation (Maybe BatchListIncomingTypedLinks)

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
batchReadOperation_listObjectParents :: Lens' BatchReadOperation (Maybe BatchListObjectParents)

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
batchReadOperation_listPolicyAttachments :: Lens' BatchReadOperation (Maybe BatchListPolicyAttachments)

-- | Lists all attributes that are associated with an object.
batchReadOperation_listObjectAttributes :: Lens' BatchReadOperation (Maybe BatchListObjectAttributes)

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
batchReadOperation_listObjectParentPaths :: Lens' BatchReadOperation (Maybe BatchListObjectParentPaths)

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
batchReadOperation_lookupPolicy :: Lens' BatchReadOperation (Maybe BatchLookupPolicy)

-- | Lists indices attached to an object.
batchReadOperation_listAttachedIndices :: Lens' BatchReadOperation (Maybe BatchListAttachedIndices)

-- | Returns a paginated list of child objects that are associated with a
--   given object.
batchReadOperation_listObjectChildren :: Lens' BatchReadOperation (Maybe BatchListObjectChildren)

-- | Lists objects attached to the specified index.
batchReadOperation_listIndex :: Lens' BatchReadOperation (Maybe BatchListIndex)

-- | Returns policies attached to an object in pagination fashion.
batchReadOperation_listObjectPolicies :: Lens' BatchReadOperation (Maybe BatchListObjectPolicies)

-- | Retrieves attributes that are associated with a typed link.
batchReadOperation_getLinkAttributes :: Lens' BatchReadOperation (Maybe BatchGetLinkAttributes)

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadOperation_listOutgoingTypedLinks :: Lens' BatchReadOperation (Maybe BatchListOutgoingTypedLinks)

-- | Identifies which operation in a batch has succeeded.
batchReadOperationResponse_successfulResponse :: Lens' BatchReadOperationResponse (Maybe BatchReadSuccessfulResponse)

-- | Identifies which operation in a batch has failed.
batchReadOperationResponse_exceptionResponse :: Lens' BatchReadOperationResponse (Maybe BatchReadException)

-- | Retrieves metadata about an object.
batchReadSuccessfulResponse_getObjectInformation :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetObjectInformationResponse)

-- | Retrieves attributes within a facet that are associated with an
--   object.
batchReadSuccessfulResponse_getObjectAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetObjectAttributesResponse)

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadSuccessfulResponse_listIncomingTypedLinks :: Lens' BatchReadSuccessfulResponse (Maybe BatchListIncomingTypedLinksResponse)

-- | The list of parent objects to retrieve.
batchReadSuccessfulResponse_listObjectParents :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectParentsResponse)

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached.
batchReadSuccessfulResponse_listPolicyAttachments :: Lens' BatchReadSuccessfulResponse (Maybe BatchListPolicyAttachmentsResponse)

-- | Lists all attributes that are associated with an object.
batchReadSuccessfulResponse_listObjectAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectAttributesResponse)

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects. For more information
--   about objects, see <a>Directory Structure</a>.
batchReadSuccessfulResponse_listObjectParentPaths :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectParentPathsResponse)

-- | Lists all policies from the root of the Directory to the object
--   specified. If there are no policies present, an empty list is
--   returned. If policies are present, and if some objects don't have the
--   policies attached, it returns the <tt>ObjectIdentifier</tt> for such
--   objects. If policies are present, it returns
--   <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and <tt>policyType</tt>.
--   Paths that don't lead to the root from the target object are ignored.
--   For more information, see <a>Policies</a>.
batchReadSuccessfulResponse_lookupPolicy :: Lens' BatchReadSuccessfulResponse (Maybe BatchLookupPolicyResponse)

-- | Lists indices attached to an object.
batchReadSuccessfulResponse_listAttachedIndices :: Lens' BatchReadSuccessfulResponse (Maybe BatchListAttachedIndicesResponse)

-- | Returns a paginated list of child objects that are associated with a
--   given object.
batchReadSuccessfulResponse_listObjectChildren :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectChildrenResponse)

-- | Lists objects attached to the specified index.
batchReadSuccessfulResponse_listIndex :: Lens' BatchReadSuccessfulResponse (Maybe BatchListIndexResponse)

-- | Returns policies attached to an object in pagination fashion.
batchReadSuccessfulResponse_listObjectPolicies :: Lens' BatchReadSuccessfulResponse (Maybe BatchListObjectPoliciesResponse)

-- | The list of attributes to retrieve from the typed link.
batchReadSuccessfulResponse_getLinkAttributes :: Lens' BatchReadSuccessfulResponse (Maybe BatchGetLinkAttributesResponse)

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object. It also supports filtering by typed link
--   facet and identity attributes. For more information, see <a>Typed
--   Links</a>.
batchReadSuccessfulResponse_listOutgoingTypedLinks :: Lens' BatchReadSuccessfulResponse (Maybe BatchListOutgoingTypedLinksResponse)

-- | The facet to remove from the object.
batchRemoveFacetFromObject_schemaFacet :: Lens' BatchRemoveFacetFromObject SchemaFacet

-- | A reference to the object whose facet will be removed.
batchRemoveFacetFromObject_objectReference :: Lens' BatchRemoveFacetFromObject ObjectReference

-- | Allows a typed link specifier to be accepted as input.
batchUpdateLinkAttributes_typedLinkSpecifier :: Lens' BatchUpdateLinkAttributes TypedLinkSpecifier

-- | The attributes update structure.
batchUpdateLinkAttributes_attributeUpdates :: Lens' BatchUpdateLinkAttributes [LinkAttributeUpdate]

-- | Reference that identifies the object.
batchUpdateObjectAttributes_objectReference :: Lens' BatchUpdateObjectAttributes ObjectReference

-- | Attributes update structure.
batchUpdateObjectAttributes_attributeUpdates :: Lens' BatchUpdateObjectAttributes [ObjectAttributeUpdate]

-- | ID that is associated with the object.
batchUpdateObjectAttributesResponse_objectIdentifier :: Lens' BatchUpdateObjectAttributesResponse (Maybe Text)

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperation_attachTypedLink :: Lens' BatchWriteOperation (Maybe BatchAttachTypedLink)

-- | Deletes an object in a Directory.
batchWriteOperation_deleteObject :: Lens' BatchWriteOperation (Maybe BatchDeleteObject)

-- | Creates an object.
batchWriteOperation_createObject :: Lens' BatchWriteOperation (Maybe BatchCreateObject)

-- | Updates a given object's attributes.
batchWriteOperation_updateLinkAttributes :: Lens' BatchWriteOperation (Maybe BatchUpdateLinkAttributes)

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperation_detachTypedLink :: Lens' BatchWriteOperation (Maybe BatchDetachTypedLink)

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
batchWriteOperation_createIndex :: Lens' BatchWriteOperation (Maybe BatchCreateIndex)

-- | Detaches the specified object from the specified index.
batchWriteOperation_detachFromIndex :: Lens' BatchWriteOperation (Maybe BatchDetachFromIndex)

-- | Detaches a policy from a Directory.
batchWriteOperation_detachPolicy :: Lens' BatchWriteOperation (Maybe BatchDetachPolicy)

-- | Attaches an object to a Directory.
batchWriteOperation_attachObject :: Lens' BatchWriteOperation (Maybe BatchAttachObject)

-- | Attaches the specified object to the specified index.
batchWriteOperation_attachToIndex :: Lens' BatchWriteOperation (Maybe BatchAttachToIndex)

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
batchWriteOperation_attachPolicy :: Lens' BatchWriteOperation (Maybe BatchAttachPolicy)

-- | Updates a given object's attributes.
batchWriteOperation_updateObjectAttributes :: Lens' BatchWriteOperation (Maybe BatchUpdateObjectAttributes)

-- | A batch operation that removes a facet from an object.
batchWriteOperation_removeFacetFromObject :: Lens' BatchWriteOperation (Maybe BatchRemoveFacetFromObject)

-- | Detaches an object from a Directory.
batchWriteOperation_detachObject :: Lens' BatchWriteOperation (Maybe BatchDetachObject)

-- | A batch operation that adds a facet to an object.
batchWriteOperation_addFacetToObject :: Lens' BatchWriteOperation (Maybe BatchAddFacetToObject)

-- | Attaches a typed link to a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperationResponse_attachTypedLink :: Lens' BatchWriteOperationResponse (Maybe BatchAttachTypedLinkResponse)

-- | Deletes an object in a Directory.
batchWriteOperationResponse_deleteObject :: Lens' BatchWriteOperationResponse (Maybe BatchDeleteObjectResponse)

-- | Creates an object in a Directory.
batchWriteOperationResponse_createObject :: Lens' BatchWriteOperationResponse (Maybe BatchCreateObjectResponse)

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
batchWriteOperationResponse_updateLinkAttributes :: Lens' BatchWriteOperationResponse (Maybe BatchUpdateLinkAttributesResponse)

-- | Detaches a typed link from a specified source and target object. For
--   more information, see <a>Typed Links</a>.
batchWriteOperationResponse_detachTypedLink :: Lens' BatchWriteOperationResponse (Maybe BatchDetachTypedLinkResponse)

-- | Creates an index object. See <a>Indexing and search</a> for more
--   information.
batchWriteOperationResponse_createIndex :: Lens' BatchWriteOperationResponse (Maybe BatchCreateIndexResponse)

-- | Detaches the specified object from the specified index.
batchWriteOperationResponse_detachFromIndex :: Lens' BatchWriteOperationResponse (Maybe BatchDetachFromIndexResponse)

-- | Detaches a policy from a Directory.
batchWriteOperationResponse_detachPolicy :: Lens' BatchWriteOperationResponse (Maybe BatchDetachPolicyResponse)

-- | Attaches an object to a Directory.
batchWriteOperationResponse_attachObject :: Lens' BatchWriteOperationResponse (Maybe BatchAttachObjectResponse)

-- | Attaches the specified object to the specified index.
batchWriteOperationResponse_attachToIndex :: Lens' BatchWriteOperationResponse (Maybe BatchAttachToIndexResponse)

-- | Attaches a policy object to a regular object. An object can have a
--   limited number of attached policies.
batchWriteOperationResponse_attachPolicy :: Lens' BatchWriteOperationResponse (Maybe BatchAttachPolicyResponse)

-- | Updates a given object’s attributes.
batchWriteOperationResponse_updateObjectAttributes :: Lens' BatchWriteOperationResponse (Maybe BatchUpdateObjectAttributesResponse)

-- | The result of a batch remove facet from object operation.
batchWriteOperationResponse_removeFacetFromObject :: Lens' BatchWriteOperationResponse (Maybe BatchRemoveFacetFromObjectResponse)

-- | Detaches an object from a Directory.
batchWriteOperationResponse_detachObject :: Lens' BatchWriteOperationResponse (Maybe BatchDetachObjectResponse)

-- | The result of an add facet to object batch operation.
batchWriteOperationResponse_addFacetToObject :: Lens' BatchWriteOperationResponse (Maybe BatchAddFacetToObjectResponse)

-- | The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
directory_directoryArn :: Lens' Directory (Maybe Text)

-- | The name of the directory.
directory_name :: Lens' Directory (Maybe Text)

-- | The state of the directory. Can be either <tt>Enabled</tt>,
--   <tt>Disabled</tt>, or <tt>Deleted</tt>.
directory_state :: Lens' Directory (Maybe DirectoryState)

-- | The date and time when the directory was created.
directory_creationDateTime :: Lens' Directory (Maybe UTCTime)

-- | There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
facet_facetStyle :: Lens' Facet (Maybe FacetStyle)

-- | The name of the Facet.
facet_name :: Lens' Facet (Maybe Text)

-- | The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
facet_objectType :: Lens' Facet (Maybe ObjectType)

-- | An attribute reference that is associated with the attribute. See
--   <a>Attribute References</a> for more information.
facetAttribute_attributeReference :: Lens' FacetAttribute (Maybe FacetAttributeReference)

-- | The required behavior of the <tt>FacetAttribute</tt>.
facetAttribute_requiredBehavior :: Lens' FacetAttribute (Maybe RequiredAttributeBehavior)

-- | A facet attribute consists of either a definition or a reference. This
--   structure contains the attribute definition. See <a>Attribute
--   References</a> for more information.
facetAttribute_attributeDefinition :: Lens' FacetAttribute (Maybe FacetAttributeDefinition)

-- | The name of the facet attribute.
facetAttribute_name :: Lens' FacetAttribute Text

-- | Whether the attribute is mutable or not.
facetAttributeDefinition_isImmutable :: Lens' FacetAttributeDefinition (Maybe Bool)

-- | Validation rules attached to the attribute definition.
facetAttributeDefinition_rules :: Lens' FacetAttributeDefinition (Maybe (HashMap Text Rule))

-- | The default value of the attribute (if configured).
facetAttributeDefinition_defaultValue :: Lens' FacetAttributeDefinition (Maybe TypedAttributeValue)

-- | The type of the attribute.
facetAttributeDefinition_type :: Lens' FacetAttributeDefinition FacetAttributeType

-- | The target facet name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
facetAttributeReference_targetFacetName :: Lens' FacetAttributeReference Text

-- | The target attribute name that is associated with the facet reference.
--   See <a>Attribute References</a> for more information.
facetAttributeReference_targetAttributeName :: Lens' FacetAttributeReference Text

-- | The attribute to update.
facetAttributeUpdate_attribute :: Lens' FacetAttributeUpdate (Maybe FacetAttribute)

-- | The action to perform when updating the attribute.
facetAttributeUpdate_action :: Lens' FacetAttributeUpdate (Maybe UpdateActionType)

-- | In response to ListIndex, the <tt>ObjectIdentifier</tt> of the object
--   attached to the index. In response to ListAttachedIndices, the
--   <tt>ObjectIdentifier</tt> of the index attached to the object. This
--   field will always contain the <tt>ObjectIdentifier</tt> of the object
--   on the opposite side of the attachment specified in the query.
indexAttachment_objectIdentifier :: Lens' IndexAttachment (Maybe Text)

-- | The indexed attribute values.
indexAttachment_indexedAttributes :: Lens' IndexAttachment (Maybe [AttributeKeyAndValue])

-- | The value that you want to update to.
linkAttributeAction_attributeUpdateValue :: Lens' LinkAttributeAction (Maybe TypedAttributeValue)

-- | A type that can be either <tt>UPDATE_OR_CREATE</tt> or
--   <tt>DELETE</tt>.
linkAttributeAction_attributeActionType :: Lens' LinkAttributeAction (Maybe UpdateActionType)

-- | The action to perform as part of the attribute update.
linkAttributeUpdate_attributeAction :: Lens' LinkAttributeUpdate (Maybe LinkAttributeAction)

-- | The key of the attribute being updated.
linkAttributeUpdate_attributeKey :: Lens' LinkAttributeUpdate (Maybe AttributeKey)

-- | A type that can be either <tt>Update</tt> or <tt>Delete</tt>.
objectAttributeAction_objectAttributeActionType :: Lens' ObjectAttributeAction (Maybe UpdateActionType)

-- | The value that you want to update to.
objectAttributeAction_objectAttributeUpdateValue :: Lens' ObjectAttributeAction (Maybe TypedAttributeValue)

-- | The range of attribute values being selected.
objectAttributeRange_range :: Lens' ObjectAttributeRange (Maybe TypedAttributeValueRange)

-- | The key of the attribute that the attribute range covers.
objectAttributeRange_attributeKey :: Lens' ObjectAttributeRange (Maybe AttributeKey)

-- | The action to perform as part of the attribute update.
objectAttributeUpdate_objectAttributeAction :: Lens' ObjectAttributeUpdate (Maybe ObjectAttributeAction)

-- | The key of the attribute being updated.
objectAttributeUpdate_objectAttributeKey :: Lens' ObjectAttributeUpdate (Maybe AttributeKey)

-- | The name of the link between the parent and the child object.
objectIdentifierAndLinkNameTuple_linkName :: Lens' ObjectIdentifierAndLinkNameTuple (Maybe Text)

-- | The ID that is associated with the object.
objectIdentifierAndLinkNameTuple_objectIdentifier :: Lens' ObjectIdentifierAndLinkNameTuple (Maybe Text)

-- | A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
objectReference_selector :: Lens' ObjectReference (Maybe Text)

-- | Lists <tt>ObjectIdentifiers</tt> starting from directory root to the
--   object in the request.
pathToObjectIdentifiers_objectIdentifiers :: Lens' PathToObjectIdentifiers (Maybe [Text])

-- | The path that is used to identify the object starting from directory
--   root.
pathToObjectIdentifiers_path :: Lens' PathToObjectIdentifiers (Maybe Text)

-- | The type of policy that can be associated with
--   <tt>PolicyAttachment</tt>.
policyAttachment_policyType :: Lens' PolicyAttachment (Maybe Text)

-- | The <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
policyAttachment_objectIdentifier :: Lens' PolicyAttachment (Maybe Text)

-- | The ID of <tt>PolicyAttachment</tt>.
policyAttachment_policyId :: Lens' PolicyAttachment (Maybe Text)

-- | List of policy objects.
policyToPath_policies :: Lens' PolicyToPath (Maybe [PolicyAttachment])

-- | The path that is referenced from the root.
policyToPath_path :: Lens' PolicyToPath (Maybe Text)

-- | The type of attribute validation rule.
rule_type :: Lens' Rule (Maybe RuleType)

-- | The minimum and maximum parameters that are associated with the rule.
rule_parameters :: Lens' Rule (Maybe (HashMap Text Text))

-- | The ARN of the schema that contains the facet with no minor component.
--   See arns and <a>In-Place Schema Upgrade</a> for a description of when
--   to provide minor versions. If this value is set, FacetName must also
--   be set.
schemaFacet_schemaArn :: Lens' SchemaFacet (Maybe Text)

-- | The name of the facet. If this value is set, SchemaArn must also be
--   set.
schemaFacet_facetName :: Lens' SchemaFacet (Maybe Text)

-- | The key that is associated with the tag.
tag_key :: Lens' Tag (Maybe Text)

-- | The value that is associated with the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | A string data value.
typedAttributeValue_stringValue :: Lens' TypedAttributeValue (Maybe Text)

-- | A Boolean data value.
typedAttributeValue_booleanValue :: Lens' TypedAttributeValue (Maybe Bool)

-- | A binary data value.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
typedAttributeValue_binaryValue :: Lens' TypedAttributeValue (Maybe ByteString)

-- | A number data value.
typedAttributeValue_numberValue :: Lens' TypedAttributeValue (Maybe Text)

-- | A date and time value.
typedAttributeValue_datetimeValue :: Lens' TypedAttributeValue (Maybe UTCTime)

-- | The attribute value to terminate the range at.
typedAttributeValueRange_endValue :: Lens' TypedAttributeValueRange (Maybe TypedAttributeValue)

-- | The value to start the range at.
typedAttributeValueRange_startValue :: Lens' TypedAttributeValueRange (Maybe TypedAttributeValue)

-- | The inclusive or exclusive range start.
typedAttributeValueRange_startMode :: Lens' TypedAttributeValueRange RangeMode

-- | The inclusive or exclusive range end.
typedAttributeValueRange_endMode :: Lens' TypedAttributeValueRange RangeMode

-- | Whether the attribute is mutable or not.
typedLinkAttributeDefinition_isImmutable :: Lens' TypedLinkAttributeDefinition (Maybe Bool)

-- | Validation rules that are attached to the attribute definition.
typedLinkAttributeDefinition_rules :: Lens' TypedLinkAttributeDefinition (Maybe (HashMap Text Rule))

-- | The default value of the attribute (if configured).
typedLinkAttributeDefinition_defaultValue :: Lens' TypedLinkAttributeDefinition (Maybe TypedAttributeValue)

-- | The unique name of the typed link attribute.
typedLinkAttributeDefinition_name :: Lens' TypedLinkAttributeDefinition Text

-- | The type of the attribute.
typedLinkAttributeDefinition_type :: Lens' TypedLinkAttributeDefinition FacetAttributeType

-- | The required behavior of the <tt>TypedLinkAttributeDefinition</tt>.
typedLinkAttributeDefinition_requiredBehavior :: Lens' TypedLinkAttributeDefinition RequiredAttributeBehavior

-- | The unique name of the typed link attribute.
typedLinkAttributeRange_attributeName :: Lens' TypedLinkAttributeRange (Maybe Text)

-- | The range of attribute values that are being selected.
typedLinkAttributeRange_range :: Lens' TypedLinkAttributeRange TypedAttributeValueRange

-- | The unique name of the typed link facet.
typedLinkFacet_name :: Lens' TypedLinkFacet Text

-- | A set of key-value pairs associated with the typed link. Typed link
--   attributes are used when you have data values that are related to the
--   link itself, and not to one of the two objects being linked. Identity
--   attributes also serve to distinguish the link from others of the same
--   type between the same objects.
typedLinkFacet_attributes :: Lens' TypedLinkFacet [TypedLinkAttributeDefinition]

-- | The set of attributes that distinguish links made from this facet from
--   each other, in the order of significance. Listing typed links can
--   filter on the values of these attributes. See ListOutgoingTypedLinks
--   and ListIncomingTypedLinks for details.
typedLinkFacet_identityAttributeOrder :: Lens' TypedLinkFacet [Text]

-- | The attribute to update.
typedLinkFacetAttributeUpdate_attribute :: Lens' TypedLinkFacetAttributeUpdate TypedLinkAttributeDefinition

-- | The action to perform when updating the attribute.
typedLinkFacetAttributeUpdate_action :: Lens' TypedLinkFacetAttributeUpdate UpdateActionType

-- | The Amazon Resource Name (ARN) that is associated with the schema. For
--   more information, see arns.
typedLinkSchemaAndFacetName_schemaArn :: Lens' TypedLinkSchemaAndFacetName Text

-- | The unique name of the typed link facet.
typedLinkSchemaAndFacetName_typedLinkName :: Lens' TypedLinkSchemaAndFacetName Text

-- | Identifies the typed link facet that is associated with the typed
--   link.
typedLinkSpecifier_typedLinkFacet :: Lens' TypedLinkSpecifier TypedLinkSchemaAndFacetName

-- | Identifies the source object that the typed link will attach to.
typedLinkSpecifier_sourceObjectReference :: Lens' TypedLinkSpecifier ObjectReference

-- | Identifies the target object that the typed link will attach to.
typedLinkSpecifier_targetObjectReference :: Lens' TypedLinkSpecifier ObjectReference

-- | Identifies the attribute value to update.
typedLinkSpecifier_identityAttributeValues :: Lens' TypedLinkSpecifier [AttributeNameAndValue]


module Network.AWS.CloudDirectory.Waiters


-- | Derived from API version <tt>2017-01-11</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Cloud Directory
--   
--   Amazon Cloud Directory is a component of the AWS Directory Service
--   that simplifies the development and management of cloud-scale web,
--   mobile, and IoT applications. This guide describes the Cloud Directory
--   operations that you can call programmatically and includes detailed
--   information on data types and errors. For information about Cloud
--   Directory features, see <a>AWS Directory Service</a> and the <a>Amazon
--   Cloud Directory Developer Guide</a>.
module Network.AWS.CloudDirectory

-- | API version <tt>2017-01-11</tt> of the Amazon CloudDirectory SDK
--   configuration.
defaultService :: Service

-- | Indicates a failure occurred while performing a check for backward
--   compatibility between the specified schema and the schema that is
--   currently applied to the directory.
_IncompatibleSchemaException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that an attempt to make an attachment was invalid. For
--   example, attaching two nodes with a link type that is not applicable
--   to the nodes or attempting to apply a schema to a directory a second
--   time.
_InvalidAttachmentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Facet that you provided was not well formed or could not be
--   validated with the schema.
_FacetValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A <tt>BatchWrite</tt> exception has occurred.
_BatchWriteException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when deleting a facet that contains an attribute that is a
--   target to an attribute reference in a different facet.
_FacetInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the provided ARN value is not valid.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A directory that has been deleted and to which access has been
--   attempted. Note: The requested resource will eventually cease to
--   exist.
_DirectoryDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when any of the rule parameter keys or values are invalid.
_InvalidRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates a problem that must be resolved by Amazon Web Services. This
--   might be a transient error in which case you can retry your request
--   until it succeeds. Otherwise, go to the <a>AWS Service Health
--   Dashboard</a> site to see if there are any operational issues with the
--   service.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a link could not be created due to a naming conflict.
--   Choose a different name and then try again.
_LinkNameAlreadyInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can occur for multiple reasons such as when you tag a resource that
--   doesn’t exist or if you specify a higher number of tags for a resource
--   than the allowed limit. Allowed limit is 50 tags per resource.
_InvalidTaggingRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the <tt>NextToken</tt> value is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested operation can only operate on policy
--   objects.
_NotPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Cannot list the parents of a Directory root.
_CannotListParentOfRootException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the provided <tt>SchemaDoc</tt> value is not valid.
_InvalidSchemaDocException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested index type is not supported.
_UnsupportedIndexTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access denied or directory not found. Either you don't have
--   permissions for this directory or the directory does not exist. Try
--   calling ListDirectories and check your permissions.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested operation can only operate on index
--   objects.
_NotIndexException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A facet with the same name already exists.
_FacetAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that your request is malformed in some manner. See the
--   exception message.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested operation cannot be completed because the
--   object has not been detached from the tree.
_ObjectNotDetachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Facet could not be found.
_FacetNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that limits are exceeded. See <a>Limits</a> for more
--   information.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The object could not be deleted because links still exist. Remove the
--   links and then try the operation again.
_StillContainsLinksException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Operations are only permitted on enabled directories.
_DirectoryNotEnabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource could not be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when a conflict with a previous successful write is detected.
--   For example, if a write operation occurs on an object and then an
--   attempt is made to read the object using “SERIALIZABLE” consistency,
--   this exception may result. This generally occurs when the previous
--   write did not have time to propagate to the host serving the current
--   request. A retry (with appropriate backoff logic) is the recommended
--   response to this exception.
_RetryableConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An operation can only operate on a disabled directory.
_DirectoryNotDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a schema could not be created due to a naming conflict.
--   Please select a different name and then try again.
_SchemaAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a Directory could not be created due to a naming
--   conflict. Choose a different name and try again.
_DirectoryAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a schema is already published.
_SchemaAlreadyPublishedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An object has been attempted to be attached to an object that does not
--   have the appropriate attribute value.
_IndexedAttributeMissingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Occurs when any invalid operations are performed on an object that is
--   not a node, such as calling <tt>ListObjectChildren</tt> for a leaf
--   node object.
_NotNodeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the object is not attached to the index.
_ObjectAlreadyDetachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An attempt to modify a Facet resulted in an invalid schema exception.
_InvalidFacetUpdateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListTypedLinkFacetNames</a> smart constructor.
data ListTypedLinkFacetNames
ListTypedLinkFacetNames' :: Maybe Text -> Maybe Natural -> Text -> ListTypedLinkFacetNames

-- | Create a value of <a>ListTypedLinkFacetNames</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNames_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNames_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:schemaArn:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNames_schemaArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the schema. For more information, see
--   arns.
newListTypedLinkFacetNames :: Text -> ListTypedLinkFacetNames

-- | <i>See:</i> <a>newListTypedLinkFacetNamesResponse</a> smart
--   constructor.
data ListTypedLinkFacetNamesResponse
ListTypedLinkFacetNamesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListTypedLinkFacetNamesResponse

-- | Create a value of <a>ListTypedLinkFacetNamesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetNames'</a>,
--   <a>listTypedLinkFacetNamesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:facetNames:ListTypedLinkFacetNamesResponse'</a>,
--   <a>listTypedLinkFacetNamesResponse_facetNames</a> - The names of typed
--   link facets that exist within the schema.
--   
--   <a>$sel:httpStatus:ListTypedLinkFacetNamesResponse'</a>,
--   <a>listTypedLinkFacetNamesResponse_httpStatus</a> - The response's
--   http status code.
newListTypedLinkFacetNamesResponse :: Int -> ListTypedLinkFacetNamesResponse

-- | <i>See:</i> <a>newGetDirectory</a> smart constructor.
data GetDirectory
GetDirectory' :: Text -> GetDirectory

-- | Create a value of <a>GetDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:GetDirectory'</a>,
--   <a>getDirectory_directoryArn</a> - The ARN of the directory.
newGetDirectory :: Text -> GetDirectory

-- | <i>See:</i> <a>newGetDirectoryResponse</a> smart constructor.
data GetDirectoryResponse
GetDirectoryResponse' :: Int -> Directory -> GetDirectoryResponse

-- | Create a value of <a>GetDirectoryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDirectoryResponse'</a>,
--   <a>getDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directory:GetDirectoryResponse'</a>,
--   <a>getDirectoryResponse_directory</a> - Metadata about the directory.
newGetDirectoryResponse :: Int -> Directory -> GetDirectoryResponse

-- | <i>See:</i> <a>newAttachTypedLink</a> smart constructor.
data AttachTypedLink
AttachTypedLink' :: Text -> ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> [AttributeNameAndValue] -> AttachTypedLink

-- | Create a value of <a>AttachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachTypedLink'</a>,
--   <a>attachTypedLink_directoryArn</a> - The Amazon Resource Name (ARN)
--   of the directory where you want to attach the typed link.
--   
--   <a>$sel:sourceObjectReference:AttachTypedLink'</a>,
--   <a>attachTypedLink_sourceObjectReference</a> - Identifies the source
--   object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:AttachTypedLink'</a>,
--   <a>attachTypedLink_targetObjectReference</a> - Identifies the target
--   object that the typed link will attach to.
--   
--   <a>$sel:typedLinkFacet:AttachTypedLink'</a>,
--   <a>attachTypedLink_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:attributes:AttachTypedLink'</a>,
--   <a>attachTypedLink_attributes</a> - A set of attributes that are
--   associated with the typed link.
newAttachTypedLink :: Text -> ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> AttachTypedLink

-- | <i>See:</i> <a>newAttachTypedLinkResponse</a> smart constructor.
data AttachTypedLinkResponse
AttachTypedLinkResponse' :: Maybe TypedLinkSpecifier -> Int -> AttachTypedLinkResponse

-- | Create a value of <a>AttachTypedLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:AttachTypedLinkResponse'</a>,
--   <a>attachTypedLinkResponse_typedLinkSpecifier</a> - Returns a typed
--   link specifier as output.
--   
--   <a>$sel:httpStatus:AttachTypedLinkResponse'</a>,
--   <a>attachTypedLinkResponse_httpStatus</a> - The response's http status
--   code.
newAttachTypedLinkResponse :: Int -> AttachTypedLinkResponse

-- | <i>See:</i> <a>newGetObjectInformation</a> smart constructor.
data GetObjectInformation
GetObjectInformation' :: Maybe ConsistencyLevel -> Text -> ObjectReference -> GetObjectInformation

-- | Create a value of <a>GetObjectInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:GetObjectInformation'</a>,
--   <a>getObjectInformation_consistencyLevel</a> - The consistency level
--   at which to retrieve the object information.
--   
--   <a>$sel:directoryArn:GetObjectInformation'</a>,
--   <a>getObjectInformation_directoryArn</a> - The ARN of the directory
--   being retrieved.
--   
--   <a>$sel:objectReference:GetObjectInformation'</a>,
--   <a>getObjectInformation_objectReference</a> - A reference to the
--   object.
newGetObjectInformation :: Text -> ObjectReference -> GetObjectInformation

-- | <i>See:</i> <a>newGetObjectInformationResponse</a> smart constructor.
data GetObjectInformationResponse
GetObjectInformationResponse' :: Maybe [SchemaFacet] -> Maybe Text -> Int -> GetObjectInformationResponse

-- | Create a value of <a>GetObjectInformationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacets:GetObjectInformationResponse'</a>,
--   <a>getObjectInformationResponse_schemaFacets</a> - The facets attached
--   to the specified object. Although the response does not include minor
--   version information, the most recently applied minor version of each
--   Facet is in effect. See GetAppliedSchemaVersion for details.
--   
--   <a>$sel:objectIdentifier:GetObjectInformationResponse'</a>,
--   <a>getObjectInformationResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the specified object.
--   
--   <a>$sel:httpStatus:GetObjectInformationResponse'</a>,
--   <a>getObjectInformationResponse_httpStatus</a> - The response's http
--   status code.
newGetObjectInformationResponse :: Int -> GetObjectInformationResponse

-- | <i>See:</i> <a>newDeleteObject</a> smart constructor.
data DeleteObject
DeleteObject' :: Text -> ObjectReference -> DeleteObject

-- | Create a value of <a>DeleteObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DeleteObject'</a>,
--   <a>deleteObject_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where the object resides. For more
--   information, see arns.
--   
--   <a>$sel:objectReference:DeleteObject'</a>,
--   <a>deleteObject_objectReference</a> - A reference that identifies the
--   object.
newDeleteObject :: Text -> ObjectReference -> DeleteObject

-- | <i>See:</i> <a>newDeleteObjectResponse</a> smart constructor.
data DeleteObjectResponse
DeleteObjectResponse' :: Int -> DeleteObjectResponse

-- | Create a value of <a>DeleteObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteObjectResponse'</a>,
--   <a>deleteObjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteObjectResponse :: Int -> DeleteObjectResponse

-- | <i>See:</i> <a>newUpdateFacet</a> smart constructor.
data UpdateFacet
UpdateFacet' :: Maybe [FacetAttributeUpdate] -> Maybe ObjectType -> Text -> Text -> UpdateFacet

-- | Create a value of <a>UpdateFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeUpdates:UpdateFacet'</a>,
--   <a>updateFacet_attributeUpdates</a> - List of attributes that need to
--   be updated in a given schema Facet. Each attribute is followed by
--   <tt>AttributeAction</tt>, which specifies the type of update operation
--   to perform.
--   
--   <a>$sel:objectType:UpdateFacet'</a>, <a>updateFacet_objectType</a> -
--   The object type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
--   
--   <a>$sel:schemaArn:UpdateFacet'</a>, <a>updateFacet_schemaArn</a> - The
--   Amazon Resource Name (ARN) that is associated with the Facet. For more
--   information, see arns.
--   
--   <a>$sel:name:UpdateFacet'</a>, <a>updateFacet_name</a> - The name of
--   the facet.
newUpdateFacet :: Text -> Text -> UpdateFacet

-- | <i>See:</i> <a>newUpdateFacetResponse</a> smart constructor.
data UpdateFacetResponse
UpdateFacetResponse' :: Int -> UpdateFacetResponse

-- | Create a value of <a>UpdateFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateFacetResponse'</a>,
--   <a>updateFacetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateFacetResponse :: Int -> UpdateFacetResponse

-- | <i>See:</i> <a>newGetObjectAttributes</a> smart constructor.
data GetObjectAttributes
GetObjectAttributes' :: Maybe ConsistencyLevel -> Text -> ObjectReference -> SchemaFacet -> [Text] -> GetObjectAttributes

-- | Create a value of <a>GetObjectAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_consistencyLevel</a> - The consistency level at
--   which to retrieve the attributes on an object.
--   
--   <a>$sel:directoryArn:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   
--   <a>$sel:objectReference:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_objectReference</a> - Reference that identifies
--   the object whose attributes will be retrieved.
--   
--   <a>$sel:schemaFacet:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_schemaFacet</a> - Identifier for the facet
--   whose attributes will be retrieved. See SchemaFacet for details.
--   
--   <a>$sel:attributeNames:GetObjectAttributes'</a>,
--   <a>getObjectAttributes_attributeNames</a> - List of attribute names
--   whose values will be retrieved.
newGetObjectAttributes :: Text -> ObjectReference -> SchemaFacet -> GetObjectAttributes

-- | <i>See:</i> <a>newGetObjectAttributesResponse</a> smart constructor.
data GetObjectAttributesResponse
GetObjectAttributesResponse' :: Maybe [AttributeKeyAndValue] -> Int -> GetObjectAttributesResponse

-- | Create a value of <a>GetObjectAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetObjectAttributesResponse'</a>,
--   <a>getObjectAttributesResponse_attributes</a> - The attributes that
--   are associated with the object.
--   
--   <a>$sel:httpStatus:GetObjectAttributesResponse'</a>,
--   <a>getObjectAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetObjectAttributesResponse :: Int -> GetObjectAttributesResponse

-- | <i>See:</i> <a>newUpgradeAppliedSchema</a> smart constructor.
data UpgradeAppliedSchema
UpgradeAppliedSchema' :: Maybe Bool -> Text -> Text -> UpgradeAppliedSchema

-- | Create a value of <a>UpgradeAppliedSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dryRun:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchema_dryRun</a> - Used for testing whether the
--   major version schemas are backward compatible or not. If schema
--   compatibility fails, an exception would be thrown else the call would
--   succeed but no changes will be saved. This parameter is optional.
--   
--   <a>$sel:publishedSchemaArn:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchema_publishedSchemaArn</a> - The revision of the
--   published schema to upgrade the directory to.
--   
--   <a>$sel:directoryArn:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchema_directoryArn</a> - The ARN for the directory
--   to which the upgraded schema will be applied.
newUpgradeAppliedSchema :: Text -> Text -> UpgradeAppliedSchema

-- | <i>See:</i> <a>newUpgradeAppliedSchemaResponse</a> smart constructor.
data UpgradeAppliedSchemaResponse
UpgradeAppliedSchemaResponse' :: Maybe Text -> Maybe Text -> Int -> UpgradeAppliedSchemaResponse

-- | Create a value of <a>UpgradeAppliedSchemaResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:UpgradeAppliedSchema'</a>,
--   <a>upgradeAppliedSchemaResponse_directoryArn</a> - The ARN of the
--   directory that is returned as part of the response.
--   
--   <a>$sel:upgradedSchemaArn:UpgradeAppliedSchemaResponse'</a>,
--   <a>upgradeAppliedSchemaResponse_upgradedSchemaArn</a> - The ARN of the
--   upgraded schema that is returned as part of the response.
--   
--   <a>$sel:httpStatus:UpgradeAppliedSchemaResponse'</a>,
--   <a>upgradeAppliedSchemaResponse_httpStatus</a> - The response's http
--   status code.
newUpgradeAppliedSchemaResponse :: Int -> UpgradeAppliedSchemaResponse

-- | <i>See:</i> <a>newDeleteFacet</a> smart constructor.
data DeleteFacet
DeleteFacet' :: Text -> Text -> DeleteFacet

-- | Create a value of <a>DeleteFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteFacet'</a>, <a>deleteFacet_schemaArn</a> - The
--   Amazon Resource Name (ARN) that is associated with the Facet. For more
--   information, see arns.
--   
--   <a>$sel:name:DeleteFacet'</a>, <a>deleteFacet_name</a> - The name of
--   the facet to delete.
newDeleteFacet :: Text -> Text -> DeleteFacet

-- | <i>See:</i> <a>newDeleteFacetResponse</a> smart constructor.
data DeleteFacetResponse
DeleteFacetResponse' :: Int -> DeleteFacetResponse

-- | Create a value of <a>DeleteFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFacetResponse'</a>,
--   <a>deleteFacetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFacetResponse :: Int -> DeleteFacetResponse

-- | <i>See:</i> <a>newListTypedLinkFacetAttributes</a> smart constructor.
data ListTypedLinkFacetAttributes
ListTypedLinkFacetAttributes' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListTypedLinkFacetAttributes

-- | Create a value of <a>ListTypedLinkFacetAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:schemaArn:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_schemaArn</a> - The Amazon Resource
--   Name (ARN) that is associated with the schema. For more information,
--   see arns.
--   
--   <a>$sel:name:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributes_name</a> - The unique name of the
--   typed link facet.
newListTypedLinkFacetAttributes :: Text -> Text -> ListTypedLinkFacetAttributes

-- | <i>See:</i> <a>newListTypedLinkFacetAttributesResponse</a> smart
--   constructor.
data ListTypedLinkFacetAttributesResponse
ListTypedLinkFacetAttributesResponse' :: Maybe Text -> Maybe [TypedLinkAttributeDefinition] -> Int -> ListTypedLinkFacetAttributesResponse

-- | Create a value of <a>ListTypedLinkFacetAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTypedLinkFacetAttributes'</a>,
--   <a>listTypedLinkFacetAttributesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attributes:ListTypedLinkFacetAttributesResponse'</a>,
--   <a>listTypedLinkFacetAttributesResponse_attributes</a> - An ordered
--   set of attributes associate with the typed link.
--   
--   <a>$sel:httpStatus:ListTypedLinkFacetAttributesResponse'</a>,
--   <a>listTypedLinkFacetAttributesResponse_httpStatus</a> - The
--   response's http status code.
newListTypedLinkFacetAttributesResponse :: Int -> ListTypedLinkFacetAttributesResponse

-- | <i>See:</i> <a>newUpgradePublishedSchema</a> smart constructor.
data UpgradePublishedSchema
UpgradePublishedSchema' :: Maybe Bool -> Text -> Text -> Text -> UpgradePublishedSchema

-- | Create a value of <a>UpgradePublishedSchema</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dryRun:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_dryRun</a> - Used for testing whether the
--   Development schema provided is backwards compatible, or not, with the
--   publish schema provided by the user to be upgraded. If schema
--   compatibility fails, an exception would be thrown else the call would
--   succeed. This parameter is optional and defaults to false.
--   
--   <a>$sel:developmentSchemaArn:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_developmentSchemaArn</a> - The ARN of the
--   development schema with the changes used for the upgrade.
--   
--   <a>$sel:publishedSchemaArn:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_publishedSchemaArn</a> - The ARN of the
--   published schema to be upgraded.
--   
--   <a>$sel:minorVersion:UpgradePublishedSchema'</a>,
--   <a>upgradePublishedSchema_minorVersion</a> - Identifies the minor
--   version of the published schema that will be created. This parameter
--   is NOT optional.
newUpgradePublishedSchema :: Text -> Text -> Text -> UpgradePublishedSchema

-- | <i>See:</i> <a>newUpgradePublishedSchemaResponse</a> smart
--   constructor.
data UpgradePublishedSchemaResponse
UpgradePublishedSchemaResponse' :: Maybe Text -> Int -> UpgradePublishedSchemaResponse

-- | Create a value of <a>UpgradePublishedSchemaResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upgradedSchemaArn:UpgradePublishedSchemaResponse'</a>,
--   <a>upgradePublishedSchemaResponse_upgradedSchemaArn</a> - The ARN of
--   the upgraded schema that is returned as part of the response.
--   
--   <a>$sel:httpStatus:UpgradePublishedSchemaResponse'</a>,
--   <a>upgradePublishedSchemaResponse_httpStatus</a> - The response's http
--   status code.
newUpgradePublishedSchemaResponse :: Int -> UpgradePublishedSchemaResponse

-- | <i>See:</i> <a>newCreateObject</a> smart constructor.
data CreateObject
CreateObject' :: Maybe Text -> Maybe ObjectReference -> Maybe [AttributeKeyAndValue] -> Text -> [SchemaFacet] -> CreateObject

-- | Create a value of <a>CreateObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:CreateObject'</a>, <a>createObject_linkName</a> - The
--   name of link that is used to attach this object to a parent.
--   
--   <a>$sel:parentReference:CreateObject'</a>,
--   <a>createObject_parentReference</a> - If specified, the parent
--   reference to which this object will be attached.
--   
--   <a>$sel:objectAttributeList:CreateObject'</a>,
--   <a>createObject_objectAttributeList</a> - The attribute map whose
--   attribute ARN contains the key and attribute value as the map value.
--   
--   <a>$sel:directoryArn:CreateObject'</a>,
--   <a>createObject_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory in which the object will be created.
--   For more information, see arns.
--   
--   <a>$sel:schemaFacets:CreateObject'</a>,
--   <a>createObject_schemaFacets</a> - A list of schema facets to be
--   associated with the object. Do not provide minor version components.
--   See SchemaFacet for details.
newCreateObject :: Text -> CreateObject

-- | <i>See:</i> <a>newCreateObjectResponse</a> smart constructor.
data CreateObjectResponse
CreateObjectResponse' :: Maybe Text -> Int -> CreateObjectResponse

-- | Create a value of <a>CreateObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:CreateObjectResponse'</a>,
--   <a>createObjectResponse_objectIdentifier</a> - The identifier that is
--   associated with the object.
--   
--   <a>$sel:httpStatus:CreateObjectResponse'</a>,
--   <a>createObjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateObjectResponse :: Int -> CreateObjectResponse

-- | <i>See:</i> <a>newBatchWrite</a> smart constructor.
data BatchWrite
BatchWrite' :: Text -> [BatchWriteOperation] -> BatchWrite

-- | Create a value of <a>BatchWrite</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:BatchWrite'</a>, <a>batchWrite_directoryArn</a> -
--   The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
--   
--   <a>$sel:operations:BatchWrite'</a>, <a>batchWrite_operations</a> - A
--   list of operations that are part of the batch.
newBatchWrite :: Text -> BatchWrite

-- | <i>See:</i> <a>newBatchWriteResponse</a> smart constructor.
data BatchWriteResponse
BatchWriteResponse' :: Maybe [BatchWriteOperationResponse] -> Int -> BatchWriteResponse

-- | Create a value of <a>BatchWriteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responses:BatchWriteResponse'</a>,
--   <a>batchWriteResponse_responses</a> - A list of all the responses for
--   each batch write.
--   
--   <a>$sel:httpStatus:BatchWriteResponse'</a>,
--   <a>batchWriteResponse_httpStatus</a> - The response's http status
--   code.
newBatchWriteResponse :: Int -> BatchWriteResponse

-- | <i>See:</i> <a>newUpdateLinkAttributes</a> smart constructor.
data UpdateLinkAttributes
UpdateLinkAttributes' :: Text -> TypedLinkSpecifier -> [LinkAttributeUpdate] -> UpdateLinkAttributes

-- | Create a value of <a>UpdateLinkAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:UpdateLinkAttributes'</a>,
--   <a>updateLinkAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the updated typed
--   link resides. For more information, see arns or <a>Typed Links</a>.
--   
--   <a>$sel:typedLinkSpecifier:UpdateLinkAttributes'</a>,
--   <a>updateLinkAttributes_typedLinkSpecifier</a> - Allows a typed link
--   specifier to be accepted as input.
--   
--   <a>$sel:attributeUpdates:UpdateLinkAttributes'</a>,
--   <a>updateLinkAttributes_attributeUpdates</a> - The attributes update
--   structure.
newUpdateLinkAttributes :: Text -> TypedLinkSpecifier -> UpdateLinkAttributes

-- | <i>See:</i> <a>newUpdateLinkAttributesResponse</a> smart constructor.
data UpdateLinkAttributesResponse
UpdateLinkAttributesResponse' :: Int -> UpdateLinkAttributesResponse

-- | Create a value of <a>UpdateLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLinkAttributesResponse'</a>,
--   <a>updateLinkAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLinkAttributesResponse :: Int -> UpdateLinkAttributesResponse

-- | <i>See:</i> <a>newListDevelopmentSchemaArns</a> smart constructor.
data ListDevelopmentSchemaArns
ListDevelopmentSchemaArns' :: Maybe Text -> Maybe Natural -> ListDevelopmentSchemaArns

-- | Create a value of <a>ListDevelopmentSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevelopmentSchemaArns'</a>,
--   <a>listDevelopmentSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListDevelopmentSchemaArns'</a>,
--   <a>listDevelopmentSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
newListDevelopmentSchemaArns :: ListDevelopmentSchemaArns

-- | <i>See:</i> <a>newListDevelopmentSchemaArnsResponse</a> smart
--   constructor.
data ListDevelopmentSchemaArnsResponse
ListDevelopmentSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListDevelopmentSchemaArnsResponse

-- | Create a value of <a>ListDevelopmentSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListDevelopmentSchemaArnsResponse'</a>,
--   <a>listDevelopmentSchemaArnsResponse_schemaArns</a> - The ARNs of
--   retrieved development schemas.
--   
--   <a>$sel:nextToken:ListDevelopmentSchemaArns'</a>,
--   <a>listDevelopmentSchemaArnsResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:httpStatus:ListDevelopmentSchemaArnsResponse'</a>,
--   <a>listDevelopmentSchemaArnsResponse_httpStatus</a> - The response's
--   http status code.
newListDevelopmentSchemaArnsResponse :: Int -> ListDevelopmentSchemaArnsResponse

-- | <i>See:</i> <a>newGetTypedLinkFacetInformation</a> smart constructor.
data GetTypedLinkFacetInformation
GetTypedLinkFacetInformation' :: Text -> Text -> GetTypedLinkFacetInformation

-- | Create a value of <a>GetTypedLinkFacetInformation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetTypedLinkFacetInformation'</a>,
--   <a>getTypedLinkFacetInformation_schemaArn</a> - The Amazon Resource
--   Name (ARN) that is associated with the schema. For more information,
--   see arns.
--   
--   <a>$sel:name:GetTypedLinkFacetInformation'</a>,
--   <a>getTypedLinkFacetInformation_name</a> - The unique name of the
--   typed link facet.
newGetTypedLinkFacetInformation :: Text -> Text -> GetTypedLinkFacetInformation

-- | <i>See:</i> <a>newGetTypedLinkFacetInformationResponse</a> smart
--   constructor.
data GetTypedLinkFacetInformationResponse
GetTypedLinkFacetInformationResponse' :: Maybe [Text] -> Int -> GetTypedLinkFacetInformationResponse

-- | Create a value of <a>GetTypedLinkFacetInformationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:identityAttributeOrder:GetTypedLinkFacetInformationResponse'</a>,
--   <a>getTypedLinkFacetInformationResponse_identityAttributeOrder</a> -
--   The order of identity attributes for the facet, from most significant
--   to least significant. The ability to filter typed links considers the
--   order that the attributes are defined on the typed link facet. When
--   providing ranges to typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
--   
--   <a>$sel:httpStatus:GetTypedLinkFacetInformationResponse'</a>,
--   <a>getTypedLinkFacetInformationResponse_httpStatus</a> - The
--   response's http status code.
newGetTypedLinkFacetInformationResponse :: Int -> GetTypedLinkFacetInformationResponse

-- | <i>See:</i> <a>newDetachTypedLink</a> smart constructor.
data DetachTypedLink
DetachTypedLink' :: Text -> TypedLinkSpecifier -> DetachTypedLink

-- | Create a value of <a>DetachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachTypedLink'</a>,
--   <a>detachTypedLink_directoryArn</a> - The Amazon Resource Name (ARN)
--   of the directory where you want to detach the typed link.
--   
--   <a>$sel:typedLinkSpecifier:DetachTypedLink'</a>,
--   <a>detachTypedLink_typedLinkSpecifier</a> - Used to accept a typed
--   link specifier as input.
newDetachTypedLink :: Text -> TypedLinkSpecifier -> DetachTypedLink

-- | <i>See:</i> <a>newDetachTypedLinkResponse</a> smart constructor.
data DetachTypedLinkResponse
DetachTypedLinkResponse' :: DetachTypedLinkResponse

-- | Create a value of <a>DetachTypedLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDetachTypedLinkResponse :: DetachTypedLinkResponse

-- | <i>See:</i> <a>newGetFacet</a> smart constructor.
data GetFacet
GetFacet' :: Text -> Text -> GetFacet

-- | Create a value of <a>GetFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetFacet'</a>, <a>getFacet_schemaArn</a> - The
--   Amazon Resource Name (ARN) that is associated with the Facet. For more
--   information, see arns.
--   
--   <a>$sel:name:GetFacet'</a>, <a>getFacet_name</a> - The name of the
--   facet to retrieve.
newGetFacet :: Text -> Text -> GetFacet

-- | <i>See:</i> <a>newGetFacetResponse</a> smart constructor.
data GetFacetResponse
GetFacetResponse' :: Maybe Facet -> Int -> GetFacetResponse

-- | Create a value of <a>GetFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:facet:GetFacetResponse'</a>, <a>getFacetResponse_facet</a> -
--   The Facet structure that is associated with the facet.
--   
--   <a>$sel:httpStatus:GetFacetResponse'</a>,
--   <a>getFacetResponse_httpStatus</a> - The response's http status code.
newGetFacetResponse :: Int -> GetFacetResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource. Tagging is only supported for directories.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Keys of the tag that need to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newListIncomingTypedLinks</a> smart constructor.
data ListIncomingTypedLinks
ListIncomingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe [TypedLinkAttributeRange] -> Text -> ObjectReference -> ListIncomingTypedLinks

-- | Create a value of <a>ListIncomingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls.
--   
--   <a>$sel:maxResults:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:consistencyLevel:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_consistencyLevel</a> - The consistency level
--   to execute the request at.
--   
--   <a>$sel:filterAttributeRanges:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_filterAttributeRanges</a> - Provides range
--   filters for multiple attributes. When providing ranges to typed link
--   selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:directoryArn:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_directoryArn</a> - The Amazon Resource Name
--   (ARN) of the directory where you want to list the typed links.
--   
--   <a>$sel:objectReference:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinks_objectReference</a> - Reference that
--   identifies the object whose attributes will be listed.
newListIncomingTypedLinks :: Text -> ObjectReference -> ListIncomingTypedLinks

-- | <i>See:</i> <a>newListIncomingTypedLinksResponse</a> smart
--   constructor.
data ListIncomingTypedLinksResponse
ListIncomingTypedLinksResponse' :: Maybe [TypedLinkSpecifier] -> Maybe Text -> Int -> ListIncomingTypedLinksResponse

-- | Create a value of <a>ListIncomingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkSpecifiers:ListIncomingTypedLinksResponse'</a>,
--   <a>listIncomingTypedLinksResponse_linkSpecifiers</a> - Returns one or
--   more typed link specifiers as output.
--   
--   <a>$sel:nextToken:ListIncomingTypedLinks'</a>,
--   <a>listIncomingTypedLinksResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:httpStatus:ListIncomingTypedLinksResponse'</a>,
--   <a>listIncomingTypedLinksResponse_httpStatus</a> - The response's http
--   status code.
newListIncomingTypedLinksResponse :: Int -> ListIncomingTypedLinksResponse

-- | <i>See:</i> <a>newListObjectParents</a> smart constructor.
data ListObjectParents
ListObjectParents' :: Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListObjectParents

-- | Create a value of <a>ListObjectParents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectParents'</a>,
--   <a>listObjectParents_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectParents'</a>,
--   <a>listObjectParents_maxResults</a> - The maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:includeAllLinksToEachParent:ListObjectParents'</a>,
--   <a>listObjectParents_includeAllLinksToEachParent</a> - When set to
--   True, returns all ListObjectParentsResponse$ParentLinks. There could
--   be multiple links between a parent-child pair.
--   
--   <a>$sel:consistencyLevel:ListObjectParents'</a>,
--   <a>listObjectParents_consistencyLevel</a> - Represents the manner and
--   timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListObjectParents'</a>,
--   <a>listObjectParents_directoryArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the Directory where the object resides. For
--   more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectParents'</a>,
--   <a>listObjectParents_objectReference</a> - The reference that
--   identifies the object for which parent objects are being listed.
newListObjectParents :: Text -> ObjectReference -> ListObjectParents

-- | <i>See:</i> <a>newListObjectParentsResponse</a> smart constructor.
data ListObjectParentsResponse
ListObjectParentsResponse' :: Maybe [ObjectIdentifierAndLinkNameTuple] -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> ListObjectParentsResponse

-- | Create a value of <a>ListObjectParentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentLinks:ListObjectParentsResponse'</a>,
--   <a>listObjectParentsResponse_parentLinks</a> - Returns a list of
--   parent reference and LinkName Tuples.
--   
--   <a>$sel:parents:ListObjectParentsResponse'</a>,
--   <a>listObjectParentsResponse_parents</a> - The parent structure, which
--   is a map with key as the <tt>ObjectIdentifier</tt> and LinkName as the
--   value.
--   
--   <a>$sel:nextToken:ListObjectParents'</a>,
--   <a>listObjectParentsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListObjectParentsResponse'</a>,
--   <a>listObjectParentsResponse_httpStatus</a> - The response's http
--   status code.
newListObjectParentsResponse :: Int -> ListObjectParentsResponse

-- | <i>See:</i> <a>newListPolicyAttachments</a> smart constructor.
data ListPolicyAttachments
ListPolicyAttachments' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListPolicyAttachments

-- | Create a value of <a>ListPolicyAttachments</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_consistencyLevel</a> - Represents the manner
--   and timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where objects reside. For
--   more information, see arns.
--   
--   <a>$sel:policyReference:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachments_policyReference</a> - The reference that
--   identifies the policy object.
newListPolicyAttachments :: Text -> ObjectReference -> ListPolicyAttachments

-- | <i>See:</i> <a>newListPolicyAttachmentsResponse</a> smart constructor.
data ListPolicyAttachmentsResponse
ListPolicyAttachmentsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListPolicyAttachmentsResponse

-- | Create a value of <a>ListPolicyAttachmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPolicyAttachments'</a>,
--   <a>listPolicyAttachmentsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:objectIdentifiers:ListPolicyAttachmentsResponse'</a>,
--   <a>listPolicyAttachmentsResponse_objectIdentifiers</a> - A list of
--   <tt>ObjectIdentifiers</tt> to which the policy is attached.
--   
--   <a>$sel:httpStatus:ListPolicyAttachmentsResponse'</a>,
--   <a>listPolicyAttachmentsResponse_httpStatus</a> - The response's http
--   status code.
newListPolicyAttachmentsResponse :: Int -> ListPolicyAttachmentsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource. Tagging is only
--   supported for directories.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of tag
--   key-value pairs.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListObjectAttributes</a> smart constructor.
data ListObjectAttributes
ListObjectAttributes' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe SchemaFacet -> Text -> ObjectReference -> ListObjectAttributes

-- | Create a value of <a>ListObjectAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_consistencyLevel</a> - Represents the manner
--   and timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:facetFilter:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_facetFilter</a> - Used to filter the list of
--   object attributes that are associated with a certain facet.
--   
--   <a>$sel:directoryArn:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   For more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectAttributes'</a>,
--   <a>listObjectAttributes_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newListObjectAttributes :: Text -> ObjectReference -> ListObjectAttributes

-- | <i>See:</i> <a>newListObjectAttributesResponse</a> smart constructor.
data ListObjectAttributesResponse
ListObjectAttributesResponse' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> Int -> ListObjectAttributesResponse

-- | Create a value of <a>ListObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectAttributes'</a>,
--   <a>listObjectAttributesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:attributes:ListObjectAttributesResponse'</a>,
--   <a>listObjectAttributesResponse_attributes</a> - Attributes map that
--   is associated with the object. <tt>AttributeArn</tt> is the key, and
--   attribute value is the value.
--   
--   <a>$sel:httpStatus:ListObjectAttributesResponse'</a>,
--   <a>listObjectAttributesResponse_httpStatus</a> - The response's http
--   status code.
newListObjectAttributesResponse :: Int -> ListObjectAttributesResponse

-- | <i>See:</i> <a>newDeleteTypedLinkFacet</a> smart constructor.
data DeleteTypedLinkFacet
DeleteTypedLinkFacet' :: Text -> Text -> DeleteTypedLinkFacet

-- | Create a value of <a>DeleteTypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteTypedLinkFacet'</a>,
--   <a>deleteTypedLinkFacet_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:name:DeleteTypedLinkFacet'</a>,
--   <a>deleteTypedLinkFacet_name</a> - The unique name of the typed link
--   facet.
newDeleteTypedLinkFacet :: Text -> Text -> DeleteTypedLinkFacet

-- | <i>See:</i> <a>newDeleteTypedLinkFacetResponse</a> smart constructor.
data DeleteTypedLinkFacetResponse
DeleteTypedLinkFacetResponse' :: Int -> DeleteTypedLinkFacetResponse

-- | Create a value of <a>DeleteTypedLinkFacetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTypedLinkFacetResponse'</a>,
--   <a>deleteTypedLinkFacetResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTypedLinkFacetResponse :: Int -> DeleteTypedLinkFacetResponse

-- | <i>See:</i> <a>newPublishSchema</a> smart constructor.
data PublishSchema
PublishSchema' :: Maybe Text -> Maybe Text -> Text -> Text -> PublishSchema

-- | Create a value of <a>PublishSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PublishSchema'</a>, <a>publishSchema_name</a> - The new
--   name under which the schema will be published. If this is not
--   provided, the development schema is considered.
--   
--   <a>$sel:minorVersion:PublishSchema'</a>,
--   <a>publishSchema_minorVersion</a> - The minor version under which the
--   schema will be published. This parameter is recommended. Schemas have
--   both a major and minor version associated with them.
--   
--   <a>$sel:developmentSchemaArn:PublishSchema'</a>,
--   <a>publishSchema_developmentSchemaArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the development schema. For more
--   information, see arns.
--   
--   <a>$sel:version:PublishSchema'</a>, <a>publishSchema_version</a> - The
--   major version under which the schema will be published. Schemas have
--   both a major and minor version associated with them.
newPublishSchema :: Text -> Text -> PublishSchema

-- | <i>See:</i> <a>newPublishSchemaResponse</a> smart constructor.
data PublishSchemaResponse
PublishSchemaResponse' :: Maybe Text -> Int -> PublishSchemaResponse

-- | Create a value of <a>PublishSchemaResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:publishedSchemaArn:PublishSchemaResponse'</a>,
--   <a>publishSchemaResponse_publishedSchemaArn</a> - The ARN that is
--   associated with the published schema. For more information, see arns.
--   
--   <a>$sel:httpStatus:PublishSchemaResponse'</a>,
--   <a>publishSchemaResponse_httpStatus</a> - The response's http status
--   code.
newPublishSchemaResponse :: Int -> PublishSchemaResponse

-- | <i>See:</i> <a>newDeleteDirectory</a> smart constructor.
data DeleteDirectory
DeleteDirectory' :: Text -> DeleteDirectory

-- | Create a value of <a>DeleteDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DeleteDirectory'</a>,
--   <a>deleteDirectory_directoryArn</a> - The ARN of the directory to
--   delete.
newDeleteDirectory :: Text -> DeleteDirectory

-- | <i>See:</i> <a>newDeleteDirectoryResponse</a> smart constructor.
data DeleteDirectoryResponse
DeleteDirectoryResponse' :: Int -> Text -> DeleteDirectoryResponse

-- | Create a value of <a>DeleteDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDirectoryResponse'</a>,
--   <a>deleteDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directoryArn:DeleteDirectory'</a>,
--   <a>deleteDirectoryResponse_directoryArn</a> - The ARN of the deleted
--   directory.
newDeleteDirectoryResponse :: Int -> Text -> DeleteDirectoryResponse

-- | <i>See:</i> <a>newUpdateTypedLinkFacet</a> smart constructor.
data UpdateTypedLinkFacet
UpdateTypedLinkFacet' :: Text -> Text -> [TypedLinkFacetAttributeUpdate] -> [Text] -> UpdateTypedLinkFacet

-- | Create a value of <a>UpdateTypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:name:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_name</a> - The unique name of the typed link
--   facet.
--   
--   <a>$sel:attributeUpdates:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_attributeUpdates</a> - Attributes update
--   structure.
--   
--   <a>$sel:identityAttributeOrder:UpdateTypedLinkFacet'</a>,
--   <a>updateTypedLinkFacet_identityAttributeOrder</a> - The order of
--   identity attributes for the facet, from most significant to least
--   significant. The ability to filter typed links considers the order
--   that the attributes are defined on the typed link facet. When
--   providing ranges to a typed link selection, any inexact ranges must be
--   specified at the end. Any attributes that do not have a range
--   specified are presumed to match the entire range. Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls. For more
--   information about identity attributes, see <a>Typed Links</a>.
newUpdateTypedLinkFacet :: Text -> Text -> UpdateTypedLinkFacet

-- | <i>See:</i> <a>newUpdateTypedLinkFacetResponse</a> smart constructor.
data UpdateTypedLinkFacetResponse
UpdateTypedLinkFacetResponse' :: Int -> UpdateTypedLinkFacetResponse

-- | Create a value of <a>UpdateTypedLinkFacetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTypedLinkFacetResponse'</a>,
--   <a>updateTypedLinkFacetResponse_httpStatus</a> - The response's http
--   status code.
newUpdateTypedLinkFacetResponse :: Int -> UpdateTypedLinkFacetResponse

-- | <i>See:</i> <a>newCreateDirectory</a> smart constructor.
data CreateDirectory
CreateDirectory' :: Text -> Text -> CreateDirectory

-- | Create a value of <a>CreateDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateDirectory'</a>, <a>createDirectory_name</a> - The
--   name of the Directory. Should be unique per account, per region.
--   
--   <a>$sel:schemaArn:CreateDirectory'</a>,
--   <a>createDirectory_schemaArn</a> - The Amazon Resource Name (ARN) of
--   the published schema that will be copied into the data Directory. For
--   more information, see arns.
newCreateDirectory :: Text -> Text -> CreateDirectory

-- | <i>See:</i> <a>newCreateDirectoryResponse</a> smart constructor.
data CreateDirectoryResponse
CreateDirectoryResponse' :: Int -> Text -> Text -> Text -> Text -> CreateDirectoryResponse

-- | Create a value of <a>CreateDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directoryArn:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_directoryArn</a> - The ARN that is
--   associated with the Directory. For more information, see arns.
--   
--   <a>$sel:name:CreateDirectory'</a>, <a>createDirectoryResponse_name</a>
--   - The name of the Directory.
--   
--   <a>$sel:objectIdentifier:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_objectIdentifier</a> - The root object node
--   of the created directory.
--   
--   <a>$sel:appliedSchemaArn:CreateDirectoryResponse'</a>,
--   <a>createDirectoryResponse_appliedSchemaArn</a> - The ARN of the
--   published schema in the Directory. Once a published schema is copied
--   into the directory, it has its own ARN, which is referred to applied
--   schema ARN. For more information, see arns.
newCreateDirectoryResponse :: Int -> Text -> Text -> Text -> Text -> CreateDirectoryResponse

-- | <i>See:</i> <a>newListPublishedSchemaArns</a> smart constructor.
data ListPublishedSchemaArns
ListPublishedSchemaArns' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListPublishedSchemaArns

-- | Create a value of <a>ListPublishedSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:schemaArn:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArns_schemaArn</a> - The response for
--   <tt>ListPublishedSchemaArns</tt> when this parameter is used will list
--   all minor version ARNs for a major version.
--   
--   <a>$sel:maxResults:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
newListPublishedSchemaArns :: ListPublishedSchemaArns

-- | <i>See:</i> <a>newListPublishedSchemaArnsResponse</a> smart
--   constructor.
data ListPublishedSchemaArnsResponse
ListPublishedSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListPublishedSchemaArnsResponse

-- | Create a value of <a>ListPublishedSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListPublishedSchemaArnsResponse'</a>,
--   <a>listPublishedSchemaArnsResponse_schemaArns</a> - The ARNs of
--   published schemas.
--   
--   <a>$sel:nextToken:ListPublishedSchemaArns'</a>,
--   <a>listPublishedSchemaArnsResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:httpStatus:ListPublishedSchemaArnsResponse'</a>,
--   <a>listPublishedSchemaArnsResponse_httpStatus</a> - The response's
--   http status code.
newListPublishedSchemaArnsResponse :: Int -> ListPublishedSchemaArnsResponse

-- | <i>See:</i> <a>newListDirectories</a> smart constructor.
data ListDirectories
ListDirectories' :: Maybe Text -> Maybe Natural -> Maybe DirectoryState -> ListDirectories

-- | Create a value of <a>ListDirectories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDirectories'</a>,
--   <a>listDirectories_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListDirectories'</a>,
--   <a>listDirectories_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:state:ListDirectories'</a>, <a>listDirectories_state</a> - The
--   state of the directories in the list. Can be either Enabled, Disabled,
--   or Deleted.
newListDirectories :: ListDirectories

-- | <i>See:</i> <a>newListDirectoriesResponse</a> smart constructor.
data ListDirectoriesResponse
ListDirectoriesResponse' :: Maybe Text -> Int -> [Directory] -> ListDirectoriesResponse

-- | Create a value of <a>ListDirectoriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDirectories'</a>,
--   <a>listDirectoriesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListDirectoriesResponse'</a>,
--   <a>listDirectoriesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directories:ListDirectoriesResponse'</a>,
--   <a>listDirectoriesResponse_directories</a> - Lists all directories
--   that are associated with your account in pagination fashion.
newListDirectoriesResponse :: Int -> ListDirectoriesResponse

-- | <i>See:</i> <a>newListObjectParentPaths</a> smart constructor.
data ListObjectParentPaths
ListObjectParentPaths' :: Maybe Text -> Maybe Natural -> Text -> ObjectReference -> ListObjectParentPaths

-- | Create a value of <a>ListObjectParentPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:directoryArn:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_directoryArn</a> - The ARN of the directory
--   to which the parent path applies.
--   
--   <a>$sel:objectReference:ListObjectParentPaths'</a>,
--   <a>listObjectParentPaths_objectReference</a> - The reference that
--   identifies the object whose parent paths are listed.
newListObjectParentPaths :: Text -> ObjectReference -> ListObjectParentPaths

-- | <i>See:</i> <a>newListObjectParentPathsResponse</a> smart constructor.
data ListObjectParentPathsResponse
ListObjectParentPathsResponse' :: Maybe Text -> Maybe [PathToObjectIdentifiers] -> Int -> ListObjectParentPathsResponse

-- | Create a value of <a>ListObjectParentPathsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectParentPaths'</a>,
--   <a>listObjectParentPathsResponse_nextToken</a> - The pagination token.
--   
--   
--   <a>$sel:pathToObjectIdentifiersList:ListObjectParentPathsResponse'</a>,
--   <a>listObjectParentPathsResponse_pathToObjectIdentifiersList</a> -
--   Returns the path to the <tt>ObjectIdentifiers</tt> that are associated
--   with the directory.
--   
--   <a>$sel:httpStatus:ListObjectParentPathsResponse'</a>,
--   <a>listObjectParentPathsResponse_httpStatus</a> - The response's http
--   status code.
newListObjectParentPathsResponse :: Int -> ListObjectParentPathsResponse

-- | <i>See:</i> <a>newCreateSchema</a> smart constructor.
data CreateSchema
CreateSchema' :: Text -> CreateSchema

-- | Create a value of <a>CreateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSchema'</a>, <a>createSchema_name</a> - The name
--   that is associated with the schema. This is unique to each account and
--   in each region.
newCreateSchema :: Text -> CreateSchema

-- | <i>See:</i> <a>newCreateSchemaResponse</a> smart constructor.
data CreateSchemaResponse
CreateSchemaResponse' :: Maybe Text -> Int -> CreateSchemaResponse

-- | Create a value of <a>CreateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:httpStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_httpStatus</a> - The response's http status
--   code.
newCreateSchemaResponse :: Int -> CreateSchemaResponse

-- | <i>See:</i> <a>newLookupPolicy</a> smart constructor.
data LookupPolicy
LookupPolicy' :: Maybe Text -> Maybe Natural -> Text -> ObjectReference -> LookupPolicy

-- | Create a value of <a>LookupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupPolicy'</a>, <a>lookupPolicy_nextToken</a> -
--   The token to request the next page of results.
--   
--   <a>$sel:maxResults:LookupPolicy'</a>, <a>lookupPolicy_maxResults</a> -
--   The maximum number of items to be retrieved in a single call. This is
--   an approximate number.
--   
--   <a>$sel:directoryArn:LookupPolicy'</a>,
--   <a>lookupPolicy_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory. For more information, see arns.
--   
--   <a>$sel:objectReference:LookupPolicy'</a>,
--   <a>lookupPolicy_objectReference</a> - Reference that identifies the
--   object whose policies will be looked up.
newLookupPolicy :: Text -> ObjectReference -> LookupPolicy

-- | <i>See:</i> <a>newLookupPolicyResponse</a> smart constructor.
data LookupPolicyResponse
LookupPolicyResponse' :: Maybe Text -> Maybe [PolicyToPath] -> Int -> LookupPolicyResponse

-- | Create a value of <a>LookupPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupPolicy'</a>,
--   <a>lookupPolicyResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:policyToPathList:LookupPolicyResponse'</a>,
--   <a>lookupPolicyResponse_policyToPathList</a> - Provides list of path
--   to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
--   
--   <a>$sel:httpStatus:LookupPolicyResponse'</a>,
--   <a>lookupPolicyResponse_httpStatus</a> - The response's http status
--   code.
newLookupPolicyResponse :: Int -> LookupPolicyResponse

-- | <i>See:</i> <a>newCreateIndex</a> smart constructor.
data CreateIndex
CreateIndex' :: Maybe Text -> Maybe ObjectReference -> Text -> [AttributeKey] -> Bool -> CreateIndex

-- | Create a value of <a>CreateIndex</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:CreateIndex'</a>, <a>createIndex_linkName</a> - The
--   name of the link between the parent object and the index object.
--   
--   <a>$sel:parentReference:CreateIndex'</a>,
--   <a>createIndex_parentReference</a> - A reference to the parent object
--   that contains the index object.
--   
--   <a>$sel:directoryArn:CreateIndex'</a>, <a>createIndex_directoryArn</a>
--   - The ARN of the directory where the index should be created.
--   
--   <a>$sel:orderedIndexedAttributeList:CreateIndex'</a>,
--   <a>createIndex_orderedIndexedAttributeList</a> - Specifies the
--   attributes that should be indexed on. Currently only a single
--   attribute is supported.
--   
--   <a>$sel:isUnique:CreateIndex'</a>, <a>createIndex_isUnique</a> -
--   Indicates whether the attribute that is being indexed has unique
--   values or not.
newCreateIndex :: Text -> Bool -> CreateIndex

-- | <i>See:</i> <a>newCreateIndexResponse</a> smart constructor.
data CreateIndexResponse
CreateIndexResponse' :: Maybe Text -> Int -> CreateIndexResponse

-- | Create a value of <a>CreateIndexResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:CreateIndexResponse'</a>,
--   <a>createIndexResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the index created by this operation.
--   
--   <a>$sel:httpStatus:CreateIndexResponse'</a>,
--   <a>createIndexResponse_httpStatus</a> - The response's http status
--   code.
newCreateIndexResponse :: Int -> CreateIndexResponse

-- | <i>See:</i> <a>newDetachFromIndex</a> smart constructor.
data DetachFromIndex
DetachFromIndex' :: Text -> ObjectReference -> ObjectReference -> DetachFromIndex

-- | Create a value of <a>DetachFromIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachFromIndex'</a>,
--   <a>detachFromIndex_directoryArn</a> - The Amazon Resource Name (ARN)
--   of the directory the index and object exist in.
--   
--   <a>$sel:indexReference:DetachFromIndex'</a>,
--   <a>detachFromIndex_indexReference</a> - A reference to the index
--   object.
--   
--   <a>$sel:targetReference:DetachFromIndex'</a>,
--   <a>detachFromIndex_targetReference</a> - A reference to the object
--   being detached from the index.
newDetachFromIndex :: Text -> ObjectReference -> ObjectReference -> DetachFromIndex

-- | <i>See:</i> <a>newDetachFromIndexResponse</a> smart constructor.
data DetachFromIndexResponse
DetachFromIndexResponse' :: Maybe Text -> Int -> DetachFromIndexResponse

-- | Create a value of <a>DetachFromIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:DetachFromIndexResponse'</a>,
--   <a>detachFromIndexResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
--   
--   <a>$sel:httpStatus:DetachFromIndexResponse'</a>,
--   <a>detachFromIndexResponse_httpStatus</a> - The response's http status
--   code.
newDetachFromIndexResponse :: Int -> DetachFromIndexResponse

-- | <i>See:</i> <a>newListAttachedIndices</a> smart constructor.
data ListAttachedIndices
ListAttachedIndices' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListAttachedIndices

-- | Create a value of <a>ListAttachedIndices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_maxResults</a> - The maximum number of results
--   to retrieve.
--   
--   <a>$sel:consistencyLevel:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_consistencyLevel</a> - The consistency level to
--   use for this operation.
--   
--   <a>$sel:directoryArn:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_directoryArn</a> - The ARN of the directory.
--   
--   <a>$sel:targetReference:ListAttachedIndices'</a>,
--   <a>listAttachedIndices_targetReference</a> - A reference to the object
--   that has indices attached.
newListAttachedIndices :: Text -> ObjectReference -> ListAttachedIndices

-- | <i>See:</i> <a>newListAttachedIndicesResponse</a> smart constructor.
data ListAttachedIndicesResponse
ListAttachedIndicesResponse' :: Maybe Text -> Maybe [IndexAttachment] -> Int -> ListAttachedIndicesResponse

-- | Create a value of <a>ListAttachedIndicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAttachedIndices'</a>,
--   <a>listAttachedIndicesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:indexAttachments:ListAttachedIndicesResponse'</a>,
--   <a>listAttachedIndicesResponse_indexAttachments</a> - The indices
--   attached to the specified object.
--   
--   <a>$sel:httpStatus:ListAttachedIndicesResponse'</a>,
--   <a>listAttachedIndicesResponse_httpStatus</a> - The response's http
--   status code.
newListAttachedIndicesResponse :: Int -> ListAttachedIndicesResponse

-- | <i>See:</i> <a>newDetachPolicy</a> smart constructor.
data DetachPolicy
DetachPolicy' :: Text -> ObjectReference -> ObjectReference -> DetachPolicy

-- | Create a value of <a>DetachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachPolicy'</a>,
--   <a>detachPolicy_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where both objects reside. For more
--   information, see arns.
--   
--   <a>$sel:policyReference:DetachPolicy'</a>,
--   <a>detachPolicy_policyReference</a> - Reference that identifies the
--   policy object.
--   
--   <a>$sel:objectReference:DetachPolicy'</a>,
--   <a>detachPolicy_objectReference</a> - Reference that identifies the
--   object whose policy object will be detached.
newDetachPolicy :: Text -> ObjectReference -> ObjectReference -> DetachPolicy

-- | <i>See:</i> <a>newDetachPolicyResponse</a> smart constructor.
data DetachPolicyResponse
DetachPolicyResponse' :: Int -> DetachPolicyResponse

-- | Create a value of <a>DetachPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DetachPolicyResponse'</a>,
--   <a>detachPolicyResponse_httpStatus</a> - The response's http status
--   code.
newDetachPolicyResponse :: Int -> DetachPolicyResponse

-- | <i>See:</i> <a>newListObjectChildren</a> smart constructor.
data ListObjectChildren
ListObjectChildren' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListObjectChildren

-- | Create a value of <a>ListObjectChildren</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectChildren'</a>,
--   <a>listObjectChildren_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectChildren'</a>,
--   <a>listObjectChildren_maxResults</a> - The maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListObjectChildren'</a>,
--   <a>listObjectChildren_consistencyLevel</a> - Represents the manner and
--   timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListObjectChildren'</a>,
--   <a>listObjectChildren_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   For more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectChildren'</a>,
--   <a>listObjectChildren_objectReference</a> - The reference that
--   identifies the object for which child objects are being listed.
newListObjectChildren :: Text -> ObjectReference -> ListObjectChildren

-- | <i>See:</i> <a>newListObjectChildrenResponse</a> smart constructor.
data ListObjectChildrenResponse
ListObjectChildrenResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> ListObjectChildrenResponse

-- | Create a value of <a>ListObjectChildrenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectChildren'</a>,
--   <a>listObjectChildrenResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:children:ListObjectChildrenResponse'</a>,
--   <a>listObjectChildrenResponse_children</a> - Children structure, which
--   is a map with key as the <tt>LinkName</tt> and
--   <tt>ObjectIdentifier</tt> as the value.
--   
--   <a>$sel:httpStatus:ListObjectChildrenResponse'</a>,
--   <a>listObjectChildrenResponse_httpStatus</a> - The response's http
--   status code.
newListObjectChildrenResponse :: Int -> ListObjectChildrenResponse

-- | <i>See:</i> <a>newListIndex</a> smart constructor.
data ListIndex
ListIndex' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe [ObjectAttributeRange] -> Text -> ObjectReference -> ListIndex

-- | Create a value of <a>ListIndex</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIndex'</a>, <a>listIndex_nextToken</a> - The
--   pagination token.
--   
--   <a>$sel:maxResults:ListIndex'</a>, <a>listIndex_maxResults</a> - The
--   maximum number of objects in a single page to retrieve from the index
--   during a request. For more information, see <a>Amazon Cloud Directory
--   Limits</a>.
--   
--   <a>$sel:consistencyLevel:ListIndex'</a>,
--   <a>listIndex_consistencyLevel</a> - The consistency level to execute
--   the request at.
--   
--   <a>$sel:rangesOnIndexedValues:ListIndex'</a>,
--   <a>listIndex_rangesOnIndexedValues</a> - Specifies the ranges of
--   indexed values that you want to query.
--   
--   <a>$sel:directoryArn:ListIndex'</a>, <a>listIndex_directoryArn</a> -
--   The ARN of the directory that the index exists in.
--   
--   <a>$sel:indexReference:ListIndex'</a>, <a>listIndex_indexReference</a>
--   - The reference to the index to list.
newListIndex :: Text -> ObjectReference -> ListIndex

-- | <i>See:</i> <a>newListIndexResponse</a> smart constructor.
data ListIndexResponse
ListIndexResponse' :: Maybe Text -> Maybe [IndexAttachment] -> Int -> ListIndexResponse

-- | Create a value of <a>ListIndexResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIndex'</a>, <a>listIndexResponse_nextToken</a> -
--   The pagination token.
--   
--   <a>$sel:indexAttachments:ListIndexResponse'</a>,
--   <a>listIndexResponse_indexAttachments</a> - The objects and indexed
--   values attached to the index.
--   
--   <a>$sel:httpStatus:ListIndexResponse'</a>,
--   <a>listIndexResponse_httpStatus</a> - The response's http status code.
newListIndexResponse :: Int -> ListIndexResponse

-- | <i>See:</i> <a>newListObjectPolicies</a> smart constructor.
data ListObjectPolicies
ListObjectPolicies' :: Maybe Text -> Maybe Natural -> Maybe ConsistencyLevel -> Text -> ObjectReference -> ListObjectPolicies

-- | Create a value of <a>ListObjectPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_maxResults</a> - The maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:consistencyLevel:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_consistencyLevel</a> - Represents the manner and
--   timing in which the successful write or update of an object is
--   reflected in a subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where objects reside. For
--   more information, see arns.
--   
--   <a>$sel:objectReference:ListObjectPolicies'</a>,
--   <a>listObjectPolicies_objectReference</a> - Reference that identifies
--   the object for which policies will be listed.
newListObjectPolicies :: Text -> ObjectReference -> ListObjectPolicies

-- | <i>See:</i> <a>newListObjectPoliciesResponse</a> smart constructor.
data ListObjectPoliciesResponse
ListObjectPoliciesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListObjectPoliciesResponse

-- | Create a value of <a>ListObjectPoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListObjectPolicies'</a>,
--   <a>listObjectPoliciesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:attachedPolicyIds:ListObjectPoliciesResponse'</a>,
--   <a>listObjectPoliciesResponse_attachedPolicyIds</a> - A list of policy
--   <tt>ObjectIdentifiers</tt>, that are attached to the object.
--   
--   <a>$sel:httpStatus:ListObjectPoliciesResponse'</a>,
--   <a>listObjectPoliciesResponse_httpStatus</a> - The response's http
--   status code.
newListObjectPoliciesResponse :: Int -> ListObjectPoliciesResponse

-- | <i>See:</i> <a>newGetLinkAttributes</a> smart constructor.
data GetLinkAttributes
GetLinkAttributes' :: Maybe ConsistencyLevel -> Text -> TypedLinkSpecifier -> [Text] -> GetLinkAttributes

-- | Create a value of <a>GetLinkAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_consistencyLevel</a> - The consistency level at
--   which to retrieve the attributes on a typed link.
--   
--   <a>$sel:directoryArn:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_directoryArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the Directory where the typed link resides.
--   For more information, see arns or <a>Typed Links</a>.
--   
--   <a>$sel:typedLinkSpecifier:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_typedLinkSpecifier</a> - Allows a typed link
--   specifier to be accepted as input.
--   
--   <a>$sel:attributeNames:GetLinkAttributes'</a>,
--   <a>getLinkAttributes_attributeNames</a> - A list of attribute names
--   whose values will be retrieved.
newGetLinkAttributes :: Text -> TypedLinkSpecifier -> GetLinkAttributes

-- | <i>See:</i> <a>newGetLinkAttributesResponse</a> smart constructor.
data GetLinkAttributesResponse
GetLinkAttributesResponse' :: Maybe [AttributeKeyAndValue] -> Int -> GetLinkAttributesResponse

-- | Create a value of <a>GetLinkAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetLinkAttributesResponse'</a>,
--   <a>getLinkAttributesResponse_attributes</a> - The attributes that are
--   associated with the typed link.
--   
--   <a>$sel:httpStatus:GetLinkAttributesResponse'</a>,
--   <a>getLinkAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetLinkAttributesResponse :: Int -> GetLinkAttributesResponse

-- | <i>See:</i> <a>newCreateFacet</a> smart constructor.
data CreateFacet
CreateFacet' :: Maybe FacetStyle -> Maybe [FacetAttribute] -> Maybe ObjectType -> Text -> Text -> CreateFacet

-- | Create a value of <a>CreateFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:facetStyle:CreateFacet'</a>, <a>createFacet_facetStyle</a> -
--   There are two different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
--   
--   <a>$sel:attributes:CreateFacet'</a>, <a>createFacet_attributes</a> -
--   The attributes that are associated with the Facet.
--   
--   <a>$sel:objectType:CreateFacet'</a>, <a>createFacet_objectType</a> -
--   Specifies whether a given object created from this facet is of type
--   node, leaf node, policy or index.
--   
--   <ul>
--   <li>Node: Can have multiple children but one parent.</li>
--   <li>Leaf node: Cannot have children but can have multiple
--   parents.</li>
--   <li>Policy: Allows you to store a policy document and policy type. For
--   more information, see <a>Policies</a>.</li>
--   <li>Index: Can be created with the Index API.</li>
--   </ul>
--   
--   <a>$sel:schemaArn:CreateFacet'</a>, <a>createFacet_schemaArn</a> - The
--   schema ARN in which the new Facet will be created. For more
--   information, see arns.
--   
--   <a>$sel:name:CreateFacet'</a>, <a>createFacet_name</a> - The name of
--   the Facet, which is unique for a given schema.
newCreateFacet :: Text -> Text -> CreateFacet

-- | <i>See:</i> <a>newCreateFacetResponse</a> smart constructor.
data CreateFacetResponse
CreateFacetResponse' :: Int -> CreateFacetResponse

-- | Create a value of <a>CreateFacetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateFacetResponse'</a>,
--   <a>createFacetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFacetResponse :: Int -> CreateFacetResponse

-- | <i>See:</i> <a>newPutSchemaFromJson</a> smart constructor.
data PutSchemaFromJson
PutSchemaFromJson' :: Text -> Text -> PutSchemaFromJson

-- | Create a value of <a>PutSchemaFromJson</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:PutSchemaFromJson'</a>,
--   <a>putSchemaFromJson_schemaArn</a> - The ARN of the schema to update.
--   
--   <a>$sel:document:PutSchemaFromJson'</a>,
--   <a>putSchemaFromJson_document</a> - The replacement JSON schema.
newPutSchemaFromJson :: Text -> Text -> PutSchemaFromJson

-- | <i>See:</i> <a>newPutSchemaFromJsonResponse</a> smart constructor.
data PutSchemaFromJsonResponse
PutSchemaFromJsonResponse' :: Maybe Text -> Int -> PutSchemaFromJsonResponse

-- | Create a value of <a>PutSchemaFromJsonResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutSchemaFromJsonResponse'</a>,
--   <a>putSchemaFromJsonResponse_arn</a> - The ARN of the schema to
--   update.
--   
--   <a>$sel:httpStatus:PutSchemaFromJsonResponse'</a>,
--   <a>putSchemaFromJsonResponse_httpStatus</a> - The response's http
--   status code.
newPutSchemaFromJsonResponse :: Int -> PutSchemaFromJsonResponse

-- | <i>See:</i> <a>newBatchRead</a> smart constructor.
data BatchRead
BatchRead' :: Maybe ConsistencyLevel -> Text -> [BatchReadOperation] -> BatchRead

-- | Create a value of <a>BatchRead</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistencyLevel:BatchRead'</a>,
--   <a>batchRead_consistencyLevel</a> - Represents the manner and timing
--   in which the successful write or update of an object is reflected in a
--   subsequent read operation of that same object.
--   
--   <a>$sel:directoryArn:BatchRead'</a>, <a>batchRead_directoryArn</a> -
--   The Amazon Resource Name (ARN) that is associated with the Directory.
--   For more information, see arns.
--   
--   <a>$sel:operations:BatchRead'</a>, <a>batchRead_operations</a> - A
--   list of operations that are part of the batch.
newBatchRead :: Text -> BatchRead

-- | <i>See:</i> <a>newBatchReadResponse</a> smart constructor.
data BatchReadResponse
BatchReadResponse' :: Maybe [BatchReadOperationResponse] -> Int -> BatchReadResponse

-- | Create a value of <a>BatchReadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responses:BatchReadResponse'</a>,
--   <a>batchReadResponse_responses</a> - A list of all the responses for
--   each batch read.
--   
--   <a>$sel:httpStatus:BatchReadResponse'</a>,
--   <a>batchReadResponse_httpStatus</a> - The response's http status code.
newBatchReadResponse :: Int -> BatchReadResponse

-- | <i>See:</i> <a>newAttachObject</a> smart constructor.
data AttachObject
AttachObject' :: Text -> ObjectReference -> ObjectReference -> Text -> AttachObject

-- | Create a value of <a>AttachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachObject'</a>,
--   <a>attachObject_directoryArn</a> - Amazon Resource Name (ARN) that is
--   associated with the Directory where both objects reside. For more
--   information, see arns.
--   
--   <a>$sel:parentReference:AttachObject'</a>,
--   <a>attachObject_parentReference</a> - The parent object reference.
--   
--   <a>$sel:childReference:AttachObject'</a>,
--   <a>attachObject_childReference</a> - The child object reference to be
--   attached to the object.
--   
--   <a>$sel:linkName:AttachObject'</a>, <a>attachObject_linkName</a> - The
--   link name with which the child object is attached to the parent.
newAttachObject :: Text -> ObjectReference -> ObjectReference -> Text -> AttachObject

-- | <i>See:</i> <a>newAttachObjectResponse</a> smart constructor.
data AttachObjectResponse
AttachObjectResponse' :: Maybe Text -> Int -> AttachObjectResponse

-- | Create a value of <a>AttachObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:AttachObjectResponse'</a>,
--   <a>attachObjectResponse_attachedObjectIdentifier</a> - The attached
--   <tt>ObjectIdentifier</tt>, which is the child
--   <tt>ObjectIdentifier</tt>.
--   
--   <a>$sel:httpStatus:AttachObjectResponse'</a>,
--   <a>attachObjectResponse_httpStatus</a> - The response's http status
--   code.
newAttachObjectResponse :: Int -> AttachObjectResponse

-- | <i>See:</i> <a>newAttachToIndex</a> smart constructor.
data AttachToIndex
AttachToIndex' :: Text -> ObjectReference -> ObjectReference -> AttachToIndex

-- | Create a value of <a>AttachToIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachToIndex'</a>,
--   <a>attachToIndex_directoryArn</a> - The Amazon Resource Name (ARN) of
--   the directory where the object and index exist.
--   
--   <a>$sel:indexReference:AttachToIndex'</a>,
--   <a>attachToIndex_indexReference</a> - A reference to the index that
--   you are attaching the object to.
--   
--   <a>$sel:targetReference:AttachToIndex'</a>,
--   <a>attachToIndex_targetReference</a> - A reference to the object that
--   you are attaching to the index.
newAttachToIndex :: Text -> ObjectReference -> ObjectReference -> AttachToIndex

-- | <i>See:</i> <a>newAttachToIndexResponse</a> smart constructor.
data AttachToIndexResponse
AttachToIndexResponse' :: Maybe Text -> Int -> AttachToIndexResponse

-- | Create a value of <a>AttachToIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:AttachToIndexResponse'</a>,
--   <a>attachToIndexResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
--   
--   <a>$sel:httpStatus:AttachToIndexResponse'</a>,
--   <a>attachToIndexResponse_httpStatus</a> - The response's http status
--   code.
newAttachToIndexResponse :: Int -> AttachToIndexResponse

-- | <i>See:</i> <a>newAttachPolicy</a> smart constructor.
data AttachPolicy
AttachPolicy' :: Text -> ObjectReference -> ObjectReference -> AttachPolicy

-- | Create a value of <a>AttachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:AttachPolicy'</a>,
--   <a>attachPolicy_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where both objects reside. For more
--   information, see arns.
--   
--   <a>$sel:policyReference:AttachPolicy'</a>,
--   <a>attachPolicy_policyReference</a> - The reference that is associated
--   with the policy object.
--   
--   <a>$sel:objectReference:AttachPolicy'</a>,
--   <a>attachPolicy_objectReference</a> - The reference that identifies
--   the object to which the policy will be attached.
newAttachPolicy :: Text -> ObjectReference -> ObjectReference -> AttachPolicy

-- | <i>See:</i> <a>newAttachPolicyResponse</a> smart constructor.
data AttachPolicyResponse
AttachPolicyResponse' :: Int -> AttachPolicyResponse

-- | Create a value of <a>AttachPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AttachPolicyResponse'</a>,
--   <a>attachPolicyResponse_httpStatus</a> - The response's http status
--   code.
newAttachPolicyResponse :: Int -> AttachPolicyResponse

-- | <i>See:</i> <a>newListFacetNames</a> smart constructor.
data ListFacetNames
ListFacetNames' :: Maybe Text -> Maybe Natural -> Text -> ListFacetNames

-- | Create a value of <a>ListFacetNames</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetNames'</a>, <a>listFacetNames_nextToken</a>
--   - The pagination token.
--   
--   <a>$sel:maxResults:ListFacetNames'</a>,
--   <a>listFacetNames_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:schemaArn:ListFacetNames'</a>, <a>listFacetNames_schemaArn</a>
--   - The Amazon Resource Name (ARN) to retrieve facet names from.
newListFacetNames :: Text -> ListFacetNames

-- | <i>See:</i> <a>newListFacetNamesResponse</a> smart constructor.
data ListFacetNamesResponse
ListFacetNamesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListFacetNamesResponse

-- | Create a value of <a>ListFacetNamesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetNames'</a>,
--   <a>listFacetNamesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:facetNames:ListFacetNamesResponse'</a>,
--   <a>listFacetNamesResponse_facetNames</a> - The names of facets that
--   exist within the schema.
--   
--   <a>$sel:httpStatus:ListFacetNamesResponse'</a>,
--   <a>listFacetNamesResponse_httpStatus</a> - The response's http status
--   code.
newListFacetNamesResponse :: Int -> ListFacetNamesResponse

-- | <i>See:</i> <a>newListOutgoingTypedLinks</a> smart constructor.
data ListOutgoingTypedLinks
ListOutgoingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe ConsistencyLevel -> Maybe [TypedLinkAttributeRange] -> Text -> ObjectReference -> ListOutgoingTypedLinks

-- | Create a value of <a>ListOutgoingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes defined on the typed link
--   facet, not the order they are supplied to any API calls.
--   
--   <a>$sel:maxResults:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:consistencyLevel:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_consistencyLevel</a> - The consistency level
--   to execute the request at.
--   
--   <a>$sel:filterAttributeRanges:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_filterAttributeRanges</a> - Provides range
--   filters for multiple attributes. When providing ranges to typed link
--   selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:directoryArn:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_directoryArn</a> - The Amazon Resource Name
--   (ARN) of the directory where you want to list the typed links.
--   
--   <a>$sel:objectReference:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinks_objectReference</a> - A reference that
--   identifies the object whose attributes will be listed.
newListOutgoingTypedLinks :: Text -> ObjectReference -> ListOutgoingTypedLinks

-- | <i>See:</i> <a>newListOutgoingTypedLinksResponse</a> smart
--   constructor.
data ListOutgoingTypedLinksResponse
ListOutgoingTypedLinksResponse' :: Maybe Text -> Maybe [TypedLinkSpecifier] -> Int -> ListOutgoingTypedLinksResponse

-- | Create a value of <a>ListOutgoingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOutgoingTypedLinks'</a>,
--   <a>listOutgoingTypedLinksResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:typedLinkSpecifiers:ListOutgoingTypedLinksResponse'</a>,
--   <a>listOutgoingTypedLinksResponse_typedLinkSpecifiers</a> - Returns a
--   typed link specifier as output.
--   
--   <a>$sel:httpStatus:ListOutgoingTypedLinksResponse'</a>,
--   <a>listOutgoingTypedLinksResponse_httpStatus</a> - The response's http
--   status code.
newListOutgoingTypedLinksResponse :: Int -> ListOutgoingTypedLinksResponse

-- | <i>See:</i> <a>newUpdateObjectAttributes</a> smart constructor.
data UpdateObjectAttributes
UpdateObjectAttributes' :: Text -> ObjectReference -> [ObjectAttributeUpdate] -> UpdateObjectAttributes

-- | Create a value of <a>UpdateObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:UpdateObjectAttributes'</a>,
--   <a>updateObjectAttributes_directoryArn</a> - The Amazon Resource Name
--   (ARN) that is associated with the Directory where the object resides.
--   For more information, see arns.
--   
--   <a>$sel:objectReference:UpdateObjectAttributes'</a>,
--   <a>updateObjectAttributes_objectReference</a> - The reference that
--   identifies the object.
--   
--   <a>$sel:attributeUpdates:UpdateObjectAttributes'</a>,
--   <a>updateObjectAttributes_attributeUpdates</a> - The attributes update
--   structure.
newUpdateObjectAttributes :: Text -> ObjectReference -> UpdateObjectAttributes

-- | <i>See:</i> <a>newUpdateObjectAttributesResponse</a> smart
--   constructor.
data UpdateObjectAttributesResponse
UpdateObjectAttributesResponse' :: Maybe Text -> Int -> UpdateObjectAttributesResponse

-- | Create a value of <a>UpdateObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:UpdateObjectAttributesResponse'</a>,
--   <a>updateObjectAttributesResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the updated object.
--   
--   <a>$sel:httpStatus:UpdateObjectAttributesResponse'</a>,
--   <a>updateObjectAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateObjectAttributesResponse :: Int -> UpdateObjectAttributesResponse

-- | <i>See:</i> <a>newListAppliedSchemaArns</a> smart constructor.
data ListAppliedSchemaArns
ListAppliedSchemaArns' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListAppliedSchemaArns

-- | Create a value of <a>ListAppliedSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:schemaArn:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_schemaArn</a> - The response for
--   <tt>ListAppliedSchemaArns</tt> when this parameter is used will list
--   all minor version ARNs for a major version.
--   
--   <a>$sel:maxResults:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:directoryArn:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArns_directoryArn</a> - The ARN of the directory
--   you are listing.
newListAppliedSchemaArns :: Text -> ListAppliedSchemaArns

-- | <i>See:</i> <a>newListAppliedSchemaArnsResponse</a> smart constructor.
data ListAppliedSchemaArnsResponse
ListAppliedSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAppliedSchemaArnsResponse

-- | Create a value of <a>ListAppliedSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListAppliedSchemaArnsResponse'</a>,
--   <a>listAppliedSchemaArnsResponse_schemaArns</a> - The ARNs of schemas
--   that are applied to the directory.
--   
--   <a>$sel:nextToken:ListAppliedSchemaArns'</a>,
--   <a>listAppliedSchemaArnsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListAppliedSchemaArnsResponse'</a>,
--   <a>listAppliedSchemaArnsResponse_httpStatus</a> - The response's http
--   status code.
newListAppliedSchemaArnsResponse :: Int -> ListAppliedSchemaArnsResponse

-- | <i>See:</i> <a>newListManagedSchemaArns</a> smart constructor.
data ListManagedSchemaArns
ListManagedSchemaArns' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListManagedSchemaArns

-- | Create a value of <a>ListManagedSchemaArns</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArns_nextToken</a> - The pagination token.
--   
--   <a>$sel:schemaArn:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArns_schemaArn</a> - The response for
--   ListManagedSchemaArns. When this parameter is used, all minor version
--   ARNs for a major version are listed.
--   
--   <a>$sel:maxResults:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArns_maxResults</a> - The maximum number of
--   results to retrieve.
newListManagedSchemaArns :: ListManagedSchemaArns

-- | <i>See:</i> <a>newListManagedSchemaArnsResponse</a> smart constructor.
data ListManagedSchemaArnsResponse
ListManagedSchemaArnsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListManagedSchemaArnsResponse

-- | Create a value of <a>ListManagedSchemaArnsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArns:ListManagedSchemaArnsResponse'</a>,
--   <a>listManagedSchemaArnsResponse_schemaArns</a> - The ARNs for all AWS
--   managed schemas.
--   
--   <a>$sel:nextToken:ListManagedSchemaArns'</a>,
--   <a>listManagedSchemaArnsResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:httpStatus:ListManagedSchemaArnsResponse'</a>,
--   <a>listManagedSchemaArnsResponse_httpStatus</a> - The response's http
--   status code.
newListManagedSchemaArnsResponse :: Int -> ListManagedSchemaArnsResponse

-- | <i>See:</i> <a>newDeleteSchema</a> smart constructor.
data DeleteSchema
DeleteSchema' :: Text -> DeleteSchema

-- | Create a value of <a>DeleteSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteSchema'</a>, <a>deleteSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
newDeleteSchema :: Text -> DeleteSchema

-- | <i>See:</i> <a>newDeleteSchemaResponse</a> smart constructor.
data DeleteSchemaResponse
DeleteSchemaResponse' :: Maybe Text -> Int -> DeleteSchemaResponse

-- | Create a value of <a>DeleteSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteSchema'</a>,
--   <a>deleteSchemaResponse_schemaArn</a> - The input ARN that is returned
--   as part of the response. For more information, see arns.
--   
--   <a>$sel:httpStatus:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSchemaResponse :: Int -> DeleteSchemaResponse

-- | <i>See:</i> <a>newUpdateSchema</a> smart constructor.
data UpdateSchema
UpdateSchema' :: Text -> Text -> UpdateSchema

-- | Create a value of <a>UpdateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:UpdateSchema'</a>, <a>updateSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the development schema. For more
--   information, see arns.
--   
--   <a>$sel:name:UpdateSchema'</a>, <a>updateSchema_name</a> - The name of
--   the schema.
newUpdateSchema :: Text -> Text -> UpdateSchema

-- | <i>See:</i> <a>newUpdateSchemaResponse</a> smart constructor.
data UpdateSchemaResponse
UpdateSchemaResponse' :: Maybe Text -> Int -> UpdateSchemaResponse

-- | Create a value of <a>UpdateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:UpdateSchema'</a>,
--   <a>updateSchemaResponse_schemaArn</a> - The ARN that is associated
--   with the updated schema. For more information, see arns.
--   
--   <a>$sel:httpStatus:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSchemaResponse :: Int -> UpdateSchemaResponse

-- | <i>See:</i> <a>newRemoveFacetFromObject</a> smart constructor.
data RemoveFacetFromObject
RemoveFacetFromObject' :: Text -> SchemaFacet -> ObjectReference -> RemoveFacetFromObject

-- | Create a value of <a>RemoveFacetFromObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:RemoveFacetFromObject'</a>,
--   <a>removeFacetFromObject_directoryArn</a> - The ARN of the directory
--   in which the object resides.
--   
--   <a>$sel:schemaFacet:RemoveFacetFromObject'</a>,
--   <a>removeFacetFromObject_schemaFacet</a> - The facet to remove. See
--   SchemaFacet for details.
--   
--   <a>$sel:objectReference:RemoveFacetFromObject'</a>,
--   <a>removeFacetFromObject_objectReference</a> - A reference to the
--   object to remove the facet from.
newRemoveFacetFromObject :: Text -> SchemaFacet -> ObjectReference -> RemoveFacetFromObject

-- | <i>See:</i> <a>newRemoveFacetFromObjectResponse</a> smart constructor.
data RemoveFacetFromObjectResponse
RemoveFacetFromObjectResponse' :: Int -> RemoveFacetFromObjectResponse

-- | Create a value of <a>RemoveFacetFromObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveFacetFromObjectResponse'</a>,
--   <a>removeFacetFromObjectResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFacetFromObjectResponse :: Int -> RemoveFacetFromObjectResponse

-- | <i>See:</i> <a>newListFacetAttributes</a> smart constructor.
data ListFacetAttributes
ListFacetAttributes' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListFacetAttributes

-- | Create a value of <a>ListFacetAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetAttributes'</a>,
--   <a>listFacetAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:ListFacetAttributes'</a>,
--   <a>listFacetAttributes_maxResults</a> - The maximum number of results
--   to retrieve.
--   
--   <a>$sel:schemaArn:ListFacetAttributes'</a>,
--   <a>listFacetAttributes_schemaArn</a> - The ARN of the schema where the
--   facet resides.
--   
--   <a>$sel:name:ListFacetAttributes'</a>, <a>listFacetAttributes_name</a>
--   - The name of the facet whose attributes will be retrieved.
newListFacetAttributes :: Text -> Text -> ListFacetAttributes

-- | <i>See:</i> <a>newListFacetAttributesResponse</a> smart constructor.
data ListFacetAttributesResponse
ListFacetAttributesResponse' :: Maybe Text -> Maybe [FacetAttribute] -> Int -> ListFacetAttributesResponse

-- | Create a value of <a>ListFacetAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFacetAttributes'</a>,
--   <a>listFacetAttributesResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:attributes:ListFacetAttributesResponse'</a>,
--   <a>listFacetAttributesResponse_attributes</a> - The attributes
--   attached to the facet.
--   
--   <a>$sel:httpStatus:ListFacetAttributesResponse'</a>,
--   <a>listFacetAttributesResponse_httpStatus</a> - The response's http
--   status code.
newListFacetAttributesResponse :: Int -> ListFacetAttributesResponse

-- | <i>See:</i> <a>newGetAppliedSchemaVersion</a> smart constructor.
data GetAppliedSchemaVersion
GetAppliedSchemaVersion' :: Text -> GetAppliedSchemaVersion

-- | Create a value of <a>GetAppliedSchemaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetAppliedSchemaVersion'</a>,
--   <a>getAppliedSchemaVersion_schemaArn</a> - The ARN of the applied
--   schema.
newGetAppliedSchemaVersion :: Text -> GetAppliedSchemaVersion

-- | <i>See:</i> <a>newGetAppliedSchemaVersionResponse</a> smart
--   constructor.
data GetAppliedSchemaVersionResponse
GetAppliedSchemaVersionResponse' :: Maybe Text -> Int -> GetAppliedSchemaVersionResponse

-- | Create a value of <a>GetAppliedSchemaVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appliedSchemaArn:GetAppliedSchemaVersionResponse'</a>,
--   <a>getAppliedSchemaVersionResponse_appliedSchemaArn</a> - Current
--   applied schema ARN, including the minor version in use if one was
--   provided.
--   
--   <a>$sel:httpStatus:GetAppliedSchemaVersionResponse'</a>,
--   <a>getAppliedSchemaVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetAppliedSchemaVersionResponse :: Int -> GetAppliedSchemaVersionResponse

-- | <i>See:</i> <a>newEnableDirectory</a> smart constructor.
data EnableDirectory
EnableDirectory' :: Text -> EnableDirectory

-- | Create a value of <a>EnableDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:EnableDirectory'</a>,
--   <a>enableDirectory_directoryArn</a> - The ARN of the directory to
--   enable.
newEnableDirectory :: Text -> EnableDirectory

-- | <i>See:</i> <a>newEnableDirectoryResponse</a> smart constructor.
data EnableDirectoryResponse
EnableDirectoryResponse' :: Int -> Text -> EnableDirectoryResponse

-- | Create a value of <a>EnableDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EnableDirectoryResponse'</a>,
--   <a>enableDirectoryResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:directoryArn:EnableDirectory'</a>,
--   <a>enableDirectoryResponse_directoryArn</a> - The ARN of the enabled
--   directory.
newEnableDirectoryResponse :: Int -> Text -> EnableDirectoryResponse

-- | <i>See:</i> <a>newApplySchema</a> smart constructor.
data ApplySchema
ApplySchema' :: Text -> Text -> ApplySchema

-- | Create a value of <a>ApplySchema</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:publishedSchemaArn:ApplySchema'</a>,
--   <a>applySchema_publishedSchemaArn</a> - Published schema Amazon
--   Resource Name (ARN) that needs to be copied. For more information, see
--   arns.
--   
--   <a>$sel:directoryArn:ApplySchema'</a>, <a>applySchema_directoryArn</a>
--   - The Amazon Resource Name (ARN) that is associated with the Directory
--   into which the schema is copied. For more information, see arns.
newApplySchema :: Text -> Text -> ApplySchema

-- | <i>See:</i> <a>newApplySchemaResponse</a> smart constructor.
data ApplySchemaResponse
ApplySchemaResponse' :: Maybe Text -> Maybe Text -> Int -> ApplySchemaResponse

-- | Create a value of <a>ApplySchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:ApplySchema'</a>,
--   <a>applySchemaResponse_directoryArn</a> - The ARN that is associated
--   with the Directory. For more information, see arns.
--   
--   <a>$sel:appliedSchemaArn:ApplySchemaResponse'</a>,
--   <a>applySchemaResponse_appliedSchemaArn</a> - The applied schema ARN
--   that is associated with the copied schema in the Directory. You can
--   use this ARN to describe the schema information applied on this
--   directory. For more information, see arns.
--   
--   <a>$sel:httpStatus:ApplySchemaResponse'</a>,
--   <a>applySchemaResponse_httpStatus</a> - The response's http status
--   code.
newApplySchemaResponse :: Int -> ApplySchemaResponse

-- | <i>See:</i> <a>newDisableDirectory</a> smart constructor.
data DisableDirectory
DisableDirectory' :: Text -> DisableDirectory

-- | Create a value of <a>DisableDirectory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DisableDirectory'</a>,
--   <a>disableDirectory_directoryArn</a> - The ARN of the directory to
--   disable.
newDisableDirectory :: Text -> DisableDirectory

-- | <i>See:</i> <a>newDisableDirectoryResponse</a> smart constructor.
data DisableDirectoryResponse
DisableDirectoryResponse' :: Int -> Text -> DisableDirectoryResponse

-- | Create a value of <a>DisableDirectoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisableDirectoryResponse'</a>,
--   <a>disableDirectoryResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:directoryArn:DisableDirectory'</a>,
--   <a>disableDirectoryResponse_directoryArn</a> - The ARN of the
--   directory that has been disabled.
newDisableDirectoryResponse :: Int -> Text -> DisableDirectoryResponse

-- | <i>See:</i> <a>newCreateTypedLinkFacet</a> smart constructor.
data CreateTypedLinkFacet
CreateTypedLinkFacet' :: Text -> TypedLinkFacet -> CreateTypedLinkFacet

-- | Create a value of <a>CreateTypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:CreateTypedLinkFacet'</a>,
--   <a>createTypedLinkFacet_schemaArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the schema. For more information, see arns.
--   
--   <a>$sel:facet:CreateTypedLinkFacet'</a>,
--   <a>createTypedLinkFacet_facet</a> - Facet structure that is associated
--   with the typed link facet.
newCreateTypedLinkFacet :: Text -> TypedLinkFacet -> CreateTypedLinkFacet

-- | <i>See:</i> <a>newCreateTypedLinkFacetResponse</a> smart constructor.
data CreateTypedLinkFacetResponse
CreateTypedLinkFacetResponse' :: Int -> CreateTypedLinkFacetResponse

-- | Create a value of <a>CreateTypedLinkFacetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTypedLinkFacetResponse'</a>,
--   <a>createTypedLinkFacetResponse_httpStatus</a> - The response's http
--   status code.
newCreateTypedLinkFacetResponse :: Int -> CreateTypedLinkFacetResponse

-- | <i>See:</i> <a>newGetSchemaAsJson</a> smart constructor.
data GetSchemaAsJson
GetSchemaAsJson' :: Text -> GetSchemaAsJson

-- | Create a value of <a>GetSchemaAsJson</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:GetSchemaAsJson'</a>,
--   <a>getSchemaAsJson_schemaArn</a> - The ARN of the schema to retrieve.
newGetSchemaAsJson :: Text -> GetSchemaAsJson

-- | <i>See:</i> <a>newGetSchemaAsJsonResponse</a> smart constructor.
data GetSchemaAsJsonResponse
GetSchemaAsJsonResponse' :: Maybe Text -> Maybe Text -> Int -> GetSchemaAsJsonResponse

-- | Create a value of <a>GetSchemaAsJsonResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetSchemaAsJsonResponse'</a>,
--   <a>getSchemaAsJsonResponse_name</a> - The name of the retrieved
--   schema.
--   
--   <a>$sel:document:GetSchemaAsJsonResponse'</a>,
--   <a>getSchemaAsJsonResponse_document</a> - The JSON representation of
--   the schema document.
--   
--   <a>$sel:httpStatus:GetSchemaAsJsonResponse'</a>,
--   <a>getSchemaAsJsonResponse_httpStatus</a> - The response's http status
--   code.
newGetSchemaAsJsonResponse :: Int -> GetSchemaAsJsonResponse

-- | <i>See:</i> <a>newDetachObject</a> smart constructor.
data DetachObject
DetachObject' :: Text -> ObjectReference -> Text -> DetachObject

-- | Create a value of <a>DetachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:DetachObject'</a>,
--   <a>detachObject_directoryArn</a> - The Amazon Resource Name (ARN) that
--   is associated with the Directory where objects reside. For more
--   information, see arns.
--   
--   <a>$sel:parentReference:DetachObject'</a>,
--   <a>detachObject_parentReference</a> - The parent reference from which
--   the object with the specified link name is detached.
--   
--   <a>$sel:linkName:DetachObject'</a>, <a>detachObject_linkName</a> - The
--   link name associated with the object that needs to be detached.
newDetachObject :: Text -> ObjectReference -> Text -> DetachObject

-- | <i>See:</i> <a>newDetachObjectResponse</a> smart constructor.
data DetachObjectResponse
DetachObjectResponse' :: Maybe Text -> Int -> DetachObjectResponse

-- | Create a value of <a>DetachObjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:DetachObjectResponse'</a>,
--   <a>detachObjectResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> that was detached from the object.
--   
--   <a>$sel:httpStatus:DetachObjectResponse'</a>,
--   <a>detachObjectResponse_httpStatus</a> - The response's http status
--   code.
newDetachObjectResponse :: Int -> DetachObjectResponse

-- | <i>See:</i> <a>newAddFacetToObject</a> smart constructor.
data AddFacetToObject
AddFacetToObject' :: Maybe [AttributeKeyAndValue] -> Text -> SchemaFacet -> ObjectReference -> AddFacetToObject

-- | Create a value of <a>AddFacetToObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeList:AddFacetToObject'</a>,
--   <a>addFacetToObject_objectAttributeList</a> - Attributes on the facet
--   that you are adding to the object.
--   
--   <a>$sel:directoryArn:AddFacetToObject'</a>,
--   <a>addFacetToObject_directoryArn</a> - The Amazon Resource Name (ARN)
--   that is associated with the Directory where the object resides. For
--   more information, see arns.
--   
--   <a>$sel:schemaFacet:AddFacetToObject'</a>,
--   <a>addFacetToObject_schemaFacet</a> - Identifiers for the facet that
--   you are adding to the object. See SchemaFacet for details.
--   
--   <a>$sel:objectReference:AddFacetToObject'</a>,
--   <a>addFacetToObject_objectReference</a> - A reference to the object
--   you are adding the specified facet to.
newAddFacetToObject :: Text -> SchemaFacet -> ObjectReference -> AddFacetToObject

-- | <i>See:</i> <a>newAddFacetToObjectResponse</a> smart constructor.
data AddFacetToObjectResponse
AddFacetToObjectResponse' :: Int -> AddFacetToObjectResponse

-- | Create a value of <a>AddFacetToObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddFacetToObjectResponse'</a>,
--   <a>addFacetToObjectResponse_httpStatus</a> - The response's http
--   status code.
newAddFacetToObjectResponse :: Int -> AddFacetToObjectResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The pagination token. This is
--   for future use. Currently pagination is not supported for tagging.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The <tt>MaxResults</tt>
--   parameter sets the maximum number of results returned in a single
--   page. This is for future use and is not supported currently.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource. Tagging is only supported for directories.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. This value is null when there are
--   no more results to return.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key value
--   pairs that are associated with the response.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse
newtype BatchReadExceptionType
BatchReadExceptionType' :: Text -> BatchReadExceptionType
[fromBatchReadExceptionType] :: BatchReadExceptionType -> Text
pattern BatchReadExceptionType_AccessDeniedException :: BatchReadExceptionType
pattern BatchReadExceptionType_CannotListParentOfRootException :: BatchReadExceptionType
pattern BatchReadExceptionType_DirectoryNotEnabledException :: BatchReadExceptionType
pattern BatchReadExceptionType_FacetValidationException :: BatchReadExceptionType
pattern BatchReadExceptionType_InternalServiceException :: BatchReadExceptionType
pattern BatchReadExceptionType_InvalidArnException :: BatchReadExceptionType
pattern BatchReadExceptionType_InvalidNextTokenException :: BatchReadExceptionType
pattern BatchReadExceptionType_LimitExceededException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotIndexException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotNodeException :: BatchReadExceptionType
pattern BatchReadExceptionType_NotPolicyException :: BatchReadExceptionType
pattern BatchReadExceptionType_ResourceNotFoundException :: BatchReadExceptionType
pattern BatchReadExceptionType_ValidationException :: BatchReadExceptionType
newtype ConsistencyLevel
ConsistencyLevel' :: Text -> ConsistencyLevel
[fromConsistencyLevel] :: ConsistencyLevel -> Text
pattern ConsistencyLevel_EVENTUAL :: ConsistencyLevel
pattern ConsistencyLevel_SERIALIZABLE :: ConsistencyLevel
newtype DirectoryState
DirectoryState' :: Text -> DirectoryState
[fromDirectoryState] :: DirectoryState -> Text
pattern DirectoryState_DELETED :: DirectoryState
pattern DirectoryState_DISABLED :: DirectoryState
pattern DirectoryState_ENABLED :: DirectoryState
newtype FacetAttributeType
FacetAttributeType' :: Text -> FacetAttributeType
[fromFacetAttributeType] :: FacetAttributeType -> Text
pattern FacetAttributeType_BINARY :: FacetAttributeType
pattern FacetAttributeType_BOOLEAN :: FacetAttributeType
pattern FacetAttributeType_DATETIME :: FacetAttributeType
pattern FacetAttributeType_NUMBER :: FacetAttributeType
pattern FacetAttributeType_STRING :: FacetAttributeType
pattern FacetAttributeType_VARIANT :: FacetAttributeType
newtype FacetStyle
FacetStyle' :: Text -> FacetStyle
[fromFacetStyle] :: FacetStyle -> Text
pattern FacetStyle_DYNAMIC :: FacetStyle
pattern FacetStyle_STATIC :: FacetStyle
newtype ObjectType
ObjectType' :: Text -> ObjectType
[fromObjectType] :: ObjectType -> Text
pattern ObjectType_INDEX :: ObjectType
pattern ObjectType_LEAF_NODE :: ObjectType
pattern ObjectType_NODE :: ObjectType
pattern ObjectType_POLICY :: ObjectType
newtype RangeMode
RangeMode' :: Text -> RangeMode
[fromRangeMode] :: RangeMode -> Text
pattern RangeMode_EXCLUSIVE :: RangeMode
pattern RangeMode_FIRST :: RangeMode
pattern RangeMode_INCLUSIVE :: RangeMode
pattern RangeMode_LAST :: RangeMode
pattern RangeMode_LAST_BEFORE_MISSING_VALUES :: RangeMode
newtype RequiredAttributeBehavior
RequiredAttributeBehavior' :: Text -> RequiredAttributeBehavior
[fromRequiredAttributeBehavior] :: RequiredAttributeBehavior -> Text
pattern RequiredAttributeBehavior_NOT_REQUIRED :: RequiredAttributeBehavior
pattern RequiredAttributeBehavior_REQUIRED_ALWAYS :: RequiredAttributeBehavior
newtype RuleType
RuleType' :: Text -> RuleType
[fromRuleType] :: RuleType -> Text
pattern RuleType_BINARY_LENGTH :: RuleType
pattern RuleType_NUMBER_COMPARISON :: RuleType
pattern RuleType_STRING_FROM_SET :: RuleType
pattern RuleType_STRING_LENGTH :: RuleType
newtype UpdateActionType
UpdateActionType' :: Text -> UpdateActionType
[fromUpdateActionType] :: UpdateActionType -> Text
pattern UpdateActionType_CREATE_OR_UPDATE :: UpdateActionType
pattern UpdateActionType_DELETE :: UpdateActionType

-- | A unique identifier for an attribute.
--   
--   <i>See:</i> <a>newAttributeKey</a> smart constructor.
data AttributeKey
AttributeKey' :: Text -> Text -> Text -> AttributeKey

-- | Create a value of <a>AttributeKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:AttributeKey'</a>, <a>attributeKey_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema that contains the facet
--   and attribute.
--   
--   <a>$sel:facetName:AttributeKey'</a>, <a>attributeKey_facetName</a> -
--   The name of the facet that the attribute exists within.
--   
--   <a>$sel:name:AttributeKey'</a>, <a>attributeKey_name</a> - The name of
--   the attribute.
newAttributeKey :: Text -> Text -> Text -> AttributeKey

-- | The combination of an attribute key and an attribute value.
--   
--   <i>See:</i> <a>newAttributeKeyAndValue</a> smart constructor.
data AttributeKeyAndValue
AttributeKeyAndValue' :: AttributeKey -> TypedAttributeValue -> AttributeKeyAndValue

-- | Create a value of <a>AttributeKeyAndValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AttributeKeyAndValue'</a>, <a>attributeKeyAndValue_key</a>
--   - The key of the attribute.
--   
--   <a>$sel:value:AttributeKeyAndValue'</a>,
--   <a>attributeKeyAndValue_value</a> - The value of the attribute.
newAttributeKeyAndValue :: AttributeKey -> TypedAttributeValue -> AttributeKeyAndValue

-- | Identifies the attribute name and value for a typed link.
--   
--   <i>See:</i> <a>newAttributeNameAndValue</a> smart constructor.
data AttributeNameAndValue
AttributeNameAndValue' :: Text -> TypedAttributeValue -> AttributeNameAndValue

-- | Create a value of <a>AttributeNameAndValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:AttributeNameAndValue'</a>,
--   <a>attributeNameAndValue_attributeName</a> - The attribute name of the
--   typed link.
--   
--   <a>$sel:value:AttributeNameAndValue'</a>,
--   <a>attributeNameAndValue_value</a> - The value for the typed link.
newAttributeNameAndValue :: Text -> TypedAttributeValue -> AttributeNameAndValue

-- | Represents the output of a batch add facet to object operation.
--   
--   <i>See:</i> <a>newBatchAddFacetToObject</a> smart constructor.
data BatchAddFacetToObject
BatchAddFacetToObject' :: SchemaFacet -> [AttributeKeyAndValue] -> ObjectReference -> BatchAddFacetToObject

-- | Create a value of <a>BatchAddFacetToObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacet:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_schemaFacet</a> - Represents the facet being
--   added to the object.
--   
--   <a>$sel:objectAttributeList:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_objectAttributeList</a> - The attributes to
--   set on the object.
--   
--   <a>$sel:objectReference:BatchAddFacetToObject'</a>,
--   <a>batchAddFacetToObject_objectReference</a> - A reference to the
--   object being mutated.
newBatchAddFacetToObject :: SchemaFacet -> ObjectReference -> BatchAddFacetToObject

-- | The result of a batch add facet to object operation.
--   
--   <i>See:</i> <a>newBatchAddFacetToObjectResponse</a> smart constructor.
data BatchAddFacetToObjectResponse
BatchAddFacetToObjectResponse' :: BatchAddFacetToObjectResponse

-- | Create a value of <a>BatchAddFacetToObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchAddFacetToObjectResponse :: BatchAddFacetToObjectResponse

-- | Represents the output of an AttachObject operation.
--   
--   <i>See:</i> <a>newBatchAttachObject</a> smart constructor.
data BatchAttachObject
BatchAttachObject' :: ObjectReference -> ObjectReference -> Text -> BatchAttachObject

-- | Create a value of <a>BatchAttachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentReference:BatchAttachObject'</a>,
--   <a>batchAttachObject_parentReference</a> - The parent object
--   reference.
--   
--   <a>$sel:childReference:BatchAttachObject'</a>,
--   <a>batchAttachObject_childReference</a> - The child object reference
--   that is to be attached to the object.
--   
--   <a>$sel:linkName:BatchAttachObject'</a>,
--   <a>batchAttachObject_linkName</a> - The name of the link.
newBatchAttachObject :: ObjectReference -> ObjectReference -> Text -> BatchAttachObject

-- | Represents the output batch AttachObject response operation.
--   
--   <i>See:</i> <a>newBatchAttachObjectResponse</a> smart constructor.
data BatchAttachObjectResponse
BatchAttachObjectResponse' :: Maybe Text -> BatchAttachObjectResponse

-- | Create a value of <a>BatchAttachObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:BatchAttachObjectResponse'</a>,
--   <a>batchAttachObjectResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that has been attached.
newBatchAttachObjectResponse :: BatchAttachObjectResponse

-- | Attaches a policy object to a regular object inside a BatchRead
--   operation. For more information, see AttachPolicy and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachPolicy</a> smart constructor.
data BatchAttachPolicy
BatchAttachPolicy' :: ObjectReference -> ObjectReference -> BatchAttachPolicy

-- | Create a value of <a>BatchAttachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyReference:BatchAttachPolicy'</a>,
--   <a>batchAttachPolicy_policyReference</a> - The reference that is
--   associated with the policy object.
--   
--   <a>$sel:objectReference:BatchAttachPolicy'</a>,
--   <a>batchAttachPolicy_objectReference</a> - The reference that
--   identifies the object to which the policy will be attached.
newBatchAttachPolicy :: ObjectReference -> ObjectReference -> BatchAttachPolicy

-- | Represents the output of an AttachPolicy response operation.
--   
--   <i>See:</i> <a>newBatchAttachPolicyResponse</a> smart constructor.
data BatchAttachPolicyResponse
BatchAttachPolicyResponse' :: BatchAttachPolicyResponse

-- | Create a value of <a>BatchAttachPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchAttachPolicyResponse :: BatchAttachPolicyResponse

-- | Attaches the specified object to the specified index inside a
--   BatchRead operation. For more information, see AttachToIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachToIndex</a> smart constructor.
data BatchAttachToIndex
BatchAttachToIndex' :: ObjectReference -> ObjectReference -> BatchAttachToIndex

-- | Create a value of <a>BatchAttachToIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexReference:BatchAttachToIndex'</a>,
--   <a>batchAttachToIndex_indexReference</a> - A reference to the index
--   that you are attaching the object to.
--   
--   <a>$sel:targetReference:BatchAttachToIndex'</a>,
--   <a>batchAttachToIndex_targetReference</a> - A reference to the object
--   that you are attaching to the index.
newBatchAttachToIndex :: ObjectReference -> ObjectReference -> BatchAttachToIndex

-- | Represents the output of a AttachToIndex response operation.
--   
--   <i>See:</i> <a>newBatchAttachToIndexResponse</a> smart constructor.
data BatchAttachToIndexResponse
BatchAttachToIndexResponse' :: Maybe Text -> BatchAttachToIndexResponse

-- | Create a value of <a>BatchAttachToIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachedObjectIdentifier:BatchAttachToIndexResponse'</a>,
--   <a>batchAttachToIndexResponse_attachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was attached to the
--   index.
newBatchAttachToIndexResponse :: BatchAttachToIndexResponse

-- | Attaches a typed link to a specified source and target object inside a
--   BatchRead operation. For more information, see AttachTypedLink and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchAttachTypedLink</a> smart constructor.
data BatchAttachTypedLink
BatchAttachTypedLink' :: ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> [AttributeNameAndValue] -> BatchAttachTypedLink

-- | Create a value of <a>BatchAttachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceObjectReference:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_sourceObjectReference</a> - Identifies the
--   source object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_targetObjectReference</a> - Identifies the
--   target object that the typed link will attach to.
--   
--   <a>$sel:typedLinkFacet:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:attributes:BatchAttachTypedLink'</a>,
--   <a>batchAttachTypedLink_attributes</a> - A set of attributes that are
--   associated with the typed link.
newBatchAttachTypedLink :: ObjectReference -> ObjectReference -> TypedLinkSchemaAndFacetName -> BatchAttachTypedLink

-- | Represents the output of a AttachTypedLink response operation.
--   
--   <i>See:</i> <a>newBatchAttachTypedLinkResponse</a> smart constructor.
data BatchAttachTypedLinkResponse
BatchAttachTypedLinkResponse' :: Maybe TypedLinkSpecifier -> BatchAttachTypedLinkResponse

-- | Create a value of <a>BatchAttachTypedLinkResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchAttachTypedLinkResponse'</a>,
--   <a>batchAttachTypedLinkResponse_typedLinkSpecifier</a> - Returns a
--   typed link specifier as output.
newBatchAttachTypedLinkResponse :: BatchAttachTypedLinkResponse

-- | Creates an index object inside of a BatchRead operation. For more
--   information, see CreateIndex and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchCreateIndex</a> smart constructor.
data BatchCreateIndex
BatchCreateIndex' :: Maybe Text -> Maybe ObjectReference -> Maybe Text -> [AttributeKey] -> Bool -> BatchCreateIndex

-- | Create a value of <a>BatchCreateIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_linkName</a> - The name of the link between the
--   parent object and the index object.
--   
--   <a>$sel:parentReference:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_parentReference</a> - A reference to the parent
--   object that contains the index object.
--   
--   <a>$sel:batchReferenceName:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_batchReferenceName</a> - The batch reference name.
--   See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:orderedIndexedAttributeList:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_orderedIndexedAttributeList</a> - Specifies the
--   attributes that should be indexed on. Currently only a single
--   attribute is supported.
--   
--   <a>$sel:isUnique:BatchCreateIndex'</a>,
--   <a>batchCreateIndex_isUnique</a> - Indicates whether the attribute
--   that is being indexed has unique values or not.
newBatchCreateIndex :: Bool -> BatchCreateIndex

-- | Represents the output of a CreateIndex response operation.
--   
--   <i>See:</i> <a>newBatchCreateIndexResponse</a> smart constructor.
data BatchCreateIndexResponse
BatchCreateIndexResponse' :: Maybe Text -> BatchCreateIndexResponse

-- | Create a value of <a>BatchCreateIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchCreateIndexResponse'</a>,
--   <a>batchCreateIndexResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the index created by this operation.
newBatchCreateIndexResponse :: BatchCreateIndexResponse

-- | Represents the output of a CreateObject operation.
--   
--   <i>See:</i> <a>newBatchCreateObject</a> smart constructor.
data BatchCreateObject
BatchCreateObject' :: Maybe Text -> Maybe ObjectReference -> Maybe Text -> [SchemaFacet] -> [AttributeKeyAndValue] -> BatchCreateObject

-- | Create a value of <a>BatchCreateObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:BatchCreateObject'</a>,
--   <a>batchCreateObject_linkName</a> - The name of the link.
--   
--   <a>$sel:parentReference:BatchCreateObject'</a>,
--   <a>batchCreateObject_parentReference</a> - If specified, the parent
--   reference to which this object will be attached.
--   
--   <a>$sel:batchReferenceName:BatchCreateObject'</a>,
--   <a>batchCreateObject_batchReferenceName</a> - The batch reference
--   name. See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:schemaFacet:BatchCreateObject'</a>,
--   <a>batchCreateObject_schemaFacet</a> - A list of <tt>FacetArns</tt>
--   that will be associated with the object. For more information, see
--   arns.
--   
--   <a>$sel:objectAttributeList:BatchCreateObject'</a>,
--   <a>batchCreateObject_objectAttributeList</a> - An attribute map, which
--   contains an attribute ARN as the key and attribute value as the map
--   value.
newBatchCreateObject :: BatchCreateObject

-- | Represents the output of a CreateObject response operation.
--   
--   <i>See:</i> <a>newBatchCreateObjectResponse</a> smart constructor.
data BatchCreateObjectResponse
BatchCreateObjectResponse' :: Maybe Text -> BatchCreateObjectResponse

-- | Create a value of <a>BatchCreateObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchCreateObjectResponse'</a>,
--   <a>batchCreateObjectResponse_objectIdentifier</a> - The ID that is
--   associated with the object.
newBatchCreateObjectResponse :: BatchCreateObjectResponse

-- | Represents the output of a DeleteObject operation.
--   
--   <i>See:</i> <a>newBatchDeleteObject</a> smart constructor.
data BatchDeleteObject
BatchDeleteObject' :: ObjectReference -> BatchDeleteObject

-- | Create a value of <a>BatchDeleteObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchDeleteObject'</a>,
--   <a>batchDeleteObject_objectReference</a> - The reference that
--   identifies the object.
newBatchDeleteObject :: ObjectReference -> BatchDeleteObject

-- | Represents the output of a DeleteObject response operation.
--   
--   <i>See:</i> <a>newBatchDeleteObjectResponse</a> smart constructor.
data BatchDeleteObjectResponse
BatchDeleteObjectResponse' :: BatchDeleteObjectResponse

-- | Create a value of <a>BatchDeleteObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDeleteObjectResponse :: BatchDeleteObjectResponse

-- | Detaches the specified object from the specified index inside a
--   BatchRead operation. For more information, see DetachFromIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachFromIndex</a> smart constructor.
data BatchDetachFromIndex
BatchDetachFromIndex' :: ObjectReference -> ObjectReference -> BatchDetachFromIndex

-- | Create a value of <a>BatchDetachFromIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:indexReference:BatchDetachFromIndex'</a>,
--   <a>batchDetachFromIndex_indexReference</a> - A reference to the index
--   object.
--   
--   <a>$sel:targetReference:BatchDetachFromIndex'</a>,
--   <a>batchDetachFromIndex_targetReference</a> - A reference to the
--   object being detached from the index.
newBatchDetachFromIndex :: ObjectReference -> ObjectReference -> BatchDetachFromIndex

-- | Represents the output of a DetachFromIndex response operation.
--   
--   <i>See:</i> <a>newBatchDetachFromIndexResponse</a> smart constructor.
data BatchDetachFromIndexResponse
BatchDetachFromIndexResponse' :: Maybe Text -> BatchDetachFromIndexResponse

-- | Create a value of <a>BatchDetachFromIndexResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:BatchDetachFromIndexResponse'</a>,
--   <a>batchDetachFromIndexResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the object that was detached from the
--   index.
newBatchDetachFromIndexResponse :: BatchDetachFromIndexResponse

-- | Represents the output of a DetachObject operation.
--   
--   <i>See:</i> <a>newBatchDetachObject</a> smart constructor.
data BatchDetachObject
BatchDetachObject' :: Maybe Text -> ObjectReference -> Text -> BatchDetachObject

-- | Create a value of <a>BatchDetachObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchReferenceName:BatchDetachObject'</a>,
--   <a>batchDetachObject_batchReferenceName</a> - The batch reference
--   name. See <a>Transaction Support</a> for more information.
--   
--   <a>$sel:parentReference:BatchDetachObject'</a>,
--   <a>batchDetachObject_parentReference</a> - Parent reference from which
--   the object with the specified link name is detached.
--   
--   <a>$sel:linkName:BatchDetachObject'</a>,
--   <a>batchDetachObject_linkName</a> - The name of the link.
newBatchDetachObject :: ObjectReference -> Text -> BatchDetachObject

-- | Represents the output of a DetachObject response operation.
--   
--   <i>See:</i> <a>newBatchDetachObjectResponse</a> smart constructor.
data BatchDetachObjectResponse
BatchDetachObjectResponse' :: Maybe Text -> BatchDetachObjectResponse

-- | Create a value of <a>BatchDetachObjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detachedObjectIdentifier:BatchDetachObjectResponse'</a>,
--   <a>batchDetachObjectResponse_detachedObjectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the detached object.
newBatchDetachObjectResponse :: BatchDetachObjectResponse

-- | Detaches the specified policy from the specified directory inside a
--   BatchWrite operation. For more information, see DetachPolicy and
--   BatchWriteRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachPolicy</a> smart constructor.
data BatchDetachPolicy
BatchDetachPolicy' :: ObjectReference -> ObjectReference -> BatchDetachPolicy

-- | Create a value of <a>BatchDetachPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyReference:BatchDetachPolicy'</a>,
--   <a>batchDetachPolicy_policyReference</a> - Reference that identifies
--   the policy object.
--   
--   <a>$sel:objectReference:BatchDetachPolicy'</a>,
--   <a>batchDetachPolicy_objectReference</a> - Reference that identifies
--   the object whose policy object will be detached.
newBatchDetachPolicy :: ObjectReference -> ObjectReference -> BatchDetachPolicy

-- | Represents the output of a DetachPolicy response operation.
--   
--   <i>See:</i> <a>newBatchDetachPolicyResponse</a> smart constructor.
data BatchDetachPolicyResponse
BatchDetachPolicyResponse' :: BatchDetachPolicyResponse

-- | Create a value of <a>BatchDetachPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDetachPolicyResponse :: BatchDetachPolicyResponse

-- | Detaches a typed link from a specified source and target object inside
--   a BatchRead operation. For more information, see DetachTypedLink and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchDetachTypedLink</a> smart constructor.
data BatchDetachTypedLink
BatchDetachTypedLink' :: TypedLinkSpecifier -> BatchDetachTypedLink

-- | Create a value of <a>BatchDetachTypedLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchDetachTypedLink'</a>,
--   <a>batchDetachTypedLink_typedLinkSpecifier</a> - Used to accept a
--   typed link specifier as input.
newBatchDetachTypedLink :: TypedLinkSpecifier -> BatchDetachTypedLink

-- | Represents the output of a DetachTypedLink response operation.
--   
--   <i>See:</i> <a>newBatchDetachTypedLinkResponse</a> smart constructor.
data BatchDetachTypedLinkResponse
BatchDetachTypedLinkResponse' :: BatchDetachTypedLinkResponse

-- | Create a value of <a>BatchDetachTypedLinkResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDetachTypedLinkResponse :: BatchDetachTypedLinkResponse

-- | Retrieves attributes that are associated with a typed link inside a
--   BatchRead operation. For more information, see GetLinkAttributes and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetLinkAttributes</a> smart constructor.
data BatchGetLinkAttributes
BatchGetLinkAttributes' :: TypedLinkSpecifier -> [Text] -> BatchGetLinkAttributes

-- | Create a value of <a>BatchGetLinkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchGetLinkAttributes'</a>,
--   <a>batchGetLinkAttributes_typedLinkSpecifier</a> - Allows a typed link
--   specifier to be accepted as input.
--   
--   <a>$sel:attributeNames:BatchGetLinkAttributes'</a>,
--   <a>batchGetLinkAttributes_attributeNames</a> - A list of attribute
--   names whose values will be retrieved.
newBatchGetLinkAttributes :: TypedLinkSpecifier -> BatchGetLinkAttributes

-- | Represents the output of a GetLinkAttributes response operation.
--   
--   <i>See:</i> <a>newBatchGetLinkAttributesResponse</a> smart
--   constructor.
data BatchGetLinkAttributesResponse
BatchGetLinkAttributesResponse' :: Maybe [AttributeKeyAndValue] -> BatchGetLinkAttributesResponse

-- | Create a value of <a>BatchGetLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:BatchGetLinkAttributesResponse'</a>,
--   <a>batchGetLinkAttributesResponse_attributes</a> - The attributes that
--   are associated with the typed link.
newBatchGetLinkAttributesResponse :: BatchGetLinkAttributesResponse

-- | Retrieves attributes within a facet that are associated with an object
--   inside an BatchRead operation. For more information, see
--   GetObjectAttributes and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetObjectAttributes</a> smart constructor.
data BatchGetObjectAttributes
BatchGetObjectAttributes' :: ObjectReference -> SchemaFacet -> [Text] -> BatchGetObjectAttributes

-- | Create a value of <a>BatchGetObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_objectReference</a> - Reference that
--   identifies the object whose attributes will be retrieved.
--   
--   <a>$sel:schemaFacet:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_schemaFacet</a> - Identifier for the facet
--   whose attributes will be retrieved. See SchemaFacet for details.
--   
--   <a>$sel:attributeNames:BatchGetObjectAttributes'</a>,
--   <a>batchGetObjectAttributes_attributeNames</a> - List of attribute
--   names whose values will be retrieved.
newBatchGetObjectAttributes :: ObjectReference -> SchemaFacet -> BatchGetObjectAttributes

-- | Represents the output of a GetObjectAttributes response operation.
--   
--   <i>See:</i> <a>newBatchGetObjectAttributesResponse</a> smart
--   constructor.
data BatchGetObjectAttributesResponse
BatchGetObjectAttributesResponse' :: Maybe [AttributeKeyAndValue] -> BatchGetObjectAttributesResponse

-- | Create a value of <a>BatchGetObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:BatchGetObjectAttributesResponse'</a>,
--   <a>batchGetObjectAttributesResponse_attributes</a> - The attribute
--   values that are associated with an object.
newBatchGetObjectAttributesResponse :: BatchGetObjectAttributesResponse

-- | Retrieves metadata about an object inside a BatchRead operation. For
--   more information, see GetObjectInformation and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchGetObjectInformation</a> smart constructor.
data BatchGetObjectInformation
BatchGetObjectInformation' :: ObjectReference -> BatchGetObjectInformation

-- | Create a value of <a>BatchGetObjectInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchGetObjectInformation'</a>,
--   <a>batchGetObjectInformation_objectReference</a> - A reference to the
--   object.
newBatchGetObjectInformation :: ObjectReference -> BatchGetObjectInformation

-- | Represents the output of a GetObjectInformation response operation.
--   
--   <i>See:</i> <a>newBatchGetObjectInformationResponse</a> smart
--   constructor.
data BatchGetObjectInformationResponse
BatchGetObjectInformationResponse' :: Maybe [SchemaFacet] -> Maybe Text -> BatchGetObjectInformationResponse

-- | Create a value of <a>BatchGetObjectInformationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacets:BatchGetObjectInformationResponse'</a>,
--   <a>batchGetObjectInformationResponse_schemaFacets</a> - The facets
--   attached to the specified object.
--   
--   <a>$sel:objectIdentifier:BatchGetObjectInformationResponse'</a>,
--   <a>batchGetObjectInformationResponse_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> of the specified object.
newBatchGetObjectInformationResponse :: BatchGetObjectInformationResponse

-- | Lists indices attached to an object inside a BatchRead operation. For
--   more information, see ListAttachedIndices and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListAttachedIndices</a> smart constructor.
data BatchListAttachedIndices
BatchListAttachedIndices' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListAttachedIndices

-- | Create a value of <a>BatchListAttachedIndices</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:targetReference:BatchListAttachedIndices'</a>,
--   <a>batchListAttachedIndices_targetReference</a> - A reference to the
--   object that has indices attached.
newBatchListAttachedIndices :: ObjectReference -> BatchListAttachedIndices

-- | Represents the output of a ListAttachedIndices response operation.
--   
--   <i>See:</i> <a>newBatchListAttachedIndicesResponse</a> smart
--   constructor.
data BatchListAttachedIndicesResponse
BatchListAttachedIndicesResponse' :: Maybe Text -> Maybe [IndexAttachment] -> BatchListAttachedIndicesResponse

-- | Create a value of <a>BatchListAttachedIndicesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListAttachedIndicesResponse'</a>,
--   <a>batchListAttachedIndicesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:indexAttachments:BatchListAttachedIndicesResponse'</a>,
--   <a>batchListAttachedIndicesResponse_indexAttachments</a> - The indices
--   attached to the specified object.
newBatchListAttachedIndicesResponse :: BatchListAttachedIndicesResponse

-- | Returns a paginated list of all the incoming TypedLinkSpecifier
--   information for an object inside a BatchRead operation. For more
--   information, see ListIncomingTypedLinks and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListIncomingTypedLinks</a> smart constructor.
data BatchListIncomingTypedLinks
BatchListIncomingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe [TypedLinkAttributeRange] -> ObjectReference -> BatchListIncomingTypedLinks

-- | Create a value of <a>BatchListIncomingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes on the typed link facet,
--   not the order in which they are supplied to any API calls.
--   
--   <a>$sel:maxResults:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:filterAttributeRanges:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_filterAttributeRanges</a> - Provides
--   range filters for multiple attributes. When providing ranges to typed
--   link selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:objectReference:BatchListIncomingTypedLinks'</a>,
--   <a>batchListIncomingTypedLinks_objectReference</a> - The reference
--   that identifies the object whose attributes will be listed.
newBatchListIncomingTypedLinks :: ObjectReference -> BatchListIncomingTypedLinks

-- | Represents the output of a ListIncomingTypedLinks response operation.
--   
--   <i>See:</i> <a>newBatchListIncomingTypedLinksResponse</a> smart
--   constructor.
data BatchListIncomingTypedLinksResponse
BatchListIncomingTypedLinksResponse' :: Maybe [TypedLinkSpecifier] -> Maybe Text -> BatchListIncomingTypedLinksResponse

-- | Create a value of <a>BatchListIncomingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkSpecifiers:BatchListIncomingTypedLinksResponse'</a>,
--   <a>batchListIncomingTypedLinksResponse_linkSpecifiers</a> - Returns
--   one or more typed link specifiers as output.
--   
--   <a>$sel:nextToken:BatchListIncomingTypedLinksResponse'</a>,
--   <a>batchListIncomingTypedLinksResponse_nextToken</a> - The pagination
--   token.
newBatchListIncomingTypedLinksResponse :: BatchListIncomingTypedLinksResponse

-- | Lists objects attached to the specified index inside a BatchRead
--   operation. For more information, see ListIndex and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListIndex</a> smart constructor.
data BatchListIndex
BatchListIndex' :: Maybe Text -> Maybe Natural -> Maybe [ObjectAttributeRange] -> ObjectReference -> BatchListIndex

-- | Create a value of <a>BatchListIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIndex'</a>, <a>batchListIndex_nextToken</a>
--   - The pagination token.
--   
--   <a>$sel:maxResults:BatchListIndex'</a>,
--   <a>batchListIndex_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:rangesOnIndexedValues:BatchListIndex'</a>,
--   <a>batchListIndex_rangesOnIndexedValues</a> - Specifies the ranges of
--   indexed values that you want to query.
--   
--   <a>$sel:indexReference:BatchListIndex'</a>,
--   <a>batchListIndex_indexReference</a> - The reference to the index to
--   list.
newBatchListIndex :: ObjectReference -> BatchListIndex

-- | Represents the output of a ListIndex response operation.
--   
--   <i>See:</i> <a>newBatchListIndexResponse</a> smart constructor.
data BatchListIndexResponse
BatchListIndexResponse' :: Maybe Text -> Maybe [IndexAttachment] -> BatchListIndexResponse

-- | Create a value of <a>BatchListIndexResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListIndexResponse'</a>,
--   <a>batchListIndexResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:indexAttachments:BatchListIndexResponse'</a>,
--   <a>batchListIndexResponse_indexAttachments</a> - The objects and
--   indexed values attached to the index.
newBatchListIndexResponse :: BatchListIndexResponse

-- | Represents the output of a ListObjectAttributes operation.
--   
--   <i>See:</i> <a>newBatchListObjectAttributes</a> smart constructor.
data BatchListObjectAttributes
BatchListObjectAttributes' :: Maybe Text -> Maybe Natural -> Maybe SchemaFacet -> ObjectReference -> BatchListObjectAttributes

-- | Create a value of <a>BatchListObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_maxResults</a> - The maximum number of
--   items to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:facetFilter:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_facetFilter</a> - Used to filter the list
--   of object attributes that are associated with a certain facet.
--   
--   <a>$sel:objectReference:BatchListObjectAttributes'</a>,
--   <a>batchListObjectAttributes_objectReference</a> - Reference of the
--   object whose attributes need to be listed.
newBatchListObjectAttributes :: ObjectReference -> BatchListObjectAttributes

-- | Represents the output of a ListObjectAttributes response operation.
--   
--   <i>See:</i> <a>newBatchListObjectAttributesResponse</a> smart
--   constructor.
data BatchListObjectAttributesResponse
BatchListObjectAttributesResponse' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> BatchListObjectAttributesResponse

-- | Create a value of <a>BatchListObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectAttributesResponse'</a>,
--   <a>batchListObjectAttributesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attributes:BatchListObjectAttributesResponse'</a>,
--   <a>batchListObjectAttributesResponse_attributes</a> - The attributes
--   map that is associated with the object. <tt>AttributeArn</tt> is the
--   key; attribute value is the value.
newBatchListObjectAttributesResponse :: BatchListObjectAttributesResponse

-- | Represents the output of a ListObjectChildren operation.
--   
--   <i>See:</i> <a>newBatchListObjectChildren</a> smart constructor.
data BatchListObjectChildren
BatchListObjectChildren' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectChildren

-- | Create a value of <a>BatchListObjectChildren</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_maxResults</a> - Maximum number of items to
--   be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:objectReference:BatchListObjectChildren'</a>,
--   <a>batchListObjectChildren_objectReference</a> - Reference of the
--   object for which child objects are being listed.
newBatchListObjectChildren :: ObjectReference -> BatchListObjectChildren

-- | Represents the output of a ListObjectChildren response operation.
--   
--   <i>See:</i> <a>newBatchListObjectChildrenResponse</a> smart
--   constructor.
data BatchListObjectChildrenResponse
BatchListObjectChildrenResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> BatchListObjectChildrenResponse

-- | Create a value of <a>BatchListObjectChildrenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectChildrenResponse'</a>,
--   <a>batchListObjectChildrenResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:children:BatchListObjectChildrenResponse'</a>,
--   <a>batchListObjectChildrenResponse_children</a> - The children
--   structure, which is a map with the key as the <tt>LinkName</tt> and
--   <tt>ObjectIdentifier</tt> as the value.
newBatchListObjectChildrenResponse :: BatchListObjectChildrenResponse

-- | Retrieves all available parent paths for any object type such as node,
--   leaf node, policy node, and index node objects inside a BatchRead
--   operation. For more information, see ListObjectParentPaths and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListObjectParentPaths</a> smart constructor.
data BatchListObjectParentPaths
BatchListObjectParentPaths' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectParentPaths

-- | Create a value of <a>BatchListObjectParentPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:objectReference:BatchListObjectParentPaths'</a>,
--   <a>batchListObjectParentPaths_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newBatchListObjectParentPaths :: ObjectReference -> BatchListObjectParentPaths

-- | Represents the output of a ListObjectParentPaths response operation.
--   
--   <i>See:</i> <a>newBatchListObjectParentPathsResponse</a> smart
--   constructor.
data BatchListObjectParentPathsResponse
BatchListObjectParentPathsResponse' :: Maybe Text -> Maybe [PathToObjectIdentifiers] -> BatchListObjectParentPathsResponse

-- | Create a value of <a>BatchListObjectParentPathsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParentPathsResponse'</a>,
--   <a>batchListObjectParentPathsResponse_nextToken</a> - The pagination
--   token.
--   
--   
--   <a>$sel:pathToObjectIdentifiersList:BatchListObjectParentPathsResponse'</a>,
--   <a>batchListObjectParentPathsResponse_pathToObjectIdentifiersList</a>
--   - Returns the path to the <tt>ObjectIdentifiers</tt> that are
--   associated with the directory.
newBatchListObjectParentPathsResponse :: BatchListObjectParentPathsResponse

-- | Lists parent objects that are associated with a given object in
--   pagination fashion.
--   
--   <i>See:</i> <a>newBatchListObjectParents</a> smart constructor.
data BatchListObjectParents
BatchListObjectParents' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectParents

-- | Create a value of <a>BatchListObjectParents</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_maxResults</a> - The maximum number of items
--   to be retrieved in a single call. This is an approximate number.
--   
--   <a>$sel:objectReference:BatchListObjectParents'</a>,
--   <a>batchListObjectParents_objectReference</a> - Undocumented member.
newBatchListObjectParents :: ObjectReference -> BatchListObjectParents

-- | Represents the output of a ListObjectParents response operation.
--   
--   <i>See:</i> <a>newBatchListObjectParentsResponse</a> smart
--   constructor.
data BatchListObjectParentsResponse
BatchListObjectParentsResponse' :: Maybe [ObjectIdentifierAndLinkNameTuple] -> Maybe Text -> BatchListObjectParentsResponse

-- | Create a value of <a>BatchListObjectParentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parentLinks:BatchListObjectParentsResponse'</a>,
--   <a>batchListObjectParentsResponse_parentLinks</a> - Returns a list of
--   parent reference and LinkName Tuples.
--   
--   <a>$sel:nextToken:BatchListObjectParentsResponse'</a>,
--   <a>batchListObjectParentsResponse_nextToken</a> - The pagination
--   token.
newBatchListObjectParentsResponse :: BatchListObjectParentsResponse

-- | Returns policies attached to an object in pagination fashion inside a
--   BatchRead operation. For more information, see ListObjectPolicies and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListObjectPolicies</a> smart constructor.
data BatchListObjectPolicies
BatchListObjectPolicies' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListObjectPolicies

-- | Create a value of <a>BatchListObjectPolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:objectReference:BatchListObjectPolicies'</a>,
--   <a>batchListObjectPolicies_objectReference</a> - The reference that
--   identifies the object whose attributes will be listed.
newBatchListObjectPolicies :: ObjectReference -> BatchListObjectPolicies

-- | Represents the output of a ListObjectPolicies response operation.
--   
--   <i>See:</i> <a>newBatchListObjectPoliciesResponse</a> smart
--   constructor.
data BatchListObjectPoliciesResponse
BatchListObjectPoliciesResponse' :: Maybe Text -> Maybe [Text] -> BatchListObjectPoliciesResponse

-- | Create a value of <a>BatchListObjectPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListObjectPoliciesResponse'</a>,
--   <a>batchListObjectPoliciesResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:attachedPolicyIds:BatchListObjectPoliciesResponse'</a>,
--   <a>batchListObjectPoliciesResponse_attachedPolicyIds</a> - A list of
--   policy <tt>ObjectIdentifiers</tt>, that are attached to the object.
newBatchListObjectPoliciesResponse :: BatchListObjectPoliciesResponse

-- | Returns a paginated list of all the outgoing TypedLinkSpecifier
--   information for an object inside a BatchRead operation. For more
--   information, see ListOutgoingTypedLinks and
--   BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListOutgoingTypedLinks</a> smart constructor.
data BatchListOutgoingTypedLinks
BatchListOutgoingTypedLinks' :: Maybe Text -> Maybe TypedLinkSchemaAndFacetName -> Maybe Natural -> Maybe [TypedLinkAttributeRange] -> ObjectReference -> BatchListOutgoingTypedLinks

-- | Create a value of <a>BatchListOutgoingTypedLinks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_nextToken</a> - The pagination token.
--   
--   <a>$sel:filterTypedLink:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_filterTypedLink</a> - Filters are
--   interpreted in the order of the attributes defined on the typed link
--   facet, not the order they are supplied to any API calls.
--   
--   <a>$sel:maxResults:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:filterAttributeRanges:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_filterAttributeRanges</a> - Provides
--   range filters for multiple attributes. When providing ranges to typed
--   link selection, any inexact ranges must be specified at the end. Any
--   attributes that do not have a range specified are presumed to match
--   the entire range.
--   
--   <a>$sel:objectReference:BatchListOutgoingTypedLinks'</a>,
--   <a>batchListOutgoingTypedLinks_objectReference</a> - The reference
--   that identifies the object whose attributes will be listed.
newBatchListOutgoingTypedLinks :: ObjectReference -> BatchListOutgoingTypedLinks

-- | Represents the output of a ListOutgoingTypedLinks response operation.
--   
--   <i>See:</i> <a>newBatchListOutgoingTypedLinksResponse</a> smart
--   constructor.
data BatchListOutgoingTypedLinksResponse
BatchListOutgoingTypedLinksResponse' :: Maybe Text -> Maybe [TypedLinkSpecifier] -> BatchListOutgoingTypedLinksResponse

-- | Create a value of <a>BatchListOutgoingTypedLinksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListOutgoingTypedLinksResponse'</a>,
--   <a>batchListOutgoingTypedLinksResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:typedLinkSpecifiers:BatchListOutgoingTypedLinksResponse'</a>,
--   <a>batchListOutgoingTypedLinksResponse_typedLinkSpecifiers</a> -
--   Returns a typed link specifier as output.
newBatchListOutgoingTypedLinksResponse :: BatchListOutgoingTypedLinksResponse

-- | Returns all of the <tt>ObjectIdentifiers</tt> to which a given policy
--   is attached inside a BatchRead operation. For more information, see
--   ListPolicyAttachments and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchListPolicyAttachments</a> smart constructor.
data BatchListPolicyAttachments
BatchListPolicyAttachments' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchListPolicyAttachments

-- | Create a value of <a>BatchListPolicyAttachments</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_maxResults</a> - The maximum number of
--   results to retrieve.
--   
--   <a>$sel:policyReference:BatchListPolicyAttachments'</a>,
--   <a>batchListPolicyAttachments_policyReference</a> - The reference that
--   identifies the policy object.
newBatchListPolicyAttachments :: ObjectReference -> BatchListPolicyAttachments

-- | Represents the output of a ListPolicyAttachments response operation.
--   
--   <i>See:</i> <a>newBatchListPolicyAttachmentsResponse</a> smart
--   constructor.
data BatchListPolicyAttachmentsResponse
BatchListPolicyAttachmentsResponse' :: Maybe Text -> Maybe [Text] -> BatchListPolicyAttachmentsResponse

-- | Create a value of <a>BatchListPolicyAttachmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchListPolicyAttachmentsResponse'</a>,
--   <a>batchListPolicyAttachmentsResponse_nextToken</a> - The pagination
--   token.
--   
--   <a>$sel:objectIdentifiers:BatchListPolicyAttachmentsResponse'</a>,
--   <a>batchListPolicyAttachmentsResponse_objectIdentifiers</a> - A list
--   of <tt>ObjectIdentifiers</tt> to which the policy is attached.
newBatchListPolicyAttachmentsResponse :: BatchListPolicyAttachmentsResponse

-- | Lists all policies from the root of the Directory to the object
--   specified inside a BatchRead operation. For more information, see
--   LookupPolicy and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchLookupPolicy</a> smart constructor.
data BatchLookupPolicy
BatchLookupPolicy' :: Maybe Text -> Maybe Natural -> ObjectReference -> BatchLookupPolicy

-- | Create a value of <a>BatchLookupPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_nextToken</a> - The pagination token.
--   
--   <a>$sel:maxResults:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_maxResults</a> - The maximum number of results to
--   retrieve.
--   
--   <a>$sel:objectReference:BatchLookupPolicy'</a>,
--   <a>batchLookupPolicy_objectReference</a> - Reference that identifies
--   the object whose policies will be looked up.
newBatchLookupPolicy :: ObjectReference -> BatchLookupPolicy

-- | Represents the output of a LookupPolicy response operation.
--   
--   <i>See:</i> <a>newBatchLookupPolicyResponse</a> smart constructor.
data BatchLookupPolicyResponse
BatchLookupPolicyResponse' :: Maybe Text -> Maybe [PolicyToPath] -> BatchLookupPolicyResponse

-- | Create a value of <a>BatchLookupPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchLookupPolicyResponse'</a>,
--   <a>batchLookupPolicyResponse_nextToken</a> - The pagination token.
--   
--   <a>$sel:policyToPathList:BatchLookupPolicyResponse'</a>,
--   <a>batchLookupPolicyResponse_policyToPathList</a> - Provides list of
--   path to policies. Policies contain <tt>PolicyId</tt>,
--   <tt>ObjectIdentifier</tt>, and <tt>PolicyType</tt>. For more
--   information, see <a>Policies</a>.
newBatchLookupPolicyResponse :: BatchLookupPolicyResponse

-- | The batch read exception structure, which contains the exception type
--   and message.
--   
--   <i>See:</i> <a>newBatchReadException</a> smart constructor.
data BatchReadException
BatchReadException' :: Maybe Text -> Maybe BatchReadExceptionType -> BatchReadException

-- | Create a value of <a>BatchReadException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:BatchReadException'</a>,
--   <a>batchReadException_message</a> - An exception message that is
--   associated with the failure.
--   
--   <a>$sel:type':BatchReadException'</a>, <a>batchReadException_type</a>
--   - A type of exception, such as <tt>InvalidArnException</tt>.
newBatchReadException :: BatchReadException

-- | Represents the output of a <tt>BatchRead</tt> operation.
--   
--   <i>See:</i> <a>newBatchReadOperation</a> smart constructor.
data BatchReadOperation
BatchReadOperation' :: Maybe BatchGetObjectInformation -> Maybe BatchGetObjectAttributes -> Maybe BatchListIncomingTypedLinks -> Maybe BatchListObjectParents -> Maybe BatchListPolicyAttachments -> Maybe BatchListObjectAttributes -> Maybe BatchListObjectParentPaths -> Maybe BatchLookupPolicy -> Maybe BatchListAttachedIndices -> Maybe BatchListObjectChildren -> Maybe BatchListIndex -> Maybe BatchListObjectPolicies -> Maybe BatchGetLinkAttributes -> Maybe BatchListOutgoingTypedLinks -> BatchReadOperation

-- | Create a value of <a>BatchReadOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:getObjectInformation:BatchReadOperation'</a>,
--   <a>batchReadOperation_getObjectInformation</a> - Retrieves metadata
--   about an object.
--   
--   <a>$sel:getObjectAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_getObjectAttributes</a> - Retrieves attributes
--   within a facet that are associated with an object.
--   
--   <a>$sel:listIncomingTypedLinks:BatchReadOperation'</a>,
--   <a>batchReadOperation_listIncomingTypedLinks</a> - Returns a paginated
--   list of all the incoming TypedLinkSpecifier information for an object.
--   It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
--   
--   <a>$sel:listObjectParents:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectParents</a> - Lists parent objects
--   that are associated with a given object in pagination fashion.
--   
--   <a>$sel:listPolicyAttachments:BatchReadOperation'</a>,
--   <a>batchReadOperation_listPolicyAttachments</a> - Returns all of the
--   <tt>ObjectIdentifiers</tt> to which a given policy is attached.
--   
--   <a>$sel:listObjectAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectAttributes</a> - Lists all attributes
--   that are associated with an object.
--   
--   <a>$sel:listObjectParentPaths:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectParentPaths</a> - Retrieves all
--   available parent paths for any object type such as node, leaf node,
--   policy node, and index node objects. For more information about
--   objects, see <a>Directory Structure</a>.
--   
--   <a>$sel:lookupPolicy:BatchReadOperation'</a>,
--   <a>batchReadOperation_lookupPolicy</a> - Lists all policies from the
--   root of the Directory to the object specified. If there are no
--   policies present, an empty list is returned. If policies are present,
--   and if some objects don't have the policies attached, it returns the
--   <tt>ObjectIdentifier</tt> for such objects. If policies are present,
--   it returns <tt>ObjectIdentifier</tt>, <tt>policyId</tt>, and
--   <tt>policyType</tt>. Paths that don't lead to the root from the target
--   object are ignored. For more information, see <a>Policies</a>.
--   
--   <a>$sel:listAttachedIndices:BatchReadOperation'</a>,
--   <a>batchReadOperation_listAttachedIndices</a> - Lists indices attached
--   to an object.
--   
--   <a>$sel:listObjectChildren:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectChildren</a> - Returns a paginated
--   list of child objects that are associated with a given object.
--   
--   <a>$sel:listIndex:BatchReadOperation'</a>,
--   <a>batchReadOperation_listIndex</a> - Lists objects attached to the
--   specified index.
--   
--   <a>$sel:listObjectPolicies:BatchReadOperation'</a>,
--   <a>batchReadOperation_listObjectPolicies</a> - Returns policies
--   attached to an object in pagination fashion.
--   
--   <a>$sel:getLinkAttributes:BatchReadOperation'</a>,
--   <a>batchReadOperation_getLinkAttributes</a> - Retrieves attributes
--   that are associated with a typed link.
--   
--   <a>$sel:listOutgoingTypedLinks:BatchReadOperation'</a>,
--   <a>batchReadOperation_listOutgoingTypedLinks</a> - Returns a paginated
--   list of all the outgoing TypedLinkSpecifier information for an object.
--   It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
newBatchReadOperation :: BatchReadOperation

-- | Represents the output of a <tt>BatchRead</tt> response operation.
--   
--   <i>See:</i> <a>newBatchReadOperationResponse</a> smart constructor.
data BatchReadOperationResponse
BatchReadOperationResponse' :: Maybe BatchReadSuccessfulResponse -> Maybe BatchReadException -> BatchReadOperationResponse

-- | Create a value of <a>BatchReadOperationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successfulResponse:BatchReadOperationResponse'</a>,
--   <a>batchReadOperationResponse_successfulResponse</a> - Identifies
--   which operation in a batch has succeeded.
--   
--   <a>$sel:exceptionResponse:BatchReadOperationResponse'</a>,
--   <a>batchReadOperationResponse_exceptionResponse</a> - Identifies which
--   operation in a batch has failed.
newBatchReadOperationResponse :: BatchReadOperationResponse

-- | Represents the output of a <tt>BatchRead</tt> success response
--   operation.
--   
--   <i>See:</i> <a>newBatchReadSuccessfulResponse</a> smart constructor.
data BatchReadSuccessfulResponse
BatchReadSuccessfulResponse' :: Maybe BatchGetObjectInformationResponse -> Maybe BatchGetObjectAttributesResponse -> Maybe BatchListIncomingTypedLinksResponse -> Maybe BatchListObjectParentsResponse -> Maybe BatchListPolicyAttachmentsResponse -> Maybe BatchListObjectAttributesResponse -> Maybe BatchListObjectParentPathsResponse -> Maybe BatchLookupPolicyResponse -> Maybe BatchListAttachedIndicesResponse -> Maybe BatchListObjectChildrenResponse -> Maybe BatchListIndexResponse -> Maybe BatchListObjectPoliciesResponse -> Maybe BatchGetLinkAttributesResponse -> Maybe BatchListOutgoingTypedLinksResponse -> BatchReadSuccessfulResponse

-- | Create a value of <a>BatchReadSuccessfulResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:getObjectInformation:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getObjectInformation</a> - Retrieves
--   metadata about an object.
--   
--   <a>$sel:getObjectAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getObjectAttributes</a> - Retrieves
--   attributes within a facet that are associated with an object.
--   
--   <a>$sel:listIncomingTypedLinks:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listIncomingTypedLinks</a> - Returns a
--   paginated list of all the incoming TypedLinkSpecifier information for
--   an object. It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
--   
--   <a>$sel:listObjectParents:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectParents</a> - The list of
--   parent objects to retrieve.
--   
--   <a>$sel:listPolicyAttachments:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listPolicyAttachments</a> - Returns all
--   of the <tt>ObjectIdentifiers</tt> to which a given policy is attached.
--   
--   <a>$sel:listObjectAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectAttributes</a> - Lists all
--   attributes that are associated with an object.
--   
--   <a>$sel:listObjectParentPaths:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectParentPaths</a> - Retrieves
--   all available parent paths for any object type such as node, leaf
--   node, policy node, and index node objects. For more information about
--   objects, see <a>Directory Structure</a>.
--   
--   <a>$sel:lookupPolicy:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_lookupPolicy</a> - Lists all policies
--   from the root of the Directory to the object specified. If there are
--   no policies present, an empty list is returned. If policies are
--   present, and if some objects don't have the policies attached, it
--   returns the <tt>ObjectIdentifier</tt> for such objects. If policies
--   are present, it returns <tt>ObjectIdentifier</tt>, <tt>policyId</tt>,
--   and <tt>policyType</tt>. Paths that don't lead to the root from the
--   target object are ignored. For more information, see <a>Policies</a>.
--   
--   <a>$sel:listAttachedIndices:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listAttachedIndices</a> - Lists indices
--   attached to an object.
--   
--   <a>$sel:listObjectChildren:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectChildren</a> - Returns a
--   paginated list of child objects that are associated with a given
--   object.
--   
--   <a>$sel:listIndex:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listIndex</a> - Lists objects attached
--   to the specified index.
--   
--   <a>$sel:listObjectPolicies:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listObjectPolicies</a> - Returns
--   policies attached to an object in pagination fashion.
--   
--   <a>$sel:getLinkAttributes:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_getLinkAttributes</a> - The list of
--   attributes to retrieve from the typed link.
--   
--   <a>$sel:listOutgoingTypedLinks:BatchReadSuccessfulResponse'</a>,
--   <a>batchReadSuccessfulResponse_listOutgoingTypedLinks</a> - Returns a
--   paginated list of all the outgoing TypedLinkSpecifier information for
--   an object. It also supports filtering by typed link facet and identity
--   attributes. For more information, see <a>Typed Links</a>.
newBatchReadSuccessfulResponse :: BatchReadSuccessfulResponse

-- | A batch operation to remove a facet from an object.
--   
--   <i>See:</i> <a>newBatchRemoveFacetFromObject</a> smart constructor.
data BatchRemoveFacetFromObject
BatchRemoveFacetFromObject' :: SchemaFacet -> ObjectReference -> BatchRemoveFacetFromObject

-- | Create a value of <a>BatchRemoveFacetFromObject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaFacet:BatchRemoveFacetFromObject'</a>,
--   <a>batchRemoveFacetFromObject_schemaFacet</a> - The facet to remove
--   from the object.
--   
--   <a>$sel:objectReference:BatchRemoveFacetFromObject'</a>,
--   <a>batchRemoveFacetFromObject_objectReference</a> - A reference to the
--   object whose facet will be removed.
newBatchRemoveFacetFromObject :: SchemaFacet -> ObjectReference -> BatchRemoveFacetFromObject

-- | An empty result that represents success.
--   
--   <i>See:</i> <a>newBatchRemoveFacetFromObjectResponse</a> smart
--   constructor.
data BatchRemoveFacetFromObjectResponse
BatchRemoveFacetFromObjectResponse' :: BatchRemoveFacetFromObjectResponse

-- | Create a value of <a>BatchRemoveFacetFromObjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchRemoveFacetFromObjectResponse :: BatchRemoveFacetFromObjectResponse

-- | Updates a given typed link’s attributes inside a BatchRead operation.
--   Attributes to be updated must not contribute to the typed link’s
--   identity, as defined by its <tt>IdentityAttributeOrder</tt>. For more
--   information, see UpdateLinkAttributes and BatchReadRequest$Operations.
--   
--   <i>See:</i> <a>newBatchUpdateLinkAttributes</a> smart constructor.
data BatchUpdateLinkAttributes
BatchUpdateLinkAttributes' :: TypedLinkSpecifier -> [LinkAttributeUpdate] -> BatchUpdateLinkAttributes

-- | Create a value of <a>BatchUpdateLinkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkSpecifier:BatchUpdateLinkAttributes'</a>,
--   <a>batchUpdateLinkAttributes_typedLinkSpecifier</a> - Allows a typed
--   link specifier to be accepted as input.
--   
--   <a>$sel:attributeUpdates:BatchUpdateLinkAttributes'</a>,
--   <a>batchUpdateLinkAttributes_attributeUpdates</a> - The attributes
--   update structure.
newBatchUpdateLinkAttributes :: TypedLinkSpecifier -> BatchUpdateLinkAttributes

-- | Represents the output of a UpdateLinkAttributes response operation.
--   
--   <i>See:</i> <a>newBatchUpdateLinkAttributesResponse</a> smart
--   constructor.
data BatchUpdateLinkAttributesResponse
BatchUpdateLinkAttributesResponse' :: BatchUpdateLinkAttributesResponse

-- | Create a value of <a>BatchUpdateLinkAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchUpdateLinkAttributesResponse :: BatchUpdateLinkAttributesResponse

-- | Represents the output of a <tt>BatchUpdate</tt> operation.
--   
--   <i>See:</i> <a>newBatchUpdateObjectAttributes</a> smart constructor.
data BatchUpdateObjectAttributes
BatchUpdateObjectAttributes' :: ObjectReference -> [ObjectAttributeUpdate] -> BatchUpdateObjectAttributes

-- | Create a value of <a>BatchUpdateObjectAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectReference:BatchUpdateObjectAttributes'</a>,
--   <a>batchUpdateObjectAttributes_objectReference</a> - Reference that
--   identifies the object.
--   
--   <a>$sel:attributeUpdates:BatchUpdateObjectAttributes'</a>,
--   <a>batchUpdateObjectAttributes_attributeUpdates</a> - Attributes
--   update structure.
newBatchUpdateObjectAttributes :: ObjectReference -> BatchUpdateObjectAttributes

-- | Represents the output of a <tt>BatchUpdate</tt> response operation.
--   
--   <i>See:</i> <a>newBatchUpdateObjectAttributesResponse</a> smart
--   constructor.
data BatchUpdateObjectAttributesResponse
BatchUpdateObjectAttributesResponse' :: Maybe Text -> BatchUpdateObjectAttributesResponse

-- | Create a value of <a>BatchUpdateObjectAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:BatchUpdateObjectAttributesResponse'</a>,
--   <a>batchUpdateObjectAttributesResponse_objectIdentifier</a> - ID that
--   is associated with the object.
newBatchUpdateObjectAttributesResponse :: BatchUpdateObjectAttributesResponse

-- | Represents the output of a <tt>BatchWrite</tt> operation.
--   
--   <i>See:</i> <a>newBatchWriteOperation</a> smart constructor.
data BatchWriteOperation
BatchWriteOperation' :: Maybe BatchAttachTypedLink -> Maybe BatchDeleteObject -> Maybe BatchCreateObject -> Maybe BatchUpdateLinkAttributes -> Maybe BatchDetachTypedLink -> Maybe BatchCreateIndex -> Maybe BatchDetachFromIndex -> Maybe BatchDetachPolicy -> Maybe BatchAttachObject -> Maybe BatchAttachToIndex -> Maybe BatchAttachPolicy -> Maybe BatchUpdateObjectAttributes -> Maybe BatchRemoveFacetFromObject -> Maybe BatchDetachObject -> Maybe BatchAddFacetToObject -> BatchWriteOperation

-- | Create a value of <a>BatchWriteOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachTypedLink:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachTypedLink</a> - Attaches a typed link to
--   a specified source and target object. For more information, see
--   <a>Typed Links</a>.
--   
--   <a>$sel:deleteObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_deleteObject</a> - Deletes an object in a
--   Directory.
--   
--   <a>$sel:createObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_createObject</a> - Creates an object.
--   
--   <a>$sel:updateLinkAttributes:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_updateLinkAttributes</a> - Updates a given
--   object's attributes.
--   
--   <a>$sel:detachTypedLink:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachTypedLink</a> - Detaches a typed link
--   from a specified source and target object. For more information, see
--   <a>Typed Links</a>.
--   
--   <a>$sel:createIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_createIndex</a> - Creates an index object. See
--   <a>Indexing and search</a> for more information.
--   
--   <a>$sel:detachFromIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachFromIndex</a> - Detaches the specified
--   object from the specified index.
--   
--   <a>$sel:detachPolicy:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachPolicy</a> - Detaches a policy from a
--   Directory.
--   
--   <a>$sel:attachObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachObject</a> - Attaches an object to a
--   Directory.
--   
--   <a>$sel:attachToIndex:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachToIndex</a> - Attaches the specified
--   object to the specified index.
--   
--   <a>$sel:attachPolicy:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_attachPolicy</a> - Attaches a policy object to
--   a regular object. An object can have a limited number of attached
--   policies.
--   
--   <a>$sel:updateObjectAttributes:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_updateObjectAttributes</a> - Updates a given
--   object's attributes.
--   
--   <a>$sel:removeFacetFromObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_removeFacetFromObject</a> - A batch operation
--   that removes a facet from an object.
--   
--   <a>$sel:detachObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_detachObject</a> - Detaches an object from a
--   Directory.
--   
--   <a>$sel:addFacetToObject:BatchWriteOperation'</a>,
--   <a>batchWriteOperation_addFacetToObject</a> - A batch operation that
--   adds a facet to an object.
newBatchWriteOperation :: BatchWriteOperation

-- | Represents the output of a <tt>BatchWrite</tt> response operation.
--   
--   <i>See:</i> <a>newBatchWriteOperationResponse</a> smart constructor.
data BatchWriteOperationResponse
BatchWriteOperationResponse' :: Maybe BatchAttachTypedLinkResponse -> Maybe BatchDeleteObjectResponse -> Maybe BatchCreateObjectResponse -> Maybe BatchUpdateLinkAttributesResponse -> Maybe BatchDetachTypedLinkResponse -> Maybe BatchCreateIndexResponse -> Maybe BatchDetachFromIndexResponse -> Maybe BatchDetachPolicyResponse -> Maybe BatchAttachObjectResponse -> Maybe BatchAttachToIndexResponse -> Maybe BatchAttachPolicyResponse -> Maybe BatchUpdateObjectAttributesResponse -> Maybe BatchRemoveFacetFromObjectResponse -> Maybe BatchDetachObjectResponse -> Maybe BatchAddFacetToObjectResponse -> BatchWriteOperationResponse

-- | Create a value of <a>BatchWriteOperationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachTypedLink:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachTypedLink</a> - Attaches a typed
--   link to a specified source and target object. For more information,
--   see <a>Typed Links</a>.
--   
--   <a>$sel:deleteObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_deleteObject</a> - Deletes an object in
--   a Directory.
--   
--   <a>$sel:createObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_createObject</a> - Creates an object in
--   a Directory.
--   
--   <a>$sel:updateLinkAttributes:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_updateLinkAttributes</a> - Represents
--   the output of a <tt>BatchWrite</tt> response operation.
--   
--   <a>$sel:detachTypedLink:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachTypedLink</a> - Detaches a typed
--   link from a specified source and target object. For more information,
--   see <a>Typed Links</a>.
--   
--   <a>$sel:createIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_createIndex</a> - Creates an index
--   object. See <a>Indexing and search</a> for more information.
--   
--   <a>$sel:detachFromIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachFromIndex</a> - Detaches the
--   specified object from the specified index.
--   
--   <a>$sel:detachPolicy:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachPolicy</a> - Detaches a policy
--   from a Directory.
--   
--   <a>$sel:attachObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachObject</a> - Attaches an object
--   to a Directory.
--   
--   <a>$sel:attachToIndex:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachToIndex</a> - Attaches the
--   specified object to the specified index.
--   
--   <a>$sel:attachPolicy:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_attachPolicy</a> - Attaches a policy
--   object to a regular object. An object can have a limited number of
--   attached policies.
--   
--   <a>$sel:updateObjectAttributes:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_updateObjectAttributes</a> - Updates a
--   given object’s attributes.
--   
--   <a>$sel:removeFacetFromObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_removeFacetFromObject</a> - The result
--   of a batch remove facet from object operation.
--   
--   <a>$sel:detachObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_detachObject</a> - Detaches an object
--   from a Directory.
--   
--   <a>$sel:addFacetToObject:BatchWriteOperationResponse'</a>,
--   <a>batchWriteOperationResponse_addFacetToObject</a> - The result of an
--   add facet to object batch operation.
newBatchWriteOperationResponse :: BatchWriteOperationResponse

-- | Directory structure that includes the directory name and directory
--   ARN.
--   
--   <i>See:</i> <a>newDirectory</a> smart constructor.
data Directory
Directory' :: Maybe Text -> Maybe Text -> Maybe DirectoryState -> Maybe POSIX -> Directory

-- | Create a value of <a>Directory</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryArn:Directory'</a>, <a>directory_directoryArn</a> -
--   The Amazon Resource Name (ARN) that is associated with the directory.
--   For more information, see arns.
--   
--   <a>$sel:name:Directory'</a>, <a>directory_name</a> - The name of the
--   directory.
--   
--   <a>$sel:state:Directory'</a>, <a>directory_state</a> - The state of
--   the directory. Can be either <tt>Enabled</tt>, <tt>Disabled</tt>, or
--   <tt>Deleted</tt>.
--   
--   <a>$sel:creationDateTime:Directory'</a>,
--   <a>directory_creationDateTime</a> - The date and time when the
--   directory was created.
newDirectory :: Directory

-- | A structure that contains <tt>Name</tt>, <tt>ARN</tt>,
--   <tt>Attributes</tt>, <tt> Rules</tt>, and <tt>ObjectTypes</tt>. See
--   <a>Facets</a> for more information.
--   
--   <i>See:</i> <a>newFacet</a> smart constructor.
data Facet
Facet' :: Maybe FacetStyle -> Maybe Text -> Maybe ObjectType -> Facet

-- | Create a value of <a>Facet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:facetStyle:Facet'</a>, <a>facet_facetStyle</a> - There are two
--   different styles that you can define on any given facet,
--   <tt>Static</tt> and <tt>Dynamic</tt>. For static facets, all
--   attributes must be defined in the schema. For dynamic facets,
--   attributes can be defined during data plane operations.
--   
--   <a>$sel:name:Facet'</a>, <a>facet_name</a> - The name of the Facet.
--   
--   <a>$sel:objectType:Facet'</a>, <a>facet_objectType</a> - The object
--   type that is associated with the facet. See
--   CreateFacetRequest$ObjectType for more details.
newFacet :: Facet

-- | An attribute that is associated with the Facet.
--   
--   <i>See:</i> <a>newFacetAttribute</a> smart constructor.
data FacetAttribute
FacetAttribute' :: Maybe FacetAttributeReference -> Maybe RequiredAttributeBehavior -> Maybe FacetAttributeDefinition -> Text -> FacetAttribute

-- | Create a value of <a>FacetAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeReference:FacetAttribute'</a>,
--   <a>facetAttribute_attributeReference</a> - An attribute reference that
--   is associated with the attribute. See <a>Attribute References</a> for
--   more information.
--   
--   <a>$sel:requiredBehavior:FacetAttribute'</a>,
--   <a>facetAttribute_requiredBehavior</a> - The required behavior of the
--   <tt>FacetAttribute</tt>.
--   
--   <a>$sel:attributeDefinition:FacetAttribute'</a>,
--   <a>facetAttribute_attributeDefinition</a> - A facet attribute consists
--   of either a definition or a reference. This structure contains the
--   attribute definition. See <a>Attribute References</a> for more
--   information.
--   
--   <a>$sel:name:FacetAttribute'</a>, <a>facetAttribute_name</a> - The
--   name of the facet attribute.
newFacetAttribute :: Text -> FacetAttribute

-- | A facet attribute definition. See <a>Attribute References</a> for more
--   information.
--   
--   <i>See:</i> <a>newFacetAttributeDefinition</a> smart constructor.
data FacetAttributeDefinition
FacetAttributeDefinition' :: Maybe Bool -> Maybe (HashMap Text Rule) -> Maybe TypedAttributeValue -> FacetAttributeType -> FacetAttributeDefinition

-- | Create a value of <a>FacetAttributeDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isImmutable:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_isImmutable</a> - Whether the attribute is
--   mutable or not.
--   
--   <a>$sel:rules:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_rules</a> - Validation rules attached to
--   the attribute definition.
--   
--   <a>$sel:defaultValue:FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_defaultValue</a> - The default value of
--   the attribute (if configured).
--   
--   <a>$sel:type':FacetAttributeDefinition'</a>,
--   <a>facetAttributeDefinition_type</a> - The type of the attribute.
newFacetAttributeDefinition :: FacetAttributeType -> FacetAttributeDefinition

-- | The facet attribute reference that specifies the attribute definition
--   that contains the attribute facet name and attribute name.
--   
--   <i>See:</i> <a>newFacetAttributeReference</a> smart constructor.
data FacetAttributeReference
FacetAttributeReference' :: Text -> Text -> FacetAttributeReference

-- | Create a value of <a>FacetAttributeReference</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetFacetName:FacetAttributeReference'</a>,
--   <a>facetAttributeReference_targetFacetName</a> - The target facet name
--   that is associated with the facet reference. See <a>Attribute
--   References</a> for more information.
--   
--   <a>$sel:targetAttributeName:FacetAttributeReference'</a>,
--   <a>facetAttributeReference_targetAttributeName</a> - The target
--   attribute name that is associated with the facet reference. See
--   <a>Attribute References</a> for more information.
newFacetAttributeReference :: Text -> Text -> FacetAttributeReference

-- | A structure that contains information used to update an attribute.
--   
--   <i>See:</i> <a>newFacetAttributeUpdate</a> smart constructor.
data FacetAttributeUpdate
FacetAttributeUpdate' :: Maybe FacetAttribute -> Maybe UpdateActionType -> FacetAttributeUpdate

-- | Create a value of <a>FacetAttributeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:FacetAttributeUpdate'</a>,
--   <a>facetAttributeUpdate_attribute</a> - The attribute to update.
--   
--   <a>$sel:action:FacetAttributeUpdate'</a>,
--   <a>facetAttributeUpdate_action</a> - The action to perform when
--   updating the attribute.
newFacetAttributeUpdate :: FacetAttributeUpdate

-- | Represents an index and an attached object.
--   
--   <i>See:</i> <a>newIndexAttachment</a> smart constructor.
data IndexAttachment
IndexAttachment' :: Maybe Text -> Maybe [AttributeKeyAndValue] -> IndexAttachment

-- | Create a value of <a>IndexAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifier:IndexAttachment'</a>,
--   <a>indexAttachment_objectIdentifier</a> - In response to ListIndex,
--   the <tt>ObjectIdentifier</tt> of the object attached to the index. In
--   response to ListAttachedIndices, the <tt>ObjectIdentifier</tt> of the
--   index attached to the object. This field will always contain the
--   <tt>ObjectIdentifier</tt> of the object on the opposite side of the
--   attachment specified in the query.
--   
--   <a>$sel:indexedAttributes:IndexAttachment'</a>,
--   <a>indexAttachment_indexedAttributes</a> - The indexed attribute
--   values.
newIndexAttachment :: IndexAttachment

-- | The action to take on a typed link attribute value. Updates are only
--   supported for attributes which don’t contribute to link identity.
--   
--   <i>See:</i> <a>newLinkAttributeAction</a> smart constructor.
data LinkAttributeAction
LinkAttributeAction' :: Maybe TypedAttributeValue -> Maybe UpdateActionType -> LinkAttributeAction

-- | Create a value of <a>LinkAttributeAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeUpdateValue:LinkAttributeAction'</a>,
--   <a>linkAttributeAction_attributeUpdateValue</a> - The value that you
--   want to update to.
--   
--   <a>$sel:attributeActionType:LinkAttributeAction'</a>,
--   <a>linkAttributeAction_attributeActionType</a> - A type that can be
--   either <tt>UPDATE_OR_CREATE</tt> or <tt>DELETE</tt>.
newLinkAttributeAction :: LinkAttributeAction

-- | Structure that contains attribute update information.
--   
--   <i>See:</i> <a>newLinkAttributeUpdate</a> smart constructor.
data LinkAttributeUpdate
LinkAttributeUpdate' :: Maybe LinkAttributeAction -> Maybe AttributeKey -> LinkAttributeUpdate

-- | Create a value of <a>LinkAttributeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeAction:LinkAttributeUpdate'</a>,
--   <a>linkAttributeUpdate_attributeAction</a> - The action to perform as
--   part of the attribute update.
--   
--   <a>$sel:attributeKey:LinkAttributeUpdate'</a>,
--   <a>linkAttributeUpdate_attributeKey</a> - The key of the attribute
--   being updated.
newLinkAttributeUpdate :: LinkAttributeUpdate

-- | The action to take on the object attribute.
--   
--   <i>See:</i> <a>newObjectAttributeAction</a> smart constructor.
data ObjectAttributeAction
ObjectAttributeAction' :: Maybe UpdateActionType -> Maybe TypedAttributeValue -> ObjectAttributeAction

-- | Create a value of <a>ObjectAttributeAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeActionType:ObjectAttributeAction'</a>,
--   <a>objectAttributeAction_objectAttributeActionType</a> - A type that
--   can be either <tt>Update</tt> or <tt>Delete</tt>.
--   
--   <a>$sel:objectAttributeUpdateValue:ObjectAttributeAction'</a>,
--   <a>objectAttributeAction_objectAttributeUpdateValue</a> - The value
--   that you want to update to.
newObjectAttributeAction :: ObjectAttributeAction

-- | A range of attributes.
--   
--   <i>See:</i> <a>newObjectAttributeRange</a> smart constructor.
data ObjectAttributeRange
ObjectAttributeRange' :: Maybe TypedAttributeValueRange -> Maybe AttributeKey -> ObjectAttributeRange

-- | Create a value of <a>ObjectAttributeRange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:range:ObjectAttributeRange'</a>,
--   <a>objectAttributeRange_range</a> - The range of attribute values
--   being selected.
--   
--   <a>$sel:attributeKey:ObjectAttributeRange'</a>,
--   <a>objectAttributeRange_attributeKey</a> - The key of the attribute
--   that the attribute range covers.
newObjectAttributeRange :: ObjectAttributeRange

-- | Structure that contains attribute update information.
--   
--   <i>See:</i> <a>newObjectAttributeUpdate</a> smart constructor.
data ObjectAttributeUpdate
ObjectAttributeUpdate' :: Maybe ObjectAttributeAction -> Maybe AttributeKey -> ObjectAttributeUpdate

-- | Create a value of <a>ObjectAttributeUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectAttributeAction:ObjectAttributeUpdate'</a>,
--   <a>objectAttributeUpdate_objectAttributeAction</a> - The action to
--   perform as part of the attribute update.
--   
--   <a>$sel:objectAttributeKey:ObjectAttributeUpdate'</a>,
--   <a>objectAttributeUpdate_objectAttributeKey</a> - The key of the
--   attribute being updated.
newObjectAttributeUpdate :: ObjectAttributeUpdate

-- | A pair of ObjectIdentifier and LinkName.
--   
--   <i>See:</i> <a>newObjectIdentifierAndLinkNameTuple</a> smart
--   constructor.
data ObjectIdentifierAndLinkNameTuple
ObjectIdentifierAndLinkNameTuple' :: Maybe Text -> Maybe Text -> ObjectIdentifierAndLinkNameTuple

-- | Create a value of <a>ObjectIdentifierAndLinkNameTuple</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkName:ObjectIdentifierAndLinkNameTuple'</a>,
--   <a>objectIdentifierAndLinkNameTuple_linkName</a> - The name of the
--   link between the parent and the child object.
--   
--   <a>$sel:objectIdentifier:ObjectIdentifierAndLinkNameTuple'</a>,
--   <a>objectIdentifierAndLinkNameTuple_objectIdentifier</a> - The ID that
--   is associated with the object.
newObjectIdentifierAndLinkNameTuple :: ObjectIdentifierAndLinkNameTuple

-- | The reference that identifies an object.
--   
--   <i>See:</i> <a>newObjectReference</a> smart constructor.
data ObjectReference
ObjectReference' :: Maybe Text -> ObjectReference

-- | Create a value of <a>ObjectReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selector:ObjectReference'</a>, <a>objectReference_selector</a>
--   - A path selector supports easy selection of an object by the
--   parent/child links leading to it from the directory root. Use the link
--   names from each parent/child link to construct the path. Path
--   selectors start with a slash (/) and link names are separated by
--   slashes. For more information about paths, see <a>Access Objects</a>.
--   You can identify an object in one of the following ways:
--   
--   <ul>
--   <li><i>$ObjectIdentifier</i> - An object identifier is an opaque
--   string provided by Amazon Cloud Directory. When creating objects, the
--   system will provide you with the identifier of the created object. An
--   object’s identifier is immutable and no two objects will ever share
--   the same object identifier. To identify an object with
--   ObjectIdentifier, the ObjectIdentifier must be wrapped in double
--   quotes.</li>
--   <li><i>/some/path</i> - Identifies the object based on path</li>
--   <li><i>#SomeBatchReference</i> - Identifies the object in a batch
--   call</li>
--   </ul>
newObjectReference :: ObjectReference

-- | Returns the path to the <tt>ObjectIdentifiers</tt> that is associated
--   with the directory.
--   
--   <i>See:</i> <a>newPathToObjectIdentifiers</a> smart constructor.
data PathToObjectIdentifiers
PathToObjectIdentifiers' :: Maybe [Text] -> Maybe Text -> PathToObjectIdentifiers

-- | Create a value of <a>PathToObjectIdentifiers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:objectIdentifiers:PathToObjectIdentifiers'</a>,
--   <a>pathToObjectIdentifiers_objectIdentifiers</a> - Lists
--   <tt>ObjectIdentifiers</tt> starting from directory root to the object
--   in the request.
--   
--   <a>$sel:path:PathToObjectIdentifiers'</a>,
--   <a>pathToObjectIdentifiers_path</a> - The path that is used to
--   identify the object starting from directory root.
newPathToObjectIdentifiers :: PathToObjectIdentifiers

-- | Contains the <tt>PolicyType</tt>, <tt>PolicyId</tt>, and the
--   <tt>ObjectIdentifier</tt> to which it is attached. For more
--   information, see <a>Policies</a>.
--   
--   <i>See:</i> <a>newPolicyAttachment</a> smart constructor.
data PolicyAttachment
PolicyAttachment' :: Maybe Text -> Maybe Text -> Maybe Text -> PolicyAttachment

-- | Create a value of <a>PolicyAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyType:PolicyAttachment'</a>,
--   <a>policyAttachment_policyType</a> - The type of policy that can be
--   associated with <tt>PolicyAttachment</tt>.
--   
--   <a>$sel:objectIdentifier:PolicyAttachment'</a>,
--   <a>policyAttachment_objectIdentifier</a> - The
--   <tt>ObjectIdentifier</tt> that is associated with
--   <tt>PolicyAttachment</tt>.
--   
--   <a>$sel:policyId:PolicyAttachment'</a>,
--   <a>policyAttachment_policyId</a> - The ID of
--   <tt>PolicyAttachment</tt>.
newPolicyAttachment :: PolicyAttachment

-- | Used when a regular object exists in a Directory and you want to find
--   all of the policies that are associated with that object and the
--   parent to that object.
--   
--   <i>See:</i> <a>newPolicyToPath</a> smart constructor.
data PolicyToPath
PolicyToPath' :: Maybe [PolicyAttachment] -> Maybe Text -> PolicyToPath

-- | Create a value of <a>PolicyToPath</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policies:PolicyToPath'</a>, <a>policyToPath_policies</a> -
--   List of policy objects.
--   
--   <a>$sel:path:PolicyToPath'</a>, <a>policyToPath_path</a> - The path
--   that is referenced from the root.
newPolicyToPath :: PolicyToPath

-- | Contains an Amazon Resource Name (ARN) and parameters that are
--   associated with the rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe RuleType -> Maybe (HashMap Text Text) -> Rule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Rule'</a>, <a>rule_type</a> - The type of attribute
--   validation rule.
--   
--   <a>$sel:parameters:Rule'</a>, <a>rule_parameters</a> - The minimum and
--   maximum parameters that are associated with the rule.
newRule :: Rule

-- | A facet.
--   
--   <i>See:</i> <a>newSchemaFacet</a> smart constructor.
data SchemaFacet
SchemaFacet' :: Maybe Text -> Maybe Text -> SchemaFacet

-- | Create a value of <a>SchemaFacet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:SchemaFacet'</a>, <a>schemaFacet_schemaArn</a> - The
--   ARN of the schema that contains the facet with no minor component. See
--   arns and <a>In-Place Schema Upgrade</a> for a description of when to
--   provide minor versions. If this value is set, FacetName must also be
--   set.
--   
--   <a>$sel:facetName:SchemaFacet'</a>, <a>schemaFacet_facetName</a> - The
--   name of the facet. If this value is set, SchemaArn must also be set.
newSchemaFacet :: SchemaFacet

-- | The tag structure that contains a tag key and value.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key that is associated with
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value that is
--   associated with the tag.
newTag :: Tag

-- | Represents the data for a typed attribute. You can set one, and only
--   one, of the elements. Each attribute in an item is a name-value pair.
--   Attributes have a single value.
--   
--   <i>See:</i> <a>newTypedAttributeValue</a> smart constructor.
data TypedAttributeValue
TypedAttributeValue' :: Maybe Text -> Maybe Bool -> Maybe Base64 -> Maybe Text -> Maybe POSIX -> TypedAttributeValue

-- | Create a value of <a>TypedAttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_stringValue</a> - A string data value.
--   
--   <a>$sel:booleanValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_booleanValue</a> - A Boolean data value.
--   
--   <a>$sel:binaryValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_binaryValue</a> - A binary data value.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:numberValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_numberValue</a> - A number data value.
--   
--   <a>$sel:datetimeValue:TypedAttributeValue'</a>,
--   <a>typedAttributeValue_datetimeValue</a> - A date and time value.
newTypedAttributeValue :: TypedAttributeValue

-- | A range of attribute values. For more information, see <a>Range
--   Filters</a>.
--   
--   <i>See:</i> <a>newTypedAttributeValueRange</a> smart constructor.
data TypedAttributeValueRange
TypedAttributeValueRange' :: Maybe TypedAttributeValue -> Maybe TypedAttributeValue -> RangeMode -> RangeMode -> TypedAttributeValueRange

-- | Create a value of <a>TypedAttributeValueRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endValue:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_endValue</a> - The attribute value to
--   terminate the range at.
--   
--   <a>$sel:startValue:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_startValue</a> - The value to start the
--   range at.
--   
--   <a>$sel:startMode:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_startMode</a> - The inclusive or exclusive
--   range start.
--   
--   <a>$sel:endMode:TypedAttributeValueRange'</a>,
--   <a>typedAttributeValueRange_endMode</a> - The inclusive or exclusive
--   range end.
newTypedAttributeValueRange :: RangeMode -> RangeMode -> TypedAttributeValueRange

-- | A typed link attribute definition.
--   
--   <i>See:</i> <a>newTypedLinkAttributeDefinition</a> smart constructor.
data TypedLinkAttributeDefinition
TypedLinkAttributeDefinition' :: Maybe Bool -> Maybe (HashMap Text Rule) -> Maybe TypedAttributeValue -> Text -> FacetAttributeType -> RequiredAttributeBehavior -> TypedLinkAttributeDefinition

-- | Create a value of <a>TypedLinkAttributeDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isImmutable:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_isImmutable</a> - Whether the
--   attribute is mutable or not.
--   
--   <a>$sel:rules:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_rules</a> - Validation rules that are
--   attached to the attribute definition.
--   
--   <a>$sel:defaultValue:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_defaultValue</a> - The default value
--   of the attribute (if configured).
--   
--   <a>$sel:name:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_name</a> - The unique name of the
--   typed link attribute.
--   
--   <a>$sel:type':TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_type</a> - The type of the attribute.
--   
--   <a>$sel:requiredBehavior:TypedLinkAttributeDefinition'</a>,
--   <a>typedLinkAttributeDefinition_requiredBehavior</a> - The required
--   behavior of the <tt>TypedLinkAttributeDefinition</tt>.
newTypedLinkAttributeDefinition :: Text -> FacetAttributeType -> RequiredAttributeBehavior -> TypedLinkAttributeDefinition

-- | Identifies the range of attributes that are used by a specified
--   filter.
--   
--   <i>See:</i> <a>newTypedLinkAttributeRange</a> smart constructor.
data TypedLinkAttributeRange
TypedLinkAttributeRange' :: Maybe Text -> TypedAttributeValueRange -> TypedLinkAttributeRange

-- | Create a value of <a>TypedLinkAttributeRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:TypedLinkAttributeRange'</a>,
--   <a>typedLinkAttributeRange_attributeName</a> - The unique name of the
--   typed link attribute.
--   
--   <a>$sel:range:TypedLinkAttributeRange'</a>,
--   <a>typedLinkAttributeRange_range</a> - The range of attribute values
--   that are being selected.
newTypedLinkAttributeRange :: TypedAttributeValueRange -> TypedLinkAttributeRange

-- | Defines the typed links structure and its attributes. To create a
--   typed link facet, use the CreateTypedLinkFacet API.
--   
--   <i>See:</i> <a>newTypedLinkFacet</a> smart constructor.
data TypedLinkFacet
TypedLinkFacet' :: Text -> [TypedLinkAttributeDefinition] -> [Text] -> TypedLinkFacet

-- | Create a value of <a>TypedLinkFacet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TypedLinkFacet'</a>, <a>typedLinkFacet_name</a> - The
--   unique name of the typed link facet.
--   
--   <a>$sel:attributes:TypedLinkFacet'</a>,
--   <a>typedLinkFacet_attributes</a> - A set of key-value pairs associated
--   with the typed link. Typed link attributes are used when you have data
--   values that are related to the link itself, and not to one of the two
--   objects being linked. Identity attributes also serve to distinguish
--   the link from others of the same type between the same objects.
--   
--   <a>$sel:identityAttributeOrder:TypedLinkFacet'</a>,
--   <a>typedLinkFacet_identityAttributeOrder</a> - The set of attributes
--   that distinguish links made from this facet from each other, in the
--   order of significance. Listing typed links can filter on the values of
--   these attributes. See ListOutgoingTypedLinks and
--   ListIncomingTypedLinks for details.
newTypedLinkFacet :: Text -> TypedLinkFacet

-- | A typed link facet attribute update.
--   
--   <i>See:</i> <a>newTypedLinkFacetAttributeUpdate</a> smart constructor.
data TypedLinkFacetAttributeUpdate
TypedLinkFacetAttributeUpdate' :: TypedLinkAttributeDefinition -> UpdateActionType -> TypedLinkFacetAttributeUpdate

-- | Create a value of <a>TypedLinkFacetAttributeUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:TypedLinkFacetAttributeUpdate'</a>,
--   <a>typedLinkFacetAttributeUpdate_attribute</a> - The attribute to
--   update.
--   
--   <a>$sel:action:TypedLinkFacetAttributeUpdate'</a>,
--   <a>typedLinkFacetAttributeUpdate_action</a> - The action to perform
--   when updating the attribute.
newTypedLinkFacetAttributeUpdate :: TypedLinkAttributeDefinition -> UpdateActionType -> TypedLinkFacetAttributeUpdate

-- | Identifies the schema Amazon Resource Name (ARN) and facet name for
--   the typed link.
--   
--   <i>See:</i> <a>newTypedLinkSchemaAndFacetName</a> smart constructor.
data TypedLinkSchemaAndFacetName
TypedLinkSchemaAndFacetName' :: Text -> Text -> TypedLinkSchemaAndFacetName

-- | Create a value of <a>TypedLinkSchemaAndFacetName</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:TypedLinkSchemaAndFacetName'</a>,
--   <a>typedLinkSchemaAndFacetName_schemaArn</a> - The Amazon Resource
--   Name (ARN) that is associated with the schema. For more information,
--   see arns.
--   
--   <a>$sel:typedLinkName:TypedLinkSchemaAndFacetName'</a>,
--   <a>typedLinkSchemaAndFacetName_typedLinkName</a> - The unique name of
--   the typed link facet.
newTypedLinkSchemaAndFacetName :: Text -> Text -> TypedLinkSchemaAndFacetName

-- | Contains all the information that is used to uniquely identify a typed
--   link. The parameters discussed in this topic are used to uniquely
--   specify the typed link being operated on. The AttachTypedLink API
--   returns a typed link specifier while the DetachTypedLink API accepts
--   one as input. Similarly, the ListIncomingTypedLinks and
--   ListOutgoingTypedLinks API operations provide typed link specifiers as
--   output. You can also construct a typed link specifier from scratch.
--   
--   <i>See:</i> <a>newTypedLinkSpecifier</a> smart constructor.
data TypedLinkSpecifier
TypedLinkSpecifier' :: TypedLinkSchemaAndFacetName -> ObjectReference -> ObjectReference -> [AttributeNameAndValue] -> TypedLinkSpecifier

-- | Create a value of <a>TypedLinkSpecifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typedLinkFacet:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_typedLinkFacet</a> - Identifies the typed link
--   facet that is associated with the typed link.
--   
--   <a>$sel:sourceObjectReference:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_sourceObjectReference</a> - Identifies the
--   source object that the typed link will attach to.
--   
--   <a>$sel:targetObjectReference:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_targetObjectReference</a> - Identifies the
--   target object that the typed link will attach to.
--   
--   <a>$sel:identityAttributeValues:TypedLinkSpecifier'</a>,
--   <a>typedLinkSpecifier_identityAttributeValues</a> - Identifies the
--   attribute value to update.
newTypedLinkSpecifier :: TypedLinkSchemaAndFacetName -> ObjectReference -> ObjectReference -> TypedLinkSpecifier
