-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-appstreamZSamazonka-appstream
@version 1.6.1


module Network.AWS.AppStream.Types.AccessEndpointType
newtype AccessEndpointType
AccessEndpointType' :: Text -> AccessEndpointType
[fromAccessEndpointType] :: AccessEndpointType -> Text
pattern AccessEndpointType_STREAMING :: AccessEndpointType
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance GHC.Classes.Ord Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance GHC.Classes.Eq Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance GHC.Read.Read Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType
instance GHC.Show.Show Network.AWS.AppStream.Types.AccessEndpointType.AccessEndpointType


module Network.AWS.AppStream.Types.AccessEndpoint

-- | Describes an interface VPC endpoint (interface endpoint) that lets you
--   create a private connection between the virtual private cloud (VPC)
--   that you specify and AppStream 2.0. When you specify an interface
--   endpoint for a stack, users of the stack can connect to AppStream 2.0
--   only through that endpoint. When you specify an interface endpoint for
--   an image builder, administrators can connect to the image builder only
--   through that endpoint.
--   
--   <i>See:</i> <a>newAccessEndpoint</a> smart constructor.
data AccessEndpoint
AccessEndpoint' :: Maybe Text -> AccessEndpointType -> AccessEndpoint

-- | The identifier (ID) of the VPC in which the interface endpoint is
--   used.
[$sel:vpceId:AccessEndpoint'] :: AccessEndpoint -> Maybe Text

-- | The type of interface endpoint.
[$sel:endpointType:AccessEndpoint'] :: AccessEndpoint -> AccessEndpointType

-- | Create a value of <a>AccessEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceId:AccessEndpoint'</a>, <a>accessEndpoint_vpceId</a> - The
--   identifier (ID) of the VPC in which the interface endpoint is used.
--   
--   <a>$sel:endpointType:AccessEndpoint'</a>,
--   <a>accessEndpoint_endpointType</a> - The type of interface endpoint.
newAccessEndpoint :: AccessEndpointType -> AccessEndpoint

-- | The identifier (ID) of the VPC in which the interface endpoint is
--   used.
accessEndpoint_vpceId :: Lens' AccessEndpoint (Maybe Text)

-- | The type of interface endpoint.
accessEndpoint_endpointType :: Lens' AccessEndpoint AccessEndpointType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint
instance GHC.Show.Show Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint
instance GHC.Read.Read Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint
instance GHC.Classes.Eq Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.AccessEndpoint.AccessEndpoint


module Network.AWS.AppStream.Types.Action
newtype Action
Action' :: Text -> Action
[fromAction] :: Action -> Text
pattern Action_CLIPBOARD_COPY_FROM_LOCAL_DEVICE :: Action
pattern Action_CLIPBOARD_COPY_TO_LOCAL_DEVICE :: Action
pattern Action_DOMAIN_PASSWORD_SIGNIN :: Action
pattern Action_DOMAIN_SMART_CARD_SIGNIN :: Action
pattern Action_FILE_DOWNLOAD :: Action
pattern Action_FILE_UPLOAD :: Action
pattern Action_PRINTING_TO_LOCAL_DEVICE :: Action
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.Action.Action
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.Action.Action
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.Action.Action
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.Action.Action
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.Action.Action
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.Action.Action
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.Action.Action
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.Action.Action
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.Action.Action
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.Action.Action
instance GHC.Generics.Generic Network.AWS.AppStream.Types.Action.Action
instance GHC.Classes.Ord Network.AWS.AppStream.Types.Action.Action
instance GHC.Classes.Eq Network.AWS.AppStream.Types.Action.Action
instance GHC.Read.Read Network.AWS.AppStream.Types.Action.Action
instance GHC.Show.Show Network.AWS.AppStream.Types.Action.Action


module Network.AWS.AppStream.Types.Application

-- | Describes an application in the application catalog.
--   
--   <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | The URL for the application icon. This URL might be time-limited.
[$sel:iconURL:Application'] :: Application -> Maybe Text

-- | The path to the application executable in the instance.
[$sel:launchPath:Application'] :: Application -> Maybe Text

-- | Additional attributes that describe the application.
[$sel:metadata:Application'] :: Application -> Maybe (HashMap Text Text)

-- | If there is a problem, the application can be disabled after image
--   creation.
[$sel:enabled:Application'] :: Application -> Maybe Bool

-- | The name of the application.
[$sel:name:Application'] :: Application -> Maybe Text

-- | The arguments that are passed to the application at launch.
[$sel:launchParameters:Application'] :: Application -> Maybe Text

-- | The application name to display.
[$sel:displayName:Application'] :: Application -> Maybe Text

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iconURL:Application'</a>, <a>application_iconURL</a> - The URL
--   for the application icon. This URL might be time-limited.
--   
--   <a>$sel:launchPath:Application'</a>, <a>application_launchPath</a> -
--   The path to the application executable in the instance.
--   
--   <a>$sel:metadata:Application'</a>, <a>application_metadata</a> -
--   Additional attributes that describe the application.
--   
--   <a>$sel:enabled:Application'</a>, <a>application_enabled</a> - If
--   there is a problem, the application can be disabled after image
--   creation.
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The name of
--   the application.
--   
--   <a>$sel:launchParameters:Application'</a>,
--   <a>application_launchParameters</a> - The arguments that are passed to
--   the application at launch.
--   
--   <a>$sel:displayName:Application'</a>, <a>application_displayName</a> -
--   The application name to display.
newApplication :: Application

-- | The URL for the application icon. This URL might be time-limited.
application_iconURL :: Lens' Application (Maybe Text)

-- | The path to the application executable in the instance.
application_launchPath :: Lens' Application (Maybe Text)

-- | Additional attributes that describe the application.
application_metadata :: Lens' Application (Maybe (HashMap Text Text))

-- | If there is a problem, the application can be disabled after image
--   creation.
application_enabled :: Lens' Application (Maybe Bool)

-- | The name of the application.
application_name :: Lens' Application (Maybe Text)

-- | The arguments that are passed to the application at launch.
application_launchParameters :: Lens' Application (Maybe Text)

-- | The application name to display.
application_displayName :: Lens' Application (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.Application.Application
instance GHC.Show.Show Network.AWS.AppStream.Types.Application.Application
instance GHC.Read.Read Network.AWS.AppStream.Types.Application.Application
instance GHC.Classes.Eq Network.AWS.AppStream.Types.Application.Application
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.Application.Application
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.Application.Application
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.Application.Application


module Network.AWS.AppStream.Types.ApplicationSettings

-- | The persistent application settings for users of a stack.
--   
--   <i>See:</i> <a>newApplicationSettings</a> smart constructor.
data ApplicationSettings
ApplicationSettings' :: Maybe Text -> Bool -> ApplicationSettings

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored. You can allow the same persistent application
--   settings to be used across multiple stacks by specifying the same
--   settings group for each stack.
[$sel:settingsGroup:ApplicationSettings'] :: ApplicationSettings -> Maybe Text

-- | Enables or disables persistent application settings for users during
--   their streaming sessions.
[$sel:enabled:ApplicationSettings'] :: ApplicationSettings -> Bool

-- | Create a value of <a>ApplicationSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settingsGroup:ApplicationSettings'</a>,
--   <a>applicationSettings_settingsGroup</a> - The path prefix for the S3
--   bucket where users’ persistent application settings are stored. You
--   can allow the same persistent application settings to be used across
--   multiple stacks by specifying the same settings group for each stack.
--   
--   <a>$sel:enabled:ApplicationSettings'</a>,
--   <a>applicationSettings_enabled</a> - Enables or disables persistent
--   application settings for users during their streaming sessions.
newApplicationSettings :: Bool -> ApplicationSettings

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored. You can allow the same persistent application
--   settings to be used across multiple stacks by specifying the same
--   settings group for each stack.
applicationSettings_settingsGroup :: Lens' ApplicationSettings (Maybe Text)

-- | Enables or disables persistent application settings for users during
--   their streaming sessions.
applicationSettings_enabled :: Lens' ApplicationSettings Bool
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ApplicationSettings.ApplicationSettings
instance GHC.Show.Show Network.AWS.AppStream.Types.ApplicationSettings.ApplicationSettings
instance GHC.Read.Read Network.AWS.AppStream.Types.ApplicationSettings.ApplicationSettings
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ApplicationSettings.ApplicationSettings
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ApplicationSettings.ApplicationSettings
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ApplicationSettings.ApplicationSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ApplicationSettings.ApplicationSettings


module Network.AWS.AppStream.Types.ApplicationSettingsResponse

-- | Describes the persistent application settings for users of a stack.
--   
--   <i>See:</i> <a>newApplicationSettingsResponse</a> smart constructor.
data ApplicationSettingsResponse
ApplicationSettingsResponse' :: Maybe Bool -> Maybe Text -> Maybe Text -> ApplicationSettingsResponse

-- | Specifies whether persistent application settings are enabled for
--   users during their streaming sessions.
[$sel:enabled:ApplicationSettingsResponse'] :: ApplicationSettingsResponse -> Maybe Bool

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored.
[$sel:settingsGroup:ApplicationSettingsResponse'] :: ApplicationSettingsResponse -> Maybe Text

-- | The S3 bucket where users’ persistent application settings are stored.
--   When persistent application settings are enabled for the first time
--   for an account in an AWS Region, an S3 bucket is created. The bucket
--   is unique to the AWS account and the Region.
[$sel:s3BucketName:ApplicationSettingsResponse'] :: ApplicationSettingsResponse -> Maybe Text

-- | Create a value of <a>ApplicationSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_enabled</a> - Specifies whether
--   persistent application settings are enabled for users during their
--   streaming sessions.
--   
--   <a>$sel:settingsGroup:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_settingsGroup</a> - The path prefix for
--   the S3 bucket where users’ persistent application settings are stored.
--   
--   <a>$sel:s3BucketName:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_s3BucketName</a> - The S3 bucket where
--   users’ persistent application settings are stored. When persistent
--   application settings are enabled for the first time for an account in
--   an AWS Region, an S3 bucket is created. The bucket is unique to the
--   AWS account and the Region.
newApplicationSettingsResponse :: ApplicationSettingsResponse

-- | Specifies whether persistent application settings are enabled for
--   users during their streaming sessions.
applicationSettingsResponse_enabled :: Lens' ApplicationSettingsResponse (Maybe Bool)

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored.
applicationSettingsResponse_settingsGroup :: Lens' ApplicationSettingsResponse (Maybe Text)

-- | The S3 bucket where users’ persistent application settings are stored.
--   When persistent application settings are enabled for the first time
--   for an account in an AWS Region, an S3 bucket is created. The bucket
--   is unique to the AWS account and the Region.
applicationSettingsResponse_s3BucketName :: Lens' ApplicationSettingsResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ApplicationSettingsResponse.ApplicationSettingsResponse
instance GHC.Show.Show Network.AWS.AppStream.Types.ApplicationSettingsResponse.ApplicationSettingsResponse
instance GHC.Read.Read Network.AWS.AppStream.Types.ApplicationSettingsResponse.ApplicationSettingsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ApplicationSettingsResponse.ApplicationSettingsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ApplicationSettingsResponse.ApplicationSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ApplicationSettingsResponse.ApplicationSettingsResponse
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ApplicationSettingsResponse.ApplicationSettingsResponse


module Network.AWS.AppStream.Types.AuthenticationType
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_API :: AuthenticationType
pattern AuthenticationType_SAML :: AuthenticationType
pattern AuthenticationType_USERPOOL :: AuthenticationType
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance GHC.Classes.Ord Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance GHC.Classes.Eq Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance GHC.Read.Read Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType
instance GHC.Show.Show Network.AWS.AppStream.Types.AuthenticationType.AuthenticationType


module Network.AWS.AppStream.Types.ComputeCapacity

-- | Describes the capacity for a fleet.
--   
--   <i>See:</i> <a>newComputeCapacity</a> smart constructor.
data ComputeCapacity
ComputeCapacity' :: Int -> ComputeCapacity

-- | The desired number of streaming instances.
[$sel:desiredInstances:ComputeCapacity'] :: ComputeCapacity -> Int

-- | Create a value of <a>ComputeCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:desiredInstances:ComputeCapacity'</a>,
--   <a>computeCapacity_desiredInstances</a> - The desired number of
--   streaming instances.
newComputeCapacity :: Int -> ComputeCapacity

-- | The desired number of streaming instances.
computeCapacity_desiredInstances :: Lens' ComputeCapacity Int
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ComputeCapacity.ComputeCapacity
instance GHC.Show.Show Network.AWS.AppStream.Types.ComputeCapacity.ComputeCapacity
instance GHC.Read.Read Network.AWS.AppStream.Types.ComputeCapacity.ComputeCapacity
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ComputeCapacity.ComputeCapacity
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ComputeCapacity.ComputeCapacity
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ComputeCapacity.ComputeCapacity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ComputeCapacity.ComputeCapacity


module Network.AWS.AppStream.Types.ComputeCapacityStatus

-- | Describes the capacity status for a fleet.
--   
--   <i>See:</i> <a>newComputeCapacityStatus</a> smart constructor.
data ComputeCapacityStatus
ComputeCapacityStatus' :: Maybe Int -> Maybe Int -> Maybe Int -> Int -> ComputeCapacityStatus

-- | The total number of simultaneous streaming instances that are running.
[$sel:running:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Maybe Int

-- | The number of currently available instances that can be used to stream
--   sessions.
[$sel:available:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Maybe Int

-- | The number of instances in use for streaming.
[$sel:inUse:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Maybe Int

-- | The desired number of streaming instances.
[$sel:desired:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Int

-- | Create a value of <a>ComputeCapacityStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:running:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_running</a> - The total number of
--   simultaneous streaming instances that are running.
--   
--   <a>$sel:available:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_available</a> - The number of currently
--   available instances that can be used to stream sessions.
--   
--   <a>$sel:inUse:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_inUse</a> - The number of instances in use
--   for streaming.
--   
--   <a>$sel:desired:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_desired</a> - The desired number of streaming
--   instances.
newComputeCapacityStatus :: Int -> ComputeCapacityStatus

-- | The total number of simultaneous streaming instances that are running.
computeCapacityStatus_running :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The number of currently available instances that can be used to stream
--   sessions.
computeCapacityStatus_available :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The number of instances in use for streaming.
computeCapacityStatus_inUse :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The desired number of streaming instances.
computeCapacityStatus_desired :: Lens' ComputeCapacityStatus Int
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ComputeCapacityStatus.ComputeCapacityStatus
instance GHC.Show.Show Network.AWS.AppStream.Types.ComputeCapacityStatus.ComputeCapacityStatus
instance GHC.Read.Read Network.AWS.AppStream.Types.ComputeCapacityStatus.ComputeCapacityStatus
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ComputeCapacityStatus.ComputeCapacityStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ComputeCapacityStatus.ComputeCapacityStatus
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ComputeCapacityStatus.ComputeCapacityStatus
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ComputeCapacityStatus.ComputeCapacityStatus


module Network.AWS.AppStream.Types.DomainJoinInfo

-- | Describes the configuration information required to join fleets and
--   image builders to Microsoft Active Directory domains.
--   
--   <i>See:</i> <a>newDomainJoinInfo</a> smart constructor.
data DomainJoinInfo
DomainJoinInfo' :: Maybe Text -> Maybe Text -> DomainJoinInfo

-- | The distinguished name of the organizational unit for computer
--   accounts.
[$sel:organizationalUnitDistinguishedName:DomainJoinInfo'] :: DomainJoinInfo -> Maybe Text

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
[$sel:directoryName:DomainJoinInfo'] :: DomainJoinInfo -> Maybe Text

-- | Create a value of <a>DomainJoinInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationalUnitDistinguishedName:DomainJoinInfo'</a>,
--   <a>domainJoinInfo_organizationalUnitDistinguishedName</a> - The
--   distinguished name of the organizational unit for computer accounts.
--   
--   <a>$sel:directoryName:DomainJoinInfo'</a>,
--   <a>domainJoinInfo_directoryName</a> - The fully qualified name of the
--   directory (for example, corp.example.com).
newDomainJoinInfo :: DomainJoinInfo

-- | The distinguished name of the organizational unit for computer
--   accounts.
domainJoinInfo_organizationalUnitDistinguishedName :: Lens' DomainJoinInfo (Maybe Text)

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
domainJoinInfo_directoryName :: Lens' DomainJoinInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo
instance GHC.Show.Show Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo
instance GHC.Read.Read Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo
instance GHC.Classes.Eq Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.DomainJoinInfo.DomainJoinInfo


module Network.AWS.AppStream.Types.FleetAttribute

-- | The fleet attribute.
newtype FleetAttribute
FleetAttribute' :: Text -> FleetAttribute
[fromFleetAttribute] :: FleetAttribute -> Text
pattern FleetAttribute_DOMAIN_JOIN_INFO :: FleetAttribute
pattern FleetAttribute_IAM_ROLE_ARN :: FleetAttribute
pattern FleetAttribute_VPC_CONFIGURATION :: FleetAttribute
pattern FleetAttribute_VPC_CONFIGURATION_SECURITY_GROUP_IDS :: FleetAttribute
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance GHC.Generics.Generic Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance GHC.Classes.Ord Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance GHC.Classes.Eq Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance GHC.Read.Read Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute
instance GHC.Show.Show Network.AWS.AppStream.Types.FleetAttribute.FleetAttribute


module Network.AWS.AppStream.Types.FleetErrorCode
newtype FleetErrorCode
FleetErrorCode' :: Text -> FleetErrorCode
[fromFleetErrorCode] :: FleetErrorCode -> Text
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_ACCESS_DENIED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_FILE_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_INVALID_PARAMETER :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_LOGON_FAILURE :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_MORE_DATA :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_NOT_SUPPORTED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_INTERNAL_SERVICE_ERROR :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_PASSWORD_EXPIRED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED :: FleetErrorCode
pattern FleetErrorCode_FLEET_INSTANCE_PROVISIONING_FAILURE :: FleetErrorCode
pattern FleetErrorCode_FLEET_STOPPED :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_IS_MISSING :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IGW_NOT_ATTACHED :: FleetErrorCode
pattern FleetErrorCode_IMAGE_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_INTERNAL_SERVICE_ERROR :: FleetErrorCode
pattern FleetErrorCode_INVALID_SUBNET_CONFIGURATION :: FleetErrorCode
pattern FleetErrorCode_MACHINE_ROLE_IS_MISSING :: FleetErrorCode
pattern FleetErrorCode_NETWORK_INTERFACE_LIMIT_EXCEEDED :: FleetErrorCode
pattern FleetErrorCode_SECURITY_GROUPS_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_STS_DISABLED_IN_REGION :: FleetErrorCode
pattern FleetErrorCode_SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES :: FleetErrorCode
pattern FleetErrorCode_SUBNET_NOT_FOUND :: FleetErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance GHC.Generics.Generic Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance GHC.Classes.Ord Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance GHC.Classes.Eq Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance GHC.Read.Read Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode
instance GHC.Show.Show Network.AWS.AppStream.Types.FleetErrorCode.FleetErrorCode


module Network.AWS.AppStream.Types.FleetError

-- | Describes a fleet error.
--   
--   <i>See:</i> <a>newFleetError</a> smart constructor.
data FleetError
FleetError' :: Maybe Text -> Maybe FleetErrorCode -> FleetError

-- | The error message.
[$sel:errorMessage:FleetError'] :: FleetError -> Maybe Text

-- | The error code.
[$sel:errorCode:FleetError'] :: FleetError -> Maybe FleetErrorCode

-- | Create a value of <a>FleetError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:FleetError'</a>, <a>fleetError_errorMessage</a> -
--   The error message.
--   
--   <a>$sel:errorCode:FleetError'</a>, <a>fleetError_errorCode</a> - The
--   error code.
newFleetError :: FleetError

-- | The error message.
fleetError_errorMessage :: Lens' FleetError (Maybe Text)

-- | The error code.
fleetError_errorCode :: Lens' FleetError (Maybe FleetErrorCode)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.FleetError.FleetError
instance GHC.Show.Show Network.AWS.AppStream.Types.FleetError.FleetError
instance GHC.Read.Read Network.AWS.AppStream.Types.FleetError.FleetError
instance GHC.Classes.Eq Network.AWS.AppStream.Types.FleetError.FleetError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.FleetError.FleetError
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.FleetError.FleetError
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.FleetError.FleetError


module Network.AWS.AppStream.Types.FleetState
newtype FleetState
FleetState' :: Text -> FleetState
[fromFleetState] :: FleetState -> Text
pattern FleetState_RUNNING :: FleetState
pattern FleetState_STARTING :: FleetState
pattern FleetState_STOPPED :: FleetState
pattern FleetState_STOPPING :: FleetState
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.FleetState.FleetState
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.FleetState.FleetState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.FleetState.FleetState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.FleetState.FleetState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.FleetState.FleetState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.FleetState.FleetState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.FleetState.FleetState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.FleetState.FleetState
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.FleetState.FleetState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.FleetState.FleetState
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.FleetState.FleetState
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.FleetState.FleetState
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.FleetState.FleetState
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.FleetState.FleetState
instance GHC.Generics.Generic Network.AWS.AppStream.Types.FleetState.FleetState
instance GHC.Classes.Ord Network.AWS.AppStream.Types.FleetState.FleetState
instance GHC.Classes.Eq Network.AWS.AppStream.Types.FleetState.FleetState
instance GHC.Read.Read Network.AWS.AppStream.Types.FleetState.FleetState
instance GHC.Show.Show Network.AWS.AppStream.Types.FleetState.FleetState


module Network.AWS.AppStream.Types.FleetType
newtype FleetType
FleetType' :: Text -> FleetType
[fromFleetType] :: FleetType -> Text
pattern FleetType_ALWAYS_ON :: FleetType
pattern FleetType_ON_DEMAND :: FleetType
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.FleetType.FleetType
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.FleetType.FleetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.FleetType.FleetType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.FleetType.FleetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.FleetType.FleetType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.FleetType.FleetType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.FleetType.FleetType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.FleetType.FleetType
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.FleetType.FleetType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.FleetType.FleetType
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.FleetType.FleetType
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.FleetType.FleetType
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.FleetType.FleetType
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.FleetType.FleetType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.FleetType.FleetType
instance GHC.Classes.Ord Network.AWS.AppStream.Types.FleetType.FleetType
instance GHC.Classes.Eq Network.AWS.AppStream.Types.FleetType.FleetType
instance GHC.Read.Read Network.AWS.AppStream.Types.FleetType.FleetType
instance GHC.Show.Show Network.AWS.AppStream.Types.FleetType.FleetType


module Network.AWS.AppStream.Types.ImageBuilderState
newtype ImageBuilderState
ImageBuilderState' :: Text -> ImageBuilderState
[fromImageBuilderState] :: ImageBuilderState -> Text
pattern ImageBuilderState_DELETING :: ImageBuilderState
pattern ImageBuilderState_FAILED :: ImageBuilderState
pattern ImageBuilderState_PENDING :: ImageBuilderState
pattern ImageBuilderState_PENDING_QUALIFICATION :: ImageBuilderState
pattern ImageBuilderState_REBOOTING :: ImageBuilderState
pattern ImageBuilderState_RUNNING :: ImageBuilderState
pattern ImageBuilderState_SNAPSHOTTING :: ImageBuilderState
pattern ImageBuilderState_STOPPED :: ImageBuilderState
pattern ImageBuilderState_STOPPING :: ImageBuilderState
pattern ImageBuilderState_UPDATING :: ImageBuilderState
pattern ImageBuilderState_UPDATING_AGENT :: ImageBuilderState
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance GHC.Classes.Ord Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance GHC.Read.Read Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState
instance GHC.Show.Show Network.AWS.AppStream.Types.ImageBuilderState.ImageBuilderState


module Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode
newtype ImageBuilderStateChangeReasonCode
ImageBuilderStateChangeReasonCode' :: Text -> ImageBuilderStateChangeReasonCode
[fromImageBuilderStateChangeReasonCode] :: ImageBuilderStateChangeReasonCode -> Text
pattern ImageBuilderStateChangeReasonCode_IMAGE_UNAVAILABLE :: ImageBuilderStateChangeReasonCode
pattern ImageBuilderStateChangeReasonCode_INTERNAL_ERROR :: ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance GHC.Classes.Ord Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance GHC.Read.Read Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode
instance GHC.Show.Show Network.AWS.AppStream.Types.ImageBuilderStateChangeReasonCode.ImageBuilderStateChangeReasonCode


module Network.AWS.AppStream.Types.ImageBuilderStateChangeReason

-- | Describes the reason why the last image builder state change occurred.
--   
--   <i>See:</i> <a>newImageBuilderStateChangeReason</a> smart constructor.
data ImageBuilderStateChangeReason
ImageBuilderStateChangeReason' :: Maybe Text -> Maybe ImageBuilderStateChangeReasonCode -> ImageBuilderStateChangeReason

-- | The state change reason message.
[$sel:message:ImageBuilderStateChangeReason'] :: ImageBuilderStateChangeReason -> Maybe Text

-- | The state change reason code.
[$sel:code:ImageBuilderStateChangeReason'] :: ImageBuilderStateChangeReason -> Maybe ImageBuilderStateChangeReasonCode

-- | Create a value of <a>ImageBuilderStateChangeReason</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ImageBuilderStateChangeReason'</a>,
--   <a>imageBuilderStateChangeReason_message</a> - The state change reason
--   message.
--   
--   <a>$sel:code:ImageBuilderStateChangeReason'</a>,
--   <a>imageBuilderStateChangeReason_code</a> - The state change reason
--   code.
newImageBuilderStateChangeReason :: ImageBuilderStateChangeReason

-- | The state change reason message.
imageBuilderStateChangeReason_message :: Lens' ImageBuilderStateChangeReason (Maybe Text)

-- | The state change reason code.
imageBuilderStateChangeReason_code :: Lens' ImageBuilderStateChangeReason (Maybe ImageBuilderStateChangeReasonCode)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImageBuilderStateChangeReason.ImageBuilderStateChangeReason
instance GHC.Show.Show Network.AWS.AppStream.Types.ImageBuilderStateChangeReason.ImageBuilderStateChangeReason
instance GHC.Read.Read Network.AWS.AppStream.Types.ImageBuilderStateChangeReason.ImageBuilderStateChangeReason
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImageBuilderStateChangeReason.ImageBuilderStateChangeReason
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImageBuilderStateChangeReason.ImageBuilderStateChangeReason
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImageBuilderStateChangeReason.ImageBuilderStateChangeReason
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImageBuilderStateChangeReason.ImageBuilderStateChangeReason


module Network.AWS.AppStream.Types.ImagePermissions

-- | Describes the permissions for an image.
--   
--   <i>See:</i> <a>newImagePermissions</a> smart constructor.
data ImagePermissions
ImagePermissions' :: Maybe Bool -> Maybe Bool -> ImagePermissions

-- | Indicates whether the image can be used for an image builder.
[$sel:allowImageBuilder:ImagePermissions'] :: ImagePermissions -> Maybe Bool

-- | Indicates whether the image can be used for a fleet.
[$sel:allowFleet:ImagePermissions'] :: ImagePermissions -> Maybe Bool

-- | Create a value of <a>ImagePermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowImageBuilder:ImagePermissions'</a>,
--   <a>imagePermissions_allowImageBuilder</a> - Indicates whether the
--   image can be used for an image builder.
--   
--   <a>$sel:allowFleet:ImagePermissions'</a>,
--   <a>imagePermissions_allowFleet</a> - Indicates whether the image can
--   be used for a fleet.
newImagePermissions :: ImagePermissions

-- | Indicates whether the image can be used for an image builder.
imagePermissions_allowImageBuilder :: Lens' ImagePermissions (Maybe Bool)

-- | Indicates whether the image can be used for a fleet.
imagePermissions_allowFleet :: Lens' ImagePermissions (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions
instance GHC.Show.Show Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions
instance GHC.Read.Read Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ImagePermissions.ImagePermissions


module Network.AWS.AppStream.Types.ImageState
newtype ImageState
ImageState' :: Text -> ImageState
[fromImageState] :: ImageState -> Text
pattern ImageState_AVAILABLE :: ImageState
pattern ImageState_COPYING :: ImageState
pattern ImageState_CREATING :: ImageState
pattern ImageState_DELETING :: ImageState
pattern ImageState_FAILED :: ImageState
pattern ImageState_IMPORTING :: ImageState
pattern ImageState_PENDING :: ImageState
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.ImageState.ImageState
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.ImageState.ImageState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.ImageState.ImageState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ImageState.ImageState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.ImageState.ImageState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImageState.ImageState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.ImageState.ImageState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.ImageState.ImageState
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.ImageState.ImageState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.ImageState.ImageState
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.ImageState.ImageState
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.ImageState.ImageState
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImageState.ImageState
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImageState.ImageState
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImageState.ImageState
instance GHC.Classes.Ord Network.AWS.AppStream.Types.ImageState.ImageState
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImageState.ImageState
instance GHC.Read.Read Network.AWS.AppStream.Types.ImageState.ImageState
instance GHC.Show.Show Network.AWS.AppStream.Types.ImageState.ImageState


module Network.AWS.AppStream.Types.ImageStateChangeReasonCode
newtype ImageStateChangeReasonCode
ImageStateChangeReasonCode' :: Text -> ImageStateChangeReasonCode
[fromImageStateChangeReasonCode] :: ImageStateChangeReasonCode -> Text
pattern ImageStateChangeReasonCode_IMAGE_BUILDER_NOT_AVAILABLE :: ImageStateChangeReasonCode
pattern ImageStateChangeReasonCode_IMAGE_COPY_FAILURE :: ImageStateChangeReasonCode
pattern ImageStateChangeReasonCode_INTERNAL_ERROR :: ImageStateChangeReasonCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance GHC.Classes.Ord Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance GHC.Read.Read Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode
instance GHC.Show.Show Network.AWS.AppStream.Types.ImageStateChangeReasonCode.ImageStateChangeReasonCode


module Network.AWS.AppStream.Types.ImageStateChangeReason

-- | Describes the reason why the last image state change occurred.
--   
--   <i>See:</i> <a>newImageStateChangeReason</a> smart constructor.
data ImageStateChangeReason
ImageStateChangeReason' :: Maybe Text -> Maybe ImageStateChangeReasonCode -> ImageStateChangeReason

-- | The state change reason message.
[$sel:message:ImageStateChangeReason'] :: ImageStateChangeReason -> Maybe Text

-- | The state change reason code.
[$sel:code:ImageStateChangeReason'] :: ImageStateChangeReason -> Maybe ImageStateChangeReasonCode

-- | Create a value of <a>ImageStateChangeReason</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ImageStateChangeReason'</a>,
--   <a>imageStateChangeReason_message</a> - The state change reason
--   message.
--   
--   <a>$sel:code:ImageStateChangeReason'</a>,
--   <a>imageStateChangeReason_code</a> - The state change reason code.
newImageStateChangeReason :: ImageStateChangeReason

-- | The state change reason message.
imageStateChangeReason_message :: Lens' ImageStateChangeReason (Maybe Text)

-- | The state change reason code.
imageStateChangeReason_code :: Lens' ImageStateChangeReason (Maybe ImageStateChangeReasonCode)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImageStateChangeReason.ImageStateChangeReason
instance GHC.Show.Show Network.AWS.AppStream.Types.ImageStateChangeReason.ImageStateChangeReason
instance GHC.Read.Read Network.AWS.AppStream.Types.ImageStateChangeReason.ImageStateChangeReason
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImageStateChangeReason.ImageStateChangeReason
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImageStateChangeReason.ImageStateChangeReason
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImageStateChangeReason.ImageStateChangeReason
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImageStateChangeReason.ImageStateChangeReason


module Network.AWS.AppStream.Types.MessageAction
newtype MessageAction
MessageAction' :: Text -> MessageAction
[fromMessageAction] :: MessageAction -> Text
pattern MessageAction_RESEND :: MessageAction
pattern MessageAction_SUPPRESS :: MessageAction
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.MessageAction.MessageAction
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.MessageAction.MessageAction
instance GHC.Generics.Generic Network.AWS.AppStream.Types.MessageAction.MessageAction
instance GHC.Classes.Ord Network.AWS.AppStream.Types.MessageAction.MessageAction
instance GHC.Classes.Eq Network.AWS.AppStream.Types.MessageAction.MessageAction
instance GHC.Read.Read Network.AWS.AppStream.Types.MessageAction.MessageAction
instance GHC.Show.Show Network.AWS.AppStream.Types.MessageAction.MessageAction


module Network.AWS.AppStream.Types.NetworkAccessConfiguration

-- | Describes the network details of the fleet or image builder instance.
--   
--   <i>See:</i> <a>newNetworkAccessConfiguration</a> smart constructor.
data NetworkAccessConfiguration
NetworkAccessConfiguration' :: Maybe Text -> Maybe Text -> NetworkAccessConfiguration

-- | The resource identifier of the elastic network interface that is
--   attached to instances in your VPC. All network interfaces have the
--   eni-xxxxxxxx resource identifier.
[$sel:eniId:NetworkAccessConfiguration'] :: NetworkAccessConfiguration -> Maybe Text

-- | The private IP address of the elastic network interface that is
--   attached to instances in your VPC.
[$sel:eniPrivateIpAddress:NetworkAccessConfiguration'] :: NetworkAccessConfiguration -> Maybe Text

-- | Create a value of <a>NetworkAccessConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eniId:NetworkAccessConfiguration'</a>,
--   <a>networkAccessConfiguration_eniId</a> - The resource identifier of
--   the elastic network interface that is attached to instances in your
--   VPC. All network interfaces have the eni-xxxxxxxx resource identifier.
--   
--   <a>$sel:eniPrivateIpAddress:NetworkAccessConfiguration'</a>,
--   <a>networkAccessConfiguration_eniPrivateIpAddress</a> - The private IP
--   address of the elastic network interface that is attached to instances
--   in your VPC.
newNetworkAccessConfiguration :: NetworkAccessConfiguration

-- | The resource identifier of the elastic network interface that is
--   attached to instances in your VPC. All network interfaces have the
--   eni-xxxxxxxx resource identifier.
networkAccessConfiguration_eniId :: Lens' NetworkAccessConfiguration (Maybe Text)

-- | The private IP address of the elastic network interface that is
--   attached to instances in your VPC.
networkAccessConfiguration_eniPrivateIpAddress :: Lens' NetworkAccessConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.NetworkAccessConfiguration.NetworkAccessConfiguration
instance GHC.Show.Show Network.AWS.AppStream.Types.NetworkAccessConfiguration.NetworkAccessConfiguration
instance GHC.Read.Read Network.AWS.AppStream.Types.NetworkAccessConfiguration.NetworkAccessConfiguration
instance GHC.Classes.Eq Network.AWS.AppStream.Types.NetworkAccessConfiguration.NetworkAccessConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.NetworkAccessConfiguration.NetworkAccessConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.NetworkAccessConfiguration.NetworkAccessConfiguration
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.NetworkAccessConfiguration.NetworkAccessConfiguration


module Network.AWS.AppStream.Types.Permission
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_DISABLED :: Permission
pattern Permission_ENABLED :: Permission
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.Permission.Permission
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.Permission.Permission
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.Permission.Permission
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.Permission.Permission
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.Permission.Permission
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.Permission.Permission
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.Permission.Permission
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.Permission.Permission
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.Permission.Permission
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.Permission.Permission
instance GHC.Generics.Generic Network.AWS.AppStream.Types.Permission.Permission
instance GHC.Classes.Ord Network.AWS.AppStream.Types.Permission.Permission
instance GHC.Classes.Eq Network.AWS.AppStream.Types.Permission.Permission
instance GHC.Read.Read Network.AWS.AppStream.Types.Permission.Permission
instance GHC.Show.Show Network.AWS.AppStream.Types.Permission.Permission


module Network.AWS.AppStream.Types.PlatformType
newtype PlatformType
PlatformType' :: Text -> PlatformType
[fromPlatformType] :: PlatformType -> Text
pattern PlatformType_WINDOWS :: PlatformType
pattern PlatformType_WINDOWS_SERVER_2016 :: PlatformType
pattern PlatformType_WINDOWS_SERVER_2019 :: PlatformType
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.PlatformType.PlatformType
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.PlatformType.PlatformType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.PlatformType.PlatformType
instance GHC.Classes.Ord Network.AWS.AppStream.Types.PlatformType.PlatformType
instance GHC.Classes.Eq Network.AWS.AppStream.Types.PlatformType.PlatformType
instance GHC.Read.Read Network.AWS.AppStream.Types.PlatformType.PlatformType
instance GHC.Show.Show Network.AWS.AppStream.Types.PlatformType.PlatformType


module Network.AWS.AppStream.Types.ResourceError

-- | Describes a resource error.
--   
--   <i>See:</i> <a>newResourceError</a> smart constructor.
data ResourceError
ResourceError' :: Maybe POSIX -> Maybe Text -> Maybe FleetErrorCode -> ResourceError

-- | The time the error occurred.
[$sel:errorTimestamp:ResourceError'] :: ResourceError -> Maybe POSIX

-- | The error message.
[$sel:errorMessage:ResourceError'] :: ResourceError -> Maybe Text

-- | The error code.
[$sel:errorCode:ResourceError'] :: ResourceError -> Maybe FleetErrorCode

-- | Create a value of <a>ResourceError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorTimestamp:ResourceError'</a>,
--   <a>resourceError_errorTimestamp</a> - The time the error occurred.
--   
--   <a>$sel:errorMessage:ResourceError'</a>,
--   <a>resourceError_errorMessage</a> - The error message.
--   
--   <a>$sel:errorCode:ResourceError'</a>, <a>resourceError_errorCode</a> -
--   The error code.
newResourceError :: ResourceError

-- | The time the error occurred.
resourceError_errorTimestamp :: Lens' ResourceError (Maybe UTCTime)

-- | The error message.
resourceError_errorMessage :: Lens' ResourceError (Maybe Text)

-- | The error code.
resourceError_errorCode :: Lens' ResourceError (Maybe FleetErrorCode)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ResourceError.ResourceError
instance GHC.Show.Show Network.AWS.AppStream.Types.ResourceError.ResourceError
instance GHC.Read.Read Network.AWS.AppStream.Types.ResourceError.ResourceError
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ResourceError.ResourceError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ResourceError.ResourceError
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ResourceError.ResourceError
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ResourceError.ResourceError


module Network.AWS.AppStream.Types.ServiceAccountCredentials

-- | Describes the credentials for the service account used by the fleet or
--   image builder to connect to the directory.
--   
--   <i>See:</i> <a>newServiceAccountCredentials</a> smart constructor.
data ServiceAccountCredentials
ServiceAccountCredentials' :: Sensitive Text -> Sensitive Text -> ServiceAccountCredentials

-- | The user name of the account. This account must have the following
--   privileges: create computer objects, join computers to the domain, and
--   change/reset the password on descendant computer objects for the
--   organizational units specified.
[$sel:accountName:ServiceAccountCredentials'] :: ServiceAccountCredentials -> Sensitive Text

-- | The password for the account.
[$sel:accountPassword:ServiceAccountCredentials'] :: ServiceAccountCredentials -> Sensitive Text

-- | Create a value of <a>ServiceAccountCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountName:ServiceAccountCredentials'</a>,
--   <a>serviceAccountCredentials_accountName</a> - The user name of the
--   account. This account must have the following privileges: create
--   computer objects, join computers to the domain, and change/reset the
--   password on descendant computer objects for the organizational units
--   specified.
--   
--   <a>$sel:accountPassword:ServiceAccountCredentials'</a>,
--   <a>serviceAccountCredentials_accountPassword</a> - The password for
--   the account.
newServiceAccountCredentials :: Text -> Text -> ServiceAccountCredentials

-- | The user name of the account. This account must have the following
--   privileges: create computer objects, join computers to the domain, and
--   change/reset the password on descendant computer objects for the
--   organizational units specified.
serviceAccountCredentials_accountName :: Lens' ServiceAccountCredentials Text

-- | The password for the account.
serviceAccountCredentials_accountPassword :: Lens' ServiceAccountCredentials Text
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ServiceAccountCredentials.ServiceAccountCredentials
instance GHC.Show.Show Network.AWS.AppStream.Types.ServiceAccountCredentials.ServiceAccountCredentials
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ServiceAccountCredentials.ServiceAccountCredentials
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ServiceAccountCredentials.ServiceAccountCredentials
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ServiceAccountCredentials.ServiceAccountCredentials
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ServiceAccountCredentials.ServiceAccountCredentials
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.ServiceAccountCredentials.ServiceAccountCredentials


module Network.AWS.AppStream.Types.DirectoryConfig

-- | Describes the configuration information required to join fleets and
--   image builders to Microsoft Active Directory domains.
--   
--   <i>See:</i> <a>newDirectoryConfig</a> smart constructor.
data DirectoryConfig
DirectoryConfig' :: Maybe ServiceAccountCredentials -> Maybe POSIX -> Maybe [Text] -> Text -> DirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
[$sel:serviceAccountCredentials:DirectoryConfig'] :: DirectoryConfig -> Maybe ServiceAccountCredentials

-- | The time the directory configuration was created.
[$sel:createdTime:DirectoryConfig'] :: DirectoryConfig -> Maybe POSIX

-- | The distinguished names of the organizational units for computer
--   accounts.
[$sel:organizationalUnitDistinguishedNames:DirectoryConfig'] :: DirectoryConfig -> Maybe [Text]

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
[$sel:directoryName:DirectoryConfig'] :: DirectoryConfig -> Text

-- | Create a value of <a>DirectoryConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceAccountCredentials:DirectoryConfig'</a>,
--   <a>directoryConfig_serviceAccountCredentials</a> - The credentials for
--   the service account used by the fleet or image builder to connect to
--   the directory.
--   
--   <a>$sel:createdTime:DirectoryConfig'</a>,
--   <a>directoryConfig_createdTime</a> - The time the directory
--   configuration was created.
--   
--   <a>$sel:organizationalUnitDistinguishedNames:DirectoryConfig'</a>,
--   <a>directoryConfig_organizationalUnitDistinguishedNames</a> - The
--   distinguished names of the organizational units for computer accounts.
--   
--   <a>$sel:directoryName:DirectoryConfig'</a>,
--   <a>directoryConfig_directoryName</a> - The fully qualified name of the
--   directory (for example, corp.example.com).
newDirectoryConfig :: Text -> DirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
directoryConfig_serviceAccountCredentials :: Lens' DirectoryConfig (Maybe ServiceAccountCredentials)

-- | The time the directory configuration was created.
directoryConfig_createdTime :: Lens' DirectoryConfig (Maybe UTCTime)

-- | The distinguished names of the organizational units for computer
--   accounts.
directoryConfig_organizationalUnitDistinguishedNames :: Lens' DirectoryConfig (Maybe [Text])

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
directoryConfig_directoryName :: Lens' DirectoryConfig Text
instance GHC.Generics.Generic Network.AWS.AppStream.Types.DirectoryConfig.DirectoryConfig
instance GHC.Show.Show Network.AWS.AppStream.Types.DirectoryConfig.DirectoryConfig
instance GHC.Classes.Eq Network.AWS.AppStream.Types.DirectoryConfig.DirectoryConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.DirectoryConfig.DirectoryConfig
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.DirectoryConfig.DirectoryConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.DirectoryConfig.DirectoryConfig


module Network.AWS.AppStream.Types.SessionConnectionState
newtype SessionConnectionState
SessionConnectionState' :: Text -> SessionConnectionState
[fromSessionConnectionState] :: SessionConnectionState -> Text
pattern SessionConnectionState_CONNECTED :: SessionConnectionState
pattern SessionConnectionState_NOT_CONNECTED :: SessionConnectionState
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance GHC.Generics.Generic Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance GHC.Classes.Ord Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance GHC.Classes.Eq Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance GHC.Read.Read Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState
instance GHC.Show.Show Network.AWS.AppStream.Types.SessionConnectionState.SessionConnectionState


module Network.AWS.AppStream.Types.SessionState

-- | Possible values for the state of a streaming session.
newtype SessionState
SessionState' :: Text -> SessionState
[fromSessionState] :: SessionState -> Text
pattern SessionState_ACTIVE :: SessionState
pattern SessionState_EXPIRED :: SessionState
pattern SessionState_PENDING :: SessionState
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.SessionState.SessionState
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.SessionState.SessionState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.SessionState.SessionState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.SessionState.SessionState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.SessionState.SessionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.SessionState.SessionState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.SessionState.SessionState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.SessionState.SessionState
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.SessionState.SessionState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.SessionState.SessionState
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.SessionState.SessionState
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.SessionState.SessionState
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.SessionState.SessionState
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.SessionState.SessionState
instance GHC.Generics.Generic Network.AWS.AppStream.Types.SessionState.SessionState
instance GHC.Classes.Ord Network.AWS.AppStream.Types.SessionState.SessionState
instance GHC.Classes.Eq Network.AWS.AppStream.Types.SessionState.SessionState
instance GHC.Read.Read Network.AWS.AppStream.Types.SessionState.SessionState
instance GHC.Show.Show Network.AWS.AppStream.Types.SessionState.SessionState


module Network.AWS.AppStream.Types.Session

-- | Describes a streaming session.
--   
--   <i>See:</i> <a>newSession</a> smart constructor.
data Session
Session' :: Maybe SessionConnectionState -> Maybe POSIX -> Maybe NetworkAccessConfiguration -> Maybe AuthenticationType -> Maybe POSIX -> Text -> Text -> Text -> Text -> SessionState -> Session

-- | Specifies whether a user is connected to the streaming session.
[$sel:connectionState:Session'] :: Session -> Maybe SessionConnectionState

-- | The time when a streaming instance is dedicated for the user.
[$sel:startTime:Session'] :: Session -> Maybe POSIX

-- | The network details for the streaming session.
[$sel:networkAccessConfiguration:Session'] :: Session -> Maybe NetworkAccessConfiguration

-- | The authentication method. The user is authenticated using a streaming
--   URL (<tt>API</tt>) or SAML 2.0 federation (<tt>SAML</tt>).
[$sel:authenticationType:Session'] :: Session -> Maybe AuthenticationType

-- | The time when the streaming session is set to expire. This time is
--   based on the <tt>MaxUserDurationinSeconds</tt> value, which determines
--   the maximum length of time that a streaming session can run. A
--   streaming session might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
[$sel:maxExpirationTime:Session'] :: Session -> Maybe POSIX

-- | The identifier of the streaming session.
[$sel:id:Session'] :: Session -> Text

-- | The identifier of the user for whom the session was created.
[$sel:userId:Session'] :: Session -> Text

-- | The name of the stack for the streaming session.
[$sel:stackName:Session'] :: Session -> Text

-- | The name of the fleet for the streaming session.
[$sel:fleetName:Session'] :: Session -> Text

-- | The current state of the streaming session.
[$sel:state:Session'] :: Session -> SessionState

-- | Create a value of <a>Session</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionState:Session'</a>, <a>session_connectionState</a> -
--   Specifies whether a user is connected to the streaming session.
--   
--   <a>$sel:startTime:Session'</a>, <a>session_startTime</a> - The time
--   when a streaming instance is dedicated for the user.
--   
--   <a>$sel:networkAccessConfiguration:Session'</a>,
--   <a>session_networkAccessConfiguration</a> - The network details for
--   the streaming session.
--   
--   <a>$sel:authenticationType:Session'</a>,
--   <a>session_authenticationType</a> - The authentication method. The
--   user is authenticated using a streaming URL (<tt>API</tt>) or SAML 2.0
--   federation (<tt>SAML</tt>).
--   
--   <a>$sel:maxExpirationTime:Session'</a>,
--   <a>session_maxExpirationTime</a> - The time when the streaming session
--   is set to expire. This time is based on the
--   <tt>MaxUserDurationinSeconds</tt> value, which determines the maximum
--   length of time that a streaming session can run. A streaming session
--   might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
--   
--   <a>$sel:id:Session'</a>, <a>session_id</a> - The identifier of the
--   streaming session.
--   
--   <a>$sel:userId:Session'</a>, <a>session_userId</a> - The identifier of
--   the user for whom the session was created.
--   
--   <a>$sel:stackName:Session'</a>, <a>session_stackName</a> - The name of
--   the stack for the streaming session.
--   
--   <a>$sel:fleetName:Session'</a>, <a>session_fleetName</a> - The name of
--   the fleet for the streaming session.
--   
--   <a>$sel:state:Session'</a>, <a>session_state</a> - The current state
--   of the streaming session.
newSession :: Text -> Text -> Text -> Text -> SessionState -> Session

-- | Specifies whether a user is connected to the streaming session.
session_connectionState :: Lens' Session (Maybe SessionConnectionState)

-- | The time when a streaming instance is dedicated for the user.
session_startTime :: Lens' Session (Maybe UTCTime)

-- | The network details for the streaming session.
session_networkAccessConfiguration :: Lens' Session (Maybe NetworkAccessConfiguration)

-- | The authentication method. The user is authenticated using a streaming
--   URL (<tt>API</tt>) or SAML 2.0 federation (<tt>SAML</tt>).
session_authenticationType :: Lens' Session (Maybe AuthenticationType)

-- | The time when the streaming session is set to expire. This time is
--   based on the <tt>MaxUserDurationinSeconds</tt> value, which determines
--   the maximum length of time that a streaming session can run. A
--   streaming session might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
session_maxExpirationTime :: Lens' Session (Maybe UTCTime)

-- | The identifier of the streaming session.
session_id :: Lens' Session Text

-- | The identifier of the user for whom the session was created.
session_userId :: Lens' Session Text

-- | The name of the stack for the streaming session.
session_stackName :: Lens' Session Text

-- | The name of the fleet for the streaming session.
session_fleetName :: Lens' Session Text

-- | The current state of the streaming session.
session_state :: Lens' Session SessionState
instance GHC.Generics.Generic Network.AWS.AppStream.Types.Session.Session
instance GHC.Show.Show Network.AWS.AppStream.Types.Session.Session
instance GHC.Read.Read Network.AWS.AppStream.Types.Session.Session
instance GHC.Classes.Eq Network.AWS.AppStream.Types.Session.Session
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.Session.Session
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.Session.Session
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.Session.Session


module Network.AWS.AppStream.Types.SharedImagePermissions

-- | Describes the permissions that are available to the specified AWS
--   account for a shared image.
--   
--   <i>See:</i> <a>newSharedImagePermissions</a> smart constructor.
data SharedImagePermissions
SharedImagePermissions' :: Text -> ImagePermissions -> SharedImagePermissions

-- | The 12-digit identifier of the AWS account with which the image is
--   shared.
[$sel:sharedAccountId:SharedImagePermissions'] :: SharedImagePermissions -> Text

-- | Describes the permissions for a shared image.
[$sel:imagePermissions:SharedImagePermissions'] :: SharedImagePermissions -> ImagePermissions

-- | Create a value of <a>SharedImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sharedAccountId:SharedImagePermissions'</a>,
--   <a>sharedImagePermissions_sharedAccountId</a> - The 12-digit
--   identifier of the AWS account with which the image is shared.
--   
--   <a>$sel:imagePermissions:SharedImagePermissions'</a>,
--   <a>sharedImagePermissions_imagePermissions</a> - Describes the
--   permissions for a shared image.
newSharedImagePermissions :: Text -> ImagePermissions -> SharedImagePermissions

-- | The 12-digit identifier of the AWS account with which the image is
--   shared.
sharedImagePermissions_sharedAccountId :: Lens' SharedImagePermissions Text

-- | Describes the permissions for a shared image.
sharedImagePermissions_imagePermissions :: Lens' SharedImagePermissions ImagePermissions
instance GHC.Generics.Generic Network.AWS.AppStream.Types.SharedImagePermissions.SharedImagePermissions
instance GHC.Show.Show Network.AWS.AppStream.Types.SharedImagePermissions.SharedImagePermissions
instance GHC.Read.Read Network.AWS.AppStream.Types.SharedImagePermissions.SharedImagePermissions
instance GHC.Classes.Eq Network.AWS.AppStream.Types.SharedImagePermissions.SharedImagePermissions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.SharedImagePermissions.SharedImagePermissions
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.SharedImagePermissions.SharedImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.SharedImagePermissions.SharedImagePermissions


module Network.AWS.AppStream.Types.StackAttribute
newtype StackAttribute
StackAttribute' :: Text -> StackAttribute
[fromStackAttribute] :: StackAttribute -> Text
pattern StackAttribute_ACCESS_ENDPOINTS :: StackAttribute
pattern StackAttribute_EMBED_HOST_DOMAINS :: StackAttribute
pattern StackAttribute_FEEDBACK_URL :: StackAttribute
pattern StackAttribute_IAM_ROLE_ARN :: StackAttribute
pattern StackAttribute_REDIRECT_URL :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTORS :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_GOOGLE_DRIVE :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_HOMEFOLDERS :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_ONE_DRIVE :: StackAttribute
pattern StackAttribute_THEME_NAME :: StackAttribute
pattern StackAttribute_USER_SETTINGS :: StackAttribute
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance GHC.Generics.Generic Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance GHC.Classes.Ord Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance GHC.Classes.Eq Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance GHC.Read.Read Network.AWS.AppStream.Types.StackAttribute.StackAttribute
instance GHC.Show.Show Network.AWS.AppStream.Types.StackAttribute.StackAttribute


module Network.AWS.AppStream.Types.StackErrorCode
newtype StackErrorCode
StackErrorCode' :: Text -> StackErrorCode
[fromStackErrorCode] :: StackErrorCode -> Text
pattern StackErrorCode_INTERNAL_SERVICE_ERROR :: StackErrorCode
pattern StackErrorCode_STORAGE_CONNECTOR_ERROR :: StackErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance GHC.Generics.Generic Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance GHC.Classes.Ord Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance GHC.Classes.Eq Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance GHC.Read.Read Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode
instance GHC.Show.Show Network.AWS.AppStream.Types.StackErrorCode.StackErrorCode


module Network.AWS.AppStream.Types.StackError

-- | Describes a stack error.
--   
--   <i>See:</i> <a>newStackError</a> smart constructor.
data StackError
StackError' :: Maybe Text -> Maybe StackErrorCode -> StackError

-- | The error message.
[$sel:errorMessage:StackError'] :: StackError -> Maybe Text

-- | The error code.
[$sel:errorCode:StackError'] :: StackError -> Maybe StackErrorCode

-- | Create a value of <a>StackError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:StackError'</a>, <a>stackError_errorMessage</a> -
--   The error message.
--   
--   <a>$sel:errorCode:StackError'</a>, <a>stackError_errorCode</a> - The
--   error code.
newStackError :: StackError

-- | The error message.
stackError_errorMessage :: Lens' StackError (Maybe Text)

-- | The error code.
stackError_errorCode :: Lens' StackError (Maybe StackErrorCode)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.StackError.StackError
instance GHC.Show.Show Network.AWS.AppStream.Types.StackError.StackError
instance GHC.Read.Read Network.AWS.AppStream.Types.StackError.StackError
instance GHC.Classes.Eq Network.AWS.AppStream.Types.StackError.StackError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.StackError.StackError
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.StackError.StackError
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.StackError.StackError


module Network.AWS.AppStream.Types.StorageConnectorType

-- | The type of storage connector.
newtype StorageConnectorType
StorageConnectorType' :: Text -> StorageConnectorType
[fromStorageConnectorType] :: StorageConnectorType -> Text
pattern StorageConnectorType_GOOGLE_DRIVE :: StorageConnectorType
pattern StorageConnectorType_HOMEFOLDERS :: StorageConnectorType
pattern StorageConnectorType_ONE_DRIVE :: StorageConnectorType
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance GHC.Classes.Ord Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance GHC.Classes.Eq Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance GHC.Read.Read Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType
instance GHC.Show.Show Network.AWS.AppStream.Types.StorageConnectorType.StorageConnectorType


module Network.AWS.AppStream.Types.StorageConnector

-- | Describes a connector that enables persistent storage for users.
--   
--   <i>See:</i> <a>newStorageConnector</a> smart constructor.
data StorageConnector
StorageConnector' :: Maybe [Text] -> Maybe Text -> StorageConnectorType -> StorageConnector

-- | The names of the domains for the account.
[$sel:domains:StorageConnector'] :: StorageConnector -> Maybe [Text]

-- | The ARN of the storage connector.
[$sel:resourceIdentifier:StorageConnector'] :: StorageConnector -> Maybe Text

-- | The type of storage connector.
[$sel:connectorType:StorageConnector'] :: StorageConnector -> StorageConnectorType

-- | Create a value of <a>StorageConnector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domains:StorageConnector'</a>, <a>storageConnector_domains</a>
--   - The names of the domains for the account.
--   
--   <a>$sel:resourceIdentifier:StorageConnector'</a>,
--   <a>storageConnector_resourceIdentifier</a> - The ARN of the storage
--   connector.
--   
--   <a>$sel:connectorType:StorageConnector'</a>,
--   <a>storageConnector_connectorType</a> - The type of storage connector.
newStorageConnector :: StorageConnectorType -> StorageConnector

-- | The names of the domains for the account.
storageConnector_domains :: Lens' StorageConnector (Maybe [Text])

-- | The ARN of the storage connector.
storageConnector_resourceIdentifier :: Lens' StorageConnector (Maybe Text)

-- | The type of storage connector.
storageConnector_connectorType :: Lens' StorageConnector StorageConnectorType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.StorageConnector.StorageConnector
instance GHC.Show.Show Network.AWS.AppStream.Types.StorageConnector.StorageConnector
instance GHC.Read.Read Network.AWS.AppStream.Types.StorageConnector.StorageConnector
instance GHC.Classes.Eq Network.AWS.AppStream.Types.StorageConnector.StorageConnector
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.StorageConnector.StorageConnector
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.StorageConnector.StorageConnector
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.StorageConnector.StorageConnector
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.StorageConnector.StorageConnector


module Network.AWS.AppStream.Types.StreamView
newtype StreamView
StreamView' :: Text -> StreamView
[fromStreamView] :: StreamView -> Text
pattern StreamView_APP :: StreamView
pattern StreamView_DESKTOP :: StreamView
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.StreamView.StreamView
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.StreamView.StreamView
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.StreamView.StreamView
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.StreamView.StreamView
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.StreamView.StreamView
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.StreamView.StreamView
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.StreamView.StreamView
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.StreamView.StreamView
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.StreamView.StreamView
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.StreamView.StreamView
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.StreamView.StreamView
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.StreamView.StreamView
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.StreamView.StreamView
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.StreamView.StreamView
instance GHC.Generics.Generic Network.AWS.AppStream.Types.StreamView.StreamView
instance GHC.Classes.Ord Network.AWS.AppStream.Types.StreamView.StreamView
instance GHC.Classes.Eq Network.AWS.AppStream.Types.StreamView.StreamView
instance GHC.Read.Read Network.AWS.AppStream.Types.StreamView.StreamView
instance GHC.Show.Show Network.AWS.AppStream.Types.StreamView.StreamView


module Network.AWS.AppStream.Types.UsageReportExecutionErrorCode
newtype UsageReportExecutionErrorCode
UsageReportExecutionErrorCode' :: Text -> UsageReportExecutionErrorCode
[fromUsageReportExecutionErrorCode] :: UsageReportExecutionErrorCode -> Text
pattern UsageReportExecutionErrorCode_ACCESS_DENIED :: UsageReportExecutionErrorCode
pattern UsageReportExecutionErrorCode_INTERNAL_SERVICE_ERROR :: UsageReportExecutionErrorCode
pattern UsageReportExecutionErrorCode_RESOURCE_NOT_FOUND :: UsageReportExecutionErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance GHC.Generics.Generic Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance GHC.Classes.Ord Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance GHC.Classes.Eq Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance GHC.Read.Read Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode
instance GHC.Show.Show Network.AWS.AppStream.Types.UsageReportExecutionErrorCode.UsageReportExecutionErrorCode


module Network.AWS.AppStream.Types.LastReportGenerationExecutionError

-- | Describes the error that is returned when a usage report can't be
--   generated.
--   
--   <i>See:</i> <a>newLastReportGenerationExecutionError</a> smart
--   constructor.
data LastReportGenerationExecutionError
LastReportGenerationExecutionError' :: Maybe Text -> Maybe UsageReportExecutionErrorCode -> LastReportGenerationExecutionError

-- | The error message for the error that is returned when a usage report
--   can't be generated.
[$sel:errorMessage:LastReportGenerationExecutionError'] :: LastReportGenerationExecutionError -> Maybe Text

-- | The error code for the error that is returned when a usage report
--   can't be generated.
[$sel:errorCode:LastReportGenerationExecutionError'] :: LastReportGenerationExecutionError -> Maybe UsageReportExecutionErrorCode

-- | Create a value of <a>LastReportGenerationExecutionError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:LastReportGenerationExecutionError'</a>,
--   <a>lastReportGenerationExecutionError_errorMessage</a> - The error
--   message for the error that is returned when a usage report can't be
--   generated.
--   
--   <a>$sel:errorCode:LastReportGenerationExecutionError'</a>,
--   <a>lastReportGenerationExecutionError_errorCode</a> - The error code
--   for the error that is returned when a usage report can't be generated.
newLastReportGenerationExecutionError :: LastReportGenerationExecutionError

-- | The error message for the error that is returned when a usage report
--   can't be generated.
lastReportGenerationExecutionError_errorMessage :: Lens' LastReportGenerationExecutionError (Maybe Text)

-- | The error code for the error that is returned when a usage report
--   can't be generated.
lastReportGenerationExecutionError_errorCode :: Lens' LastReportGenerationExecutionError (Maybe UsageReportExecutionErrorCode)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.LastReportGenerationExecutionError.LastReportGenerationExecutionError
instance GHC.Show.Show Network.AWS.AppStream.Types.LastReportGenerationExecutionError.LastReportGenerationExecutionError
instance GHC.Read.Read Network.AWS.AppStream.Types.LastReportGenerationExecutionError.LastReportGenerationExecutionError
instance GHC.Classes.Eq Network.AWS.AppStream.Types.LastReportGenerationExecutionError.LastReportGenerationExecutionError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.LastReportGenerationExecutionError.LastReportGenerationExecutionError
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.LastReportGenerationExecutionError.LastReportGenerationExecutionError
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.LastReportGenerationExecutionError.LastReportGenerationExecutionError


module Network.AWS.AppStream.Types.UsageReportSchedule
newtype UsageReportSchedule
UsageReportSchedule' :: Text -> UsageReportSchedule
[fromUsageReportSchedule] :: UsageReportSchedule -> Text
pattern UsageReportSchedule_DAILY :: UsageReportSchedule
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance GHC.Generics.Generic Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance GHC.Classes.Ord Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance GHC.Classes.Eq Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance GHC.Read.Read Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule
instance GHC.Show.Show Network.AWS.AppStream.Types.UsageReportSchedule.UsageReportSchedule


module Network.AWS.AppStream.Types.UsageReportSubscription

-- | Describes information about the usage report subscription.
--   
--   <i>See:</i> <a>newUsageReportSubscription</a> smart constructor.
data UsageReportSubscription
UsageReportSubscription' :: Maybe [LastReportGenerationExecutionError] -> Maybe POSIX -> Maybe Text -> Maybe UsageReportSchedule -> UsageReportSubscription

-- | The errors that were returned if usage reports couldn't be generated.
[$sel:subscriptionErrors:UsageReportSubscription'] :: UsageReportSubscription -> Maybe [LastReportGenerationExecutionError]

-- | The time when the last usage report was generated.
[$sel:lastGeneratedReportDate:UsageReportSubscription'] :: UsageReportSubscription -> Maybe POSIX

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
[$sel:s3BucketName:UsageReportSubscription'] :: UsageReportSubscription -> Maybe Text

-- | The schedule for generating usage reports.
[$sel:schedule:UsageReportSubscription'] :: UsageReportSubscription -> Maybe UsageReportSchedule

-- | Create a value of <a>UsageReportSubscription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionErrors:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_subscriptionErrors</a> - The errors that
--   were returned if usage reports couldn't be generated.
--   
--   <a>$sel:lastGeneratedReportDate:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_lastGeneratedReportDate</a> - The time when
--   the last usage report was generated.
--   
--   <a>$sel:s3BucketName:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_s3BucketName</a> - The Amazon S3 bucket
--   where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
--   
--   <a>$sel:schedule:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_schedule</a> - The schedule for generating
--   usage reports.
newUsageReportSubscription :: UsageReportSubscription

-- | The errors that were returned if usage reports couldn't be generated.
usageReportSubscription_subscriptionErrors :: Lens' UsageReportSubscription (Maybe [LastReportGenerationExecutionError])

-- | The time when the last usage report was generated.
usageReportSubscription_lastGeneratedReportDate :: Lens' UsageReportSubscription (Maybe UTCTime)

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
usageReportSubscription_s3BucketName :: Lens' UsageReportSubscription (Maybe Text)

-- | The schedule for generating usage reports.
usageReportSubscription_schedule :: Lens' UsageReportSubscription (Maybe UsageReportSchedule)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.UsageReportSubscription.UsageReportSubscription
instance GHC.Show.Show Network.AWS.AppStream.Types.UsageReportSubscription.UsageReportSubscription
instance GHC.Read.Read Network.AWS.AppStream.Types.UsageReportSubscription.UsageReportSubscription
instance GHC.Classes.Eq Network.AWS.AppStream.Types.UsageReportSubscription.UsageReportSubscription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.UsageReportSubscription.UsageReportSubscription
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.UsageReportSubscription.UsageReportSubscription
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.UsageReportSubscription.UsageReportSubscription


module Network.AWS.AppStream.Types.User

-- | Describes a user in the user pool.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> AuthenticationType -> User

-- | The status of the user in the user pool. The status can be one of the
--   following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
[$sel:status:User'] :: User -> Maybe Text

-- | The ARN of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Specifies whether the user in the user pool is enabled.
[$sel:enabled:User'] :: User -> Maybe Bool

-- | The date and time the user was created in the user pool.
[$sel:createdTime:User'] :: User -> Maybe POSIX

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
[$sel:userName:User'] :: User -> Maybe (Sensitive Text)

-- | The last name, or surname, of the user.
[$sel:lastName:User'] :: User -> Maybe (Sensitive Text)

-- | The first name, or given name, of the user.
[$sel:firstName:User'] :: User -> Maybe (Sensitive Text)

-- | The authentication type for the user.
[$sel:authenticationType:User'] :: User -> AuthenticationType

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - The status of the user
--   in the user pool. The status can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The ARN of the user.
--   
--   <a>$sel:enabled:User'</a>, <a>user_enabled</a> - Specifies whether the
--   user in the user pool is enabled.
--   
--   <a>$sel:createdTime:User'</a>, <a>user_createdTime</a> - The date and
--   time the user was created in the user pool.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The email address
--   of the user.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:lastName:User'</a>, <a>user_lastName</a> - The last name, or
--   surname, of the user.
--   
--   <a>$sel:firstName:User'</a>, <a>user_firstName</a> - The first name,
--   or given name, of the user.
--   
--   <a>$sel:authenticationType:User'</a>, <a>user_authenticationType</a> -
--   The authentication type for the user.
newUser :: AuthenticationType -> User

-- | The status of the user in the user pool. The status can be one of the
--   following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
user_status :: Lens' User (Maybe Text)

-- | The ARN of the user.
user_arn :: Lens' User (Maybe Text)

-- | Specifies whether the user in the user pool is enabled.
user_enabled :: Lens' User (Maybe Bool)

-- | The date and time the user was created in the user pool.
user_createdTime :: Lens' User (Maybe UTCTime)

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
user_userName :: Lens' User (Maybe Text)

-- | The last name, or surname, of the user.
user_lastName :: Lens' User (Maybe Text)

-- | The first name, or given name, of the user.
user_firstName :: Lens' User (Maybe Text)

-- | The authentication type for the user.
user_authenticationType :: Lens' User AuthenticationType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.User.User
instance GHC.Show.Show Network.AWS.AppStream.Types.User.User
instance GHC.Classes.Eq Network.AWS.AppStream.Types.User.User
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.User.User
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.User.User
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.User.User


module Network.AWS.AppStream.Types.UserSetting

-- | Describes an action and whether the action is enabled or disabled for
--   users during their streaming sessions.
--   
--   <i>See:</i> <a>newUserSetting</a> smart constructor.
data UserSetting
UserSetting' :: Action -> Permission -> UserSetting

-- | The action that is enabled or disabled.
[$sel:action:UserSetting'] :: UserSetting -> Action

-- | Indicates whether the action is enabled or disabled.
[$sel:permission:UserSetting'] :: UserSetting -> Permission

-- | Create a value of <a>UserSetting</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:UserSetting'</a>, <a>userSetting_action</a> - The
--   action that is enabled or disabled.
--   
--   <a>$sel:permission:UserSetting'</a>, <a>userSetting_permission</a> -
--   Indicates whether the action is enabled or disabled.
newUserSetting :: Action -> Permission -> UserSetting

-- | The action that is enabled or disabled.
userSetting_action :: Lens' UserSetting Action

-- | Indicates whether the action is enabled or disabled.
userSetting_permission :: Lens' UserSetting Permission
instance GHC.Generics.Generic Network.AWS.AppStream.Types.UserSetting.UserSetting
instance GHC.Show.Show Network.AWS.AppStream.Types.UserSetting.UserSetting
instance GHC.Read.Read Network.AWS.AppStream.Types.UserSetting.UserSetting
instance GHC.Classes.Eq Network.AWS.AppStream.Types.UserSetting.UserSetting
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.UserSetting.UserSetting
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.UserSetting.UserSetting
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.UserSetting.UserSetting
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.UserSetting.UserSetting


module Network.AWS.AppStream.Types.Stack

-- | Describes a stack.
--   
--   <i>See:</i> <a>newStack</a> smart constructor.
data Stack
Stack' :: Maybe (NonEmpty UserSetting) -> Maybe (NonEmpty AccessEndpoint) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ApplicationSettingsResponse -> Maybe [StorageConnector] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [StackError] -> Maybe Text -> Maybe Text -> Text -> Stack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default these actions are enabled.
[$sel:userSettings:Stack'] :: Stack -> Maybe (NonEmpty UserSetting)

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Users of the stack can connect to AppStream 2.0 only through the
--   specified endpoints.
[$sel:accessEndpoints:Stack'] :: Stack -> Maybe (NonEmpty AccessEndpoint)

-- | The URL that users are redirected to after their streaming session
--   ends.
[$sel:redirectURL:Stack'] :: Stack -> Maybe Text

-- | The ARN of the stack.
[$sel:arn:Stack'] :: Stack -> Maybe Text

-- | The time the stack was created.
[$sel:createdTime:Stack'] :: Stack -> Maybe POSIX

-- | The persistent application settings for users of the stack.
[$sel:applicationSettings:Stack'] :: Stack -> Maybe ApplicationSettingsResponse

-- | The storage connectors to enable.
[$sel:storageConnectors:Stack'] :: Stack -> Maybe [StorageConnector]

-- | The description to display.
[$sel:description:Stack'] :: Stack -> Maybe Text

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
[$sel:embedHostDomains:Stack'] :: Stack -> Maybe (NonEmpty Text)

-- | The errors for the stack.
[$sel:stackErrors:Stack'] :: Stack -> Maybe [StackError]

-- | The stack name to display.
[$sel:displayName:Stack'] :: Stack -> Maybe Text

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
[$sel:feedbackURL:Stack'] :: Stack -> Maybe Text

-- | The name of the stack.
[$sel:name:Stack'] :: Stack -> Text

-- | Create a value of <a>Stack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userSettings:Stack'</a>, <a>stack_userSettings</a> - The
--   actions that are enabled or disabled for users during their streaming
--   sessions. By default these actions are enabled.
--   
--   <a>$sel:accessEndpoints:Stack'</a>, <a>stack_accessEndpoints</a> - The
--   list of virtual private cloud (VPC) interface endpoint objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
--   
--   <a>$sel:redirectURL:Stack'</a>, <a>stack_redirectURL</a> - The URL
--   that users are redirected to after their streaming session ends.
--   
--   <a>$sel:arn:Stack'</a>, <a>stack_arn</a> - The ARN of the stack.
--   
--   <a>$sel:createdTime:Stack'</a>, <a>stack_createdTime</a> - The time
--   the stack was created.
--   
--   <a>$sel:applicationSettings:Stack'</a>,
--   <a>stack_applicationSettings</a> - The persistent application settings
--   for users of the stack.
--   
--   <a>$sel:storageConnectors:Stack'</a>, <a>stack_storageConnectors</a> -
--   The storage connectors to enable.
--   
--   <a>$sel:description:Stack'</a>, <a>stack_description</a> - The
--   description to display.
--   
--   <a>$sel:embedHostDomains:Stack'</a>, <a>stack_embedHostDomains</a> -
--   The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
--   
--   <a>$sel:stackErrors:Stack'</a>, <a>stack_stackErrors</a> - The errors
--   for the stack.
--   
--   <a>$sel:displayName:Stack'</a>, <a>stack_displayName</a> - The stack
--   name to display.
--   
--   <a>$sel:feedbackURL:Stack'</a>, <a>stack_feedbackURL</a> - The URL
--   that users are redirected to after they click the Send Feedback link.
--   If no URL is specified, no Send Feedback link is displayed.
--   
--   <a>$sel:name:Stack'</a>, <a>stack_name</a> - The name of the stack.
newStack :: Text -> Stack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default these actions are enabled.
stack_userSettings :: Lens' Stack (Maybe (NonEmpty UserSetting))

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Users of the stack can connect to AppStream 2.0 only through the
--   specified endpoints.
stack_accessEndpoints :: Lens' Stack (Maybe (NonEmpty AccessEndpoint))

-- | The URL that users are redirected to after their streaming session
--   ends.
stack_redirectURL :: Lens' Stack (Maybe Text)

-- | The ARN of the stack.
stack_arn :: Lens' Stack (Maybe Text)

-- | The time the stack was created.
stack_createdTime :: Lens' Stack (Maybe UTCTime)

-- | The persistent application settings for users of the stack.
stack_applicationSettings :: Lens' Stack (Maybe ApplicationSettingsResponse)

-- | The storage connectors to enable.
stack_storageConnectors :: Lens' Stack (Maybe [StorageConnector])

-- | The description to display.
stack_description :: Lens' Stack (Maybe Text)

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
stack_embedHostDomains :: Lens' Stack (Maybe (NonEmpty Text))

-- | The errors for the stack.
stack_stackErrors :: Lens' Stack (Maybe [StackError])

-- | The stack name to display.
stack_displayName :: Lens' Stack (Maybe Text)

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
stack_feedbackURL :: Lens' Stack (Maybe Text)

-- | The name of the stack.
stack_name :: Lens' Stack Text
instance GHC.Generics.Generic Network.AWS.AppStream.Types.Stack.Stack
instance GHC.Show.Show Network.AWS.AppStream.Types.Stack.Stack
instance GHC.Read.Read Network.AWS.AppStream.Types.Stack.Stack
instance GHC.Classes.Eq Network.AWS.AppStream.Types.Stack.Stack
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.Stack.Stack
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.Stack.Stack
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.Stack.Stack


module Network.AWS.AppStream.Types.UserStackAssociation

-- | Describes a user in the user pool and the associated stack.
--   
--   <i>See:</i> <a>newUserStackAssociation</a> smart constructor.
data UserStackAssociation
UserStackAssociation' :: Maybe Bool -> Text -> Sensitive Text -> AuthenticationType -> UserStackAssociation

-- | Specifies whether a welcome email is sent to a user after the user is
--   created in the user pool.
[$sel:sendEmailNotification:UserStackAssociation'] :: UserStackAssociation -> Maybe Bool

-- | The name of the stack that is associated with the user.
[$sel:stackName:UserStackAssociation'] :: UserStackAssociation -> Text

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
[$sel:userName:UserStackAssociation'] :: UserStackAssociation -> Sensitive Text

-- | The authentication type for the user.
[$sel:authenticationType:UserStackAssociation'] :: UserStackAssociation -> AuthenticationType

-- | Create a value of <a>UserStackAssociation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sendEmailNotification:UserStackAssociation'</a>,
--   <a>userStackAssociation_sendEmailNotification</a> - Specifies whether
--   a welcome email is sent to a user after the user is created in the
--   user pool.
--   
--   <a>$sel:stackName:UserStackAssociation'</a>,
--   <a>userStackAssociation_stackName</a> - The name of the stack that is
--   associated with the user.
--   
--   <a>$sel:userName:UserStackAssociation'</a>,
--   <a>userStackAssociation_userName</a> - The email address of the user
--   who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:UserStackAssociation'</a>,
--   <a>userStackAssociation_authenticationType</a> - The authentication
--   type for the user.
newUserStackAssociation :: Text -> Text -> AuthenticationType -> UserStackAssociation

-- | Specifies whether a welcome email is sent to a user after the user is
--   created in the user pool.
userStackAssociation_sendEmailNotification :: Lens' UserStackAssociation (Maybe Bool)

-- | The name of the stack that is associated with the user.
userStackAssociation_stackName :: Lens' UserStackAssociation Text

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
userStackAssociation_userName :: Lens' UserStackAssociation Text

-- | The authentication type for the user.
userStackAssociation_authenticationType :: Lens' UserStackAssociation AuthenticationType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.UserStackAssociation.UserStackAssociation
instance GHC.Show.Show Network.AWS.AppStream.Types.UserStackAssociation.UserStackAssociation
instance GHC.Classes.Eq Network.AWS.AppStream.Types.UserStackAssociation.UserStackAssociation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.UserStackAssociation.UserStackAssociation
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.UserStackAssociation.UserStackAssociation
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.UserStackAssociation.UserStackAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.UserStackAssociation.UserStackAssociation


module Network.AWS.AppStream.Types.UserStackAssociationErrorCode
newtype UserStackAssociationErrorCode
UserStackAssociationErrorCode' :: Text -> UserStackAssociationErrorCode
[fromUserStackAssociationErrorCode] :: UserStackAssociationErrorCode -> Text
pattern UserStackAssociationErrorCode_DIRECTORY_NOT_FOUND :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_INTERNAL_ERROR :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_STACK_NOT_FOUND :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_USER_NAME_NOT_FOUND :: UserStackAssociationErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance GHC.Generics.Generic Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance GHC.Classes.Ord Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance GHC.Classes.Eq Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance GHC.Read.Read Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode
instance GHC.Show.Show Network.AWS.AppStream.Types.UserStackAssociationErrorCode.UserStackAssociationErrorCode


module Network.AWS.AppStream.Types.UserStackAssociationError

-- | Describes the error that is returned when a user can’t be associated
--   with or disassociated from a stack.
--   
--   <i>See:</i> <a>newUserStackAssociationError</a> smart constructor.
data UserStackAssociationError
UserStackAssociationError' :: Maybe UserStackAssociation -> Maybe Text -> Maybe UserStackAssociationErrorCode -> UserStackAssociationError

-- | Information about the user and associated stack.
[$sel:userStackAssociation:UserStackAssociationError'] :: UserStackAssociationError -> Maybe UserStackAssociation

-- | The error message for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
[$sel:errorMessage:UserStackAssociationError'] :: UserStackAssociationError -> Maybe Text

-- | The error code for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
[$sel:errorCode:UserStackAssociationError'] :: UserStackAssociationError -> Maybe UserStackAssociationErrorCode

-- | Create a value of <a>UserStackAssociationError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userStackAssociation:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_userStackAssociation</a> - Information
--   about the user and associated stack.
--   
--   <a>$sel:errorMessage:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_errorMessage</a> - The error message for
--   the error that is returned when a user can’t be associated with or
--   disassociated from a stack.
--   
--   <a>$sel:errorCode:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_errorCode</a> - The error code for the
--   error that is returned when a user can’t be associated with or
--   disassociated from a stack.
newUserStackAssociationError :: UserStackAssociationError

-- | Information about the user and associated stack.
userStackAssociationError_userStackAssociation :: Lens' UserStackAssociationError (Maybe UserStackAssociation)

-- | The error message for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
userStackAssociationError_errorMessage :: Lens' UserStackAssociationError (Maybe Text)

-- | The error code for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
userStackAssociationError_errorCode :: Lens' UserStackAssociationError (Maybe UserStackAssociationErrorCode)
instance GHC.Generics.Generic Network.AWS.AppStream.Types.UserStackAssociationError.UserStackAssociationError
instance GHC.Show.Show Network.AWS.AppStream.Types.UserStackAssociationError.UserStackAssociationError
instance GHC.Classes.Eq Network.AWS.AppStream.Types.UserStackAssociationError.UserStackAssociationError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.UserStackAssociationError.UserStackAssociationError
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.UserStackAssociationError.UserStackAssociationError
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.UserStackAssociationError.UserStackAssociationError


module Network.AWS.AppStream.Types.VisibilityType
newtype VisibilityType
VisibilityType' :: Text -> VisibilityType
[fromVisibilityType] :: VisibilityType -> Text
pattern VisibilityType_PRIVATE :: VisibilityType
pattern VisibilityType_PUBLIC :: VisibilityType
pattern VisibilityType_SHARED :: VisibilityType
instance Network.AWS.Data.XML.ToXML Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Network.AWS.Data.XML.FromXML Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Network.AWS.Data.Log.ToLog Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Network.AWS.Data.Text.ToText Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Network.AWS.Data.Text.FromText Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance GHC.Generics.Generic Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance GHC.Classes.Ord Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance GHC.Classes.Eq Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance GHC.Read.Read Network.AWS.AppStream.Types.VisibilityType.VisibilityType
instance GHC.Show.Show Network.AWS.AppStream.Types.VisibilityType.VisibilityType


module Network.AWS.AppStream.Types.Image

-- | Describes an image.
--   
--   <i>See:</i> <a>newImage</a> smart constructor.
data Image
Image' :: Maybe ImagePermissions -> Maybe PlatformType -> Maybe [ResourceError] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ImageStateChangeReason -> Maybe Text -> Maybe ImageState -> Maybe [Application] -> Maybe Text -> Maybe Text -> Maybe VisibilityType -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Text -> Image

-- | The permissions to provide to the destination AWS account for the
--   specified image.
[$sel:imagePermissions:Image'] :: Image -> Maybe ImagePermissions

-- | The operating system platform of the image.
[$sel:platform:Image'] :: Image -> Maybe PlatformType

-- | Describes the errors that are returned when a new image can't be
--   created.
[$sel:imageErrors:Image'] :: Image -> Maybe [ResourceError]

-- | The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
[$sel:imageBuilderName:Image'] :: Image -> Maybe Text

-- | The ARN of the image.
[$sel:arn:Image'] :: Image -> Maybe Text

-- | The time the image was created.
[$sel:createdTime:Image'] :: Image -> Maybe POSIX

-- | The reason why the last state change occurred.
[$sel:stateChangeReason:Image'] :: Image -> Maybe ImageStateChangeReason

-- | The ARN of the image from which this image was created.
[$sel:baseImageArn:Image'] :: Image -> Maybe Text

-- | The image starts in the <tt>PENDING</tt> state. If image creation
--   succeeds, the state is <tt>AVAILABLE</tt>. If image creation fails,
--   the state is <tt>FAILED</tt>.
[$sel:state:Image'] :: Image -> Maybe ImageState

-- | The applications associated with the image.
[$sel:applications:Image'] :: Image -> Maybe [Application]

-- | The version of the AppStream 2.0 agent to use for instances that are
--   launched from this image.
[$sel:appstreamAgentVersion:Image'] :: Image -> Maybe Text

-- | The description to display.
[$sel:description:Image'] :: Image -> Maybe Text

-- | Indicates whether the image is public or private.
[$sel:visibility:Image'] :: Image -> Maybe VisibilityType

-- | Indicates whether an image builder can be launched from this image.
[$sel:imageBuilderSupported:Image'] :: Image -> Maybe Bool

-- | The image name to display.
[$sel:displayName:Image'] :: Image -> Maybe Text

-- | The release date of the public base image. For private images, this
--   date is the release date of the base image from which the image was
--   created.
[$sel:publicBaseImageReleasedDate:Image'] :: Image -> Maybe POSIX

-- | The name of the image.
[$sel:name:Image'] :: Image -> Text

-- | Create a value of <a>Image</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePermissions:Image'</a>, <a>image_imagePermissions</a> -
--   The permissions to provide to the destination AWS account for the
--   specified image.
--   
--   <a>$sel:platform:Image'</a>, <a>image_platform</a> - The operating
--   system platform of the image.
--   
--   <a>$sel:imageErrors:Image'</a>, <a>image_imageErrors</a> - Describes
--   the errors that are returned when a new image can't be created.
--   
--   <a>$sel:imageBuilderName:Image'</a>, <a>image_imageBuilderName</a> -
--   The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
--   
--   <a>$sel:arn:Image'</a>, <a>image_arn</a> - The ARN of the image.
--   
--   <a>$sel:createdTime:Image'</a>, <a>image_createdTime</a> - The time
--   the image was created.
--   
--   <a>$sel:stateChangeReason:Image'</a>, <a>image_stateChangeReason</a> -
--   The reason why the last state change occurred.
--   
--   <a>$sel:baseImageArn:Image'</a>, <a>image_baseImageArn</a> - The ARN
--   of the image from which this image was created.
--   
--   <a>$sel:state:Image'</a>, <a>image_state</a> - The image starts in the
--   <tt>PENDING</tt> state. If image creation succeeds, the state is
--   <tt>AVAILABLE</tt>. If image creation fails, the state is
--   <tt>FAILED</tt>.
--   
--   <a>$sel:applications:Image'</a>, <a>image_applications</a> - The
--   applications associated with the image.
--   
--   <a>$sel:appstreamAgentVersion:Image'</a>,
--   <a>image_appstreamAgentVersion</a> - The version of the AppStream 2.0
--   agent to use for instances that are launched from this image.
--   
--   <a>$sel:description:Image'</a>, <a>image_description</a> - The
--   description to display.
--   
--   <a>$sel:visibility:Image'</a>, <a>image_visibility</a> - Indicates
--   whether the image is public or private.
--   
--   <a>$sel:imageBuilderSupported:Image'</a>,
--   <a>image_imageBuilderSupported</a> - Indicates whether an image
--   builder can be launched from this image.
--   
--   <a>$sel:displayName:Image'</a>, <a>image_displayName</a> - The image
--   name to display.
--   
--   <a>$sel:publicBaseImageReleasedDate:Image'</a>,
--   <a>image_publicBaseImageReleasedDate</a> - The release date of the
--   public base image. For private images, this date is the release date
--   of the base image from which the image was created.
--   
--   <a>$sel:name:Image'</a>, <a>image_name</a> - The name of the image.
newImage :: Text -> Image

-- | The permissions to provide to the destination AWS account for the
--   specified image.
image_imagePermissions :: Lens' Image (Maybe ImagePermissions)

-- | The operating system platform of the image.
image_platform :: Lens' Image (Maybe PlatformType)

-- | Describes the errors that are returned when a new image can't be
--   created.
image_imageErrors :: Lens' Image (Maybe [ResourceError])

-- | The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
image_imageBuilderName :: Lens' Image (Maybe Text)

-- | The ARN of the image.
image_arn :: Lens' Image (Maybe Text)

-- | The time the image was created.
image_createdTime :: Lens' Image (Maybe UTCTime)

-- | The reason why the last state change occurred.
image_stateChangeReason :: Lens' Image (Maybe ImageStateChangeReason)

-- | The ARN of the image from which this image was created.
image_baseImageArn :: Lens' Image (Maybe Text)

-- | The image starts in the <tt>PENDING</tt> state. If image creation
--   succeeds, the state is <tt>AVAILABLE</tt>. If image creation fails,
--   the state is <tt>FAILED</tt>.
image_state :: Lens' Image (Maybe ImageState)

-- | The applications associated with the image.
image_applications :: Lens' Image (Maybe [Application])

-- | The version of the AppStream 2.0 agent to use for instances that are
--   launched from this image.
image_appstreamAgentVersion :: Lens' Image (Maybe Text)

-- | The description to display.
image_description :: Lens' Image (Maybe Text)

-- | Indicates whether the image is public or private.
image_visibility :: Lens' Image (Maybe VisibilityType)

-- | Indicates whether an image builder can be launched from this image.
image_imageBuilderSupported :: Lens' Image (Maybe Bool)

-- | The image name to display.
image_displayName :: Lens' Image (Maybe Text)

-- | The release date of the public base image. For private images, this
--   date is the release date of the base image from which the image was
--   created.
image_publicBaseImageReleasedDate :: Lens' Image (Maybe UTCTime)

-- | The name of the image.
image_name :: Lens' Image Text
instance GHC.Generics.Generic Network.AWS.AppStream.Types.Image.Image
instance GHC.Show.Show Network.AWS.AppStream.Types.Image.Image
instance GHC.Read.Read Network.AWS.AppStream.Types.Image.Image
instance GHC.Classes.Eq Network.AWS.AppStream.Types.Image.Image
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.Image.Image
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.Image.Image
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.Image.Image


module Network.AWS.AppStream.Types.VpcConfig

-- | Describes VPC configuration information for fleets and image builders.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe [Text] -> VpcConfig

-- | The identifiers of the security groups for the fleet or image builder.
[$sel:securityGroupIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | The identifiers of the subnets to which a network interface is
--   attached from the fleet instance or image builder instance. Fleet
--   instances use one or more subnets. Image builder instances use one
--   subnet.
[$sel:subnetIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - The identifiers of the security
--   groups for the fleet or image builder.
--   
--   <a>$sel:subnetIds:VpcConfig'</a>, <a>vpcConfig_subnetIds</a> - The
--   identifiers of the subnets to which a network interface is attached
--   from the fleet instance or image builder instance. Fleet instances use
--   one or more subnets. Image builder instances use one subnet.
newVpcConfig :: VpcConfig

-- | The identifiers of the security groups for the fleet or image builder.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | The identifiers of the subnets to which a network interface is
--   attached from the fleet instance or image builder instance. Fleet
--   instances use one or more subnets. Image builder instances use one
--   subnet.
vpcConfig_subnetIds :: Lens' VpcConfig (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.AppStream.Types.VpcConfig.VpcConfig
instance GHC.Show.Show Network.AWS.AppStream.Types.VpcConfig.VpcConfig
instance GHC.Read.Read Network.AWS.AppStream.Types.VpcConfig.VpcConfig
instance GHC.Classes.Eq Network.AWS.AppStream.Types.VpcConfig.VpcConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.VpcConfig.VpcConfig
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.VpcConfig.VpcConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.VpcConfig.VpcConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.Types.VpcConfig.VpcConfig


module Network.AWS.AppStream.Types.ImageBuilder

-- | Describes a virtual machine that is used to create an image.
--   
--   <i>See:</i> <a>newImageBuilder</a> smart constructor.
data ImageBuilder
ImageBuilder' :: Maybe VpcConfig -> Maybe PlatformType -> Maybe Text -> Maybe (NonEmpty AccessEndpoint) -> Maybe DomainJoinInfo -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ImageBuilderStateChangeReason -> Maybe NetworkAccessConfiguration -> Maybe ImageBuilderState -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [ResourceError] -> Maybe Text -> Maybe Text -> Text -> ImageBuilder

-- | The VPC configuration of the image builder.
[$sel:vpcConfig:ImageBuilder'] :: ImageBuilder -> Maybe VpcConfig

-- | The operating system platform of the image builder.
[$sel:platform:ImageBuilder'] :: ImageBuilder -> Maybe PlatformType

-- | The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:iamRoleArn:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
[$sel:accessEndpoints:ImageBuilder'] :: ImageBuilder -> Maybe (NonEmpty AccessEndpoint)

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
[$sel:domainJoinInfo:ImageBuilder'] :: ImageBuilder -> Maybe DomainJoinInfo

-- | The instance type for the image builder. The following instance types
--   are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
[$sel:instanceType:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The ARN for the image builder.
[$sel:arn:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The time stamp when the image builder was created.
[$sel:createdTime:ImageBuilder'] :: ImageBuilder -> Maybe POSIX

-- | The reason why the last state change occurred.
[$sel:stateChangeReason:ImageBuilder'] :: ImageBuilder -> Maybe ImageBuilderStateChangeReason
[$sel:networkAccessConfiguration:ImageBuilder'] :: ImageBuilder -> Maybe NetworkAccessConfiguration

-- | The state of the image builder.
[$sel:state:ImageBuilder'] :: ImageBuilder -> Maybe ImageBuilderState

-- | The version of the AppStream 2.0 agent that is currently being used by
--   the image builder.
[$sel:appstreamAgentVersion:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The description to display.
[$sel:description:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | Enables or disables default internet access for the image builder.
[$sel:enableDefaultInternetAccess:ImageBuilder'] :: ImageBuilder -> Maybe Bool

-- | The image builder errors.
[$sel:imageBuilderErrors:ImageBuilder'] :: ImageBuilder -> Maybe [ResourceError]

-- | The image builder name to display.
[$sel:displayName:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The ARN of the image from which this builder was created.
[$sel:imageArn:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The name of the image builder.
[$sel:name:ImageBuilder'] :: ImageBuilder -> Text

-- | Create a value of <a>ImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:ImageBuilder'</a>, <a>imageBuilder_vpcConfig</a> -
--   The VPC configuration of the image builder.
--   
--   <a>$sel:platform:ImageBuilder'</a>, <a>imageBuilder_platform</a> - The
--   operating system platform of the image builder.
--   
--   <a>$sel:iamRoleArn:ImageBuilder'</a>, <a>imageBuilder_iamRoleArn</a> -
--   The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:accessEndpoints:ImageBuilder'</a>,
--   <a>imageBuilder_accessEndpoints</a> - The list of virtual private
--   cloud (VPC) interface endpoint objects. Administrators can connect to
--   the image builder only through the specified endpoints.
--   
--   <a>$sel:domainJoinInfo:ImageBuilder'</a>,
--   <a>imageBuilder_domainJoinInfo</a> - The name of the directory and
--   organizational unit (OU) to use to join the image builder to a
--   Microsoft Active Directory domain.
--   
--   <a>$sel:instanceType:ImageBuilder'</a>,
--   <a>imageBuilder_instanceType</a> - The instance type for the image
--   builder. The following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:arn:ImageBuilder'</a>, <a>imageBuilder_arn</a> - The ARN for
--   the image builder.
--   
--   <a>$sel:createdTime:ImageBuilder'</a>, <a>imageBuilder_createdTime</a>
--   - The time stamp when the image builder was created.
--   
--   <a>$sel:stateChangeReason:ImageBuilder'</a>,
--   <a>imageBuilder_stateChangeReason</a> - The reason why the last state
--   change occurred.
--   
--   <a>$sel:networkAccessConfiguration:ImageBuilder'</a>,
--   <a>imageBuilder_networkAccessConfiguration</a> - Undocumented member.
--   
--   <a>$sel:state:ImageBuilder'</a>, <a>imageBuilder_state</a> - The state
--   of the image builder.
--   
--   <a>$sel:appstreamAgentVersion:ImageBuilder'</a>,
--   <a>imageBuilder_appstreamAgentVersion</a> - The version of the
--   AppStream 2.0 agent that is currently being used by the image builder.
--   
--   <a>$sel:description:ImageBuilder'</a>, <a>imageBuilder_description</a>
--   - The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:ImageBuilder'</a>,
--   <a>imageBuilder_enableDefaultInternetAccess</a> - Enables or disables
--   default internet access for the image builder.
--   
--   <a>$sel:imageBuilderErrors:ImageBuilder'</a>,
--   <a>imageBuilder_imageBuilderErrors</a> - The image builder errors.
--   
--   <a>$sel:displayName:ImageBuilder'</a>, <a>imageBuilder_displayName</a>
--   - The image builder name to display.
--   
--   <a>$sel:imageArn:ImageBuilder'</a>, <a>imageBuilder_imageArn</a> - The
--   ARN of the image from which this builder was created.
--   
--   <a>$sel:name:ImageBuilder'</a>, <a>imageBuilder_name</a> - The name of
--   the image builder.
newImageBuilder :: Text -> ImageBuilder

-- | The VPC configuration of the image builder.
imageBuilder_vpcConfig :: Lens' ImageBuilder (Maybe VpcConfig)

-- | The operating system platform of the image builder.
imageBuilder_platform :: Lens' ImageBuilder (Maybe PlatformType)

-- | The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
imageBuilder_iamRoleArn :: Lens' ImageBuilder (Maybe Text)

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
imageBuilder_accessEndpoints :: Lens' ImageBuilder (Maybe (NonEmpty AccessEndpoint))

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
imageBuilder_domainJoinInfo :: Lens' ImageBuilder (Maybe DomainJoinInfo)

-- | The instance type for the image builder. The following instance types
--   are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
imageBuilder_instanceType :: Lens' ImageBuilder (Maybe Text)

-- | The ARN for the image builder.
imageBuilder_arn :: Lens' ImageBuilder (Maybe Text)

-- | The time stamp when the image builder was created.
imageBuilder_createdTime :: Lens' ImageBuilder (Maybe UTCTime)

-- | The reason why the last state change occurred.
imageBuilder_stateChangeReason :: Lens' ImageBuilder (Maybe ImageBuilderStateChangeReason)

-- | Undocumented member.
imageBuilder_networkAccessConfiguration :: Lens' ImageBuilder (Maybe NetworkAccessConfiguration)

-- | The state of the image builder.
imageBuilder_state :: Lens' ImageBuilder (Maybe ImageBuilderState)

-- | The version of the AppStream 2.0 agent that is currently being used by
--   the image builder.
imageBuilder_appstreamAgentVersion :: Lens' ImageBuilder (Maybe Text)

-- | The description to display.
imageBuilder_description :: Lens' ImageBuilder (Maybe Text)

-- | Enables or disables default internet access for the image builder.
imageBuilder_enableDefaultInternetAccess :: Lens' ImageBuilder (Maybe Bool)

-- | The image builder errors.
imageBuilder_imageBuilderErrors :: Lens' ImageBuilder (Maybe [ResourceError])

-- | The image builder name to display.
imageBuilder_displayName :: Lens' ImageBuilder (Maybe Text)

-- | The ARN of the image from which this builder was created.
imageBuilder_imageArn :: Lens' ImageBuilder (Maybe Text)

-- | The name of the image builder.
imageBuilder_name :: Lens' ImageBuilder Text
instance GHC.Generics.Generic Network.AWS.AppStream.Types.ImageBuilder.ImageBuilder
instance GHC.Show.Show Network.AWS.AppStream.Types.ImageBuilder.ImageBuilder
instance GHC.Read.Read Network.AWS.AppStream.Types.ImageBuilder.ImageBuilder
instance GHC.Classes.Eq Network.AWS.AppStream.Types.ImageBuilder.ImageBuilder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.ImageBuilder.ImageBuilder
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.ImageBuilder.ImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.ImageBuilder.ImageBuilder


module Network.AWS.AppStream.Types.Fleet

-- | Describes a fleet.
--   
--   <i>See:</i> <a>newFleet</a> smart constructor.
data Fleet
Fleet' :: Maybe Int -> Maybe Int -> Maybe VpcConfig -> Maybe Text -> Maybe DomainJoinInfo -> Maybe FleetType -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe StreamView -> Maybe Text -> Maybe Bool -> Maybe [FleetError] -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> ComputeCapacityStatus -> FleetState -> Fleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If they try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
[$sel:disconnectTimeoutInSeconds:Fleet'] :: Fleet -> Maybe Int

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
[$sel:maxUserDurationInSeconds:Fleet'] :: Fleet -> Maybe Int

-- | The VPC configuration for the fleet.
[$sel:vpcConfig:Fleet'] :: Fleet -> Maybe VpcConfig

-- | The ARN of the IAM role that is applied to the fleet. To assume a
--   role, the fleet instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:iamRoleArn:Fleet'] :: Fleet -> Maybe Text

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
[$sel:domainJoinInfo:Fleet'] :: Fleet -> Maybe DomainJoinInfo

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
[$sel:fleetType:Fleet'] :: Fleet -> Maybe FleetType

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
[$sel:idleDisconnectTimeoutInSeconds:Fleet'] :: Fleet -> Maybe Int

-- | The name of the image used to create the fleet.
[$sel:imageName:Fleet'] :: Fleet -> Maybe Text

-- | The time the fleet was created.
[$sel:createdTime:Fleet'] :: Fleet -> Maybe POSIX

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
[$sel:streamView:Fleet'] :: Fleet -> Maybe StreamView

-- | The description to display.
[$sel:description:Fleet'] :: Fleet -> Maybe Text

-- | Indicates whether default internet access is enabled for the fleet.
[$sel:enableDefaultInternetAccess:Fleet'] :: Fleet -> Maybe Bool

-- | The fleet errors.
[$sel:fleetErrors:Fleet'] :: Fleet -> Maybe [FleetError]

-- | The fleet name to display.
[$sel:displayName:Fleet'] :: Fleet -> Maybe Text

-- | The ARN for the public, private, or shared image.
[$sel:imageArn:Fleet'] :: Fleet -> Maybe Text

-- | The Amazon Resource Name (ARN) for the fleet.
[$sel:arn:Fleet'] :: Fleet -> Text

-- | The name of the fleet.
[$sel:name:Fleet'] :: Fleet -> Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
[$sel:instanceType:Fleet'] :: Fleet -> Text

-- | The capacity status for the fleet.
[$sel:computeCapacityStatus:Fleet'] :: Fleet -> ComputeCapacityStatus

-- | The current state for the fleet.
[$sel:state:Fleet'] :: Fleet -> FleetState

-- | Create a value of <a>Fleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disconnectTimeoutInSeconds:Fleet'</a>,
--   <a>fleet_disconnectTimeoutInSeconds</a> - The amount of time that a
--   streaming session remains active after users disconnect. If they try
--   to reconnect to the streaming session after a disconnection or network
--   interruption within this time interval, they are connected to their
--   previous session. Otherwise, they are connected to a new session with
--   a new streaming instance.
--   
--   Specify a value between 60 and 360000.
--   
--   <a>$sel:maxUserDurationInSeconds:Fleet'</a>,
--   <a>fleet_maxUserDurationInSeconds</a> - The maximum amount of time
--   that a streaming session can remain active, in seconds. If users are
--   still connected to a streaming instance five minutes before this limit
--   is reached, they are prompted to save any open documents before being
--   disconnected. After this time elapses, the instance is terminated and
--   replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
--   
--   <a>$sel:vpcConfig:Fleet'</a>, <a>fleet_vpcConfig</a> - The VPC
--   configuration for the fleet.
--   
--   <a>$sel:iamRoleArn:Fleet'</a>, <a>fleet_iamRoleArn</a> - The ARN of
--   the IAM role that is applied to the fleet. To assume a role, the fleet
--   instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:domainJoinInfo:Fleet'</a>, <a>fleet_domainJoinInfo</a> - The
--   name of the directory and organizational unit (OU) to use to join the
--   fleet to a Microsoft Active Directory domain.
--   
--   <a>$sel:fleetType:Fleet'</a>, <a>fleet_fleetType</a> - The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
--   
--   <a>$sel:idleDisconnectTimeoutInSeconds:Fleet'</a>,
--   <a>fleet_idleDisconnectTimeoutInSeconds</a> - The amount of time that
--   users can be idle (inactive) before they are disconnected from their
--   streaming session and the <tt>DisconnectTimeoutInSeconds</tt> time
--   interval begins. Users are notified before they are disconnected due
--   to inactivity. If users try to reconnect to the streaming session
--   before the time interval specified in
--   <tt>DisconnectTimeoutInSeconds</tt> elapses, they are connected to
--   their previous session. Users are considered idle when they stop
--   providing keyboard or mouse input during their streaming session. File
--   uploads and downloads, audio in, audio out, and pixels changing do not
--   qualify as user activity. If users continue to be idle after the time
--   interval in <tt>IdleDisconnectTimeoutInSeconds</tt> elapses, they are
--   disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
--   
--   <a>$sel:imageName:Fleet'</a>, <a>fleet_imageName</a> - The name of the
--   image used to create the fleet.
--   
--   <a>$sel:createdTime:Fleet'</a>, <a>fleet_createdTime</a> - The time
--   the fleet was created.
--   
--   <a>$sel:streamView:Fleet'</a>, <a>fleet_streamView</a> - The AppStream
--   2.0 view that is displayed to your users when they stream from the
--   fleet. When <tt>APP</tt> is specified, only the windows of
--   applications opened by users display. When <tt>DESKTOP</tt> is
--   specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
--   
--   <a>$sel:description:Fleet'</a>, <a>fleet_description</a> - The
--   description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:Fleet'</a>,
--   <a>fleet_enableDefaultInternetAccess</a> - Indicates whether default
--   internet access is enabled for the fleet.
--   
--   <a>$sel:fleetErrors:Fleet'</a>, <a>fleet_fleetErrors</a> - The fleet
--   errors.
--   
--   <a>$sel:displayName:Fleet'</a>, <a>fleet_displayName</a> - The fleet
--   name to display.
--   
--   <a>$sel:imageArn:Fleet'</a>, <a>fleet_imageArn</a> - The ARN for the
--   public, private, or shared image.
--   
--   <a>$sel:arn:Fleet'</a>, <a>fleet_arn</a> - The Amazon Resource Name
--   (ARN) for the fleet.
--   
--   <a>$sel:name:Fleet'</a>, <a>fleet_name</a> - The name of the fleet.
--   
--   <a>$sel:instanceType:Fleet'</a>, <a>fleet_instanceType</a> - The
--   instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:computeCapacityStatus:Fleet'</a>,
--   <a>fleet_computeCapacityStatus</a> - The capacity status for the
--   fleet.
--   
--   <a>$sel:state:Fleet'</a>, <a>fleet_state</a> - The current state for
--   the fleet.
newFleet :: Text -> Text -> Text -> ComputeCapacityStatus -> FleetState -> Fleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If they try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
fleet_disconnectTimeoutInSeconds :: Lens' Fleet (Maybe Int)

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
fleet_maxUserDurationInSeconds :: Lens' Fleet (Maybe Int)

-- | The VPC configuration for the fleet.
fleet_vpcConfig :: Lens' Fleet (Maybe VpcConfig)

-- | The ARN of the IAM role that is applied to the fleet. To assume a
--   role, the fleet instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
fleet_iamRoleArn :: Lens' Fleet (Maybe Text)

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
fleet_domainJoinInfo :: Lens' Fleet (Maybe DomainJoinInfo)

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
fleet_fleetType :: Lens' Fleet (Maybe FleetType)

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
fleet_idleDisconnectTimeoutInSeconds :: Lens' Fleet (Maybe Int)

-- | The name of the image used to create the fleet.
fleet_imageName :: Lens' Fleet (Maybe Text)

-- | The time the fleet was created.
fleet_createdTime :: Lens' Fleet (Maybe UTCTime)

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
fleet_streamView :: Lens' Fleet (Maybe StreamView)

-- | The description to display.
fleet_description :: Lens' Fleet (Maybe Text)

-- | Indicates whether default internet access is enabled for the fleet.
fleet_enableDefaultInternetAccess :: Lens' Fleet (Maybe Bool)

-- | The fleet errors.
fleet_fleetErrors :: Lens' Fleet (Maybe [FleetError])

-- | The fleet name to display.
fleet_displayName :: Lens' Fleet (Maybe Text)

-- | The ARN for the public, private, or shared image.
fleet_imageArn :: Lens' Fleet (Maybe Text)

-- | The Amazon Resource Name (ARN) for the fleet.
fleet_arn :: Lens' Fleet Text

-- | The name of the fleet.
fleet_name :: Lens' Fleet Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
fleet_instanceType :: Lens' Fleet Text

-- | The capacity status for the fleet.
fleet_computeCapacityStatus :: Lens' Fleet ComputeCapacityStatus

-- | The current state for the fleet.
fleet_state :: Lens' Fleet FleetState
instance GHC.Generics.Generic Network.AWS.AppStream.Types.Fleet.Fleet
instance GHC.Show.Show Network.AWS.AppStream.Types.Fleet.Fleet
instance GHC.Read.Read Network.AWS.AppStream.Types.Fleet.Fleet
instance GHC.Classes.Eq Network.AWS.AppStream.Types.Fleet.Fleet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AppStream.Types.Fleet.Fleet
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.Types.Fleet.Fleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.Types.Fleet.Fleet


module Network.AWS.AppStream.Types

-- | API version <tt>2016-12-01</tt> of the Amazon AppStream SDK
--   configuration.
defaultService :: Service

-- | The specified resource exists and is not in use, but isn't available.
_ResourceNotAvailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The image can't be updated because it's not compatible for updates.
_IncompatibleImageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates an incorrect combination of parameters, or a missing
--   parameter.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource cannot be created because your AWS account is suspended.
--   For assistance, contact AWS Support.
_InvalidAccountStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The attempted operation is not permitted.
_OperationNotPermittedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified role is invalid.
_InvalidRoleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An API error occurred. Wait a few minutes and try again.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested limit exceeds the permitted limit for an account.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | AppStream 2.0 can’t process the request right now because the Describe
--   calls from your AWS account are being throttled by Amazon EC2. Try
--   again later.
_RequestLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AccessEndpointType
AccessEndpointType' :: Text -> AccessEndpointType
[fromAccessEndpointType] :: AccessEndpointType -> Text
pattern AccessEndpointType_STREAMING :: AccessEndpointType
newtype Action
Action' :: Text -> Action
[fromAction] :: Action -> Text
pattern Action_CLIPBOARD_COPY_FROM_LOCAL_DEVICE :: Action
pattern Action_CLIPBOARD_COPY_TO_LOCAL_DEVICE :: Action
pattern Action_DOMAIN_PASSWORD_SIGNIN :: Action
pattern Action_DOMAIN_SMART_CARD_SIGNIN :: Action
pattern Action_FILE_DOWNLOAD :: Action
pattern Action_FILE_UPLOAD :: Action
pattern Action_PRINTING_TO_LOCAL_DEVICE :: Action
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_API :: AuthenticationType
pattern AuthenticationType_SAML :: AuthenticationType
pattern AuthenticationType_USERPOOL :: AuthenticationType

-- | The fleet attribute.
newtype FleetAttribute
FleetAttribute' :: Text -> FleetAttribute
[fromFleetAttribute] :: FleetAttribute -> Text
pattern FleetAttribute_DOMAIN_JOIN_INFO :: FleetAttribute
pattern FleetAttribute_IAM_ROLE_ARN :: FleetAttribute
pattern FleetAttribute_VPC_CONFIGURATION :: FleetAttribute
pattern FleetAttribute_VPC_CONFIGURATION_SECURITY_GROUP_IDS :: FleetAttribute
newtype FleetErrorCode
FleetErrorCode' :: Text -> FleetErrorCode
[fromFleetErrorCode] :: FleetErrorCode -> Text
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_ACCESS_DENIED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_FILE_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_INVALID_PARAMETER :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_LOGON_FAILURE :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_MORE_DATA :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_NOT_SUPPORTED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_INTERNAL_SERVICE_ERROR :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_PASSWORD_EXPIRED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED :: FleetErrorCode
pattern FleetErrorCode_FLEET_INSTANCE_PROVISIONING_FAILURE :: FleetErrorCode
pattern FleetErrorCode_FLEET_STOPPED :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_IS_MISSING :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IGW_NOT_ATTACHED :: FleetErrorCode
pattern FleetErrorCode_IMAGE_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_INTERNAL_SERVICE_ERROR :: FleetErrorCode
pattern FleetErrorCode_INVALID_SUBNET_CONFIGURATION :: FleetErrorCode
pattern FleetErrorCode_MACHINE_ROLE_IS_MISSING :: FleetErrorCode
pattern FleetErrorCode_NETWORK_INTERFACE_LIMIT_EXCEEDED :: FleetErrorCode
pattern FleetErrorCode_SECURITY_GROUPS_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_STS_DISABLED_IN_REGION :: FleetErrorCode
pattern FleetErrorCode_SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES :: FleetErrorCode
pattern FleetErrorCode_SUBNET_NOT_FOUND :: FleetErrorCode
newtype FleetState
FleetState' :: Text -> FleetState
[fromFleetState] :: FleetState -> Text
pattern FleetState_RUNNING :: FleetState
pattern FleetState_STARTING :: FleetState
pattern FleetState_STOPPED :: FleetState
pattern FleetState_STOPPING :: FleetState
newtype FleetType
FleetType' :: Text -> FleetType
[fromFleetType] :: FleetType -> Text
pattern FleetType_ALWAYS_ON :: FleetType
pattern FleetType_ON_DEMAND :: FleetType
newtype ImageBuilderState
ImageBuilderState' :: Text -> ImageBuilderState
[fromImageBuilderState] :: ImageBuilderState -> Text
pattern ImageBuilderState_DELETING :: ImageBuilderState
pattern ImageBuilderState_FAILED :: ImageBuilderState
pattern ImageBuilderState_PENDING :: ImageBuilderState
pattern ImageBuilderState_PENDING_QUALIFICATION :: ImageBuilderState
pattern ImageBuilderState_REBOOTING :: ImageBuilderState
pattern ImageBuilderState_RUNNING :: ImageBuilderState
pattern ImageBuilderState_SNAPSHOTTING :: ImageBuilderState
pattern ImageBuilderState_STOPPED :: ImageBuilderState
pattern ImageBuilderState_STOPPING :: ImageBuilderState
pattern ImageBuilderState_UPDATING :: ImageBuilderState
pattern ImageBuilderState_UPDATING_AGENT :: ImageBuilderState
newtype ImageBuilderStateChangeReasonCode
ImageBuilderStateChangeReasonCode' :: Text -> ImageBuilderStateChangeReasonCode
[fromImageBuilderStateChangeReasonCode] :: ImageBuilderStateChangeReasonCode -> Text
pattern ImageBuilderStateChangeReasonCode_IMAGE_UNAVAILABLE :: ImageBuilderStateChangeReasonCode
pattern ImageBuilderStateChangeReasonCode_INTERNAL_ERROR :: ImageBuilderStateChangeReasonCode
newtype ImageState
ImageState' :: Text -> ImageState
[fromImageState] :: ImageState -> Text
pattern ImageState_AVAILABLE :: ImageState
pattern ImageState_COPYING :: ImageState
pattern ImageState_CREATING :: ImageState
pattern ImageState_DELETING :: ImageState
pattern ImageState_FAILED :: ImageState
pattern ImageState_IMPORTING :: ImageState
pattern ImageState_PENDING :: ImageState
newtype ImageStateChangeReasonCode
ImageStateChangeReasonCode' :: Text -> ImageStateChangeReasonCode
[fromImageStateChangeReasonCode] :: ImageStateChangeReasonCode -> Text
pattern ImageStateChangeReasonCode_IMAGE_BUILDER_NOT_AVAILABLE :: ImageStateChangeReasonCode
pattern ImageStateChangeReasonCode_IMAGE_COPY_FAILURE :: ImageStateChangeReasonCode
pattern ImageStateChangeReasonCode_INTERNAL_ERROR :: ImageStateChangeReasonCode
newtype MessageAction
MessageAction' :: Text -> MessageAction
[fromMessageAction] :: MessageAction -> Text
pattern MessageAction_RESEND :: MessageAction
pattern MessageAction_SUPPRESS :: MessageAction
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_DISABLED :: Permission
pattern Permission_ENABLED :: Permission
newtype PlatformType
PlatformType' :: Text -> PlatformType
[fromPlatformType] :: PlatformType -> Text
pattern PlatformType_WINDOWS :: PlatformType
pattern PlatformType_WINDOWS_SERVER_2016 :: PlatformType
pattern PlatformType_WINDOWS_SERVER_2019 :: PlatformType
newtype SessionConnectionState
SessionConnectionState' :: Text -> SessionConnectionState
[fromSessionConnectionState] :: SessionConnectionState -> Text
pattern SessionConnectionState_CONNECTED :: SessionConnectionState
pattern SessionConnectionState_NOT_CONNECTED :: SessionConnectionState

-- | Possible values for the state of a streaming session.
newtype SessionState
SessionState' :: Text -> SessionState
[fromSessionState] :: SessionState -> Text
pattern SessionState_ACTIVE :: SessionState
pattern SessionState_EXPIRED :: SessionState
pattern SessionState_PENDING :: SessionState
newtype StackAttribute
StackAttribute' :: Text -> StackAttribute
[fromStackAttribute] :: StackAttribute -> Text
pattern StackAttribute_ACCESS_ENDPOINTS :: StackAttribute
pattern StackAttribute_EMBED_HOST_DOMAINS :: StackAttribute
pattern StackAttribute_FEEDBACK_URL :: StackAttribute
pattern StackAttribute_IAM_ROLE_ARN :: StackAttribute
pattern StackAttribute_REDIRECT_URL :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTORS :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_GOOGLE_DRIVE :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_HOMEFOLDERS :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_ONE_DRIVE :: StackAttribute
pattern StackAttribute_THEME_NAME :: StackAttribute
pattern StackAttribute_USER_SETTINGS :: StackAttribute
newtype StackErrorCode
StackErrorCode' :: Text -> StackErrorCode
[fromStackErrorCode] :: StackErrorCode -> Text
pattern StackErrorCode_INTERNAL_SERVICE_ERROR :: StackErrorCode
pattern StackErrorCode_STORAGE_CONNECTOR_ERROR :: StackErrorCode

-- | The type of storage connector.
newtype StorageConnectorType
StorageConnectorType' :: Text -> StorageConnectorType
[fromStorageConnectorType] :: StorageConnectorType -> Text
pattern StorageConnectorType_GOOGLE_DRIVE :: StorageConnectorType
pattern StorageConnectorType_HOMEFOLDERS :: StorageConnectorType
pattern StorageConnectorType_ONE_DRIVE :: StorageConnectorType
newtype StreamView
StreamView' :: Text -> StreamView
[fromStreamView] :: StreamView -> Text
pattern StreamView_APP :: StreamView
pattern StreamView_DESKTOP :: StreamView
newtype UsageReportExecutionErrorCode
UsageReportExecutionErrorCode' :: Text -> UsageReportExecutionErrorCode
[fromUsageReportExecutionErrorCode] :: UsageReportExecutionErrorCode -> Text
pattern UsageReportExecutionErrorCode_ACCESS_DENIED :: UsageReportExecutionErrorCode
pattern UsageReportExecutionErrorCode_INTERNAL_SERVICE_ERROR :: UsageReportExecutionErrorCode
pattern UsageReportExecutionErrorCode_RESOURCE_NOT_FOUND :: UsageReportExecutionErrorCode
newtype UsageReportSchedule
UsageReportSchedule' :: Text -> UsageReportSchedule
[fromUsageReportSchedule] :: UsageReportSchedule -> Text
pattern UsageReportSchedule_DAILY :: UsageReportSchedule
newtype UserStackAssociationErrorCode
UserStackAssociationErrorCode' :: Text -> UserStackAssociationErrorCode
[fromUserStackAssociationErrorCode] :: UserStackAssociationErrorCode -> Text
pattern UserStackAssociationErrorCode_DIRECTORY_NOT_FOUND :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_INTERNAL_ERROR :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_STACK_NOT_FOUND :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_USER_NAME_NOT_FOUND :: UserStackAssociationErrorCode
newtype VisibilityType
VisibilityType' :: Text -> VisibilityType
[fromVisibilityType] :: VisibilityType -> Text
pattern VisibilityType_PRIVATE :: VisibilityType
pattern VisibilityType_PUBLIC :: VisibilityType
pattern VisibilityType_SHARED :: VisibilityType

-- | Describes an interface VPC endpoint (interface endpoint) that lets you
--   create a private connection between the virtual private cloud (VPC)
--   that you specify and AppStream 2.0. When you specify an interface
--   endpoint for a stack, users of the stack can connect to AppStream 2.0
--   only through that endpoint. When you specify an interface endpoint for
--   an image builder, administrators can connect to the image builder only
--   through that endpoint.
--   
--   <i>See:</i> <a>newAccessEndpoint</a> smart constructor.
data AccessEndpoint
AccessEndpoint' :: Maybe Text -> AccessEndpointType -> AccessEndpoint

-- | The identifier (ID) of the VPC in which the interface endpoint is
--   used.
[$sel:vpceId:AccessEndpoint'] :: AccessEndpoint -> Maybe Text

-- | The type of interface endpoint.
[$sel:endpointType:AccessEndpoint'] :: AccessEndpoint -> AccessEndpointType

-- | Create a value of <a>AccessEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceId:AccessEndpoint'</a>, <a>accessEndpoint_vpceId</a> - The
--   identifier (ID) of the VPC in which the interface endpoint is used.
--   
--   <a>$sel:endpointType:AccessEndpoint'</a>,
--   <a>accessEndpoint_endpointType</a> - The type of interface endpoint.
newAccessEndpoint :: AccessEndpointType -> AccessEndpoint

-- | The identifier (ID) of the VPC in which the interface endpoint is
--   used.
accessEndpoint_vpceId :: Lens' AccessEndpoint (Maybe Text)

-- | The type of interface endpoint.
accessEndpoint_endpointType :: Lens' AccessEndpoint AccessEndpointType

-- | Describes an application in the application catalog.
--   
--   <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | The URL for the application icon. This URL might be time-limited.
[$sel:iconURL:Application'] :: Application -> Maybe Text

-- | The path to the application executable in the instance.
[$sel:launchPath:Application'] :: Application -> Maybe Text

-- | Additional attributes that describe the application.
[$sel:metadata:Application'] :: Application -> Maybe (HashMap Text Text)

-- | If there is a problem, the application can be disabled after image
--   creation.
[$sel:enabled:Application'] :: Application -> Maybe Bool

-- | The name of the application.
[$sel:name:Application'] :: Application -> Maybe Text

-- | The arguments that are passed to the application at launch.
[$sel:launchParameters:Application'] :: Application -> Maybe Text

-- | The application name to display.
[$sel:displayName:Application'] :: Application -> Maybe Text

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iconURL:Application'</a>, <a>application_iconURL</a> - The URL
--   for the application icon. This URL might be time-limited.
--   
--   <a>$sel:launchPath:Application'</a>, <a>application_launchPath</a> -
--   The path to the application executable in the instance.
--   
--   <a>$sel:metadata:Application'</a>, <a>application_metadata</a> -
--   Additional attributes that describe the application.
--   
--   <a>$sel:enabled:Application'</a>, <a>application_enabled</a> - If
--   there is a problem, the application can be disabled after image
--   creation.
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The name of
--   the application.
--   
--   <a>$sel:launchParameters:Application'</a>,
--   <a>application_launchParameters</a> - The arguments that are passed to
--   the application at launch.
--   
--   <a>$sel:displayName:Application'</a>, <a>application_displayName</a> -
--   The application name to display.
newApplication :: Application

-- | The URL for the application icon. This URL might be time-limited.
application_iconURL :: Lens' Application (Maybe Text)

-- | The path to the application executable in the instance.
application_launchPath :: Lens' Application (Maybe Text)

-- | Additional attributes that describe the application.
application_metadata :: Lens' Application (Maybe (HashMap Text Text))

-- | If there is a problem, the application can be disabled after image
--   creation.
application_enabled :: Lens' Application (Maybe Bool)

-- | The name of the application.
application_name :: Lens' Application (Maybe Text)

-- | The arguments that are passed to the application at launch.
application_launchParameters :: Lens' Application (Maybe Text)

-- | The application name to display.
application_displayName :: Lens' Application (Maybe Text)

-- | The persistent application settings for users of a stack.
--   
--   <i>See:</i> <a>newApplicationSettings</a> smart constructor.
data ApplicationSettings
ApplicationSettings' :: Maybe Text -> Bool -> ApplicationSettings

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored. You can allow the same persistent application
--   settings to be used across multiple stacks by specifying the same
--   settings group for each stack.
[$sel:settingsGroup:ApplicationSettings'] :: ApplicationSettings -> Maybe Text

-- | Enables or disables persistent application settings for users during
--   their streaming sessions.
[$sel:enabled:ApplicationSettings'] :: ApplicationSettings -> Bool

-- | Create a value of <a>ApplicationSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settingsGroup:ApplicationSettings'</a>,
--   <a>applicationSettings_settingsGroup</a> - The path prefix for the S3
--   bucket where users’ persistent application settings are stored. You
--   can allow the same persistent application settings to be used across
--   multiple stacks by specifying the same settings group for each stack.
--   
--   <a>$sel:enabled:ApplicationSettings'</a>,
--   <a>applicationSettings_enabled</a> - Enables or disables persistent
--   application settings for users during their streaming sessions.
newApplicationSettings :: Bool -> ApplicationSettings

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored. You can allow the same persistent application
--   settings to be used across multiple stacks by specifying the same
--   settings group for each stack.
applicationSettings_settingsGroup :: Lens' ApplicationSettings (Maybe Text)

-- | Enables or disables persistent application settings for users during
--   their streaming sessions.
applicationSettings_enabled :: Lens' ApplicationSettings Bool

-- | Describes the persistent application settings for users of a stack.
--   
--   <i>See:</i> <a>newApplicationSettingsResponse</a> smart constructor.
data ApplicationSettingsResponse
ApplicationSettingsResponse' :: Maybe Bool -> Maybe Text -> Maybe Text -> ApplicationSettingsResponse

-- | Specifies whether persistent application settings are enabled for
--   users during their streaming sessions.
[$sel:enabled:ApplicationSettingsResponse'] :: ApplicationSettingsResponse -> Maybe Bool

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored.
[$sel:settingsGroup:ApplicationSettingsResponse'] :: ApplicationSettingsResponse -> Maybe Text

-- | The S3 bucket where users’ persistent application settings are stored.
--   When persistent application settings are enabled for the first time
--   for an account in an AWS Region, an S3 bucket is created. The bucket
--   is unique to the AWS account and the Region.
[$sel:s3BucketName:ApplicationSettingsResponse'] :: ApplicationSettingsResponse -> Maybe Text

-- | Create a value of <a>ApplicationSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_enabled</a> - Specifies whether
--   persistent application settings are enabled for users during their
--   streaming sessions.
--   
--   <a>$sel:settingsGroup:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_settingsGroup</a> - The path prefix for
--   the S3 bucket where users’ persistent application settings are stored.
--   
--   <a>$sel:s3BucketName:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_s3BucketName</a> - The S3 bucket where
--   users’ persistent application settings are stored. When persistent
--   application settings are enabled for the first time for an account in
--   an AWS Region, an S3 bucket is created. The bucket is unique to the
--   AWS account and the Region.
newApplicationSettingsResponse :: ApplicationSettingsResponse

-- | Specifies whether persistent application settings are enabled for
--   users during their streaming sessions.
applicationSettingsResponse_enabled :: Lens' ApplicationSettingsResponse (Maybe Bool)

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored.
applicationSettingsResponse_settingsGroup :: Lens' ApplicationSettingsResponse (Maybe Text)

-- | The S3 bucket where users’ persistent application settings are stored.
--   When persistent application settings are enabled for the first time
--   for an account in an AWS Region, an S3 bucket is created. The bucket
--   is unique to the AWS account and the Region.
applicationSettingsResponse_s3BucketName :: Lens' ApplicationSettingsResponse (Maybe Text)

-- | Describes the capacity for a fleet.
--   
--   <i>See:</i> <a>newComputeCapacity</a> smart constructor.
data ComputeCapacity
ComputeCapacity' :: Int -> ComputeCapacity

-- | The desired number of streaming instances.
[$sel:desiredInstances:ComputeCapacity'] :: ComputeCapacity -> Int

-- | Create a value of <a>ComputeCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:desiredInstances:ComputeCapacity'</a>,
--   <a>computeCapacity_desiredInstances</a> - The desired number of
--   streaming instances.
newComputeCapacity :: Int -> ComputeCapacity

-- | The desired number of streaming instances.
computeCapacity_desiredInstances :: Lens' ComputeCapacity Int

-- | Describes the capacity status for a fleet.
--   
--   <i>See:</i> <a>newComputeCapacityStatus</a> smart constructor.
data ComputeCapacityStatus
ComputeCapacityStatus' :: Maybe Int -> Maybe Int -> Maybe Int -> Int -> ComputeCapacityStatus

-- | The total number of simultaneous streaming instances that are running.
[$sel:running:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Maybe Int

-- | The number of currently available instances that can be used to stream
--   sessions.
[$sel:available:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Maybe Int

-- | The number of instances in use for streaming.
[$sel:inUse:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Maybe Int

-- | The desired number of streaming instances.
[$sel:desired:ComputeCapacityStatus'] :: ComputeCapacityStatus -> Int

-- | Create a value of <a>ComputeCapacityStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:running:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_running</a> - The total number of
--   simultaneous streaming instances that are running.
--   
--   <a>$sel:available:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_available</a> - The number of currently
--   available instances that can be used to stream sessions.
--   
--   <a>$sel:inUse:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_inUse</a> - The number of instances in use
--   for streaming.
--   
--   <a>$sel:desired:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_desired</a> - The desired number of streaming
--   instances.
newComputeCapacityStatus :: Int -> ComputeCapacityStatus

-- | The total number of simultaneous streaming instances that are running.
computeCapacityStatus_running :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The number of currently available instances that can be used to stream
--   sessions.
computeCapacityStatus_available :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The number of instances in use for streaming.
computeCapacityStatus_inUse :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The desired number of streaming instances.
computeCapacityStatus_desired :: Lens' ComputeCapacityStatus Int

-- | Describes the configuration information required to join fleets and
--   image builders to Microsoft Active Directory domains.
--   
--   <i>See:</i> <a>newDirectoryConfig</a> smart constructor.
data DirectoryConfig
DirectoryConfig' :: Maybe ServiceAccountCredentials -> Maybe POSIX -> Maybe [Text] -> Text -> DirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
[$sel:serviceAccountCredentials:DirectoryConfig'] :: DirectoryConfig -> Maybe ServiceAccountCredentials

-- | The time the directory configuration was created.
[$sel:createdTime:DirectoryConfig'] :: DirectoryConfig -> Maybe POSIX

-- | The distinguished names of the organizational units for computer
--   accounts.
[$sel:organizationalUnitDistinguishedNames:DirectoryConfig'] :: DirectoryConfig -> Maybe [Text]

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
[$sel:directoryName:DirectoryConfig'] :: DirectoryConfig -> Text

-- | Create a value of <a>DirectoryConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceAccountCredentials:DirectoryConfig'</a>,
--   <a>directoryConfig_serviceAccountCredentials</a> - The credentials for
--   the service account used by the fleet or image builder to connect to
--   the directory.
--   
--   <a>$sel:createdTime:DirectoryConfig'</a>,
--   <a>directoryConfig_createdTime</a> - The time the directory
--   configuration was created.
--   
--   <a>$sel:organizationalUnitDistinguishedNames:DirectoryConfig'</a>,
--   <a>directoryConfig_organizationalUnitDistinguishedNames</a> - The
--   distinguished names of the organizational units for computer accounts.
--   
--   <a>$sel:directoryName:DirectoryConfig'</a>,
--   <a>directoryConfig_directoryName</a> - The fully qualified name of the
--   directory (for example, corp.example.com).
newDirectoryConfig :: Text -> DirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
directoryConfig_serviceAccountCredentials :: Lens' DirectoryConfig (Maybe ServiceAccountCredentials)

-- | The time the directory configuration was created.
directoryConfig_createdTime :: Lens' DirectoryConfig (Maybe UTCTime)

-- | The distinguished names of the organizational units for computer
--   accounts.
directoryConfig_organizationalUnitDistinguishedNames :: Lens' DirectoryConfig (Maybe [Text])

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
directoryConfig_directoryName :: Lens' DirectoryConfig Text

-- | Describes the configuration information required to join fleets and
--   image builders to Microsoft Active Directory domains.
--   
--   <i>See:</i> <a>newDomainJoinInfo</a> smart constructor.
data DomainJoinInfo
DomainJoinInfo' :: Maybe Text -> Maybe Text -> DomainJoinInfo

-- | The distinguished name of the organizational unit for computer
--   accounts.
[$sel:organizationalUnitDistinguishedName:DomainJoinInfo'] :: DomainJoinInfo -> Maybe Text

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
[$sel:directoryName:DomainJoinInfo'] :: DomainJoinInfo -> Maybe Text

-- | Create a value of <a>DomainJoinInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationalUnitDistinguishedName:DomainJoinInfo'</a>,
--   <a>domainJoinInfo_organizationalUnitDistinguishedName</a> - The
--   distinguished name of the organizational unit for computer accounts.
--   
--   <a>$sel:directoryName:DomainJoinInfo'</a>,
--   <a>domainJoinInfo_directoryName</a> - The fully qualified name of the
--   directory (for example, corp.example.com).
newDomainJoinInfo :: DomainJoinInfo

-- | The distinguished name of the organizational unit for computer
--   accounts.
domainJoinInfo_organizationalUnitDistinguishedName :: Lens' DomainJoinInfo (Maybe Text)

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
domainJoinInfo_directoryName :: Lens' DomainJoinInfo (Maybe Text)

-- | Describes a fleet.
--   
--   <i>See:</i> <a>newFleet</a> smart constructor.
data Fleet
Fleet' :: Maybe Int -> Maybe Int -> Maybe VpcConfig -> Maybe Text -> Maybe DomainJoinInfo -> Maybe FleetType -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe StreamView -> Maybe Text -> Maybe Bool -> Maybe [FleetError] -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> ComputeCapacityStatus -> FleetState -> Fleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If they try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
[$sel:disconnectTimeoutInSeconds:Fleet'] :: Fleet -> Maybe Int

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
[$sel:maxUserDurationInSeconds:Fleet'] :: Fleet -> Maybe Int

-- | The VPC configuration for the fleet.
[$sel:vpcConfig:Fleet'] :: Fleet -> Maybe VpcConfig

-- | The ARN of the IAM role that is applied to the fleet. To assume a
--   role, the fleet instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:iamRoleArn:Fleet'] :: Fleet -> Maybe Text

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
[$sel:domainJoinInfo:Fleet'] :: Fleet -> Maybe DomainJoinInfo

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
[$sel:fleetType:Fleet'] :: Fleet -> Maybe FleetType

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
[$sel:idleDisconnectTimeoutInSeconds:Fleet'] :: Fleet -> Maybe Int

-- | The name of the image used to create the fleet.
[$sel:imageName:Fleet'] :: Fleet -> Maybe Text

-- | The time the fleet was created.
[$sel:createdTime:Fleet'] :: Fleet -> Maybe POSIX

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
[$sel:streamView:Fleet'] :: Fleet -> Maybe StreamView

-- | The description to display.
[$sel:description:Fleet'] :: Fleet -> Maybe Text

-- | Indicates whether default internet access is enabled for the fleet.
[$sel:enableDefaultInternetAccess:Fleet'] :: Fleet -> Maybe Bool

-- | The fleet errors.
[$sel:fleetErrors:Fleet'] :: Fleet -> Maybe [FleetError]

-- | The fleet name to display.
[$sel:displayName:Fleet'] :: Fleet -> Maybe Text

-- | The ARN for the public, private, or shared image.
[$sel:imageArn:Fleet'] :: Fleet -> Maybe Text

-- | The Amazon Resource Name (ARN) for the fleet.
[$sel:arn:Fleet'] :: Fleet -> Text

-- | The name of the fleet.
[$sel:name:Fleet'] :: Fleet -> Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
[$sel:instanceType:Fleet'] :: Fleet -> Text

-- | The capacity status for the fleet.
[$sel:computeCapacityStatus:Fleet'] :: Fleet -> ComputeCapacityStatus

-- | The current state for the fleet.
[$sel:state:Fleet'] :: Fleet -> FleetState

-- | Create a value of <a>Fleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disconnectTimeoutInSeconds:Fleet'</a>,
--   <a>fleet_disconnectTimeoutInSeconds</a> - The amount of time that a
--   streaming session remains active after users disconnect. If they try
--   to reconnect to the streaming session after a disconnection or network
--   interruption within this time interval, they are connected to their
--   previous session. Otherwise, they are connected to a new session with
--   a new streaming instance.
--   
--   Specify a value between 60 and 360000.
--   
--   <a>$sel:maxUserDurationInSeconds:Fleet'</a>,
--   <a>fleet_maxUserDurationInSeconds</a> - The maximum amount of time
--   that a streaming session can remain active, in seconds. If users are
--   still connected to a streaming instance five minutes before this limit
--   is reached, they are prompted to save any open documents before being
--   disconnected. After this time elapses, the instance is terminated and
--   replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
--   
--   <a>$sel:vpcConfig:Fleet'</a>, <a>fleet_vpcConfig</a> - The VPC
--   configuration for the fleet.
--   
--   <a>$sel:iamRoleArn:Fleet'</a>, <a>fleet_iamRoleArn</a> - The ARN of
--   the IAM role that is applied to the fleet. To assume a role, the fleet
--   instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:domainJoinInfo:Fleet'</a>, <a>fleet_domainJoinInfo</a> - The
--   name of the directory and organizational unit (OU) to use to join the
--   fleet to a Microsoft Active Directory domain.
--   
--   <a>$sel:fleetType:Fleet'</a>, <a>fleet_fleetType</a> - The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
--   
--   <a>$sel:idleDisconnectTimeoutInSeconds:Fleet'</a>,
--   <a>fleet_idleDisconnectTimeoutInSeconds</a> - The amount of time that
--   users can be idle (inactive) before they are disconnected from their
--   streaming session and the <tt>DisconnectTimeoutInSeconds</tt> time
--   interval begins. Users are notified before they are disconnected due
--   to inactivity. If users try to reconnect to the streaming session
--   before the time interval specified in
--   <tt>DisconnectTimeoutInSeconds</tt> elapses, they are connected to
--   their previous session. Users are considered idle when they stop
--   providing keyboard or mouse input during their streaming session. File
--   uploads and downloads, audio in, audio out, and pixels changing do not
--   qualify as user activity. If users continue to be idle after the time
--   interval in <tt>IdleDisconnectTimeoutInSeconds</tt> elapses, they are
--   disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
--   
--   <a>$sel:imageName:Fleet'</a>, <a>fleet_imageName</a> - The name of the
--   image used to create the fleet.
--   
--   <a>$sel:createdTime:Fleet'</a>, <a>fleet_createdTime</a> - The time
--   the fleet was created.
--   
--   <a>$sel:streamView:Fleet'</a>, <a>fleet_streamView</a> - The AppStream
--   2.0 view that is displayed to your users when they stream from the
--   fleet. When <tt>APP</tt> is specified, only the windows of
--   applications opened by users display. When <tt>DESKTOP</tt> is
--   specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
--   
--   <a>$sel:description:Fleet'</a>, <a>fleet_description</a> - The
--   description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:Fleet'</a>,
--   <a>fleet_enableDefaultInternetAccess</a> - Indicates whether default
--   internet access is enabled for the fleet.
--   
--   <a>$sel:fleetErrors:Fleet'</a>, <a>fleet_fleetErrors</a> - The fleet
--   errors.
--   
--   <a>$sel:displayName:Fleet'</a>, <a>fleet_displayName</a> - The fleet
--   name to display.
--   
--   <a>$sel:imageArn:Fleet'</a>, <a>fleet_imageArn</a> - The ARN for the
--   public, private, or shared image.
--   
--   <a>$sel:arn:Fleet'</a>, <a>fleet_arn</a> - The Amazon Resource Name
--   (ARN) for the fleet.
--   
--   <a>$sel:name:Fleet'</a>, <a>fleet_name</a> - The name of the fleet.
--   
--   <a>$sel:instanceType:Fleet'</a>, <a>fleet_instanceType</a> - The
--   instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:computeCapacityStatus:Fleet'</a>,
--   <a>fleet_computeCapacityStatus</a> - The capacity status for the
--   fleet.
--   
--   <a>$sel:state:Fleet'</a>, <a>fleet_state</a> - The current state for
--   the fleet.
newFleet :: Text -> Text -> Text -> ComputeCapacityStatus -> FleetState -> Fleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If they try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
fleet_disconnectTimeoutInSeconds :: Lens' Fleet (Maybe Int)

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
fleet_maxUserDurationInSeconds :: Lens' Fleet (Maybe Int)

-- | The VPC configuration for the fleet.
fleet_vpcConfig :: Lens' Fleet (Maybe VpcConfig)

-- | The ARN of the IAM role that is applied to the fleet. To assume a
--   role, the fleet instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
fleet_iamRoleArn :: Lens' Fleet (Maybe Text)

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
fleet_domainJoinInfo :: Lens' Fleet (Maybe DomainJoinInfo)

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
fleet_fleetType :: Lens' Fleet (Maybe FleetType)

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
fleet_idleDisconnectTimeoutInSeconds :: Lens' Fleet (Maybe Int)

-- | The name of the image used to create the fleet.
fleet_imageName :: Lens' Fleet (Maybe Text)

-- | The time the fleet was created.
fleet_createdTime :: Lens' Fleet (Maybe UTCTime)

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
fleet_streamView :: Lens' Fleet (Maybe StreamView)

-- | The description to display.
fleet_description :: Lens' Fleet (Maybe Text)

-- | Indicates whether default internet access is enabled for the fleet.
fleet_enableDefaultInternetAccess :: Lens' Fleet (Maybe Bool)

-- | The fleet errors.
fleet_fleetErrors :: Lens' Fleet (Maybe [FleetError])

-- | The fleet name to display.
fleet_displayName :: Lens' Fleet (Maybe Text)

-- | The ARN for the public, private, or shared image.
fleet_imageArn :: Lens' Fleet (Maybe Text)

-- | The Amazon Resource Name (ARN) for the fleet.
fleet_arn :: Lens' Fleet Text

-- | The name of the fleet.
fleet_name :: Lens' Fleet Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
fleet_instanceType :: Lens' Fleet Text

-- | The capacity status for the fleet.
fleet_computeCapacityStatus :: Lens' Fleet ComputeCapacityStatus

-- | The current state for the fleet.
fleet_state :: Lens' Fleet FleetState

-- | Describes a fleet error.
--   
--   <i>See:</i> <a>newFleetError</a> smart constructor.
data FleetError
FleetError' :: Maybe Text -> Maybe FleetErrorCode -> FleetError

-- | The error message.
[$sel:errorMessage:FleetError'] :: FleetError -> Maybe Text

-- | The error code.
[$sel:errorCode:FleetError'] :: FleetError -> Maybe FleetErrorCode

-- | Create a value of <a>FleetError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:FleetError'</a>, <a>fleetError_errorMessage</a> -
--   The error message.
--   
--   <a>$sel:errorCode:FleetError'</a>, <a>fleetError_errorCode</a> - The
--   error code.
newFleetError :: FleetError

-- | The error message.
fleetError_errorMessage :: Lens' FleetError (Maybe Text)

-- | The error code.
fleetError_errorCode :: Lens' FleetError (Maybe FleetErrorCode)

-- | Describes an image.
--   
--   <i>See:</i> <a>newImage</a> smart constructor.
data Image
Image' :: Maybe ImagePermissions -> Maybe PlatformType -> Maybe [ResourceError] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ImageStateChangeReason -> Maybe Text -> Maybe ImageState -> Maybe [Application] -> Maybe Text -> Maybe Text -> Maybe VisibilityType -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Text -> Image

-- | The permissions to provide to the destination AWS account for the
--   specified image.
[$sel:imagePermissions:Image'] :: Image -> Maybe ImagePermissions

-- | The operating system platform of the image.
[$sel:platform:Image'] :: Image -> Maybe PlatformType

-- | Describes the errors that are returned when a new image can't be
--   created.
[$sel:imageErrors:Image'] :: Image -> Maybe [ResourceError]

-- | The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
[$sel:imageBuilderName:Image'] :: Image -> Maybe Text

-- | The ARN of the image.
[$sel:arn:Image'] :: Image -> Maybe Text

-- | The time the image was created.
[$sel:createdTime:Image'] :: Image -> Maybe POSIX

-- | The reason why the last state change occurred.
[$sel:stateChangeReason:Image'] :: Image -> Maybe ImageStateChangeReason

-- | The ARN of the image from which this image was created.
[$sel:baseImageArn:Image'] :: Image -> Maybe Text

-- | The image starts in the <tt>PENDING</tt> state. If image creation
--   succeeds, the state is <tt>AVAILABLE</tt>. If image creation fails,
--   the state is <tt>FAILED</tt>.
[$sel:state:Image'] :: Image -> Maybe ImageState

-- | The applications associated with the image.
[$sel:applications:Image'] :: Image -> Maybe [Application]

-- | The version of the AppStream 2.0 agent to use for instances that are
--   launched from this image.
[$sel:appstreamAgentVersion:Image'] :: Image -> Maybe Text

-- | The description to display.
[$sel:description:Image'] :: Image -> Maybe Text

-- | Indicates whether the image is public or private.
[$sel:visibility:Image'] :: Image -> Maybe VisibilityType

-- | Indicates whether an image builder can be launched from this image.
[$sel:imageBuilderSupported:Image'] :: Image -> Maybe Bool

-- | The image name to display.
[$sel:displayName:Image'] :: Image -> Maybe Text

-- | The release date of the public base image. For private images, this
--   date is the release date of the base image from which the image was
--   created.
[$sel:publicBaseImageReleasedDate:Image'] :: Image -> Maybe POSIX

-- | The name of the image.
[$sel:name:Image'] :: Image -> Text

-- | Create a value of <a>Image</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePermissions:Image'</a>, <a>image_imagePermissions</a> -
--   The permissions to provide to the destination AWS account for the
--   specified image.
--   
--   <a>$sel:platform:Image'</a>, <a>image_platform</a> - The operating
--   system platform of the image.
--   
--   <a>$sel:imageErrors:Image'</a>, <a>image_imageErrors</a> - Describes
--   the errors that are returned when a new image can't be created.
--   
--   <a>$sel:imageBuilderName:Image'</a>, <a>image_imageBuilderName</a> -
--   The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
--   
--   <a>$sel:arn:Image'</a>, <a>image_arn</a> - The ARN of the image.
--   
--   <a>$sel:createdTime:Image'</a>, <a>image_createdTime</a> - The time
--   the image was created.
--   
--   <a>$sel:stateChangeReason:Image'</a>, <a>image_stateChangeReason</a> -
--   The reason why the last state change occurred.
--   
--   <a>$sel:baseImageArn:Image'</a>, <a>image_baseImageArn</a> - The ARN
--   of the image from which this image was created.
--   
--   <a>$sel:state:Image'</a>, <a>image_state</a> - The image starts in the
--   <tt>PENDING</tt> state. If image creation succeeds, the state is
--   <tt>AVAILABLE</tt>. If image creation fails, the state is
--   <tt>FAILED</tt>.
--   
--   <a>$sel:applications:Image'</a>, <a>image_applications</a> - The
--   applications associated with the image.
--   
--   <a>$sel:appstreamAgentVersion:Image'</a>,
--   <a>image_appstreamAgentVersion</a> - The version of the AppStream 2.0
--   agent to use for instances that are launched from this image.
--   
--   <a>$sel:description:Image'</a>, <a>image_description</a> - The
--   description to display.
--   
--   <a>$sel:visibility:Image'</a>, <a>image_visibility</a> - Indicates
--   whether the image is public or private.
--   
--   <a>$sel:imageBuilderSupported:Image'</a>,
--   <a>image_imageBuilderSupported</a> - Indicates whether an image
--   builder can be launched from this image.
--   
--   <a>$sel:displayName:Image'</a>, <a>image_displayName</a> - The image
--   name to display.
--   
--   <a>$sel:publicBaseImageReleasedDate:Image'</a>,
--   <a>image_publicBaseImageReleasedDate</a> - The release date of the
--   public base image. For private images, this date is the release date
--   of the base image from which the image was created.
--   
--   <a>$sel:name:Image'</a>, <a>image_name</a> - The name of the image.
newImage :: Text -> Image

-- | The permissions to provide to the destination AWS account for the
--   specified image.
image_imagePermissions :: Lens' Image (Maybe ImagePermissions)

-- | The operating system platform of the image.
image_platform :: Lens' Image (Maybe PlatformType)

-- | Describes the errors that are returned when a new image can't be
--   created.
image_imageErrors :: Lens' Image (Maybe [ResourceError])

-- | The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
image_imageBuilderName :: Lens' Image (Maybe Text)

-- | The ARN of the image.
image_arn :: Lens' Image (Maybe Text)

-- | The time the image was created.
image_createdTime :: Lens' Image (Maybe UTCTime)

-- | The reason why the last state change occurred.
image_stateChangeReason :: Lens' Image (Maybe ImageStateChangeReason)

-- | The ARN of the image from which this image was created.
image_baseImageArn :: Lens' Image (Maybe Text)

-- | The image starts in the <tt>PENDING</tt> state. If image creation
--   succeeds, the state is <tt>AVAILABLE</tt>. If image creation fails,
--   the state is <tt>FAILED</tt>.
image_state :: Lens' Image (Maybe ImageState)

-- | The applications associated with the image.
image_applications :: Lens' Image (Maybe [Application])

-- | The version of the AppStream 2.0 agent to use for instances that are
--   launched from this image.
image_appstreamAgentVersion :: Lens' Image (Maybe Text)

-- | The description to display.
image_description :: Lens' Image (Maybe Text)

-- | Indicates whether the image is public or private.
image_visibility :: Lens' Image (Maybe VisibilityType)

-- | Indicates whether an image builder can be launched from this image.
image_imageBuilderSupported :: Lens' Image (Maybe Bool)

-- | The image name to display.
image_displayName :: Lens' Image (Maybe Text)

-- | The release date of the public base image. For private images, this
--   date is the release date of the base image from which the image was
--   created.
image_publicBaseImageReleasedDate :: Lens' Image (Maybe UTCTime)

-- | The name of the image.
image_name :: Lens' Image Text

-- | Describes a virtual machine that is used to create an image.
--   
--   <i>See:</i> <a>newImageBuilder</a> smart constructor.
data ImageBuilder
ImageBuilder' :: Maybe VpcConfig -> Maybe PlatformType -> Maybe Text -> Maybe (NonEmpty AccessEndpoint) -> Maybe DomainJoinInfo -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ImageBuilderStateChangeReason -> Maybe NetworkAccessConfiguration -> Maybe ImageBuilderState -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [ResourceError] -> Maybe Text -> Maybe Text -> Text -> ImageBuilder

-- | The VPC configuration of the image builder.
[$sel:vpcConfig:ImageBuilder'] :: ImageBuilder -> Maybe VpcConfig

-- | The operating system platform of the image builder.
[$sel:platform:ImageBuilder'] :: ImageBuilder -> Maybe PlatformType

-- | The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:iamRoleArn:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
[$sel:accessEndpoints:ImageBuilder'] :: ImageBuilder -> Maybe (NonEmpty AccessEndpoint)

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
[$sel:domainJoinInfo:ImageBuilder'] :: ImageBuilder -> Maybe DomainJoinInfo

-- | The instance type for the image builder. The following instance types
--   are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
[$sel:instanceType:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The ARN for the image builder.
[$sel:arn:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The time stamp when the image builder was created.
[$sel:createdTime:ImageBuilder'] :: ImageBuilder -> Maybe POSIX

-- | The reason why the last state change occurred.
[$sel:stateChangeReason:ImageBuilder'] :: ImageBuilder -> Maybe ImageBuilderStateChangeReason
[$sel:networkAccessConfiguration:ImageBuilder'] :: ImageBuilder -> Maybe NetworkAccessConfiguration

-- | The state of the image builder.
[$sel:state:ImageBuilder'] :: ImageBuilder -> Maybe ImageBuilderState

-- | The version of the AppStream 2.0 agent that is currently being used by
--   the image builder.
[$sel:appstreamAgentVersion:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The description to display.
[$sel:description:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | Enables or disables default internet access for the image builder.
[$sel:enableDefaultInternetAccess:ImageBuilder'] :: ImageBuilder -> Maybe Bool

-- | The image builder errors.
[$sel:imageBuilderErrors:ImageBuilder'] :: ImageBuilder -> Maybe [ResourceError]

-- | The image builder name to display.
[$sel:displayName:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The ARN of the image from which this builder was created.
[$sel:imageArn:ImageBuilder'] :: ImageBuilder -> Maybe Text

-- | The name of the image builder.
[$sel:name:ImageBuilder'] :: ImageBuilder -> Text

-- | Create a value of <a>ImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:ImageBuilder'</a>, <a>imageBuilder_vpcConfig</a> -
--   The VPC configuration of the image builder.
--   
--   <a>$sel:platform:ImageBuilder'</a>, <a>imageBuilder_platform</a> - The
--   operating system platform of the image builder.
--   
--   <a>$sel:iamRoleArn:ImageBuilder'</a>, <a>imageBuilder_iamRoleArn</a> -
--   The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:accessEndpoints:ImageBuilder'</a>,
--   <a>imageBuilder_accessEndpoints</a> - The list of virtual private
--   cloud (VPC) interface endpoint objects. Administrators can connect to
--   the image builder only through the specified endpoints.
--   
--   <a>$sel:domainJoinInfo:ImageBuilder'</a>,
--   <a>imageBuilder_domainJoinInfo</a> - The name of the directory and
--   organizational unit (OU) to use to join the image builder to a
--   Microsoft Active Directory domain.
--   
--   <a>$sel:instanceType:ImageBuilder'</a>,
--   <a>imageBuilder_instanceType</a> - The instance type for the image
--   builder. The following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:arn:ImageBuilder'</a>, <a>imageBuilder_arn</a> - The ARN for
--   the image builder.
--   
--   <a>$sel:createdTime:ImageBuilder'</a>, <a>imageBuilder_createdTime</a>
--   - The time stamp when the image builder was created.
--   
--   <a>$sel:stateChangeReason:ImageBuilder'</a>,
--   <a>imageBuilder_stateChangeReason</a> - The reason why the last state
--   change occurred.
--   
--   <a>$sel:networkAccessConfiguration:ImageBuilder'</a>,
--   <a>imageBuilder_networkAccessConfiguration</a> - Undocumented member.
--   
--   <a>$sel:state:ImageBuilder'</a>, <a>imageBuilder_state</a> - The state
--   of the image builder.
--   
--   <a>$sel:appstreamAgentVersion:ImageBuilder'</a>,
--   <a>imageBuilder_appstreamAgentVersion</a> - The version of the
--   AppStream 2.0 agent that is currently being used by the image builder.
--   
--   <a>$sel:description:ImageBuilder'</a>, <a>imageBuilder_description</a>
--   - The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:ImageBuilder'</a>,
--   <a>imageBuilder_enableDefaultInternetAccess</a> - Enables or disables
--   default internet access for the image builder.
--   
--   <a>$sel:imageBuilderErrors:ImageBuilder'</a>,
--   <a>imageBuilder_imageBuilderErrors</a> - The image builder errors.
--   
--   <a>$sel:displayName:ImageBuilder'</a>, <a>imageBuilder_displayName</a>
--   - The image builder name to display.
--   
--   <a>$sel:imageArn:ImageBuilder'</a>, <a>imageBuilder_imageArn</a> - The
--   ARN of the image from which this builder was created.
--   
--   <a>$sel:name:ImageBuilder'</a>, <a>imageBuilder_name</a> - The name of
--   the image builder.
newImageBuilder :: Text -> ImageBuilder

-- | The VPC configuration of the image builder.
imageBuilder_vpcConfig :: Lens' ImageBuilder (Maybe VpcConfig)

-- | The operating system platform of the image builder.
imageBuilder_platform :: Lens' ImageBuilder (Maybe PlatformType)

-- | The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
imageBuilder_iamRoleArn :: Lens' ImageBuilder (Maybe Text)

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
imageBuilder_accessEndpoints :: Lens' ImageBuilder (Maybe (NonEmpty AccessEndpoint))

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
imageBuilder_domainJoinInfo :: Lens' ImageBuilder (Maybe DomainJoinInfo)

-- | The instance type for the image builder. The following instance types
--   are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
imageBuilder_instanceType :: Lens' ImageBuilder (Maybe Text)

-- | The ARN for the image builder.
imageBuilder_arn :: Lens' ImageBuilder (Maybe Text)

-- | The time stamp when the image builder was created.
imageBuilder_createdTime :: Lens' ImageBuilder (Maybe UTCTime)

-- | The reason why the last state change occurred.
imageBuilder_stateChangeReason :: Lens' ImageBuilder (Maybe ImageBuilderStateChangeReason)

-- | Undocumented member.
imageBuilder_networkAccessConfiguration :: Lens' ImageBuilder (Maybe NetworkAccessConfiguration)

-- | The state of the image builder.
imageBuilder_state :: Lens' ImageBuilder (Maybe ImageBuilderState)

-- | The version of the AppStream 2.0 agent that is currently being used by
--   the image builder.
imageBuilder_appstreamAgentVersion :: Lens' ImageBuilder (Maybe Text)

-- | The description to display.
imageBuilder_description :: Lens' ImageBuilder (Maybe Text)

-- | Enables or disables default internet access for the image builder.
imageBuilder_enableDefaultInternetAccess :: Lens' ImageBuilder (Maybe Bool)

-- | The image builder errors.
imageBuilder_imageBuilderErrors :: Lens' ImageBuilder (Maybe [ResourceError])

-- | The image builder name to display.
imageBuilder_displayName :: Lens' ImageBuilder (Maybe Text)

-- | The ARN of the image from which this builder was created.
imageBuilder_imageArn :: Lens' ImageBuilder (Maybe Text)

-- | The name of the image builder.
imageBuilder_name :: Lens' ImageBuilder Text

-- | Describes the reason why the last image builder state change occurred.
--   
--   <i>See:</i> <a>newImageBuilderStateChangeReason</a> smart constructor.
data ImageBuilderStateChangeReason
ImageBuilderStateChangeReason' :: Maybe Text -> Maybe ImageBuilderStateChangeReasonCode -> ImageBuilderStateChangeReason

-- | The state change reason message.
[$sel:message:ImageBuilderStateChangeReason'] :: ImageBuilderStateChangeReason -> Maybe Text

-- | The state change reason code.
[$sel:code:ImageBuilderStateChangeReason'] :: ImageBuilderStateChangeReason -> Maybe ImageBuilderStateChangeReasonCode

-- | Create a value of <a>ImageBuilderStateChangeReason</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ImageBuilderStateChangeReason'</a>,
--   <a>imageBuilderStateChangeReason_message</a> - The state change reason
--   message.
--   
--   <a>$sel:code:ImageBuilderStateChangeReason'</a>,
--   <a>imageBuilderStateChangeReason_code</a> - The state change reason
--   code.
newImageBuilderStateChangeReason :: ImageBuilderStateChangeReason

-- | The state change reason message.
imageBuilderStateChangeReason_message :: Lens' ImageBuilderStateChangeReason (Maybe Text)

-- | The state change reason code.
imageBuilderStateChangeReason_code :: Lens' ImageBuilderStateChangeReason (Maybe ImageBuilderStateChangeReasonCode)

-- | Describes the permissions for an image.
--   
--   <i>See:</i> <a>newImagePermissions</a> smart constructor.
data ImagePermissions
ImagePermissions' :: Maybe Bool -> Maybe Bool -> ImagePermissions

-- | Indicates whether the image can be used for an image builder.
[$sel:allowImageBuilder:ImagePermissions'] :: ImagePermissions -> Maybe Bool

-- | Indicates whether the image can be used for a fleet.
[$sel:allowFleet:ImagePermissions'] :: ImagePermissions -> Maybe Bool

-- | Create a value of <a>ImagePermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowImageBuilder:ImagePermissions'</a>,
--   <a>imagePermissions_allowImageBuilder</a> - Indicates whether the
--   image can be used for an image builder.
--   
--   <a>$sel:allowFleet:ImagePermissions'</a>,
--   <a>imagePermissions_allowFleet</a> - Indicates whether the image can
--   be used for a fleet.
newImagePermissions :: ImagePermissions

-- | Indicates whether the image can be used for an image builder.
imagePermissions_allowImageBuilder :: Lens' ImagePermissions (Maybe Bool)

-- | Indicates whether the image can be used for a fleet.
imagePermissions_allowFleet :: Lens' ImagePermissions (Maybe Bool)

-- | Describes the reason why the last image state change occurred.
--   
--   <i>See:</i> <a>newImageStateChangeReason</a> smart constructor.
data ImageStateChangeReason
ImageStateChangeReason' :: Maybe Text -> Maybe ImageStateChangeReasonCode -> ImageStateChangeReason

-- | The state change reason message.
[$sel:message:ImageStateChangeReason'] :: ImageStateChangeReason -> Maybe Text

-- | The state change reason code.
[$sel:code:ImageStateChangeReason'] :: ImageStateChangeReason -> Maybe ImageStateChangeReasonCode

-- | Create a value of <a>ImageStateChangeReason</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ImageStateChangeReason'</a>,
--   <a>imageStateChangeReason_message</a> - The state change reason
--   message.
--   
--   <a>$sel:code:ImageStateChangeReason'</a>,
--   <a>imageStateChangeReason_code</a> - The state change reason code.
newImageStateChangeReason :: ImageStateChangeReason

-- | The state change reason message.
imageStateChangeReason_message :: Lens' ImageStateChangeReason (Maybe Text)

-- | The state change reason code.
imageStateChangeReason_code :: Lens' ImageStateChangeReason (Maybe ImageStateChangeReasonCode)

-- | Describes the error that is returned when a usage report can't be
--   generated.
--   
--   <i>See:</i> <a>newLastReportGenerationExecutionError</a> smart
--   constructor.
data LastReportGenerationExecutionError
LastReportGenerationExecutionError' :: Maybe Text -> Maybe UsageReportExecutionErrorCode -> LastReportGenerationExecutionError

-- | The error message for the error that is returned when a usage report
--   can't be generated.
[$sel:errorMessage:LastReportGenerationExecutionError'] :: LastReportGenerationExecutionError -> Maybe Text

-- | The error code for the error that is returned when a usage report
--   can't be generated.
[$sel:errorCode:LastReportGenerationExecutionError'] :: LastReportGenerationExecutionError -> Maybe UsageReportExecutionErrorCode

-- | Create a value of <a>LastReportGenerationExecutionError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:LastReportGenerationExecutionError'</a>,
--   <a>lastReportGenerationExecutionError_errorMessage</a> - The error
--   message for the error that is returned when a usage report can't be
--   generated.
--   
--   <a>$sel:errorCode:LastReportGenerationExecutionError'</a>,
--   <a>lastReportGenerationExecutionError_errorCode</a> - The error code
--   for the error that is returned when a usage report can't be generated.
newLastReportGenerationExecutionError :: LastReportGenerationExecutionError

-- | The error message for the error that is returned when a usage report
--   can't be generated.
lastReportGenerationExecutionError_errorMessage :: Lens' LastReportGenerationExecutionError (Maybe Text)

-- | The error code for the error that is returned when a usage report
--   can't be generated.
lastReportGenerationExecutionError_errorCode :: Lens' LastReportGenerationExecutionError (Maybe UsageReportExecutionErrorCode)

-- | Describes the network details of the fleet or image builder instance.
--   
--   <i>See:</i> <a>newNetworkAccessConfiguration</a> smart constructor.
data NetworkAccessConfiguration
NetworkAccessConfiguration' :: Maybe Text -> Maybe Text -> NetworkAccessConfiguration

-- | The resource identifier of the elastic network interface that is
--   attached to instances in your VPC. All network interfaces have the
--   eni-xxxxxxxx resource identifier.
[$sel:eniId:NetworkAccessConfiguration'] :: NetworkAccessConfiguration -> Maybe Text

-- | The private IP address of the elastic network interface that is
--   attached to instances in your VPC.
[$sel:eniPrivateIpAddress:NetworkAccessConfiguration'] :: NetworkAccessConfiguration -> Maybe Text

-- | Create a value of <a>NetworkAccessConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eniId:NetworkAccessConfiguration'</a>,
--   <a>networkAccessConfiguration_eniId</a> - The resource identifier of
--   the elastic network interface that is attached to instances in your
--   VPC. All network interfaces have the eni-xxxxxxxx resource identifier.
--   
--   <a>$sel:eniPrivateIpAddress:NetworkAccessConfiguration'</a>,
--   <a>networkAccessConfiguration_eniPrivateIpAddress</a> - The private IP
--   address of the elastic network interface that is attached to instances
--   in your VPC.
newNetworkAccessConfiguration :: NetworkAccessConfiguration

-- | The resource identifier of the elastic network interface that is
--   attached to instances in your VPC. All network interfaces have the
--   eni-xxxxxxxx resource identifier.
networkAccessConfiguration_eniId :: Lens' NetworkAccessConfiguration (Maybe Text)

-- | The private IP address of the elastic network interface that is
--   attached to instances in your VPC.
networkAccessConfiguration_eniPrivateIpAddress :: Lens' NetworkAccessConfiguration (Maybe Text)

-- | Describes a resource error.
--   
--   <i>See:</i> <a>newResourceError</a> smart constructor.
data ResourceError
ResourceError' :: Maybe POSIX -> Maybe Text -> Maybe FleetErrorCode -> ResourceError

-- | The time the error occurred.
[$sel:errorTimestamp:ResourceError'] :: ResourceError -> Maybe POSIX

-- | The error message.
[$sel:errorMessage:ResourceError'] :: ResourceError -> Maybe Text

-- | The error code.
[$sel:errorCode:ResourceError'] :: ResourceError -> Maybe FleetErrorCode

-- | Create a value of <a>ResourceError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorTimestamp:ResourceError'</a>,
--   <a>resourceError_errorTimestamp</a> - The time the error occurred.
--   
--   <a>$sel:errorMessage:ResourceError'</a>,
--   <a>resourceError_errorMessage</a> - The error message.
--   
--   <a>$sel:errorCode:ResourceError'</a>, <a>resourceError_errorCode</a> -
--   The error code.
newResourceError :: ResourceError

-- | The time the error occurred.
resourceError_errorTimestamp :: Lens' ResourceError (Maybe UTCTime)

-- | The error message.
resourceError_errorMessage :: Lens' ResourceError (Maybe Text)

-- | The error code.
resourceError_errorCode :: Lens' ResourceError (Maybe FleetErrorCode)

-- | Describes the credentials for the service account used by the fleet or
--   image builder to connect to the directory.
--   
--   <i>See:</i> <a>newServiceAccountCredentials</a> smart constructor.
data ServiceAccountCredentials
ServiceAccountCredentials' :: Sensitive Text -> Sensitive Text -> ServiceAccountCredentials

-- | The user name of the account. This account must have the following
--   privileges: create computer objects, join computers to the domain, and
--   change/reset the password on descendant computer objects for the
--   organizational units specified.
[$sel:accountName:ServiceAccountCredentials'] :: ServiceAccountCredentials -> Sensitive Text

-- | The password for the account.
[$sel:accountPassword:ServiceAccountCredentials'] :: ServiceAccountCredentials -> Sensitive Text

-- | Create a value of <a>ServiceAccountCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountName:ServiceAccountCredentials'</a>,
--   <a>serviceAccountCredentials_accountName</a> - The user name of the
--   account. This account must have the following privileges: create
--   computer objects, join computers to the domain, and change/reset the
--   password on descendant computer objects for the organizational units
--   specified.
--   
--   <a>$sel:accountPassword:ServiceAccountCredentials'</a>,
--   <a>serviceAccountCredentials_accountPassword</a> - The password for
--   the account.
newServiceAccountCredentials :: Text -> Text -> ServiceAccountCredentials

-- | The user name of the account. This account must have the following
--   privileges: create computer objects, join computers to the domain, and
--   change/reset the password on descendant computer objects for the
--   organizational units specified.
serviceAccountCredentials_accountName :: Lens' ServiceAccountCredentials Text

-- | The password for the account.
serviceAccountCredentials_accountPassword :: Lens' ServiceAccountCredentials Text

-- | Describes a streaming session.
--   
--   <i>See:</i> <a>newSession</a> smart constructor.
data Session
Session' :: Maybe SessionConnectionState -> Maybe POSIX -> Maybe NetworkAccessConfiguration -> Maybe AuthenticationType -> Maybe POSIX -> Text -> Text -> Text -> Text -> SessionState -> Session

-- | Specifies whether a user is connected to the streaming session.
[$sel:connectionState:Session'] :: Session -> Maybe SessionConnectionState

-- | The time when a streaming instance is dedicated for the user.
[$sel:startTime:Session'] :: Session -> Maybe POSIX

-- | The network details for the streaming session.
[$sel:networkAccessConfiguration:Session'] :: Session -> Maybe NetworkAccessConfiguration

-- | The authentication method. The user is authenticated using a streaming
--   URL (<tt>API</tt>) or SAML 2.0 federation (<tt>SAML</tt>).
[$sel:authenticationType:Session'] :: Session -> Maybe AuthenticationType

-- | The time when the streaming session is set to expire. This time is
--   based on the <tt>MaxUserDurationinSeconds</tt> value, which determines
--   the maximum length of time that a streaming session can run. A
--   streaming session might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
[$sel:maxExpirationTime:Session'] :: Session -> Maybe POSIX

-- | The identifier of the streaming session.
[$sel:id:Session'] :: Session -> Text

-- | The identifier of the user for whom the session was created.
[$sel:userId:Session'] :: Session -> Text

-- | The name of the stack for the streaming session.
[$sel:stackName:Session'] :: Session -> Text

-- | The name of the fleet for the streaming session.
[$sel:fleetName:Session'] :: Session -> Text

-- | The current state of the streaming session.
[$sel:state:Session'] :: Session -> SessionState

-- | Create a value of <a>Session</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionState:Session'</a>, <a>session_connectionState</a> -
--   Specifies whether a user is connected to the streaming session.
--   
--   <a>$sel:startTime:Session'</a>, <a>session_startTime</a> - The time
--   when a streaming instance is dedicated for the user.
--   
--   <a>$sel:networkAccessConfiguration:Session'</a>,
--   <a>session_networkAccessConfiguration</a> - The network details for
--   the streaming session.
--   
--   <a>$sel:authenticationType:Session'</a>,
--   <a>session_authenticationType</a> - The authentication method. The
--   user is authenticated using a streaming URL (<tt>API</tt>) or SAML 2.0
--   federation (<tt>SAML</tt>).
--   
--   <a>$sel:maxExpirationTime:Session'</a>,
--   <a>session_maxExpirationTime</a> - The time when the streaming session
--   is set to expire. This time is based on the
--   <tt>MaxUserDurationinSeconds</tt> value, which determines the maximum
--   length of time that a streaming session can run. A streaming session
--   might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
--   
--   <a>$sel:id:Session'</a>, <a>session_id</a> - The identifier of the
--   streaming session.
--   
--   <a>$sel:userId:Session'</a>, <a>session_userId</a> - The identifier of
--   the user for whom the session was created.
--   
--   <a>$sel:stackName:Session'</a>, <a>session_stackName</a> - The name of
--   the stack for the streaming session.
--   
--   <a>$sel:fleetName:Session'</a>, <a>session_fleetName</a> - The name of
--   the fleet for the streaming session.
--   
--   <a>$sel:state:Session'</a>, <a>session_state</a> - The current state
--   of the streaming session.
newSession :: Text -> Text -> Text -> Text -> SessionState -> Session

-- | Specifies whether a user is connected to the streaming session.
session_connectionState :: Lens' Session (Maybe SessionConnectionState)

-- | The time when a streaming instance is dedicated for the user.
session_startTime :: Lens' Session (Maybe UTCTime)

-- | The network details for the streaming session.
session_networkAccessConfiguration :: Lens' Session (Maybe NetworkAccessConfiguration)

-- | The authentication method. The user is authenticated using a streaming
--   URL (<tt>API</tt>) or SAML 2.0 federation (<tt>SAML</tt>).
session_authenticationType :: Lens' Session (Maybe AuthenticationType)

-- | The time when the streaming session is set to expire. This time is
--   based on the <tt>MaxUserDurationinSeconds</tt> value, which determines
--   the maximum length of time that a streaming session can run. A
--   streaming session might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
session_maxExpirationTime :: Lens' Session (Maybe UTCTime)

-- | The identifier of the streaming session.
session_id :: Lens' Session Text

-- | The identifier of the user for whom the session was created.
session_userId :: Lens' Session Text

-- | The name of the stack for the streaming session.
session_stackName :: Lens' Session Text

-- | The name of the fleet for the streaming session.
session_fleetName :: Lens' Session Text

-- | The current state of the streaming session.
session_state :: Lens' Session SessionState

-- | Describes the permissions that are available to the specified AWS
--   account for a shared image.
--   
--   <i>See:</i> <a>newSharedImagePermissions</a> smart constructor.
data SharedImagePermissions
SharedImagePermissions' :: Text -> ImagePermissions -> SharedImagePermissions

-- | The 12-digit identifier of the AWS account with which the image is
--   shared.
[$sel:sharedAccountId:SharedImagePermissions'] :: SharedImagePermissions -> Text

-- | Describes the permissions for a shared image.
[$sel:imagePermissions:SharedImagePermissions'] :: SharedImagePermissions -> ImagePermissions

-- | Create a value of <a>SharedImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sharedAccountId:SharedImagePermissions'</a>,
--   <a>sharedImagePermissions_sharedAccountId</a> - The 12-digit
--   identifier of the AWS account with which the image is shared.
--   
--   <a>$sel:imagePermissions:SharedImagePermissions'</a>,
--   <a>sharedImagePermissions_imagePermissions</a> - Describes the
--   permissions for a shared image.
newSharedImagePermissions :: Text -> ImagePermissions -> SharedImagePermissions

-- | The 12-digit identifier of the AWS account with which the image is
--   shared.
sharedImagePermissions_sharedAccountId :: Lens' SharedImagePermissions Text

-- | Describes the permissions for a shared image.
sharedImagePermissions_imagePermissions :: Lens' SharedImagePermissions ImagePermissions

-- | Describes a stack.
--   
--   <i>See:</i> <a>newStack</a> smart constructor.
data Stack
Stack' :: Maybe (NonEmpty UserSetting) -> Maybe (NonEmpty AccessEndpoint) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ApplicationSettingsResponse -> Maybe [StorageConnector] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [StackError] -> Maybe Text -> Maybe Text -> Text -> Stack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default these actions are enabled.
[$sel:userSettings:Stack'] :: Stack -> Maybe (NonEmpty UserSetting)

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Users of the stack can connect to AppStream 2.0 only through the
--   specified endpoints.
[$sel:accessEndpoints:Stack'] :: Stack -> Maybe (NonEmpty AccessEndpoint)

-- | The URL that users are redirected to after their streaming session
--   ends.
[$sel:redirectURL:Stack'] :: Stack -> Maybe Text

-- | The ARN of the stack.
[$sel:arn:Stack'] :: Stack -> Maybe Text

-- | The time the stack was created.
[$sel:createdTime:Stack'] :: Stack -> Maybe POSIX

-- | The persistent application settings for users of the stack.
[$sel:applicationSettings:Stack'] :: Stack -> Maybe ApplicationSettingsResponse

-- | The storage connectors to enable.
[$sel:storageConnectors:Stack'] :: Stack -> Maybe [StorageConnector]

-- | The description to display.
[$sel:description:Stack'] :: Stack -> Maybe Text

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
[$sel:embedHostDomains:Stack'] :: Stack -> Maybe (NonEmpty Text)

-- | The errors for the stack.
[$sel:stackErrors:Stack'] :: Stack -> Maybe [StackError]

-- | The stack name to display.
[$sel:displayName:Stack'] :: Stack -> Maybe Text

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
[$sel:feedbackURL:Stack'] :: Stack -> Maybe Text

-- | The name of the stack.
[$sel:name:Stack'] :: Stack -> Text

-- | Create a value of <a>Stack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userSettings:Stack'</a>, <a>stack_userSettings</a> - The
--   actions that are enabled or disabled for users during their streaming
--   sessions. By default these actions are enabled.
--   
--   <a>$sel:accessEndpoints:Stack'</a>, <a>stack_accessEndpoints</a> - The
--   list of virtual private cloud (VPC) interface endpoint objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
--   
--   <a>$sel:redirectURL:Stack'</a>, <a>stack_redirectURL</a> - The URL
--   that users are redirected to after their streaming session ends.
--   
--   <a>$sel:arn:Stack'</a>, <a>stack_arn</a> - The ARN of the stack.
--   
--   <a>$sel:createdTime:Stack'</a>, <a>stack_createdTime</a> - The time
--   the stack was created.
--   
--   <a>$sel:applicationSettings:Stack'</a>,
--   <a>stack_applicationSettings</a> - The persistent application settings
--   for users of the stack.
--   
--   <a>$sel:storageConnectors:Stack'</a>, <a>stack_storageConnectors</a> -
--   The storage connectors to enable.
--   
--   <a>$sel:description:Stack'</a>, <a>stack_description</a> - The
--   description to display.
--   
--   <a>$sel:embedHostDomains:Stack'</a>, <a>stack_embedHostDomains</a> -
--   The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
--   
--   <a>$sel:stackErrors:Stack'</a>, <a>stack_stackErrors</a> - The errors
--   for the stack.
--   
--   <a>$sel:displayName:Stack'</a>, <a>stack_displayName</a> - The stack
--   name to display.
--   
--   <a>$sel:feedbackURL:Stack'</a>, <a>stack_feedbackURL</a> - The URL
--   that users are redirected to after they click the Send Feedback link.
--   If no URL is specified, no Send Feedback link is displayed.
--   
--   <a>$sel:name:Stack'</a>, <a>stack_name</a> - The name of the stack.
newStack :: Text -> Stack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default these actions are enabled.
stack_userSettings :: Lens' Stack (Maybe (NonEmpty UserSetting))

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Users of the stack can connect to AppStream 2.0 only through the
--   specified endpoints.
stack_accessEndpoints :: Lens' Stack (Maybe (NonEmpty AccessEndpoint))

-- | The URL that users are redirected to after their streaming session
--   ends.
stack_redirectURL :: Lens' Stack (Maybe Text)

-- | The ARN of the stack.
stack_arn :: Lens' Stack (Maybe Text)

-- | The time the stack was created.
stack_createdTime :: Lens' Stack (Maybe UTCTime)

-- | The persistent application settings for users of the stack.
stack_applicationSettings :: Lens' Stack (Maybe ApplicationSettingsResponse)

-- | The storage connectors to enable.
stack_storageConnectors :: Lens' Stack (Maybe [StorageConnector])

-- | The description to display.
stack_description :: Lens' Stack (Maybe Text)

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
stack_embedHostDomains :: Lens' Stack (Maybe (NonEmpty Text))

-- | The errors for the stack.
stack_stackErrors :: Lens' Stack (Maybe [StackError])

-- | The stack name to display.
stack_displayName :: Lens' Stack (Maybe Text)

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
stack_feedbackURL :: Lens' Stack (Maybe Text)

-- | The name of the stack.
stack_name :: Lens' Stack Text

-- | Describes a stack error.
--   
--   <i>See:</i> <a>newStackError</a> smart constructor.
data StackError
StackError' :: Maybe Text -> Maybe StackErrorCode -> StackError

-- | The error message.
[$sel:errorMessage:StackError'] :: StackError -> Maybe Text

-- | The error code.
[$sel:errorCode:StackError'] :: StackError -> Maybe StackErrorCode

-- | Create a value of <a>StackError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:StackError'</a>, <a>stackError_errorMessage</a> -
--   The error message.
--   
--   <a>$sel:errorCode:StackError'</a>, <a>stackError_errorCode</a> - The
--   error code.
newStackError :: StackError

-- | The error message.
stackError_errorMessage :: Lens' StackError (Maybe Text)

-- | The error code.
stackError_errorCode :: Lens' StackError (Maybe StackErrorCode)

-- | Describes a connector that enables persistent storage for users.
--   
--   <i>See:</i> <a>newStorageConnector</a> smart constructor.
data StorageConnector
StorageConnector' :: Maybe [Text] -> Maybe Text -> StorageConnectorType -> StorageConnector

-- | The names of the domains for the account.
[$sel:domains:StorageConnector'] :: StorageConnector -> Maybe [Text]

-- | The ARN of the storage connector.
[$sel:resourceIdentifier:StorageConnector'] :: StorageConnector -> Maybe Text

-- | The type of storage connector.
[$sel:connectorType:StorageConnector'] :: StorageConnector -> StorageConnectorType

-- | Create a value of <a>StorageConnector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domains:StorageConnector'</a>, <a>storageConnector_domains</a>
--   - The names of the domains for the account.
--   
--   <a>$sel:resourceIdentifier:StorageConnector'</a>,
--   <a>storageConnector_resourceIdentifier</a> - The ARN of the storage
--   connector.
--   
--   <a>$sel:connectorType:StorageConnector'</a>,
--   <a>storageConnector_connectorType</a> - The type of storage connector.
newStorageConnector :: StorageConnectorType -> StorageConnector

-- | The names of the domains for the account.
storageConnector_domains :: Lens' StorageConnector (Maybe [Text])

-- | The ARN of the storage connector.
storageConnector_resourceIdentifier :: Lens' StorageConnector (Maybe Text)

-- | The type of storage connector.
storageConnector_connectorType :: Lens' StorageConnector StorageConnectorType

-- | Describes information about the usage report subscription.
--   
--   <i>See:</i> <a>newUsageReportSubscription</a> smart constructor.
data UsageReportSubscription
UsageReportSubscription' :: Maybe [LastReportGenerationExecutionError] -> Maybe POSIX -> Maybe Text -> Maybe UsageReportSchedule -> UsageReportSubscription

-- | The errors that were returned if usage reports couldn't be generated.
[$sel:subscriptionErrors:UsageReportSubscription'] :: UsageReportSubscription -> Maybe [LastReportGenerationExecutionError]

-- | The time when the last usage report was generated.
[$sel:lastGeneratedReportDate:UsageReportSubscription'] :: UsageReportSubscription -> Maybe POSIX

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
[$sel:s3BucketName:UsageReportSubscription'] :: UsageReportSubscription -> Maybe Text

-- | The schedule for generating usage reports.
[$sel:schedule:UsageReportSubscription'] :: UsageReportSubscription -> Maybe UsageReportSchedule

-- | Create a value of <a>UsageReportSubscription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionErrors:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_subscriptionErrors</a> - The errors that
--   were returned if usage reports couldn't be generated.
--   
--   <a>$sel:lastGeneratedReportDate:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_lastGeneratedReportDate</a> - The time when
--   the last usage report was generated.
--   
--   <a>$sel:s3BucketName:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_s3BucketName</a> - The Amazon S3 bucket
--   where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
--   
--   <a>$sel:schedule:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_schedule</a> - The schedule for generating
--   usage reports.
newUsageReportSubscription :: UsageReportSubscription

-- | The errors that were returned if usage reports couldn't be generated.
usageReportSubscription_subscriptionErrors :: Lens' UsageReportSubscription (Maybe [LastReportGenerationExecutionError])

-- | The time when the last usage report was generated.
usageReportSubscription_lastGeneratedReportDate :: Lens' UsageReportSubscription (Maybe UTCTime)

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
usageReportSubscription_s3BucketName :: Lens' UsageReportSubscription (Maybe Text)

-- | The schedule for generating usage reports.
usageReportSubscription_schedule :: Lens' UsageReportSubscription (Maybe UsageReportSchedule)

-- | Describes a user in the user pool.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> AuthenticationType -> User

-- | The status of the user in the user pool. The status can be one of the
--   following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
[$sel:status:User'] :: User -> Maybe Text

-- | The ARN of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Specifies whether the user in the user pool is enabled.
[$sel:enabled:User'] :: User -> Maybe Bool

-- | The date and time the user was created in the user pool.
[$sel:createdTime:User'] :: User -> Maybe POSIX

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
[$sel:userName:User'] :: User -> Maybe (Sensitive Text)

-- | The last name, or surname, of the user.
[$sel:lastName:User'] :: User -> Maybe (Sensitive Text)

-- | The first name, or given name, of the user.
[$sel:firstName:User'] :: User -> Maybe (Sensitive Text)

-- | The authentication type for the user.
[$sel:authenticationType:User'] :: User -> AuthenticationType

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - The status of the user
--   in the user pool. The status can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The ARN of the user.
--   
--   <a>$sel:enabled:User'</a>, <a>user_enabled</a> - Specifies whether the
--   user in the user pool is enabled.
--   
--   <a>$sel:createdTime:User'</a>, <a>user_createdTime</a> - The date and
--   time the user was created in the user pool.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The email address
--   of the user.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:lastName:User'</a>, <a>user_lastName</a> - The last name, or
--   surname, of the user.
--   
--   <a>$sel:firstName:User'</a>, <a>user_firstName</a> - The first name,
--   or given name, of the user.
--   
--   <a>$sel:authenticationType:User'</a>, <a>user_authenticationType</a> -
--   The authentication type for the user.
newUser :: AuthenticationType -> User

-- | The status of the user in the user pool. The status can be one of the
--   following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
user_status :: Lens' User (Maybe Text)

-- | The ARN of the user.
user_arn :: Lens' User (Maybe Text)

-- | Specifies whether the user in the user pool is enabled.
user_enabled :: Lens' User (Maybe Bool)

-- | The date and time the user was created in the user pool.
user_createdTime :: Lens' User (Maybe UTCTime)

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
user_userName :: Lens' User (Maybe Text)

-- | The last name, or surname, of the user.
user_lastName :: Lens' User (Maybe Text)

-- | The first name, or given name, of the user.
user_firstName :: Lens' User (Maybe Text)

-- | The authentication type for the user.
user_authenticationType :: Lens' User AuthenticationType

-- | Describes an action and whether the action is enabled or disabled for
--   users during their streaming sessions.
--   
--   <i>See:</i> <a>newUserSetting</a> smart constructor.
data UserSetting
UserSetting' :: Action -> Permission -> UserSetting

-- | The action that is enabled or disabled.
[$sel:action:UserSetting'] :: UserSetting -> Action

-- | Indicates whether the action is enabled or disabled.
[$sel:permission:UserSetting'] :: UserSetting -> Permission

-- | Create a value of <a>UserSetting</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:UserSetting'</a>, <a>userSetting_action</a> - The
--   action that is enabled or disabled.
--   
--   <a>$sel:permission:UserSetting'</a>, <a>userSetting_permission</a> -
--   Indicates whether the action is enabled or disabled.
newUserSetting :: Action -> Permission -> UserSetting

-- | The action that is enabled or disabled.
userSetting_action :: Lens' UserSetting Action

-- | Indicates whether the action is enabled or disabled.
userSetting_permission :: Lens' UserSetting Permission

-- | Describes a user in the user pool and the associated stack.
--   
--   <i>See:</i> <a>newUserStackAssociation</a> smart constructor.
data UserStackAssociation
UserStackAssociation' :: Maybe Bool -> Text -> Sensitive Text -> AuthenticationType -> UserStackAssociation

-- | Specifies whether a welcome email is sent to a user after the user is
--   created in the user pool.
[$sel:sendEmailNotification:UserStackAssociation'] :: UserStackAssociation -> Maybe Bool

-- | The name of the stack that is associated with the user.
[$sel:stackName:UserStackAssociation'] :: UserStackAssociation -> Text

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
[$sel:userName:UserStackAssociation'] :: UserStackAssociation -> Sensitive Text

-- | The authentication type for the user.
[$sel:authenticationType:UserStackAssociation'] :: UserStackAssociation -> AuthenticationType

-- | Create a value of <a>UserStackAssociation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sendEmailNotification:UserStackAssociation'</a>,
--   <a>userStackAssociation_sendEmailNotification</a> - Specifies whether
--   a welcome email is sent to a user after the user is created in the
--   user pool.
--   
--   <a>$sel:stackName:UserStackAssociation'</a>,
--   <a>userStackAssociation_stackName</a> - The name of the stack that is
--   associated with the user.
--   
--   <a>$sel:userName:UserStackAssociation'</a>,
--   <a>userStackAssociation_userName</a> - The email address of the user
--   who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:UserStackAssociation'</a>,
--   <a>userStackAssociation_authenticationType</a> - The authentication
--   type for the user.
newUserStackAssociation :: Text -> Text -> AuthenticationType -> UserStackAssociation

-- | Specifies whether a welcome email is sent to a user after the user is
--   created in the user pool.
userStackAssociation_sendEmailNotification :: Lens' UserStackAssociation (Maybe Bool)

-- | The name of the stack that is associated with the user.
userStackAssociation_stackName :: Lens' UserStackAssociation Text

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
userStackAssociation_userName :: Lens' UserStackAssociation Text

-- | The authentication type for the user.
userStackAssociation_authenticationType :: Lens' UserStackAssociation AuthenticationType

-- | Describes the error that is returned when a user can’t be associated
--   with or disassociated from a stack.
--   
--   <i>See:</i> <a>newUserStackAssociationError</a> smart constructor.
data UserStackAssociationError
UserStackAssociationError' :: Maybe UserStackAssociation -> Maybe Text -> Maybe UserStackAssociationErrorCode -> UserStackAssociationError

-- | Information about the user and associated stack.
[$sel:userStackAssociation:UserStackAssociationError'] :: UserStackAssociationError -> Maybe UserStackAssociation

-- | The error message for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
[$sel:errorMessage:UserStackAssociationError'] :: UserStackAssociationError -> Maybe Text

-- | The error code for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
[$sel:errorCode:UserStackAssociationError'] :: UserStackAssociationError -> Maybe UserStackAssociationErrorCode

-- | Create a value of <a>UserStackAssociationError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userStackAssociation:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_userStackAssociation</a> - Information
--   about the user and associated stack.
--   
--   <a>$sel:errorMessage:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_errorMessage</a> - The error message for
--   the error that is returned when a user can’t be associated with or
--   disassociated from a stack.
--   
--   <a>$sel:errorCode:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_errorCode</a> - The error code for the
--   error that is returned when a user can’t be associated with or
--   disassociated from a stack.
newUserStackAssociationError :: UserStackAssociationError

-- | Information about the user and associated stack.
userStackAssociationError_userStackAssociation :: Lens' UserStackAssociationError (Maybe UserStackAssociation)

-- | The error message for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
userStackAssociationError_errorMessage :: Lens' UserStackAssociationError (Maybe Text)

-- | The error code for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
userStackAssociationError_errorCode :: Lens' UserStackAssociationError (Maybe UserStackAssociationErrorCode)

-- | Describes VPC configuration information for fleets and image builders.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe [Text] -> VpcConfig

-- | The identifiers of the security groups for the fleet or image builder.
[$sel:securityGroupIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | The identifiers of the subnets to which a network interface is
--   attached from the fleet instance or image builder instance. Fleet
--   instances use one or more subnets. Image builder instances use one
--   subnet.
[$sel:subnetIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - The identifiers of the security
--   groups for the fleet or image builder.
--   
--   <a>$sel:subnetIds:VpcConfig'</a>, <a>vpcConfig_subnetIds</a> - The
--   identifiers of the subnets to which a network interface is attached
--   from the fleet instance or image builder instance. Fleet instances use
--   one or more subnets. Image builder instances use one subnet.
newVpcConfig :: VpcConfig

-- | The identifiers of the security groups for the fleet or image builder.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | The identifiers of the subnets to which a network interface is
--   attached from the fleet instance or image builder instance. Fleet
--   instances use one or more subnets. Image builder instances use one
--   subnet.
vpcConfig_subnetIds :: Lens' VpcConfig (Maybe [Text])


-- | Adds or overwrites one or more tags for the specified AppStream 2.0
--   resource. You can tag AppStream 2.0 image builders, images, fleets,
--   and stacks.
--   
--   Each tag consists of a key and an optional value. If a resource
--   already has a tag with the same key, this operation updates its value.
--   
--   To list the current tags for your resources, use ListTagsForResource.
--   To disassociate tags from your resources, use UntagResource.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
module Network.AWS.AppStream.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to associate. A tag is a key-value pair, and the value is
--   optional. For example, Environment=Test. If you do not specify a
--   value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   associate. A tag is a key-value pair, and the value is optional. For
--   example, Environment=Test. If you do not specify a value,
--   Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to associate. A tag is a key-value pair, and the value is
--   optional. For example, Environment=Test. If you do not specify a
--   value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.TagResource.TagResource
instance GHC.Show.Show Network.AWS.AppStream.TagResource.TagResource
instance GHC.Read.Read Network.AWS.AppStream.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.AppStream.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.AppStream.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.AppStream.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.AppStream.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.AppStream.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.AppStream.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.AppStream.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.TagResource.TagResource


-- | Stops the specified image builder.
module Network.AWS.AppStream.StopImageBuilder

-- | <i>See:</i> <a>newStopImageBuilder</a> smart constructor.
data StopImageBuilder
StopImageBuilder' :: Text -> StopImageBuilder

-- | The name of the image builder.
[$sel:name:StopImageBuilder'] :: StopImageBuilder -> Text

-- | Create a value of <a>StopImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopImageBuilder'</a>, <a>stopImageBuilder_name</a> - The
--   name of the image builder.
newStopImageBuilder :: Text -> StopImageBuilder

-- | The name of the image builder.
stopImageBuilder_name :: Lens' StopImageBuilder Text

-- | <i>See:</i> <a>newStopImageBuilderResponse</a> smart constructor.
data StopImageBuilderResponse
StopImageBuilderResponse' :: Maybe ImageBuilder -> Int -> StopImageBuilderResponse

-- | Information about the image builder.
[$sel:imageBuilder:StopImageBuilderResponse'] :: StopImageBuilderResponse -> Maybe ImageBuilder

-- | The response's http status code.
[$sel:httpStatus:StopImageBuilderResponse'] :: StopImageBuilderResponse -> Int

-- | Create a value of <a>StopImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:StopImageBuilderResponse'</a>,
--   <a>stopImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:StopImageBuilderResponse'</a>,
--   <a>stopImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newStopImageBuilderResponse :: Int -> StopImageBuilderResponse

-- | Information about the image builder.
stopImageBuilderResponse_imageBuilder :: Lens' StopImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
stopImageBuilderResponse_httpStatus :: Lens' StopImageBuilderResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance GHC.Show.Show Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance GHC.Read.Read Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance GHC.Classes.Eq Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance GHC.Generics.Generic Network.AWS.AppStream.StopImageBuilder.StopImageBuilderResponse
instance GHC.Show.Show Network.AWS.AppStream.StopImageBuilder.StopImageBuilderResponse
instance GHC.Read.Read Network.AWS.AppStream.StopImageBuilder.StopImageBuilderResponse
instance GHC.Classes.Eq Network.AWS.AppStream.StopImageBuilder.StopImageBuilderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.StopImageBuilder.StopImageBuilderResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.StopImageBuilder.StopImageBuilder
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.StopImageBuilder.StopImageBuilder


-- | Stops the specified fleet.
module Network.AWS.AppStream.StopFleet

-- | <i>See:</i> <a>newStopFleet</a> smart constructor.
data StopFleet
StopFleet' :: Text -> StopFleet

-- | The name of the fleet.
[$sel:name:StopFleet'] :: StopFleet -> Text

-- | Create a value of <a>StopFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopFleet'</a>, <a>stopFleet_name</a> - The name of the
--   fleet.
newStopFleet :: Text -> StopFleet

-- | The name of the fleet.
stopFleet_name :: Lens' StopFleet Text

-- | <i>See:</i> <a>newStopFleetResponse</a> smart constructor.
data StopFleetResponse
StopFleetResponse' :: Int -> StopFleetResponse

-- | The response's http status code.
[$sel:httpStatus:StopFleetResponse'] :: StopFleetResponse -> Int

-- | Create a value of <a>StopFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopFleetResponse'</a>,
--   <a>stopFleetResponse_httpStatus</a> - The response's http status code.
newStopFleetResponse :: Int -> StopFleetResponse

-- | The response's http status code.
stopFleetResponse_httpStatus :: Lens' StopFleetResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.StopFleet.StopFleet
instance GHC.Show.Show Network.AWS.AppStream.StopFleet.StopFleet
instance GHC.Read.Read Network.AWS.AppStream.StopFleet.StopFleet
instance GHC.Classes.Eq Network.AWS.AppStream.StopFleet.StopFleet
instance GHC.Generics.Generic Network.AWS.AppStream.StopFleet.StopFleetResponse
instance GHC.Show.Show Network.AWS.AppStream.StopFleet.StopFleetResponse
instance GHC.Read.Read Network.AWS.AppStream.StopFleet.StopFleetResponse
instance GHC.Classes.Eq Network.AWS.AppStream.StopFleet.StopFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.StopFleet.StopFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.StopFleet.StopFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.StopFleet.StopFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.StopFleet.StopFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.StopFleet.StopFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.StopFleet.StopFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.StopFleet.StopFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.StopFleet.StopFleet


-- | Starts the specified image builder.
module Network.AWS.AppStream.StartImageBuilder

-- | <i>See:</i> <a>newStartImageBuilder</a> smart constructor.
data StartImageBuilder
StartImageBuilder' :: Maybe Text -> Text -> StartImageBuilder

-- | The version of the AppStream 2.0 agent to use for this image builder.
--   To use the latest version of the AppStream 2.0 agent, specify
--   [LATEST].
[$sel:appstreamAgentVersion:StartImageBuilder'] :: StartImageBuilder -> Maybe Text

-- | The name of the image builder.
[$sel:name:StartImageBuilder'] :: StartImageBuilder -> Text

-- | Create a value of <a>StartImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appstreamAgentVersion:StartImageBuilder'</a>,
--   <a>startImageBuilder_appstreamAgentVersion</a> - The version of the
--   AppStream 2.0 agent to use for this image builder. To use the latest
--   version of the AppStream 2.0 agent, specify [LATEST].
--   
--   <a>$sel:name:StartImageBuilder'</a>, <a>startImageBuilder_name</a> -
--   The name of the image builder.
newStartImageBuilder :: Text -> StartImageBuilder

-- | The version of the AppStream 2.0 agent to use for this image builder.
--   To use the latest version of the AppStream 2.0 agent, specify
--   [LATEST].
startImageBuilder_appstreamAgentVersion :: Lens' StartImageBuilder (Maybe Text)

-- | The name of the image builder.
startImageBuilder_name :: Lens' StartImageBuilder Text

-- | <i>See:</i> <a>newStartImageBuilderResponse</a> smart constructor.
data StartImageBuilderResponse
StartImageBuilderResponse' :: Maybe ImageBuilder -> Int -> StartImageBuilderResponse

-- | Information about the image builder.
[$sel:imageBuilder:StartImageBuilderResponse'] :: StartImageBuilderResponse -> Maybe ImageBuilder

-- | The response's http status code.
[$sel:httpStatus:StartImageBuilderResponse'] :: StartImageBuilderResponse -> Int

-- | Create a value of <a>StartImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:StartImageBuilderResponse'</a>,
--   <a>startImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:StartImageBuilderResponse'</a>,
--   <a>startImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newStartImageBuilderResponse :: Int -> StartImageBuilderResponse

-- | Information about the image builder.
startImageBuilderResponse_imageBuilder :: Lens' StartImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
startImageBuilderResponse_httpStatus :: Lens' StartImageBuilderResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance GHC.Show.Show Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance GHC.Read.Read Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance GHC.Classes.Eq Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance GHC.Generics.Generic Network.AWS.AppStream.StartImageBuilder.StartImageBuilderResponse
instance GHC.Show.Show Network.AWS.AppStream.StartImageBuilder.StartImageBuilderResponse
instance GHC.Read.Read Network.AWS.AppStream.StartImageBuilder.StartImageBuilderResponse
instance GHC.Classes.Eq Network.AWS.AppStream.StartImageBuilder.StartImageBuilderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.StartImageBuilder.StartImageBuilderResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.StartImageBuilder.StartImageBuilder
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.StartImageBuilder.StartImageBuilder


-- | Starts the specified fleet.
module Network.AWS.AppStream.StartFleet

-- | <i>See:</i> <a>newStartFleet</a> smart constructor.
data StartFleet
StartFleet' :: Text -> StartFleet

-- | The name of the fleet.
[$sel:name:StartFleet'] :: StartFleet -> Text

-- | Create a value of <a>StartFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartFleet'</a>, <a>startFleet_name</a> - The name of the
--   fleet.
newStartFleet :: Text -> StartFleet

-- | The name of the fleet.
startFleet_name :: Lens' StartFleet Text

-- | <i>See:</i> <a>newStartFleetResponse</a> smart constructor.
data StartFleetResponse
StartFleetResponse' :: Int -> StartFleetResponse

-- | The response's http status code.
[$sel:httpStatus:StartFleetResponse'] :: StartFleetResponse -> Int

-- | Create a value of <a>StartFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartFleetResponse'</a>,
--   <a>startFleetResponse_httpStatus</a> - The response's http status
--   code.
newStartFleetResponse :: Int -> StartFleetResponse

-- | The response's http status code.
startFleetResponse_httpStatus :: Lens' StartFleetResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.StartFleet.StartFleet
instance GHC.Show.Show Network.AWS.AppStream.StartFleet.StartFleet
instance GHC.Read.Read Network.AWS.AppStream.StartFleet.StartFleet
instance GHC.Classes.Eq Network.AWS.AppStream.StartFleet.StartFleet
instance GHC.Generics.Generic Network.AWS.AppStream.StartFleet.StartFleetResponse
instance GHC.Show.Show Network.AWS.AppStream.StartFleet.StartFleetResponse
instance GHC.Read.Read Network.AWS.AppStream.StartFleet.StartFleetResponse
instance GHC.Classes.Eq Network.AWS.AppStream.StartFleet.StartFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.StartFleet.StartFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.StartFleet.StartFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.StartFleet.StartFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.StartFleet.StartFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.StartFleet.StartFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.StartFleet.StartFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.StartFleet.StartFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.StartFleet.StartFleet


-- | Retrieves a list of all tags for the specified AppStream 2.0 resource.
--   You can tag AppStream 2.0 image builders, images, fleets, and stacks.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
module Network.AWS.AppStream.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The information about the tags.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The information about the
--   tags.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The information about the tags.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.AppStream.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.AppStream.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.AppStream.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.AppStream.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.AppStream.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.ListTagsForResource.ListTagsForResource


-- | Retrieves the name of the stack with which the specified fleet is
--   associated.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.ListAssociatedStacks

-- | <i>See:</i> <a>newListAssociatedStacks</a> smart constructor.
data ListAssociatedStacks
ListAssociatedStacks' :: Maybe Text -> Text -> ListAssociatedStacks

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:ListAssociatedStacks'] :: ListAssociatedStacks -> Maybe Text

-- | The name of the fleet.
[$sel:fleetName:ListAssociatedStacks'] :: ListAssociatedStacks -> Text

-- | Create a value of <a>ListAssociatedStacks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedStacks'</a>,
--   <a>listAssociatedStacks_nextToken</a> - The pagination token to use to
--   retrieve the next page of results for this operation. If this value is
--   null, it retrieves the first page.
--   
--   <a>$sel:fleetName:ListAssociatedStacks'</a>,
--   <a>listAssociatedStacks_fleetName</a> - The name of the fleet.
newListAssociatedStacks :: Text -> ListAssociatedStacks

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
listAssociatedStacks_nextToken :: Lens' ListAssociatedStacks (Maybe Text)

-- | The name of the fleet.
listAssociatedStacks_fleetName :: Lens' ListAssociatedStacks Text

-- | <i>See:</i> <a>newListAssociatedStacksResponse</a> smart constructor.
data ListAssociatedStacksResponse
ListAssociatedStacksResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAssociatedStacksResponse

-- | The name of the stack.
[$sel:names:ListAssociatedStacksResponse'] :: ListAssociatedStacksResponse -> Maybe [Text]

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:ListAssociatedStacksResponse'] :: ListAssociatedStacksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAssociatedStacksResponse'] :: ListAssociatedStacksResponse -> Int

-- | Create a value of <a>ListAssociatedStacksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:ListAssociatedStacksResponse'</a>,
--   <a>listAssociatedStacksResponse_names</a> - The name of the stack.
--   
--   <a>$sel:nextToken:ListAssociatedStacks'</a>,
--   <a>listAssociatedStacksResponse_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   there are no more pages, this value is null.
--   
--   <a>$sel:httpStatus:ListAssociatedStacksResponse'</a>,
--   <a>listAssociatedStacksResponse_httpStatus</a> - The response's http
--   status code.
newListAssociatedStacksResponse :: Int -> ListAssociatedStacksResponse

-- | The name of the stack.
listAssociatedStacksResponse_names :: Lens' ListAssociatedStacksResponse (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
listAssociatedStacksResponse_nextToken :: Lens' ListAssociatedStacksResponse (Maybe Text)

-- | The response's http status code.
listAssociatedStacksResponse_httpStatus :: Lens' ListAssociatedStacksResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance GHC.Show.Show Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance GHC.Read.Read Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance GHC.Classes.Eq Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance GHC.Generics.Generic Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacksResponse
instance GHC.Show.Show Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacksResponse
instance GHC.Read.Read Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacksResponse
instance GHC.Classes.Eq Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance Control.DeepSeq.NFData Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance Control.DeepSeq.NFData Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.ListAssociatedStacks.ListAssociatedStacks


-- | Retrieves the name of the fleet that is associated with the specified
--   stack.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.ListAssociatedFleets

-- | <i>See:</i> <a>newListAssociatedFleets</a> smart constructor.
data ListAssociatedFleets
ListAssociatedFleets' :: Maybe Text -> Text -> ListAssociatedFleets

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:ListAssociatedFleets'] :: ListAssociatedFleets -> Maybe Text

-- | The name of the stack.
[$sel:stackName:ListAssociatedFleets'] :: ListAssociatedFleets -> Text

-- | Create a value of <a>ListAssociatedFleets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedFleets'</a>,
--   <a>listAssociatedFleets_nextToken</a> - The pagination token to use to
--   retrieve the next page of results for this operation. If this value is
--   null, it retrieves the first page.
--   
--   <a>$sel:stackName:ListAssociatedFleets'</a>,
--   <a>listAssociatedFleets_stackName</a> - The name of the stack.
newListAssociatedFleets :: Text -> ListAssociatedFleets

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
listAssociatedFleets_nextToken :: Lens' ListAssociatedFleets (Maybe Text)

-- | The name of the stack.
listAssociatedFleets_stackName :: Lens' ListAssociatedFleets Text

-- | <i>See:</i> <a>newListAssociatedFleetsResponse</a> smart constructor.
data ListAssociatedFleetsResponse
ListAssociatedFleetsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAssociatedFleetsResponse

-- | The name of the fleet.
[$sel:names:ListAssociatedFleetsResponse'] :: ListAssociatedFleetsResponse -> Maybe [Text]

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:ListAssociatedFleetsResponse'] :: ListAssociatedFleetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAssociatedFleetsResponse'] :: ListAssociatedFleetsResponse -> Int

-- | Create a value of <a>ListAssociatedFleetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:ListAssociatedFleetsResponse'</a>,
--   <a>listAssociatedFleetsResponse_names</a> - The name of the fleet.
--   
--   <a>$sel:nextToken:ListAssociatedFleets'</a>,
--   <a>listAssociatedFleetsResponse_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   there are no more pages, this value is null.
--   
--   <a>$sel:httpStatus:ListAssociatedFleetsResponse'</a>,
--   <a>listAssociatedFleetsResponse_httpStatus</a> - The response's http
--   status code.
newListAssociatedFleetsResponse :: Int -> ListAssociatedFleetsResponse

-- | The name of the fleet.
listAssociatedFleetsResponse_names :: Lens' ListAssociatedFleetsResponse (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
listAssociatedFleetsResponse_nextToken :: Lens' ListAssociatedFleetsResponse (Maybe Text)

-- | The response's http status code.
listAssociatedFleetsResponse_httpStatus :: Lens' ListAssociatedFleetsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance GHC.Show.Show Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance GHC.Read.Read Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance GHC.Classes.Eq Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance GHC.Generics.Generic Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleetsResponse
instance GHC.Show.Show Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleetsResponse
instance GHC.Read.Read Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleetsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance Control.DeepSeq.NFData Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance Control.DeepSeq.NFData Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.ListAssociatedFleets.ListAssociatedFleets


-- | Immediately stops the specified streaming session.
module Network.AWS.AppStream.ExpireSession

-- | <i>See:</i> <a>newExpireSession</a> smart constructor.
data ExpireSession
ExpireSession' :: Text -> ExpireSession

-- | The identifier of the streaming session.
[$sel:sessionId:ExpireSession'] :: ExpireSession -> Text

-- | Create a value of <a>ExpireSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionId:ExpireSession'</a>, <a>expireSession_sessionId</a> -
--   The identifier of the streaming session.
newExpireSession :: Text -> ExpireSession

-- | The identifier of the streaming session.
expireSession_sessionId :: Lens' ExpireSession Text

-- | <i>See:</i> <a>newExpireSessionResponse</a> smart constructor.
data ExpireSessionResponse
ExpireSessionResponse' :: Int -> ExpireSessionResponse

-- | The response's http status code.
[$sel:httpStatus:ExpireSessionResponse'] :: ExpireSessionResponse -> Int

-- | Create a value of <a>ExpireSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ExpireSessionResponse'</a>,
--   <a>expireSessionResponse_httpStatus</a> - The response's http status
--   code.
newExpireSessionResponse :: Int -> ExpireSessionResponse

-- | The response's http status code.
expireSessionResponse_httpStatus :: Lens' ExpireSessionResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.ExpireSession.ExpireSession
instance GHC.Show.Show Network.AWS.AppStream.ExpireSession.ExpireSession
instance GHC.Read.Read Network.AWS.AppStream.ExpireSession.ExpireSession
instance GHC.Classes.Eq Network.AWS.AppStream.ExpireSession.ExpireSession
instance GHC.Generics.Generic Network.AWS.AppStream.ExpireSession.ExpireSessionResponse
instance GHC.Show.Show Network.AWS.AppStream.ExpireSession.ExpireSessionResponse
instance GHC.Read.Read Network.AWS.AppStream.ExpireSession.ExpireSessionResponse
instance GHC.Classes.Eq Network.AWS.AppStream.ExpireSession.ExpireSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.ExpireSession.ExpireSession
instance Control.DeepSeq.NFData Network.AWS.AppStream.ExpireSession.ExpireSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.ExpireSession.ExpireSession
instance Control.DeepSeq.NFData Network.AWS.AppStream.ExpireSession.ExpireSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.ExpireSession.ExpireSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.ExpireSession.ExpireSession
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.ExpireSession.ExpireSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.ExpireSession.ExpireSession


-- | Enables a user in the user pool. After being enabled, users can sign
--   in to AppStream 2.0 and open applications from the stacks to which
--   they are assigned.
module Network.AWS.AppStream.EnableUser

-- | <i>See:</i> <a>newEnableUser</a> smart constructor.
data EnableUser
EnableUser' :: Sensitive Text -> AuthenticationType -> EnableUser

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
[$sel:userName:EnableUser'] :: EnableUser -> Sensitive Text

-- | The authentication type for the user. You must specify USERPOOL.
[$sel:authenticationType:EnableUser'] :: EnableUser -> AuthenticationType

-- | Create a value of <a>EnableUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:EnableUser'</a>, <a>enableUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
--   
--   <a>$sel:authenticationType:EnableUser'</a>,
--   <a>enableUser_authenticationType</a> - The authentication type for the
--   user. You must specify USERPOOL.
newEnableUser :: Text -> AuthenticationType -> EnableUser

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
enableUser_userName :: Lens' EnableUser Text

-- | The authentication type for the user. You must specify USERPOOL.
enableUser_authenticationType :: Lens' EnableUser AuthenticationType

-- | <i>See:</i> <a>newEnableUserResponse</a> smart constructor.
data EnableUserResponse
EnableUserResponse' :: Int -> EnableUserResponse

-- | The response's http status code.
[$sel:httpStatus:EnableUserResponse'] :: EnableUserResponse -> Int

-- | Create a value of <a>EnableUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EnableUserResponse'</a>,
--   <a>enableUserResponse_httpStatus</a> - The response's http status
--   code.
newEnableUserResponse :: Int -> EnableUserResponse

-- | The response's http status code.
enableUserResponse_httpStatus :: Lens' EnableUserResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.EnableUser.EnableUser
instance GHC.Show.Show Network.AWS.AppStream.EnableUser.EnableUser
instance GHC.Classes.Eq Network.AWS.AppStream.EnableUser.EnableUser
instance GHC.Generics.Generic Network.AWS.AppStream.EnableUser.EnableUserResponse
instance GHC.Show.Show Network.AWS.AppStream.EnableUser.EnableUserResponse
instance GHC.Read.Read Network.AWS.AppStream.EnableUser.EnableUserResponse
instance GHC.Classes.Eq Network.AWS.AppStream.EnableUser.EnableUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.EnableUser.EnableUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.EnableUser.EnableUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.EnableUser.EnableUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.EnableUser.EnableUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.EnableUser.EnableUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.EnableUser.EnableUser
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.EnableUser.EnableUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.EnableUser.EnableUser


-- | Disassociates the specified fleet from the specified stack.
module Network.AWS.AppStream.DisassociateFleet

-- | <i>See:</i> <a>newDisassociateFleet</a> smart constructor.
data DisassociateFleet
DisassociateFleet' :: Text -> Text -> DisassociateFleet

-- | The name of the fleet.
[$sel:fleetName:DisassociateFleet'] :: DisassociateFleet -> Text

-- | The name of the stack.
[$sel:stackName:DisassociateFleet'] :: DisassociateFleet -> Text

-- | Create a value of <a>DisassociateFleet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetName:DisassociateFleet'</a>,
--   <a>disassociateFleet_fleetName</a> - The name of the fleet.
--   
--   <a>$sel:stackName:DisassociateFleet'</a>,
--   <a>disassociateFleet_stackName</a> - The name of the stack.
newDisassociateFleet :: Text -> Text -> DisassociateFleet

-- | The name of the fleet.
disassociateFleet_fleetName :: Lens' DisassociateFleet Text

-- | The name of the stack.
disassociateFleet_stackName :: Lens' DisassociateFleet Text

-- | <i>See:</i> <a>newDisassociateFleetResponse</a> smart constructor.
data DisassociateFleetResponse
DisassociateFleetResponse' :: Int -> DisassociateFleetResponse

-- | The response's http status code.
[$sel:httpStatus:DisassociateFleetResponse'] :: DisassociateFleetResponse -> Int

-- | Create a value of <a>DisassociateFleetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateFleetResponse'</a>,
--   <a>disassociateFleetResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateFleetResponse :: Int -> DisassociateFleetResponse

-- | The response's http status code.
disassociateFleetResponse_httpStatus :: Lens' DisassociateFleetResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance GHC.Show.Show Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance GHC.Read.Read Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance GHC.Classes.Eq Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance GHC.Generics.Generic Network.AWS.AppStream.DisassociateFleet.DisassociateFleetResponse
instance GHC.Show.Show Network.AWS.AppStream.DisassociateFleet.DisassociateFleetResponse
instance GHC.Read.Read Network.AWS.AppStream.DisassociateFleet.DisassociateFleetResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DisassociateFleet.DisassociateFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.DisassociateFleet.DisassociateFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DisassociateFleet.DisassociateFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DisassociateFleet.DisassociateFleet


-- | Disables the specified user in the user pool. Users can't sign in to
--   AppStream 2.0 until they are re-enabled. This action does not delete
--   the user.
module Network.AWS.AppStream.DisableUser

-- | <i>See:</i> <a>newDisableUser</a> smart constructor.
data DisableUser
DisableUser' :: Sensitive Text -> AuthenticationType -> DisableUser

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
[$sel:userName:DisableUser'] :: DisableUser -> Sensitive Text

-- | The authentication type for the user. You must specify USERPOOL.
[$sel:authenticationType:DisableUser'] :: DisableUser -> AuthenticationType

-- | Create a value of <a>DisableUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:DisableUser'</a>, <a>disableUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:DisableUser'</a>,
--   <a>disableUser_authenticationType</a> - The authentication type for
--   the user. You must specify USERPOOL.
newDisableUser :: Text -> AuthenticationType -> DisableUser

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
disableUser_userName :: Lens' DisableUser Text

-- | The authentication type for the user. You must specify USERPOOL.
disableUser_authenticationType :: Lens' DisableUser AuthenticationType

-- | <i>See:</i> <a>newDisableUserResponse</a> smart constructor.
data DisableUserResponse
DisableUserResponse' :: Int -> DisableUserResponse

-- | The response's http status code.
[$sel:httpStatus:DisableUserResponse'] :: DisableUserResponse -> Int

-- | Create a value of <a>DisableUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisableUserResponse'</a>,
--   <a>disableUserResponse_httpStatus</a> - The response's http status
--   code.
newDisableUserResponse :: Int -> DisableUserResponse

-- | The response's http status code.
disableUserResponse_httpStatus :: Lens' DisableUserResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DisableUser.DisableUser
instance GHC.Show.Show Network.AWS.AppStream.DisableUser.DisableUser
instance GHC.Classes.Eq Network.AWS.AppStream.DisableUser.DisableUser
instance GHC.Generics.Generic Network.AWS.AppStream.DisableUser.DisableUserResponse
instance GHC.Show.Show Network.AWS.AppStream.DisableUser.DisableUserResponse
instance GHC.Read.Read Network.AWS.AppStream.DisableUser.DisableUserResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DisableUser.DisableUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DisableUser.DisableUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.DisableUser.DisableUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DisableUser.DisableUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.DisableUser.DisableUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DisableUser.DisableUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DisableUser.DisableUser
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DisableUser.DisableUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DisableUser.DisableUser


-- | Retrieves a list that describes one or more specified users in the
--   user pool.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeUsers

-- | <i>See:</i> <a>newDescribeUsers</a> smart constructor.
data DescribeUsers
DescribeUsers' :: Maybe Text -> Maybe Int -> AuthenticationType -> DescribeUsers

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeUsers'] :: DescribeUsers -> Maybe Text

-- | The maximum size of each page of results.
[$sel:maxResults:DescribeUsers'] :: DescribeUsers -> Maybe Int

-- | The authentication type for the users in the user pool to describe.
--   You must specify USERPOOL.
[$sel:authenticationType:DescribeUsers'] :: DescribeUsers -> AuthenticationType

-- | Create a value of <a>DescribeUsers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsers'</a>, <a>describeUsers_nextToken</a> -
--   The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeUsers'</a>, <a>describeUsers_maxResults</a>
--   - The maximum size of each page of results.
--   
--   <a>$sel:authenticationType:DescribeUsers'</a>,
--   <a>describeUsers_authenticationType</a> - The authentication type for
--   the users in the user pool to describe. You must specify USERPOOL.
newDescribeUsers :: AuthenticationType -> DescribeUsers

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeUsers_nextToken :: Lens' DescribeUsers (Maybe Text)

-- | The maximum size of each page of results.
describeUsers_maxResults :: Lens' DescribeUsers (Maybe Int)

-- | The authentication type for the users in the user pool to describe.
--   You must specify USERPOOL.
describeUsers_authenticationType :: Lens' DescribeUsers AuthenticationType

-- | <i>See:</i> <a>newDescribeUsersResponse</a> smart constructor.
data DescribeUsersResponse
DescribeUsersResponse' :: Maybe Text -> Maybe [User] -> Int -> DescribeUsersResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeUsersResponse'] :: DescribeUsersResponse -> Maybe Text

-- | Information about users in the user pool.
[$sel:users:DescribeUsersResponse'] :: DescribeUsersResponse -> Maybe [User]

-- | The response's http status code.
[$sel:httpStatus:DescribeUsersResponse'] :: DescribeUsersResponse -> Int

-- | Create a value of <a>DescribeUsersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsers'</a>,
--   <a>describeUsersResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:users:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_users</a> - Information about users in the
--   user pool.
--   
--   <a>$sel:httpStatus:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUsersResponse :: Int -> DescribeUsersResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeUsersResponse_nextToken :: Lens' DescribeUsersResponse (Maybe Text)

-- | Information about users in the user pool.
describeUsersResponse_users :: Lens' DescribeUsersResponse (Maybe [User])

-- | The response's http status code.
describeUsersResponse_httpStatus :: Lens' DescribeUsersResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance GHC.Show.Show Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance GHC.Read.Read Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeUsers.DescribeUsersResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeUsers.DescribeUsersResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeUsers.DescribeUsersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeUsers.DescribeUsersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeUsers.DescribeUsers
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeUsers.DescribeUsers


-- | Retrieves a list that describes the UserStackAssociation objects. You
--   must specify either or both of the following:
--   
--   <ul>
--   <li>The stack name</li>
--   <li>The user name (email address of the user associated with the
--   stack) and the authentication type for the user</li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeUserStackAssociations

-- | <i>See:</i> <a>newDescribeUserStackAssociations</a> smart constructor.
data DescribeUserStackAssociations
DescribeUserStackAssociations' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe (Sensitive Text) -> Maybe AuthenticationType -> DescribeUserStackAssociations

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeUserStackAssociations'] :: DescribeUserStackAssociations -> Maybe Text

-- | The name of the stack that is associated with the user.
[$sel:stackName:DescribeUserStackAssociations'] :: DescribeUserStackAssociations -> Maybe Text

-- | The maximum size of each page of results.
[$sel:maxResults:DescribeUserStackAssociations'] :: DescribeUserStackAssociations -> Maybe Natural

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
[$sel:userName:DescribeUserStackAssociations'] :: DescribeUserStackAssociations -> Maybe (Sensitive Text)

-- | The authentication type for the user who is associated with the stack.
--   You must specify USERPOOL.
[$sel:authenticationType:DescribeUserStackAssociations'] :: DescribeUserStackAssociations -> Maybe AuthenticationType

-- | Create a value of <a>DescribeUserStackAssociations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   this value is null, it retrieves the first page.
--   
--   <a>$sel:stackName:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_stackName</a> - The name of the stack
--   that is associated with the user.
--   
--   <a>$sel:maxResults:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_maxResults</a> - The maximum size of
--   each page of results.
--   
--   <a>$sel:userName:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_userName</a> - The email address of
--   the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_authenticationType</a> - The
--   authentication type for the user who is associated with the stack. You
--   must specify USERPOOL.
newDescribeUserStackAssociations :: DescribeUserStackAssociations

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeUserStackAssociations_nextToken :: Lens' DescribeUserStackAssociations (Maybe Text)

-- | The name of the stack that is associated with the user.
describeUserStackAssociations_stackName :: Lens' DescribeUserStackAssociations (Maybe Text)

-- | The maximum size of each page of results.
describeUserStackAssociations_maxResults :: Lens' DescribeUserStackAssociations (Maybe Natural)

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
describeUserStackAssociations_userName :: Lens' DescribeUserStackAssociations (Maybe Text)

-- | The authentication type for the user who is associated with the stack.
--   You must specify USERPOOL.
describeUserStackAssociations_authenticationType :: Lens' DescribeUserStackAssociations (Maybe AuthenticationType)

-- | <i>See:</i> <a>newDescribeUserStackAssociationsResponse</a> smart
--   constructor.
data DescribeUserStackAssociationsResponse
DescribeUserStackAssociationsResponse' :: Maybe Text -> Maybe (NonEmpty UserStackAssociation) -> Int -> DescribeUserStackAssociationsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeUserStackAssociationsResponse'] :: DescribeUserStackAssociationsResponse -> Maybe Text

-- | The UserStackAssociation objects.
[$sel:userStackAssociations:DescribeUserStackAssociationsResponse'] :: DescribeUserStackAssociationsResponse -> Maybe (NonEmpty UserStackAssociation)

-- | The response's http status code.
[$sel:httpStatus:DescribeUserStackAssociationsResponse'] :: DescribeUserStackAssociationsResponse -> Int

-- | Create a value of <a>DescribeUserStackAssociationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociationsResponse_nextToken</a> - The
--   pagination token to use to retrieve the next page of results for this
--   operation. If there are no more pages, this value is null.
--   
--   
--   <a>$sel:userStackAssociations:DescribeUserStackAssociationsResponse'</a>,
--   <a>describeUserStackAssociationsResponse_userStackAssociations</a> -
--   The UserStackAssociation objects.
--   
--   <a>$sel:httpStatus:DescribeUserStackAssociationsResponse'</a>,
--   <a>describeUserStackAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeUserStackAssociationsResponse :: Int -> DescribeUserStackAssociationsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeUserStackAssociationsResponse_nextToken :: Lens' DescribeUserStackAssociationsResponse (Maybe Text)

-- | The UserStackAssociation objects.
describeUserStackAssociationsResponse_userStackAssociations :: Lens' DescribeUserStackAssociationsResponse (Maybe (NonEmpty UserStackAssociation))

-- | The response's http status code.
describeUserStackAssociationsResponse_httpStatus :: Lens' DescribeUserStackAssociationsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance GHC.Show.Show Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociationsResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociationsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeUserStackAssociations.DescribeUserStackAssociations


-- | Retrieves a list that describes one or more usage report
--   subscriptions.
module Network.AWS.AppStream.DescribeUsageReportSubscriptions

-- | <i>See:</i> <a>newDescribeUsageReportSubscriptions</a> smart
--   constructor.
data DescribeUsageReportSubscriptions
DescribeUsageReportSubscriptions' :: Maybe Text -> Maybe Int -> DescribeUsageReportSubscriptions

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeUsageReportSubscriptions'] :: DescribeUsageReportSubscriptions -> Maybe Text

-- | The maximum size of each page of results.
[$sel:maxResults:DescribeUsageReportSubscriptions'] :: DescribeUsageReportSubscriptions -> Maybe Int

-- | Create a value of <a>DescribeUsageReportSubscriptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsageReportSubscriptions'</a>,
--   <a>describeUsageReportSubscriptions_nextToken</a> - The pagination
--   token to use to retrieve the next page of results for this operation.
--   If this value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeUsageReportSubscriptions'</a>,
--   <a>describeUsageReportSubscriptions_maxResults</a> - The maximum size
--   of each page of results.
newDescribeUsageReportSubscriptions :: DescribeUsageReportSubscriptions

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeUsageReportSubscriptions_nextToken :: Lens' DescribeUsageReportSubscriptions (Maybe Text)

-- | The maximum size of each page of results.
describeUsageReportSubscriptions_maxResults :: Lens' DescribeUsageReportSubscriptions (Maybe Int)

-- | <i>See:</i> <a>newDescribeUsageReportSubscriptionsResponse</a> smart
--   constructor.
data DescribeUsageReportSubscriptionsResponse
DescribeUsageReportSubscriptionsResponse' :: Maybe Text -> Maybe [UsageReportSubscription] -> Int -> DescribeUsageReportSubscriptionsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeUsageReportSubscriptionsResponse'] :: DescribeUsageReportSubscriptionsResponse -> Maybe Text

-- | Information about the usage report subscription.
[$sel:usageReportSubscriptions:DescribeUsageReportSubscriptionsResponse'] :: DescribeUsageReportSubscriptionsResponse -> Maybe [UsageReportSubscription]

-- | The response's http status code.
[$sel:httpStatus:DescribeUsageReportSubscriptionsResponse'] :: DescribeUsageReportSubscriptionsResponse -> Int

-- | Create a value of <a>DescribeUsageReportSubscriptionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsageReportSubscriptions'</a>,
--   <a>describeUsageReportSubscriptionsResponse_nextToken</a> - The
--   pagination token to use to retrieve the next page of results for this
--   operation. If there are no more pages, this value is null.
--   
--   
--   <a>$sel:usageReportSubscriptions:DescribeUsageReportSubscriptionsResponse'</a>,
--   <a>describeUsageReportSubscriptionsResponse_usageReportSubscriptions</a>
--   - Information about the usage report subscription.
--   
--   <a>$sel:httpStatus:DescribeUsageReportSubscriptionsResponse'</a>,
--   <a>describeUsageReportSubscriptionsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeUsageReportSubscriptionsResponse :: Int -> DescribeUsageReportSubscriptionsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeUsageReportSubscriptionsResponse_nextToken :: Lens' DescribeUsageReportSubscriptionsResponse (Maybe Text)

-- | Information about the usage report subscription.
describeUsageReportSubscriptionsResponse_usageReportSubscriptions :: Lens' DescribeUsageReportSubscriptionsResponse (Maybe [UsageReportSubscription])

-- | The response's http status code.
describeUsageReportSubscriptionsResponse_httpStatus :: Lens' DescribeUsageReportSubscriptionsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance GHC.Show.Show Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance GHC.Read.Read Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptionsResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptionsResponse
instance GHC.Read.Read Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptionsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeUsageReportSubscriptions.DescribeUsageReportSubscriptions


-- | Retrieves a list that describes one or more specified stacks, if the
--   stack names are provided. Otherwise, all stacks in the account are
--   described.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeStacks

-- | <i>See:</i> <a>newDescribeStacks</a> smart constructor.
data DescribeStacks
DescribeStacks' :: Maybe [Text] -> Maybe Text -> DescribeStacks

-- | The names of the stacks to describe.
[$sel:names:DescribeStacks'] :: DescribeStacks -> Maybe [Text]

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeStacks'] :: DescribeStacks -> Maybe Text

-- | Create a value of <a>DescribeStacks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeStacks'</a>, <a>describeStacks_names</a> - The
--   names of the stacks to describe.
--   
--   <a>$sel:nextToken:DescribeStacks'</a>, <a>describeStacks_nextToken</a>
--   - The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
newDescribeStacks :: DescribeStacks

-- | The names of the stacks to describe.
describeStacks_names :: Lens' DescribeStacks (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeStacks_nextToken :: Lens' DescribeStacks (Maybe Text)

-- | <i>See:</i> <a>newDescribeStacksResponse</a> smart constructor.
data DescribeStacksResponse
DescribeStacksResponse' :: Maybe Text -> Maybe [Stack] -> Int -> DescribeStacksResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeStacksResponse'] :: DescribeStacksResponse -> Maybe Text

-- | Information about the stacks.
[$sel:stacks:DescribeStacksResponse'] :: DescribeStacksResponse -> Maybe [Stack]

-- | The response's http status code.
[$sel:httpStatus:DescribeStacksResponse'] :: DescribeStacksResponse -> Int

-- | Create a value of <a>DescribeStacksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeStacks'</a>,
--   <a>describeStacksResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:stacks:DescribeStacksResponse'</a>,
--   <a>describeStacksResponse_stacks</a> - Information about the stacks.
--   
--   <a>$sel:httpStatus:DescribeStacksResponse'</a>,
--   <a>describeStacksResponse_httpStatus</a> - The response's http status
--   code.
newDescribeStacksResponse :: Int -> DescribeStacksResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeStacksResponse_nextToken :: Lens' DescribeStacksResponse (Maybe Text)

-- | Information about the stacks.
describeStacksResponse_stacks :: Lens' DescribeStacksResponse (Maybe [Stack])

-- | The response's http status code.
describeStacksResponse_httpStatus :: Lens' DescribeStacksResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance GHC.Show.Show Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance GHC.Read.Read Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeStacks.DescribeStacksResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeStacks.DescribeStacksResponse
instance GHC.Read.Read Network.AWS.AppStream.DescribeStacks.DescribeStacksResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeStacks.DescribeStacksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeStacks.DescribeStacksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeStacks.DescribeStacks
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeStacks.DescribeStacks


-- | Retrieves a list that describes the streaming sessions for a specified
--   stack and fleet. If a UserId is provided for the stack and fleet, only
--   streaming sessions for that user are described. If an authentication
--   type is not provided, the default is to authenticate users using a
--   streaming URL.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeSessions

-- | <i>See:</i> <a>newDescribeSessions</a> smart constructor.
data DescribeSessions
DescribeSessions' :: Maybe Text -> Maybe Text -> Maybe AuthenticationType -> Maybe Int -> Text -> Text -> DescribeSessions

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeSessions'] :: DescribeSessions -> Maybe Text

-- | The user identifier (ID). If you specify a user ID, you must also
--   specify the authentication type.
[$sel:userId:DescribeSessions'] :: DescribeSessions -> Maybe Text

-- | The authentication method. Specify <tt>API</tt> for a user
--   authenticated using a streaming URL or <tt>SAML</tt> for a SAML
--   federated user. The default is to authenticate users using a streaming
--   URL.
[$sel:authenticationType:DescribeSessions'] :: DescribeSessions -> Maybe AuthenticationType

-- | The size of each page of results. The default value is 20 and the
--   maximum value is 50.
[$sel:limit:DescribeSessions'] :: DescribeSessions -> Maybe Int

-- | The name of the stack. This value is case-sensitive.
[$sel:stackName:DescribeSessions'] :: DescribeSessions -> Text

-- | The name of the fleet. This value is case-sensitive.
[$sel:fleetName:DescribeSessions'] :: DescribeSessions -> Text

-- | Create a value of <a>DescribeSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSessions'</a>,
--   <a>describeSessions_nextToken</a> - The pagination token to use to
--   retrieve the next page of results for this operation. If this value is
--   null, it retrieves the first page.
--   
--   <a>$sel:userId:DescribeSessions'</a>, <a>describeSessions_userId</a> -
--   The user identifier (ID). If you specify a user ID, you must also
--   specify the authentication type.
--   
--   <a>$sel:authenticationType:DescribeSessions'</a>,
--   <a>describeSessions_authenticationType</a> - The authentication
--   method. Specify <tt>API</tt> for a user authenticated using a
--   streaming URL or <tt>SAML</tt> for a SAML federated user. The default
--   is to authenticate users using a streaming URL.
--   
--   <a>$sel:limit:DescribeSessions'</a>, <a>describeSessions_limit</a> -
--   The size of each page of results. The default value is 20 and the
--   maximum value is 50.
--   
--   <a>$sel:stackName:DescribeSessions'</a>,
--   <a>describeSessions_stackName</a> - The name of the stack. This value
--   is case-sensitive.
--   
--   <a>$sel:fleetName:DescribeSessions'</a>,
--   <a>describeSessions_fleetName</a> - The name of the fleet. This value
--   is case-sensitive.
newDescribeSessions :: Text -> Text -> DescribeSessions

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeSessions_nextToken :: Lens' DescribeSessions (Maybe Text)

-- | The user identifier (ID). If you specify a user ID, you must also
--   specify the authentication type.
describeSessions_userId :: Lens' DescribeSessions (Maybe Text)

-- | The authentication method. Specify <tt>API</tt> for a user
--   authenticated using a streaming URL or <tt>SAML</tt> for a SAML
--   federated user. The default is to authenticate users using a streaming
--   URL.
describeSessions_authenticationType :: Lens' DescribeSessions (Maybe AuthenticationType)

-- | The size of each page of results. The default value is 20 and the
--   maximum value is 50.
describeSessions_limit :: Lens' DescribeSessions (Maybe Int)

-- | The name of the stack. This value is case-sensitive.
describeSessions_stackName :: Lens' DescribeSessions Text

-- | The name of the fleet. This value is case-sensitive.
describeSessions_fleetName :: Lens' DescribeSessions Text

-- | <i>See:</i> <a>newDescribeSessionsResponse</a> smart constructor.
data DescribeSessionsResponse
DescribeSessionsResponse' :: Maybe Text -> Maybe [Session] -> Int -> DescribeSessionsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeSessionsResponse'] :: DescribeSessionsResponse -> Maybe Text

-- | Information about the streaming sessions.
[$sel:sessions:DescribeSessionsResponse'] :: DescribeSessionsResponse -> Maybe [Session]

-- | The response's http status code.
[$sel:httpStatus:DescribeSessionsResponse'] :: DescribeSessionsResponse -> Int

-- | Create a value of <a>DescribeSessionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSessions'</a>,
--   <a>describeSessionsResponse_nextToken</a> - The pagination token to
--   use to retrieve the next page of results for this operation. If there
--   are no more pages, this value is null.
--   
--   <a>$sel:sessions:DescribeSessionsResponse'</a>,
--   <a>describeSessionsResponse_sessions</a> - Information about the
--   streaming sessions.
--   
--   <a>$sel:httpStatus:DescribeSessionsResponse'</a>,
--   <a>describeSessionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSessionsResponse :: Int -> DescribeSessionsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeSessionsResponse_nextToken :: Lens' DescribeSessionsResponse (Maybe Text)

-- | Information about the streaming sessions.
describeSessionsResponse_sessions :: Lens' DescribeSessionsResponse (Maybe [Session])

-- | The response's http status code.
describeSessionsResponse_httpStatus :: Lens' DescribeSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance GHC.Show.Show Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance GHC.Read.Read Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeSessions.DescribeSessionsResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeSessions.DescribeSessionsResponse
instance GHC.Read.Read Network.AWS.AppStream.DescribeSessions.DescribeSessionsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeSessions.DescribeSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeSessions.DescribeSessionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeSessions.DescribeSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeSessions.DescribeSessions


-- | Retrieves a list that describes one or more specified images, if the
--   image names or image ARNs are provided. Otherwise, all images in the
--   account are described.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeImages

-- | <i>See:</i> <a>newDescribeImages</a> smart constructor.
data DescribeImages
DescribeImages' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe VisibilityType -> DescribeImages

-- | The names of the public or private images to describe.
[$sel:names:DescribeImages'] :: DescribeImages -> Maybe [Text]

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeImages'] :: DescribeImages -> Maybe Text

-- | The maximum size of each page of results.
[$sel:maxResults:DescribeImages'] :: DescribeImages -> Maybe Natural

-- | The ARNs of the public, private, and shared images to describe.
[$sel:arns:DescribeImages'] :: DescribeImages -> Maybe [Text]

-- | The type of image (public, private, or shared) to describe.
[$sel:type':DescribeImages'] :: DescribeImages -> Maybe VisibilityType

-- | Create a value of <a>DescribeImages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeImages'</a>, <a>describeImages_names</a> - The
--   names of the public or private images to describe.
--   
--   <a>$sel:nextToken:DescribeImages'</a>, <a>describeImages_nextToken</a>
--   - The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeImages'</a>,
--   <a>describeImages_maxResults</a> - The maximum size of each page of
--   results.
--   
--   <a>$sel:arns:DescribeImages'</a>, <a>describeImages_arns</a> - The
--   ARNs of the public, private, and shared images to describe.
--   
--   <a>$sel:type':DescribeImages'</a>, <a>describeImages_type</a> - The
--   type of image (public, private, or shared) to describe.
newDescribeImages :: DescribeImages

-- | The names of the public or private images to describe.
describeImages_names :: Lens' DescribeImages (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeImages_nextToken :: Lens' DescribeImages (Maybe Text)

-- | The maximum size of each page of results.
describeImages_maxResults :: Lens' DescribeImages (Maybe Natural)

-- | The ARNs of the public, private, and shared images to describe.
describeImages_arns :: Lens' DescribeImages (Maybe [Text])

-- | The type of image (public, private, or shared) to describe.
describeImages_type :: Lens' DescribeImages (Maybe VisibilityType)

-- | <i>See:</i> <a>newDescribeImagesResponse</a> smart constructor.
data DescribeImagesResponse
DescribeImagesResponse' :: Maybe Text -> Maybe [Image] -> Int -> DescribeImagesResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeImagesResponse'] :: DescribeImagesResponse -> Maybe Text

-- | Information about the images.
[$sel:images:DescribeImagesResponse'] :: DescribeImagesResponse -> Maybe [Image]

-- | The response's http status code.
[$sel:httpStatus:DescribeImagesResponse'] :: DescribeImagesResponse -> Int

-- | Create a value of <a>DescribeImagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeImages'</a>,
--   <a>describeImagesResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:images:DescribeImagesResponse'</a>,
--   <a>describeImagesResponse_images</a> - Information about the images.
--   
--   <a>$sel:httpStatus:DescribeImagesResponse'</a>,
--   <a>describeImagesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeImagesResponse :: Int -> DescribeImagesResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeImagesResponse_nextToken :: Lens' DescribeImagesResponse (Maybe Text)

-- | Information about the images.
describeImagesResponse_images :: Lens' DescribeImagesResponse (Maybe [Image])

-- | The response's http status code.
describeImagesResponse_httpStatus :: Lens' DescribeImagesResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeImages.DescribeImages
instance GHC.Show.Show Network.AWS.AppStream.DescribeImages.DescribeImages
instance GHC.Read.Read Network.AWS.AppStream.DescribeImages.DescribeImages
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeImages.DescribeImages
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeImages.DescribeImagesResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeImages.DescribeImagesResponse
instance GHC.Read.Read Network.AWS.AppStream.DescribeImages.DescribeImagesResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeImages.DescribeImagesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeImages.DescribeImages
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeImages.DescribeImagesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeImages.DescribeImages
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeImages.DescribeImages
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeImages.DescribeImages
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeImages.DescribeImages
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeImages.DescribeImages
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeImages.DescribeImages
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeImages.DescribeImages


-- | Retrieves a list that describes the permissions for shared AWS account
--   IDs on a private image that you own.
module Network.AWS.AppStream.DescribeImagePermissions

-- | <i>See:</i> <a>newDescribeImagePermissions</a> smart constructor.
data DescribeImagePermissions
DescribeImagePermissions' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty Text) -> Text -> DescribeImagePermissions

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeImagePermissions'] :: DescribeImagePermissions -> Maybe Text

-- | The maximum size of each page of results.
[$sel:maxResults:DescribeImagePermissions'] :: DescribeImagePermissions -> Maybe Natural

-- | The 12-digit identifier of one or more AWS accounts with which the
--   image is shared.
[$sel:sharedAwsAccountIds:DescribeImagePermissions'] :: DescribeImagePermissions -> Maybe (NonEmpty Text)

-- | The name of the private image for which to describe permissions. The
--   image must be one that you own.
[$sel:name:DescribeImagePermissions'] :: DescribeImagePermissions -> Text

-- | Create a value of <a>DescribeImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_nextToken</a> - The pagination token to
--   use to retrieve the next page of results for this operation. If this
--   value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_maxResults</a> - The maximum size of each
--   page of results.
--   
--   <a>$sel:sharedAwsAccountIds:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_sharedAwsAccountIds</a> - The 12-digit
--   identifier of one or more AWS accounts with which the image is shared.
--   
--   <a>$sel:name:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_name</a> - The name of the private image
--   for which to describe permissions. The image must be one that you own.
newDescribeImagePermissions :: Text -> DescribeImagePermissions

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeImagePermissions_nextToken :: Lens' DescribeImagePermissions (Maybe Text)

-- | The maximum size of each page of results.
describeImagePermissions_maxResults :: Lens' DescribeImagePermissions (Maybe Natural)

-- | The 12-digit identifier of one or more AWS accounts with which the
--   image is shared.
describeImagePermissions_sharedAwsAccountIds :: Lens' DescribeImagePermissions (Maybe (NonEmpty Text))

-- | The name of the private image for which to describe permissions. The
--   image must be one that you own.
describeImagePermissions_name :: Lens' DescribeImagePermissions Text

-- | <i>See:</i> <a>newDescribeImagePermissionsResponse</a> smart
--   constructor.
data DescribeImagePermissionsResponse
DescribeImagePermissionsResponse' :: Maybe [SharedImagePermissions] -> Maybe Text -> Maybe Text -> Int -> DescribeImagePermissionsResponse

-- | The permissions for a private image that you own.
[$sel:sharedImagePermissionsList:DescribeImagePermissionsResponse'] :: DescribeImagePermissionsResponse -> Maybe [SharedImagePermissions]

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeImagePermissionsResponse'] :: DescribeImagePermissionsResponse -> Maybe Text

-- | The name of the private image.
[$sel:name:DescribeImagePermissionsResponse'] :: DescribeImagePermissionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeImagePermissionsResponse'] :: DescribeImagePermissionsResponse -> Int

-- | Create a value of <a>DescribeImagePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:sharedImagePermissionsList:DescribeImagePermissionsResponse'</a>,
--   <a>describeImagePermissionsResponse_sharedImagePermissionsList</a> -
--   The permissions for a private image that you own.
--   
--   <a>$sel:nextToken:DescribeImagePermissions'</a>,
--   <a>describeImagePermissionsResponse_nextToken</a> - The pagination
--   token to use to retrieve the next page of results for this operation.
--   If there are no more pages, this value is null.
--   
--   <a>$sel:name:DescribeImagePermissions'</a>,
--   <a>describeImagePermissionsResponse_name</a> - The name of the private
--   image.
--   
--   <a>$sel:httpStatus:DescribeImagePermissionsResponse'</a>,
--   <a>describeImagePermissionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeImagePermissionsResponse :: Int -> DescribeImagePermissionsResponse

-- | The permissions for a private image that you own.
describeImagePermissionsResponse_sharedImagePermissionsList :: Lens' DescribeImagePermissionsResponse (Maybe [SharedImagePermissions])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeImagePermissionsResponse_nextToken :: Lens' DescribeImagePermissionsResponse (Maybe Text)

-- | The name of the private image.
describeImagePermissionsResponse_name :: Lens' DescribeImagePermissionsResponse (Maybe Text)

-- | The response's http status code.
describeImagePermissionsResponse_httpStatus :: Lens' DescribeImagePermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance GHC.Show.Show Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance GHC.Read.Read Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissionsResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissionsResponse
instance GHC.Read.Read Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissionsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeImagePermissions.DescribeImagePermissions


-- | Retrieves a list that describes one or more specified image builders,
--   if the image builder names are provided. Otherwise, all image builders
--   in the account are described.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeImageBuilders

-- | <i>See:</i> <a>newDescribeImageBuilders</a> smart constructor.
data DescribeImageBuilders
DescribeImageBuilders' :: Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeImageBuilders

-- | The names of the image builders to describe.
[$sel:names:DescribeImageBuilders'] :: DescribeImageBuilders -> Maybe [Text]

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeImageBuilders'] :: DescribeImageBuilders -> Maybe Text

-- | The maximum size of each page of results.
[$sel:maxResults:DescribeImageBuilders'] :: DescribeImageBuilders -> Maybe Int

-- | Create a value of <a>DescribeImageBuilders</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeImageBuilders'</a>,
--   <a>describeImageBuilders_names</a> - The names of the image builders
--   to describe.
--   
--   <a>$sel:nextToken:DescribeImageBuilders'</a>,
--   <a>describeImageBuilders_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If this value
--   is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeImageBuilders'</a>,
--   <a>describeImageBuilders_maxResults</a> - The maximum size of each
--   page of results.
newDescribeImageBuilders :: DescribeImageBuilders

-- | The names of the image builders to describe.
describeImageBuilders_names :: Lens' DescribeImageBuilders (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeImageBuilders_nextToken :: Lens' DescribeImageBuilders (Maybe Text)

-- | The maximum size of each page of results.
describeImageBuilders_maxResults :: Lens' DescribeImageBuilders (Maybe Int)

-- | <i>See:</i> <a>newDescribeImageBuildersResponse</a> smart constructor.
data DescribeImageBuildersResponse
DescribeImageBuildersResponse' :: Maybe Text -> Maybe [ImageBuilder] -> Int -> DescribeImageBuildersResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeImageBuildersResponse'] :: DescribeImageBuildersResponse -> Maybe Text

-- | Information about the image builders.
[$sel:imageBuilders:DescribeImageBuildersResponse'] :: DescribeImageBuildersResponse -> Maybe [ImageBuilder]

-- | The response's http status code.
[$sel:httpStatus:DescribeImageBuildersResponse'] :: DescribeImageBuildersResponse -> Int

-- | Create a value of <a>DescribeImageBuildersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeImageBuilders'</a>,
--   <a>describeImageBuildersResponse_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   there are no more pages, this value is null.
--   
--   <a>$sel:imageBuilders:DescribeImageBuildersResponse'</a>,
--   <a>describeImageBuildersResponse_imageBuilders</a> - Information about
--   the image builders.
--   
--   <a>$sel:httpStatus:DescribeImageBuildersResponse'</a>,
--   <a>describeImageBuildersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeImageBuildersResponse :: Int -> DescribeImageBuildersResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeImageBuildersResponse_nextToken :: Lens' DescribeImageBuildersResponse (Maybe Text)

-- | Information about the image builders.
describeImageBuildersResponse_imageBuilders :: Lens' DescribeImageBuildersResponse (Maybe [ImageBuilder])

-- | The response's http status code.
describeImageBuildersResponse_httpStatus :: Lens' DescribeImageBuildersResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance GHC.Show.Show Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance GHC.Read.Read Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuildersResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuildersResponse
instance GHC.Read.Read Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuildersResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuildersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuildersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeImageBuilders.DescribeImageBuilders


-- | Retrieves a list that describes one or more specified fleets, if the
--   fleet names are provided. Otherwise, all fleets in the account are
--   described.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeFleets

-- | <i>See:</i> <a>newDescribeFleets</a> smart constructor.
data DescribeFleets
DescribeFleets' :: Maybe [Text] -> Maybe Text -> DescribeFleets

-- | The names of the fleets to describe.
[$sel:names:DescribeFleets'] :: DescribeFleets -> Maybe [Text]

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeFleets'] :: DescribeFleets -> Maybe Text

-- | Create a value of <a>DescribeFleets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeFleets'</a>, <a>describeFleets_names</a> - The
--   names of the fleets to describe.
--   
--   <a>$sel:nextToken:DescribeFleets'</a>, <a>describeFleets_nextToken</a>
--   - The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
newDescribeFleets :: DescribeFleets

-- | The names of the fleets to describe.
describeFleets_names :: Lens' DescribeFleets (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeFleets_nextToken :: Lens' DescribeFleets (Maybe Text)

-- | <i>See:</i> <a>newDescribeFleetsResponse</a> smart constructor.
data DescribeFleetsResponse
DescribeFleetsResponse' :: Maybe Text -> Maybe [Fleet] -> Int -> DescribeFleetsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeFleetsResponse'] :: DescribeFleetsResponse -> Maybe Text

-- | Information about the fleets.
[$sel:fleets:DescribeFleetsResponse'] :: DescribeFleetsResponse -> Maybe [Fleet]

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetsResponse'] :: DescribeFleetsResponse -> Int

-- | Create a value of <a>DescribeFleetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleets'</a>,
--   <a>describeFleetsResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:fleets:DescribeFleetsResponse'</a>,
--   <a>describeFleetsResponse_fleets</a> - Information about the fleets.
--   
--   <a>$sel:httpStatus:DescribeFleetsResponse'</a>,
--   <a>describeFleetsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFleetsResponse :: Int -> DescribeFleetsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeFleetsResponse_nextToken :: Lens' DescribeFleetsResponse (Maybe Text)

-- | Information about the fleets.
describeFleetsResponse_fleets :: Lens' DescribeFleetsResponse (Maybe [Fleet])

-- | The response's http status code.
describeFleetsResponse_httpStatus :: Lens' DescribeFleetsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance GHC.Show.Show Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance GHC.Read.Read Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeFleets.DescribeFleetsResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeFleets.DescribeFleetsResponse
instance GHC.Read.Read Network.AWS.AppStream.DescribeFleets.DescribeFleetsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeFleets.DescribeFleetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeFleets.DescribeFleetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeFleets.DescribeFleets
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeFleets.DescribeFleets


-- | Retrieves a list that describes one or more specified Directory Config
--   objects for AppStream 2.0, if the names for these objects are
--   provided. Otherwise, all Directory Config objects in the account are
--   described. These objects include the configuration information
--   required to join fleets and image builders to Microsoft Active
--   Directory domains.
--   
--   Although the response syntax in this topic includes the account
--   password, this password is not returned in the actual response.
--   
--   This operation returns paginated results.
module Network.AWS.AppStream.DescribeDirectoryConfigs

-- | <i>See:</i> <a>newDescribeDirectoryConfigs</a> smart constructor.
data DescribeDirectoryConfigs
DescribeDirectoryConfigs' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeDirectoryConfigs

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
[$sel:nextToken:DescribeDirectoryConfigs'] :: DescribeDirectoryConfigs -> Maybe Text

-- | The maximum size of each page of results.
[$sel:maxResults:DescribeDirectoryConfigs'] :: DescribeDirectoryConfigs -> Maybe Int

-- | The directory names.
[$sel:directoryNames:DescribeDirectoryConfigs'] :: DescribeDirectoryConfigs -> Maybe [Text]

-- | Create a value of <a>DescribeDirectoryConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigs_nextToken</a> - The pagination token to
--   use to retrieve the next page of results for this operation. If this
--   value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigs_maxResults</a> - The maximum size of each
--   page of results.
--   
--   <a>$sel:directoryNames:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigs_directoryNames</a> - The directory names.
newDescribeDirectoryConfigs :: DescribeDirectoryConfigs

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeDirectoryConfigs_nextToken :: Lens' DescribeDirectoryConfigs (Maybe Text)

-- | The maximum size of each page of results.
describeDirectoryConfigs_maxResults :: Lens' DescribeDirectoryConfigs (Maybe Int)

-- | The directory names.
describeDirectoryConfigs_directoryNames :: Lens' DescribeDirectoryConfigs (Maybe [Text])

-- | <i>See:</i> <a>newDescribeDirectoryConfigsResponse</a> smart
--   constructor.
data DescribeDirectoryConfigsResponse
DescribeDirectoryConfigsResponse' :: Maybe Text -> Maybe [DirectoryConfig] -> Int -> DescribeDirectoryConfigsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
[$sel:nextToken:DescribeDirectoryConfigsResponse'] :: DescribeDirectoryConfigsResponse -> Maybe Text

-- | Information about the directory configurations. Note that although the
--   response syntax in this topic includes the account password, this
--   password is not returned in the actual response.
[$sel:directoryConfigs:DescribeDirectoryConfigsResponse'] :: DescribeDirectoryConfigsResponse -> Maybe [DirectoryConfig]

-- | The response's http status code.
[$sel:httpStatus:DescribeDirectoryConfigsResponse'] :: DescribeDirectoryConfigsResponse -> Int

-- | Create a value of <a>DescribeDirectoryConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigsResponse_nextToken</a> - The pagination
--   token to use to retrieve the next page of results for this operation.
--   If there are no more pages, this value is null.
--   
--   <a>$sel:directoryConfigs:DescribeDirectoryConfigsResponse'</a>,
--   <a>describeDirectoryConfigsResponse_directoryConfigs</a> - Information
--   about the directory configurations. Note that although the response
--   syntax in this topic includes the account password, this password is
--   not returned in the actual response.
--   
--   <a>$sel:httpStatus:DescribeDirectoryConfigsResponse'</a>,
--   <a>describeDirectoryConfigsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDirectoryConfigsResponse :: Int -> DescribeDirectoryConfigsResponse

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeDirectoryConfigsResponse_nextToken :: Lens' DescribeDirectoryConfigsResponse (Maybe Text)

-- | Information about the directory configurations. Note that although the
--   response syntax in this topic includes the account password, this
--   password is not returned in the actual response.
describeDirectoryConfigsResponse_directoryConfigs :: Lens' DescribeDirectoryConfigsResponse (Maybe [DirectoryConfig])

-- | The response's http status code.
describeDirectoryConfigsResponse_httpStatus :: Lens' DescribeDirectoryConfigsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance GHC.Show.Show Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance GHC.Read.Read Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance GHC.Generics.Generic Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigsResponse
instance GHC.Show.Show Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance Control.DeepSeq.NFData Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DescribeDirectoryConfigs.DescribeDirectoryConfigs


-- | Deletes a user from the user pool.
module Network.AWS.AppStream.DeleteUser

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Sensitive Text -> AuthenticationType -> DeleteUser

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
[$sel:userName:DeleteUser'] :: DeleteUser -> Sensitive Text

-- | The authentication type for the user. You must specify USERPOOL.
[$sel:authenticationType:DeleteUser'] :: DeleteUser -> AuthenticationType

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:DeleteUser'</a>, <a>deleteUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:DeleteUser'</a>,
--   <a>deleteUser_authenticationType</a> - The authentication type for the
--   user. You must specify USERPOOL.
newDeleteUser :: Text -> AuthenticationType -> DeleteUser

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
deleteUser_userName :: Lens' DeleteUser Text

-- | The authentication type for the user. You must specify USERPOOL.
deleteUser_authenticationType :: Lens' DeleteUser AuthenticationType

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: Int -> DeleteUserResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteUserResponse'] :: DeleteUserResponse -> Int

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserResponse'</a>,
--   <a>deleteUserResponse_httpStatus</a> - The response's http status
--   code.
newDeleteUserResponse :: Int -> DeleteUserResponse

-- | The response's http status code.
deleteUserResponse_httpStatus :: Lens' DeleteUserResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteUser.DeleteUser
instance GHC.Show.Show Network.AWS.AppStream.DeleteUser.DeleteUser
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteUser.DeleteUser
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteUser.DeleteUserResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteUser.DeleteUserResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteUser.DeleteUserResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteUser.DeleteUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteUser.DeleteUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteUser.DeleteUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteUser.DeleteUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteUser.DeleteUser
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteUser.DeleteUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteUser.DeleteUser


-- | Disables usage report generation.
module Network.AWS.AppStream.DeleteUsageReportSubscription

-- | <i>See:</i> <a>newDeleteUsageReportSubscription</a> smart constructor.
data DeleteUsageReportSubscription
DeleteUsageReportSubscription' :: DeleteUsageReportSubscription

-- | Create a value of <a>DeleteUsageReportSubscription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUsageReportSubscription :: DeleteUsageReportSubscription

-- | <i>See:</i> <a>newDeleteUsageReportSubscriptionResponse</a> smart
--   constructor.
data DeleteUsageReportSubscriptionResponse
DeleteUsageReportSubscriptionResponse' :: Int -> DeleteUsageReportSubscriptionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteUsageReportSubscriptionResponse'] :: DeleteUsageReportSubscriptionResponse -> Int

-- | Create a value of <a>DeleteUsageReportSubscriptionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUsageReportSubscriptionResponse'</a>,
--   <a>deleteUsageReportSubscriptionResponse_httpStatus</a> - The
--   response's http status code.
newDeleteUsageReportSubscriptionResponse :: Int -> DeleteUsageReportSubscriptionResponse

-- | The response's http status code.
deleteUsageReportSubscriptionResponse_httpStatus :: Lens' DeleteUsageReportSubscriptionResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance GHC.Show.Show Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance GHC.Read.Read Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscriptionResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscriptionResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscriptionResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscriptionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscriptionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteUsageReportSubscription.DeleteUsageReportSubscription


-- | Deletes the specified stack. After the stack is deleted, the
--   application streaming environment provided by the stack is no longer
--   available to users. Also, any reservations made for application
--   streaming sessions for the stack are released.
module Network.AWS.AppStream.DeleteStack

-- | <i>See:</i> <a>newDeleteStack</a> smart constructor.
data DeleteStack
DeleteStack' :: Text -> DeleteStack

-- | The name of the stack.
[$sel:name:DeleteStack'] :: DeleteStack -> Text

-- | Create a value of <a>DeleteStack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteStack'</a>, <a>deleteStack_name</a> - The name of
--   the stack.
newDeleteStack :: Text -> DeleteStack

-- | The name of the stack.
deleteStack_name :: Lens' DeleteStack Text

-- | <i>See:</i> <a>newDeleteStackResponse</a> smart constructor.
data DeleteStackResponse
DeleteStackResponse' :: Int -> DeleteStackResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteStackResponse'] :: DeleteStackResponse -> Int

-- | Create a value of <a>DeleteStackResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteStackResponse'</a>,
--   <a>deleteStackResponse_httpStatus</a> - The response's http status
--   code.
newDeleteStackResponse :: Int -> DeleteStackResponse

-- | The response's http status code.
deleteStackResponse_httpStatus :: Lens' DeleteStackResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteStack.DeleteStack
instance GHC.Show.Show Network.AWS.AppStream.DeleteStack.DeleteStack
instance GHC.Read.Read Network.AWS.AppStream.DeleteStack.DeleteStack
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteStack.DeleteStack
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteStack.DeleteStackResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteStack.DeleteStackResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteStack.DeleteStackResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteStack.DeleteStackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteStack.DeleteStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteStack.DeleteStackResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteStack.DeleteStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteStack.DeleteStack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteStack.DeleteStack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteStack.DeleteStack
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteStack.DeleteStack
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteStack.DeleteStack


-- | Deletes permissions for the specified private image. After you delete
--   permissions for an image, AWS accounts to which you previously granted
--   these permissions can no longer use the image.
module Network.AWS.AppStream.DeleteImagePermissions

-- | <i>See:</i> <a>newDeleteImagePermissions</a> smart constructor.
data DeleteImagePermissions
DeleteImagePermissions' :: Text -> Text -> DeleteImagePermissions

-- | The name of the private image.
[$sel:name:DeleteImagePermissions'] :: DeleteImagePermissions -> Text

-- | The 12-digit identifier of the AWS account for which to delete image
--   permissions.
[$sel:sharedAccountId:DeleteImagePermissions'] :: DeleteImagePermissions -> Text

-- | Create a value of <a>DeleteImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteImagePermissions'</a>,
--   <a>deleteImagePermissions_name</a> - The name of the private image.
--   
--   <a>$sel:sharedAccountId:DeleteImagePermissions'</a>,
--   <a>deleteImagePermissions_sharedAccountId</a> - The 12-digit
--   identifier of the AWS account for which to delete image permissions.
newDeleteImagePermissions :: Text -> Text -> DeleteImagePermissions

-- | The name of the private image.
deleteImagePermissions_name :: Lens' DeleteImagePermissions Text

-- | The 12-digit identifier of the AWS account for which to delete image
--   permissions.
deleteImagePermissions_sharedAccountId :: Lens' DeleteImagePermissions Text

-- | <i>See:</i> <a>newDeleteImagePermissionsResponse</a> smart
--   constructor.
data DeleteImagePermissionsResponse
DeleteImagePermissionsResponse' :: Int -> DeleteImagePermissionsResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteImagePermissionsResponse'] :: DeleteImagePermissionsResponse -> Int

-- | Create a value of <a>DeleteImagePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteImagePermissionsResponse'</a>,
--   <a>deleteImagePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImagePermissionsResponse :: Int -> DeleteImagePermissionsResponse

-- | The response's http status code.
deleteImagePermissionsResponse_httpStatus :: Lens' DeleteImagePermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance GHC.Show.Show Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance GHC.Read.Read Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissionsResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissionsResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissionsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteImagePermissions.DeleteImagePermissions


-- | Deletes the specified image builder and releases the capacity.
module Network.AWS.AppStream.DeleteImageBuilder

-- | <i>See:</i> <a>newDeleteImageBuilder</a> smart constructor.
data DeleteImageBuilder
DeleteImageBuilder' :: Text -> DeleteImageBuilder

-- | The name of the image builder.
[$sel:name:DeleteImageBuilder'] :: DeleteImageBuilder -> Text

-- | Create a value of <a>DeleteImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteImageBuilder'</a>, <a>deleteImageBuilder_name</a> -
--   The name of the image builder.
newDeleteImageBuilder :: Text -> DeleteImageBuilder

-- | The name of the image builder.
deleteImageBuilder_name :: Lens' DeleteImageBuilder Text

-- | <i>See:</i> <a>newDeleteImageBuilderResponse</a> smart constructor.
data DeleteImageBuilderResponse
DeleteImageBuilderResponse' :: Maybe ImageBuilder -> Int -> DeleteImageBuilderResponse

-- | Information about the image builder.
[$sel:imageBuilder:DeleteImageBuilderResponse'] :: DeleteImageBuilderResponse -> Maybe ImageBuilder

-- | The response's http status code.
[$sel:httpStatus:DeleteImageBuilderResponse'] :: DeleteImageBuilderResponse -> Int

-- | Create a value of <a>DeleteImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:DeleteImageBuilderResponse'</a>,
--   <a>deleteImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:DeleteImageBuilderResponse'</a>,
--   <a>deleteImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImageBuilderResponse :: Int -> DeleteImageBuilderResponse

-- | Information about the image builder.
deleteImageBuilderResponse_imageBuilder :: Lens' DeleteImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
deleteImageBuilderResponse_httpStatus :: Lens' DeleteImageBuilderResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance GHC.Show.Show Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance GHC.Read.Read Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilderResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilderResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilderResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilderResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteImageBuilder.DeleteImageBuilder


-- | Deletes the specified image. You cannot delete an image when it is in
--   use. After you delete an image, you cannot provision new capacity
--   using the image.
module Network.AWS.AppStream.DeleteImage

-- | <i>See:</i> <a>newDeleteImage</a> smart constructor.
data DeleteImage
DeleteImage' :: Text -> DeleteImage

-- | The name of the image.
[$sel:name:DeleteImage'] :: DeleteImage -> Text

-- | Create a value of <a>DeleteImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteImage'</a>, <a>deleteImage_name</a> - The name of
--   the image.
newDeleteImage :: Text -> DeleteImage

-- | The name of the image.
deleteImage_name :: Lens' DeleteImage Text

-- | <i>See:</i> <a>newDeleteImageResponse</a> smart constructor.
data DeleteImageResponse
DeleteImageResponse' :: Maybe Image -> Int -> DeleteImageResponse

-- | Information about the image.
[$sel:image:DeleteImageResponse'] :: DeleteImageResponse -> Maybe Image

-- | The response's http status code.
[$sel:httpStatus:DeleteImageResponse'] :: DeleteImageResponse -> Int

-- | Create a value of <a>DeleteImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_image</a> - Information about the image.
--   
--   <a>$sel:httpStatus:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_httpStatus</a> - The response's http status
--   code.
newDeleteImageResponse :: Int -> DeleteImageResponse

-- | Information about the image.
deleteImageResponse_image :: Lens' DeleteImageResponse (Maybe Image)

-- | The response's http status code.
deleteImageResponse_httpStatus :: Lens' DeleteImageResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteImage.DeleteImage
instance GHC.Show.Show Network.AWS.AppStream.DeleteImage.DeleteImage
instance GHC.Read.Read Network.AWS.AppStream.DeleteImage.DeleteImage
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteImage.DeleteImage
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteImage.DeleteImageResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteImage.DeleteImageResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteImage.DeleteImageResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteImage.DeleteImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteImage.DeleteImage
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteImage.DeleteImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteImage.DeleteImage
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteImage.DeleteImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteImage.DeleteImage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteImage.DeleteImage
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteImage.DeleteImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteImage.DeleteImage


-- | Deletes the specified fleet.
module Network.AWS.AppStream.DeleteFleet

-- | <i>See:</i> <a>newDeleteFleet</a> smart constructor.
data DeleteFleet
DeleteFleet' :: Text -> DeleteFleet

-- | The name of the fleet.
[$sel:name:DeleteFleet'] :: DeleteFleet -> Text

-- | Create a value of <a>DeleteFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteFleet'</a>, <a>deleteFleet_name</a> - The name of
--   the fleet.
newDeleteFleet :: Text -> DeleteFleet

-- | The name of the fleet.
deleteFleet_name :: Lens' DeleteFleet Text

-- | <i>See:</i> <a>newDeleteFleetResponse</a> smart constructor.
data DeleteFleetResponse
DeleteFleetResponse' :: Int -> DeleteFleetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteFleetResponse'] :: DeleteFleetResponse -> Int

-- | Create a value of <a>DeleteFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFleetResponse'</a>,
--   <a>deleteFleetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFleetResponse :: Int -> DeleteFleetResponse

-- | The response's http status code.
deleteFleetResponse_httpStatus :: Lens' DeleteFleetResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance GHC.Show.Show Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance GHC.Read.Read Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteFleet.DeleteFleetResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteFleet.DeleteFleetResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteFleet.DeleteFleetResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteFleet.DeleteFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteFleet.DeleteFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteFleet.DeleteFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteFleet.DeleteFleet


-- | Deletes the specified Directory Config object from AppStream 2.0. This
--   object includes the information required to join streaming instances
--   to an Active Directory domain.
module Network.AWS.AppStream.DeleteDirectoryConfig

-- | <i>See:</i> <a>newDeleteDirectoryConfig</a> smart constructor.
data DeleteDirectoryConfig
DeleteDirectoryConfig' :: Text -> DeleteDirectoryConfig

-- | The name of the directory configuration.
[$sel:directoryName:DeleteDirectoryConfig'] :: DeleteDirectoryConfig -> Text

-- | Create a value of <a>DeleteDirectoryConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryName:DeleteDirectoryConfig'</a>,
--   <a>deleteDirectoryConfig_directoryName</a> - The name of the directory
--   configuration.
newDeleteDirectoryConfig :: Text -> DeleteDirectoryConfig

-- | The name of the directory configuration.
deleteDirectoryConfig_directoryName :: Lens' DeleteDirectoryConfig Text

-- | <i>See:</i> <a>newDeleteDirectoryConfigResponse</a> smart constructor.
data DeleteDirectoryConfigResponse
DeleteDirectoryConfigResponse' :: Int -> DeleteDirectoryConfigResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDirectoryConfigResponse'] :: DeleteDirectoryConfigResponse -> Int

-- | Create a value of <a>DeleteDirectoryConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDirectoryConfigResponse'</a>,
--   <a>deleteDirectoryConfigResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDirectoryConfigResponse :: Int -> DeleteDirectoryConfigResponse

-- | The response's http status code.
deleteDirectoryConfigResponse_httpStatus :: Lens' DeleteDirectoryConfigResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance GHC.Show.Show Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance GHC.Read.Read Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance GHC.Generics.Generic Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfigResponse
instance GHC.Show.Show Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfigResponse
instance GHC.Read.Read Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfigResponse
instance GHC.Classes.Eq Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.DeleteDirectoryConfig.DeleteDirectoryConfig


-- | Creates a new user in the user pool.
module Network.AWS.AppStream.CreateUser

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe MessageAction -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Sensitive Text -> AuthenticationType -> CreateUser

-- | The action to take for the welcome email that is sent to a user after
--   the user is created in the user pool. If you specify SUPPRESS, no
--   email is sent. If you specify RESEND, do not specify the first name or
--   last name of the user. If the value is null, the email is sent.
--   
--   The temporary password in the welcome email is valid for only 7 days.
--   If users don’t set their passwords within 7 days, you must send them a
--   new welcome email.
[$sel:messageAction:CreateUser'] :: CreateUser -> Maybe MessageAction

-- | The last name, or surname, of the user.
[$sel:lastName:CreateUser'] :: CreateUser -> Maybe (Sensitive Text)

-- | The first name, or given name, of the user.
[$sel:firstName:CreateUser'] :: CreateUser -> Maybe (Sensitive Text)

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
[$sel:userName:CreateUser'] :: CreateUser -> Sensitive Text

-- | The authentication type for the user. You must specify USERPOOL.
[$sel:authenticationType:CreateUser'] :: CreateUser -> AuthenticationType

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageAction:CreateUser'</a>, <a>createUser_messageAction</a>
--   - The action to take for the welcome email that is sent to a user
--   after the user is created in the user pool. If you specify SUPPRESS,
--   no email is sent. If you specify RESEND, do not specify the first name
--   or last name of the user. If the value is null, the email is sent.
--   
--   The temporary password in the welcome email is valid for only 7 days.
--   If users don’t set their passwords within 7 days, you must send them a
--   new welcome email.
--   
--   <a>$sel:lastName:CreateUser'</a>, <a>createUser_lastName</a> - The
--   last name, or surname, of the user.
--   
--   <a>$sel:firstName:CreateUser'</a>, <a>createUser_firstName</a> - The
--   first name, or given name, of the user.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
--   
--   <a>$sel:authenticationType:CreateUser'</a>,
--   <a>createUser_authenticationType</a> - The authentication type for the
--   user. You must specify USERPOOL.
newCreateUser :: Text -> AuthenticationType -> CreateUser

-- | The action to take for the welcome email that is sent to a user after
--   the user is created in the user pool. If you specify SUPPRESS, no
--   email is sent. If you specify RESEND, do not specify the first name or
--   last name of the user. If the value is null, the email is sent.
--   
--   The temporary password in the welcome email is valid for only 7 days.
--   If users don’t set their passwords within 7 days, you must send them a
--   new welcome email.
createUser_messageAction :: Lens' CreateUser (Maybe MessageAction)

-- | The last name, or surname, of the user.
createUser_lastName :: Lens' CreateUser (Maybe Text)

-- | The first name, or given name, of the user.
createUser_firstName :: Lens' CreateUser (Maybe Text)

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
createUser_userName :: Lens' CreateUser Text

-- | The authentication type for the user. You must specify USERPOOL.
createUser_authenticationType :: Lens' CreateUser AuthenticationType

-- | <i>See:</i> <a>newCreateUserResponse</a> smart constructor.
data CreateUserResponse
CreateUserResponse' :: Int -> CreateUserResponse

-- | The response's http status code.
[$sel:httpStatus:CreateUserResponse'] :: CreateUserResponse -> Int

-- | Create a value of <a>CreateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateUserResponse'</a>,
--   <a>createUserResponse_httpStatus</a> - The response's http status
--   code.
newCreateUserResponse :: Int -> CreateUserResponse

-- | The response's http status code.
createUserResponse_httpStatus :: Lens' CreateUserResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateUser.CreateUser
instance GHC.Show.Show Network.AWS.AppStream.CreateUser.CreateUser
instance GHC.Classes.Eq Network.AWS.AppStream.CreateUser.CreateUser
instance GHC.Generics.Generic Network.AWS.AppStream.CreateUser.CreateUserResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateUser.CreateUserResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateUser.CreateUserResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateUser.CreateUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateUser.CreateUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateUser.CreateUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateUser.CreateUser
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateUser.CreateUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateUser.CreateUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateUser.CreateUser
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateUser.CreateUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateUser.CreateUser


-- | Creates a usage report subscription. Usage reports are generated
--   daily.
module Network.AWS.AppStream.CreateUsageReportSubscription

-- | <i>See:</i> <a>newCreateUsageReportSubscription</a> smart constructor.
data CreateUsageReportSubscription
CreateUsageReportSubscription' :: CreateUsageReportSubscription

-- | Create a value of <a>CreateUsageReportSubscription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateUsageReportSubscription :: CreateUsageReportSubscription

-- | <i>See:</i> <a>newCreateUsageReportSubscriptionResponse</a> smart
--   constructor.
data CreateUsageReportSubscriptionResponse
CreateUsageReportSubscriptionResponse' :: Maybe Text -> Maybe UsageReportSchedule -> Int -> CreateUsageReportSubscriptionResponse

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
[$sel:s3BucketName:CreateUsageReportSubscriptionResponse'] :: CreateUsageReportSubscriptionResponse -> Maybe Text

-- | The schedule for generating usage reports.
[$sel:schedule:CreateUsageReportSubscriptionResponse'] :: CreateUsageReportSubscriptionResponse -> Maybe UsageReportSchedule

-- | The response's http status code.
[$sel:httpStatus:CreateUsageReportSubscriptionResponse'] :: CreateUsageReportSubscriptionResponse -> Int

-- | Create a value of <a>CreateUsageReportSubscriptionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3BucketName:CreateUsageReportSubscriptionResponse'</a>,
--   <a>createUsageReportSubscriptionResponse_s3BucketName</a> - The Amazon
--   S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
--   
--   <a>$sel:schedule:CreateUsageReportSubscriptionResponse'</a>,
--   <a>createUsageReportSubscriptionResponse_schedule</a> - The schedule
--   for generating usage reports.
--   
--   <a>$sel:httpStatus:CreateUsageReportSubscriptionResponse'</a>,
--   <a>createUsageReportSubscriptionResponse_httpStatus</a> - The
--   response's http status code.
newCreateUsageReportSubscriptionResponse :: Int -> CreateUsageReportSubscriptionResponse

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
createUsageReportSubscriptionResponse_s3BucketName :: Lens' CreateUsageReportSubscriptionResponse (Maybe Text)

-- | The schedule for generating usage reports.
createUsageReportSubscriptionResponse_schedule :: Lens' CreateUsageReportSubscriptionResponse (Maybe UsageReportSchedule)

-- | The response's http status code.
createUsageReportSubscriptionResponse_httpStatus :: Lens' CreateUsageReportSubscriptionResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance GHC.Show.Show Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance GHC.Read.Read Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance GHC.Classes.Eq Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance GHC.Generics.Generic Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscriptionResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscriptionResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscriptionResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscriptionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscriptionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateUsageReportSubscription.CreateUsageReportSubscription


-- | Creates a new image with the latest Windows operating system updates,
--   driver updates, and AppStream 2.0 agent software.
--   
--   For more information, see the "Update an Image by Using Managed
--   AppStream 2.0 Image Updates" section in <a>Administer Your AppStream
--   2.0 Images</a>, in the <i>Amazon AppStream 2.0 Administration
--   Guide</i>.
module Network.AWS.AppStream.CreateUpdatedImage

-- | <i>See:</i> <a>newCreateUpdatedImage</a> smart constructor.
data CreateUpdatedImage
CreateUpdatedImage' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateUpdatedImage

-- | The name to display for the new image.
[$sel:newImageDisplayName':CreateUpdatedImage'] :: CreateUpdatedImage -> Maybe Text

-- | Indicates whether to display the status of image update availability
--   before AppStream 2.0 initiates the process of creating a new updated
--   image. If this value is set to <tt>true</tt>, AppStream 2.0 displays
--   whether image updates are available. If this value is set to
--   <tt>false</tt>, AppStream 2.0 initiates the process of creating a new
--   updated image without displaying whether image updates are available.
[$sel:dryRun:CreateUpdatedImage'] :: CreateUpdatedImage -> Maybe Bool

-- | The description to display for the new image.
[$sel:newImageDescription':CreateUpdatedImage'] :: CreateUpdatedImage -> Maybe Text

-- | The tags to associate with the new image. A tag is a key-value pair,
--   and the value is optional. For example, Environment=Test. If you do
--   not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:newImageTags':CreateUpdatedImage'] :: CreateUpdatedImage -> Maybe (HashMap Text Text)

-- | The name of the image to update.
[$sel:existingImageName:CreateUpdatedImage'] :: CreateUpdatedImage -> Text

-- | The name of the new image. The name must be unique within the AWS
--   account and Region.
[$sel:newImageName':CreateUpdatedImage'] :: CreateUpdatedImage -> Text

-- | Create a value of <a>CreateUpdatedImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newImageDisplayName':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageDisplayName</a> - The name to display
--   for the new image.
--   
--   <a>$sel:dryRun:CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_dryRun</a> - Indicates whether to display the
--   status of image update availability before AppStream 2.0 initiates the
--   process of creating a new updated image. If this value is set to
--   <tt>true</tt>, AppStream 2.0 displays whether image updates are
--   available. If this value is set to <tt>false</tt>, AppStream 2.0
--   initiates the process of creating a new updated image without
--   displaying whether image updates are available.
--   
--   <a>$sel:newImageDescription':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageDescription</a> - The description to
--   display for the new image.
--   
--   <a>$sel:newImageTags':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageTags</a> - The tags to associate with
--   the new image. A tag is a key-value pair, and the value is optional.
--   For example, Environment=Test. If you do not specify a value,
--   Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:existingImageName:CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_existingImageName</a> - The name of the image to
--   update.
--   
--   <a>$sel:newImageName':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageName</a> - The name of the new image.
--   The name must be unique within the AWS account and Region.
newCreateUpdatedImage :: Text -> Text -> CreateUpdatedImage

-- | The name to display for the new image.
createUpdatedImage_newImageDisplayName :: Lens' CreateUpdatedImage (Maybe Text)

-- | Indicates whether to display the status of image update availability
--   before AppStream 2.0 initiates the process of creating a new updated
--   image. If this value is set to <tt>true</tt>, AppStream 2.0 displays
--   whether image updates are available. If this value is set to
--   <tt>false</tt>, AppStream 2.0 initiates the process of creating a new
--   updated image without displaying whether image updates are available.
createUpdatedImage_dryRun :: Lens' CreateUpdatedImage (Maybe Bool)

-- | The description to display for the new image.
createUpdatedImage_newImageDescription :: Lens' CreateUpdatedImage (Maybe Text)

-- | The tags to associate with the new image. A tag is a key-value pair,
--   and the value is optional. For example, Environment=Test. If you do
--   not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
createUpdatedImage_newImageTags :: Lens' CreateUpdatedImage (Maybe (HashMap Text Text))

-- | The name of the image to update.
createUpdatedImage_existingImageName :: Lens' CreateUpdatedImage Text

-- | The name of the new image. The name must be unique within the AWS
--   account and Region.
createUpdatedImage_newImageName :: Lens' CreateUpdatedImage Text

-- | <i>See:</i> <a>newCreateUpdatedImageResponse</a> smart constructor.
data CreateUpdatedImageResponse
CreateUpdatedImageResponse' :: Maybe Image -> Maybe Bool -> Int -> CreateUpdatedImageResponse
[$sel:image:CreateUpdatedImageResponse'] :: CreateUpdatedImageResponse -> Maybe Image

-- | Indicates whether a new image can be created.
[$sel:canUpdateImage:CreateUpdatedImageResponse'] :: CreateUpdatedImageResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:CreateUpdatedImageResponse'] :: CreateUpdatedImageResponse -> Int

-- | Create a value of <a>CreateUpdatedImageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:CreateUpdatedImageResponse'</a>,
--   <a>createUpdatedImageResponse_image</a> - Undocumented member.
--   
--   <a>$sel:canUpdateImage:CreateUpdatedImageResponse'</a>,
--   <a>createUpdatedImageResponse_canUpdateImage</a> - Indicates whether a
--   new image can be created.
--   
--   <a>$sel:httpStatus:CreateUpdatedImageResponse'</a>,
--   <a>createUpdatedImageResponse_httpStatus</a> - The response's http
--   status code.
newCreateUpdatedImageResponse :: Int -> CreateUpdatedImageResponse

-- | Undocumented member.
createUpdatedImageResponse_image :: Lens' CreateUpdatedImageResponse (Maybe Image)

-- | Indicates whether a new image can be created.
createUpdatedImageResponse_canUpdateImage :: Lens' CreateUpdatedImageResponse (Maybe Bool)

-- | The response's http status code.
createUpdatedImageResponse_httpStatus :: Lens' CreateUpdatedImageResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance GHC.Show.Show Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance GHC.Read.Read Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance GHC.Classes.Eq Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance GHC.Generics.Generic Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImageResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImageResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImageResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateUpdatedImage.CreateUpdatedImage


-- | Creates a temporary URL to start an AppStream 2.0 streaming session
--   for the specified user. A streaming URL enables application streaming
--   to be tested without user setup.
module Network.AWS.AppStream.CreateStreamingURL

-- | <i>See:</i> <a>newCreateStreamingURL</a> smart constructor.
data CreateStreamingURL
CreateStreamingURL' :: Maybe Text -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> CreateStreamingURL

-- | The name of the application to launch after the session starts. This
--   is the name that you specified as <b>Name</b> in the Image Assistant.
--   If your fleet is enabled for the <b>Desktop</b> stream view, you can
--   also choose to launch directly to the operating system desktop. To do
--   so, specify <b>Desktop</b>.
[$sel:applicationId:CreateStreamingURL'] :: CreateStreamingURL -> Maybe Text

-- | The session context. For more information, see <a>Session Context</a>
--   in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:sessionContext:CreateStreamingURL'] :: CreateStreamingURL -> Maybe Text

-- | The time that the streaming URL will be valid, in seconds. Specify a
--   value between 1 and 604800 seconds. The default is 60 seconds.
[$sel:validity:CreateStreamingURL'] :: CreateStreamingURL -> Maybe Integer

-- | The name of the stack.
[$sel:stackName:CreateStreamingURL'] :: CreateStreamingURL -> Text

-- | The name of the fleet.
[$sel:fleetName:CreateStreamingURL'] :: CreateStreamingURL -> Text

-- | The identifier of the user.
[$sel:userId:CreateStreamingURL'] :: CreateStreamingURL -> Text

-- | Create a value of <a>CreateStreamingURL</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:CreateStreamingURL'</a>,
--   <a>createStreamingURL_applicationId</a> - The name of the application
--   to launch after the session starts. This is the name that you
--   specified as <b>Name</b> in the Image Assistant. If your fleet is
--   enabled for the <b>Desktop</b> stream view, you can also choose to
--   launch directly to the operating system desktop. To do so, specify
--   <b>Desktop</b>.
--   
--   <a>$sel:sessionContext:CreateStreamingURL'</a>,
--   <a>createStreamingURL_sessionContext</a> - The session context. For
--   more information, see <a>Session Context</a> in the <i>Amazon
--   AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:validity:CreateStreamingURL'</a>,
--   <a>createStreamingURL_validity</a> - The time that the streaming URL
--   will be valid, in seconds. Specify a value between 1 and 604800
--   seconds. The default is 60 seconds.
--   
--   <a>$sel:stackName:CreateStreamingURL'</a>,
--   <a>createStreamingURL_stackName</a> - The name of the stack.
--   
--   <a>$sel:fleetName:CreateStreamingURL'</a>,
--   <a>createStreamingURL_fleetName</a> - The name of the fleet.
--   
--   <a>$sel:userId:CreateStreamingURL'</a>,
--   <a>createStreamingURL_userId</a> - The identifier of the user.
newCreateStreamingURL :: Text -> Text -> Text -> CreateStreamingURL

-- | The name of the application to launch after the session starts. This
--   is the name that you specified as <b>Name</b> in the Image Assistant.
--   If your fleet is enabled for the <b>Desktop</b> stream view, you can
--   also choose to launch directly to the operating system desktop. To do
--   so, specify <b>Desktop</b>.
createStreamingURL_applicationId :: Lens' CreateStreamingURL (Maybe Text)

-- | The session context. For more information, see <a>Session Context</a>
--   in the <i>Amazon AppStream 2.0 Administration Guide</i>.
createStreamingURL_sessionContext :: Lens' CreateStreamingURL (Maybe Text)

-- | The time that the streaming URL will be valid, in seconds. Specify a
--   value between 1 and 604800 seconds. The default is 60 seconds.
createStreamingURL_validity :: Lens' CreateStreamingURL (Maybe Integer)

-- | The name of the stack.
createStreamingURL_stackName :: Lens' CreateStreamingURL Text

-- | The name of the fleet.
createStreamingURL_fleetName :: Lens' CreateStreamingURL Text

-- | The identifier of the user.
createStreamingURL_userId :: Lens' CreateStreamingURL Text

-- | <i>See:</i> <a>newCreateStreamingURLResponse</a> smart constructor.
data CreateStreamingURLResponse
CreateStreamingURLResponse' :: Maybe Text -> Maybe POSIX -> Int -> CreateStreamingURLResponse

-- | The URL to start the AppStream 2.0 streaming session.
[$sel:streamingURL:CreateStreamingURLResponse'] :: CreateStreamingURLResponse -> Maybe Text

-- | The elapsed time, in seconds after the Unix epoch, when this URL
--   expires.
[$sel:expires:CreateStreamingURLResponse'] :: CreateStreamingURLResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:CreateStreamingURLResponse'] :: CreateStreamingURLResponse -> Int

-- | Create a value of <a>CreateStreamingURLResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingURL:CreateStreamingURLResponse'</a>,
--   <a>createStreamingURLResponse_streamingURL</a> - The URL to start the
--   AppStream 2.0 streaming session.
--   
--   <a>$sel:expires:CreateStreamingURLResponse'</a>,
--   <a>createStreamingURLResponse_expires</a> - The elapsed time, in
--   seconds after the Unix epoch, when this URL expires.
--   
--   <a>$sel:httpStatus:CreateStreamingURLResponse'</a>,
--   <a>createStreamingURLResponse_httpStatus</a> - The response's http
--   status code.
newCreateStreamingURLResponse :: Int -> CreateStreamingURLResponse

-- | The URL to start the AppStream 2.0 streaming session.
createStreamingURLResponse_streamingURL :: Lens' CreateStreamingURLResponse (Maybe Text)

-- | The elapsed time, in seconds after the Unix epoch, when this URL
--   expires.
createStreamingURLResponse_expires :: Lens' CreateStreamingURLResponse (Maybe UTCTime)

-- | The response's http status code.
createStreamingURLResponse_httpStatus :: Lens' CreateStreamingURLResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance GHC.Show.Show Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance GHC.Read.Read Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance GHC.Classes.Eq Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance GHC.Generics.Generic Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURLResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURLResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURLResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURLResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURLResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateStreamingURL.CreateStreamingURL


-- | Creates a stack to start streaming applications to users. A stack
--   consists of an associated fleet, user access policies, and storage
--   configurations.
module Network.AWS.AppStream.CreateStack

-- | <i>See:</i> <a>newCreateStack</a> smart constructor.
data CreateStack
CreateStack' :: Maybe (NonEmpty UserSetting) -> Maybe (NonEmpty AccessEndpoint) -> Maybe Text -> Maybe ApplicationSettings -> Maybe (HashMap Text Text) -> Maybe [StorageConnector] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Text -> CreateStack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
[$sel:userSettings:CreateStack'] :: CreateStack -> Maybe (NonEmpty UserSetting)

-- | The list of interface VPC endpoint (interface endpoint) objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
[$sel:accessEndpoints:CreateStack'] :: CreateStack -> Maybe (NonEmpty AccessEndpoint)

-- | The URL that users are redirected to after their streaming session
--   ends.
[$sel:redirectURL:CreateStack'] :: CreateStack -> Maybe Text

-- | The persistent application settings for users of a stack. When these
--   settings are enabled, changes that users make to applications and
--   Windows settings are automatically saved after each session and
--   applied to the next session.
[$sel:applicationSettings:CreateStack'] :: CreateStack -> Maybe ApplicationSettings

-- | The tags to associate with the stack. A tag is a key-value pair, and
--   the value is optional. For example, Environment=Test. If you do not
--   specify a value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:tags:CreateStack'] :: CreateStack -> Maybe (HashMap Text Text)

-- | The storage connectors to enable.
[$sel:storageConnectors:CreateStack'] :: CreateStack -> Maybe [StorageConnector]

-- | The description to display.
[$sel:description:CreateStack'] :: CreateStack -> Maybe Text

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
[$sel:embedHostDomains:CreateStack'] :: CreateStack -> Maybe (NonEmpty Text)

-- | The stack name to display.
[$sel:displayName:CreateStack'] :: CreateStack -> Maybe Text

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
[$sel:feedbackURL:CreateStack'] :: CreateStack -> Maybe Text

-- | The name of the stack.
[$sel:name:CreateStack'] :: CreateStack -> Text

-- | Create a value of <a>CreateStack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userSettings:CreateStack'</a>, <a>createStack_userSettings</a>
--   - The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
--   
--   <a>$sel:accessEndpoints:CreateStack'</a>,
--   <a>createStack_accessEndpoints</a> - The list of interface VPC
--   endpoint (interface endpoint) objects. Users of the stack can connect
--   to AppStream 2.0 only through the specified endpoints.
--   
--   <a>$sel:redirectURL:CreateStack'</a>, <a>createStack_redirectURL</a> -
--   The URL that users are redirected to after their streaming session
--   ends.
--   
--   <a>$sel:applicationSettings:CreateStack'</a>,
--   <a>createStack_applicationSettings</a> - The persistent application
--   settings for users of a stack. When these settings are enabled,
--   changes that users make to applications and Windows settings are
--   automatically saved after each session and applied to the next
--   session.
--   
--   <a>$sel:tags:CreateStack'</a>, <a>createStack_tags</a> - The tags to
--   associate with the stack. A tag is a key-value pair, and the value is
--   optional. For example, Environment=Test. If you do not specify a
--   value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:storageConnectors:CreateStack'</a>,
--   <a>createStack_storageConnectors</a> - The storage connectors to
--   enable.
--   
--   <a>$sel:description:CreateStack'</a>, <a>createStack_description</a> -
--   The description to display.
--   
--   <a>$sel:embedHostDomains:CreateStack'</a>,
--   <a>createStack_embedHostDomains</a> - The domains where AppStream 2.0
--   streaming sessions can be embedded in an iframe. You must approve the
--   domains that you want to host embedded AppStream 2.0 streaming
--   sessions.
--   
--   <a>$sel:displayName:CreateStack'</a>, <a>createStack_displayName</a> -
--   The stack name to display.
--   
--   <a>$sel:feedbackURL:CreateStack'</a>, <a>createStack_feedbackURL</a> -
--   The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
--   
--   <a>$sel:name:CreateStack'</a>, <a>createStack_name</a> - The name of
--   the stack.
newCreateStack :: Text -> CreateStack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
createStack_userSettings :: Lens' CreateStack (Maybe (NonEmpty UserSetting))

-- | The list of interface VPC endpoint (interface endpoint) objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
createStack_accessEndpoints :: Lens' CreateStack (Maybe (NonEmpty AccessEndpoint))

-- | The URL that users are redirected to after their streaming session
--   ends.
createStack_redirectURL :: Lens' CreateStack (Maybe Text)

-- | The persistent application settings for users of a stack. When these
--   settings are enabled, changes that users make to applications and
--   Windows settings are automatically saved after each session and
--   applied to the next session.
createStack_applicationSettings :: Lens' CreateStack (Maybe ApplicationSettings)

-- | The tags to associate with the stack. A tag is a key-value pair, and
--   the value is optional. For example, Environment=Test. If you do not
--   specify a value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
createStack_tags :: Lens' CreateStack (Maybe (HashMap Text Text))

-- | The storage connectors to enable.
createStack_storageConnectors :: Lens' CreateStack (Maybe [StorageConnector])

-- | The description to display.
createStack_description :: Lens' CreateStack (Maybe Text)

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
createStack_embedHostDomains :: Lens' CreateStack (Maybe (NonEmpty Text))

-- | The stack name to display.
createStack_displayName :: Lens' CreateStack (Maybe Text)

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
createStack_feedbackURL :: Lens' CreateStack (Maybe Text)

-- | The name of the stack.
createStack_name :: Lens' CreateStack Text

-- | <i>See:</i> <a>newCreateStackResponse</a> smart constructor.
data CreateStackResponse
CreateStackResponse' :: Maybe Stack -> Int -> CreateStackResponse

-- | Information about the stack.
[$sel:stack:CreateStackResponse'] :: CreateStackResponse -> Maybe Stack

-- | The response's http status code.
[$sel:httpStatus:CreateStackResponse'] :: CreateStackResponse -> Int

-- | Create a value of <a>CreateStackResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stack:CreateStackResponse'</a>,
--   <a>createStackResponse_stack</a> - Information about the stack.
--   
--   <a>$sel:httpStatus:CreateStackResponse'</a>,
--   <a>createStackResponse_httpStatus</a> - The response's http status
--   code.
newCreateStackResponse :: Int -> CreateStackResponse

-- | Information about the stack.
createStackResponse_stack :: Lens' CreateStackResponse (Maybe Stack)

-- | The response's http status code.
createStackResponse_httpStatus :: Lens' CreateStackResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateStack.CreateStack
instance GHC.Show.Show Network.AWS.AppStream.CreateStack.CreateStack
instance GHC.Read.Read Network.AWS.AppStream.CreateStack.CreateStack
instance GHC.Classes.Eq Network.AWS.AppStream.CreateStack.CreateStack
instance GHC.Generics.Generic Network.AWS.AppStream.CreateStack.CreateStackResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateStack.CreateStackResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateStack.CreateStackResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateStack.CreateStackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateStack.CreateStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateStack.CreateStackResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateStack.CreateStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateStack.CreateStack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateStack.CreateStack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateStack.CreateStack
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateStack.CreateStack
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateStack.CreateStack


-- | Creates a URL to start an image builder streaming session.
module Network.AWS.AppStream.CreateImageBuilderStreamingURL

-- | <i>See:</i> <a>newCreateImageBuilderStreamingURL</a> smart
--   constructor.
data CreateImageBuilderStreamingURL
CreateImageBuilderStreamingURL' :: Maybe Integer -> Text -> CreateImageBuilderStreamingURL

-- | The time that the streaming URL will be valid, in seconds. Specify a
--   value between 1 and 604800 seconds. The default is 3600 seconds.
[$sel:validity:CreateImageBuilderStreamingURL'] :: CreateImageBuilderStreamingURL -> Maybe Integer

-- | The name of the image builder.
[$sel:name:CreateImageBuilderStreamingURL'] :: CreateImageBuilderStreamingURL -> Text

-- | Create a value of <a>CreateImageBuilderStreamingURL</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validity:CreateImageBuilderStreamingURL'</a>,
--   <a>createImageBuilderStreamingURL_validity</a> - The time that the
--   streaming URL will be valid, in seconds. Specify a value between 1 and
--   604800 seconds. The default is 3600 seconds.
--   
--   <a>$sel:name:CreateImageBuilderStreamingURL'</a>,
--   <a>createImageBuilderStreamingURL_name</a> - The name of the image
--   builder.
newCreateImageBuilderStreamingURL :: Text -> CreateImageBuilderStreamingURL

-- | The time that the streaming URL will be valid, in seconds. Specify a
--   value between 1 and 604800 seconds. The default is 3600 seconds.
createImageBuilderStreamingURL_validity :: Lens' CreateImageBuilderStreamingURL (Maybe Integer)

-- | The name of the image builder.
createImageBuilderStreamingURL_name :: Lens' CreateImageBuilderStreamingURL Text

-- | <i>See:</i> <a>newCreateImageBuilderStreamingURLResponse</a> smart
--   constructor.
data CreateImageBuilderStreamingURLResponse
CreateImageBuilderStreamingURLResponse' :: Maybe Text -> Maybe POSIX -> Int -> CreateImageBuilderStreamingURLResponse

-- | The URL to start the AppStream 2.0 streaming session.
[$sel:streamingURL:CreateImageBuilderStreamingURLResponse'] :: CreateImageBuilderStreamingURLResponse -> Maybe Text

-- | The elapsed time, in seconds after the Unix epoch, when this URL
--   expires.
[$sel:expires:CreateImageBuilderStreamingURLResponse'] :: CreateImageBuilderStreamingURLResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:CreateImageBuilderStreamingURLResponse'] :: CreateImageBuilderStreamingURLResponse -> Int

-- | Create a value of <a>CreateImageBuilderStreamingURLResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingURL:CreateImageBuilderStreamingURLResponse'</a>,
--   <a>createImageBuilderStreamingURLResponse_streamingURL</a> - The URL
--   to start the AppStream 2.0 streaming session.
--   
--   <a>$sel:expires:CreateImageBuilderStreamingURLResponse'</a>,
--   <a>createImageBuilderStreamingURLResponse_expires</a> - The elapsed
--   time, in seconds after the Unix epoch, when this URL expires.
--   
--   <a>$sel:httpStatus:CreateImageBuilderStreamingURLResponse'</a>,
--   <a>createImageBuilderStreamingURLResponse_httpStatus</a> - The
--   response's http status code.
newCreateImageBuilderStreamingURLResponse :: Int -> CreateImageBuilderStreamingURLResponse

-- | The URL to start the AppStream 2.0 streaming session.
createImageBuilderStreamingURLResponse_streamingURL :: Lens' CreateImageBuilderStreamingURLResponse (Maybe Text)

-- | The elapsed time, in seconds after the Unix epoch, when this URL
--   expires.
createImageBuilderStreamingURLResponse_expires :: Lens' CreateImageBuilderStreamingURLResponse (Maybe UTCTime)

-- | The response's http status code.
createImageBuilderStreamingURLResponse_httpStatus :: Lens' CreateImageBuilderStreamingURLResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance GHC.Show.Show Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance GHC.Read.Read Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance GHC.Classes.Eq Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance GHC.Generics.Generic Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURLResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURLResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURLResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURLResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURLResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateImageBuilderStreamingURL.CreateImageBuilderStreamingURL


-- | Creates an image builder. An image builder is a virtual machine that
--   is used to create an image.
--   
--   The initial state of the builder is <tt>PENDING</tt>. When it is
--   ready, the state is <tt>RUNNING</tt>.
module Network.AWS.AppStream.CreateImageBuilder

-- | <i>See:</i> <a>newCreateImageBuilder</a> smart constructor.
data CreateImageBuilder
CreateImageBuilder' :: Maybe VpcConfig -> Maybe Text -> Maybe (NonEmpty AccessEndpoint) -> Maybe DomainJoinInfo -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> Text -> CreateImageBuilder

-- | The VPC configuration for the image builder. You can specify only one
--   subnet.
[$sel:vpcConfig:CreateImageBuilder'] :: CreateImageBuilder -> Maybe VpcConfig

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the image
--   builder. To assume a role, the image builder calls the AWS Security
--   Token Service (STS) <tt>AssumeRole</tt> API operation and passes the
--   ARN of the role to use. The operation creates a new session with
--   temporary credentials. AppStream 2.0 retrieves the temporary
--   credentials and creates the <b>appstream_machine_role</b> credential
--   profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:iamRoleArn:CreateImageBuilder'] :: CreateImageBuilder -> Maybe Text

-- | The list of interface VPC endpoint (interface endpoint) objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
[$sel:accessEndpoints:CreateImageBuilder'] :: CreateImageBuilder -> Maybe (NonEmpty AccessEndpoint)

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
[$sel:domainJoinInfo:CreateImageBuilder'] :: CreateImageBuilder -> Maybe DomainJoinInfo

-- | The name of the image used to create the image builder.
[$sel:imageName:CreateImageBuilder'] :: CreateImageBuilder -> Maybe Text

-- | The tags to associate with the image builder. A tag is a key-value
--   pair, and the value is optional. For example, Environment=Test. If you
--   do not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:tags:CreateImageBuilder'] :: CreateImageBuilder -> Maybe (HashMap Text Text)

-- | The version of the AppStream 2.0 agent to use for this image builder.
--   To use the latest version of the AppStream 2.0 agent, specify
--   [LATEST].
[$sel:appstreamAgentVersion:CreateImageBuilder'] :: CreateImageBuilder -> Maybe Text

-- | The description to display.
[$sel:description:CreateImageBuilder'] :: CreateImageBuilder -> Maybe Text

-- | Enables or disables default internet access for the image builder.
[$sel:enableDefaultInternetAccess:CreateImageBuilder'] :: CreateImageBuilder -> Maybe Bool

-- | The image builder name to display.
[$sel:displayName:CreateImageBuilder'] :: CreateImageBuilder -> Maybe Text

-- | The ARN of the public, private, or shared image to use.
[$sel:imageArn:CreateImageBuilder'] :: CreateImageBuilder -> Maybe Text

-- | A unique name for the image builder.
[$sel:name:CreateImageBuilder'] :: CreateImageBuilder -> Text

-- | The instance type to use when launching the image builder. The
--   following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
[$sel:instanceType:CreateImageBuilder'] :: CreateImageBuilder -> Text

-- | Create a value of <a>CreateImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:CreateImageBuilder'</a>,
--   <a>createImageBuilder_vpcConfig</a> - The VPC configuration for the
--   image builder. You can specify only one subnet.
--   
--   <a>$sel:iamRoleArn:CreateImageBuilder'</a>,
--   <a>createImageBuilder_iamRoleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM role to apply to the image builder. To assume a role, the
--   image builder calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:accessEndpoints:CreateImageBuilder'</a>,
--   <a>createImageBuilder_accessEndpoints</a> - The list of interface VPC
--   endpoint (interface endpoint) objects. Administrators can connect to
--   the image builder only through the specified endpoints.
--   
--   <a>$sel:domainJoinInfo:CreateImageBuilder'</a>,
--   <a>createImageBuilder_domainJoinInfo</a> - The name of the directory
--   and organizational unit (OU) to use to join the image builder to a
--   Microsoft Active Directory domain.
--   
--   <a>$sel:imageName:CreateImageBuilder'</a>,
--   <a>createImageBuilder_imageName</a> - The name of the image used to
--   create the image builder.
--   
--   <a>$sel:tags:CreateImageBuilder'</a>, <a>createImageBuilder_tags</a> -
--   The tags to associate with the image builder. A tag is a key-value
--   pair, and the value is optional. For example, Environment=Test. If you
--   do not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:appstreamAgentVersion:CreateImageBuilder'</a>,
--   <a>createImageBuilder_appstreamAgentVersion</a> - The version of the
--   AppStream 2.0 agent to use for this image builder. To use the latest
--   version of the AppStream 2.0 agent, specify [LATEST].
--   
--   <a>$sel:description:CreateImageBuilder'</a>,
--   <a>createImageBuilder_description</a> - The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:CreateImageBuilder'</a>,
--   <a>createImageBuilder_enableDefaultInternetAccess</a> - Enables or
--   disables default internet access for the image builder.
--   
--   <a>$sel:displayName:CreateImageBuilder'</a>,
--   <a>createImageBuilder_displayName</a> - The image builder name to
--   display.
--   
--   <a>$sel:imageArn:CreateImageBuilder'</a>,
--   <a>createImageBuilder_imageArn</a> - The ARN of the public, private,
--   or shared image to use.
--   
--   <a>$sel:name:CreateImageBuilder'</a>, <a>createImageBuilder_name</a> -
--   A unique name for the image builder.
--   
--   <a>$sel:instanceType:CreateImageBuilder'</a>,
--   <a>createImageBuilder_instanceType</a> - The instance type to use when
--   launching the image builder. The following instance types are
--   available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
newCreateImageBuilder :: Text -> Text -> CreateImageBuilder

-- | The VPC configuration for the image builder. You can specify only one
--   subnet.
createImageBuilder_vpcConfig :: Lens' CreateImageBuilder (Maybe VpcConfig)

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the image
--   builder. To assume a role, the image builder calls the AWS Security
--   Token Service (STS) <tt>AssumeRole</tt> API operation and passes the
--   ARN of the role to use. The operation creates a new session with
--   temporary credentials. AppStream 2.0 retrieves the temporary
--   credentials and creates the <b>appstream_machine_role</b> credential
--   profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
createImageBuilder_iamRoleArn :: Lens' CreateImageBuilder (Maybe Text)

-- | The list of interface VPC endpoint (interface endpoint) objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
createImageBuilder_accessEndpoints :: Lens' CreateImageBuilder (Maybe (NonEmpty AccessEndpoint))

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
createImageBuilder_domainJoinInfo :: Lens' CreateImageBuilder (Maybe DomainJoinInfo)

-- | The name of the image used to create the image builder.
createImageBuilder_imageName :: Lens' CreateImageBuilder (Maybe Text)

-- | The tags to associate with the image builder. A tag is a key-value
--   pair, and the value is optional. For example, Environment=Test. If you
--   do not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
createImageBuilder_tags :: Lens' CreateImageBuilder (Maybe (HashMap Text Text))

-- | The version of the AppStream 2.0 agent to use for this image builder.
--   To use the latest version of the AppStream 2.0 agent, specify
--   [LATEST].
createImageBuilder_appstreamAgentVersion :: Lens' CreateImageBuilder (Maybe Text)

-- | The description to display.
createImageBuilder_description :: Lens' CreateImageBuilder (Maybe Text)

-- | Enables or disables default internet access for the image builder.
createImageBuilder_enableDefaultInternetAccess :: Lens' CreateImageBuilder (Maybe Bool)

-- | The image builder name to display.
createImageBuilder_displayName :: Lens' CreateImageBuilder (Maybe Text)

-- | The ARN of the public, private, or shared image to use.
createImageBuilder_imageArn :: Lens' CreateImageBuilder (Maybe Text)

-- | A unique name for the image builder.
createImageBuilder_name :: Lens' CreateImageBuilder Text

-- | The instance type to use when launching the image builder. The
--   following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
createImageBuilder_instanceType :: Lens' CreateImageBuilder Text

-- | <i>See:</i> <a>newCreateImageBuilderResponse</a> smart constructor.
data CreateImageBuilderResponse
CreateImageBuilderResponse' :: Maybe ImageBuilder -> Int -> CreateImageBuilderResponse

-- | Information about the image builder.
[$sel:imageBuilder:CreateImageBuilderResponse'] :: CreateImageBuilderResponse -> Maybe ImageBuilder

-- | The response's http status code.
[$sel:httpStatus:CreateImageBuilderResponse'] :: CreateImageBuilderResponse -> Int

-- | Create a value of <a>CreateImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:CreateImageBuilderResponse'</a>,
--   <a>createImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:CreateImageBuilderResponse'</a>,
--   <a>createImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newCreateImageBuilderResponse :: Int -> CreateImageBuilderResponse

-- | Information about the image builder.
createImageBuilderResponse_imageBuilder :: Lens' CreateImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
createImageBuilderResponse_httpStatus :: Lens' CreateImageBuilderResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance GHC.Show.Show Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance GHC.Read.Read Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance GHC.Classes.Eq Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance GHC.Generics.Generic Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilderResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilderResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilderResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilderResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateImageBuilder.CreateImageBuilder


-- | Creates a fleet. A fleet consists of streaming instances that run a
--   specified image.
module Network.AWS.AppStream.CreateFleet

-- | <i>See:</i> <a>newCreateFleet</a> smart constructor.
data CreateFleet
CreateFleet' :: Maybe Int -> Maybe Int -> Maybe VpcConfig -> Maybe Text -> Maybe DomainJoinInfo -> Maybe FleetType -> Maybe Int -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamView -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> Text -> ComputeCapacity -> CreateFleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If users try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
[$sel:disconnectTimeoutInSeconds:CreateFleet'] :: CreateFleet -> Maybe Int

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
[$sel:maxUserDurationInSeconds:CreateFleet'] :: CreateFleet -> Maybe Int

-- | The VPC configuration for the fleet.
[$sel:vpcConfig:CreateFleet'] :: CreateFleet -> Maybe VpcConfig

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:iamRoleArn:CreateFleet'] :: CreateFleet -> Maybe Text

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
[$sel:domainJoinInfo:CreateFleet'] :: CreateFleet -> Maybe DomainJoinInfo

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
[$sel:fleetType:CreateFleet'] :: CreateFleet -> Maybe FleetType

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If they try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
[$sel:idleDisconnectTimeoutInSeconds:CreateFleet'] :: CreateFleet -> Maybe Int

-- | The name of the image used to create the fleet.
[$sel:imageName:CreateFleet'] :: CreateFleet -> Maybe Text

-- | The tags to associate with the fleet. A tag is a key-value pair, and
--   the value is optional. For example, Environment=Test. If you do not
--   specify a value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information, see <a>Tagging Your Resources</a> in the
--   <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:tags:CreateFleet'] :: CreateFleet -> Maybe (HashMap Text Text)

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
[$sel:streamView:CreateFleet'] :: CreateFleet -> Maybe StreamView

-- | The description to display.
[$sel:description:CreateFleet'] :: CreateFleet -> Maybe Text

-- | Enables or disables default internet access for the fleet.
[$sel:enableDefaultInternetAccess:CreateFleet'] :: CreateFleet -> Maybe Bool

-- | The fleet name to display.
[$sel:displayName:CreateFleet'] :: CreateFleet -> Maybe Text

-- | The ARN of the public, private, or shared image to use.
[$sel:imageArn:CreateFleet'] :: CreateFleet -> Maybe Text

-- | A unique name for the fleet.
[$sel:name:CreateFleet'] :: CreateFleet -> Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
[$sel:instanceType:CreateFleet'] :: CreateFleet -> Text

-- | The desired capacity for the fleet.
[$sel:computeCapacity:CreateFleet'] :: CreateFleet -> ComputeCapacity

-- | Create a value of <a>CreateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disconnectTimeoutInSeconds:CreateFleet'</a>,
--   <a>createFleet_disconnectTimeoutInSeconds</a> - The amount of time
--   that a streaming session remains active after users disconnect. If
--   users try to reconnect to the streaming session after a disconnection
--   or network interruption within this time interval, they are connected
--   to their previous session. Otherwise, they are connected to a new
--   session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
--   
--   <a>$sel:maxUserDurationInSeconds:CreateFleet'</a>,
--   <a>createFleet_maxUserDurationInSeconds</a> - The maximum amount of
--   time that a streaming session can remain active, in seconds. If users
--   are still connected to a streaming instance five minutes before this
--   limit is reached, they are prompted to save any open documents before
--   being disconnected. After this time elapses, the instance is
--   terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
--   
--   <a>$sel:vpcConfig:CreateFleet'</a>, <a>createFleet_vpcConfig</a> - The
--   VPC configuration for the fleet.
--   
--   <a>$sel:iamRoleArn:CreateFleet'</a>, <a>createFleet_iamRoleArn</a> -
--   The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:domainJoinInfo:CreateFleet'</a>,
--   <a>createFleet_domainJoinInfo</a> - The name of the directory and
--   organizational unit (OU) to use to join the fleet to a Microsoft
--   Active Directory domain.
--   
--   <a>$sel:fleetType:CreateFleet'</a>, <a>createFleet_fleetType</a> - The
--   fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
--   
--   <a>$sel:idleDisconnectTimeoutInSeconds:CreateFleet'</a>,
--   <a>createFleet_idleDisconnectTimeoutInSeconds</a> - The amount of time
--   that users can be idle (inactive) before they are disconnected from
--   their streaming session and the <tt>DisconnectTimeoutInSeconds</tt>
--   time interval begins. Users are notified before they are disconnected
--   due to inactivity. If they try to reconnect to the streaming session
--   before the time interval specified in
--   <tt>DisconnectTimeoutInSeconds</tt> elapses, they are connected to
--   their previous session. Users are considered idle when they stop
--   providing keyboard or mouse input during their streaming session. File
--   uploads and downloads, audio in, audio out, and pixels changing do not
--   qualify as user activity. If users continue to be idle after the time
--   interval in <tt>IdleDisconnectTimeoutInSeconds</tt> elapses, they are
--   disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
--   
--   <a>$sel:imageName:CreateFleet'</a>, <a>createFleet_imageName</a> - The
--   name of the image used to create the fleet.
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleet_tags</a> - The tags to
--   associate with the fleet. A tag is a key-value pair, and the value is
--   optional. For example, Environment=Test. If you do not specify a
--   value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information, see <a>Tagging Your Resources</a> in the
--   <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:streamView:CreateFleet'</a>, <a>createFleet_streamView</a> -
--   The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
--   
--   <a>$sel:description:CreateFleet'</a>, <a>createFleet_description</a> -
--   The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:CreateFleet'</a>,
--   <a>createFleet_enableDefaultInternetAccess</a> - Enables or disables
--   default internet access for the fleet.
--   
--   <a>$sel:displayName:CreateFleet'</a>, <a>createFleet_displayName</a> -
--   The fleet name to display.
--   
--   <a>$sel:imageArn:CreateFleet'</a>, <a>createFleet_imageArn</a> - The
--   ARN of the public, private, or shared image to use.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleet_name</a> - A unique name
--   for the fleet.
--   
--   <a>$sel:instanceType:CreateFleet'</a>, <a>createFleet_instanceType</a>
--   - The instance type to use when launching fleet instances. The
--   following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:computeCapacity:CreateFleet'</a>,
--   <a>createFleet_computeCapacity</a> - The desired capacity for the
--   fleet.
newCreateFleet :: Text -> Text -> ComputeCapacity -> CreateFleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If users try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
createFleet_disconnectTimeoutInSeconds :: Lens' CreateFleet (Maybe Int)

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
createFleet_maxUserDurationInSeconds :: Lens' CreateFleet (Maybe Int)

-- | The VPC configuration for the fleet.
createFleet_vpcConfig :: Lens' CreateFleet (Maybe VpcConfig)

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
createFleet_iamRoleArn :: Lens' CreateFleet (Maybe Text)

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
createFleet_domainJoinInfo :: Lens' CreateFleet (Maybe DomainJoinInfo)

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
createFleet_fleetType :: Lens' CreateFleet (Maybe FleetType)

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If they try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
createFleet_idleDisconnectTimeoutInSeconds :: Lens' CreateFleet (Maybe Int)

-- | The name of the image used to create the fleet.
createFleet_imageName :: Lens' CreateFleet (Maybe Text)

-- | The tags to associate with the fleet. A tag is a key-value pair, and
--   the value is optional. For example, Environment=Test. If you do not
--   specify a value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information, see <a>Tagging Your Resources</a> in the
--   <i>Amazon AppStream 2.0 Administration Guide</i>.
createFleet_tags :: Lens' CreateFleet (Maybe (HashMap Text Text))

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
createFleet_streamView :: Lens' CreateFleet (Maybe StreamView)

-- | The description to display.
createFleet_description :: Lens' CreateFleet (Maybe Text)

-- | Enables or disables default internet access for the fleet.
createFleet_enableDefaultInternetAccess :: Lens' CreateFleet (Maybe Bool)

-- | The fleet name to display.
createFleet_displayName :: Lens' CreateFleet (Maybe Text)

-- | The ARN of the public, private, or shared image to use.
createFleet_imageArn :: Lens' CreateFleet (Maybe Text)

-- | A unique name for the fleet.
createFleet_name :: Lens' CreateFleet Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
createFleet_instanceType :: Lens' CreateFleet Text

-- | The desired capacity for the fleet.
createFleet_computeCapacity :: Lens' CreateFleet ComputeCapacity

-- | <i>See:</i> <a>newCreateFleetResponse</a> smart constructor.
data CreateFleetResponse
CreateFleetResponse' :: Maybe Fleet -> Int -> CreateFleetResponse

-- | Information about the fleet.
[$sel:fleet:CreateFleetResponse'] :: CreateFleetResponse -> Maybe Fleet

-- | The response's http status code.
[$sel:httpStatus:CreateFleetResponse'] :: CreateFleetResponse -> Int

-- | Create a value of <a>CreateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:CreateFleetResponse'</a>,
--   <a>createFleetResponse_fleet</a> - Information about the fleet.
--   
--   <a>$sel:httpStatus:CreateFleetResponse'</a>,
--   <a>createFleetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFleetResponse :: Int -> CreateFleetResponse

-- | Information about the fleet.
createFleetResponse_fleet :: Lens' CreateFleetResponse (Maybe Fleet)

-- | The response's http status code.
createFleetResponse_httpStatus :: Lens' CreateFleetResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateFleet.CreateFleet
instance GHC.Show.Show Network.AWS.AppStream.CreateFleet.CreateFleet
instance GHC.Read.Read Network.AWS.AppStream.CreateFleet.CreateFleet
instance GHC.Classes.Eq Network.AWS.AppStream.CreateFleet.CreateFleet
instance GHC.Generics.Generic Network.AWS.AppStream.CreateFleet.CreateFleetResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateFleet.CreateFleetResponse
instance GHC.Read.Read Network.AWS.AppStream.CreateFleet.CreateFleetResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateFleet.CreateFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateFleet.CreateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateFleet.CreateFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateFleet.CreateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateFleet.CreateFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateFleet.CreateFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateFleet.CreateFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateFleet.CreateFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateFleet.CreateFleet


-- | Creates a Directory Config object in AppStream 2.0. This object
--   includes the configuration information required to join fleets and
--   image builders to Microsoft Active Directory domains.
module Network.AWS.AppStream.CreateDirectoryConfig

-- | <i>See:</i> <a>newCreateDirectoryConfig</a> smart constructor.
data CreateDirectoryConfig
CreateDirectoryConfig' :: Maybe ServiceAccountCredentials -> Text -> [Text] -> CreateDirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
[$sel:serviceAccountCredentials:CreateDirectoryConfig'] :: CreateDirectoryConfig -> Maybe ServiceAccountCredentials

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
[$sel:directoryName:CreateDirectoryConfig'] :: CreateDirectoryConfig -> Text

-- | The distinguished names of the organizational units for computer
--   accounts.
[$sel:organizationalUnitDistinguishedNames:CreateDirectoryConfig'] :: CreateDirectoryConfig -> [Text]

-- | Create a value of <a>CreateDirectoryConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceAccountCredentials:CreateDirectoryConfig'</a>,
--   <a>createDirectoryConfig_serviceAccountCredentials</a> - The
--   credentials for the service account used by the fleet or image builder
--   to connect to the directory.
--   
--   <a>$sel:directoryName:CreateDirectoryConfig'</a>,
--   <a>createDirectoryConfig_directoryName</a> - The fully qualified name
--   of the directory (for example, corp.example.com).
--   
--   
--   <a>$sel:organizationalUnitDistinguishedNames:CreateDirectoryConfig'</a>,
--   <a>createDirectoryConfig_organizationalUnitDistinguishedNames</a> -
--   The distinguished names of the organizational units for computer
--   accounts.
newCreateDirectoryConfig :: Text -> CreateDirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
createDirectoryConfig_serviceAccountCredentials :: Lens' CreateDirectoryConfig (Maybe ServiceAccountCredentials)

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
createDirectoryConfig_directoryName :: Lens' CreateDirectoryConfig Text

-- | The distinguished names of the organizational units for computer
--   accounts.
createDirectoryConfig_organizationalUnitDistinguishedNames :: Lens' CreateDirectoryConfig [Text]

-- | <i>See:</i> <a>newCreateDirectoryConfigResponse</a> smart constructor.
data CreateDirectoryConfigResponse
CreateDirectoryConfigResponse' :: Maybe DirectoryConfig -> Int -> CreateDirectoryConfigResponse

-- | Information about the directory configuration.
[$sel:directoryConfig:CreateDirectoryConfigResponse'] :: CreateDirectoryConfigResponse -> Maybe DirectoryConfig

-- | The response's http status code.
[$sel:httpStatus:CreateDirectoryConfigResponse'] :: CreateDirectoryConfigResponse -> Int

-- | Create a value of <a>CreateDirectoryConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryConfig:CreateDirectoryConfigResponse'</a>,
--   <a>createDirectoryConfigResponse_directoryConfig</a> - Information
--   about the directory configuration.
--   
--   <a>$sel:httpStatus:CreateDirectoryConfigResponse'</a>,
--   <a>createDirectoryConfigResponse_httpStatus</a> - The response's http
--   status code.
newCreateDirectoryConfigResponse :: Int -> CreateDirectoryConfigResponse

-- | Information about the directory configuration.
createDirectoryConfigResponse_directoryConfig :: Lens' CreateDirectoryConfigResponse (Maybe DirectoryConfig)

-- | The response's http status code.
createDirectoryConfigResponse_httpStatus :: Lens' CreateDirectoryConfigResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance GHC.Show.Show Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance GHC.Classes.Eq Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance GHC.Generics.Generic Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfigResponse
instance GHC.Show.Show Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfigResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CreateDirectoryConfig.CreateDirectoryConfig


-- | Copies the image within the same region or to a new region within the
--   same AWS account. Note that any tags you added to the image will not
--   be copied.
module Network.AWS.AppStream.CopyImage

-- | <i>See:</i> <a>newCopyImage</a> smart constructor.
data CopyImage
CopyImage' :: Maybe Text -> Text -> Text -> Text -> CopyImage

-- | The description that the image will have when it is copied to the
--   destination.
[$sel:destinationImageDescription:CopyImage'] :: CopyImage -> Maybe Text

-- | The name of the image to copy.
[$sel:sourceImageName:CopyImage'] :: CopyImage -> Text

-- | The name that the image will have when it is copied to the
--   destination.
[$sel:destinationImageName:CopyImage'] :: CopyImage -> Text

-- | The destination region to which the image will be copied. This
--   parameter is required, even if you are copying an image within the
--   same region.
[$sel:destinationRegion:CopyImage'] :: CopyImage -> Text

-- | Create a value of <a>CopyImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationImageDescription:CopyImage'</a>,
--   <a>copyImage_destinationImageDescription</a> - The description that
--   the image will have when it is copied to the destination.
--   
--   <a>$sel:sourceImageName:CopyImage'</a>,
--   <a>copyImage_sourceImageName</a> - The name of the image to copy.
--   
--   <a>$sel:destinationImageName:CopyImage'</a>,
--   <a>copyImage_destinationImageName</a> - The name that the image will
--   have when it is copied to the destination.
--   
--   <a>$sel:destinationRegion:CopyImage'</a>,
--   <a>copyImage_destinationRegion</a> - The destination region to which
--   the image will be copied. This parameter is required, even if you are
--   copying an image within the same region.
newCopyImage :: Text -> Text -> Text -> CopyImage

-- | The description that the image will have when it is copied to the
--   destination.
copyImage_destinationImageDescription :: Lens' CopyImage (Maybe Text)

-- | The name of the image to copy.
copyImage_sourceImageName :: Lens' CopyImage Text

-- | The name that the image will have when it is copied to the
--   destination.
copyImage_destinationImageName :: Lens' CopyImage Text

-- | The destination region to which the image will be copied. This
--   parameter is required, even if you are copying an image within the
--   same region.
copyImage_destinationRegion :: Lens' CopyImage Text

-- | <i>See:</i> <a>newCopyImageResponse</a> smart constructor.
data CopyImageResponse
CopyImageResponse' :: Maybe Text -> Int -> CopyImageResponse

-- | The name of the destination image.
[$sel:destinationImageName:CopyImageResponse'] :: CopyImageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CopyImageResponse'] :: CopyImageResponse -> Int

-- | Create a value of <a>CopyImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationImageName:CopyImage'</a>,
--   <a>copyImageResponse_destinationImageName</a> - The name of the
--   destination image.
--   
--   <a>$sel:httpStatus:CopyImageResponse'</a>,
--   <a>copyImageResponse_httpStatus</a> - The response's http status code.
newCopyImageResponse :: Int -> CopyImageResponse

-- | The name of the destination image.
copyImageResponse_destinationImageName :: Lens' CopyImageResponse (Maybe Text)

-- | The response's http status code.
copyImageResponse_httpStatus :: Lens' CopyImageResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.CopyImage.CopyImage
instance GHC.Show.Show Network.AWS.AppStream.CopyImage.CopyImage
instance GHC.Read.Read Network.AWS.AppStream.CopyImage.CopyImage
instance GHC.Classes.Eq Network.AWS.AppStream.CopyImage.CopyImage
instance GHC.Generics.Generic Network.AWS.AppStream.CopyImage.CopyImageResponse
instance GHC.Show.Show Network.AWS.AppStream.CopyImage.CopyImageResponse
instance GHC.Read.Read Network.AWS.AppStream.CopyImage.CopyImageResponse
instance GHC.Classes.Eq Network.AWS.AppStream.CopyImage.CopyImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.CopyImage.CopyImage
instance Control.DeepSeq.NFData Network.AWS.AppStream.CopyImage.CopyImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.CopyImage.CopyImage
instance Control.DeepSeq.NFData Network.AWS.AppStream.CopyImage.CopyImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.CopyImage.CopyImage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.CopyImage.CopyImage
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.CopyImage.CopyImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.CopyImage.CopyImage


-- | Disassociates the specified users from the specified stacks.
module Network.AWS.AppStream.BatchDisassociateUserStack

-- | <i>See:</i> <a>newBatchDisassociateUserStack</a> smart constructor.
data BatchDisassociateUserStack
BatchDisassociateUserStack' :: NonEmpty UserStackAssociation -> BatchDisassociateUserStack

-- | The list of UserStackAssociation objects.
[$sel:userStackAssociations:BatchDisassociateUserStack'] :: BatchDisassociateUserStack -> NonEmpty UserStackAssociation

-- | Create a value of <a>BatchDisassociateUserStack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userStackAssociations:BatchDisassociateUserStack'</a>,
--   <a>batchDisassociateUserStack_userStackAssociations</a> - The list of
--   UserStackAssociation objects.
newBatchDisassociateUserStack :: NonEmpty UserStackAssociation -> BatchDisassociateUserStack

-- | The list of UserStackAssociation objects.
batchDisassociateUserStack_userStackAssociations :: Lens' BatchDisassociateUserStack (NonEmpty UserStackAssociation)

-- | <i>See:</i> <a>newBatchDisassociateUserStackResponse</a> smart
--   constructor.
data BatchDisassociateUserStackResponse
BatchDisassociateUserStackResponse' :: Maybe [UserStackAssociationError] -> Int -> BatchDisassociateUserStackResponse

-- | The list of UserStackAssociationError objects.
[$sel:errors:BatchDisassociateUserStackResponse'] :: BatchDisassociateUserStackResponse -> Maybe [UserStackAssociationError]

-- | The response's http status code.
[$sel:httpStatus:BatchDisassociateUserStackResponse'] :: BatchDisassociateUserStackResponse -> Int

-- | Create a value of <a>BatchDisassociateUserStackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDisassociateUserStackResponse'</a>,
--   <a>batchDisassociateUserStackResponse_errors</a> - The list of
--   UserStackAssociationError objects.
--   
--   <a>$sel:httpStatus:BatchDisassociateUserStackResponse'</a>,
--   <a>batchDisassociateUserStackResponse_httpStatus</a> - The response's
--   http status code.
newBatchDisassociateUserStackResponse :: Int -> BatchDisassociateUserStackResponse

-- | The list of UserStackAssociationError objects.
batchDisassociateUserStackResponse_errors :: Lens' BatchDisassociateUserStackResponse (Maybe [UserStackAssociationError])

-- | The response's http status code.
batchDisassociateUserStackResponse_httpStatus :: Lens' BatchDisassociateUserStackResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance GHC.Show.Show Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance GHC.Classes.Eq Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance GHC.Generics.Generic Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStackResponse
instance GHC.Show.Show Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStackResponse
instance GHC.Classes.Eq Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStackResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.BatchDisassociateUserStack.BatchDisassociateUserStack


-- | Associates the specified users with the specified stacks. Users in a
--   user pool cannot be assigned to stacks with fleets that are joined to
--   an Active Directory domain.
module Network.AWS.AppStream.BatchAssociateUserStack

-- | <i>See:</i> <a>newBatchAssociateUserStack</a> smart constructor.
data BatchAssociateUserStack
BatchAssociateUserStack' :: NonEmpty UserStackAssociation -> BatchAssociateUserStack

-- | The list of UserStackAssociation objects.
[$sel:userStackAssociations:BatchAssociateUserStack'] :: BatchAssociateUserStack -> NonEmpty UserStackAssociation

-- | Create a value of <a>BatchAssociateUserStack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userStackAssociations:BatchAssociateUserStack'</a>,
--   <a>batchAssociateUserStack_userStackAssociations</a> - The list of
--   UserStackAssociation objects.
newBatchAssociateUserStack :: NonEmpty UserStackAssociation -> BatchAssociateUserStack

-- | The list of UserStackAssociation objects.
batchAssociateUserStack_userStackAssociations :: Lens' BatchAssociateUserStack (NonEmpty UserStackAssociation)

-- | <i>See:</i> <a>newBatchAssociateUserStackResponse</a> smart
--   constructor.
data BatchAssociateUserStackResponse
BatchAssociateUserStackResponse' :: Maybe [UserStackAssociationError] -> Int -> BatchAssociateUserStackResponse

-- | The list of UserStackAssociationError objects.
[$sel:errors:BatchAssociateUserStackResponse'] :: BatchAssociateUserStackResponse -> Maybe [UserStackAssociationError]

-- | The response's http status code.
[$sel:httpStatus:BatchAssociateUserStackResponse'] :: BatchAssociateUserStackResponse -> Int

-- | Create a value of <a>BatchAssociateUserStackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchAssociateUserStackResponse'</a>,
--   <a>batchAssociateUserStackResponse_errors</a> - The list of
--   UserStackAssociationError objects.
--   
--   <a>$sel:httpStatus:BatchAssociateUserStackResponse'</a>,
--   <a>batchAssociateUserStackResponse_httpStatus</a> - The response's
--   http status code.
newBatchAssociateUserStackResponse :: Int -> BatchAssociateUserStackResponse

-- | The list of UserStackAssociationError objects.
batchAssociateUserStackResponse_errors :: Lens' BatchAssociateUserStackResponse (Maybe [UserStackAssociationError])

-- | The response's http status code.
batchAssociateUserStackResponse_httpStatus :: Lens' BatchAssociateUserStackResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance GHC.Show.Show Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance GHC.Classes.Eq Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance GHC.Generics.Generic Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStackResponse
instance GHC.Show.Show Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStackResponse
instance GHC.Classes.Eq Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStackResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.BatchAssociateUserStack.BatchAssociateUserStack


-- | Associates the specified fleet with the specified stack.
module Network.AWS.AppStream.AssociateFleet

-- | <i>See:</i> <a>newAssociateFleet</a> smart constructor.
data AssociateFleet
AssociateFleet' :: Text -> Text -> AssociateFleet

-- | The name of the fleet.
[$sel:fleetName:AssociateFleet'] :: AssociateFleet -> Text

-- | The name of the stack.
[$sel:stackName:AssociateFleet'] :: AssociateFleet -> Text

-- | Create a value of <a>AssociateFleet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetName:AssociateFleet'</a>, <a>associateFleet_fleetName</a>
--   - The name of the fleet.
--   
--   <a>$sel:stackName:AssociateFleet'</a>, <a>associateFleet_stackName</a>
--   - The name of the stack.
newAssociateFleet :: Text -> Text -> AssociateFleet

-- | The name of the fleet.
associateFleet_fleetName :: Lens' AssociateFleet Text

-- | The name of the stack.
associateFleet_stackName :: Lens' AssociateFleet Text

-- | <i>See:</i> <a>newAssociateFleetResponse</a> smart constructor.
data AssociateFleetResponse
AssociateFleetResponse' :: Int -> AssociateFleetResponse

-- | The response's http status code.
[$sel:httpStatus:AssociateFleetResponse'] :: AssociateFleetResponse -> Int

-- | Create a value of <a>AssociateFleetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateFleetResponse'</a>,
--   <a>associateFleetResponse_httpStatus</a> - The response's http status
--   code.
newAssociateFleetResponse :: Int -> AssociateFleetResponse

-- | The response's http status code.
associateFleetResponse_httpStatus :: Lens' AssociateFleetResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance GHC.Show.Show Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance GHC.Read.Read Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance GHC.Classes.Eq Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance GHC.Generics.Generic Network.AWS.AppStream.AssociateFleet.AssociateFleetResponse
instance GHC.Show.Show Network.AWS.AppStream.AssociateFleet.AssociateFleetResponse
instance GHC.Read.Read Network.AWS.AppStream.AssociateFleet.AssociateFleetResponse
instance GHC.Classes.Eq Network.AWS.AppStream.AssociateFleet.AssociateFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.AssociateFleet.AssociateFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.AssociateFleet.AssociateFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.AssociateFleet.AssociateFleet


-- | Disassociates one or more specified tags from the specified AppStream
--   2.0 resource.
--   
--   To list the current tags for your resources, use ListTagsForResource.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
module Network.AWS.AppStream.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys for the tags to disassociate.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys for the tags to disassociate.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys for the tags to disassociate.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.AppStream.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.AppStream.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.AppStream.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.AppStream.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.AppStream.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.AppStream.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.AppStream.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.AppStream.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.AppStream.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.UntagResource.UntagResource


-- | Updates the specified Directory Config object in AppStream 2.0. This
--   object includes the configuration information required to join fleets
--   and image builders to Microsoft Active Directory domains.
module Network.AWS.AppStream.UpdateDirectoryConfig

-- | <i>See:</i> <a>newUpdateDirectoryConfig</a> smart constructor.
data UpdateDirectoryConfig
UpdateDirectoryConfig' :: Maybe ServiceAccountCredentials -> Maybe [Text] -> Text -> UpdateDirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
[$sel:serviceAccountCredentials:UpdateDirectoryConfig'] :: UpdateDirectoryConfig -> Maybe ServiceAccountCredentials

-- | The distinguished names of the organizational units for computer
--   accounts.
[$sel:organizationalUnitDistinguishedNames:UpdateDirectoryConfig'] :: UpdateDirectoryConfig -> Maybe [Text]

-- | The name of the Directory Config object.
[$sel:directoryName:UpdateDirectoryConfig'] :: UpdateDirectoryConfig -> Text

-- | Create a value of <a>UpdateDirectoryConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceAccountCredentials:UpdateDirectoryConfig'</a>,
--   <a>updateDirectoryConfig_serviceAccountCredentials</a> - The
--   credentials for the service account used by the fleet or image builder
--   to connect to the directory.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedNames:UpdateDirectoryConfig'</a>,
--   <a>updateDirectoryConfig_organizationalUnitDistinguishedNames</a> -
--   The distinguished names of the organizational units for computer
--   accounts.
--   
--   <a>$sel:directoryName:UpdateDirectoryConfig'</a>,
--   <a>updateDirectoryConfig_directoryName</a> - The name of the Directory
--   Config object.
newUpdateDirectoryConfig :: Text -> UpdateDirectoryConfig

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
updateDirectoryConfig_serviceAccountCredentials :: Lens' UpdateDirectoryConfig (Maybe ServiceAccountCredentials)

-- | The distinguished names of the organizational units for computer
--   accounts.
updateDirectoryConfig_organizationalUnitDistinguishedNames :: Lens' UpdateDirectoryConfig (Maybe [Text])

-- | The name of the Directory Config object.
updateDirectoryConfig_directoryName :: Lens' UpdateDirectoryConfig Text

-- | <i>See:</i> <a>newUpdateDirectoryConfigResponse</a> smart constructor.
data UpdateDirectoryConfigResponse
UpdateDirectoryConfigResponse' :: Maybe DirectoryConfig -> Int -> UpdateDirectoryConfigResponse

-- | Information about the Directory Config object.
[$sel:directoryConfig:UpdateDirectoryConfigResponse'] :: UpdateDirectoryConfigResponse -> Maybe DirectoryConfig

-- | The response's http status code.
[$sel:httpStatus:UpdateDirectoryConfigResponse'] :: UpdateDirectoryConfigResponse -> Int

-- | Create a value of <a>UpdateDirectoryConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryConfig:UpdateDirectoryConfigResponse'</a>,
--   <a>updateDirectoryConfigResponse_directoryConfig</a> - Information
--   about the Directory Config object.
--   
--   <a>$sel:httpStatus:UpdateDirectoryConfigResponse'</a>,
--   <a>updateDirectoryConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDirectoryConfigResponse :: Int -> UpdateDirectoryConfigResponse

-- | Information about the Directory Config object.
updateDirectoryConfigResponse_directoryConfig :: Lens' UpdateDirectoryConfigResponse (Maybe DirectoryConfig)

-- | The response's http status code.
updateDirectoryConfigResponse_httpStatus :: Lens' UpdateDirectoryConfigResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance GHC.Show.Show Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfigResponse
instance GHC.Show.Show Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfigResponse
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.UpdateDirectoryConfig.UpdateDirectoryConfig


-- | Updates the specified fleet.
--   
--   If the fleet is in the <tt>STOPPED</tt> state, you can update any
--   attribute except the fleet name. If the fleet is in the
--   <tt>RUNNING</tt> state, you can update the <tt>DisplayName</tt>,
--   <tt>ComputeCapacity</tt>, <tt>ImageARN</tt>, <tt>ImageName</tt>,
--   <tt>IdleDisconnectTimeoutInSeconds</tt>, and
--   <tt>DisconnectTimeoutInSeconds</tt> attributes. If the fleet is in the
--   <tt>STARTING</tt> or <tt>STOPPING</tt> state, you can't update it.
module Network.AWS.AppStream.UpdateFleet

-- | <i>See:</i> <a>newUpdateFleet</a> smart constructor.
data UpdateFleet
UpdateFleet' :: Maybe Int -> Maybe Int -> Maybe VpcConfig -> Maybe Text -> Maybe DomainJoinInfo -> Maybe Text -> Maybe ComputeCapacity -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe StreamView -> Maybe Text -> Maybe Bool -> Maybe [FleetAttribute] -> Maybe Text -> Maybe Text -> UpdateFleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If users try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
[$sel:disconnectTimeoutInSeconds:UpdateFleet'] :: UpdateFleet -> Maybe Int

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
[$sel:maxUserDurationInSeconds:UpdateFleet'] :: UpdateFleet -> Maybe Int

-- | The VPC configuration for the fleet.
[$sel:vpcConfig:UpdateFleet'] :: UpdateFleet -> Maybe VpcConfig

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
[$sel:iamRoleArn:UpdateFleet'] :: UpdateFleet -> Maybe Text

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
[$sel:domainJoinInfo:UpdateFleet'] :: UpdateFleet -> Maybe DomainJoinInfo

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
[$sel:instanceType:UpdateFleet'] :: UpdateFleet -> Maybe Text

-- | The desired capacity for the fleet.
[$sel:computeCapacity:UpdateFleet'] :: UpdateFleet -> Maybe ComputeCapacity

-- | Deletes the VPC association for the specified fleet.
[$sel:deleteVpcConfig:UpdateFleet'] :: UpdateFleet -> Maybe Bool

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
[$sel:idleDisconnectTimeoutInSeconds:UpdateFleet'] :: UpdateFleet -> Maybe Int

-- | The name of the image used to create the fleet.
[$sel:imageName:UpdateFleet'] :: UpdateFleet -> Maybe Text

-- | A unique name for the fleet.
[$sel:name:UpdateFleet'] :: UpdateFleet -> Maybe Text

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
[$sel:streamView:UpdateFleet'] :: UpdateFleet -> Maybe StreamView

-- | The description to display.
[$sel:description:UpdateFleet'] :: UpdateFleet -> Maybe Text

-- | Enables or disables default internet access for the fleet.
[$sel:enableDefaultInternetAccess:UpdateFleet'] :: UpdateFleet -> Maybe Bool

-- | The fleet attributes to delete.
[$sel:attributesToDelete:UpdateFleet'] :: UpdateFleet -> Maybe [FleetAttribute]

-- | The fleet name to display.
[$sel:displayName:UpdateFleet'] :: UpdateFleet -> Maybe Text

-- | The ARN of the public, private, or shared image to use.
[$sel:imageArn:UpdateFleet'] :: UpdateFleet -> Maybe Text

-- | Create a value of <a>UpdateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disconnectTimeoutInSeconds:UpdateFleet'</a>,
--   <a>updateFleet_disconnectTimeoutInSeconds</a> - The amount of time
--   that a streaming session remains active after users disconnect. If
--   users try to reconnect to the streaming session after a disconnection
--   or network interruption within this time interval, they are connected
--   to their previous session. Otherwise, they are connected to a new
--   session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
--   
--   <a>$sel:maxUserDurationInSeconds:UpdateFleet'</a>,
--   <a>updateFleet_maxUserDurationInSeconds</a> - The maximum amount of
--   time that a streaming session can remain active, in seconds. If users
--   are still connected to a streaming instance five minutes before this
--   limit is reached, they are prompted to save any open documents before
--   being disconnected. After this time elapses, the instance is
--   terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
--   
--   <a>$sel:vpcConfig:UpdateFleet'</a>, <a>updateFleet_vpcConfig</a> - The
--   VPC configuration for the fleet.
--   
--   <a>$sel:iamRoleArn:UpdateFleet'</a>, <a>updateFleet_iamRoleArn</a> -
--   The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:domainJoinInfo:UpdateFleet'</a>,
--   <a>updateFleet_domainJoinInfo</a> - The name of the directory and
--   organizational unit (OU) to use to join the fleet to a Microsoft
--   Active Directory domain.
--   
--   <a>$sel:instanceType:UpdateFleet'</a>, <a>updateFleet_instanceType</a>
--   - The instance type to use when launching fleet instances. The
--   following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:computeCapacity:UpdateFleet'</a>,
--   <a>updateFleet_computeCapacity</a> - The desired capacity for the
--   fleet.
--   
--   <a>$sel:deleteVpcConfig:UpdateFleet'</a>,
--   <a>updateFleet_deleteVpcConfig</a> - Deletes the VPC association for
--   the specified fleet.
--   
--   <a>$sel:idleDisconnectTimeoutInSeconds:UpdateFleet'</a>,
--   <a>updateFleet_idleDisconnectTimeoutInSeconds</a> - The amount of time
--   that users can be idle (inactive) before they are disconnected from
--   their streaming session and the <tt>DisconnectTimeoutInSeconds</tt>
--   time interval begins. Users are notified before they are disconnected
--   due to inactivity. If users try to reconnect to the streaming session
--   before the time interval specified in
--   <tt>DisconnectTimeoutInSeconds</tt> elapses, they are connected to
--   their previous session. Users are considered idle when they stop
--   providing keyboard or mouse input during their streaming session. File
--   uploads and downloads, audio in, audio out, and pixels changing do not
--   qualify as user activity. If users continue to be idle after the time
--   interval in <tt>IdleDisconnectTimeoutInSeconds</tt> elapses, they are
--   disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
--   
--   <a>$sel:imageName:UpdateFleet'</a>, <a>updateFleet_imageName</a> - The
--   name of the image used to create the fleet.
--   
--   <a>$sel:name:UpdateFleet'</a>, <a>updateFleet_name</a> - A unique name
--   for the fleet.
--   
--   <a>$sel:streamView:UpdateFleet'</a>, <a>updateFleet_streamView</a> -
--   The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
--   
--   <a>$sel:description:UpdateFleet'</a>, <a>updateFleet_description</a> -
--   The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:UpdateFleet'</a>,
--   <a>updateFleet_enableDefaultInternetAccess</a> - Enables or disables
--   default internet access for the fleet.
--   
--   <a>$sel:attributesToDelete:UpdateFleet'</a>,
--   <a>updateFleet_attributesToDelete</a> - The fleet attributes to
--   delete.
--   
--   <a>$sel:displayName:UpdateFleet'</a>, <a>updateFleet_displayName</a> -
--   The fleet name to display.
--   
--   <a>$sel:imageArn:UpdateFleet'</a>, <a>updateFleet_imageArn</a> - The
--   ARN of the public, private, or shared image to use.
newUpdateFleet :: UpdateFleet

-- | The amount of time that a streaming session remains active after users
--   disconnect. If users try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
updateFleet_disconnectTimeoutInSeconds :: Lens' UpdateFleet (Maybe Int)

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
updateFleet_maxUserDurationInSeconds :: Lens' UpdateFleet (Maybe Int)

-- | The VPC configuration for the fleet.
updateFleet_vpcConfig :: Lens' UpdateFleet (Maybe VpcConfig)

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
updateFleet_iamRoleArn :: Lens' UpdateFleet (Maybe Text)

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
updateFleet_domainJoinInfo :: Lens' UpdateFleet (Maybe DomainJoinInfo)

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
updateFleet_instanceType :: Lens' UpdateFleet (Maybe Text)

-- | The desired capacity for the fleet.
updateFleet_computeCapacity :: Lens' UpdateFleet (Maybe ComputeCapacity)

-- | Deletes the VPC association for the specified fleet.
updateFleet_deleteVpcConfig :: Lens' UpdateFleet (Maybe Bool)

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
updateFleet_idleDisconnectTimeoutInSeconds :: Lens' UpdateFleet (Maybe Int)

-- | The name of the image used to create the fleet.
updateFleet_imageName :: Lens' UpdateFleet (Maybe Text)

-- | A unique name for the fleet.
updateFleet_name :: Lens' UpdateFleet (Maybe Text)

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
updateFleet_streamView :: Lens' UpdateFleet (Maybe StreamView)

-- | The description to display.
updateFleet_description :: Lens' UpdateFleet (Maybe Text)

-- | Enables or disables default internet access for the fleet.
updateFleet_enableDefaultInternetAccess :: Lens' UpdateFleet (Maybe Bool)

-- | The fleet attributes to delete.
updateFleet_attributesToDelete :: Lens' UpdateFleet (Maybe [FleetAttribute])

-- | The fleet name to display.
updateFleet_displayName :: Lens' UpdateFleet (Maybe Text)

-- | The ARN of the public, private, or shared image to use.
updateFleet_imageArn :: Lens' UpdateFleet (Maybe Text)

-- | <i>See:</i> <a>newUpdateFleetResponse</a> smart constructor.
data UpdateFleetResponse
UpdateFleetResponse' :: Maybe Fleet -> Int -> UpdateFleetResponse

-- | Information about the fleet.
[$sel:fleet:UpdateFleetResponse'] :: UpdateFleetResponse -> Maybe Fleet

-- | The response's http status code.
[$sel:httpStatus:UpdateFleetResponse'] :: UpdateFleetResponse -> Int

-- | Create a value of <a>UpdateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:UpdateFleetResponse'</a>,
--   <a>updateFleetResponse_fleet</a> - Information about the fleet.
--   
--   <a>$sel:httpStatus:UpdateFleetResponse'</a>,
--   <a>updateFleetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateFleetResponse :: Int -> UpdateFleetResponse

-- | Information about the fleet.
updateFleetResponse_fleet :: Lens' UpdateFleetResponse (Maybe Fleet)

-- | The response's http status code.
updateFleetResponse_httpStatus :: Lens' UpdateFleetResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance GHC.Show.Show Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance GHC.Read.Read Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateFleet.UpdateFleetResponse
instance GHC.Show.Show Network.AWS.AppStream.UpdateFleet.UpdateFleetResponse
instance GHC.Read.Read Network.AWS.AppStream.UpdateFleet.UpdateFleetResponse
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateFleet.UpdateFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateFleet.UpdateFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.UpdateFleet.UpdateFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.UpdateFleet.UpdateFleet


-- | Adds or updates permissions for the specified private image.
module Network.AWS.AppStream.UpdateImagePermissions

-- | <i>See:</i> <a>newUpdateImagePermissions</a> smart constructor.
data UpdateImagePermissions
UpdateImagePermissions' :: Text -> Text -> ImagePermissions -> UpdateImagePermissions

-- | The name of the private image.
[$sel:name:UpdateImagePermissions'] :: UpdateImagePermissions -> Text

-- | The 12-digit identifier of the AWS account for which you want add or
--   update image permissions.
[$sel:sharedAccountId:UpdateImagePermissions'] :: UpdateImagePermissions -> Text

-- | The permissions for the image.
[$sel:imagePermissions:UpdateImagePermissions'] :: UpdateImagePermissions -> ImagePermissions

-- | Create a value of <a>UpdateImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateImagePermissions'</a>,
--   <a>updateImagePermissions_name</a> - The name of the private image.
--   
--   <a>$sel:sharedAccountId:UpdateImagePermissions'</a>,
--   <a>updateImagePermissions_sharedAccountId</a> - The 12-digit
--   identifier of the AWS account for which you want add or update image
--   permissions.
--   
--   <a>$sel:imagePermissions:UpdateImagePermissions'</a>,
--   <a>updateImagePermissions_imagePermissions</a> - The permissions for
--   the image.
newUpdateImagePermissions :: Text -> Text -> ImagePermissions -> UpdateImagePermissions

-- | The name of the private image.
updateImagePermissions_name :: Lens' UpdateImagePermissions Text

-- | The 12-digit identifier of the AWS account for which you want add or
--   update image permissions.
updateImagePermissions_sharedAccountId :: Lens' UpdateImagePermissions Text

-- | The permissions for the image.
updateImagePermissions_imagePermissions :: Lens' UpdateImagePermissions ImagePermissions

-- | <i>See:</i> <a>newUpdateImagePermissionsResponse</a> smart
--   constructor.
data UpdateImagePermissionsResponse
UpdateImagePermissionsResponse' :: Int -> UpdateImagePermissionsResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateImagePermissionsResponse'] :: UpdateImagePermissionsResponse -> Int

-- | Create a value of <a>UpdateImagePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateImagePermissionsResponse'</a>,
--   <a>updateImagePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newUpdateImagePermissionsResponse :: Int -> UpdateImagePermissionsResponse

-- | The response's http status code.
updateImagePermissionsResponse_httpStatus :: Lens' UpdateImagePermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance GHC.Show.Show Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance GHC.Read.Read Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissionsResponse
instance GHC.Show.Show Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissionsResponse
instance GHC.Read.Read Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissionsResponse
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.UpdateImagePermissions.UpdateImagePermissions


-- | Updates the specified fields for the specified stack.
module Network.AWS.AppStream.UpdateStack

-- | <i>See:</i> <a>newUpdateStack</a> smart constructor.
data UpdateStack
UpdateStack' :: Maybe (NonEmpty UserSetting) -> Maybe (NonEmpty AccessEndpoint) -> Maybe Text -> Maybe ApplicationSettings -> Maybe [StorageConnector] -> Maybe Text -> Maybe Bool -> Maybe (NonEmpty Text) -> Maybe [StackAttribute] -> Maybe Text -> Maybe Text -> Text -> UpdateStack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
[$sel:userSettings:UpdateStack'] :: UpdateStack -> Maybe (NonEmpty UserSetting)

-- | The list of interface VPC endpoint (interface endpoint) objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
[$sel:accessEndpoints:UpdateStack'] :: UpdateStack -> Maybe (NonEmpty AccessEndpoint)

-- | The URL that users are redirected to after their streaming session
--   ends.
[$sel:redirectURL:UpdateStack'] :: UpdateStack -> Maybe Text

-- | The persistent application settings for users of a stack. When these
--   settings are enabled, changes that users make to applications and
--   Windows settings are automatically saved after each session and
--   applied to the next session.
[$sel:applicationSettings:UpdateStack'] :: UpdateStack -> Maybe ApplicationSettings

-- | The storage connectors to enable.
[$sel:storageConnectors:UpdateStack'] :: UpdateStack -> Maybe [StorageConnector]

-- | The description to display.
[$sel:description:UpdateStack'] :: UpdateStack -> Maybe Text

-- | Deletes the storage connectors currently enabled for the stack.
[$sel:deleteStorageConnectors:UpdateStack'] :: UpdateStack -> Maybe Bool

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
[$sel:embedHostDomains:UpdateStack'] :: UpdateStack -> Maybe (NonEmpty Text)

-- | The stack attributes to delete.
[$sel:attributesToDelete:UpdateStack'] :: UpdateStack -> Maybe [StackAttribute]

-- | The stack name to display.
[$sel:displayName:UpdateStack'] :: UpdateStack -> Maybe Text

-- | The URL that users are redirected to after they choose the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
[$sel:feedbackURL:UpdateStack'] :: UpdateStack -> Maybe Text

-- | The name of the stack.
[$sel:name:UpdateStack'] :: UpdateStack -> Text

-- | Create a value of <a>UpdateStack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userSettings:UpdateStack'</a>, <a>updateStack_userSettings</a>
--   - The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
--   
--   <a>$sel:accessEndpoints:UpdateStack'</a>,
--   <a>updateStack_accessEndpoints</a> - The list of interface VPC
--   endpoint (interface endpoint) objects. Users of the stack can connect
--   to AppStream 2.0 only through the specified endpoints.
--   
--   <a>$sel:redirectURL:UpdateStack'</a>, <a>updateStack_redirectURL</a> -
--   The URL that users are redirected to after their streaming session
--   ends.
--   
--   <a>$sel:applicationSettings:UpdateStack'</a>,
--   <a>updateStack_applicationSettings</a> - The persistent application
--   settings for users of a stack. When these settings are enabled,
--   changes that users make to applications and Windows settings are
--   automatically saved after each session and applied to the next
--   session.
--   
--   <a>$sel:storageConnectors:UpdateStack'</a>,
--   <a>updateStack_storageConnectors</a> - The storage connectors to
--   enable.
--   
--   <a>$sel:description:UpdateStack'</a>, <a>updateStack_description</a> -
--   The description to display.
--   
--   <a>$sel:deleteStorageConnectors:UpdateStack'</a>,
--   <a>updateStack_deleteStorageConnectors</a> - Deletes the storage
--   connectors currently enabled for the stack.
--   
--   <a>$sel:embedHostDomains:UpdateStack'</a>,
--   <a>updateStack_embedHostDomains</a> - The domains where AppStream 2.0
--   streaming sessions can be embedded in an iframe. You must approve the
--   domains that you want to host embedded AppStream 2.0 streaming
--   sessions.
--   
--   <a>$sel:attributesToDelete:UpdateStack'</a>,
--   <a>updateStack_attributesToDelete</a> - The stack attributes to
--   delete.
--   
--   <a>$sel:displayName:UpdateStack'</a>, <a>updateStack_displayName</a> -
--   The stack name to display.
--   
--   <a>$sel:feedbackURL:UpdateStack'</a>, <a>updateStack_feedbackURL</a> -
--   The URL that users are redirected to after they choose the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
--   
--   <a>$sel:name:UpdateStack'</a>, <a>updateStack_name</a> - The name of
--   the stack.
newUpdateStack :: Text -> UpdateStack

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
updateStack_userSettings :: Lens' UpdateStack (Maybe (NonEmpty UserSetting))

-- | The list of interface VPC endpoint (interface endpoint) objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
updateStack_accessEndpoints :: Lens' UpdateStack (Maybe (NonEmpty AccessEndpoint))

-- | The URL that users are redirected to after their streaming session
--   ends.
updateStack_redirectURL :: Lens' UpdateStack (Maybe Text)

-- | The persistent application settings for users of a stack. When these
--   settings are enabled, changes that users make to applications and
--   Windows settings are automatically saved after each session and
--   applied to the next session.
updateStack_applicationSettings :: Lens' UpdateStack (Maybe ApplicationSettings)

-- | The storage connectors to enable.
updateStack_storageConnectors :: Lens' UpdateStack (Maybe [StorageConnector])

-- | The description to display.
updateStack_description :: Lens' UpdateStack (Maybe Text)

-- | Deletes the storage connectors currently enabled for the stack.
updateStack_deleteStorageConnectors :: Lens' UpdateStack (Maybe Bool)

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
updateStack_embedHostDomains :: Lens' UpdateStack (Maybe (NonEmpty Text))

-- | The stack attributes to delete.
updateStack_attributesToDelete :: Lens' UpdateStack (Maybe [StackAttribute])

-- | The stack name to display.
updateStack_displayName :: Lens' UpdateStack (Maybe Text)

-- | The URL that users are redirected to after they choose the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
updateStack_feedbackURL :: Lens' UpdateStack (Maybe Text)

-- | The name of the stack.
updateStack_name :: Lens' UpdateStack Text

-- | <i>See:</i> <a>newUpdateStackResponse</a> smart constructor.
data UpdateStackResponse
UpdateStackResponse' :: Maybe Stack -> Int -> UpdateStackResponse

-- | Information about the stack.
[$sel:stack:UpdateStackResponse'] :: UpdateStackResponse -> Maybe Stack

-- | The response's http status code.
[$sel:httpStatus:UpdateStackResponse'] :: UpdateStackResponse -> Int

-- | Create a value of <a>UpdateStackResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stack:UpdateStackResponse'</a>,
--   <a>updateStackResponse_stack</a> - Information about the stack.
--   
--   <a>$sel:httpStatus:UpdateStackResponse'</a>,
--   <a>updateStackResponse_httpStatus</a> - The response's http status
--   code.
newUpdateStackResponse :: Int -> UpdateStackResponse

-- | Information about the stack.
updateStackResponse_stack :: Lens' UpdateStackResponse (Maybe Stack)

-- | The response's http status code.
updateStackResponse_httpStatus :: Lens' UpdateStackResponse Int
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateStack.UpdateStack
instance GHC.Show.Show Network.AWS.AppStream.UpdateStack.UpdateStack
instance GHC.Read.Read Network.AWS.AppStream.UpdateStack.UpdateStack
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateStack.UpdateStack
instance GHC.Generics.Generic Network.AWS.AppStream.UpdateStack.UpdateStackResponse
instance GHC.Show.Show Network.AWS.AppStream.UpdateStack.UpdateStackResponse
instance GHC.Read.Read Network.AWS.AppStream.UpdateStack.UpdateStackResponse
instance GHC.Classes.Eq Network.AWS.AppStream.UpdateStack.UpdateStackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AppStream.UpdateStack.UpdateStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateStack.UpdateStackResponse
instance Data.Hashable.Class.Hashable Network.AWS.AppStream.UpdateStack.UpdateStack
instance Control.DeepSeq.NFData Network.AWS.AppStream.UpdateStack.UpdateStack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AppStream.UpdateStack.UpdateStack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AppStream.UpdateStack.UpdateStack
instance Network.AWS.Data.Path.ToPath Network.AWS.AppStream.UpdateStack.UpdateStack
instance Network.AWS.Data.Query.ToQuery Network.AWS.AppStream.UpdateStack.UpdateStack


module Network.AWS.AppStream.Lens

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
listAssociatedStacks_nextToken :: Lens' ListAssociatedStacks (Maybe Text)

-- | The name of the fleet.
listAssociatedStacks_fleetName :: Lens' ListAssociatedStacks Text

-- | The name of the stack.
listAssociatedStacksResponse_names :: Lens' ListAssociatedStacksResponse (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
listAssociatedStacksResponse_nextToken :: Lens' ListAssociatedStacksResponse (Maybe Text)

-- | The response's http status code.
listAssociatedStacksResponse_httpStatus :: Lens' ListAssociatedStacksResponse Int

-- | The name of the image builder.
deleteImageBuilder_name :: Lens' DeleteImageBuilder Text

-- | Information about the image builder.
deleteImageBuilderResponse_imageBuilder :: Lens' DeleteImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
deleteImageBuilderResponse_httpStatus :: Lens' DeleteImageBuilderResponse Int

-- | The list of UserStackAssociation objects.
batchAssociateUserStack_userStackAssociations :: Lens' BatchAssociateUserStack (NonEmpty UserStackAssociation)

-- | The list of UserStackAssociationError objects.
batchAssociateUserStackResponse_errors :: Lens' BatchAssociateUserStackResponse (Maybe [UserStackAssociationError])

-- | The response's http status code.
batchAssociateUserStackResponse_httpStatus :: Lens' BatchAssociateUserStackResponse Int

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
listAssociatedFleets_nextToken :: Lens' ListAssociatedFleets (Maybe Text)

-- | The name of the stack.
listAssociatedFleets_stackName :: Lens' ListAssociatedFleets Text

-- | The name of the fleet.
listAssociatedFleetsResponse_names :: Lens' ListAssociatedFleetsResponse (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
listAssociatedFleetsResponse_nextToken :: Lens' ListAssociatedFleetsResponse (Maybe Text)

-- | The response's http status code.
listAssociatedFleetsResponse_httpStatus :: Lens' ListAssociatedFleetsResponse Int

-- | The response's http status code.
deleteUsageReportSubscriptionResponse_httpStatus :: Lens' DeleteUsageReportSubscriptionResponse Int

-- | The name of the fleet.
stopFleet_name :: Lens' StopFleet Text

-- | The response's http status code.
stopFleetResponse_httpStatus :: Lens' StopFleetResponse Int

-- | The name of the image builder.
stopImageBuilder_name :: Lens' StopImageBuilder Text

-- | Information about the image builder.
stopImageBuilderResponse_imageBuilder :: Lens' StopImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
stopImageBuilderResponse_httpStatus :: Lens' StopImageBuilderResponse Int

-- | The name of the fleet.
startFleet_name :: Lens' StartFleet Text

-- | The response's http status code.
startFleetResponse_httpStatus :: Lens' StartFleetResponse Int

-- | The version of the AppStream 2.0 agent to use for this image builder.
--   To use the latest version of the AppStream 2.0 agent, specify
--   [LATEST].
startImageBuilder_appstreamAgentVersion :: Lens' StartImageBuilder (Maybe Text)

-- | The name of the image builder.
startImageBuilder_name :: Lens' StartImageBuilder Text

-- | Information about the image builder.
startImageBuilderResponse_imageBuilder :: Lens' StartImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
startImageBuilderResponse_httpStatus :: Lens' StartImageBuilderResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys for the tags to disassociate.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to associate. A tag is a key-value pair, and the value is
--   optional. For example, Environment=Test. If you do not specify a
--   value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The names of the fleets to describe.
describeFleets_names :: Lens' DescribeFleets (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeFleets_nextToken :: Lens' DescribeFleets (Maybe Text)

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeFleetsResponse_nextToken :: Lens' DescribeFleetsResponse (Maybe Text)

-- | Information about the fleets.
describeFleetsResponse_fleets :: Lens' DescribeFleetsResponse (Maybe [Fleet])

-- | The response's http status code.
describeFleetsResponse_httpStatus :: Lens' DescribeFleetsResponse Int

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeSessions_nextToken :: Lens' DescribeSessions (Maybe Text)

-- | The user identifier (ID). If you specify a user ID, you must also
--   specify the authentication type.
describeSessions_userId :: Lens' DescribeSessions (Maybe Text)

-- | The authentication method. Specify <tt>API</tt> for a user
--   authenticated using a streaming URL or <tt>SAML</tt> for a SAML
--   federated user. The default is to authenticate users using a streaming
--   URL.
describeSessions_authenticationType :: Lens' DescribeSessions (Maybe AuthenticationType)

-- | The size of each page of results. The default value is 20 and the
--   maximum value is 50.
describeSessions_limit :: Lens' DescribeSessions (Maybe Int)

-- | The name of the stack. This value is case-sensitive.
describeSessions_stackName :: Lens' DescribeSessions Text

-- | The name of the fleet. This value is case-sensitive.
describeSessions_fleetName :: Lens' DescribeSessions Text

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeSessionsResponse_nextToken :: Lens' DescribeSessionsResponse (Maybe Text)

-- | Information about the streaming sessions.
describeSessionsResponse_sessions :: Lens' DescribeSessionsResponse (Maybe [Session])

-- | The response's http status code.
describeSessionsResponse_httpStatus :: Lens' DescribeSessionsResponse Int

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
enableUser_userName :: Lens' EnableUser Text

-- | The authentication type for the user. You must specify USERPOOL.
enableUser_authenticationType :: Lens' EnableUser AuthenticationType

-- | The response's http status code.
enableUserResponse_httpStatus :: Lens' EnableUserResponse Int

-- | The names of the stacks to describe.
describeStacks_names :: Lens' DescribeStacks (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeStacks_nextToken :: Lens' DescribeStacks (Maybe Text)

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeStacksResponse_nextToken :: Lens' DescribeStacksResponse (Maybe Text)

-- | Information about the stacks.
describeStacksResponse_stacks :: Lens' DescribeStacksResponse (Maybe [Stack])

-- | The response's http status code.
describeStacksResponse_httpStatus :: Lens' DescribeStacksResponse Int

-- | The action to take for the welcome email that is sent to a user after
--   the user is created in the user pool. If you specify SUPPRESS, no
--   email is sent. If you specify RESEND, do not specify the first name or
--   last name of the user. If the value is null, the email is sent.
--   
--   The temporary password in the welcome email is valid for only 7 days.
--   If users don’t set their passwords within 7 days, you must send them a
--   new welcome email.
createUser_messageAction :: Lens' CreateUser (Maybe MessageAction)

-- | The last name, or surname, of the user.
createUser_lastName :: Lens' CreateUser (Maybe Text)

-- | The first name, or given name, of the user.
createUser_firstName :: Lens' CreateUser (Maybe Text)

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
createUser_userName :: Lens' CreateUser Text

-- | The authentication type for the user. You must specify USERPOOL.
createUser_authenticationType :: Lens' CreateUser AuthenticationType

-- | The response's http status code.
createUserResponse_httpStatus :: Lens' CreateUserResponse Int

-- | The name of the directory configuration.
deleteDirectoryConfig_directoryName :: Lens' DeleteDirectoryConfig Text

-- | The response's http status code.
deleteDirectoryConfigResponse_httpStatus :: Lens' DeleteDirectoryConfigResponse Int

-- | The description that the image will have when it is copied to the
--   destination.
copyImage_destinationImageDescription :: Lens' CopyImage (Maybe Text)

-- | The name of the image to copy.
copyImage_sourceImageName :: Lens' CopyImage Text

-- | The name that the image will have when it is copied to the
--   destination.
copyImage_destinationImageName :: Lens' CopyImage Text

-- | The destination region to which the image will be copied. This
--   parameter is required, even if you are copying an image within the
--   same region.
copyImage_destinationRegion :: Lens' CopyImage Text

-- | The name of the destination image.
copyImageResponse_destinationImageName :: Lens' CopyImageResponse (Maybe Text)

-- | The response's http status code.
copyImageResponse_httpStatus :: Lens' CopyImageResponse Int

-- | The VPC configuration for the image builder. You can specify only one
--   subnet.
createImageBuilder_vpcConfig :: Lens' CreateImageBuilder (Maybe VpcConfig)

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the image
--   builder. To assume a role, the image builder calls the AWS Security
--   Token Service (STS) <tt>AssumeRole</tt> API operation and passes the
--   ARN of the role to use. The operation creates a new session with
--   temporary credentials. AppStream 2.0 retrieves the temporary
--   credentials and creates the <b>appstream_machine_role</b> credential
--   profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
createImageBuilder_iamRoleArn :: Lens' CreateImageBuilder (Maybe Text)

-- | The list of interface VPC endpoint (interface endpoint) objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
createImageBuilder_accessEndpoints :: Lens' CreateImageBuilder (Maybe (NonEmpty AccessEndpoint))

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
createImageBuilder_domainJoinInfo :: Lens' CreateImageBuilder (Maybe DomainJoinInfo)

-- | The name of the image used to create the image builder.
createImageBuilder_imageName :: Lens' CreateImageBuilder (Maybe Text)

-- | The tags to associate with the image builder. A tag is a key-value
--   pair, and the value is optional. For example, Environment=Test. If you
--   do not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
createImageBuilder_tags :: Lens' CreateImageBuilder (Maybe (HashMap Text Text))

-- | The version of the AppStream 2.0 agent to use for this image builder.
--   To use the latest version of the AppStream 2.0 agent, specify
--   [LATEST].
createImageBuilder_appstreamAgentVersion :: Lens' CreateImageBuilder (Maybe Text)

-- | The description to display.
createImageBuilder_description :: Lens' CreateImageBuilder (Maybe Text)

-- | Enables or disables default internet access for the image builder.
createImageBuilder_enableDefaultInternetAccess :: Lens' CreateImageBuilder (Maybe Bool)

-- | The image builder name to display.
createImageBuilder_displayName :: Lens' CreateImageBuilder (Maybe Text)

-- | The ARN of the public, private, or shared image to use.
createImageBuilder_imageArn :: Lens' CreateImageBuilder (Maybe Text)

-- | A unique name for the image builder.
createImageBuilder_name :: Lens' CreateImageBuilder Text

-- | The instance type to use when launching the image builder. The
--   following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
createImageBuilder_instanceType :: Lens' CreateImageBuilder Text

-- | Information about the image builder.
createImageBuilderResponse_imageBuilder :: Lens' CreateImageBuilderResponse (Maybe ImageBuilder)

-- | The response's http status code.
createImageBuilderResponse_httpStatus :: Lens' CreateImageBuilderResponse Int

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
createStack_userSettings :: Lens' CreateStack (Maybe (NonEmpty UserSetting))

-- | The list of interface VPC endpoint (interface endpoint) objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
createStack_accessEndpoints :: Lens' CreateStack (Maybe (NonEmpty AccessEndpoint))

-- | The URL that users are redirected to after their streaming session
--   ends.
createStack_redirectURL :: Lens' CreateStack (Maybe Text)

-- | The persistent application settings for users of a stack. When these
--   settings are enabled, changes that users make to applications and
--   Windows settings are automatically saved after each session and
--   applied to the next session.
createStack_applicationSettings :: Lens' CreateStack (Maybe ApplicationSettings)

-- | The tags to associate with the stack. A tag is a key-value pair, and
--   the value is optional. For example, Environment=Test. If you do not
--   specify a value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
createStack_tags :: Lens' CreateStack (Maybe (HashMap Text Text))

-- | The storage connectors to enable.
createStack_storageConnectors :: Lens' CreateStack (Maybe [StorageConnector])

-- | The description to display.
createStack_description :: Lens' CreateStack (Maybe Text)

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
createStack_embedHostDomains :: Lens' CreateStack (Maybe (NonEmpty Text))

-- | The stack name to display.
createStack_displayName :: Lens' CreateStack (Maybe Text)

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
createStack_feedbackURL :: Lens' CreateStack (Maybe Text)

-- | The name of the stack.
createStack_name :: Lens' CreateStack Text

-- | Information about the stack.
createStackResponse_stack :: Lens' CreateStackResponse (Maybe Stack)

-- | The response's http status code.
createStackResponse_httpStatus :: Lens' CreateStackResponse Int

-- | The amount of time that a streaming session remains active after users
--   disconnect. If users try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
createFleet_disconnectTimeoutInSeconds :: Lens' CreateFleet (Maybe Int)

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
createFleet_maxUserDurationInSeconds :: Lens' CreateFleet (Maybe Int)

-- | The VPC configuration for the fleet.
createFleet_vpcConfig :: Lens' CreateFleet (Maybe VpcConfig)

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
createFleet_iamRoleArn :: Lens' CreateFleet (Maybe Text)

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
createFleet_domainJoinInfo :: Lens' CreateFleet (Maybe DomainJoinInfo)

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
createFleet_fleetType :: Lens' CreateFleet (Maybe FleetType)

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If they try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
createFleet_idleDisconnectTimeoutInSeconds :: Lens' CreateFleet (Maybe Int)

-- | The name of the image used to create the fleet.
createFleet_imageName :: Lens' CreateFleet (Maybe Text)

-- | The tags to associate with the fleet. A tag is a key-value pair, and
--   the value is optional. For example, Environment=Test. If you do not
--   specify a value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information, see <a>Tagging Your Resources</a> in the
--   <i>Amazon AppStream 2.0 Administration Guide</i>.
createFleet_tags :: Lens' CreateFleet (Maybe (HashMap Text Text))

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
createFleet_streamView :: Lens' CreateFleet (Maybe StreamView)

-- | The description to display.
createFleet_description :: Lens' CreateFleet (Maybe Text)

-- | Enables or disables default internet access for the fleet.
createFleet_enableDefaultInternetAccess :: Lens' CreateFleet (Maybe Bool)

-- | The fleet name to display.
createFleet_displayName :: Lens' CreateFleet (Maybe Text)

-- | The ARN of the public, private, or shared image to use.
createFleet_imageArn :: Lens' CreateFleet (Maybe Text)

-- | A unique name for the fleet.
createFleet_name :: Lens' CreateFleet Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
createFleet_instanceType :: Lens' CreateFleet Text

-- | The desired capacity for the fleet.
createFleet_computeCapacity :: Lens' CreateFleet ComputeCapacity

-- | Information about the fleet.
createFleetResponse_fleet :: Lens' CreateFleetResponse (Maybe Fleet)

-- | The response's http status code.
createFleetResponse_httpStatus :: Lens' CreateFleetResponse Int

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
updateDirectoryConfig_serviceAccountCredentials :: Lens' UpdateDirectoryConfig (Maybe ServiceAccountCredentials)

-- | The distinguished names of the organizational units for computer
--   accounts.
updateDirectoryConfig_organizationalUnitDistinguishedNames :: Lens' UpdateDirectoryConfig (Maybe [Text])

-- | The name of the Directory Config object.
updateDirectoryConfig_directoryName :: Lens' UpdateDirectoryConfig Text

-- | Information about the Directory Config object.
updateDirectoryConfigResponse_directoryConfig :: Lens' UpdateDirectoryConfigResponse (Maybe DirectoryConfig)

-- | The response's http status code.
updateDirectoryConfigResponse_httpStatus :: Lens' UpdateDirectoryConfigResponse Int

-- | The name of the fleet.
associateFleet_fleetName :: Lens' AssociateFleet Text

-- | The name of the stack.
associateFleet_stackName :: Lens' AssociateFleet Text

-- | The response's http status code.
associateFleetResponse_httpStatus :: Lens' AssociateFleetResponse Int

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
createDirectoryConfig_serviceAccountCredentials :: Lens' CreateDirectoryConfig (Maybe ServiceAccountCredentials)

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
createDirectoryConfig_directoryName :: Lens' CreateDirectoryConfig Text

-- | The distinguished names of the organizational units for computer
--   accounts.
createDirectoryConfig_organizationalUnitDistinguishedNames :: Lens' CreateDirectoryConfig [Text]

-- | Information about the directory configuration.
createDirectoryConfigResponse_directoryConfig :: Lens' CreateDirectoryConfigResponse (Maybe DirectoryConfig)

-- | The response's http status code.
createDirectoryConfigResponse_httpStatus :: Lens' CreateDirectoryConfigResponse Int

-- | The name of the stack.
deleteStack_name :: Lens' DeleteStack Text

-- | The response's http status code.
deleteStackResponse_httpStatus :: Lens' DeleteStackResponse Int

-- | The name of the fleet.
deleteFleet_name :: Lens' DeleteFleet Text

-- | The response's http status code.
deleteFleetResponse_httpStatus :: Lens' DeleteFleetResponse Int

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
updateStack_userSettings :: Lens' UpdateStack (Maybe (NonEmpty UserSetting))

-- | The list of interface VPC endpoint (interface endpoint) objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
updateStack_accessEndpoints :: Lens' UpdateStack (Maybe (NonEmpty AccessEndpoint))

-- | The URL that users are redirected to after their streaming session
--   ends.
updateStack_redirectURL :: Lens' UpdateStack (Maybe Text)

-- | The persistent application settings for users of a stack. When these
--   settings are enabled, changes that users make to applications and
--   Windows settings are automatically saved after each session and
--   applied to the next session.
updateStack_applicationSettings :: Lens' UpdateStack (Maybe ApplicationSettings)

-- | The storage connectors to enable.
updateStack_storageConnectors :: Lens' UpdateStack (Maybe [StorageConnector])

-- | The description to display.
updateStack_description :: Lens' UpdateStack (Maybe Text)

-- | Deletes the storage connectors currently enabled for the stack.
updateStack_deleteStorageConnectors :: Lens' UpdateStack (Maybe Bool)

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
updateStack_embedHostDomains :: Lens' UpdateStack (Maybe (NonEmpty Text))

-- | The stack attributes to delete.
updateStack_attributesToDelete :: Lens' UpdateStack (Maybe [StackAttribute])

-- | The stack name to display.
updateStack_displayName :: Lens' UpdateStack (Maybe Text)

-- | The URL that users are redirected to after they choose the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
updateStack_feedbackURL :: Lens' UpdateStack (Maybe Text)

-- | The name of the stack.
updateStack_name :: Lens' UpdateStack Text

-- | Information about the stack.
updateStackResponse_stack :: Lens' UpdateStackResponse (Maybe Stack)

-- | The response's http status code.
updateStackResponse_httpStatus :: Lens' UpdateStackResponse Int

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeUsers_nextToken :: Lens' DescribeUsers (Maybe Text)

-- | The maximum size of each page of results.
describeUsers_maxResults :: Lens' DescribeUsers (Maybe Int)

-- | The authentication type for the users in the user pool to describe.
--   You must specify USERPOOL.
describeUsers_authenticationType :: Lens' DescribeUsers AuthenticationType

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeUsersResponse_nextToken :: Lens' DescribeUsersResponse (Maybe Text)

-- | Information about users in the user pool.
describeUsersResponse_users :: Lens' DescribeUsersResponse (Maybe [User])

-- | The response's http status code.
describeUsersResponse_httpStatus :: Lens' DescribeUsersResponse Int

-- | The amount of time that a streaming session remains active after users
--   disconnect. If users try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
updateFleet_disconnectTimeoutInSeconds :: Lens' UpdateFleet (Maybe Int)

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
updateFleet_maxUserDurationInSeconds :: Lens' UpdateFleet (Maybe Int)

-- | The VPC configuration for the fleet.
updateFleet_vpcConfig :: Lens' UpdateFleet (Maybe VpcConfig)

-- | The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
updateFleet_iamRoleArn :: Lens' UpdateFleet (Maybe Text)

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
updateFleet_domainJoinInfo :: Lens' UpdateFleet (Maybe DomainJoinInfo)

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
updateFleet_instanceType :: Lens' UpdateFleet (Maybe Text)

-- | The desired capacity for the fleet.
updateFleet_computeCapacity :: Lens' UpdateFleet (Maybe ComputeCapacity)

-- | Deletes the VPC association for the specified fleet.
updateFleet_deleteVpcConfig :: Lens' UpdateFleet (Maybe Bool)

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
updateFleet_idleDisconnectTimeoutInSeconds :: Lens' UpdateFleet (Maybe Int)

-- | The name of the image used to create the fleet.
updateFleet_imageName :: Lens' UpdateFleet (Maybe Text)

-- | A unique name for the fleet.
updateFleet_name :: Lens' UpdateFleet (Maybe Text)

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
updateFleet_streamView :: Lens' UpdateFleet (Maybe StreamView)

-- | The description to display.
updateFleet_description :: Lens' UpdateFleet (Maybe Text)

-- | Enables or disables default internet access for the fleet.
updateFleet_enableDefaultInternetAccess :: Lens' UpdateFleet (Maybe Bool)

-- | The fleet attributes to delete.
updateFleet_attributesToDelete :: Lens' UpdateFleet (Maybe [FleetAttribute])

-- | The fleet name to display.
updateFleet_displayName :: Lens' UpdateFleet (Maybe Text)

-- | The ARN of the public, private, or shared image to use.
updateFleet_imageArn :: Lens' UpdateFleet (Maybe Text)

-- | Information about the fleet.
updateFleetResponse_fleet :: Lens' UpdateFleetResponse (Maybe Fleet)

-- | The response's http status code.
updateFleetResponse_httpStatus :: Lens' UpdateFleetResponse Int

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
createUsageReportSubscriptionResponse_s3BucketName :: Lens' CreateUsageReportSubscriptionResponse (Maybe Text)

-- | The schedule for generating usage reports.
createUsageReportSubscriptionResponse_schedule :: Lens' CreateUsageReportSubscriptionResponse (Maybe UsageReportSchedule)

-- | The response's http status code.
createUsageReportSubscriptionResponse_httpStatus :: Lens' CreateUsageReportSubscriptionResponse Int

-- | The name of the fleet.
disassociateFleet_fleetName :: Lens' DisassociateFleet Text

-- | The name of the stack.
disassociateFleet_stackName :: Lens' DisassociateFleet Text

-- | The response's http status code.
disassociateFleetResponse_httpStatus :: Lens' DisassociateFleetResponse Int

-- | The list of UserStackAssociation objects.
batchDisassociateUserStack_userStackAssociations :: Lens' BatchDisassociateUserStack (NonEmpty UserStackAssociation)

-- | The list of UserStackAssociationError objects.
batchDisassociateUserStackResponse_errors :: Lens' BatchDisassociateUserStackResponse (Maybe [UserStackAssociationError])

-- | The response's http status code.
batchDisassociateUserStackResponse_httpStatus :: Lens' BatchDisassociateUserStackResponse Int

-- | The names of the public or private images to describe.
describeImages_names :: Lens' DescribeImages (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeImages_nextToken :: Lens' DescribeImages (Maybe Text)

-- | The maximum size of each page of results.
describeImages_maxResults :: Lens' DescribeImages (Maybe Natural)

-- | The ARNs of the public, private, and shared images to describe.
describeImages_arns :: Lens' DescribeImages (Maybe [Text])

-- | The type of image (public, private, or shared) to describe.
describeImages_type :: Lens' DescribeImages (Maybe VisibilityType)

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeImagesResponse_nextToken :: Lens' DescribeImagesResponse (Maybe Text)

-- | Information about the images.
describeImagesResponse_images :: Lens' DescribeImagesResponse (Maybe [Image])

-- | The response's http status code.
describeImagesResponse_httpStatus :: Lens' DescribeImagesResponse Int

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeUsageReportSubscriptions_nextToken :: Lens' DescribeUsageReportSubscriptions (Maybe Text)

-- | The maximum size of each page of results.
describeUsageReportSubscriptions_maxResults :: Lens' DescribeUsageReportSubscriptions (Maybe Int)

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeUsageReportSubscriptionsResponse_nextToken :: Lens' DescribeUsageReportSubscriptionsResponse (Maybe Text)

-- | Information about the usage report subscription.
describeUsageReportSubscriptionsResponse_usageReportSubscriptions :: Lens' DescribeUsageReportSubscriptionsResponse (Maybe [UsageReportSubscription])

-- | The response's http status code.
describeUsageReportSubscriptionsResponse_httpStatus :: Lens' DescribeUsageReportSubscriptionsResponse Int

-- | The name of the private image.
updateImagePermissions_name :: Lens' UpdateImagePermissions Text

-- | The 12-digit identifier of the AWS account for which you want add or
--   update image permissions.
updateImagePermissions_sharedAccountId :: Lens' UpdateImagePermissions Text

-- | The permissions for the image.
updateImagePermissions_imagePermissions :: Lens' UpdateImagePermissions ImagePermissions

-- | The response's http status code.
updateImagePermissionsResponse_httpStatus :: Lens' UpdateImagePermissionsResponse Int

-- | The name to display for the new image.
createUpdatedImage_newImageDisplayName :: Lens' CreateUpdatedImage (Maybe Text)

-- | Indicates whether to display the status of image update availability
--   before AppStream 2.0 initiates the process of creating a new updated
--   image. If this value is set to <tt>true</tt>, AppStream 2.0 displays
--   whether image updates are available. If this value is set to
--   <tt>false</tt>, AppStream 2.0 initiates the process of creating a new
--   updated image without displaying whether image updates are available.
createUpdatedImage_dryRun :: Lens' CreateUpdatedImage (Maybe Bool)

-- | The description to display for the new image.
createUpdatedImage_newImageDescription :: Lens' CreateUpdatedImage (Maybe Text)

-- | The tags to associate with the new image. A tag is a key-value pair,
--   and the value is optional. For example, Environment=Test. If you do
--   not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
createUpdatedImage_newImageTags :: Lens' CreateUpdatedImage (Maybe (HashMap Text Text))

-- | The name of the image to update.
createUpdatedImage_existingImageName :: Lens' CreateUpdatedImage Text

-- | The name of the new image. The name must be unique within the AWS
--   account and Region.
createUpdatedImage_newImageName :: Lens' CreateUpdatedImage Text

-- | Undocumented member.
createUpdatedImageResponse_image :: Lens' CreateUpdatedImageResponse (Maybe Image)

-- | Indicates whether a new image can be created.
createUpdatedImageResponse_canUpdateImage :: Lens' CreateUpdatedImageResponse (Maybe Bool)

-- | The response's http status code.
createUpdatedImageResponse_httpStatus :: Lens' CreateUpdatedImageResponse Int

-- | The name of the image.
deleteImage_name :: Lens' DeleteImage Text

-- | Information about the image.
deleteImageResponse_image :: Lens' DeleteImageResponse (Maybe Image)

-- | The response's http status code.
deleteImageResponse_httpStatus :: Lens' DeleteImageResponse Int

-- | The name of the private image.
deleteImagePermissions_name :: Lens' DeleteImagePermissions Text

-- | The 12-digit identifier of the AWS account for which to delete image
--   permissions.
deleteImagePermissions_sharedAccountId :: Lens' DeleteImagePermissions Text

-- | The response's http status code.
deleteImagePermissionsResponse_httpStatus :: Lens' DeleteImagePermissionsResponse Int

-- | The name of the application to launch after the session starts. This
--   is the name that you specified as <b>Name</b> in the Image Assistant.
--   If your fleet is enabled for the <b>Desktop</b> stream view, you can
--   also choose to launch directly to the operating system desktop. To do
--   so, specify <b>Desktop</b>.
createStreamingURL_applicationId :: Lens' CreateStreamingURL (Maybe Text)

-- | The session context. For more information, see <a>Session Context</a>
--   in the <i>Amazon AppStream 2.0 Administration Guide</i>.
createStreamingURL_sessionContext :: Lens' CreateStreamingURL (Maybe Text)

-- | The time that the streaming URL will be valid, in seconds. Specify a
--   value between 1 and 604800 seconds. The default is 60 seconds.
createStreamingURL_validity :: Lens' CreateStreamingURL (Maybe Integer)

-- | The name of the stack.
createStreamingURL_stackName :: Lens' CreateStreamingURL Text

-- | The name of the fleet.
createStreamingURL_fleetName :: Lens' CreateStreamingURL Text

-- | The identifier of the user.
createStreamingURL_userId :: Lens' CreateStreamingURL Text

-- | The URL to start the AppStream 2.0 streaming session.
createStreamingURLResponse_streamingURL :: Lens' CreateStreamingURLResponse (Maybe Text)

-- | The elapsed time, in seconds after the Unix epoch, when this URL
--   expires.
createStreamingURLResponse_expires :: Lens' CreateStreamingURLResponse (Maybe UTCTime)

-- | The response's http status code.
createStreamingURLResponse_httpStatus :: Lens' CreateStreamingURLResponse Int

-- | The names of the image builders to describe.
describeImageBuilders_names :: Lens' DescribeImageBuilders (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeImageBuilders_nextToken :: Lens' DescribeImageBuilders (Maybe Text)

-- | The maximum size of each page of results.
describeImageBuilders_maxResults :: Lens' DescribeImageBuilders (Maybe Int)

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeImageBuildersResponse_nextToken :: Lens' DescribeImageBuildersResponse (Maybe Text)

-- | Information about the image builders.
describeImageBuildersResponse_imageBuilders :: Lens' DescribeImageBuildersResponse (Maybe [ImageBuilder])

-- | The response's http status code.
describeImageBuildersResponse_httpStatus :: Lens' DescribeImageBuildersResponse Int

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeUserStackAssociations_nextToken :: Lens' DescribeUserStackAssociations (Maybe Text)

-- | The name of the stack that is associated with the user.
describeUserStackAssociations_stackName :: Lens' DescribeUserStackAssociations (Maybe Text)

-- | The maximum size of each page of results.
describeUserStackAssociations_maxResults :: Lens' DescribeUserStackAssociations (Maybe Natural)

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
describeUserStackAssociations_userName :: Lens' DescribeUserStackAssociations (Maybe Text)

-- | The authentication type for the user who is associated with the stack.
--   You must specify USERPOOL.
describeUserStackAssociations_authenticationType :: Lens' DescribeUserStackAssociations (Maybe AuthenticationType)

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeUserStackAssociationsResponse_nextToken :: Lens' DescribeUserStackAssociationsResponse (Maybe Text)

-- | The UserStackAssociation objects.
describeUserStackAssociationsResponse_userStackAssociations :: Lens' DescribeUserStackAssociationsResponse (Maybe (NonEmpty UserStackAssociation))

-- | The response's http status code.
describeUserStackAssociationsResponse_httpStatus :: Lens' DescribeUserStackAssociationsResponse Int

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
deleteUser_userName :: Lens' DeleteUser Text

-- | The authentication type for the user. You must specify USERPOOL.
deleteUser_authenticationType :: Lens' DeleteUser AuthenticationType

-- | The response's http status code.
deleteUserResponse_httpStatus :: Lens' DeleteUserResponse Int

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
disableUser_userName :: Lens' DisableUser Text

-- | The authentication type for the user. You must specify USERPOOL.
disableUser_authenticationType :: Lens' DisableUser AuthenticationType

-- | The response's http status code.
disableUserResponse_httpStatus :: Lens' DisableUserResponse Int

-- | The time that the streaming URL will be valid, in seconds. Specify a
--   value between 1 and 604800 seconds. The default is 3600 seconds.
createImageBuilderStreamingURL_validity :: Lens' CreateImageBuilderStreamingURL (Maybe Integer)

-- | The name of the image builder.
createImageBuilderStreamingURL_name :: Lens' CreateImageBuilderStreamingURL Text

-- | The URL to start the AppStream 2.0 streaming session.
createImageBuilderStreamingURLResponse_streamingURL :: Lens' CreateImageBuilderStreamingURLResponse (Maybe Text)

-- | The elapsed time, in seconds after the Unix epoch, when this URL
--   expires.
createImageBuilderStreamingURLResponse_expires :: Lens' CreateImageBuilderStreamingURLResponse (Maybe UTCTime)

-- | The response's http status code.
createImageBuilderStreamingURLResponse_httpStatus :: Lens' CreateImageBuilderStreamingURLResponse Int

-- | The identifier of the streaming session.
expireSession_sessionId :: Lens' ExpireSession Text

-- | The response's http status code.
expireSessionResponse_httpStatus :: Lens' ExpireSessionResponse Int

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeDirectoryConfigs_nextToken :: Lens' DescribeDirectoryConfigs (Maybe Text)

-- | The maximum size of each page of results.
describeDirectoryConfigs_maxResults :: Lens' DescribeDirectoryConfigs (Maybe Int)

-- | The directory names.
describeDirectoryConfigs_directoryNames :: Lens' DescribeDirectoryConfigs (Maybe [Text])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeDirectoryConfigsResponse_nextToken :: Lens' DescribeDirectoryConfigsResponse (Maybe Text)

-- | Information about the directory configurations. Note that although the
--   response syntax in this topic includes the account password, this
--   password is not returned in the actual response.
describeDirectoryConfigsResponse_directoryConfigs :: Lens' DescribeDirectoryConfigsResponse (Maybe [DirectoryConfig])

-- | The response's http status code.
describeDirectoryConfigsResponse_httpStatus :: Lens' DescribeDirectoryConfigsResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The information about the tags.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
describeImagePermissions_nextToken :: Lens' DescribeImagePermissions (Maybe Text)

-- | The maximum size of each page of results.
describeImagePermissions_maxResults :: Lens' DescribeImagePermissions (Maybe Natural)

-- | The 12-digit identifier of one or more AWS accounts with which the
--   image is shared.
describeImagePermissions_sharedAwsAccountIds :: Lens' DescribeImagePermissions (Maybe (NonEmpty Text))

-- | The name of the private image for which to describe permissions. The
--   image must be one that you own.
describeImagePermissions_name :: Lens' DescribeImagePermissions Text

-- | The permissions for a private image that you own.
describeImagePermissionsResponse_sharedImagePermissionsList :: Lens' DescribeImagePermissionsResponse (Maybe [SharedImagePermissions])

-- | The pagination token to use to retrieve the next page of results for
--   this operation. If there are no more pages, this value is null.
describeImagePermissionsResponse_nextToken :: Lens' DescribeImagePermissionsResponse (Maybe Text)

-- | The name of the private image.
describeImagePermissionsResponse_name :: Lens' DescribeImagePermissionsResponse (Maybe Text)

-- | The response's http status code.
describeImagePermissionsResponse_httpStatus :: Lens' DescribeImagePermissionsResponse Int

-- | The identifier (ID) of the VPC in which the interface endpoint is
--   used.
accessEndpoint_vpceId :: Lens' AccessEndpoint (Maybe Text)

-- | The type of interface endpoint.
accessEndpoint_endpointType :: Lens' AccessEndpoint AccessEndpointType

-- | The URL for the application icon. This URL might be time-limited.
application_iconURL :: Lens' Application (Maybe Text)

-- | The path to the application executable in the instance.
application_launchPath :: Lens' Application (Maybe Text)

-- | Additional attributes that describe the application.
application_metadata :: Lens' Application (Maybe (HashMap Text Text))

-- | If there is a problem, the application can be disabled after image
--   creation.
application_enabled :: Lens' Application (Maybe Bool)

-- | The name of the application.
application_name :: Lens' Application (Maybe Text)

-- | The arguments that are passed to the application at launch.
application_launchParameters :: Lens' Application (Maybe Text)

-- | The application name to display.
application_displayName :: Lens' Application (Maybe Text)

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored. You can allow the same persistent application
--   settings to be used across multiple stacks by specifying the same
--   settings group for each stack.
applicationSettings_settingsGroup :: Lens' ApplicationSettings (Maybe Text)

-- | Enables or disables persistent application settings for users during
--   their streaming sessions.
applicationSettings_enabled :: Lens' ApplicationSettings Bool

-- | Specifies whether persistent application settings are enabled for
--   users during their streaming sessions.
applicationSettingsResponse_enabled :: Lens' ApplicationSettingsResponse (Maybe Bool)

-- | The path prefix for the S3 bucket where users’ persistent application
--   settings are stored.
applicationSettingsResponse_settingsGroup :: Lens' ApplicationSettingsResponse (Maybe Text)

-- | The S3 bucket where users’ persistent application settings are stored.
--   When persistent application settings are enabled for the first time
--   for an account in an AWS Region, an S3 bucket is created. The bucket
--   is unique to the AWS account and the Region.
applicationSettingsResponse_s3BucketName :: Lens' ApplicationSettingsResponse (Maybe Text)

-- | The desired number of streaming instances.
computeCapacity_desiredInstances :: Lens' ComputeCapacity Int

-- | The total number of simultaneous streaming instances that are running.
computeCapacityStatus_running :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The number of currently available instances that can be used to stream
--   sessions.
computeCapacityStatus_available :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The number of instances in use for streaming.
computeCapacityStatus_inUse :: Lens' ComputeCapacityStatus (Maybe Int)

-- | The desired number of streaming instances.
computeCapacityStatus_desired :: Lens' ComputeCapacityStatus Int

-- | The credentials for the service account used by the fleet or image
--   builder to connect to the directory.
directoryConfig_serviceAccountCredentials :: Lens' DirectoryConfig (Maybe ServiceAccountCredentials)

-- | The time the directory configuration was created.
directoryConfig_createdTime :: Lens' DirectoryConfig (Maybe UTCTime)

-- | The distinguished names of the organizational units for computer
--   accounts.
directoryConfig_organizationalUnitDistinguishedNames :: Lens' DirectoryConfig (Maybe [Text])

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
directoryConfig_directoryName :: Lens' DirectoryConfig Text

-- | The distinguished name of the organizational unit for computer
--   accounts.
domainJoinInfo_organizationalUnitDistinguishedName :: Lens' DomainJoinInfo (Maybe Text)

-- | The fully qualified name of the directory (for example,
--   corp.example.com).
domainJoinInfo_directoryName :: Lens' DomainJoinInfo (Maybe Text)

-- | The amount of time that a streaming session remains active after users
--   disconnect. If they try to reconnect to the streaming session after a
--   disconnection or network interruption within this time interval, they
--   are connected to their previous session. Otherwise, they are connected
--   to a new session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
fleet_disconnectTimeoutInSeconds :: Lens' Fleet (Maybe Int)

-- | The maximum amount of time that a streaming session can remain active,
--   in seconds. If users are still connected to a streaming instance five
--   minutes before this limit is reached, they are prompted to save any
--   open documents before being disconnected. After this time elapses, the
--   instance is terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
fleet_maxUserDurationInSeconds :: Lens' Fleet (Maybe Int)

-- | The VPC configuration for the fleet.
fleet_vpcConfig :: Lens' Fleet (Maybe VpcConfig)

-- | The ARN of the IAM role that is applied to the fleet. To assume a
--   role, the fleet instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
fleet_iamRoleArn :: Lens' Fleet (Maybe Text)

-- | The name of the directory and organizational unit (OU) to use to join
--   the fleet to a Microsoft Active Directory domain.
fleet_domainJoinInfo :: Lens' Fleet (Maybe DomainJoinInfo)

-- | The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
fleet_fleetType :: Lens' Fleet (Maybe FleetType)

-- | The amount of time that users can be idle (inactive) before they are
--   disconnected from their streaming session and the
--   <tt>DisconnectTimeoutInSeconds</tt> time interval begins. Users are
--   notified before they are disconnected due to inactivity. If users try
--   to reconnect to the streaming session before the time interval
--   specified in <tt>DisconnectTimeoutInSeconds</tt> elapses, they are
--   connected to their previous session. Users are considered idle when
--   they stop providing keyboard or mouse input during their streaming
--   session. File uploads and downloads, audio in, audio out, and pixels
--   changing do not qualify as user activity. If users continue to be idle
--   after the time interval in <tt>IdleDisconnectTimeoutInSeconds</tt>
--   elapses, they are disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
fleet_idleDisconnectTimeoutInSeconds :: Lens' Fleet (Maybe Int)

-- | The name of the image used to create the fleet.
fleet_imageName :: Lens' Fleet (Maybe Text)

-- | The time the fleet was created.
fleet_createdTime :: Lens' Fleet (Maybe UTCTime)

-- | The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
fleet_streamView :: Lens' Fleet (Maybe StreamView)

-- | The description to display.
fleet_description :: Lens' Fleet (Maybe Text)

-- | Indicates whether default internet access is enabled for the fleet.
fleet_enableDefaultInternetAccess :: Lens' Fleet (Maybe Bool)

-- | The fleet errors.
fleet_fleetErrors :: Lens' Fleet (Maybe [FleetError])

-- | The fleet name to display.
fleet_displayName :: Lens' Fleet (Maybe Text)

-- | The ARN for the public, private, or shared image.
fleet_imageArn :: Lens' Fleet (Maybe Text)

-- | The Amazon Resource Name (ARN) for the fleet.
fleet_arn :: Lens' Fleet Text

-- | The name of the fleet.
fleet_name :: Lens' Fleet Text

-- | The instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
fleet_instanceType :: Lens' Fleet Text

-- | The capacity status for the fleet.
fleet_computeCapacityStatus :: Lens' Fleet ComputeCapacityStatus

-- | The current state for the fleet.
fleet_state :: Lens' Fleet FleetState

-- | The error message.
fleetError_errorMessage :: Lens' FleetError (Maybe Text)

-- | The error code.
fleetError_errorCode :: Lens' FleetError (Maybe FleetErrorCode)

-- | The permissions to provide to the destination AWS account for the
--   specified image.
image_imagePermissions :: Lens' Image (Maybe ImagePermissions)

-- | The operating system platform of the image.
image_platform :: Lens' Image (Maybe PlatformType)

-- | Describes the errors that are returned when a new image can't be
--   created.
image_imageErrors :: Lens' Image (Maybe [ResourceError])

-- | The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
image_imageBuilderName :: Lens' Image (Maybe Text)

-- | The ARN of the image.
image_arn :: Lens' Image (Maybe Text)

-- | The time the image was created.
image_createdTime :: Lens' Image (Maybe UTCTime)

-- | The reason why the last state change occurred.
image_stateChangeReason :: Lens' Image (Maybe ImageStateChangeReason)

-- | The ARN of the image from which this image was created.
image_baseImageArn :: Lens' Image (Maybe Text)

-- | The image starts in the <tt>PENDING</tt> state. If image creation
--   succeeds, the state is <tt>AVAILABLE</tt>. If image creation fails,
--   the state is <tt>FAILED</tt>.
image_state :: Lens' Image (Maybe ImageState)

-- | The applications associated with the image.
image_applications :: Lens' Image (Maybe [Application])

-- | The version of the AppStream 2.0 agent to use for instances that are
--   launched from this image.
image_appstreamAgentVersion :: Lens' Image (Maybe Text)

-- | The description to display.
image_description :: Lens' Image (Maybe Text)

-- | Indicates whether the image is public or private.
image_visibility :: Lens' Image (Maybe VisibilityType)

-- | Indicates whether an image builder can be launched from this image.
image_imageBuilderSupported :: Lens' Image (Maybe Bool)

-- | The image name to display.
image_displayName :: Lens' Image (Maybe Text)

-- | The release date of the public base image. For private images, this
--   date is the release date of the base image from which the image was
--   created.
image_publicBaseImageReleasedDate :: Lens' Image (Maybe UTCTime)

-- | The name of the image.
image_name :: Lens' Image Text

-- | The VPC configuration of the image builder.
imageBuilder_vpcConfig :: Lens' ImageBuilder (Maybe VpcConfig)

-- | The operating system platform of the image builder.
imageBuilder_platform :: Lens' ImageBuilder (Maybe PlatformType)

-- | The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
imageBuilder_iamRoleArn :: Lens' ImageBuilder (Maybe Text)

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Administrators can connect to the image builder only through the
--   specified endpoints.
imageBuilder_accessEndpoints :: Lens' ImageBuilder (Maybe (NonEmpty AccessEndpoint))

-- | The name of the directory and organizational unit (OU) to use to join
--   the image builder to a Microsoft Active Directory domain.
imageBuilder_domainJoinInfo :: Lens' ImageBuilder (Maybe DomainJoinInfo)

-- | The instance type for the image builder. The following instance types
--   are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
imageBuilder_instanceType :: Lens' ImageBuilder (Maybe Text)

-- | The ARN for the image builder.
imageBuilder_arn :: Lens' ImageBuilder (Maybe Text)

-- | The time stamp when the image builder was created.
imageBuilder_createdTime :: Lens' ImageBuilder (Maybe UTCTime)

-- | The reason why the last state change occurred.
imageBuilder_stateChangeReason :: Lens' ImageBuilder (Maybe ImageBuilderStateChangeReason)

-- | Undocumented member.
imageBuilder_networkAccessConfiguration :: Lens' ImageBuilder (Maybe NetworkAccessConfiguration)

-- | The state of the image builder.
imageBuilder_state :: Lens' ImageBuilder (Maybe ImageBuilderState)

-- | The version of the AppStream 2.0 agent that is currently being used by
--   the image builder.
imageBuilder_appstreamAgentVersion :: Lens' ImageBuilder (Maybe Text)

-- | The description to display.
imageBuilder_description :: Lens' ImageBuilder (Maybe Text)

-- | Enables or disables default internet access for the image builder.
imageBuilder_enableDefaultInternetAccess :: Lens' ImageBuilder (Maybe Bool)

-- | The image builder errors.
imageBuilder_imageBuilderErrors :: Lens' ImageBuilder (Maybe [ResourceError])

-- | The image builder name to display.
imageBuilder_displayName :: Lens' ImageBuilder (Maybe Text)

-- | The ARN of the image from which this builder was created.
imageBuilder_imageArn :: Lens' ImageBuilder (Maybe Text)

-- | The name of the image builder.
imageBuilder_name :: Lens' ImageBuilder Text

-- | The state change reason message.
imageBuilderStateChangeReason_message :: Lens' ImageBuilderStateChangeReason (Maybe Text)

-- | The state change reason code.
imageBuilderStateChangeReason_code :: Lens' ImageBuilderStateChangeReason (Maybe ImageBuilderStateChangeReasonCode)

-- | Indicates whether the image can be used for an image builder.
imagePermissions_allowImageBuilder :: Lens' ImagePermissions (Maybe Bool)

-- | Indicates whether the image can be used for a fleet.
imagePermissions_allowFleet :: Lens' ImagePermissions (Maybe Bool)

-- | The state change reason message.
imageStateChangeReason_message :: Lens' ImageStateChangeReason (Maybe Text)

-- | The state change reason code.
imageStateChangeReason_code :: Lens' ImageStateChangeReason (Maybe ImageStateChangeReasonCode)

-- | The error message for the error that is returned when a usage report
--   can't be generated.
lastReportGenerationExecutionError_errorMessage :: Lens' LastReportGenerationExecutionError (Maybe Text)

-- | The error code for the error that is returned when a usage report
--   can't be generated.
lastReportGenerationExecutionError_errorCode :: Lens' LastReportGenerationExecutionError (Maybe UsageReportExecutionErrorCode)

-- | The resource identifier of the elastic network interface that is
--   attached to instances in your VPC. All network interfaces have the
--   eni-xxxxxxxx resource identifier.
networkAccessConfiguration_eniId :: Lens' NetworkAccessConfiguration (Maybe Text)

-- | The private IP address of the elastic network interface that is
--   attached to instances in your VPC.
networkAccessConfiguration_eniPrivateIpAddress :: Lens' NetworkAccessConfiguration (Maybe Text)

-- | The time the error occurred.
resourceError_errorTimestamp :: Lens' ResourceError (Maybe UTCTime)

-- | The error message.
resourceError_errorMessage :: Lens' ResourceError (Maybe Text)

-- | The error code.
resourceError_errorCode :: Lens' ResourceError (Maybe FleetErrorCode)

-- | The user name of the account. This account must have the following
--   privileges: create computer objects, join computers to the domain, and
--   change/reset the password on descendant computer objects for the
--   organizational units specified.
serviceAccountCredentials_accountName :: Lens' ServiceAccountCredentials Text

-- | The password for the account.
serviceAccountCredentials_accountPassword :: Lens' ServiceAccountCredentials Text

-- | Specifies whether a user is connected to the streaming session.
session_connectionState :: Lens' Session (Maybe SessionConnectionState)

-- | The time when a streaming instance is dedicated for the user.
session_startTime :: Lens' Session (Maybe UTCTime)

-- | The network details for the streaming session.
session_networkAccessConfiguration :: Lens' Session (Maybe NetworkAccessConfiguration)

-- | The authentication method. The user is authenticated using a streaming
--   URL (<tt>API</tt>) or SAML 2.0 federation (<tt>SAML</tt>).
session_authenticationType :: Lens' Session (Maybe AuthenticationType)

-- | The time when the streaming session is set to expire. This time is
--   based on the <tt>MaxUserDurationinSeconds</tt> value, which determines
--   the maximum length of time that a streaming session can run. A
--   streaming session might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
session_maxExpirationTime :: Lens' Session (Maybe UTCTime)

-- | The identifier of the streaming session.
session_id :: Lens' Session Text

-- | The identifier of the user for whom the session was created.
session_userId :: Lens' Session Text

-- | The name of the stack for the streaming session.
session_stackName :: Lens' Session Text

-- | The name of the fleet for the streaming session.
session_fleetName :: Lens' Session Text

-- | The current state of the streaming session.
session_state :: Lens' Session SessionState

-- | The 12-digit identifier of the AWS account with which the image is
--   shared.
sharedImagePermissions_sharedAccountId :: Lens' SharedImagePermissions Text

-- | Describes the permissions for a shared image.
sharedImagePermissions_imagePermissions :: Lens' SharedImagePermissions ImagePermissions

-- | The actions that are enabled or disabled for users during their
--   streaming sessions. By default these actions are enabled.
stack_userSettings :: Lens' Stack (Maybe (NonEmpty UserSetting))

-- | The list of virtual private cloud (VPC) interface endpoint objects.
--   Users of the stack can connect to AppStream 2.0 only through the
--   specified endpoints.
stack_accessEndpoints :: Lens' Stack (Maybe (NonEmpty AccessEndpoint))

-- | The URL that users are redirected to after their streaming session
--   ends.
stack_redirectURL :: Lens' Stack (Maybe Text)

-- | The ARN of the stack.
stack_arn :: Lens' Stack (Maybe Text)

-- | The time the stack was created.
stack_createdTime :: Lens' Stack (Maybe UTCTime)

-- | The persistent application settings for users of the stack.
stack_applicationSettings :: Lens' Stack (Maybe ApplicationSettingsResponse)

-- | The storage connectors to enable.
stack_storageConnectors :: Lens' Stack (Maybe [StorageConnector])

-- | The description to display.
stack_description :: Lens' Stack (Maybe Text)

-- | The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
stack_embedHostDomains :: Lens' Stack (Maybe (NonEmpty Text))

-- | The errors for the stack.
stack_stackErrors :: Lens' Stack (Maybe [StackError])

-- | The stack name to display.
stack_displayName :: Lens' Stack (Maybe Text)

-- | The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
stack_feedbackURL :: Lens' Stack (Maybe Text)

-- | The name of the stack.
stack_name :: Lens' Stack Text

-- | The error message.
stackError_errorMessage :: Lens' StackError (Maybe Text)

-- | The error code.
stackError_errorCode :: Lens' StackError (Maybe StackErrorCode)

-- | The names of the domains for the account.
storageConnector_domains :: Lens' StorageConnector (Maybe [Text])

-- | The ARN of the storage connector.
storageConnector_resourceIdentifier :: Lens' StorageConnector (Maybe Text)

-- | The type of storage connector.
storageConnector_connectorType :: Lens' StorageConnector StorageConnectorType

-- | The errors that were returned if usage reports couldn't be generated.
usageReportSubscription_subscriptionErrors :: Lens' UsageReportSubscription (Maybe [LastReportGenerationExecutionError])

-- | The time when the last usage report was generated.
usageReportSubscription_lastGeneratedReportDate :: Lens' UsageReportSubscription (Maybe UTCTime)

-- | The Amazon S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
usageReportSubscription_s3BucketName :: Lens' UsageReportSubscription (Maybe Text)

-- | The schedule for generating usage reports.
usageReportSubscription_schedule :: Lens' UsageReportSubscription (Maybe UsageReportSchedule)

-- | The status of the user in the user pool. The status can be one of the
--   following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
user_status :: Lens' User (Maybe Text)

-- | The ARN of the user.
user_arn :: Lens' User (Maybe Text)

-- | Specifies whether the user in the user pool is enabled.
user_enabled :: Lens' User (Maybe Bool)

-- | The date and time the user was created in the user pool.
user_createdTime :: Lens' User (Maybe UTCTime)

-- | The email address of the user.
--   
--   Users' email addresses are case-sensitive.
user_userName :: Lens' User (Maybe Text)

-- | The last name, or surname, of the user.
user_lastName :: Lens' User (Maybe Text)

-- | The first name, or given name, of the user.
user_firstName :: Lens' User (Maybe Text)

-- | The authentication type for the user.
user_authenticationType :: Lens' User AuthenticationType

-- | The action that is enabled or disabled.
userSetting_action :: Lens' UserSetting Action

-- | Indicates whether the action is enabled or disabled.
userSetting_permission :: Lens' UserSetting Permission

-- | Specifies whether a welcome email is sent to a user after the user is
--   created in the user pool.
userStackAssociation_sendEmailNotification :: Lens' UserStackAssociation (Maybe Bool)

-- | The name of the stack that is associated with the user.
userStackAssociation_stackName :: Lens' UserStackAssociation Text

-- | The email address of the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
userStackAssociation_userName :: Lens' UserStackAssociation Text

-- | The authentication type for the user.
userStackAssociation_authenticationType :: Lens' UserStackAssociation AuthenticationType

-- | Information about the user and associated stack.
userStackAssociationError_userStackAssociation :: Lens' UserStackAssociationError (Maybe UserStackAssociation)

-- | The error message for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
userStackAssociationError_errorMessage :: Lens' UserStackAssociationError (Maybe Text)

-- | The error code for the error that is returned when a user can’t be
--   associated with or disassociated from a stack.
userStackAssociationError_errorCode :: Lens' UserStackAssociationError (Maybe UserStackAssociationErrorCode)

-- | The identifiers of the security groups for the fleet or image builder.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | The identifiers of the subnets to which a network interface is
--   attached from the fleet instance or image builder instance. Fleet
--   instances use one or more subnets. Image builder instances use one
--   subnet.
vpcConfig_subnetIds :: Lens' VpcConfig (Maybe [Text])


module Network.AWS.AppStream.Waiters

-- | Polls <a>DescribeFleets</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newFleetStopped :: Wait DescribeFleets

-- | Polls <a>DescribeFleets</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newFleetStarted :: Wait DescribeFleets


-- | Derived from API version <tt>2016-12-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon AppStream 2.0
--   
--   This is the <i>Amazon AppStream 2.0 API Reference</i>. This
--   documentation provides descriptions and syntax for each of the actions
--   and data types in AppStream 2.0. AppStream 2.0 is a fully managed,
--   secure application streaming service that lets you stream desktop
--   applications to users without rewriting applications. AppStream 2.0
--   manages the AWS resources that are required to host and run your
--   applications, scales automatically, and provides access to your users
--   on demand.
--   
--   You can call the AppStream 2.0 API operations by using an interface
--   VPC endpoint (interface endpoint). For more information, see <a>Access
--   AppStream 2.0 API Operations and CLI Commands Through an Interface VPC
--   Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   To learn more about AppStream 2.0, see the following resources:
--   
--   <ul>
--   <li><a>Amazon AppStream 2.0 product page</a></li>
--   <li><a>Amazon AppStream 2.0 documentation</a></li>
--   </ul>
module Network.AWS.AppStream

-- | API version <tt>2016-12-01</tt> of the Amazon AppStream SDK
--   configuration.
defaultService :: Service

-- | The specified resource exists and is not in use, but isn't available.
_ResourceNotAvailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The image can't be updated because it's not compatible for updates.
_IncompatibleImageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates an incorrect combination of parameters, or a missing
--   parameter.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource cannot be created because your AWS account is suspended.
--   For assistance, contact AWS Support.
_InvalidAccountStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The attempted operation is not permitted.
_OperationNotPermittedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified role is invalid.
_InvalidRoleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An API error occurred. Wait a few minutes and try again.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested limit exceeds the permitted limit for an account.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | AppStream 2.0 can’t process the request right now because the Describe
--   calls from your AWS account are being throttled by Amazon EC2. Try
--   again later.
_RequestLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeFleets</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newFleetStopped :: Wait DescribeFleets

-- | Polls <a>DescribeFleets</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newFleetStarted :: Wait DescribeFleets

-- | <i>See:</i> <a>newListAssociatedStacks</a> smart constructor.
data ListAssociatedStacks
ListAssociatedStacks' :: Maybe Text -> Text -> ListAssociatedStacks

-- | Create a value of <a>ListAssociatedStacks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedStacks'</a>,
--   <a>listAssociatedStacks_nextToken</a> - The pagination token to use to
--   retrieve the next page of results for this operation. If this value is
--   null, it retrieves the first page.
--   
--   <a>$sel:fleetName:ListAssociatedStacks'</a>,
--   <a>listAssociatedStacks_fleetName</a> - The name of the fleet.
newListAssociatedStacks :: Text -> ListAssociatedStacks

-- | <i>See:</i> <a>newListAssociatedStacksResponse</a> smart constructor.
data ListAssociatedStacksResponse
ListAssociatedStacksResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAssociatedStacksResponse

-- | Create a value of <a>ListAssociatedStacksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:ListAssociatedStacksResponse'</a>,
--   <a>listAssociatedStacksResponse_names</a> - The name of the stack.
--   
--   <a>$sel:nextToken:ListAssociatedStacks'</a>,
--   <a>listAssociatedStacksResponse_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   there are no more pages, this value is null.
--   
--   <a>$sel:httpStatus:ListAssociatedStacksResponse'</a>,
--   <a>listAssociatedStacksResponse_httpStatus</a> - The response's http
--   status code.
newListAssociatedStacksResponse :: Int -> ListAssociatedStacksResponse

-- | <i>See:</i> <a>newDeleteImageBuilder</a> smart constructor.
data DeleteImageBuilder
DeleteImageBuilder' :: Text -> DeleteImageBuilder

-- | Create a value of <a>DeleteImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteImageBuilder'</a>, <a>deleteImageBuilder_name</a> -
--   The name of the image builder.
newDeleteImageBuilder :: Text -> DeleteImageBuilder

-- | <i>See:</i> <a>newDeleteImageBuilderResponse</a> smart constructor.
data DeleteImageBuilderResponse
DeleteImageBuilderResponse' :: Maybe ImageBuilder -> Int -> DeleteImageBuilderResponse

-- | Create a value of <a>DeleteImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:DeleteImageBuilderResponse'</a>,
--   <a>deleteImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:DeleteImageBuilderResponse'</a>,
--   <a>deleteImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImageBuilderResponse :: Int -> DeleteImageBuilderResponse

-- | <i>See:</i> <a>newBatchAssociateUserStack</a> smart constructor.
data BatchAssociateUserStack
BatchAssociateUserStack' :: NonEmpty UserStackAssociation -> BatchAssociateUserStack

-- | Create a value of <a>BatchAssociateUserStack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userStackAssociations:BatchAssociateUserStack'</a>,
--   <a>batchAssociateUserStack_userStackAssociations</a> - The list of
--   UserStackAssociation objects.
newBatchAssociateUserStack :: NonEmpty UserStackAssociation -> BatchAssociateUserStack

-- | <i>See:</i> <a>newBatchAssociateUserStackResponse</a> smart
--   constructor.
data BatchAssociateUserStackResponse
BatchAssociateUserStackResponse' :: Maybe [UserStackAssociationError] -> Int -> BatchAssociateUserStackResponse

-- | Create a value of <a>BatchAssociateUserStackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchAssociateUserStackResponse'</a>,
--   <a>batchAssociateUserStackResponse_errors</a> - The list of
--   UserStackAssociationError objects.
--   
--   <a>$sel:httpStatus:BatchAssociateUserStackResponse'</a>,
--   <a>batchAssociateUserStackResponse_httpStatus</a> - The response's
--   http status code.
newBatchAssociateUserStackResponse :: Int -> BatchAssociateUserStackResponse

-- | <i>See:</i> <a>newListAssociatedFleets</a> smart constructor.
data ListAssociatedFleets
ListAssociatedFleets' :: Maybe Text -> Text -> ListAssociatedFleets

-- | Create a value of <a>ListAssociatedFleets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedFleets'</a>,
--   <a>listAssociatedFleets_nextToken</a> - The pagination token to use to
--   retrieve the next page of results for this operation. If this value is
--   null, it retrieves the first page.
--   
--   <a>$sel:stackName:ListAssociatedFleets'</a>,
--   <a>listAssociatedFleets_stackName</a> - The name of the stack.
newListAssociatedFleets :: Text -> ListAssociatedFleets

-- | <i>See:</i> <a>newListAssociatedFleetsResponse</a> smart constructor.
data ListAssociatedFleetsResponse
ListAssociatedFleetsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAssociatedFleetsResponse

-- | Create a value of <a>ListAssociatedFleetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:ListAssociatedFleetsResponse'</a>,
--   <a>listAssociatedFleetsResponse_names</a> - The name of the fleet.
--   
--   <a>$sel:nextToken:ListAssociatedFleets'</a>,
--   <a>listAssociatedFleetsResponse_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   there are no more pages, this value is null.
--   
--   <a>$sel:httpStatus:ListAssociatedFleetsResponse'</a>,
--   <a>listAssociatedFleetsResponse_httpStatus</a> - The response's http
--   status code.
newListAssociatedFleetsResponse :: Int -> ListAssociatedFleetsResponse

-- | <i>See:</i> <a>newDeleteUsageReportSubscription</a> smart constructor.
data DeleteUsageReportSubscription
DeleteUsageReportSubscription' :: DeleteUsageReportSubscription

-- | Create a value of <a>DeleteUsageReportSubscription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUsageReportSubscription :: DeleteUsageReportSubscription

-- | <i>See:</i> <a>newDeleteUsageReportSubscriptionResponse</a> smart
--   constructor.
data DeleteUsageReportSubscriptionResponse
DeleteUsageReportSubscriptionResponse' :: Int -> DeleteUsageReportSubscriptionResponse

-- | Create a value of <a>DeleteUsageReportSubscriptionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUsageReportSubscriptionResponse'</a>,
--   <a>deleteUsageReportSubscriptionResponse_httpStatus</a> - The
--   response's http status code.
newDeleteUsageReportSubscriptionResponse :: Int -> DeleteUsageReportSubscriptionResponse

-- | <i>See:</i> <a>newStopFleet</a> smart constructor.
data StopFleet
StopFleet' :: Text -> StopFleet

-- | Create a value of <a>StopFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopFleet'</a>, <a>stopFleet_name</a> - The name of the
--   fleet.
newStopFleet :: Text -> StopFleet

-- | <i>See:</i> <a>newStopFleetResponse</a> smart constructor.
data StopFleetResponse
StopFleetResponse' :: Int -> StopFleetResponse

-- | Create a value of <a>StopFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopFleetResponse'</a>,
--   <a>stopFleetResponse_httpStatus</a> - The response's http status code.
newStopFleetResponse :: Int -> StopFleetResponse

-- | <i>See:</i> <a>newStopImageBuilder</a> smart constructor.
data StopImageBuilder
StopImageBuilder' :: Text -> StopImageBuilder

-- | Create a value of <a>StopImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopImageBuilder'</a>, <a>stopImageBuilder_name</a> - The
--   name of the image builder.
newStopImageBuilder :: Text -> StopImageBuilder

-- | <i>See:</i> <a>newStopImageBuilderResponse</a> smart constructor.
data StopImageBuilderResponse
StopImageBuilderResponse' :: Maybe ImageBuilder -> Int -> StopImageBuilderResponse

-- | Create a value of <a>StopImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:StopImageBuilderResponse'</a>,
--   <a>stopImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:StopImageBuilderResponse'</a>,
--   <a>stopImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newStopImageBuilderResponse :: Int -> StopImageBuilderResponse

-- | <i>See:</i> <a>newStartFleet</a> smart constructor.
data StartFleet
StartFleet' :: Text -> StartFleet

-- | Create a value of <a>StartFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartFleet'</a>, <a>startFleet_name</a> - The name of the
--   fleet.
newStartFleet :: Text -> StartFleet

-- | <i>See:</i> <a>newStartFleetResponse</a> smart constructor.
data StartFleetResponse
StartFleetResponse' :: Int -> StartFleetResponse

-- | Create a value of <a>StartFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartFleetResponse'</a>,
--   <a>startFleetResponse_httpStatus</a> - The response's http status
--   code.
newStartFleetResponse :: Int -> StartFleetResponse

-- | <i>See:</i> <a>newStartImageBuilder</a> smart constructor.
data StartImageBuilder
StartImageBuilder' :: Maybe Text -> Text -> StartImageBuilder

-- | Create a value of <a>StartImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appstreamAgentVersion:StartImageBuilder'</a>,
--   <a>startImageBuilder_appstreamAgentVersion</a> - The version of the
--   AppStream 2.0 agent to use for this image builder. To use the latest
--   version of the AppStream 2.0 agent, specify [LATEST].
--   
--   <a>$sel:name:StartImageBuilder'</a>, <a>startImageBuilder_name</a> -
--   The name of the image builder.
newStartImageBuilder :: Text -> StartImageBuilder

-- | <i>See:</i> <a>newStartImageBuilderResponse</a> smart constructor.
data StartImageBuilderResponse
StartImageBuilderResponse' :: Maybe ImageBuilder -> Int -> StartImageBuilderResponse

-- | Create a value of <a>StartImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:StartImageBuilderResponse'</a>,
--   <a>startImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:StartImageBuilderResponse'</a>,
--   <a>startImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newStartImageBuilderResponse :: Int -> StartImageBuilderResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys for the tags to disassociate.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   associate. A tag is a key-value pair, and the value is optional. For
--   example, Environment=Test. If you do not specify a value,
--   Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newDescribeFleets</a> smart constructor.
data DescribeFleets
DescribeFleets' :: Maybe [Text] -> Maybe Text -> DescribeFleets

-- | Create a value of <a>DescribeFleets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeFleets'</a>, <a>describeFleets_names</a> - The
--   names of the fleets to describe.
--   
--   <a>$sel:nextToken:DescribeFleets'</a>, <a>describeFleets_nextToken</a>
--   - The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
newDescribeFleets :: DescribeFleets

-- | <i>See:</i> <a>newDescribeFleetsResponse</a> smart constructor.
data DescribeFleetsResponse
DescribeFleetsResponse' :: Maybe Text -> Maybe [Fleet] -> Int -> DescribeFleetsResponse

-- | Create a value of <a>DescribeFleetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleets'</a>,
--   <a>describeFleetsResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:fleets:DescribeFleetsResponse'</a>,
--   <a>describeFleetsResponse_fleets</a> - Information about the fleets.
--   
--   <a>$sel:httpStatus:DescribeFleetsResponse'</a>,
--   <a>describeFleetsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFleetsResponse :: Int -> DescribeFleetsResponse

-- | <i>See:</i> <a>newDescribeSessions</a> smart constructor.
data DescribeSessions
DescribeSessions' :: Maybe Text -> Maybe Text -> Maybe AuthenticationType -> Maybe Int -> Text -> Text -> DescribeSessions

-- | Create a value of <a>DescribeSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSessions'</a>,
--   <a>describeSessions_nextToken</a> - The pagination token to use to
--   retrieve the next page of results for this operation. If this value is
--   null, it retrieves the first page.
--   
--   <a>$sel:userId:DescribeSessions'</a>, <a>describeSessions_userId</a> -
--   The user identifier (ID). If you specify a user ID, you must also
--   specify the authentication type.
--   
--   <a>$sel:authenticationType:DescribeSessions'</a>,
--   <a>describeSessions_authenticationType</a> - The authentication
--   method. Specify <tt>API</tt> for a user authenticated using a
--   streaming URL or <tt>SAML</tt> for a SAML federated user. The default
--   is to authenticate users using a streaming URL.
--   
--   <a>$sel:limit:DescribeSessions'</a>, <a>describeSessions_limit</a> -
--   The size of each page of results. The default value is 20 and the
--   maximum value is 50.
--   
--   <a>$sel:stackName:DescribeSessions'</a>,
--   <a>describeSessions_stackName</a> - The name of the stack. This value
--   is case-sensitive.
--   
--   <a>$sel:fleetName:DescribeSessions'</a>,
--   <a>describeSessions_fleetName</a> - The name of the fleet. This value
--   is case-sensitive.
newDescribeSessions :: Text -> Text -> DescribeSessions

-- | <i>See:</i> <a>newDescribeSessionsResponse</a> smart constructor.
data DescribeSessionsResponse
DescribeSessionsResponse' :: Maybe Text -> Maybe [Session] -> Int -> DescribeSessionsResponse

-- | Create a value of <a>DescribeSessionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSessions'</a>,
--   <a>describeSessionsResponse_nextToken</a> - The pagination token to
--   use to retrieve the next page of results for this operation. If there
--   are no more pages, this value is null.
--   
--   <a>$sel:sessions:DescribeSessionsResponse'</a>,
--   <a>describeSessionsResponse_sessions</a> - Information about the
--   streaming sessions.
--   
--   <a>$sel:httpStatus:DescribeSessionsResponse'</a>,
--   <a>describeSessionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSessionsResponse :: Int -> DescribeSessionsResponse

-- | <i>See:</i> <a>newEnableUser</a> smart constructor.
data EnableUser
EnableUser' :: Sensitive Text -> AuthenticationType -> EnableUser

-- | Create a value of <a>EnableUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:EnableUser'</a>, <a>enableUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
--   
--   <a>$sel:authenticationType:EnableUser'</a>,
--   <a>enableUser_authenticationType</a> - The authentication type for the
--   user. You must specify USERPOOL.
newEnableUser :: Text -> AuthenticationType -> EnableUser

-- | <i>See:</i> <a>newEnableUserResponse</a> smart constructor.
data EnableUserResponse
EnableUserResponse' :: Int -> EnableUserResponse

-- | Create a value of <a>EnableUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EnableUserResponse'</a>,
--   <a>enableUserResponse_httpStatus</a> - The response's http status
--   code.
newEnableUserResponse :: Int -> EnableUserResponse

-- | <i>See:</i> <a>newDescribeStacks</a> smart constructor.
data DescribeStacks
DescribeStacks' :: Maybe [Text] -> Maybe Text -> DescribeStacks

-- | Create a value of <a>DescribeStacks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeStacks'</a>, <a>describeStacks_names</a> - The
--   names of the stacks to describe.
--   
--   <a>$sel:nextToken:DescribeStacks'</a>, <a>describeStacks_nextToken</a>
--   - The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
newDescribeStacks :: DescribeStacks

-- | <i>See:</i> <a>newDescribeStacksResponse</a> smart constructor.
data DescribeStacksResponse
DescribeStacksResponse' :: Maybe Text -> Maybe [Stack] -> Int -> DescribeStacksResponse

-- | Create a value of <a>DescribeStacksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeStacks'</a>,
--   <a>describeStacksResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:stacks:DescribeStacksResponse'</a>,
--   <a>describeStacksResponse_stacks</a> - Information about the stacks.
--   
--   <a>$sel:httpStatus:DescribeStacksResponse'</a>,
--   <a>describeStacksResponse_httpStatus</a> - The response's http status
--   code.
newDescribeStacksResponse :: Int -> DescribeStacksResponse

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe MessageAction -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Sensitive Text -> AuthenticationType -> CreateUser

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageAction:CreateUser'</a>, <a>createUser_messageAction</a>
--   - The action to take for the welcome email that is sent to a user
--   after the user is created in the user pool. If you specify SUPPRESS,
--   no email is sent. If you specify RESEND, do not specify the first name
--   or last name of the user. If the value is null, the email is sent.
--   
--   The temporary password in the welcome email is valid for only 7 days.
--   If users don’t set their passwords within 7 days, you must send them a
--   new welcome email.
--   
--   <a>$sel:lastName:CreateUser'</a>, <a>createUser_lastName</a> - The
--   last name, or surname, of the user.
--   
--   <a>$sel:firstName:CreateUser'</a>, <a>createUser_firstName</a> - The
--   first name, or given name, of the user.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive. During login, if they
--   specify an email address that doesn't use the same capitalization as
--   the email address specified when their user pool account was created,
--   a "user does not exist" error message displays.
--   
--   <a>$sel:authenticationType:CreateUser'</a>,
--   <a>createUser_authenticationType</a> - The authentication type for the
--   user. You must specify USERPOOL.
newCreateUser :: Text -> AuthenticationType -> CreateUser

-- | <i>See:</i> <a>newCreateUserResponse</a> smart constructor.
data CreateUserResponse
CreateUserResponse' :: Int -> CreateUserResponse

-- | Create a value of <a>CreateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateUserResponse'</a>,
--   <a>createUserResponse_httpStatus</a> - The response's http status
--   code.
newCreateUserResponse :: Int -> CreateUserResponse

-- | <i>See:</i> <a>newDeleteDirectoryConfig</a> smart constructor.
data DeleteDirectoryConfig
DeleteDirectoryConfig' :: Text -> DeleteDirectoryConfig

-- | Create a value of <a>DeleteDirectoryConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryName:DeleteDirectoryConfig'</a>,
--   <a>deleteDirectoryConfig_directoryName</a> - The name of the directory
--   configuration.
newDeleteDirectoryConfig :: Text -> DeleteDirectoryConfig

-- | <i>See:</i> <a>newDeleteDirectoryConfigResponse</a> smart constructor.
data DeleteDirectoryConfigResponse
DeleteDirectoryConfigResponse' :: Int -> DeleteDirectoryConfigResponse

-- | Create a value of <a>DeleteDirectoryConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDirectoryConfigResponse'</a>,
--   <a>deleteDirectoryConfigResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDirectoryConfigResponse :: Int -> DeleteDirectoryConfigResponse

-- | <i>See:</i> <a>newCopyImage</a> smart constructor.
data CopyImage
CopyImage' :: Maybe Text -> Text -> Text -> Text -> CopyImage

-- | Create a value of <a>CopyImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationImageDescription:CopyImage'</a>,
--   <a>copyImage_destinationImageDescription</a> - The description that
--   the image will have when it is copied to the destination.
--   
--   <a>$sel:sourceImageName:CopyImage'</a>,
--   <a>copyImage_sourceImageName</a> - The name of the image to copy.
--   
--   <a>$sel:destinationImageName:CopyImage'</a>,
--   <a>copyImage_destinationImageName</a> - The name that the image will
--   have when it is copied to the destination.
--   
--   <a>$sel:destinationRegion:CopyImage'</a>,
--   <a>copyImage_destinationRegion</a> - The destination region to which
--   the image will be copied. This parameter is required, even if you are
--   copying an image within the same region.
newCopyImage :: Text -> Text -> Text -> CopyImage

-- | <i>See:</i> <a>newCopyImageResponse</a> smart constructor.
data CopyImageResponse
CopyImageResponse' :: Maybe Text -> Int -> CopyImageResponse

-- | Create a value of <a>CopyImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationImageName:CopyImage'</a>,
--   <a>copyImageResponse_destinationImageName</a> - The name of the
--   destination image.
--   
--   <a>$sel:httpStatus:CopyImageResponse'</a>,
--   <a>copyImageResponse_httpStatus</a> - The response's http status code.
newCopyImageResponse :: Int -> CopyImageResponse

-- | <i>See:</i> <a>newCreateImageBuilder</a> smart constructor.
data CreateImageBuilder
CreateImageBuilder' :: Maybe VpcConfig -> Maybe Text -> Maybe (NonEmpty AccessEndpoint) -> Maybe DomainJoinInfo -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> Text -> CreateImageBuilder

-- | Create a value of <a>CreateImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:CreateImageBuilder'</a>,
--   <a>createImageBuilder_vpcConfig</a> - The VPC configuration for the
--   image builder. You can specify only one subnet.
--   
--   <a>$sel:iamRoleArn:CreateImageBuilder'</a>,
--   <a>createImageBuilder_iamRoleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM role to apply to the image builder. To assume a role, the
--   image builder calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:accessEndpoints:CreateImageBuilder'</a>,
--   <a>createImageBuilder_accessEndpoints</a> - The list of interface VPC
--   endpoint (interface endpoint) objects. Administrators can connect to
--   the image builder only through the specified endpoints.
--   
--   <a>$sel:domainJoinInfo:CreateImageBuilder'</a>,
--   <a>createImageBuilder_domainJoinInfo</a> - The name of the directory
--   and organizational unit (OU) to use to join the image builder to a
--   Microsoft Active Directory domain.
--   
--   <a>$sel:imageName:CreateImageBuilder'</a>,
--   <a>createImageBuilder_imageName</a> - The name of the image used to
--   create the image builder.
--   
--   <a>$sel:tags:CreateImageBuilder'</a>, <a>createImageBuilder_tags</a> -
--   The tags to associate with the image builder. A tag is a key-value
--   pair, and the value is optional. For example, Environment=Test. If you
--   do not specify a value, Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:appstreamAgentVersion:CreateImageBuilder'</a>,
--   <a>createImageBuilder_appstreamAgentVersion</a> - The version of the
--   AppStream 2.0 agent to use for this image builder. To use the latest
--   version of the AppStream 2.0 agent, specify [LATEST].
--   
--   <a>$sel:description:CreateImageBuilder'</a>,
--   <a>createImageBuilder_description</a> - The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:CreateImageBuilder'</a>,
--   <a>createImageBuilder_enableDefaultInternetAccess</a> - Enables or
--   disables default internet access for the image builder.
--   
--   <a>$sel:displayName:CreateImageBuilder'</a>,
--   <a>createImageBuilder_displayName</a> - The image builder name to
--   display.
--   
--   <a>$sel:imageArn:CreateImageBuilder'</a>,
--   <a>createImageBuilder_imageArn</a> - The ARN of the public, private,
--   or shared image to use.
--   
--   <a>$sel:name:CreateImageBuilder'</a>, <a>createImageBuilder_name</a> -
--   A unique name for the image builder.
--   
--   <a>$sel:instanceType:CreateImageBuilder'</a>,
--   <a>createImageBuilder_instanceType</a> - The instance type to use when
--   launching the image builder. The following instance types are
--   available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
newCreateImageBuilder :: Text -> Text -> CreateImageBuilder

-- | <i>See:</i> <a>newCreateImageBuilderResponse</a> smart constructor.
data CreateImageBuilderResponse
CreateImageBuilderResponse' :: Maybe ImageBuilder -> Int -> CreateImageBuilderResponse

-- | Create a value of <a>CreateImageBuilderResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuilder:CreateImageBuilderResponse'</a>,
--   <a>createImageBuilderResponse_imageBuilder</a> - Information about the
--   image builder.
--   
--   <a>$sel:httpStatus:CreateImageBuilderResponse'</a>,
--   <a>createImageBuilderResponse_httpStatus</a> - The response's http
--   status code.
newCreateImageBuilderResponse :: Int -> CreateImageBuilderResponse

-- | <i>See:</i> <a>newCreateStack</a> smart constructor.
data CreateStack
CreateStack' :: Maybe (NonEmpty UserSetting) -> Maybe (NonEmpty AccessEndpoint) -> Maybe Text -> Maybe ApplicationSettings -> Maybe (HashMap Text Text) -> Maybe [StorageConnector] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Text -> CreateStack

-- | Create a value of <a>CreateStack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userSettings:CreateStack'</a>, <a>createStack_userSettings</a>
--   - The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
--   
--   <a>$sel:accessEndpoints:CreateStack'</a>,
--   <a>createStack_accessEndpoints</a> - The list of interface VPC
--   endpoint (interface endpoint) objects. Users of the stack can connect
--   to AppStream 2.0 only through the specified endpoints.
--   
--   <a>$sel:redirectURL:CreateStack'</a>, <a>createStack_redirectURL</a> -
--   The URL that users are redirected to after their streaming session
--   ends.
--   
--   <a>$sel:applicationSettings:CreateStack'</a>,
--   <a>createStack_applicationSettings</a> - The persistent application
--   settings for users of a stack. When these settings are enabled,
--   changes that users make to applications and Windows settings are
--   automatically saved after each session and applied to the next
--   session.
--   
--   <a>$sel:tags:CreateStack'</a>, <a>createStack_tags</a> - The tags to
--   associate with the stack. A tag is a key-value pair, and the value is
--   optional. For example, Environment=Test. If you do not specify a
--   value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:storageConnectors:CreateStack'</a>,
--   <a>createStack_storageConnectors</a> - The storage connectors to
--   enable.
--   
--   <a>$sel:description:CreateStack'</a>, <a>createStack_description</a> -
--   The description to display.
--   
--   <a>$sel:embedHostDomains:CreateStack'</a>,
--   <a>createStack_embedHostDomains</a> - The domains where AppStream 2.0
--   streaming sessions can be embedded in an iframe. You must approve the
--   domains that you want to host embedded AppStream 2.0 streaming
--   sessions.
--   
--   <a>$sel:displayName:CreateStack'</a>, <a>createStack_displayName</a> -
--   The stack name to display.
--   
--   <a>$sel:feedbackURL:CreateStack'</a>, <a>createStack_feedbackURL</a> -
--   The URL that users are redirected to after they click the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
--   
--   <a>$sel:name:CreateStack'</a>, <a>createStack_name</a> - The name of
--   the stack.
newCreateStack :: Text -> CreateStack

-- | <i>See:</i> <a>newCreateStackResponse</a> smart constructor.
data CreateStackResponse
CreateStackResponse' :: Maybe Stack -> Int -> CreateStackResponse

-- | Create a value of <a>CreateStackResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stack:CreateStackResponse'</a>,
--   <a>createStackResponse_stack</a> - Information about the stack.
--   
--   <a>$sel:httpStatus:CreateStackResponse'</a>,
--   <a>createStackResponse_httpStatus</a> - The response's http status
--   code.
newCreateStackResponse :: Int -> CreateStackResponse

-- | <i>See:</i> <a>newCreateFleet</a> smart constructor.
data CreateFleet
CreateFleet' :: Maybe Int -> Maybe Int -> Maybe VpcConfig -> Maybe Text -> Maybe DomainJoinInfo -> Maybe FleetType -> Maybe Int -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamView -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> Text -> ComputeCapacity -> CreateFleet

-- | Create a value of <a>CreateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disconnectTimeoutInSeconds:CreateFleet'</a>,
--   <a>createFleet_disconnectTimeoutInSeconds</a> - The amount of time
--   that a streaming session remains active after users disconnect. If
--   users try to reconnect to the streaming session after a disconnection
--   or network interruption within this time interval, they are connected
--   to their previous session. Otherwise, they are connected to a new
--   session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
--   
--   <a>$sel:maxUserDurationInSeconds:CreateFleet'</a>,
--   <a>createFleet_maxUserDurationInSeconds</a> - The maximum amount of
--   time that a streaming session can remain active, in seconds. If users
--   are still connected to a streaming instance five minutes before this
--   limit is reached, they are prompted to save any open documents before
--   being disconnected. After this time elapses, the instance is
--   terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
--   
--   <a>$sel:vpcConfig:CreateFleet'</a>, <a>createFleet_vpcConfig</a> - The
--   VPC configuration for the fleet.
--   
--   <a>$sel:iamRoleArn:CreateFleet'</a>, <a>createFleet_iamRoleArn</a> -
--   The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:domainJoinInfo:CreateFleet'</a>,
--   <a>createFleet_domainJoinInfo</a> - The name of the directory and
--   organizational unit (OU) to use to join the fleet to a Microsoft
--   Active Directory domain.
--   
--   <a>$sel:fleetType:CreateFleet'</a>, <a>createFleet_fleetType</a> - The
--   fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
--   
--   <a>$sel:idleDisconnectTimeoutInSeconds:CreateFleet'</a>,
--   <a>createFleet_idleDisconnectTimeoutInSeconds</a> - The amount of time
--   that users can be idle (inactive) before they are disconnected from
--   their streaming session and the <tt>DisconnectTimeoutInSeconds</tt>
--   time interval begins. Users are notified before they are disconnected
--   due to inactivity. If they try to reconnect to the streaming session
--   before the time interval specified in
--   <tt>DisconnectTimeoutInSeconds</tt> elapses, they are connected to
--   their previous session. Users are considered idle when they stop
--   providing keyboard or mouse input during their streaming session. File
--   uploads and downloads, audio in, audio out, and pixels changing do not
--   qualify as user activity. If users continue to be idle after the time
--   interval in <tt>IdleDisconnectTimeoutInSeconds</tt> elapses, they are
--   disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
--   
--   <a>$sel:imageName:CreateFleet'</a>, <a>createFleet_imageName</a> - The
--   name of the image used to create the fleet.
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleet_tags</a> - The tags to
--   associate with the fleet. A tag is a key-value pair, and the value is
--   optional. For example, Environment=Test. If you do not specify a
--   value, Environment=.
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   For more information, see <a>Tagging Your Resources</a> in the
--   <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:streamView:CreateFleet'</a>, <a>createFleet_streamView</a> -
--   The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
--   
--   <a>$sel:description:CreateFleet'</a>, <a>createFleet_description</a> -
--   The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:CreateFleet'</a>,
--   <a>createFleet_enableDefaultInternetAccess</a> - Enables or disables
--   default internet access for the fleet.
--   
--   <a>$sel:displayName:CreateFleet'</a>, <a>createFleet_displayName</a> -
--   The fleet name to display.
--   
--   <a>$sel:imageArn:CreateFleet'</a>, <a>createFleet_imageArn</a> - The
--   ARN of the public, private, or shared image to use.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleet_name</a> - A unique name
--   for the fleet.
--   
--   <a>$sel:instanceType:CreateFleet'</a>, <a>createFleet_instanceType</a>
--   - The instance type to use when launching fleet instances. The
--   following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:computeCapacity:CreateFleet'</a>,
--   <a>createFleet_computeCapacity</a> - The desired capacity for the
--   fleet.
newCreateFleet :: Text -> Text -> ComputeCapacity -> CreateFleet

-- | <i>See:</i> <a>newCreateFleetResponse</a> smart constructor.
data CreateFleetResponse
CreateFleetResponse' :: Maybe Fleet -> Int -> CreateFleetResponse

-- | Create a value of <a>CreateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:CreateFleetResponse'</a>,
--   <a>createFleetResponse_fleet</a> - Information about the fleet.
--   
--   <a>$sel:httpStatus:CreateFleetResponse'</a>,
--   <a>createFleetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFleetResponse :: Int -> CreateFleetResponse

-- | <i>See:</i> <a>newUpdateDirectoryConfig</a> smart constructor.
data UpdateDirectoryConfig
UpdateDirectoryConfig' :: Maybe ServiceAccountCredentials -> Maybe [Text] -> Text -> UpdateDirectoryConfig

-- | Create a value of <a>UpdateDirectoryConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceAccountCredentials:UpdateDirectoryConfig'</a>,
--   <a>updateDirectoryConfig_serviceAccountCredentials</a> - The
--   credentials for the service account used by the fleet or image builder
--   to connect to the directory.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedNames:UpdateDirectoryConfig'</a>,
--   <a>updateDirectoryConfig_organizationalUnitDistinguishedNames</a> -
--   The distinguished names of the organizational units for computer
--   accounts.
--   
--   <a>$sel:directoryName:UpdateDirectoryConfig'</a>,
--   <a>updateDirectoryConfig_directoryName</a> - The name of the Directory
--   Config object.
newUpdateDirectoryConfig :: Text -> UpdateDirectoryConfig

-- | <i>See:</i> <a>newUpdateDirectoryConfigResponse</a> smart constructor.
data UpdateDirectoryConfigResponse
UpdateDirectoryConfigResponse' :: Maybe DirectoryConfig -> Int -> UpdateDirectoryConfigResponse

-- | Create a value of <a>UpdateDirectoryConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryConfig:UpdateDirectoryConfigResponse'</a>,
--   <a>updateDirectoryConfigResponse_directoryConfig</a> - Information
--   about the Directory Config object.
--   
--   <a>$sel:httpStatus:UpdateDirectoryConfigResponse'</a>,
--   <a>updateDirectoryConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDirectoryConfigResponse :: Int -> UpdateDirectoryConfigResponse

-- | <i>See:</i> <a>newAssociateFleet</a> smart constructor.
data AssociateFleet
AssociateFleet' :: Text -> Text -> AssociateFleet

-- | Create a value of <a>AssociateFleet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetName:AssociateFleet'</a>, <a>associateFleet_fleetName</a>
--   - The name of the fleet.
--   
--   <a>$sel:stackName:AssociateFleet'</a>, <a>associateFleet_stackName</a>
--   - The name of the stack.
newAssociateFleet :: Text -> Text -> AssociateFleet

-- | <i>See:</i> <a>newAssociateFleetResponse</a> smart constructor.
data AssociateFleetResponse
AssociateFleetResponse' :: Int -> AssociateFleetResponse

-- | Create a value of <a>AssociateFleetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateFleetResponse'</a>,
--   <a>associateFleetResponse_httpStatus</a> - The response's http status
--   code.
newAssociateFleetResponse :: Int -> AssociateFleetResponse

-- | <i>See:</i> <a>newCreateDirectoryConfig</a> smart constructor.
data CreateDirectoryConfig
CreateDirectoryConfig' :: Maybe ServiceAccountCredentials -> Text -> [Text] -> CreateDirectoryConfig

-- | Create a value of <a>CreateDirectoryConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceAccountCredentials:CreateDirectoryConfig'</a>,
--   <a>createDirectoryConfig_serviceAccountCredentials</a> - The
--   credentials for the service account used by the fleet or image builder
--   to connect to the directory.
--   
--   <a>$sel:directoryName:CreateDirectoryConfig'</a>,
--   <a>createDirectoryConfig_directoryName</a> - The fully qualified name
--   of the directory (for example, corp.example.com).
--   
--   
--   <a>$sel:organizationalUnitDistinguishedNames:CreateDirectoryConfig'</a>,
--   <a>createDirectoryConfig_organizationalUnitDistinguishedNames</a> -
--   The distinguished names of the organizational units for computer
--   accounts.
newCreateDirectoryConfig :: Text -> CreateDirectoryConfig

-- | <i>See:</i> <a>newCreateDirectoryConfigResponse</a> smart constructor.
data CreateDirectoryConfigResponse
CreateDirectoryConfigResponse' :: Maybe DirectoryConfig -> Int -> CreateDirectoryConfigResponse

-- | Create a value of <a>CreateDirectoryConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryConfig:CreateDirectoryConfigResponse'</a>,
--   <a>createDirectoryConfigResponse_directoryConfig</a> - Information
--   about the directory configuration.
--   
--   <a>$sel:httpStatus:CreateDirectoryConfigResponse'</a>,
--   <a>createDirectoryConfigResponse_httpStatus</a> - The response's http
--   status code.
newCreateDirectoryConfigResponse :: Int -> CreateDirectoryConfigResponse

-- | <i>See:</i> <a>newDeleteStack</a> smart constructor.
data DeleteStack
DeleteStack' :: Text -> DeleteStack

-- | Create a value of <a>DeleteStack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteStack'</a>, <a>deleteStack_name</a> - The name of
--   the stack.
newDeleteStack :: Text -> DeleteStack

-- | <i>See:</i> <a>newDeleteStackResponse</a> smart constructor.
data DeleteStackResponse
DeleteStackResponse' :: Int -> DeleteStackResponse

-- | Create a value of <a>DeleteStackResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteStackResponse'</a>,
--   <a>deleteStackResponse_httpStatus</a> - The response's http status
--   code.
newDeleteStackResponse :: Int -> DeleteStackResponse

-- | <i>See:</i> <a>newDeleteFleet</a> smart constructor.
data DeleteFleet
DeleteFleet' :: Text -> DeleteFleet

-- | Create a value of <a>DeleteFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteFleet'</a>, <a>deleteFleet_name</a> - The name of
--   the fleet.
newDeleteFleet :: Text -> DeleteFleet

-- | <i>See:</i> <a>newDeleteFleetResponse</a> smart constructor.
data DeleteFleetResponse
DeleteFleetResponse' :: Int -> DeleteFleetResponse

-- | Create a value of <a>DeleteFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFleetResponse'</a>,
--   <a>deleteFleetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFleetResponse :: Int -> DeleteFleetResponse

-- | <i>See:</i> <a>newUpdateStack</a> smart constructor.
data UpdateStack
UpdateStack' :: Maybe (NonEmpty UserSetting) -> Maybe (NonEmpty AccessEndpoint) -> Maybe Text -> Maybe ApplicationSettings -> Maybe [StorageConnector] -> Maybe Text -> Maybe Bool -> Maybe (NonEmpty Text) -> Maybe [StackAttribute] -> Maybe Text -> Maybe Text -> Text -> UpdateStack

-- | Create a value of <a>UpdateStack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userSettings:UpdateStack'</a>, <a>updateStack_userSettings</a>
--   - The actions that are enabled or disabled for users during their
--   streaming sessions. By default, these actions are enabled.
--   
--   <a>$sel:accessEndpoints:UpdateStack'</a>,
--   <a>updateStack_accessEndpoints</a> - The list of interface VPC
--   endpoint (interface endpoint) objects. Users of the stack can connect
--   to AppStream 2.0 only through the specified endpoints.
--   
--   <a>$sel:redirectURL:UpdateStack'</a>, <a>updateStack_redirectURL</a> -
--   The URL that users are redirected to after their streaming session
--   ends.
--   
--   <a>$sel:applicationSettings:UpdateStack'</a>,
--   <a>updateStack_applicationSettings</a> - The persistent application
--   settings for users of a stack. When these settings are enabled,
--   changes that users make to applications and Windows settings are
--   automatically saved after each session and applied to the next
--   session.
--   
--   <a>$sel:storageConnectors:UpdateStack'</a>,
--   <a>updateStack_storageConnectors</a> - The storage connectors to
--   enable.
--   
--   <a>$sel:description:UpdateStack'</a>, <a>updateStack_description</a> -
--   The description to display.
--   
--   <a>$sel:deleteStorageConnectors:UpdateStack'</a>,
--   <a>updateStack_deleteStorageConnectors</a> - Deletes the storage
--   connectors currently enabled for the stack.
--   
--   <a>$sel:embedHostDomains:UpdateStack'</a>,
--   <a>updateStack_embedHostDomains</a> - The domains where AppStream 2.0
--   streaming sessions can be embedded in an iframe. You must approve the
--   domains that you want to host embedded AppStream 2.0 streaming
--   sessions.
--   
--   <a>$sel:attributesToDelete:UpdateStack'</a>,
--   <a>updateStack_attributesToDelete</a> - The stack attributes to
--   delete.
--   
--   <a>$sel:displayName:UpdateStack'</a>, <a>updateStack_displayName</a> -
--   The stack name to display.
--   
--   <a>$sel:feedbackURL:UpdateStack'</a>, <a>updateStack_feedbackURL</a> -
--   The URL that users are redirected to after they choose the Send
--   Feedback link. If no URL is specified, no Send Feedback link is
--   displayed.
--   
--   <a>$sel:name:UpdateStack'</a>, <a>updateStack_name</a> - The name of
--   the stack.
newUpdateStack :: Text -> UpdateStack

-- | <i>See:</i> <a>newUpdateStackResponse</a> smart constructor.
data UpdateStackResponse
UpdateStackResponse' :: Maybe Stack -> Int -> UpdateStackResponse

-- | Create a value of <a>UpdateStackResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stack:UpdateStackResponse'</a>,
--   <a>updateStackResponse_stack</a> - Information about the stack.
--   
--   <a>$sel:httpStatus:UpdateStackResponse'</a>,
--   <a>updateStackResponse_httpStatus</a> - The response's http status
--   code.
newUpdateStackResponse :: Int -> UpdateStackResponse

-- | <i>See:</i> <a>newDescribeUsers</a> smart constructor.
data DescribeUsers
DescribeUsers' :: Maybe Text -> Maybe Int -> AuthenticationType -> DescribeUsers

-- | Create a value of <a>DescribeUsers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsers'</a>, <a>describeUsers_nextToken</a> -
--   The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeUsers'</a>, <a>describeUsers_maxResults</a>
--   - The maximum size of each page of results.
--   
--   <a>$sel:authenticationType:DescribeUsers'</a>,
--   <a>describeUsers_authenticationType</a> - The authentication type for
--   the users in the user pool to describe. You must specify USERPOOL.
newDescribeUsers :: AuthenticationType -> DescribeUsers

-- | <i>See:</i> <a>newDescribeUsersResponse</a> smart constructor.
data DescribeUsersResponse
DescribeUsersResponse' :: Maybe Text -> Maybe [User] -> Int -> DescribeUsersResponse

-- | Create a value of <a>DescribeUsersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsers'</a>,
--   <a>describeUsersResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:users:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_users</a> - Information about users in the
--   user pool.
--   
--   <a>$sel:httpStatus:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUsersResponse :: Int -> DescribeUsersResponse

-- | <i>See:</i> <a>newUpdateFleet</a> smart constructor.
data UpdateFleet
UpdateFleet' :: Maybe Int -> Maybe Int -> Maybe VpcConfig -> Maybe Text -> Maybe DomainJoinInfo -> Maybe Text -> Maybe ComputeCapacity -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe StreamView -> Maybe Text -> Maybe Bool -> Maybe [FleetAttribute] -> Maybe Text -> Maybe Text -> UpdateFleet

-- | Create a value of <a>UpdateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disconnectTimeoutInSeconds:UpdateFleet'</a>,
--   <a>updateFleet_disconnectTimeoutInSeconds</a> - The amount of time
--   that a streaming session remains active after users disconnect. If
--   users try to reconnect to the streaming session after a disconnection
--   or network interruption within this time interval, they are connected
--   to their previous session. Otherwise, they are connected to a new
--   session with a new streaming instance.
--   
--   Specify a value between 60 and 360000.
--   
--   <a>$sel:maxUserDurationInSeconds:UpdateFleet'</a>,
--   <a>updateFleet_maxUserDurationInSeconds</a> - The maximum amount of
--   time that a streaming session can remain active, in seconds. If users
--   are still connected to a streaming instance five minutes before this
--   limit is reached, they are prompted to save any open documents before
--   being disconnected. After this time elapses, the instance is
--   terminated and replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
--   
--   <a>$sel:vpcConfig:UpdateFleet'</a>, <a>updateFleet_vpcConfig</a> - The
--   VPC configuration for the fleet.
--   
--   <a>$sel:iamRoleArn:UpdateFleet'</a>, <a>updateFleet_iamRoleArn</a> -
--   The Amazon Resource Name (ARN) of the IAM role to apply to the fleet.
--   To assume a role, a fleet instance calls the AWS Security Token
--   Service (STS) <tt>AssumeRole</tt> API operation and passes the ARN of
--   the role to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:domainJoinInfo:UpdateFleet'</a>,
--   <a>updateFleet_domainJoinInfo</a> - The name of the directory and
--   organizational unit (OU) to use to join the fleet to a Microsoft
--   Active Directory domain.
--   
--   <a>$sel:instanceType:UpdateFleet'</a>, <a>updateFleet_instanceType</a>
--   - The instance type to use when launching fleet instances. The
--   following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:computeCapacity:UpdateFleet'</a>,
--   <a>updateFleet_computeCapacity</a> - The desired capacity for the
--   fleet.
--   
--   <a>$sel:deleteVpcConfig:UpdateFleet'</a>,
--   <a>updateFleet_deleteVpcConfig</a> - Deletes the VPC association for
--   the specified fleet.
--   
--   <a>$sel:idleDisconnectTimeoutInSeconds:UpdateFleet'</a>,
--   <a>updateFleet_idleDisconnectTimeoutInSeconds</a> - The amount of time
--   that users can be idle (inactive) before they are disconnected from
--   their streaming session and the <tt>DisconnectTimeoutInSeconds</tt>
--   time interval begins. Users are notified before they are disconnected
--   due to inactivity. If users try to reconnect to the streaming session
--   before the time interval specified in
--   <tt>DisconnectTimeoutInSeconds</tt> elapses, they are connected to
--   their previous session. Users are considered idle when they stop
--   providing keyboard or mouse input during their streaming session. File
--   uploads and downloads, audio in, audio out, and pixels changing do not
--   qualify as user activity. If users continue to be idle after the time
--   interval in <tt>IdleDisconnectTimeoutInSeconds</tt> elapses, they are
--   disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
--   
--   <a>$sel:imageName:UpdateFleet'</a>, <a>updateFleet_imageName</a> - The
--   name of the image used to create the fleet.
--   
--   <a>$sel:name:UpdateFleet'</a>, <a>updateFleet_name</a> - A unique name
--   for the fleet.
--   
--   <a>$sel:streamView:UpdateFleet'</a>, <a>updateFleet_streamView</a> -
--   The AppStream 2.0 view that is displayed to your users when they
--   stream from the fleet. When <tt>APP</tt> is specified, only the
--   windows of applications opened by users display. When <tt>DESKTOP</tt>
--   is specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
--   
--   <a>$sel:description:UpdateFleet'</a>, <a>updateFleet_description</a> -
--   The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:UpdateFleet'</a>,
--   <a>updateFleet_enableDefaultInternetAccess</a> - Enables or disables
--   default internet access for the fleet.
--   
--   <a>$sel:attributesToDelete:UpdateFleet'</a>,
--   <a>updateFleet_attributesToDelete</a> - The fleet attributes to
--   delete.
--   
--   <a>$sel:displayName:UpdateFleet'</a>, <a>updateFleet_displayName</a> -
--   The fleet name to display.
--   
--   <a>$sel:imageArn:UpdateFleet'</a>, <a>updateFleet_imageArn</a> - The
--   ARN of the public, private, or shared image to use.
newUpdateFleet :: UpdateFleet

-- | <i>See:</i> <a>newUpdateFleetResponse</a> smart constructor.
data UpdateFleetResponse
UpdateFleetResponse' :: Maybe Fleet -> Int -> UpdateFleetResponse

-- | Create a value of <a>UpdateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:UpdateFleetResponse'</a>,
--   <a>updateFleetResponse_fleet</a> - Information about the fleet.
--   
--   <a>$sel:httpStatus:UpdateFleetResponse'</a>,
--   <a>updateFleetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateFleetResponse :: Int -> UpdateFleetResponse

-- | <i>See:</i> <a>newCreateUsageReportSubscription</a> smart constructor.
data CreateUsageReportSubscription
CreateUsageReportSubscription' :: CreateUsageReportSubscription

-- | Create a value of <a>CreateUsageReportSubscription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateUsageReportSubscription :: CreateUsageReportSubscription

-- | <i>See:</i> <a>newCreateUsageReportSubscriptionResponse</a> smart
--   constructor.
data CreateUsageReportSubscriptionResponse
CreateUsageReportSubscriptionResponse' :: Maybe Text -> Maybe UsageReportSchedule -> Int -> CreateUsageReportSubscriptionResponse

-- | Create a value of <a>CreateUsageReportSubscriptionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3BucketName:CreateUsageReportSubscriptionResponse'</a>,
--   <a>createUsageReportSubscriptionResponse_s3BucketName</a> - The Amazon
--   S3 bucket where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
--   
--   <a>$sel:schedule:CreateUsageReportSubscriptionResponse'</a>,
--   <a>createUsageReportSubscriptionResponse_schedule</a> - The schedule
--   for generating usage reports.
--   
--   <a>$sel:httpStatus:CreateUsageReportSubscriptionResponse'</a>,
--   <a>createUsageReportSubscriptionResponse_httpStatus</a> - The
--   response's http status code.
newCreateUsageReportSubscriptionResponse :: Int -> CreateUsageReportSubscriptionResponse

-- | <i>See:</i> <a>newDisassociateFleet</a> smart constructor.
data DisassociateFleet
DisassociateFleet' :: Text -> Text -> DisassociateFleet

-- | Create a value of <a>DisassociateFleet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetName:DisassociateFleet'</a>,
--   <a>disassociateFleet_fleetName</a> - The name of the fleet.
--   
--   <a>$sel:stackName:DisassociateFleet'</a>,
--   <a>disassociateFleet_stackName</a> - The name of the stack.
newDisassociateFleet :: Text -> Text -> DisassociateFleet

-- | <i>See:</i> <a>newDisassociateFleetResponse</a> smart constructor.
data DisassociateFleetResponse
DisassociateFleetResponse' :: Int -> DisassociateFleetResponse

-- | Create a value of <a>DisassociateFleetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateFleetResponse'</a>,
--   <a>disassociateFleetResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateFleetResponse :: Int -> DisassociateFleetResponse

-- | <i>See:</i> <a>newBatchDisassociateUserStack</a> smart constructor.
data BatchDisassociateUserStack
BatchDisassociateUserStack' :: NonEmpty UserStackAssociation -> BatchDisassociateUserStack

-- | Create a value of <a>BatchDisassociateUserStack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userStackAssociations:BatchDisassociateUserStack'</a>,
--   <a>batchDisassociateUserStack_userStackAssociations</a> - The list of
--   UserStackAssociation objects.
newBatchDisassociateUserStack :: NonEmpty UserStackAssociation -> BatchDisassociateUserStack

-- | <i>See:</i> <a>newBatchDisassociateUserStackResponse</a> smart
--   constructor.
data BatchDisassociateUserStackResponse
BatchDisassociateUserStackResponse' :: Maybe [UserStackAssociationError] -> Int -> BatchDisassociateUserStackResponse

-- | Create a value of <a>BatchDisassociateUserStackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDisassociateUserStackResponse'</a>,
--   <a>batchDisassociateUserStackResponse_errors</a> - The list of
--   UserStackAssociationError objects.
--   
--   <a>$sel:httpStatus:BatchDisassociateUserStackResponse'</a>,
--   <a>batchDisassociateUserStackResponse_httpStatus</a> - The response's
--   http status code.
newBatchDisassociateUserStackResponse :: Int -> BatchDisassociateUserStackResponse

-- | <i>See:</i> <a>newDescribeImages</a> smart constructor.
data DescribeImages
DescribeImages' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe VisibilityType -> DescribeImages

-- | Create a value of <a>DescribeImages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeImages'</a>, <a>describeImages_names</a> - The
--   names of the public or private images to describe.
--   
--   <a>$sel:nextToken:DescribeImages'</a>, <a>describeImages_nextToken</a>
--   - The pagination token to use to retrieve the next page of results for
--   this operation. If this value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeImages'</a>,
--   <a>describeImages_maxResults</a> - The maximum size of each page of
--   results.
--   
--   <a>$sel:arns:DescribeImages'</a>, <a>describeImages_arns</a> - The
--   ARNs of the public, private, and shared images to describe.
--   
--   <a>$sel:type':DescribeImages'</a>, <a>describeImages_type</a> - The
--   type of image (public, private, or shared) to describe.
newDescribeImages :: DescribeImages

-- | <i>See:</i> <a>newDescribeImagesResponse</a> smart constructor.
data DescribeImagesResponse
DescribeImagesResponse' :: Maybe Text -> Maybe [Image] -> Int -> DescribeImagesResponse

-- | Create a value of <a>DescribeImagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeImages'</a>,
--   <a>describeImagesResponse_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If there are
--   no more pages, this value is null.
--   
--   <a>$sel:images:DescribeImagesResponse'</a>,
--   <a>describeImagesResponse_images</a> - Information about the images.
--   
--   <a>$sel:httpStatus:DescribeImagesResponse'</a>,
--   <a>describeImagesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeImagesResponse :: Int -> DescribeImagesResponse

-- | <i>See:</i> <a>newDescribeUsageReportSubscriptions</a> smart
--   constructor.
data DescribeUsageReportSubscriptions
DescribeUsageReportSubscriptions' :: Maybe Text -> Maybe Int -> DescribeUsageReportSubscriptions

-- | Create a value of <a>DescribeUsageReportSubscriptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsageReportSubscriptions'</a>,
--   <a>describeUsageReportSubscriptions_nextToken</a> - The pagination
--   token to use to retrieve the next page of results for this operation.
--   If this value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeUsageReportSubscriptions'</a>,
--   <a>describeUsageReportSubscriptions_maxResults</a> - The maximum size
--   of each page of results.
newDescribeUsageReportSubscriptions :: DescribeUsageReportSubscriptions

-- | <i>See:</i> <a>newDescribeUsageReportSubscriptionsResponse</a> smart
--   constructor.
data DescribeUsageReportSubscriptionsResponse
DescribeUsageReportSubscriptionsResponse' :: Maybe Text -> Maybe [UsageReportSubscription] -> Int -> DescribeUsageReportSubscriptionsResponse

-- | Create a value of <a>DescribeUsageReportSubscriptionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUsageReportSubscriptions'</a>,
--   <a>describeUsageReportSubscriptionsResponse_nextToken</a> - The
--   pagination token to use to retrieve the next page of results for this
--   operation. If there are no more pages, this value is null.
--   
--   
--   <a>$sel:usageReportSubscriptions:DescribeUsageReportSubscriptionsResponse'</a>,
--   <a>describeUsageReportSubscriptionsResponse_usageReportSubscriptions</a>
--   - Information about the usage report subscription.
--   
--   <a>$sel:httpStatus:DescribeUsageReportSubscriptionsResponse'</a>,
--   <a>describeUsageReportSubscriptionsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeUsageReportSubscriptionsResponse :: Int -> DescribeUsageReportSubscriptionsResponse

-- | <i>See:</i> <a>newUpdateImagePermissions</a> smart constructor.
data UpdateImagePermissions
UpdateImagePermissions' :: Text -> Text -> ImagePermissions -> UpdateImagePermissions

-- | Create a value of <a>UpdateImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateImagePermissions'</a>,
--   <a>updateImagePermissions_name</a> - The name of the private image.
--   
--   <a>$sel:sharedAccountId:UpdateImagePermissions'</a>,
--   <a>updateImagePermissions_sharedAccountId</a> - The 12-digit
--   identifier of the AWS account for which you want add or update image
--   permissions.
--   
--   <a>$sel:imagePermissions:UpdateImagePermissions'</a>,
--   <a>updateImagePermissions_imagePermissions</a> - The permissions for
--   the image.
newUpdateImagePermissions :: Text -> Text -> ImagePermissions -> UpdateImagePermissions

-- | <i>See:</i> <a>newUpdateImagePermissionsResponse</a> smart
--   constructor.
data UpdateImagePermissionsResponse
UpdateImagePermissionsResponse' :: Int -> UpdateImagePermissionsResponse

-- | Create a value of <a>UpdateImagePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateImagePermissionsResponse'</a>,
--   <a>updateImagePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newUpdateImagePermissionsResponse :: Int -> UpdateImagePermissionsResponse

-- | <i>See:</i> <a>newCreateUpdatedImage</a> smart constructor.
data CreateUpdatedImage
CreateUpdatedImage' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateUpdatedImage

-- | Create a value of <a>CreateUpdatedImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newImageDisplayName':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageDisplayName</a> - The name to display
--   for the new image.
--   
--   <a>$sel:dryRun:CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_dryRun</a> - Indicates whether to display the
--   status of image update availability before AppStream 2.0 initiates the
--   process of creating a new updated image. If this value is set to
--   <tt>true</tt>, AppStream 2.0 displays whether image updates are
--   available. If this value is set to <tt>false</tt>, AppStream 2.0
--   initiates the process of creating a new updated image without
--   displaying whether image updates are available.
--   
--   <a>$sel:newImageDescription':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageDescription</a> - The description to
--   display for the new image.
--   
--   <a>$sel:newImageTags':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageTags</a> - The tags to associate with
--   the new image. A tag is a key-value pair, and the value is optional.
--   For example, Environment=Test. If you do not specify a value,
--   Environment=.
--   
--   Generally allowed characters are: letters, numbers, and spaces
--   representable in UTF-8, and the following special characters:
--   
--   _ . : / = + \ - @
--   
--   If you do not specify a value, the value is set to an empty string.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:existingImageName:CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_existingImageName</a> - The name of the image to
--   update.
--   
--   <a>$sel:newImageName':CreateUpdatedImage'</a>,
--   <a>createUpdatedImage_newImageName</a> - The name of the new image.
--   The name must be unique within the AWS account and Region.
newCreateUpdatedImage :: Text -> Text -> CreateUpdatedImage

-- | <i>See:</i> <a>newCreateUpdatedImageResponse</a> smart constructor.
data CreateUpdatedImageResponse
CreateUpdatedImageResponse' :: Maybe Image -> Maybe Bool -> Int -> CreateUpdatedImageResponse

-- | Create a value of <a>CreateUpdatedImageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:CreateUpdatedImageResponse'</a>,
--   <a>createUpdatedImageResponse_image</a> - Undocumented member.
--   
--   <a>$sel:canUpdateImage:CreateUpdatedImageResponse'</a>,
--   <a>createUpdatedImageResponse_canUpdateImage</a> - Indicates whether a
--   new image can be created.
--   
--   <a>$sel:httpStatus:CreateUpdatedImageResponse'</a>,
--   <a>createUpdatedImageResponse_httpStatus</a> - The response's http
--   status code.
newCreateUpdatedImageResponse :: Int -> CreateUpdatedImageResponse

-- | <i>See:</i> <a>newDeleteImage</a> smart constructor.
data DeleteImage
DeleteImage' :: Text -> DeleteImage

-- | Create a value of <a>DeleteImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteImage'</a>, <a>deleteImage_name</a> - The name of
--   the image.
newDeleteImage :: Text -> DeleteImage

-- | <i>See:</i> <a>newDeleteImageResponse</a> smart constructor.
data DeleteImageResponse
DeleteImageResponse' :: Maybe Image -> Int -> DeleteImageResponse

-- | Create a value of <a>DeleteImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_image</a> - Information about the image.
--   
--   <a>$sel:httpStatus:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_httpStatus</a> - The response's http status
--   code.
newDeleteImageResponse :: Int -> DeleteImageResponse

-- | <i>See:</i> <a>newDeleteImagePermissions</a> smart constructor.
data DeleteImagePermissions
DeleteImagePermissions' :: Text -> Text -> DeleteImagePermissions

-- | Create a value of <a>DeleteImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteImagePermissions'</a>,
--   <a>deleteImagePermissions_name</a> - The name of the private image.
--   
--   <a>$sel:sharedAccountId:DeleteImagePermissions'</a>,
--   <a>deleteImagePermissions_sharedAccountId</a> - The 12-digit
--   identifier of the AWS account for which to delete image permissions.
newDeleteImagePermissions :: Text -> Text -> DeleteImagePermissions

-- | <i>See:</i> <a>newDeleteImagePermissionsResponse</a> smart
--   constructor.
data DeleteImagePermissionsResponse
DeleteImagePermissionsResponse' :: Int -> DeleteImagePermissionsResponse

-- | Create a value of <a>DeleteImagePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteImagePermissionsResponse'</a>,
--   <a>deleteImagePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImagePermissionsResponse :: Int -> DeleteImagePermissionsResponse

-- | <i>See:</i> <a>newCreateStreamingURL</a> smart constructor.
data CreateStreamingURL
CreateStreamingURL' :: Maybe Text -> Maybe Text -> Maybe Integer -> Text -> Text -> Text -> CreateStreamingURL

-- | Create a value of <a>CreateStreamingURL</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:CreateStreamingURL'</a>,
--   <a>createStreamingURL_applicationId</a> - The name of the application
--   to launch after the session starts. This is the name that you
--   specified as <b>Name</b> in the Image Assistant. If your fleet is
--   enabled for the <b>Desktop</b> stream view, you can also choose to
--   launch directly to the operating system desktop. To do so, specify
--   <b>Desktop</b>.
--   
--   <a>$sel:sessionContext:CreateStreamingURL'</a>,
--   <a>createStreamingURL_sessionContext</a> - The session context. For
--   more information, see <a>Session Context</a> in the <i>Amazon
--   AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:validity:CreateStreamingURL'</a>,
--   <a>createStreamingURL_validity</a> - The time that the streaming URL
--   will be valid, in seconds. Specify a value between 1 and 604800
--   seconds. The default is 60 seconds.
--   
--   <a>$sel:stackName:CreateStreamingURL'</a>,
--   <a>createStreamingURL_stackName</a> - The name of the stack.
--   
--   <a>$sel:fleetName:CreateStreamingURL'</a>,
--   <a>createStreamingURL_fleetName</a> - The name of the fleet.
--   
--   <a>$sel:userId:CreateStreamingURL'</a>,
--   <a>createStreamingURL_userId</a> - The identifier of the user.
newCreateStreamingURL :: Text -> Text -> Text -> CreateStreamingURL

-- | <i>See:</i> <a>newCreateStreamingURLResponse</a> smart constructor.
data CreateStreamingURLResponse
CreateStreamingURLResponse' :: Maybe Text -> Maybe POSIX -> Int -> CreateStreamingURLResponse

-- | Create a value of <a>CreateStreamingURLResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingURL:CreateStreamingURLResponse'</a>,
--   <a>createStreamingURLResponse_streamingURL</a> - The URL to start the
--   AppStream 2.0 streaming session.
--   
--   <a>$sel:expires:CreateStreamingURLResponse'</a>,
--   <a>createStreamingURLResponse_expires</a> - The elapsed time, in
--   seconds after the Unix epoch, when this URL expires.
--   
--   <a>$sel:httpStatus:CreateStreamingURLResponse'</a>,
--   <a>createStreamingURLResponse_httpStatus</a> - The response's http
--   status code.
newCreateStreamingURLResponse :: Int -> CreateStreamingURLResponse

-- | <i>See:</i> <a>newDescribeImageBuilders</a> smart constructor.
data DescribeImageBuilders
DescribeImageBuilders' :: Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeImageBuilders

-- | Create a value of <a>DescribeImageBuilders</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeImageBuilders'</a>,
--   <a>describeImageBuilders_names</a> - The names of the image builders
--   to describe.
--   
--   <a>$sel:nextToken:DescribeImageBuilders'</a>,
--   <a>describeImageBuilders_nextToken</a> - The pagination token to use
--   to retrieve the next page of results for this operation. If this value
--   is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeImageBuilders'</a>,
--   <a>describeImageBuilders_maxResults</a> - The maximum size of each
--   page of results.
newDescribeImageBuilders :: DescribeImageBuilders

-- | <i>See:</i> <a>newDescribeImageBuildersResponse</a> smart constructor.
data DescribeImageBuildersResponse
DescribeImageBuildersResponse' :: Maybe Text -> Maybe [ImageBuilder] -> Int -> DescribeImageBuildersResponse

-- | Create a value of <a>DescribeImageBuildersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeImageBuilders'</a>,
--   <a>describeImageBuildersResponse_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   there are no more pages, this value is null.
--   
--   <a>$sel:imageBuilders:DescribeImageBuildersResponse'</a>,
--   <a>describeImageBuildersResponse_imageBuilders</a> - Information about
--   the image builders.
--   
--   <a>$sel:httpStatus:DescribeImageBuildersResponse'</a>,
--   <a>describeImageBuildersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeImageBuildersResponse :: Int -> DescribeImageBuildersResponse

-- | <i>See:</i> <a>newDescribeUserStackAssociations</a> smart constructor.
data DescribeUserStackAssociations
DescribeUserStackAssociations' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe (Sensitive Text) -> Maybe AuthenticationType -> DescribeUserStackAssociations

-- | Create a value of <a>DescribeUserStackAssociations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_nextToken</a> - The pagination token
--   to use to retrieve the next page of results for this operation. If
--   this value is null, it retrieves the first page.
--   
--   <a>$sel:stackName:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_stackName</a> - The name of the stack
--   that is associated with the user.
--   
--   <a>$sel:maxResults:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_maxResults</a> - The maximum size of
--   each page of results.
--   
--   <a>$sel:userName:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_userName</a> - The email address of
--   the user who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociations_authenticationType</a> - The
--   authentication type for the user who is associated with the stack. You
--   must specify USERPOOL.
newDescribeUserStackAssociations :: DescribeUserStackAssociations

-- | <i>See:</i> <a>newDescribeUserStackAssociationsResponse</a> smart
--   constructor.
data DescribeUserStackAssociationsResponse
DescribeUserStackAssociationsResponse' :: Maybe Text -> Maybe (NonEmpty UserStackAssociation) -> Int -> DescribeUserStackAssociationsResponse

-- | Create a value of <a>DescribeUserStackAssociationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeUserStackAssociations'</a>,
--   <a>describeUserStackAssociationsResponse_nextToken</a> - The
--   pagination token to use to retrieve the next page of results for this
--   operation. If there are no more pages, this value is null.
--   
--   
--   <a>$sel:userStackAssociations:DescribeUserStackAssociationsResponse'</a>,
--   <a>describeUserStackAssociationsResponse_userStackAssociations</a> -
--   The UserStackAssociation objects.
--   
--   <a>$sel:httpStatus:DescribeUserStackAssociationsResponse'</a>,
--   <a>describeUserStackAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeUserStackAssociationsResponse :: Int -> DescribeUserStackAssociationsResponse

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Sensitive Text -> AuthenticationType -> DeleteUser

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:DeleteUser'</a>, <a>deleteUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:DeleteUser'</a>,
--   <a>deleteUser_authenticationType</a> - The authentication type for the
--   user. You must specify USERPOOL.
newDeleteUser :: Text -> AuthenticationType -> DeleteUser

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: Int -> DeleteUserResponse

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserResponse'</a>,
--   <a>deleteUserResponse_httpStatus</a> - The response's http status
--   code.
newDeleteUserResponse :: Int -> DeleteUserResponse

-- | <i>See:</i> <a>newDisableUser</a> smart constructor.
data DisableUser
DisableUser' :: Sensitive Text -> AuthenticationType -> DisableUser

-- | Create a value of <a>DisableUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:DisableUser'</a>, <a>disableUser_userName</a> - The
--   email address of the user.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:DisableUser'</a>,
--   <a>disableUser_authenticationType</a> - The authentication type for
--   the user. You must specify USERPOOL.
newDisableUser :: Text -> AuthenticationType -> DisableUser

-- | <i>See:</i> <a>newDisableUserResponse</a> smart constructor.
data DisableUserResponse
DisableUserResponse' :: Int -> DisableUserResponse

-- | Create a value of <a>DisableUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisableUserResponse'</a>,
--   <a>disableUserResponse_httpStatus</a> - The response's http status
--   code.
newDisableUserResponse :: Int -> DisableUserResponse

-- | <i>See:</i> <a>newCreateImageBuilderStreamingURL</a> smart
--   constructor.
data CreateImageBuilderStreamingURL
CreateImageBuilderStreamingURL' :: Maybe Integer -> Text -> CreateImageBuilderStreamingURL

-- | Create a value of <a>CreateImageBuilderStreamingURL</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validity:CreateImageBuilderStreamingURL'</a>,
--   <a>createImageBuilderStreamingURL_validity</a> - The time that the
--   streaming URL will be valid, in seconds. Specify a value between 1 and
--   604800 seconds. The default is 3600 seconds.
--   
--   <a>$sel:name:CreateImageBuilderStreamingURL'</a>,
--   <a>createImageBuilderStreamingURL_name</a> - The name of the image
--   builder.
newCreateImageBuilderStreamingURL :: Text -> CreateImageBuilderStreamingURL

-- | <i>See:</i> <a>newCreateImageBuilderStreamingURLResponse</a> smart
--   constructor.
data CreateImageBuilderStreamingURLResponse
CreateImageBuilderStreamingURLResponse' :: Maybe Text -> Maybe POSIX -> Int -> CreateImageBuilderStreamingURLResponse

-- | Create a value of <a>CreateImageBuilderStreamingURLResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingURL:CreateImageBuilderStreamingURLResponse'</a>,
--   <a>createImageBuilderStreamingURLResponse_streamingURL</a> - The URL
--   to start the AppStream 2.0 streaming session.
--   
--   <a>$sel:expires:CreateImageBuilderStreamingURLResponse'</a>,
--   <a>createImageBuilderStreamingURLResponse_expires</a> - The elapsed
--   time, in seconds after the Unix epoch, when this URL expires.
--   
--   <a>$sel:httpStatus:CreateImageBuilderStreamingURLResponse'</a>,
--   <a>createImageBuilderStreamingURLResponse_httpStatus</a> - The
--   response's http status code.
newCreateImageBuilderStreamingURLResponse :: Int -> CreateImageBuilderStreamingURLResponse

-- | <i>See:</i> <a>newExpireSession</a> smart constructor.
data ExpireSession
ExpireSession' :: Text -> ExpireSession

-- | Create a value of <a>ExpireSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionId:ExpireSession'</a>, <a>expireSession_sessionId</a> -
--   The identifier of the streaming session.
newExpireSession :: Text -> ExpireSession

-- | <i>See:</i> <a>newExpireSessionResponse</a> smart constructor.
data ExpireSessionResponse
ExpireSessionResponse' :: Int -> ExpireSessionResponse

-- | Create a value of <a>ExpireSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ExpireSessionResponse'</a>,
--   <a>expireSessionResponse_httpStatus</a> - The response's http status
--   code.
newExpireSessionResponse :: Int -> ExpireSessionResponse

-- | <i>See:</i> <a>newDescribeDirectoryConfigs</a> smart constructor.
data DescribeDirectoryConfigs
DescribeDirectoryConfigs' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeDirectoryConfigs

-- | Create a value of <a>DescribeDirectoryConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigs_nextToken</a> - The pagination token to
--   use to retrieve the next page of results for this operation. If this
--   value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigs_maxResults</a> - The maximum size of each
--   page of results.
--   
--   <a>$sel:directoryNames:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigs_directoryNames</a> - The directory names.
newDescribeDirectoryConfigs :: DescribeDirectoryConfigs

-- | <i>See:</i> <a>newDescribeDirectoryConfigsResponse</a> smart
--   constructor.
data DescribeDirectoryConfigsResponse
DescribeDirectoryConfigsResponse' :: Maybe Text -> Maybe [DirectoryConfig] -> Int -> DescribeDirectoryConfigsResponse

-- | Create a value of <a>DescribeDirectoryConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDirectoryConfigs'</a>,
--   <a>describeDirectoryConfigsResponse_nextToken</a> - The pagination
--   token to use to retrieve the next page of results for this operation.
--   If there are no more pages, this value is null.
--   
--   <a>$sel:directoryConfigs:DescribeDirectoryConfigsResponse'</a>,
--   <a>describeDirectoryConfigsResponse_directoryConfigs</a> - Information
--   about the directory configurations. Note that although the response
--   syntax in this topic includes the account password, this password is
--   not returned in the actual response.
--   
--   <a>$sel:httpStatus:DescribeDirectoryConfigsResponse'</a>,
--   <a>describeDirectoryConfigsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDirectoryConfigsResponse :: Int -> DescribeDirectoryConfigsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The information about the
--   tags.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDescribeImagePermissions</a> smart constructor.
data DescribeImagePermissions
DescribeImagePermissions' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty Text) -> Text -> DescribeImagePermissions

-- | Create a value of <a>DescribeImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_nextToken</a> - The pagination token to
--   use to retrieve the next page of results for this operation. If this
--   value is null, it retrieves the first page.
--   
--   <a>$sel:maxResults:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_maxResults</a> - The maximum size of each
--   page of results.
--   
--   <a>$sel:sharedAwsAccountIds:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_sharedAwsAccountIds</a> - The 12-digit
--   identifier of one or more AWS accounts with which the image is shared.
--   
--   <a>$sel:name:DescribeImagePermissions'</a>,
--   <a>describeImagePermissions_name</a> - The name of the private image
--   for which to describe permissions. The image must be one that you own.
newDescribeImagePermissions :: Text -> DescribeImagePermissions

-- | <i>See:</i> <a>newDescribeImagePermissionsResponse</a> smart
--   constructor.
data DescribeImagePermissionsResponse
DescribeImagePermissionsResponse' :: Maybe [SharedImagePermissions] -> Maybe Text -> Maybe Text -> Int -> DescribeImagePermissionsResponse

-- | Create a value of <a>DescribeImagePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:sharedImagePermissionsList:DescribeImagePermissionsResponse'</a>,
--   <a>describeImagePermissionsResponse_sharedImagePermissionsList</a> -
--   The permissions for a private image that you own.
--   
--   <a>$sel:nextToken:DescribeImagePermissions'</a>,
--   <a>describeImagePermissionsResponse_nextToken</a> - The pagination
--   token to use to retrieve the next page of results for this operation.
--   If there are no more pages, this value is null.
--   
--   <a>$sel:name:DescribeImagePermissions'</a>,
--   <a>describeImagePermissionsResponse_name</a> - The name of the private
--   image.
--   
--   <a>$sel:httpStatus:DescribeImagePermissionsResponse'</a>,
--   <a>describeImagePermissionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeImagePermissionsResponse :: Int -> DescribeImagePermissionsResponse
newtype AccessEndpointType
AccessEndpointType' :: Text -> AccessEndpointType
[fromAccessEndpointType] :: AccessEndpointType -> Text
pattern AccessEndpointType_STREAMING :: AccessEndpointType
newtype Action
Action' :: Text -> Action
[fromAction] :: Action -> Text
pattern Action_CLIPBOARD_COPY_FROM_LOCAL_DEVICE :: Action
pattern Action_CLIPBOARD_COPY_TO_LOCAL_DEVICE :: Action
pattern Action_DOMAIN_PASSWORD_SIGNIN :: Action
pattern Action_DOMAIN_SMART_CARD_SIGNIN :: Action
pattern Action_FILE_DOWNLOAD :: Action
pattern Action_FILE_UPLOAD :: Action
pattern Action_PRINTING_TO_LOCAL_DEVICE :: Action
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_API :: AuthenticationType
pattern AuthenticationType_SAML :: AuthenticationType
pattern AuthenticationType_USERPOOL :: AuthenticationType

-- | The fleet attribute.
newtype FleetAttribute
FleetAttribute' :: Text -> FleetAttribute
[fromFleetAttribute] :: FleetAttribute -> Text
pattern FleetAttribute_DOMAIN_JOIN_INFO :: FleetAttribute
pattern FleetAttribute_IAM_ROLE_ARN :: FleetAttribute
pattern FleetAttribute_VPC_CONFIGURATION :: FleetAttribute
pattern FleetAttribute_VPC_CONFIGURATION_SECURITY_GROUP_IDS :: FleetAttribute
newtype FleetErrorCode
FleetErrorCode' :: Text -> FleetErrorCode
[fromFleetErrorCode] :: FleetErrorCode -> Text
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_ACCESS_DENIED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_FILE_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_INVALID_PARAMETER :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_LOGON_FAILURE :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_MORE_DATA :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_NOT_SUPPORTED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_INTERNAL_SERVICE_ERROR :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_PASSWORD_EXPIRED :: FleetErrorCode
pattern FleetErrorCode_DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED :: FleetErrorCode
pattern FleetErrorCode_FLEET_INSTANCE_PROVISIONING_FAILURE :: FleetErrorCode
pattern FleetErrorCode_FLEET_STOPPED :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_IS_MISSING :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION :: FleetErrorCode
pattern FleetErrorCode_IGW_NOT_ATTACHED :: FleetErrorCode
pattern FleetErrorCode_IMAGE_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_INTERNAL_SERVICE_ERROR :: FleetErrorCode
pattern FleetErrorCode_INVALID_SUBNET_CONFIGURATION :: FleetErrorCode
pattern FleetErrorCode_MACHINE_ROLE_IS_MISSING :: FleetErrorCode
pattern FleetErrorCode_NETWORK_INTERFACE_LIMIT_EXCEEDED :: FleetErrorCode
pattern FleetErrorCode_SECURITY_GROUPS_NOT_FOUND :: FleetErrorCode
pattern FleetErrorCode_STS_DISABLED_IN_REGION :: FleetErrorCode
pattern FleetErrorCode_SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES :: FleetErrorCode
pattern FleetErrorCode_SUBNET_NOT_FOUND :: FleetErrorCode
newtype FleetState
FleetState' :: Text -> FleetState
[fromFleetState] :: FleetState -> Text
pattern FleetState_RUNNING :: FleetState
pattern FleetState_STARTING :: FleetState
pattern FleetState_STOPPED :: FleetState
pattern FleetState_STOPPING :: FleetState
newtype FleetType
FleetType' :: Text -> FleetType
[fromFleetType] :: FleetType -> Text
pattern FleetType_ALWAYS_ON :: FleetType
pattern FleetType_ON_DEMAND :: FleetType
newtype ImageBuilderState
ImageBuilderState' :: Text -> ImageBuilderState
[fromImageBuilderState] :: ImageBuilderState -> Text
pattern ImageBuilderState_DELETING :: ImageBuilderState
pattern ImageBuilderState_FAILED :: ImageBuilderState
pattern ImageBuilderState_PENDING :: ImageBuilderState
pattern ImageBuilderState_PENDING_QUALIFICATION :: ImageBuilderState
pattern ImageBuilderState_REBOOTING :: ImageBuilderState
pattern ImageBuilderState_RUNNING :: ImageBuilderState
pattern ImageBuilderState_SNAPSHOTTING :: ImageBuilderState
pattern ImageBuilderState_STOPPED :: ImageBuilderState
pattern ImageBuilderState_STOPPING :: ImageBuilderState
pattern ImageBuilderState_UPDATING :: ImageBuilderState
pattern ImageBuilderState_UPDATING_AGENT :: ImageBuilderState
newtype ImageBuilderStateChangeReasonCode
ImageBuilderStateChangeReasonCode' :: Text -> ImageBuilderStateChangeReasonCode
[fromImageBuilderStateChangeReasonCode] :: ImageBuilderStateChangeReasonCode -> Text
pattern ImageBuilderStateChangeReasonCode_IMAGE_UNAVAILABLE :: ImageBuilderStateChangeReasonCode
pattern ImageBuilderStateChangeReasonCode_INTERNAL_ERROR :: ImageBuilderStateChangeReasonCode
newtype ImageState
ImageState' :: Text -> ImageState
[fromImageState] :: ImageState -> Text
pattern ImageState_AVAILABLE :: ImageState
pattern ImageState_COPYING :: ImageState
pattern ImageState_CREATING :: ImageState
pattern ImageState_DELETING :: ImageState
pattern ImageState_FAILED :: ImageState
pattern ImageState_IMPORTING :: ImageState
pattern ImageState_PENDING :: ImageState
newtype ImageStateChangeReasonCode
ImageStateChangeReasonCode' :: Text -> ImageStateChangeReasonCode
[fromImageStateChangeReasonCode] :: ImageStateChangeReasonCode -> Text
pattern ImageStateChangeReasonCode_IMAGE_BUILDER_NOT_AVAILABLE :: ImageStateChangeReasonCode
pattern ImageStateChangeReasonCode_IMAGE_COPY_FAILURE :: ImageStateChangeReasonCode
pattern ImageStateChangeReasonCode_INTERNAL_ERROR :: ImageStateChangeReasonCode
newtype MessageAction
MessageAction' :: Text -> MessageAction
[fromMessageAction] :: MessageAction -> Text
pattern MessageAction_RESEND :: MessageAction
pattern MessageAction_SUPPRESS :: MessageAction
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_DISABLED :: Permission
pattern Permission_ENABLED :: Permission
newtype PlatformType
PlatformType' :: Text -> PlatformType
[fromPlatformType] :: PlatformType -> Text
pattern PlatformType_WINDOWS :: PlatformType
pattern PlatformType_WINDOWS_SERVER_2016 :: PlatformType
pattern PlatformType_WINDOWS_SERVER_2019 :: PlatformType
newtype SessionConnectionState
SessionConnectionState' :: Text -> SessionConnectionState
[fromSessionConnectionState] :: SessionConnectionState -> Text
pattern SessionConnectionState_CONNECTED :: SessionConnectionState
pattern SessionConnectionState_NOT_CONNECTED :: SessionConnectionState

-- | Possible values for the state of a streaming session.
newtype SessionState
SessionState' :: Text -> SessionState
[fromSessionState] :: SessionState -> Text
pattern SessionState_ACTIVE :: SessionState
pattern SessionState_EXPIRED :: SessionState
pattern SessionState_PENDING :: SessionState
newtype StackAttribute
StackAttribute' :: Text -> StackAttribute
[fromStackAttribute] :: StackAttribute -> Text
pattern StackAttribute_ACCESS_ENDPOINTS :: StackAttribute
pattern StackAttribute_EMBED_HOST_DOMAINS :: StackAttribute
pattern StackAttribute_FEEDBACK_URL :: StackAttribute
pattern StackAttribute_IAM_ROLE_ARN :: StackAttribute
pattern StackAttribute_REDIRECT_URL :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTORS :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_GOOGLE_DRIVE :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_HOMEFOLDERS :: StackAttribute
pattern StackAttribute_STORAGE_CONNECTOR_ONE_DRIVE :: StackAttribute
pattern StackAttribute_THEME_NAME :: StackAttribute
pattern StackAttribute_USER_SETTINGS :: StackAttribute
newtype StackErrorCode
StackErrorCode' :: Text -> StackErrorCode
[fromStackErrorCode] :: StackErrorCode -> Text
pattern StackErrorCode_INTERNAL_SERVICE_ERROR :: StackErrorCode
pattern StackErrorCode_STORAGE_CONNECTOR_ERROR :: StackErrorCode

-- | The type of storage connector.
newtype StorageConnectorType
StorageConnectorType' :: Text -> StorageConnectorType
[fromStorageConnectorType] :: StorageConnectorType -> Text
pattern StorageConnectorType_GOOGLE_DRIVE :: StorageConnectorType
pattern StorageConnectorType_HOMEFOLDERS :: StorageConnectorType
pattern StorageConnectorType_ONE_DRIVE :: StorageConnectorType
newtype StreamView
StreamView' :: Text -> StreamView
[fromStreamView] :: StreamView -> Text
pattern StreamView_APP :: StreamView
pattern StreamView_DESKTOP :: StreamView
newtype UsageReportExecutionErrorCode
UsageReportExecutionErrorCode' :: Text -> UsageReportExecutionErrorCode
[fromUsageReportExecutionErrorCode] :: UsageReportExecutionErrorCode -> Text
pattern UsageReportExecutionErrorCode_ACCESS_DENIED :: UsageReportExecutionErrorCode
pattern UsageReportExecutionErrorCode_INTERNAL_SERVICE_ERROR :: UsageReportExecutionErrorCode
pattern UsageReportExecutionErrorCode_RESOURCE_NOT_FOUND :: UsageReportExecutionErrorCode
newtype UsageReportSchedule
UsageReportSchedule' :: Text -> UsageReportSchedule
[fromUsageReportSchedule] :: UsageReportSchedule -> Text
pattern UsageReportSchedule_DAILY :: UsageReportSchedule
newtype UserStackAssociationErrorCode
UserStackAssociationErrorCode' :: Text -> UserStackAssociationErrorCode
[fromUserStackAssociationErrorCode] :: UserStackAssociationErrorCode -> Text
pattern UserStackAssociationErrorCode_DIRECTORY_NOT_FOUND :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_INTERNAL_ERROR :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_STACK_NOT_FOUND :: UserStackAssociationErrorCode
pattern UserStackAssociationErrorCode_USER_NAME_NOT_FOUND :: UserStackAssociationErrorCode
newtype VisibilityType
VisibilityType' :: Text -> VisibilityType
[fromVisibilityType] :: VisibilityType -> Text
pattern VisibilityType_PRIVATE :: VisibilityType
pattern VisibilityType_PUBLIC :: VisibilityType
pattern VisibilityType_SHARED :: VisibilityType

-- | Describes an interface VPC endpoint (interface endpoint) that lets you
--   create a private connection between the virtual private cloud (VPC)
--   that you specify and AppStream 2.0. When you specify an interface
--   endpoint for a stack, users of the stack can connect to AppStream 2.0
--   only through that endpoint. When you specify an interface endpoint for
--   an image builder, administrators can connect to the image builder only
--   through that endpoint.
--   
--   <i>See:</i> <a>newAccessEndpoint</a> smart constructor.
data AccessEndpoint
AccessEndpoint' :: Maybe Text -> AccessEndpointType -> AccessEndpoint

-- | Create a value of <a>AccessEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceId:AccessEndpoint'</a>, <a>accessEndpoint_vpceId</a> - The
--   identifier (ID) of the VPC in which the interface endpoint is used.
--   
--   <a>$sel:endpointType:AccessEndpoint'</a>,
--   <a>accessEndpoint_endpointType</a> - The type of interface endpoint.
newAccessEndpoint :: AccessEndpointType -> AccessEndpoint

-- | Describes an application in the application catalog.
--   
--   <i>See:</i> <a>newApplication</a> smart constructor.
data Application
Application' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Application

-- | Create a value of <a>Application</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iconURL:Application'</a>, <a>application_iconURL</a> - The URL
--   for the application icon. This URL might be time-limited.
--   
--   <a>$sel:launchPath:Application'</a>, <a>application_launchPath</a> -
--   The path to the application executable in the instance.
--   
--   <a>$sel:metadata:Application'</a>, <a>application_metadata</a> -
--   Additional attributes that describe the application.
--   
--   <a>$sel:enabled:Application'</a>, <a>application_enabled</a> - If
--   there is a problem, the application can be disabled after image
--   creation.
--   
--   <a>$sel:name:Application'</a>, <a>application_name</a> - The name of
--   the application.
--   
--   <a>$sel:launchParameters:Application'</a>,
--   <a>application_launchParameters</a> - The arguments that are passed to
--   the application at launch.
--   
--   <a>$sel:displayName:Application'</a>, <a>application_displayName</a> -
--   The application name to display.
newApplication :: Application

-- | The persistent application settings for users of a stack.
--   
--   <i>See:</i> <a>newApplicationSettings</a> smart constructor.
data ApplicationSettings
ApplicationSettings' :: Maybe Text -> Bool -> ApplicationSettings

-- | Create a value of <a>ApplicationSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settingsGroup:ApplicationSettings'</a>,
--   <a>applicationSettings_settingsGroup</a> - The path prefix for the S3
--   bucket where users’ persistent application settings are stored. You
--   can allow the same persistent application settings to be used across
--   multiple stacks by specifying the same settings group for each stack.
--   
--   <a>$sel:enabled:ApplicationSettings'</a>,
--   <a>applicationSettings_enabled</a> - Enables or disables persistent
--   application settings for users during their streaming sessions.
newApplicationSettings :: Bool -> ApplicationSettings

-- | Describes the persistent application settings for users of a stack.
--   
--   <i>See:</i> <a>newApplicationSettingsResponse</a> smart constructor.
data ApplicationSettingsResponse
ApplicationSettingsResponse' :: Maybe Bool -> Maybe Text -> Maybe Text -> ApplicationSettingsResponse

-- | Create a value of <a>ApplicationSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_enabled</a> - Specifies whether
--   persistent application settings are enabled for users during their
--   streaming sessions.
--   
--   <a>$sel:settingsGroup:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_settingsGroup</a> - The path prefix for
--   the S3 bucket where users’ persistent application settings are stored.
--   
--   <a>$sel:s3BucketName:ApplicationSettingsResponse'</a>,
--   <a>applicationSettingsResponse_s3BucketName</a> - The S3 bucket where
--   users’ persistent application settings are stored. When persistent
--   application settings are enabled for the first time for an account in
--   an AWS Region, an S3 bucket is created. The bucket is unique to the
--   AWS account and the Region.
newApplicationSettingsResponse :: ApplicationSettingsResponse

-- | Describes the capacity for a fleet.
--   
--   <i>See:</i> <a>newComputeCapacity</a> smart constructor.
data ComputeCapacity
ComputeCapacity' :: Int -> ComputeCapacity

-- | Create a value of <a>ComputeCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:desiredInstances:ComputeCapacity'</a>,
--   <a>computeCapacity_desiredInstances</a> - The desired number of
--   streaming instances.
newComputeCapacity :: Int -> ComputeCapacity

-- | Describes the capacity status for a fleet.
--   
--   <i>See:</i> <a>newComputeCapacityStatus</a> smart constructor.
data ComputeCapacityStatus
ComputeCapacityStatus' :: Maybe Int -> Maybe Int -> Maybe Int -> Int -> ComputeCapacityStatus

-- | Create a value of <a>ComputeCapacityStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:running:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_running</a> - The total number of
--   simultaneous streaming instances that are running.
--   
--   <a>$sel:available:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_available</a> - The number of currently
--   available instances that can be used to stream sessions.
--   
--   <a>$sel:inUse:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_inUse</a> - The number of instances in use
--   for streaming.
--   
--   <a>$sel:desired:ComputeCapacityStatus'</a>,
--   <a>computeCapacityStatus_desired</a> - The desired number of streaming
--   instances.
newComputeCapacityStatus :: Int -> ComputeCapacityStatus

-- | Describes the configuration information required to join fleets and
--   image builders to Microsoft Active Directory domains.
--   
--   <i>See:</i> <a>newDirectoryConfig</a> smart constructor.
data DirectoryConfig
DirectoryConfig' :: Maybe ServiceAccountCredentials -> Maybe POSIX -> Maybe [Text] -> Text -> DirectoryConfig

-- | Create a value of <a>DirectoryConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceAccountCredentials:DirectoryConfig'</a>,
--   <a>directoryConfig_serviceAccountCredentials</a> - The credentials for
--   the service account used by the fleet or image builder to connect to
--   the directory.
--   
--   <a>$sel:createdTime:DirectoryConfig'</a>,
--   <a>directoryConfig_createdTime</a> - The time the directory
--   configuration was created.
--   
--   <a>$sel:organizationalUnitDistinguishedNames:DirectoryConfig'</a>,
--   <a>directoryConfig_organizationalUnitDistinguishedNames</a> - The
--   distinguished names of the organizational units for computer accounts.
--   
--   <a>$sel:directoryName:DirectoryConfig'</a>,
--   <a>directoryConfig_directoryName</a> - The fully qualified name of the
--   directory (for example, corp.example.com).
newDirectoryConfig :: Text -> DirectoryConfig

-- | Describes the configuration information required to join fleets and
--   image builders to Microsoft Active Directory domains.
--   
--   <i>See:</i> <a>newDomainJoinInfo</a> smart constructor.
data DomainJoinInfo
DomainJoinInfo' :: Maybe Text -> Maybe Text -> DomainJoinInfo

-- | Create a value of <a>DomainJoinInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationalUnitDistinguishedName:DomainJoinInfo'</a>,
--   <a>domainJoinInfo_organizationalUnitDistinguishedName</a> - The
--   distinguished name of the organizational unit for computer accounts.
--   
--   <a>$sel:directoryName:DomainJoinInfo'</a>,
--   <a>domainJoinInfo_directoryName</a> - The fully qualified name of the
--   directory (for example, corp.example.com).
newDomainJoinInfo :: DomainJoinInfo

-- | Describes a fleet.
--   
--   <i>See:</i> <a>newFleet</a> smart constructor.
data Fleet
Fleet' :: Maybe Int -> Maybe Int -> Maybe VpcConfig -> Maybe Text -> Maybe DomainJoinInfo -> Maybe FleetType -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe StreamView -> Maybe Text -> Maybe Bool -> Maybe [FleetError] -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> ComputeCapacityStatus -> FleetState -> Fleet

-- | Create a value of <a>Fleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disconnectTimeoutInSeconds:Fleet'</a>,
--   <a>fleet_disconnectTimeoutInSeconds</a> - The amount of time that a
--   streaming session remains active after users disconnect. If they try
--   to reconnect to the streaming session after a disconnection or network
--   interruption within this time interval, they are connected to their
--   previous session. Otherwise, they are connected to a new session with
--   a new streaming instance.
--   
--   Specify a value between 60 and 360000.
--   
--   <a>$sel:maxUserDurationInSeconds:Fleet'</a>,
--   <a>fleet_maxUserDurationInSeconds</a> - The maximum amount of time
--   that a streaming session can remain active, in seconds. If users are
--   still connected to a streaming instance five minutes before this limit
--   is reached, they are prompted to save any open documents before being
--   disconnected. After this time elapses, the instance is terminated and
--   replaced by a new instance.
--   
--   Specify a value between 600 and 360000.
--   
--   <a>$sel:vpcConfig:Fleet'</a>, <a>fleet_vpcConfig</a> - The VPC
--   configuration for the fleet.
--   
--   <a>$sel:iamRoleArn:Fleet'</a>, <a>fleet_iamRoleArn</a> - The ARN of
--   the IAM role that is applied to the fleet. To assume a role, the fleet
--   instance calls the AWS Security Token Service (STS)
--   <tt>AssumeRole</tt> API operation and passes the ARN of the role to
--   use. The operation creates a new session with temporary credentials.
--   AppStream 2.0 retrieves the temporary credentials and creates the
--   <b>appstream_machine_role</b> credential profile on the instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:domainJoinInfo:Fleet'</a>, <a>fleet_domainJoinInfo</a> - The
--   name of the directory and organizational unit (OU) to use to join the
--   fleet to a Microsoft Active Directory domain.
--   
--   <a>$sel:fleetType:Fleet'</a>, <a>fleet_fleetType</a> - The fleet type.
--   
--   <ul>
--   <li><i>ALWAYS_ON</i> Provides users with instant-on access to their
--   apps. You are charged for all running instances in your fleet, even if
--   no users are streaming apps.</li>
--   <li><i>ON_DEMAND</i> Provide users with access to applications after
--   they connect, which takes one to two minutes. You are charged for
--   instance streaming when users are connected and a small hourly fee for
--   instances that are not streaming apps.</li>
--   </ul>
--   
--   <a>$sel:idleDisconnectTimeoutInSeconds:Fleet'</a>,
--   <a>fleet_idleDisconnectTimeoutInSeconds</a> - The amount of time that
--   users can be idle (inactive) before they are disconnected from their
--   streaming session and the <tt>DisconnectTimeoutInSeconds</tt> time
--   interval begins. Users are notified before they are disconnected due
--   to inactivity. If users try to reconnect to the streaming session
--   before the time interval specified in
--   <tt>DisconnectTimeoutInSeconds</tt> elapses, they are connected to
--   their previous session. Users are considered idle when they stop
--   providing keyboard or mouse input during their streaming session. File
--   uploads and downloads, audio in, audio out, and pixels changing do not
--   qualify as user activity. If users continue to be idle after the time
--   interval in <tt>IdleDisconnectTimeoutInSeconds</tt> elapses, they are
--   disconnected.
--   
--   To prevent users from being disconnected due to inactivity, specify a
--   value of 0. Otherwise, specify a value between 60 and 3600. The
--   default value is 0.
--   
--   If you enable this feature, we recommend that you specify a value that
--   corresponds exactly to a whole number of minutes (for example, 60,
--   120, and 180). If you don't do this, the value is rounded to the
--   nearest minute. For example, if you specify a value of 70, users are
--   disconnected after 1 minute of inactivity. If you specify a value that
--   is at the midpoint between two different minutes, the value is rounded
--   up. For example, if you specify a value of 90, users are disconnected
--   after 2 minutes of inactivity.
--   
--   <a>$sel:imageName:Fleet'</a>, <a>fleet_imageName</a> - The name of the
--   image used to create the fleet.
--   
--   <a>$sel:createdTime:Fleet'</a>, <a>fleet_createdTime</a> - The time
--   the fleet was created.
--   
--   <a>$sel:streamView:Fleet'</a>, <a>fleet_streamView</a> - The AppStream
--   2.0 view that is displayed to your users when they stream from the
--   fleet. When <tt>APP</tt> is specified, only the windows of
--   applications opened by users display. When <tt>DESKTOP</tt> is
--   specified, the standard desktop that is provided by the operating
--   system displays.
--   
--   The default value is <tt>APP</tt>.
--   
--   <a>$sel:description:Fleet'</a>, <a>fleet_description</a> - The
--   description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:Fleet'</a>,
--   <a>fleet_enableDefaultInternetAccess</a> - Indicates whether default
--   internet access is enabled for the fleet.
--   
--   <a>$sel:fleetErrors:Fleet'</a>, <a>fleet_fleetErrors</a> - The fleet
--   errors.
--   
--   <a>$sel:displayName:Fleet'</a>, <a>fleet_displayName</a> - The fleet
--   name to display.
--   
--   <a>$sel:imageArn:Fleet'</a>, <a>fleet_imageArn</a> - The ARN for the
--   public, private, or shared image.
--   
--   <a>$sel:arn:Fleet'</a>, <a>fleet_arn</a> - The Amazon Resource Name
--   (ARN) for the fleet.
--   
--   <a>$sel:name:Fleet'</a>, <a>fleet_name</a> - The name of the fleet.
--   
--   <a>$sel:instanceType:Fleet'</a>, <a>fleet_instanceType</a> - The
--   instance type to use when launching fleet instances. The following
--   instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:computeCapacityStatus:Fleet'</a>,
--   <a>fleet_computeCapacityStatus</a> - The capacity status for the
--   fleet.
--   
--   <a>$sel:state:Fleet'</a>, <a>fleet_state</a> - The current state for
--   the fleet.
newFleet :: Text -> Text -> Text -> ComputeCapacityStatus -> FleetState -> Fleet

-- | Describes a fleet error.
--   
--   <i>See:</i> <a>newFleetError</a> smart constructor.
data FleetError
FleetError' :: Maybe Text -> Maybe FleetErrorCode -> FleetError

-- | Create a value of <a>FleetError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:FleetError'</a>, <a>fleetError_errorMessage</a> -
--   The error message.
--   
--   <a>$sel:errorCode:FleetError'</a>, <a>fleetError_errorCode</a> - The
--   error code.
newFleetError :: FleetError

-- | Describes an image.
--   
--   <i>See:</i> <a>newImage</a> smart constructor.
data Image
Image' :: Maybe ImagePermissions -> Maybe PlatformType -> Maybe [ResourceError] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ImageStateChangeReason -> Maybe Text -> Maybe ImageState -> Maybe [Application] -> Maybe Text -> Maybe Text -> Maybe VisibilityType -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Text -> Image

-- | Create a value of <a>Image</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePermissions:Image'</a>, <a>image_imagePermissions</a> -
--   The permissions to provide to the destination AWS account for the
--   specified image.
--   
--   <a>$sel:platform:Image'</a>, <a>image_platform</a> - The operating
--   system platform of the image.
--   
--   <a>$sel:imageErrors:Image'</a>, <a>image_imageErrors</a> - Describes
--   the errors that are returned when a new image can't be created.
--   
--   <a>$sel:imageBuilderName:Image'</a>, <a>image_imageBuilderName</a> -
--   The name of the image builder that was used to create the private
--   image. If the image is shared, this value is null.
--   
--   <a>$sel:arn:Image'</a>, <a>image_arn</a> - The ARN of the image.
--   
--   <a>$sel:createdTime:Image'</a>, <a>image_createdTime</a> - The time
--   the image was created.
--   
--   <a>$sel:stateChangeReason:Image'</a>, <a>image_stateChangeReason</a> -
--   The reason why the last state change occurred.
--   
--   <a>$sel:baseImageArn:Image'</a>, <a>image_baseImageArn</a> - The ARN
--   of the image from which this image was created.
--   
--   <a>$sel:state:Image'</a>, <a>image_state</a> - The image starts in the
--   <tt>PENDING</tt> state. If image creation succeeds, the state is
--   <tt>AVAILABLE</tt>. If image creation fails, the state is
--   <tt>FAILED</tt>.
--   
--   <a>$sel:applications:Image'</a>, <a>image_applications</a> - The
--   applications associated with the image.
--   
--   <a>$sel:appstreamAgentVersion:Image'</a>,
--   <a>image_appstreamAgentVersion</a> - The version of the AppStream 2.0
--   agent to use for instances that are launched from this image.
--   
--   <a>$sel:description:Image'</a>, <a>image_description</a> - The
--   description to display.
--   
--   <a>$sel:visibility:Image'</a>, <a>image_visibility</a> - Indicates
--   whether the image is public or private.
--   
--   <a>$sel:imageBuilderSupported:Image'</a>,
--   <a>image_imageBuilderSupported</a> - Indicates whether an image
--   builder can be launched from this image.
--   
--   <a>$sel:displayName:Image'</a>, <a>image_displayName</a> - The image
--   name to display.
--   
--   <a>$sel:publicBaseImageReleasedDate:Image'</a>,
--   <a>image_publicBaseImageReleasedDate</a> - The release date of the
--   public base image. For private images, this date is the release date
--   of the base image from which the image was created.
--   
--   <a>$sel:name:Image'</a>, <a>image_name</a> - The name of the image.
newImage :: Text -> Image

-- | Describes a virtual machine that is used to create an image.
--   
--   <i>See:</i> <a>newImageBuilder</a> smart constructor.
data ImageBuilder
ImageBuilder' :: Maybe VpcConfig -> Maybe PlatformType -> Maybe Text -> Maybe (NonEmpty AccessEndpoint) -> Maybe DomainJoinInfo -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ImageBuilderStateChangeReason -> Maybe NetworkAccessConfiguration -> Maybe ImageBuilderState -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [ResourceError] -> Maybe Text -> Maybe Text -> Text -> ImageBuilder

-- | Create a value of <a>ImageBuilder</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:ImageBuilder'</a>, <a>imageBuilder_vpcConfig</a> -
--   The VPC configuration of the image builder.
--   
--   <a>$sel:platform:ImageBuilder'</a>, <a>imageBuilder_platform</a> - The
--   operating system platform of the image builder.
--   
--   <a>$sel:iamRoleArn:ImageBuilder'</a>, <a>imageBuilder_iamRoleArn</a> -
--   The ARN of the IAM role that is applied to the image builder. To
--   assume a role, the image builder calls the AWS Security Token Service
--   (STS) <tt>AssumeRole</tt> API operation and passes the ARN of the role
--   to use. The operation creates a new session with temporary
--   credentials. AppStream 2.0 retrieves the temporary credentials and
--   creates the <b>appstream_machine_role</b> credential profile on the
--   instance.
--   
--   For more information, see <a>Using an IAM Role to Grant Permissions to
--   Applications and Scripts Running on AppStream 2.0 Streaming
--   Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.
--   
--   <a>$sel:accessEndpoints:ImageBuilder'</a>,
--   <a>imageBuilder_accessEndpoints</a> - The list of virtual private
--   cloud (VPC) interface endpoint objects. Administrators can connect to
--   the image builder only through the specified endpoints.
--   
--   <a>$sel:domainJoinInfo:ImageBuilder'</a>,
--   <a>imageBuilder_domainJoinInfo</a> - The name of the directory and
--   organizational unit (OU) to use to join the image builder to a
--   Microsoft Active Directory domain.
--   
--   <a>$sel:instanceType:ImageBuilder'</a>,
--   <a>imageBuilder_instanceType</a> - The instance type for the image
--   builder. The following instance types are available:
--   
--   <ul>
--   <li>stream.standard.small</li>
--   <li>stream.standard.medium</li>
--   <li>stream.standard.large</li>
--   <li>stream.compute.large</li>
--   <li>stream.compute.xlarge</li>
--   <li>stream.compute.2xlarge</li>
--   <li>stream.compute.4xlarge</li>
--   <li>stream.compute.8xlarge</li>
--   <li>stream.memory.large</li>
--   <li>stream.memory.xlarge</li>
--   <li>stream.memory.2xlarge</li>
--   <li>stream.memory.4xlarge</li>
--   <li>stream.memory.8xlarge</li>
--   <li>stream.memory.z1d.large</li>
--   <li>stream.memory.z1d.xlarge</li>
--   <li>stream.memory.z1d.2xlarge</li>
--   <li>stream.memory.z1d.3xlarge</li>
--   <li>stream.memory.z1d.6xlarge</li>
--   <li>stream.memory.z1d.12xlarge</li>
--   <li>stream.graphics-design.large</li>
--   <li>stream.graphics-design.xlarge</li>
--   <li>stream.graphics-design.2xlarge</li>
--   <li>stream.graphics-design.4xlarge</li>
--   <li>stream.graphics-desktop.2xlarge</li>
--   <li>stream.graphics.g4dn.xlarge</li>
--   <li>stream.graphics.g4dn.2xlarge</li>
--   <li>stream.graphics.g4dn.4xlarge</li>
--   <li>stream.graphics.g4dn.8xlarge</li>
--   <li>stream.graphics.g4dn.12xlarge</li>
--   <li>stream.graphics.g4dn.16xlarge</li>
--   <li>stream.graphics-pro.4xlarge</li>
--   <li>stream.graphics-pro.8xlarge</li>
--   <li>stream.graphics-pro.16xlarge</li>
--   </ul>
--   
--   <a>$sel:arn:ImageBuilder'</a>, <a>imageBuilder_arn</a> - The ARN for
--   the image builder.
--   
--   <a>$sel:createdTime:ImageBuilder'</a>, <a>imageBuilder_createdTime</a>
--   - The time stamp when the image builder was created.
--   
--   <a>$sel:stateChangeReason:ImageBuilder'</a>,
--   <a>imageBuilder_stateChangeReason</a> - The reason why the last state
--   change occurred.
--   
--   <a>$sel:networkAccessConfiguration:ImageBuilder'</a>,
--   <a>imageBuilder_networkAccessConfiguration</a> - Undocumented member.
--   
--   <a>$sel:state:ImageBuilder'</a>, <a>imageBuilder_state</a> - The state
--   of the image builder.
--   
--   <a>$sel:appstreamAgentVersion:ImageBuilder'</a>,
--   <a>imageBuilder_appstreamAgentVersion</a> - The version of the
--   AppStream 2.0 agent that is currently being used by the image builder.
--   
--   <a>$sel:description:ImageBuilder'</a>, <a>imageBuilder_description</a>
--   - The description to display.
--   
--   <a>$sel:enableDefaultInternetAccess:ImageBuilder'</a>,
--   <a>imageBuilder_enableDefaultInternetAccess</a> - Enables or disables
--   default internet access for the image builder.
--   
--   <a>$sel:imageBuilderErrors:ImageBuilder'</a>,
--   <a>imageBuilder_imageBuilderErrors</a> - The image builder errors.
--   
--   <a>$sel:displayName:ImageBuilder'</a>, <a>imageBuilder_displayName</a>
--   - The image builder name to display.
--   
--   <a>$sel:imageArn:ImageBuilder'</a>, <a>imageBuilder_imageArn</a> - The
--   ARN of the image from which this builder was created.
--   
--   <a>$sel:name:ImageBuilder'</a>, <a>imageBuilder_name</a> - The name of
--   the image builder.
newImageBuilder :: Text -> ImageBuilder

-- | Describes the reason why the last image builder state change occurred.
--   
--   <i>See:</i> <a>newImageBuilderStateChangeReason</a> smart constructor.
data ImageBuilderStateChangeReason
ImageBuilderStateChangeReason' :: Maybe Text -> Maybe ImageBuilderStateChangeReasonCode -> ImageBuilderStateChangeReason

-- | Create a value of <a>ImageBuilderStateChangeReason</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ImageBuilderStateChangeReason'</a>,
--   <a>imageBuilderStateChangeReason_message</a> - The state change reason
--   message.
--   
--   <a>$sel:code:ImageBuilderStateChangeReason'</a>,
--   <a>imageBuilderStateChangeReason_code</a> - The state change reason
--   code.
newImageBuilderStateChangeReason :: ImageBuilderStateChangeReason

-- | Describes the permissions for an image.
--   
--   <i>See:</i> <a>newImagePermissions</a> smart constructor.
data ImagePermissions
ImagePermissions' :: Maybe Bool -> Maybe Bool -> ImagePermissions

-- | Create a value of <a>ImagePermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowImageBuilder:ImagePermissions'</a>,
--   <a>imagePermissions_allowImageBuilder</a> - Indicates whether the
--   image can be used for an image builder.
--   
--   <a>$sel:allowFleet:ImagePermissions'</a>,
--   <a>imagePermissions_allowFleet</a> - Indicates whether the image can
--   be used for a fleet.
newImagePermissions :: ImagePermissions

-- | Describes the reason why the last image state change occurred.
--   
--   <i>See:</i> <a>newImageStateChangeReason</a> smart constructor.
data ImageStateChangeReason
ImageStateChangeReason' :: Maybe Text -> Maybe ImageStateChangeReasonCode -> ImageStateChangeReason

-- | Create a value of <a>ImageStateChangeReason</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ImageStateChangeReason'</a>,
--   <a>imageStateChangeReason_message</a> - The state change reason
--   message.
--   
--   <a>$sel:code:ImageStateChangeReason'</a>,
--   <a>imageStateChangeReason_code</a> - The state change reason code.
newImageStateChangeReason :: ImageStateChangeReason

-- | Describes the error that is returned when a usage report can't be
--   generated.
--   
--   <i>See:</i> <a>newLastReportGenerationExecutionError</a> smart
--   constructor.
data LastReportGenerationExecutionError
LastReportGenerationExecutionError' :: Maybe Text -> Maybe UsageReportExecutionErrorCode -> LastReportGenerationExecutionError

-- | Create a value of <a>LastReportGenerationExecutionError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:LastReportGenerationExecutionError'</a>,
--   <a>lastReportGenerationExecutionError_errorMessage</a> - The error
--   message for the error that is returned when a usage report can't be
--   generated.
--   
--   <a>$sel:errorCode:LastReportGenerationExecutionError'</a>,
--   <a>lastReportGenerationExecutionError_errorCode</a> - The error code
--   for the error that is returned when a usage report can't be generated.
newLastReportGenerationExecutionError :: LastReportGenerationExecutionError

-- | Describes the network details of the fleet or image builder instance.
--   
--   <i>See:</i> <a>newNetworkAccessConfiguration</a> smart constructor.
data NetworkAccessConfiguration
NetworkAccessConfiguration' :: Maybe Text -> Maybe Text -> NetworkAccessConfiguration

-- | Create a value of <a>NetworkAccessConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eniId:NetworkAccessConfiguration'</a>,
--   <a>networkAccessConfiguration_eniId</a> - The resource identifier of
--   the elastic network interface that is attached to instances in your
--   VPC. All network interfaces have the eni-xxxxxxxx resource identifier.
--   
--   <a>$sel:eniPrivateIpAddress:NetworkAccessConfiguration'</a>,
--   <a>networkAccessConfiguration_eniPrivateIpAddress</a> - The private IP
--   address of the elastic network interface that is attached to instances
--   in your VPC.
newNetworkAccessConfiguration :: NetworkAccessConfiguration

-- | Describes a resource error.
--   
--   <i>See:</i> <a>newResourceError</a> smart constructor.
data ResourceError
ResourceError' :: Maybe POSIX -> Maybe Text -> Maybe FleetErrorCode -> ResourceError

-- | Create a value of <a>ResourceError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorTimestamp:ResourceError'</a>,
--   <a>resourceError_errorTimestamp</a> - The time the error occurred.
--   
--   <a>$sel:errorMessage:ResourceError'</a>,
--   <a>resourceError_errorMessage</a> - The error message.
--   
--   <a>$sel:errorCode:ResourceError'</a>, <a>resourceError_errorCode</a> -
--   The error code.
newResourceError :: ResourceError

-- | Describes the credentials for the service account used by the fleet or
--   image builder to connect to the directory.
--   
--   <i>See:</i> <a>newServiceAccountCredentials</a> smart constructor.
data ServiceAccountCredentials
ServiceAccountCredentials' :: Sensitive Text -> Sensitive Text -> ServiceAccountCredentials

-- | Create a value of <a>ServiceAccountCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountName:ServiceAccountCredentials'</a>,
--   <a>serviceAccountCredentials_accountName</a> - The user name of the
--   account. This account must have the following privileges: create
--   computer objects, join computers to the domain, and change/reset the
--   password on descendant computer objects for the organizational units
--   specified.
--   
--   <a>$sel:accountPassword:ServiceAccountCredentials'</a>,
--   <a>serviceAccountCredentials_accountPassword</a> - The password for
--   the account.
newServiceAccountCredentials :: Text -> Text -> ServiceAccountCredentials

-- | Describes a streaming session.
--   
--   <i>See:</i> <a>newSession</a> smart constructor.
data Session
Session' :: Maybe SessionConnectionState -> Maybe POSIX -> Maybe NetworkAccessConfiguration -> Maybe AuthenticationType -> Maybe POSIX -> Text -> Text -> Text -> Text -> SessionState -> Session

-- | Create a value of <a>Session</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionState:Session'</a>, <a>session_connectionState</a> -
--   Specifies whether a user is connected to the streaming session.
--   
--   <a>$sel:startTime:Session'</a>, <a>session_startTime</a> - The time
--   when a streaming instance is dedicated for the user.
--   
--   <a>$sel:networkAccessConfiguration:Session'</a>,
--   <a>session_networkAccessConfiguration</a> - The network details for
--   the streaming session.
--   
--   <a>$sel:authenticationType:Session'</a>,
--   <a>session_authenticationType</a> - The authentication method. The
--   user is authenticated using a streaming URL (<tt>API</tt>) or SAML 2.0
--   federation (<tt>SAML</tt>).
--   
--   <a>$sel:maxExpirationTime:Session'</a>,
--   <a>session_maxExpirationTime</a> - The time when the streaming session
--   is set to expire. This time is based on the
--   <tt>MaxUserDurationinSeconds</tt> value, which determines the maximum
--   length of time that a streaming session can run. A streaming session
--   might end earlier than the time specified in
--   <tt>SessionMaxExpirationTime</tt>, when the
--   <tt>DisconnectTimeOutInSeconds</tt> elapses or the user chooses to end
--   his or her session. If the <tt>DisconnectTimeOutInSeconds</tt>
--   elapses, or the user chooses to end his or her session, the streaming
--   instance is terminated and the streaming session ends.
--   
--   <a>$sel:id:Session'</a>, <a>session_id</a> - The identifier of the
--   streaming session.
--   
--   <a>$sel:userId:Session'</a>, <a>session_userId</a> - The identifier of
--   the user for whom the session was created.
--   
--   <a>$sel:stackName:Session'</a>, <a>session_stackName</a> - The name of
--   the stack for the streaming session.
--   
--   <a>$sel:fleetName:Session'</a>, <a>session_fleetName</a> - The name of
--   the fleet for the streaming session.
--   
--   <a>$sel:state:Session'</a>, <a>session_state</a> - The current state
--   of the streaming session.
newSession :: Text -> Text -> Text -> Text -> SessionState -> Session

-- | Describes the permissions that are available to the specified AWS
--   account for a shared image.
--   
--   <i>See:</i> <a>newSharedImagePermissions</a> smart constructor.
data SharedImagePermissions
SharedImagePermissions' :: Text -> ImagePermissions -> SharedImagePermissions

-- | Create a value of <a>SharedImagePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sharedAccountId:SharedImagePermissions'</a>,
--   <a>sharedImagePermissions_sharedAccountId</a> - The 12-digit
--   identifier of the AWS account with which the image is shared.
--   
--   <a>$sel:imagePermissions:SharedImagePermissions'</a>,
--   <a>sharedImagePermissions_imagePermissions</a> - Describes the
--   permissions for a shared image.
newSharedImagePermissions :: Text -> ImagePermissions -> SharedImagePermissions

-- | Describes a stack.
--   
--   <i>See:</i> <a>newStack</a> smart constructor.
data Stack
Stack' :: Maybe (NonEmpty UserSetting) -> Maybe (NonEmpty AccessEndpoint) -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ApplicationSettingsResponse -> Maybe [StorageConnector] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe [StackError] -> Maybe Text -> Maybe Text -> Text -> Stack

-- | Create a value of <a>Stack</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userSettings:Stack'</a>, <a>stack_userSettings</a> - The
--   actions that are enabled or disabled for users during their streaming
--   sessions. By default these actions are enabled.
--   
--   <a>$sel:accessEndpoints:Stack'</a>, <a>stack_accessEndpoints</a> - The
--   list of virtual private cloud (VPC) interface endpoint objects. Users
--   of the stack can connect to AppStream 2.0 only through the specified
--   endpoints.
--   
--   <a>$sel:redirectURL:Stack'</a>, <a>stack_redirectURL</a> - The URL
--   that users are redirected to after their streaming session ends.
--   
--   <a>$sel:arn:Stack'</a>, <a>stack_arn</a> - The ARN of the stack.
--   
--   <a>$sel:createdTime:Stack'</a>, <a>stack_createdTime</a> - The time
--   the stack was created.
--   
--   <a>$sel:applicationSettings:Stack'</a>,
--   <a>stack_applicationSettings</a> - The persistent application settings
--   for users of the stack.
--   
--   <a>$sel:storageConnectors:Stack'</a>, <a>stack_storageConnectors</a> -
--   The storage connectors to enable.
--   
--   <a>$sel:description:Stack'</a>, <a>stack_description</a> - The
--   description to display.
--   
--   <a>$sel:embedHostDomains:Stack'</a>, <a>stack_embedHostDomains</a> -
--   The domains where AppStream 2.0 streaming sessions can be embedded in
--   an iframe. You must approve the domains that you want to host embedded
--   AppStream 2.0 streaming sessions.
--   
--   <a>$sel:stackErrors:Stack'</a>, <a>stack_stackErrors</a> - The errors
--   for the stack.
--   
--   <a>$sel:displayName:Stack'</a>, <a>stack_displayName</a> - The stack
--   name to display.
--   
--   <a>$sel:feedbackURL:Stack'</a>, <a>stack_feedbackURL</a> - The URL
--   that users are redirected to after they click the Send Feedback link.
--   If no URL is specified, no Send Feedback link is displayed.
--   
--   <a>$sel:name:Stack'</a>, <a>stack_name</a> - The name of the stack.
newStack :: Text -> Stack

-- | Describes a stack error.
--   
--   <i>See:</i> <a>newStackError</a> smart constructor.
data StackError
StackError' :: Maybe Text -> Maybe StackErrorCode -> StackError

-- | Create a value of <a>StackError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:StackError'</a>, <a>stackError_errorMessage</a> -
--   The error message.
--   
--   <a>$sel:errorCode:StackError'</a>, <a>stackError_errorCode</a> - The
--   error code.
newStackError :: StackError

-- | Describes a connector that enables persistent storage for users.
--   
--   <i>See:</i> <a>newStorageConnector</a> smart constructor.
data StorageConnector
StorageConnector' :: Maybe [Text] -> Maybe Text -> StorageConnectorType -> StorageConnector

-- | Create a value of <a>StorageConnector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domains:StorageConnector'</a>, <a>storageConnector_domains</a>
--   - The names of the domains for the account.
--   
--   <a>$sel:resourceIdentifier:StorageConnector'</a>,
--   <a>storageConnector_resourceIdentifier</a> - The ARN of the storage
--   connector.
--   
--   <a>$sel:connectorType:StorageConnector'</a>,
--   <a>storageConnector_connectorType</a> - The type of storage connector.
newStorageConnector :: StorageConnectorType -> StorageConnector

-- | Describes information about the usage report subscription.
--   
--   <i>See:</i> <a>newUsageReportSubscription</a> smart constructor.
data UsageReportSubscription
UsageReportSubscription' :: Maybe [LastReportGenerationExecutionError] -> Maybe POSIX -> Maybe Text -> Maybe UsageReportSchedule -> UsageReportSubscription

-- | Create a value of <a>UsageReportSubscription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionErrors:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_subscriptionErrors</a> - The errors that
--   were returned if usage reports couldn't be generated.
--   
--   <a>$sel:lastGeneratedReportDate:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_lastGeneratedReportDate</a> - The time when
--   the last usage report was generated.
--   
--   <a>$sel:s3BucketName:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_s3BucketName</a> - The Amazon S3 bucket
--   where generated reports are stored.
--   
--   If you enabled on-instance session scripts and Amazon S3 logging for
--   your session script configuration, AppStream 2.0 created an S3 bucket
--   to store the script output. The bucket is unique to your account and
--   Region. When you enable usage reporting in this case, AppStream 2.0
--   uses the same bucket to store your usage reports. If you haven't
--   already enabled on-instance session scripts, when you enable usage
--   reports, AppStream 2.0 creates a new S3 bucket.
--   
--   <a>$sel:schedule:UsageReportSubscription'</a>,
--   <a>usageReportSubscription_schedule</a> - The schedule for generating
--   usage reports.
newUsageReportSubscription :: UsageReportSubscription

-- | Describes a user in the user pool.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> AuthenticationType -> User

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - The status of the user
--   in the user pool. The status can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED – The user is created but not confirmed.</li>
--   <li>CONFIRMED – The user is confirmed.</li>
--   <li>ARCHIVED – The user is no longer active.</li>
--   <li>COMPROMISED – The user is disabled because of a potential security
--   threat.</li>
--   <li>UNKNOWN – The user status is not known.</li>
--   </ul>
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The ARN of the user.
--   
--   <a>$sel:enabled:User'</a>, <a>user_enabled</a> - Specifies whether the
--   user in the user pool is enabled.
--   
--   <a>$sel:createdTime:User'</a>, <a>user_createdTime</a> - The date and
--   time the user was created in the user pool.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The email address
--   of the user.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:lastName:User'</a>, <a>user_lastName</a> - The last name, or
--   surname, of the user.
--   
--   <a>$sel:firstName:User'</a>, <a>user_firstName</a> - The first name,
--   or given name, of the user.
--   
--   <a>$sel:authenticationType:User'</a>, <a>user_authenticationType</a> -
--   The authentication type for the user.
newUser :: AuthenticationType -> User

-- | Describes an action and whether the action is enabled or disabled for
--   users during their streaming sessions.
--   
--   <i>See:</i> <a>newUserSetting</a> smart constructor.
data UserSetting
UserSetting' :: Action -> Permission -> UserSetting

-- | Create a value of <a>UserSetting</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:UserSetting'</a>, <a>userSetting_action</a> - The
--   action that is enabled or disabled.
--   
--   <a>$sel:permission:UserSetting'</a>, <a>userSetting_permission</a> -
--   Indicates whether the action is enabled or disabled.
newUserSetting :: Action -> Permission -> UserSetting

-- | Describes a user in the user pool and the associated stack.
--   
--   <i>See:</i> <a>newUserStackAssociation</a> smart constructor.
data UserStackAssociation
UserStackAssociation' :: Maybe Bool -> Text -> Sensitive Text -> AuthenticationType -> UserStackAssociation

-- | Create a value of <a>UserStackAssociation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sendEmailNotification:UserStackAssociation'</a>,
--   <a>userStackAssociation_sendEmailNotification</a> - Specifies whether
--   a welcome email is sent to a user after the user is created in the
--   user pool.
--   
--   <a>$sel:stackName:UserStackAssociation'</a>,
--   <a>userStackAssociation_stackName</a> - The name of the stack that is
--   associated with the user.
--   
--   <a>$sel:userName:UserStackAssociation'</a>,
--   <a>userStackAssociation_userName</a> - The email address of the user
--   who is associated with the stack.
--   
--   Users' email addresses are case-sensitive.
--   
--   <a>$sel:authenticationType:UserStackAssociation'</a>,
--   <a>userStackAssociation_authenticationType</a> - The authentication
--   type for the user.
newUserStackAssociation :: Text -> Text -> AuthenticationType -> UserStackAssociation

-- | Describes the error that is returned when a user can’t be associated
--   with or disassociated from a stack.
--   
--   <i>See:</i> <a>newUserStackAssociationError</a> smart constructor.
data UserStackAssociationError
UserStackAssociationError' :: Maybe UserStackAssociation -> Maybe Text -> Maybe UserStackAssociationErrorCode -> UserStackAssociationError

-- | Create a value of <a>UserStackAssociationError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userStackAssociation:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_userStackAssociation</a> - Information
--   about the user and associated stack.
--   
--   <a>$sel:errorMessage:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_errorMessage</a> - The error message for
--   the error that is returned when a user can’t be associated with or
--   disassociated from a stack.
--   
--   <a>$sel:errorCode:UserStackAssociationError'</a>,
--   <a>userStackAssociationError_errorCode</a> - The error code for the
--   error that is returned when a user can’t be associated with or
--   disassociated from a stack.
newUserStackAssociationError :: UserStackAssociationError

-- | Describes VPC configuration information for fleets and image builders.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe [Text] -> VpcConfig

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - The identifiers of the security
--   groups for the fleet or image builder.
--   
--   <a>$sel:subnetIds:VpcConfig'</a>, <a>vpcConfig_subnetIds</a> - The
--   identifiers of the subnets to which a network interface is attached
--   from the fleet instance or image builder instance. Fleet instances use
--   one or more subnets. Image builder instances use one subnet.
newVpcConfig :: VpcConfig
