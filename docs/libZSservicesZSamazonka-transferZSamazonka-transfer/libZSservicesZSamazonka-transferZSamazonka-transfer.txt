-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-transferZSamazonka-transfer
@version 2.0


module Amazonka.Transfer.Types.CustomStepDetails

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   <i>See:</i> <a>newCustomStepDetails</a> smart constructor.
data CustomStepDetails
CustomStepDetails' :: Maybe Text -> Maybe Natural -> Maybe Text -> CustomStepDetails

-- | The name of the step, used as an identifier.
[$sel:name:CustomStepDetails'] :: CustomStepDetails -> Maybe Text

-- | Timeout, in seconds, for the step.
[$sel:timeoutSeconds:CustomStepDetails'] :: CustomStepDetails -> Maybe Natural

-- | The ARN for the lambda function that is being called.
[$sel:target:CustomStepDetails'] :: CustomStepDetails -> Maybe Text

-- | Create a value of <a>CustomStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CustomStepDetails'</a>, <a>customStepDetails_name</a> -
--   The name of the step, used as an identifier.
--   
--   <a>$sel:timeoutSeconds:CustomStepDetails'</a>,
--   <a>customStepDetails_timeoutSeconds</a> - Timeout, in seconds, for the
--   step.
--   
--   <a>$sel:target:CustomStepDetails'</a>, <a>customStepDetails_target</a>
--   - The ARN for the lambda function that is being called.
newCustomStepDetails :: CustomStepDetails

-- | The name of the step, used as an identifier.
customStepDetails_name :: Lens' CustomStepDetails (Maybe Text)

-- | Timeout, in seconds, for the step.
customStepDetails_timeoutSeconds :: Lens' CustomStepDetails (Maybe Natural)

-- | The ARN for the lambda function that is being called.
customStepDetails_target :: Lens' CustomStepDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails
instance GHC.Show.Show Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails
instance GHC.Read.Read Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.CustomStepDetails.CustomStepDetails


module Amazonka.Transfer.Types.CustomStepStatus
newtype CustomStepStatus
CustomStepStatus' :: Text -> CustomStepStatus
[fromCustomStepStatus] :: CustomStepStatus -> Text
pattern CustomStepStatus_FAILURE :: CustomStepStatus
pattern CustomStepStatus_SUCCESS :: CustomStepStatus
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance GHC.Generics.Generic Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance GHC.Classes.Ord Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance GHC.Classes.Eq Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance GHC.Read.Read Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus
instance GHC.Show.Show Amazonka.Transfer.Types.CustomStepStatus.CustomStepStatus


module Amazonka.Transfer.Types.DeleteStepDetails

-- | The name of the step, used to identify the delete step.
--   
--   <i>See:</i> <a>newDeleteStepDetails</a> smart constructor.
data DeleteStepDetails
DeleteStepDetails' :: Maybe Text -> DeleteStepDetails

-- | The name of the step, used as an identifier.
[$sel:name:DeleteStepDetails'] :: DeleteStepDetails -> Maybe Text

-- | Create a value of <a>DeleteStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteStepDetails'</a>, <a>deleteStepDetails_name</a> -
--   The name of the step, used as an identifier.
newDeleteStepDetails :: DeleteStepDetails

-- | The name of the step, used as an identifier.
deleteStepDetails_name :: Lens' DeleteStepDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails
instance GHC.Show.Show Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails
instance GHC.Read.Read Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.DeleteStepDetails.DeleteStepDetails


module Amazonka.Transfer.Types.DescribedSecurityPolicy

-- | Describes the properties of a security policy that was specified. For
--   more information about security policies, see <a>Working with security
--   policies</a>.
--   
--   <i>See:</i> <a>newDescribedSecurityPolicy</a> smart constructor.
data DescribedSecurityPolicy
DescribedSecurityPolicy' :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Text -> DescribedSecurityPolicy

-- | Specifies whether this policy enables Federal Information Processing
--   Standards (FIPS).
[$sel:fips:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe Bool

-- | Specifies the enabled SSH message authentication code (MAC) encryption
--   algorithms in the security policy that is attached to the server.
[$sel:sshMacs:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the enabled SSH key exchange (KEX) encryption algorithms in
--   the security policy that is attached to the server.
[$sel:sshKexs:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the enabled Transport Layer Security (TLS) cipher encryption
--   algorithms in the security policy that is attached to the server.
[$sel:tlsCiphers:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the enabled Secure Shell (SSH) cipher encryption algorithms
--   in the security policy that is attached to the server.
[$sel:sshCiphers:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the name of the security policy that is attached to the
--   server.
[$sel:securityPolicyName:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Text

-- | Create a value of <a>DescribedSecurityPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fips:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_fips</a> - Specifies whether this policy
--   enables Federal Information Processing Standards (FIPS).
--   
--   <a>$sel:sshMacs:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshMacs</a> - Specifies the enabled SSH
--   message authentication code (MAC) encryption algorithms in the
--   security policy that is attached to the server.
--   
--   <a>$sel:sshKexs:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshKexs</a> - Specifies the enabled SSH key
--   exchange (KEX) encryption algorithms in the security policy that is
--   attached to the server.
--   
--   <a>$sel:tlsCiphers:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_tlsCiphers</a> - Specifies the enabled
--   Transport Layer Security (TLS) cipher encryption algorithms in the
--   security policy that is attached to the server.
--   
--   <a>$sel:sshCiphers:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshCiphers</a> - Specifies the enabled
--   Secure Shell (SSH) cipher encryption algorithms in the security policy
--   that is attached to the server.
--   
--   <a>$sel:securityPolicyName:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_securityPolicyName</a> - Specifies the name
--   of the security policy that is attached to the server.
newDescribedSecurityPolicy :: Text -> DescribedSecurityPolicy

-- | Specifies whether this policy enables Federal Information Processing
--   Standards (FIPS).
describedSecurityPolicy_fips :: Lens' DescribedSecurityPolicy (Maybe Bool)

-- | Specifies the enabled SSH message authentication code (MAC) encryption
--   algorithms in the security policy that is attached to the server.
describedSecurityPolicy_sshMacs :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled SSH key exchange (KEX) encryption algorithms in
--   the security policy that is attached to the server.
describedSecurityPolicy_sshKexs :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled Transport Layer Security (TLS) cipher encryption
--   algorithms in the security policy that is attached to the server.
describedSecurityPolicy_tlsCiphers :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled Secure Shell (SSH) cipher encryption algorithms
--   in the security policy that is attached to the server.
describedSecurityPolicy_sshCiphers :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the name of the security policy that is attached to the
--   server.
describedSecurityPolicy_securityPolicyName :: Lens' DescribedSecurityPolicy Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.DescribedSecurityPolicy.DescribedSecurityPolicy
instance GHC.Show.Show Amazonka.Transfer.Types.DescribedSecurityPolicy.DescribedSecurityPolicy
instance GHC.Read.Read Amazonka.Transfer.Types.DescribedSecurityPolicy.DescribedSecurityPolicy
instance GHC.Classes.Eq Amazonka.Transfer.Types.DescribedSecurityPolicy.DescribedSecurityPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.DescribedSecurityPolicy.DescribedSecurityPolicy
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.DescribedSecurityPolicy.DescribedSecurityPolicy
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.DescribedSecurityPolicy.DescribedSecurityPolicy


module Amazonka.Transfer.Types.Domain
newtype Domain
Domain' :: Text -> Domain
[fromDomain] :: Domain -> Text
pattern Domain_EFS :: Domain
pattern Domain_S3 :: Domain
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.Domain.Domain
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.Domain.Domain
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.Domain.Domain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.Domain.Domain
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.Domain.Domain
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.Domain.Domain
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.Domain.Domain
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.Domain.Domain
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.Domain.Domain
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.Domain.Domain
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.Domain.Domain
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.Domain.Domain
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.Domain.Domain
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.Domain.Domain
instance GHC.Generics.Generic Amazonka.Transfer.Types.Domain.Domain
instance GHC.Classes.Ord Amazonka.Transfer.Types.Domain.Domain
instance GHC.Classes.Eq Amazonka.Transfer.Types.Domain.Domain
instance GHC.Read.Read Amazonka.Transfer.Types.Domain.Domain
instance GHC.Show.Show Amazonka.Transfer.Types.Domain.Domain


module Amazonka.Transfer.Types.EfsFileLocation

-- | Reserved for future use.
--   
--   <i>See:</i> <a>newEfsFileLocation</a> smart constructor.
data EfsFileLocation
EfsFileLocation' :: Maybe Text -> Maybe Text -> EfsFileLocation

-- | The pathname for the folder being used by a workflow.
[$sel:path:EfsFileLocation'] :: EfsFileLocation -> Maybe Text

-- | The ID of the file system, assigned by Amazon EFS.
[$sel:fileSystemId:EfsFileLocation'] :: EfsFileLocation -> Maybe Text

-- | Create a value of <a>EfsFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:EfsFileLocation'</a>, <a>efsFileLocation_path</a> - The
--   pathname for the folder being used by a workflow.
--   
--   <a>$sel:fileSystemId:EfsFileLocation'</a>,
--   <a>efsFileLocation_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
newEfsFileLocation :: EfsFileLocation

-- | The pathname for the folder being used by a workflow.
efsFileLocation_path :: Lens' EfsFileLocation (Maybe Text)

-- | The ID of the file system, assigned by Amazon EFS.
efsFileLocation_fileSystemId :: Lens' EfsFileLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation
instance GHC.Show.Show Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation
instance GHC.Read.Read Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation
instance GHC.Classes.Eq Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.EfsFileLocation.EfsFileLocation


module Amazonka.Transfer.Types.EndpointDetails

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your file transfer protocol-enabled server. With a VPC endpoint,
--   you can restrict access to your server and resources only within your
--   VPC. To control incoming internet traffic, invoke the
--   <tt>UpdateServer</tt> API and attach an Elastic IP address to your
--   server's endpoint.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   <i>See:</i> <a>newEndpointDetails</a> smart constructor.
data EndpointDetails
EndpointDetails' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> EndpointDetails

-- | A list of security groups IDs that are available to attach to your
--   server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
[$sel:securityGroupIds:EndpointDetails'] :: EndpointDetails -> Maybe [Text]

-- | A list of subnet IDs that are required to host your server endpoint in
--   your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
[$sel:subnetIds:EndpointDetails'] :: EndpointDetails -> Maybe [Text]

-- | The VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
[$sel:vpcId:EndpointDetails'] :: EndpointDetails -> Maybe Text

-- | A list of address allocation IDs that are required to attach an
--   Elastic IP address to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
[$sel:addressAllocationIds:EndpointDetails'] :: EndpointDetails -> Maybe [Text]

-- | The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
[$sel:vpcEndpointId:EndpointDetails'] :: EndpointDetails -> Maybe Text

-- | Create a value of <a>EndpointDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:EndpointDetails'</a>,
--   <a>endpointDetails_securityGroupIds</a> - A list of security groups
--   IDs that are available to attach to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
--   
--   <a>$sel:subnetIds:EndpointDetails'</a>,
--   <a>endpointDetails_subnetIds</a> - A list of subnet IDs that are
--   required to host your server endpoint in your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   <a>$sel:vpcId:EndpointDetails'</a>, <a>endpointDetails_vpcId</a> - The
--   VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   <a>$sel:addressAllocationIds:EndpointDetails'</a>,
--   <a>endpointDetails_addressAllocationIds</a> - A list of address
--   allocation IDs that are required to attach an Elastic IP address to
--   your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
--   
--   <a>$sel:vpcEndpointId:EndpointDetails'</a>,
--   <a>endpointDetails_vpcEndpointId</a> - The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
newEndpointDetails :: EndpointDetails

-- | A list of security groups IDs that are available to attach to your
--   server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
endpointDetails_securityGroupIds :: Lens' EndpointDetails (Maybe [Text])

-- | A list of subnet IDs that are required to host your server endpoint in
--   your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
endpointDetails_subnetIds :: Lens' EndpointDetails (Maybe [Text])

-- | The VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
endpointDetails_vpcId :: Lens' EndpointDetails (Maybe Text)

-- | A list of address allocation IDs that are required to attach an
--   Elastic IP address to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
endpointDetails_addressAllocationIds :: Lens' EndpointDetails (Maybe [Text])

-- | The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
endpointDetails_vpcEndpointId :: Lens' EndpointDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.EndpointDetails.EndpointDetails
instance GHC.Show.Show Amazonka.Transfer.Types.EndpointDetails.EndpointDetails
instance GHC.Read.Read Amazonka.Transfer.Types.EndpointDetails.EndpointDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.EndpointDetails.EndpointDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.EndpointDetails.EndpointDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.EndpointDetails.EndpointDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.EndpointDetails.EndpointDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.EndpointDetails.EndpointDetails


module Amazonka.Transfer.Types.EndpointType
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_PUBLIC :: EndpointType
pattern EndpointType_VPC :: EndpointType
pattern EndpointType_VPC_ENDPOINT :: EndpointType
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.EndpointType.EndpointType
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.EndpointType.EndpointType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.EndpointType.EndpointType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.EndpointType.EndpointType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.EndpointType.EndpointType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.EndpointType.EndpointType
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.EndpointType.EndpointType
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.EndpointType.EndpointType
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.EndpointType.EndpointType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.EndpointType.EndpointType
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.EndpointType.EndpointType
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.EndpointType.EndpointType
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.EndpointType.EndpointType
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.EndpointType.EndpointType
instance GHC.Generics.Generic Amazonka.Transfer.Types.EndpointType.EndpointType
instance GHC.Classes.Ord Amazonka.Transfer.Types.EndpointType.EndpointType
instance GHC.Classes.Eq Amazonka.Transfer.Types.EndpointType.EndpointType
instance GHC.Read.Read Amazonka.Transfer.Types.EndpointType.EndpointType
instance GHC.Show.Show Amazonka.Transfer.Types.EndpointType.EndpointType


module Amazonka.Transfer.Types.ExecutionErrorType
newtype ExecutionErrorType
ExecutionErrorType' :: Text -> ExecutionErrorType
[fromExecutionErrorType] :: ExecutionErrorType -> Text
pattern ExecutionErrorType_PERMISSION_DENIED :: ExecutionErrorType
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance GHC.Generics.Generic Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance GHC.Classes.Ord Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance GHC.Classes.Eq Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance GHC.Read.Read Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType
instance GHC.Show.Show Amazonka.Transfer.Types.ExecutionErrorType.ExecutionErrorType


module Amazonka.Transfer.Types.ExecutionError

-- | Specifies the error message and type, for an error that occurs during
--   the execution of the workflow.
--   
--   <i>See:</i> <a>newExecutionError</a> smart constructor.
data ExecutionError
ExecutionError' :: ExecutionErrorType -> Text -> ExecutionError

-- | Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
[$sel:type':ExecutionError'] :: ExecutionError -> ExecutionErrorType

-- | Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
[$sel:message:ExecutionError'] :: ExecutionError -> Text

-- | Create a value of <a>ExecutionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ExecutionError'</a>, <a>executionError_type</a> -
--   Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
--   
--   <a>$sel:message:ExecutionError'</a>, <a>executionError_message</a> -
--   Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
newExecutionError :: ExecutionErrorType -> Text -> ExecutionError

-- | Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
executionError_type :: Lens' ExecutionError ExecutionErrorType

-- | Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
executionError_message :: Lens' ExecutionError Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.ExecutionError.ExecutionError
instance GHC.Show.Show Amazonka.Transfer.Types.ExecutionError.ExecutionError
instance GHC.Read.Read Amazonka.Transfer.Types.ExecutionError.ExecutionError
instance GHC.Classes.Eq Amazonka.Transfer.Types.ExecutionError.ExecutionError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ExecutionError.ExecutionError
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ExecutionError.ExecutionError
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ExecutionError.ExecutionError


module Amazonka.Transfer.Types.ExecutionStatus
newtype ExecutionStatus
ExecutionStatus' :: Text -> ExecutionStatus
[fromExecutionStatus] :: ExecutionStatus -> Text
pattern ExecutionStatus_COMPLETED :: ExecutionStatus
pattern ExecutionStatus_EXCEPTION :: ExecutionStatus
pattern ExecutionStatus_HANDLING_EXCEPTION :: ExecutionStatus
pattern ExecutionStatus_IN_PROGRESS :: ExecutionStatus
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance GHC.Generics.Generic Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance GHC.Classes.Ord Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance GHC.Classes.Eq Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance GHC.Read.Read Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus
instance GHC.Show.Show Amazonka.Transfer.Types.ExecutionStatus.ExecutionStatus


module Amazonka.Transfer.Types.HomeDirectoryMapEntry

-- | Represents an object that contains entries and targets for
--   <tt>HomeDirectoryMappings</tt>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <i>See:</i> <a>newHomeDirectoryMapEntry</a> smart constructor.
data HomeDirectoryMapEntry
HomeDirectoryMapEntry' :: Text -> Text -> HomeDirectoryMapEntry

-- | Represents an entry for <tt>HomeDirectoryMappings</tt>.
[$sel:entry:HomeDirectoryMapEntry'] :: HomeDirectoryMapEntry -> Text

-- | Represents the map target that is used in a
--   <tt>HomeDirectorymapEntry</tt>.
[$sel:target:HomeDirectoryMapEntry'] :: HomeDirectoryMapEntry -> Text

-- | Create a value of <a>HomeDirectoryMapEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entry:HomeDirectoryMapEntry'</a>,
--   <a>homeDirectoryMapEntry_entry</a> - Represents an entry for
--   <tt>HomeDirectoryMappings</tt>.
--   
--   <a>$sel:target:HomeDirectoryMapEntry'</a>,
--   <a>homeDirectoryMapEntry_target</a> - Represents the map target that
--   is used in a <tt>HomeDirectorymapEntry</tt>.
newHomeDirectoryMapEntry :: Text -> Text -> HomeDirectoryMapEntry

-- | Represents an entry for <tt>HomeDirectoryMappings</tt>.
homeDirectoryMapEntry_entry :: Lens' HomeDirectoryMapEntry Text

-- | Represents the map target that is used in a
--   <tt>HomeDirectorymapEntry</tt>.
homeDirectoryMapEntry_target :: Lens' HomeDirectoryMapEntry Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry
instance GHC.Show.Show Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry
instance GHC.Read.Read Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry
instance GHC.Classes.Eq Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.HomeDirectoryMapEntry.HomeDirectoryMapEntry


module Amazonka.Transfer.Types.HomeDirectoryType
newtype HomeDirectoryType
HomeDirectoryType' :: Text -> HomeDirectoryType
[fromHomeDirectoryType] :: HomeDirectoryType -> Text
pattern HomeDirectoryType_LOGICAL :: HomeDirectoryType
pattern HomeDirectoryType_PATH :: HomeDirectoryType
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance GHC.Generics.Generic Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance GHC.Classes.Ord Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance GHC.Classes.Eq Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance GHC.Read.Read Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType
instance GHC.Show.Show Amazonka.Transfer.Types.HomeDirectoryType.HomeDirectoryType


module Amazonka.Transfer.Types.IdentityProviderDetails

-- | Returns information related to the type of user authentication that is
--   in use for a file transfer protocol-enabled server's users. A server
--   can have only one method of authentication.
--   
--   <i>See:</i> <a>newIdentityProviderDetails</a> smart constructor.
data IdentityProviderDetails
IdentityProviderDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> IdentityProviderDetails

-- | Provides the type of <tt>InvocationRole</tt> used to authenticate the
--   user account.
[$sel:invocationRole:IdentityProviderDetails'] :: IdentityProviderDetails -> Maybe Text

-- | The identifier of the Amazon Web ServicesDirectory Service directory
--   that you want to stop sharing.
[$sel:directoryId:IdentityProviderDetails'] :: IdentityProviderDetails -> Maybe Text

-- | Provides the location of the service endpoint used to authenticate
--   users.
[$sel:url:IdentityProviderDetails'] :: IdentityProviderDetails -> Maybe Text

-- | Create a value of <a>IdentityProviderDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invocationRole:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_invocationRole</a> - Provides the type of
--   <tt>InvocationRole</tt> used to authenticate the user account.
--   
--   <a>$sel:directoryId:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_directoryId</a> - The identifier of the
--   Amazon Web ServicesDirectory Service directory that you want to stop
--   sharing.
--   
--   <a>$sel:url:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_url</a> - Provides the location of the
--   service endpoint used to authenticate users.
newIdentityProviderDetails :: IdentityProviderDetails

-- | Provides the type of <tt>InvocationRole</tt> used to authenticate the
--   user account.
identityProviderDetails_invocationRole :: Lens' IdentityProviderDetails (Maybe Text)

-- | The identifier of the Amazon Web ServicesDirectory Service directory
--   that you want to stop sharing.
identityProviderDetails_directoryId :: Lens' IdentityProviderDetails (Maybe Text)

-- | Provides the location of the service endpoint used to authenticate
--   users.
identityProviderDetails_url :: Lens' IdentityProviderDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails
instance GHC.Show.Show Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails
instance GHC.Read.Read Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.IdentityProviderDetails.IdentityProviderDetails


module Amazonka.Transfer.Types.IdentityProviderType

-- | Returns information related to the type of user authentication that is
--   in use for a file transfer protocol-enabled server's users. For
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>SERVICE_MANAGED</tt>
--   authentication, the Secure Shell (SSH) public keys are stored with a
--   user on the server instance. For <tt>API_GATEWAY</tt> authentication,
--   your custom authentication method is implemented by using an API call.
--   The server can have only one method of authentication.
newtype IdentityProviderType
IdentityProviderType' :: Text -> IdentityProviderType
[fromIdentityProviderType] :: IdentityProviderType -> Text
pattern IdentityProviderType_API_GATEWAY :: IdentityProviderType
pattern IdentityProviderType_AWS_DIRECTORY_SERVICE :: IdentityProviderType
pattern IdentityProviderType_SERVICE_MANAGED :: IdentityProviderType
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance GHC.Generics.Generic Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance GHC.Classes.Ord Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance GHC.Classes.Eq Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance GHC.Read.Read Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType
instance GHC.Show.Show Amazonka.Transfer.Types.IdentityProviderType.IdentityProviderType


module Amazonka.Transfer.Types.ListedAccess

-- | Lists the properties for one or more specified associated accesses.
--   
--   <i>See:</i> <a>newListedAccess</a> smart constructor.
data ListedAccess
ListedAccess' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe Text -> Maybe Text -> ListedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:ListedAccess'] :: ListedAccess -> Maybe HomeDirectoryType

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':ListedAccess'] :: ListedAccess -> Maybe Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:ListedAccess'] :: ListedAccess -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:ListedAccess'] :: ListedAccess -> Maybe Text

-- | Create a value of <a>ListedAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:ListedAccess'</a>,
--   <a>listedAccess_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:role':ListedAccess'</a>, <a>listedAccess_role</a> - Specifies
--   the Amazon Resource Name (ARN) of the IAM role that controls your
--   users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:externalId:ListedAccess'</a>, <a>listedAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:homeDirectory:ListedAccess'</a>,
--   <a>listedAccess_homeDirectory</a> - The landing directory (folder) for
--   a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
newListedAccess :: ListedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
listedAccess_homeDirectoryType :: Lens' ListedAccess (Maybe HomeDirectoryType)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
listedAccess_role :: Lens' ListedAccess (Maybe Text)

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
listedAccess_externalId :: Lens' ListedAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
listedAccess_homeDirectory :: Lens' ListedAccess (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.ListedAccess.ListedAccess
instance GHC.Show.Show Amazonka.Transfer.Types.ListedAccess.ListedAccess
instance GHC.Read.Read Amazonka.Transfer.Types.ListedAccess.ListedAccess
instance GHC.Classes.Eq Amazonka.Transfer.Types.ListedAccess.ListedAccess
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ListedAccess.ListedAccess
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ListedAccess.ListedAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ListedAccess.ListedAccess


module Amazonka.Transfer.Types.ListedUser

-- | Returns properties of the user that you specify.
--   
--   <i>See:</i> <a>newListedUser</a> smart constructor.
data ListedUser
ListedUser' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> ListedUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:ListedUser'] :: ListedUser -> Maybe HomeDirectoryType

-- | Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
[$sel:userName:ListedUser'] :: ListedUser -> Maybe Text

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
[$sel:role':ListedUser'] :: ListedUser -> Maybe Text

-- | Specifies the number of SSH public keys stored for the user you
--   specified.
[$sel:sshPublicKeyCount:ListedUser'] :: ListedUser -> Maybe Int

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:ListedUser'] :: ListedUser -> Maybe Text

-- | Provides the unique Amazon Resource Name (ARN) for the user that you
--   want to learn about.
[$sel:arn:ListedUser'] :: ListedUser -> Text

-- | Create a value of <a>ListedUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:ListedUser'</a>,
--   <a>listedUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:userName:ListedUser'</a>, <a>listedUser_userName</a> -
--   Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
--   
--   <a>$sel:role':ListedUser'</a>, <a>listedUser_role</a> - Specifies the
--   Amazon Resource Name (ARN) of the IAM role that controls your users'
--   access to your Amazon S3 bucket or EFS file system. The policies
--   attached to this role determine the level of access that you want to
--   provide your users when transferring files into and out of your Amazon
--   S3 bucket or EFS file system. The IAM role should also contain a trust
--   relationship that allows the server to access your resources when
--   servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
--   
--   <a>$sel:sshPublicKeyCount:ListedUser'</a>,
--   <a>listedUser_sshPublicKeyCount</a> - Specifies the number of SSH
--   public keys stored for the user you specified.
--   
--   <a>$sel:homeDirectory:ListedUser'</a>, <a>listedUser_homeDirectory</a>
--   - The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:arn:ListedUser'</a>, <a>listedUser_arn</a> - Provides the
--   unique Amazon Resource Name (ARN) for the user that you want to learn
--   about.
newListedUser :: Text -> ListedUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
listedUser_homeDirectoryType :: Lens' ListedUser (Maybe HomeDirectoryType)

-- | Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
listedUser_userName :: Lens' ListedUser (Maybe Text)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
listedUser_role :: Lens' ListedUser (Maybe Text)

-- | Specifies the number of SSH public keys stored for the user you
--   specified.
listedUser_sshPublicKeyCount :: Lens' ListedUser (Maybe Int)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
listedUser_homeDirectory :: Lens' ListedUser (Maybe Text)

-- | Provides the unique Amazon Resource Name (ARN) for the user that you
--   want to learn about.
listedUser_arn :: Lens' ListedUser Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.ListedUser.ListedUser
instance GHC.Show.Show Amazonka.Transfer.Types.ListedUser.ListedUser
instance GHC.Read.Read Amazonka.Transfer.Types.ListedUser.ListedUser
instance GHC.Classes.Eq Amazonka.Transfer.Types.ListedUser.ListedUser
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ListedUser.ListedUser
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ListedUser.ListedUser
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ListedUser.ListedUser


module Amazonka.Transfer.Types.ListedWorkflow

-- | Contains the ID, text description, and Amazon Resource Name (ARN) for
--   the workflow.
--   
--   <i>See:</i> <a>newListedWorkflow</a> smart constructor.
data ListedWorkflow
ListedWorkflow' :: Maybe Text -> Maybe Text -> Maybe Text -> ListedWorkflow

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
[$sel:arn:ListedWorkflow'] :: ListedWorkflow -> Maybe Text

-- | A unique identifier for the workflow.
[$sel:workflowId:ListedWorkflow'] :: ListedWorkflow -> Maybe Text

-- | Specifies the text description for the workflow.
[$sel:description:ListedWorkflow'] :: ListedWorkflow -> Maybe Text

-- | Create a value of <a>ListedWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListedWorkflow'</a>, <a>listedWorkflow_arn</a> - Specifies
--   the unique Amazon Resource Name (ARN) for the workflow.
--   
--   <a>$sel:workflowId:ListedWorkflow'</a>,
--   <a>listedWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:description:ListedWorkflow'</a>,
--   <a>listedWorkflow_description</a> - Specifies the text description for
--   the workflow.
newListedWorkflow :: ListedWorkflow

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
listedWorkflow_arn :: Lens' ListedWorkflow (Maybe Text)

-- | A unique identifier for the workflow.
listedWorkflow_workflowId :: Lens' ListedWorkflow (Maybe Text)

-- | Specifies the text description for the workflow.
listedWorkflow_description :: Lens' ListedWorkflow (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.ListedWorkflow.ListedWorkflow
instance GHC.Show.Show Amazonka.Transfer.Types.ListedWorkflow.ListedWorkflow
instance GHC.Read.Read Amazonka.Transfer.Types.ListedWorkflow.ListedWorkflow
instance GHC.Classes.Eq Amazonka.Transfer.Types.ListedWorkflow.ListedWorkflow
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ListedWorkflow.ListedWorkflow
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ListedWorkflow.ListedWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ListedWorkflow.ListedWorkflow


module Amazonka.Transfer.Types.LoggingConfiguration

-- | Consists of the logging role and the log group name.
--   
--   <i>See:</i> <a>newLoggingConfiguration</a> smart constructor.
data LoggingConfiguration
LoggingConfiguration' :: Maybe Text -> Maybe Text -> LoggingConfiguration

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:LoggingConfiguration'] :: LoggingConfiguration -> Maybe Text

-- | The name of the CloudWatch logging group for the Amazon Web Services
--   Transfer server to which this workflow belongs.
[$sel:logGroupName:LoggingConfiguration'] :: LoggingConfiguration -> Maybe Text

-- | Create a value of <a>LoggingConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:LoggingConfiguration'</a>,
--   <a>loggingConfiguration_loggingRole</a> - Specifies the Amazon
--   Resource Name (ARN) of the Amazon Web Services Identity and Access
--   Management (IAM) role that allows a server to turn on Amazon
--   CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user
--   activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:logGroupName:LoggingConfiguration'</a>,
--   <a>loggingConfiguration_logGroupName</a> - The name of the CloudWatch
--   logging group for the Amazon Web Services Transfer server to which
--   this workflow belongs.
newLoggingConfiguration :: LoggingConfiguration

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
loggingConfiguration_loggingRole :: Lens' LoggingConfiguration (Maybe Text)

-- | The name of the CloudWatch logging group for the Amazon Web Services
--   Transfer server to which this workflow belongs.
loggingConfiguration_logGroupName :: Lens' LoggingConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.LoggingConfiguration.LoggingConfiguration
instance GHC.Show.Show Amazonka.Transfer.Types.LoggingConfiguration.LoggingConfiguration
instance GHC.Read.Read Amazonka.Transfer.Types.LoggingConfiguration.LoggingConfiguration
instance GHC.Classes.Eq Amazonka.Transfer.Types.LoggingConfiguration.LoggingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.LoggingConfiguration.LoggingConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.LoggingConfiguration.LoggingConfiguration
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.LoggingConfiguration.LoggingConfiguration


module Amazonka.Transfer.Types.OverwriteExisting
newtype OverwriteExisting
OverwriteExisting' :: Text -> OverwriteExisting
[fromOverwriteExisting] :: OverwriteExisting -> Text
pattern OverwriteExisting_FALSE :: OverwriteExisting
pattern OverwriteExisting_TRUE :: OverwriteExisting
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance GHC.Generics.Generic Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance GHC.Classes.Ord Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance GHC.Classes.Eq Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance GHC.Read.Read Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting
instance GHC.Show.Show Amazonka.Transfer.Types.OverwriteExisting.OverwriteExisting


module Amazonka.Transfer.Types.PosixProfile

-- | The full POSIX identity, including user ID (<tt>Uid</tt>), group ID
--   (<tt>Gid</tt>), and any secondary groups IDs (<tt>SecondaryGids</tt>),
--   that controls your users' access to your Amazon EFS file systems. The
--   POSIX permissions that are set on files and directories in your file
--   system determine the level of access your users get when transferring
--   files into and out of your Amazon EFS file systems.
--   
--   <i>See:</i> <a>newPosixProfile</a> smart constructor.
data PosixProfile
PosixProfile' :: Maybe [Natural] -> Natural -> Natural -> PosixProfile

-- | The secondary POSIX group IDs used for all EFS operations by this
--   user.
[$sel:secondaryGids:PosixProfile'] :: PosixProfile -> Maybe [Natural]

-- | The POSIX user ID used for all EFS operations by this user.
[$sel:uid:PosixProfile'] :: PosixProfile -> Natural

-- | The POSIX group ID used for all EFS operations by this user.
[$sel:gid:PosixProfile'] :: PosixProfile -> Natural

-- | Create a value of <a>PosixProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryGids:PosixProfile'</a>,
--   <a>posixProfile_secondaryGids</a> - The secondary POSIX group IDs used
--   for all EFS operations by this user.
--   
--   <a>$sel:uid:PosixProfile'</a>, <a>posixProfile_uid</a> - The POSIX
--   user ID used for all EFS operations by this user.
--   
--   <a>$sel:gid:PosixProfile'</a>, <a>posixProfile_gid</a> - The POSIX
--   group ID used for all EFS operations by this user.
newPosixProfile :: Natural -> Natural -> PosixProfile

-- | The secondary POSIX group IDs used for all EFS operations by this
--   user.
posixProfile_secondaryGids :: Lens' PosixProfile (Maybe [Natural])

-- | The POSIX user ID used for all EFS operations by this user.
posixProfile_uid :: Lens' PosixProfile Natural

-- | The POSIX group ID used for all EFS operations by this user.
posixProfile_gid :: Lens' PosixProfile Natural
instance GHC.Generics.Generic Amazonka.Transfer.Types.PosixProfile.PosixProfile
instance GHC.Show.Show Amazonka.Transfer.Types.PosixProfile.PosixProfile
instance GHC.Read.Read Amazonka.Transfer.Types.PosixProfile.PosixProfile
instance GHC.Classes.Eq Amazonka.Transfer.Types.PosixProfile.PosixProfile
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.PosixProfile.PosixProfile
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.PosixProfile.PosixProfile
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.PosixProfile.PosixProfile
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.PosixProfile.PosixProfile


module Amazonka.Transfer.Types.DescribedAccess

-- | Describes the properties of the access that was specified.
--   
--   <i>See:</i> <a>newDescribedAccess</a> smart constructor.
data DescribedAccess
DescribedAccess' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DescribedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:DescribedAccess'] :: DescribedAccess -> Maybe HomeDirectoryType
[$sel:posixProfile:DescribedAccess'] :: DescribedAccess -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
[$sel:homeDirectoryMappings:DescribedAccess'] :: DescribedAccess -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
[$sel:policy:DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | Create a value of <a>DescribedAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectoryType</a> - The type of landing
--   directory (folder) you want your users' home directory to be when they
--   log into the server. If you set it to <tt>PATH</tt>, the user will see
--   the absolute Amazon S3 bucket or EFS paths as is in their file
--   transfer protocol clients. If you set it <tt>LOGICAL</tt>, you need to
--   provide mappings in the <tt>HomeDirectoryMappings</tt> for how you
--   want to make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:DescribedAccess'</a>,
--   <a>describedAccess_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:homeDirectoryMappings:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectoryMappings</a> - Logical directory
--   mappings that specify what Amazon S3 or Amazon EFS paths and keys
--   should be visible to your user and how you want to make them visible.
--   You must specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
--   
--   <a>$sel:role':DescribedAccess'</a>, <a>describedAccess_role</a> -
--   Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:DescribedAccess'</a>, <a>describedAccess_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   <a>$sel:externalId:DescribedAccess'</a>,
--   <a>describedAccess_externalId</a> - A unique identifier that is
--   required to identify specific groups within your directory. The users
--   of the group that you associate have access to your Amazon S3 or
--   Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family. If you know the group name, you can view the
--   SID values by running the following command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:homeDirectory:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectory</a> - The landing directory (folder)
--   for a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
newDescribedAccess :: DescribedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
describedAccess_homeDirectoryType :: Lens' DescribedAccess (Maybe HomeDirectoryType)

-- | Undocumented member.
describedAccess_posixProfile :: Lens' DescribedAccess (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
describedAccess_homeDirectoryMappings :: Lens' DescribedAccess (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
describedAccess_role :: Lens' DescribedAccess (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
describedAccess_policy :: Lens' DescribedAccess (Maybe Text)

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
describedAccess_externalId :: Lens' DescribedAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
describedAccess_homeDirectory :: Lens' DescribedAccess (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.DescribedAccess.DescribedAccess
instance GHC.Show.Show Amazonka.Transfer.Types.DescribedAccess.DescribedAccess
instance GHC.Read.Read Amazonka.Transfer.Types.DescribedAccess.DescribedAccess
instance GHC.Classes.Eq Amazonka.Transfer.Types.DescribedAccess.DescribedAccess
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.DescribedAccess.DescribedAccess
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.DescribedAccess.DescribedAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.DescribedAccess.DescribedAccess


module Amazonka.Transfer.Types.Protocol
newtype Protocol
Protocol' :: Text -> Protocol
[fromProtocol] :: Protocol -> Text
pattern Protocol_FTP :: Protocol
pattern Protocol_FTPS :: Protocol
pattern Protocol_SFTP :: Protocol
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.Protocol.Protocol
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.Protocol.Protocol
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.Protocol.Protocol
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.Protocol.Protocol
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.Protocol.Protocol
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.Protocol.Protocol
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.Protocol.Protocol
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.Protocol.Protocol
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.Protocol.Protocol
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.Protocol.Protocol
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.Protocol.Protocol
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.Protocol.Protocol
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.Protocol.Protocol
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.Protocol.Protocol
instance GHC.Generics.Generic Amazonka.Transfer.Types.Protocol.Protocol
instance GHC.Classes.Ord Amazonka.Transfer.Types.Protocol.Protocol
instance GHC.Classes.Eq Amazonka.Transfer.Types.Protocol.Protocol
instance GHC.Read.Read Amazonka.Transfer.Types.Protocol.Protocol
instance GHC.Show.Show Amazonka.Transfer.Types.Protocol.Protocol


module Amazonka.Transfer.Types.ProtocolDetails

-- | The protocol settings that are configured for your server.
--   
--   This type is only valid in the <tt>UpdateServer</tt> API.
--   
--   <i>See:</i> <a>newProtocolDetails</a> smart constructor.
data ProtocolDetails
ProtocolDetails' :: Maybe Text -> ProtocolDetails

-- | Indicates passive mode, for FTP and FTPS protocols. Enter a single
--   dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer. For example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
[$sel:passiveIp:ProtocolDetails'] :: ProtocolDetails -> Maybe Text

-- | Create a value of <a>ProtocolDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passiveIp:ProtocolDetails'</a>,
--   <a>protocolDetails_passiveIp</a> - Indicates passive mode, for FTP and
--   FTPS protocols. Enter a single dotted-quad IPv4 address, such as the
--   external IP address of a firewall, router, or load balancer. For
--   example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
newProtocolDetails :: ProtocolDetails

-- | Indicates passive mode, for FTP and FTPS protocols. Enter a single
--   dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer. For example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
protocolDetails_passiveIp :: Lens' ProtocolDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails
instance GHC.Show.Show Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails
instance GHC.Read.Read Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.ProtocolDetails.ProtocolDetails


module Amazonka.Transfer.Types.S3FileLocation

-- | Specifies the details for the file location for the file being used in
--   the workflow. Only applicable if you are using S3 storage.
--   
--   <i>See:</i> <a>newS3FileLocation</a> smart constructor.
data S3FileLocation
S3FileLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> S3FileLocation

-- | Specifies the file version.
[$sel:versionId:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | The entity tag is a hash of the object. The ETag reflects changes only
--   to the contents of an object, not its metadata.
[$sel:etag:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | Specifies the S3 bucket that contains the file being used.
[$sel:bucket:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
[$sel:key:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | Create a value of <a>S3FileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:S3FileLocation'</a>, <a>s3FileLocation_versionId</a>
--   - Specifies the file version.
--   
--   <a>$sel:etag:S3FileLocation'</a>, <a>s3FileLocation_etag</a> - The
--   entity tag is a hash of the object. The ETag reflects changes only to
--   the contents of an object, not its metadata.
--   
--   <a>$sel:bucket:S3FileLocation'</a>, <a>s3FileLocation_bucket</a> -
--   Specifies the S3 bucket that contains the file being used.
--   
--   <a>$sel:key:S3FileLocation'</a>, <a>s3FileLocation_key</a> - The name
--   assigned to the file when it was created in S3. You use the object key
--   to retrieve the object.
newS3FileLocation :: S3FileLocation

-- | Specifies the file version.
s3FileLocation_versionId :: Lens' S3FileLocation (Maybe Text)

-- | The entity tag is a hash of the object. The ETag reflects changes only
--   to the contents of an object, not its metadata.
s3FileLocation_etag :: Lens' S3FileLocation (Maybe Text)

-- | Specifies the S3 bucket that contains the file being used.
s3FileLocation_bucket :: Lens' S3FileLocation (Maybe Text)

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
s3FileLocation_key :: Lens' S3FileLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.S3FileLocation.S3FileLocation
instance GHC.Show.Show Amazonka.Transfer.Types.S3FileLocation.S3FileLocation
instance GHC.Read.Read Amazonka.Transfer.Types.S3FileLocation.S3FileLocation
instance GHC.Classes.Eq Amazonka.Transfer.Types.S3FileLocation.S3FileLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.S3FileLocation.S3FileLocation
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.S3FileLocation.S3FileLocation
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.S3FileLocation.S3FileLocation


module Amazonka.Transfer.Types.FileLocation

-- | Specifies the Amazon S3 or EFS file details to be used in the step.
--   
--   <i>See:</i> <a>newFileLocation</a> smart constructor.
data FileLocation
FileLocation' :: Maybe EfsFileLocation -> Maybe S3FileLocation -> FileLocation

-- | Specifies the Amazon EFS ID and the path for the file being used.
[$sel:efsFileLocation:FileLocation'] :: FileLocation -> Maybe EfsFileLocation

-- | Specifies the S3 details for the file being used, such as bucket,
--   Etag, and so forth.
[$sel:s3FileLocation:FileLocation'] :: FileLocation -> Maybe S3FileLocation

-- | Create a value of <a>FileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:efsFileLocation:FileLocation'</a>,
--   <a>fileLocation_efsFileLocation</a> - Specifies the Amazon EFS ID and
--   the path for the file being used.
--   
--   <a>$sel:s3FileLocation:FileLocation'</a>,
--   <a>fileLocation_s3FileLocation</a> - Specifies the S3 details for the
--   file being used, such as bucket, Etag, and so forth.
newFileLocation :: FileLocation

-- | Specifies the Amazon EFS ID and the path for the file being used.
fileLocation_efsFileLocation :: Lens' FileLocation (Maybe EfsFileLocation)

-- | Specifies the S3 details for the file being used, such as bucket,
--   Etag, and so forth.
fileLocation_s3FileLocation :: Lens' FileLocation (Maybe S3FileLocation)
instance GHC.Generics.Generic Amazonka.Transfer.Types.FileLocation.FileLocation
instance GHC.Show.Show Amazonka.Transfer.Types.FileLocation.FileLocation
instance GHC.Read.Read Amazonka.Transfer.Types.FileLocation.FileLocation
instance GHC.Classes.Eq Amazonka.Transfer.Types.FileLocation.FileLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.FileLocation.FileLocation
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.FileLocation.FileLocation
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.FileLocation.FileLocation


module Amazonka.Transfer.Types.S3InputFileLocation

-- | Specifies the customer input S3 file location. If it is used inside
--   <tt>copyStepDetails.DestinationFileLocation</tt>, it should be the S3
--   copy destination.
--   
--   You need to provide the bucket and key. The key can represent either a
--   path or a file. This is determined by whether or not you end the key
--   value with the forward slash (/) character. If the final character is
--   "/", then your file is copied to the folder, and its name does not
--   change. If, rather, the final character is alphanumeric, your uploaded
--   file is renamed to the path value. In this case, if a file with that
--   name already exists, it is overwritten.
--   
--   For example, if your path is <tt>shared-files/bob/</tt>, your uploaded
--   files are copied to the <tt>shared-files/bob/</tt>, folder. If your
--   path is <tt>shared-files/today</tt>, each uploaded file is copied to
--   the <tt>shared-files</tt> folder and named <tt>today</tt>: each upload
--   overwrites the previous version of the <i>bob</i> file.
--   
--   <i>See:</i> <a>newS3InputFileLocation</a> smart constructor.
data S3InputFileLocation
S3InputFileLocation' :: Maybe Text -> Maybe Text -> S3InputFileLocation

-- | Specifies the S3 bucket for the customer input file.
[$sel:bucket:S3InputFileLocation'] :: S3InputFileLocation -> Maybe Text

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
[$sel:key:S3InputFileLocation'] :: S3InputFileLocation -> Maybe Text

-- | Create a value of <a>S3InputFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3InputFileLocation'</a>,
--   <a>s3InputFileLocation_bucket</a> - Specifies the S3 bucket for the
--   customer input file.
--   
--   <a>$sel:key:S3InputFileLocation'</a>, <a>s3InputFileLocation_key</a> -
--   The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
newS3InputFileLocation :: S3InputFileLocation

-- | Specifies the S3 bucket for the customer input file.
s3InputFileLocation_bucket :: Lens' S3InputFileLocation (Maybe Text)

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
s3InputFileLocation_key :: Lens' S3InputFileLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation
instance GHC.Show.Show Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation
instance GHC.Read.Read Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation
instance GHC.Classes.Eq Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.S3InputFileLocation.S3InputFileLocation


module Amazonka.Transfer.Types.InputFileLocation

-- | Specifies the location for the file being copied. Only applicable for
--   the Copy type of workflow steps.
--   
--   <i>See:</i> <a>newInputFileLocation</a> smart constructor.
data InputFileLocation
InputFileLocation' :: Maybe EfsFileLocation -> Maybe S3InputFileLocation -> InputFileLocation

-- | Reserved for future use.
[$sel:efsFileLocation:InputFileLocation'] :: InputFileLocation -> Maybe EfsFileLocation

-- | Specifies the details for the S3 file being copied.
[$sel:s3FileLocation:InputFileLocation'] :: InputFileLocation -> Maybe S3InputFileLocation

-- | Create a value of <a>InputFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:efsFileLocation:InputFileLocation'</a>,
--   <a>inputFileLocation_efsFileLocation</a> - Reserved for future use.
--   
--   <a>$sel:s3FileLocation:InputFileLocation'</a>,
--   <a>inputFileLocation_s3FileLocation</a> - Specifies the details for
--   the S3 file being copied.
newInputFileLocation :: InputFileLocation

-- | Reserved for future use.
inputFileLocation_efsFileLocation :: Lens' InputFileLocation (Maybe EfsFileLocation)

-- | Specifies the details for the S3 file being copied.
inputFileLocation_s3FileLocation :: Lens' InputFileLocation (Maybe S3InputFileLocation)
instance GHC.Generics.Generic Amazonka.Transfer.Types.InputFileLocation.InputFileLocation
instance GHC.Show.Show Amazonka.Transfer.Types.InputFileLocation.InputFileLocation
instance GHC.Read.Read Amazonka.Transfer.Types.InputFileLocation.InputFileLocation
instance GHC.Classes.Eq Amazonka.Transfer.Types.InputFileLocation.InputFileLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.InputFileLocation.InputFileLocation
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.InputFileLocation.InputFileLocation
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.InputFileLocation.InputFileLocation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.InputFileLocation.InputFileLocation


module Amazonka.Transfer.Types.CopyStepDetails

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   <i>See:</i> <a>newCopyStepDetails</a> smart constructor.
data CopyStepDetails
CopyStepDetails' :: Maybe InputFileLocation -> Maybe OverwriteExisting -> Maybe Text -> CopyStepDetails
[$sel:destinationFileLocation:CopyStepDetails'] :: CopyStepDetails -> Maybe InputFileLocation

-- | A flag that indicates whether or not to overwrite an existing file of
--   the same name. The default is <tt>FALSE</tt>.
[$sel:overwriteExisting:CopyStepDetails'] :: CopyStepDetails -> Maybe OverwriteExisting

-- | The name of the step, used as an identifier.
[$sel:name:CopyStepDetails'] :: CopyStepDetails -> Maybe Text

-- | Create a value of <a>CopyStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationFileLocation:CopyStepDetails'</a>,
--   <a>copyStepDetails_destinationFileLocation</a> - Undocumented member.
--   
--   <a>$sel:overwriteExisting:CopyStepDetails'</a>,
--   <a>copyStepDetails_overwriteExisting</a> - A flag that indicates
--   whether or not to overwrite an existing file of the same name. The
--   default is <tt>FALSE</tt>.
--   
--   <a>$sel:name:CopyStepDetails'</a>, <a>copyStepDetails_name</a> - The
--   name of the step, used as an identifier.
newCopyStepDetails :: CopyStepDetails

-- | Undocumented member.
copyStepDetails_destinationFileLocation :: Lens' CopyStepDetails (Maybe InputFileLocation)

-- | A flag that indicates whether or not to overwrite an existing file of
--   the same name. The default is <tt>FALSE</tt>.
copyStepDetails_overwriteExisting :: Lens' CopyStepDetails (Maybe OverwriteExisting)

-- | The name of the step, used as an identifier.
copyStepDetails_name :: Lens' CopyStepDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails
instance GHC.Show.Show Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails
instance GHC.Read.Read Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.CopyStepDetails.CopyStepDetails


module Amazonka.Transfer.Types.S3Tag

-- | Specifies the key-value pair that are assigned to a file during the
--   execution of a Tagging step.
--   
--   <i>See:</i> <a>newS3Tag</a> smart constructor.
data S3Tag
S3Tag' :: Text -> Text -> S3Tag

-- | The name assigned to the tag that you create.
[$sel:key:S3Tag'] :: S3Tag -> Text

-- | The value that corresponds to the key.
[$sel:value:S3Tag'] :: S3Tag -> Text

-- | Create a value of <a>S3Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Tag'</a>, <a>s3Tag_key</a> - The name assigned to the
--   tag that you create.
--   
--   <a>$sel:value:S3Tag'</a>, <a>s3Tag_value</a> - The value that
--   corresponds to the key.
newS3Tag :: Text -> Text -> S3Tag

-- | The name assigned to the tag that you create.
s3Tag_key :: Lens' S3Tag Text

-- | The value that corresponds to the key.
s3Tag_value :: Lens' S3Tag Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.S3Tag.S3Tag
instance GHC.Show.Show Amazonka.Transfer.Types.S3Tag.S3Tag
instance GHC.Read.Read Amazonka.Transfer.Types.S3Tag.S3Tag
instance GHC.Classes.Eq Amazonka.Transfer.Types.S3Tag.S3Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.S3Tag.S3Tag
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.S3Tag.S3Tag
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.S3Tag.S3Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.S3Tag.S3Tag


module Amazonka.Transfer.Types.SshPublicKey

-- | Provides information about the public Secure Shell (SSH) key that is
--   associated with a user account for the specific file transfer
--   protocol-enabled server (as identified by <tt>ServerId</tt>). The
--   information returned includes the date the key was imported, the
--   public key contents, and the public key ID. A user can store more than
--   one SSH public key associated with their user name on a specific
--   server.
--   
--   <i>See:</i> <a>newSshPublicKey</a> smart constructor.
data SshPublicKey
SshPublicKey' :: POSIX -> Text -> Text -> SshPublicKey

-- | Specifies the date that the public key was added to the user account.
[$sel:dateImported:SshPublicKey'] :: SshPublicKey -> POSIX

-- | Specifies the content of the SSH public key as specified by the
--   <tt>PublicKeyId</tt>.
[$sel:sshPublicKeyBody:SshPublicKey'] :: SshPublicKey -> Text

-- | Specifies the <tt>SshPublicKeyId</tt> parameter contains the
--   identifier of the public key.
[$sel:sshPublicKeyId:SshPublicKey'] :: SshPublicKey -> Text

-- | Create a value of <a>SshPublicKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dateImported:SshPublicKey'</a>,
--   <a>sshPublicKey_dateImported</a> - Specifies the date that the public
--   key was added to the user account.
--   
--   <a>$sel:sshPublicKeyBody:SshPublicKey'</a>,
--   <a>sshPublicKey_sshPublicKeyBody</a> - Specifies the content of the
--   SSH public key as specified by the <tt>PublicKeyId</tt>.
--   
--   <a>$sel:sshPublicKeyId:SshPublicKey'</a>,
--   <a>sshPublicKey_sshPublicKeyId</a> - Specifies the
--   <tt>SshPublicKeyId</tt> parameter contains the identifier of the
--   public key.
newSshPublicKey :: UTCTime -> Text -> Text -> SshPublicKey

-- | Specifies the date that the public key was added to the user account.
sshPublicKey_dateImported :: Lens' SshPublicKey UTCTime

-- | Specifies the content of the SSH public key as specified by the
--   <tt>PublicKeyId</tt>.
sshPublicKey_sshPublicKeyBody :: Lens' SshPublicKey Text

-- | Specifies the <tt>SshPublicKeyId</tt> parameter contains the
--   identifier of the public key.
sshPublicKey_sshPublicKeyId :: Lens' SshPublicKey Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.SshPublicKey.SshPublicKey
instance GHC.Show.Show Amazonka.Transfer.Types.SshPublicKey.SshPublicKey
instance GHC.Read.Read Amazonka.Transfer.Types.SshPublicKey.SshPublicKey
instance GHC.Classes.Eq Amazonka.Transfer.Types.SshPublicKey.SshPublicKey
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.SshPublicKey.SshPublicKey
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.SshPublicKey.SshPublicKey
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.SshPublicKey.SshPublicKey


module Amazonka.Transfer.Types.State

-- | Describes the condition of a file transfer protocol-enabled server
--   with respect to its ability to perform file operations. There are six
--   possible states: <tt>OFFLINE</tt>, <tt>ONLINE</tt>, <tt>STARTING</tt>,
--   <tt>STOPPING</tt>, <tt>START_FAILED</tt>, and <tt>STOP_FAILED</tt>.
--   
--   <tt>OFFLINE</tt> indicates that the server exists, but that it is not
--   available for file operations. <tt>ONLINE</tt> indicates that the
--   server is available to perform file operations. <tt>STARTING</tt>
--   indicates that the server's was instantiated, but the server is not
--   yet available to perform file operations. Under normal conditions, it
--   can take a couple of minutes for the server to be completely
--   operational. Both <tt>START_FAILED</tt> and <tt>STOP_FAILED</tt> are
--   error conditions.
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_OFFLINE :: State
pattern State_ONLINE :: State
pattern State_STARTING :: State
pattern State_START_FAILED :: State
pattern State_STOPPING :: State
pattern State_STOP_FAILED :: State
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.State.State
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.State.State
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.State.State
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.State.State
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.State.State
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.State.State
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.State.State
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.State.State
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.State.State
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.State.State
instance GHC.Generics.Generic Amazonka.Transfer.Types.State.State
instance GHC.Classes.Ord Amazonka.Transfer.Types.State.State
instance GHC.Classes.Eq Amazonka.Transfer.Types.State.State
instance GHC.Read.Read Amazonka.Transfer.Types.State.State
instance GHC.Show.Show Amazonka.Transfer.Types.State.State


module Amazonka.Transfer.Types.ListedServer

-- | Returns properties of a file transfer protocol-enabled server that was
--   specified.
--   
--   <i>See:</i> <a>newListedServer</a> smart constructor.
data ListedServer
ListedServer' :: Maybe Text -> Maybe State -> Maybe IdentityProviderType -> Maybe Text -> Maybe Domain -> Maybe EndpointType -> Maybe Int -> Text -> ListedServer

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:ListedServer'] :: ListedServer -> Maybe Text

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
[$sel:state:ListedServer'] :: ListedServer -> Maybe State

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
[$sel:identityProviderType:ListedServer'] :: ListedServer -> Maybe IdentityProviderType

-- | Specifies the unique system assigned identifier for the servers that
--   were listed.
[$sel:serverId:ListedServer'] :: ListedServer -> Maybe Text

-- | Specifies the domain of the storage system that is used for file
--   transfers.
[$sel:domain:ListedServer'] :: ListedServer -> Maybe Domain

-- | Specifies the type of VPC endpoint that your server is connected to.
--   If your server is connected to a VPC endpoint, your server isn't
--   accessible over the public internet.
[$sel:endpointType:ListedServer'] :: ListedServer -> Maybe EndpointType

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
[$sel:userCount:ListedServer'] :: ListedServer -> Maybe Int

-- | Specifies the unique Amazon Resource Name (ARN) for a server to be
--   listed.
[$sel:arn:ListedServer'] :: ListedServer -> Text

-- | Create a value of <a>ListedServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:ListedServer'</a>, <a>listedServer_loggingRole</a>
--   - Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:state:ListedServer'</a>, <a>listedServer_state</a> - Specifies
--   the condition of a server for the server that was described. A value
--   of <tt>ONLINE</tt> indicates that the server can accept jobs and
--   transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means that
--   the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
--   
--   <a>$sel:identityProviderType:ListedServer'</a>,
--   <a>listedServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:serverId:ListedServer'</a>, <a>listedServer_serverId</a> -
--   Specifies the unique system assigned identifier for the servers that
--   were listed.
--   
--   <a>$sel:domain:ListedServer'</a>, <a>listedServer_domain</a> -
--   Specifies the domain of the storage system that is used for file
--   transfers.
--   
--   <a>$sel:endpointType:ListedServer'</a>,
--   <a>listedServer_endpointType</a> - Specifies the type of VPC endpoint
--   that your server is connected to. If your server is connected to a VPC
--   endpoint, your server isn't accessible over the public internet.
--   
--   <a>$sel:userCount:ListedServer'</a>, <a>listedServer_userCount</a> -
--   Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
--   
--   <a>$sel:arn:ListedServer'</a>, <a>listedServer_arn</a> - Specifies the
--   unique Amazon Resource Name (ARN) for a server to be listed.
newListedServer :: Text -> ListedServer

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
listedServer_loggingRole :: Lens' ListedServer (Maybe Text)

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
listedServer_state :: Lens' ListedServer (Maybe State)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
listedServer_identityProviderType :: Lens' ListedServer (Maybe IdentityProviderType)

-- | Specifies the unique system assigned identifier for the servers that
--   were listed.
listedServer_serverId :: Lens' ListedServer (Maybe Text)

-- | Specifies the domain of the storage system that is used for file
--   transfers.
listedServer_domain :: Lens' ListedServer (Maybe Domain)

-- | Specifies the type of VPC endpoint that your server is connected to.
--   If your server is connected to a VPC endpoint, your server isn't
--   accessible over the public internet.
listedServer_endpointType :: Lens' ListedServer (Maybe EndpointType)

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
listedServer_userCount :: Lens' ListedServer (Maybe Int)

-- | Specifies the unique Amazon Resource Name (ARN) for a server to be
--   listed.
listedServer_arn :: Lens' ListedServer Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.ListedServer.ListedServer
instance GHC.Show.Show Amazonka.Transfer.Types.ListedServer.ListedServer
instance GHC.Read.Read Amazonka.Transfer.Types.ListedServer.ListedServer
instance GHC.Classes.Eq Amazonka.Transfer.Types.ListedServer.ListedServer
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ListedServer.ListedServer
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ListedServer.ListedServer
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ListedServer.ListedServer


module Amazonka.Transfer.Types.Tag

-- | Creates a key-value pair for a specific resource. Tags are metadata
--   that you can use to search for and group a resource for various
--   purposes. You can apply tags to servers, users, and roles. A tag key
--   can take more than one value. For example, to group servers for
--   accounting purposes, you might create a tag called <tt>Group</tt> and
--   assign the values <tt>Research</tt> and <tt>Accounting</tt> to that
--   group.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The name assigned to the tag that you create.
[$sel:key:Tag'] :: Tag -> Text

-- | Contains one or more values that you assigned to the key name you
--   create.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The name assigned to the tag
--   that you create.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - Contains one or more values
--   that you assigned to the key name you create.
newTag :: Text -> Text -> Tag

-- | The name assigned to the tag that you create.
tag_key :: Lens' Tag Text

-- | Contains one or more values that you assigned to the key name you
--   create.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.Tag.Tag
instance GHC.Show.Show Amazonka.Transfer.Types.Tag.Tag
instance GHC.Read.Read Amazonka.Transfer.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.Transfer.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.Tag.Tag


module Amazonka.Transfer.Types.DescribedUser

-- | Describes the properties of a user that was specified.
--   
--   <i>See:</i> <a>newDescribedUser</a> smart constructor.
data DescribedUser
DescribedUser' :: Maybe [SshPublicKey] -> Maybe HomeDirectoryType -> Maybe Text -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> DescribedUser

-- | Specifies the public key portion of the Secure Shell (SSH) keys stored
--   for the described user.
[$sel:sshPublicKeys:DescribedUser'] :: DescribedUser -> Maybe [SshPublicKey]

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:DescribedUser'] :: DescribedUser -> Maybe HomeDirectoryType

-- | Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
[$sel:userName:DescribedUser'] :: DescribedUser -> Maybe Text

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File System (Amazon EFS) file systems. The POSIX
--   permissions that are set on files and directories in your file system
--   determine the level of access your users get when transferring files
--   into and out of your Amazon EFS file systems.
[$sel:posixProfile:DescribedUser'] :: DescribedUser -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
[$sel:homeDirectoryMappings:DescribedUser'] :: DescribedUser -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':DescribedUser'] :: DescribedUser -> Maybe Text

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
[$sel:policy:DescribedUser'] :: DescribedUser -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:DescribedUser'] :: DescribedUser -> Maybe Text

-- | Specifies the key-value pairs for the user requested. Tag can be used
--   to search for and group users for a variety of purposes.
[$sel:tags:DescribedUser'] :: DescribedUser -> Maybe (NonEmpty Tag)

-- | Specifies the unique Amazon Resource Name (ARN) for the user that was
--   requested to be described.
[$sel:arn:DescribedUser'] :: DescribedUser -> Text

-- | Create a value of <a>DescribedUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sshPublicKeys:DescribedUser'</a>,
--   <a>describedUser_sshPublicKeys</a> - Specifies the public key portion
--   of the Secure Shell (SSH) keys stored for the described user.
--   
--   <a>$sel:homeDirectoryType:DescribedUser'</a>,
--   <a>describedUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:userName:DescribedUser'</a>, <a>describedUser_userName</a> -
--   Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
--   
--   <a>$sel:posixProfile:DescribedUser'</a>,
--   <a>describedUser_posixProfile</a> - Specifies the full POSIX identity,
--   including user ID (<tt>Uid</tt>), group ID (<tt>Gid</tt>), and any
--   secondary groups IDs (<tt>SecondaryGids</tt>), that controls your
--   users' access to your Amazon Elastic File System (Amazon EFS) file
--   systems. The POSIX permissions that are set on files and directories
--   in your file system determine the level of access your users get when
--   transferring files into and out of your Amazon EFS file systems.
--   
--   <a>$sel:homeDirectoryMappings:DescribedUser'</a>,
--   <a>describedUser_homeDirectoryMappings</a> - Logical directory
--   mappings that specify what Amazon S3 or Amazon EFS paths and keys
--   should be visible to your user and how you want to make them visible.
--   You must specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   <a>$sel:role':DescribedUser'</a>, <a>describedUser_role</a> -
--   Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:DescribedUser'</a>, <a>describedUser_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   <a>$sel:homeDirectory:DescribedUser'</a>,
--   <a>describedUser_homeDirectory</a> - The landing directory (folder)
--   for a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:tags:DescribedUser'</a>, <a>describedUser_tags</a> - Specifies
--   the key-value pairs for the user requested. Tag can be used to search
--   for and group users for a variety of purposes.
--   
--   <a>$sel:arn:DescribedUser'</a>, <a>describedUser_arn</a> - Specifies
--   the unique Amazon Resource Name (ARN) for the user that was requested
--   to be described.
newDescribedUser :: Text -> DescribedUser

-- | Specifies the public key portion of the Secure Shell (SSH) keys stored
--   for the described user.
describedUser_sshPublicKeys :: Lens' DescribedUser (Maybe [SshPublicKey])

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
describedUser_homeDirectoryType :: Lens' DescribedUser (Maybe HomeDirectoryType)

-- | Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
describedUser_userName :: Lens' DescribedUser (Maybe Text)

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File System (Amazon EFS) file systems. The POSIX
--   permissions that are set on files and directories in your file system
--   determine the level of access your users get when transferring files
--   into and out of your Amazon EFS file systems.
describedUser_posixProfile :: Lens' DescribedUser (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
describedUser_homeDirectoryMappings :: Lens' DescribedUser (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
describedUser_role :: Lens' DescribedUser (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
describedUser_policy :: Lens' DescribedUser (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
describedUser_homeDirectory :: Lens' DescribedUser (Maybe Text)

-- | Specifies the key-value pairs for the user requested. Tag can be used
--   to search for and group users for a variety of purposes.
describedUser_tags :: Lens' DescribedUser (Maybe (NonEmpty Tag))

-- | Specifies the unique Amazon Resource Name (ARN) for the user that was
--   requested to be described.
describedUser_arn :: Lens' DescribedUser Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.DescribedUser.DescribedUser
instance GHC.Show.Show Amazonka.Transfer.Types.DescribedUser.DescribedUser
instance GHC.Read.Read Amazonka.Transfer.Types.DescribedUser.DescribedUser
instance GHC.Classes.Eq Amazonka.Transfer.Types.DescribedUser.DescribedUser
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.DescribedUser.DescribedUser
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.DescribedUser.DescribedUser
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.DescribedUser.DescribedUser


module Amazonka.Transfer.Types.TagStepDetails

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   The key/value pairs used to tag a file during the execution of a
--   workflow step.
--   
--   <i>See:</i> <a>newTagStepDetails</a> smart constructor.
data TagStepDetails
TagStepDetails' :: Maybe Text -> Maybe (NonEmpty S3Tag) -> TagStepDetails

-- | The name of the step, used as an identifier.
[$sel:name:TagStepDetails'] :: TagStepDetails -> Maybe Text

-- | Array that contains from 1 to 10 key/value pairs.
[$sel:tags:TagStepDetails'] :: TagStepDetails -> Maybe (NonEmpty S3Tag)

-- | Create a value of <a>TagStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TagStepDetails'</a>, <a>tagStepDetails_name</a> - The
--   name of the step, used as an identifier.
--   
--   <a>$sel:tags:TagStepDetails'</a>, <a>tagStepDetails_tags</a> - Array
--   that contains from 1 to 10 key/value pairs.
newTagStepDetails :: TagStepDetails

-- | The name of the step, used as an identifier.
tagStepDetails_name :: Lens' TagStepDetails (Maybe Text)

-- | Array that contains from 1 to 10 key/value pairs.
tagStepDetails_tags :: Lens' TagStepDetails (Maybe (NonEmpty S3Tag))
instance GHC.Generics.Generic Amazonka.Transfer.Types.TagStepDetails.TagStepDetails
instance GHC.Show.Show Amazonka.Transfer.Types.TagStepDetails.TagStepDetails
instance GHC.Read.Read Amazonka.Transfer.Types.TagStepDetails.TagStepDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.TagStepDetails.TagStepDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.TagStepDetails.TagStepDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.TagStepDetails.TagStepDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.TagStepDetails.TagStepDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.TagStepDetails.TagStepDetails


module Amazonka.Transfer.Types.UserDetails

-- | Specifies the user name, server ID, and session ID for a workflow.
--   
--   <i>See:</i> <a>newUserDetails</a> smart constructor.
data UserDetails
UserDetails' :: Maybe Text -> Text -> Text -> UserDetails

-- | The system-assigned unique identifier for a session that corresponds
--   to the workflow.
[$sel:sessionId:UserDetails'] :: UserDetails -> Maybe Text

-- | A unique string that identifies a user account associated with a
--   server.
[$sel:userName:UserDetails'] :: UserDetails -> Text

-- | The system-assigned unique identifier for a Transfer server instance.
[$sel:serverId:UserDetails'] :: UserDetails -> Text

-- | Create a value of <a>UserDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionId:UserDetails'</a>, <a>userDetails_sessionId</a> - The
--   system-assigned unique identifier for a session that corresponds to
--   the workflow.
--   
--   <a>$sel:userName:UserDetails'</a>, <a>userDetails_userName</a> - A
--   unique string that identifies a user account associated with a server.
--   
--   <a>$sel:serverId:UserDetails'</a>, <a>userDetails_serverId</a> - The
--   system-assigned unique identifier for a Transfer server instance.
newUserDetails :: Text -> Text -> UserDetails

-- | The system-assigned unique identifier for a session that corresponds
--   to the workflow.
userDetails_sessionId :: Lens' UserDetails (Maybe Text)

-- | A unique string that identifies a user account associated with a
--   server.
userDetails_userName :: Lens' UserDetails Text

-- | The system-assigned unique identifier for a Transfer server instance.
userDetails_serverId :: Lens' UserDetails Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.UserDetails.UserDetails
instance GHC.Show.Show Amazonka.Transfer.Types.UserDetails.UserDetails
instance GHC.Read.Read Amazonka.Transfer.Types.UserDetails.UserDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.UserDetails.UserDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.UserDetails.UserDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.UserDetails.UserDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.UserDetails.UserDetails


module Amazonka.Transfer.Types.ServiceMetadata

-- | A container object for the session details associated with a workflow.
--   
--   <i>See:</i> <a>newServiceMetadata</a> smart constructor.
data ServiceMetadata
ServiceMetadata' :: UserDetails -> ServiceMetadata

-- | The Server ID (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and
--   user (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
[$sel:userDetails:ServiceMetadata'] :: ServiceMetadata -> UserDetails

-- | Create a value of <a>ServiceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userDetails:ServiceMetadata'</a>,
--   <a>serviceMetadata_userDetails</a> - The Server ID
--   (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and user
--   (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
newServiceMetadata :: UserDetails -> ServiceMetadata

-- | The Server ID (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and
--   user (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
serviceMetadata_userDetails :: Lens' ServiceMetadata UserDetails
instance GHC.Generics.Generic Amazonka.Transfer.Types.ServiceMetadata.ServiceMetadata
instance GHC.Show.Show Amazonka.Transfer.Types.ServiceMetadata.ServiceMetadata
instance GHC.Read.Read Amazonka.Transfer.Types.ServiceMetadata.ServiceMetadata
instance GHC.Classes.Eq Amazonka.Transfer.Types.ServiceMetadata.ServiceMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ServiceMetadata.ServiceMetadata
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ServiceMetadata.ServiceMetadata
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ServiceMetadata.ServiceMetadata


module Amazonka.Transfer.Types.ListedExecution

-- | Returns properties of the execution that is specified.
--   
--   <i>See:</i> <a>newListedExecution</a> smart constructor.
data ListedExecution
ListedExecution' :: Maybe ExecutionStatus -> Maybe Text -> Maybe FileLocation -> Maybe ServiceMetadata -> ListedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
[$sel:status:ListedExecution'] :: ListedExecution -> Maybe ExecutionStatus

-- | A unique identifier for the execution of a workflow.
[$sel:executionId:ListedExecution'] :: ListedExecution -> Maybe Text

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
[$sel:initialFileLocation:ListedExecution'] :: ListedExecution -> Maybe FileLocation

-- | A container object for the session details associated with a workflow.
[$sel:serviceMetadata:ListedExecution'] :: ListedExecution -> Maybe ServiceMetadata

-- | Create a value of <a>ListedExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListedExecution'</a>, <a>listedExecution_status</a> -
--   The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
--   
--   <a>$sel:executionId:ListedExecution'</a>,
--   <a>listedExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:initialFileLocation:ListedExecution'</a>,
--   <a>listedExecution_initialFileLocation</a> - A structure that
--   describes the Amazon S3 or EFS file location. This is the file
--   location when the execution begins: if the file is being copied, this
--   is the initial (as opposed to destination) file location.
--   
--   <a>$sel:serviceMetadata:ListedExecution'</a>,
--   <a>listedExecution_serviceMetadata</a> - A container object for the
--   session details associated with a workflow.
newListedExecution :: ListedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
listedExecution_status :: Lens' ListedExecution (Maybe ExecutionStatus)

-- | A unique identifier for the execution of a workflow.
listedExecution_executionId :: Lens' ListedExecution (Maybe Text)

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
listedExecution_initialFileLocation :: Lens' ListedExecution (Maybe FileLocation)

-- | A container object for the session details associated with a workflow.
listedExecution_serviceMetadata :: Lens' ListedExecution (Maybe ServiceMetadata)
instance GHC.Generics.Generic Amazonka.Transfer.Types.ListedExecution.ListedExecution
instance GHC.Show.Show Amazonka.Transfer.Types.ListedExecution.ListedExecution
instance GHC.Read.Read Amazonka.Transfer.Types.ListedExecution.ListedExecution
instance GHC.Classes.Eq Amazonka.Transfer.Types.ListedExecution.ListedExecution
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ListedExecution.ListedExecution
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ListedExecution.ListedExecution
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ListedExecution.ListedExecution


module Amazonka.Transfer.Types.WorkflowDetail

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
--   
--   <i>See:</i> <a>newWorkflowDetail</a> smart constructor.
data WorkflowDetail
WorkflowDetail' :: Text -> Text -> WorkflowDetail

-- | A unique identifier for the workflow.
[$sel:workflowId:WorkflowDetail'] :: WorkflowDetail -> Text

-- | Includes the necessary permissions for S3, EFS, and Lambda operations
--   that Transfer can assume, so that all workflow steps can operate on
--   the required resources
[$sel:executionRole:WorkflowDetail'] :: WorkflowDetail -> Text

-- | Create a value of <a>WorkflowDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:WorkflowDetail'</a>,
--   <a>workflowDetail_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:executionRole:WorkflowDetail'</a>,
--   <a>workflowDetail_executionRole</a> - Includes the necessary
--   permissions for S3, EFS, and Lambda operations that Transfer can
--   assume, so that all workflow steps can operate on the required
--   resources
newWorkflowDetail :: Text -> Text -> WorkflowDetail

-- | A unique identifier for the workflow.
workflowDetail_workflowId :: Lens' WorkflowDetail Text

-- | Includes the necessary permissions for S3, EFS, and Lambda operations
--   that Transfer can assume, so that all workflow steps can operate on
--   the required resources
workflowDetail_executionRole :: Lens' WorkflowDetail Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail
instance GHC.Show.Show Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail
instance GHC.Read.Read Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail
instance GHC.Classes.Eq Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.WorkflowDetail.WorkflowDetail


module Amazonka.Transfer.Types.WorkflowDetails

-- | Container for the <tt>WorkflowDetail</tt> data type. It is used by
--   actions that trigger a workflow to begin execution.
--   
--   <i>See:</i> <a>newWorkflowDetails</a> smart constructor.
data WorkflowDetails
WorkflowDetails' :: [WorkflowDetail] -> WorkflowDetails

-- | A trigger that starts a workflow: the workflow begins to execute after
--   a file is uploaded.
[$sel:onUpload:WorkflowDetails'] :: WorkflowDetails -> [WorkflowDetail]

-- | Create a value of <a>WorkflowDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onUpload:WorkflowDetails'</a>, <a>workflowDetails_onUpload</a>
--   - A trigger that starts a workflow: the workflow begins to execute
--   after a file is uploaded.
newWorkflowDetails :: WorkflowDetails

-- | A trigger that starts a workflow: the workflow begins to execute after
--   a file is uploaded.
workflowDetails_onUpload :: Lens' WorkflowDetails [WorkflowDetail]
instance GHC.Generics.Generic Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails
instance GHC.Show.Show Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails
instance GHC.Read.Read Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails
instance GHC.Classes.Eq Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.WorkflowDetails.WorkflowDetails


module Amazonka.Transfer.Types.DescribedServer

-- | Describes the properties of a file transfer protocol-enabled server
--   that was specified.
--   
--   <i>See:</i> <a>newDescribedServer</a> smart constructor.
data DescribedServer
DescribedServer' :: Maybe ProtocolDetails -> Maybe Text -> Maybe State -> Maybe IdentityProviderType -> Maybe (NonEmpty Protocol) -> Maybe Text -> Maybe Domain -> Maybe EndpointType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe IdentityProviderDetails -> Maybe WorkflowDetails -> Maybe (NonEmpty Tag) -> Maybe EndpointDetails -> Text -> DescribedServer

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
[$sel:protocolDetails:DescribedServer'] :: DescribedServer -> Maybe ProtocolDetails

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
[$sel:state:DescribedServer'] :: DescribedServer -> Maybe State

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
[$sel:identityProviderType:DescribedServer'] :: DescribedServer -> Maybe IdentityProviderType

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
[$sel:protocols:DescribedServer'] :: DescribedServer -> Maybe (NonEmpty Protocol)

-- | Specifies the unique system-assigned identifier for a server that you
--   instantiate.
[$sel:serverId:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the domain of the storage system that is used for file
--   transfers.
[$sel:domain:DescribedServer'] :: DescribedServer -> Maybe Domain

-- | Defines the type of endpoint that your server is connected to. If your
--   server is connected to a VPC endpoint, your server isn't accessible
--   over the public internet.
[$sel:endpointType:DescribedServer'] :: DescribedServer -> Maybe EndpointType

-- | Specifies the name of the security policy that is attached to the
--   server.
[$sel:securityPolicyName:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the Base64-encoded SHA256 fingerprint of the server's host
--   key. This value is equivalent to the output of the <tt>ssh-keygen -l
--   -f my-new-server-key</tt> command.
[$sel:hostKeyFingerprint:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
[$sel:userCount:DescribedServer'] :: DescribedServer -> Maybe Int

-- | Specifies the ARN of the Amazon Web ServicesCertificate Manager (ACM)
--   certificate. Required when <tt>Protocols</tt> is set to <tt>FTPS</tt>.
[$sel:certificate:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies information to call a customer-supplied authentication API.
--   This field is not populated when the <tt>IdentityProviderType</tt> of
--   a server is <tt>AWS_DIRECTORY_SERVICE</tt> or
--   <tt>SERVICE_MANAGED</tt>.
[$sel:identityProviderDetails:DescribedServer'] :: DescribedServer -> Maybe IdentityProviderDetails

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
[$sel:workflowDetails:DescribedServer'] :: DescribedServer -> Maybe WorkflowDetails

-- | Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
[$sel:tags:DescribedServer'] :: DescribedServer -> Maybe (NonEmpty Tag)

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
[$sel:endpointDetails:DescribedServer'] :: DescribedServer -> Maybe EndpointDetails

-- | Specifies the unique Amazon Resource Name (ARN) of the server.
[$sel:arn:DescribedServer'] :: DescribedServer -> Text

-- | Create a value of <a>DescribedServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolDetails:DescribedServer'</a>,
--   <a>describedServer_protocolDetails</a> - The protocol settings that
--   are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
--   
--   <a>$sel:loggingRole:DescribedServer'</a>,
--   <a>describedServer_loggingRole</a> - Specifies the Amazon Resource
--   Name (ARN) of the Amazon Web Services Identity and Access Management
--   (IAM) role that allows a server to turn on Amazon CloudWatch logging
--   for Amazon S3 or Amazon EFS events. When set, user activity can be
--   viewed in your CloudWatch logs.
--   
--   <a>$sel:state:DescribedServer'</a>, <a>describedServer_state</a> -
--   Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
--   
--   <a>$sel:identityProviderType:DescribedServer'</a>,
--   <a>describedServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:protocols:DescribedServer'</a>,
--   <a>describedServer_protocols</a> - Specifies the file transfer
--   protocol or protocols over which your file transfer protocol client
--   can connect to your server's endpoint. The available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   <a>$sel:serverId:DescribedServer'</a>, <a>describedServer_serverId</a>
--   - Specifies the unique system-assigned identifier for a server that
--   you instantiate.
--   
--   <a>$sel:domain:DescribedServer'</a>, <a>describedServer_domain</a> -
--   Specifies the domain of the storage system that is used for file
--   transfers.
--   
--   <a>$sel:endpointType:DescribedServer'</a>,
--   <a>describedServer_endpointType</a> - Defines the type of endpoint
--   that your server is connected to. If your server is connected to a VPC
--   endpoint, your server isn't accessible over the public internet.
--   
--   <a>$sel:securityPolicyName:DescribedServer'</a>,
--   <a>describedServer_securityPolicyName</a> - Specifies the name of the
--   security policy that is attached to the server.
--   
--   <a>$sel:hostKeyFingerprint:DescribedServer'</a>,
--   <a>describedServer_hostKeyFingerprint</a> - Specifies the
--   Base64-encoded SHA256 fingerprint of the server's host key. This value
--   is equivalent to the output of the <tt>ssh-keygen -l -f
--   my-new-server-key</tt> command.
--   
--   <a>$sel:userCount:DescribedServer'</a>,
--   <a>describedServer_userCount</a> - Specifies the number of users that
--   are assigned to a server you specified with the <tt>ServerId</tt>.
--   
--   <a>$sel:certificate:DescribedServer'</a>,
--   <a>describedServer_certificate</a> - Specifies the ARN of the Amazon
--   Web ServicesCertificate Manager (ACM) certificate. Required when
--   <tt>Protocols</tt> is set to <tt>FTPS</tt>.
--   
--   <a>$sel:identityProviderDetails:DescribedServer'</a>,
--   <a>describedServer_identityProviderDetails</a> - Specifies information
--   to call a customer-supplied authentication API. This field is not
--   populated when the <tt>IdentityProviderType</tt> of a server is
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:workflowDetails:DescribedServer'</a>,
--   <a>describedServer_workflowDetails</a> - Specifies the workflow ID for
--   the workflow to assign and the execution role used for executing the
--   workflow.
--   
--   <a>$sel:tags:DescribedServer'</a>, <a>describedServer_tags</a> -
--   Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
--   
--   <a>$sel:endpointDetails:DescribedServer'</a>,
--   <a>describedServer_endpointDetails</a> - The virtual private cloud
--   (VPC) endpoint settings that are configured for your server. When you
--   host your endpoint within your VPC, you can make it accessible only to
--   resources within your VPC, or you can attach Elastic IP addresses and
--   make it accessible to clients over the internet. Your VPC's default
--   security groups are automatically assigned to your endpoint.
--   
--   <a>$sel:arn:DescribedServer'</a>, <a>describedServer_arn</a> -
--   Specifies the unique Amazon Resource Name (ARN) of the server.
newDescribedServer :: Text -> DescribedServer

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
describedServer_protocolDetails :: Lens' DescribedServer (Maybe ProtocolDetails)

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
describedServer_loggingRole :: Lens' DescribedServer (Maybe Text)

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
describedServer_state :: Lens' DescribedServer (Maybe State)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
describedServer_identityProviderType :: Lens' DescribedServer (Maybe IdentityProviderType)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
describedServer_protocols :: Lens' DescribedServer (Maybe (NonEmpty Protocol))

-- | Specifies the unique system-assigned identifier for a server that you
--   instantiate.
describedServer_serverId :: Lens' DescribedServer (Maybe Text)

-- | Specifies the domain of the storage system that is used for file
--   transfers.
describedServer_domain :: Lens' DescribedServer (Maybe Domain)

-- | Defines the type of endpoint that your server is connected to. If your
--   server is connected to a VPC endpoint, your server isn't accessible
--   over the public internet.
describedServer_endpointType :: Lens' DescribedServer (Maybe EndpointType)

-- | Specifies the name of the security policy that is attached to the
--   server.
describedServer_securityPolicyName :: Lens' DescribedServer (Maybe Text)

-- | Specifies the Base64-encoded SHA256 fingerprint of the server's host
--   key. This value is equivalent to the output of the <tt>ssh-keygen -l
--   -f my-new-server-key</tt> command.
describedServer_hostKeyFingerprint :: Lens' DescribedServer (Maybe Text)

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
describedServer_userCount :: Lens' DescribedServer (Maybe Int)

-- | Specifies the ARN of the Amazon Web ServicesCertificate Manager (ACM)
--   certificate. Required when <tt>Protocols</tt> is set to <tt>FTPS</tt>.
describedServer_certificate :: Lens' DescribedServer (Maybe Text)

-- | Specifies information to call a customer-supplied authentication API.
--   This field is not populated when the <tt>IdentityProviderType</tt> of
--   a server is <tt>AWS_DIRECTORY_SERVICE</tt> or
--   <tt>SERVICE_MANAGED</tt>.
describedServer_identityProviderDetails :: Lens' DescribedServer (Maybe IdentityProviderDetails)

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
describedServer_workflowDetails :: Lens' DescribedServer (Maybe WorkflowDetails)

-- | Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
describedServer_tags :: Lens' DescribedServer (Maybe (NonEmpty Tag))

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
describedServer_endpointDetails :: Lens' DescribedServer (Maybe EndpointDetails)

-- | Specifies the unique Amazon Resource Name (ARN) of the server.
describedServer_arn :: Lens' DescribedServer Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.DescribedServer.DescribedServer
instance GHC.Show.Show Amazonka.Transfer.Types.DescribedServer.DescribedServer
instance GHC.Read.Read Amazonka.Transfer.Types.DescribedServer.DescribedServer
instance GHC.Classes.Eq Amazonka.Transfer.Types.DescribedServer.DescribedServer
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.DescribedServer.DescribedServer
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.DescribedServer.DescribedServer
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.DescribedServer.DescribedServer


module Amazonka.Transfer.Types.WorkflowStepType
newtype WorkflowStepType
WorkflowStepType' :: Text -> WorkflowStepType
[fromWorkflowStepType] :: WorkflowStepType -> Text
pattern WorkflowStepType_COPY :: WorkflowStepType
pattern WorkflowStepType_CUSTOM :: WorkflowStepType
pattern WorkflowStepType_DELETE :: WorkflowStepType
pattern WorkflowStepType_TAG :: WorkflowStepType
instance Amazonka.Data.XML.ToXML Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Amazonka.Data.XML.FromXML Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Amazonka.Data.Headers.ToHeader Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Amazonka.Data.Log.ToLog Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Amazonka.Data.Text.ToText Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Amazonka.Data.Text.FromText Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance GHC.Generics.Generic Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance GHC.Classes.Ord Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance GHC.Classes.Eq Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance GHC.Read.Read Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType
instance GHC.Show.Show Amazonka.Transfer.Types.WorkflowStepType.WorkflowStepType


module Amazonka.Transfer.Types.WorkflowStep

-- | The basic building block of a workflow.
--   
--   <i>See:</i> <a>newWorkflowStep</a> smart constructor.
data WorkflowStep
WorkflowStep' :: Maybe TagStepDetails -> Maybe DeleteStepDetails -> Maybe CopyStepDetails -> Maybe WorkflowStepType -> Maybe CustomStepDetails -> WorkflowStep

-- | Details for a step that creates one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
[$sel:tagStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe TagStepDetails

-- | Details for a step that deletes the file.
[$sel:deleteStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe DeleteStepDetails

-- | Details for a step that performs a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
[$sel:copyStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe CopyStepDetails

-- | Currently, the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
[$sel:type':WorkflowStep'] :: WorkflowStep -> Maybe WorkflowStepType

-- | Details for a step that invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
[$sel:customStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe CustomStepDetails

-- | Create a value of <a>WorkflowStep</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_tagStepDetails</a> - Details for a step that creates
--   one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
--   
--   <a>$sel:deleteStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_deleteStepDetails</a> - Details for a step that
--   deletes the file.
--   
--   <a>$sel:copyStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_copyStepDetails</a> - Details for a step that performs
--   a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
--   
--   <a>$sel:type':WorkflowStep'</a>, <a>workflowStep_type</a> - Currently,
--   the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   <a>$sel:customStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_customStepDetails</a> - Details for a step that
--   invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
newWorkflowStep :: WorkflowStep

-- | Details for a step that creates one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
workflowStep_tagStepDetails :: Lens' WorkflowStep (Maybe TagStepDetails)

-- | Details for a step that deletes the file.
workflowStep_deleteStepDetails :: Lens' WorkflowStep (Maybe DeleteStepDetails)

-- | Details for a step that performs a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
workflowStep_copyStepDetails :: Lens' WorkflowStep (Maybe CopyStepDetails)

-- | Currently, the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
workflowStep_type :: Lens' WorkflowStep (Maybe WorkflowStepType)

-- | Details for a step that invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
workflowStep_customStepDetails :: Lens' WorkflowStep (Maybe CustomStepDetails)
instance GHC.Generics.Generic Amazonka.Transfer.Types.WorkflowStep.WorkflowStep
instance GHC.Show.Show Amazonka.Transfer.Types.WorkflowStep.WorkflowStep
instance GHC.Read.Read Amazonka.Transfer.Types.WorkflowStep.WorkflowStep
instance GHC.Classes.Eq Amazonka.Transfer.Types.WorkflowStep.WorkflowStep
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.WorkflowStep.WorkflowStep
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.WorkflowStep.WorkflowStep
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.WorkflowStep.WorkflowStep
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.Types.WorkflowStep.WorkflowStep


module Amazonka.Transfer.Types.DescribedWorkflow

-- | Describes the properties of the specified workflow
--   
--   <i>See:</i> <a>newDescribedWorkflow</a> smart constructor.
data DescribedWorkflow
DescribedWorkflow' :: Maybe [WorkflowStep] -> Maybe [WorkflowStep] -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> DescribedWorkflow

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
[$sel:onExceptionSteps:DescribedWorkflow'] :: DescribedWorkflow -> Maybe [WorkflowStep]

-- | Specifies the details for the steps that are in the specified
--   workflow.
[$sel:steps:DescribedWorkflow'] :: DescribedWorkflow -> Maybe [WorkflowStep]

-- | A unique identifier for the workflow.
[$sel:workflowId:DescribedWorkflow'] :: DescribedWorkflow -> Maybe Text

-- | Specifies the text description for the workflow.
[$sel:description:DescribedWorkflow'] :: DescribedWorkflow -> Maybe Text

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
[$sel:tags:DescribedWorkflow'] :: DescribedWorkflow -> Maybe (NonEmpty Tag)

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
[$sel:arn:DescribedWorkflow'] :: DescribedWorkflow -> Text

-- | Create a value of <a>DescribedWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:DescribedWorkflow'</a>,
--   <a>describedWorkflow_onExceptionSteps</a> - Specifies the steps
--   (actions) to take if errors are encountered during execution of the
--   workflow.
--   
--   <a>$sel:steps:DescribedWorkflow'</a>, <a>describedWorkflow_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
--   
--   <a>$sel:workflowId:DescribedWorkflow'</a>,
--   <a>describedWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:description:DescribedWorkflow'</a>,
--   <a>describedWorkflow_description</a> - Specifies the text description
--   for the workflow.
--   
--   <a>$sel:tags:DescribedWorkflow'</a>, <a>describedWorkflow_tags</a> -
--   Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
--   
--   <a>$sel:arn:DescribedWorkflow'</a>, <a>describedWorkflow_arn</a> -
--   Specifies the unique Amazon Resource Name (ARN) for the workflow.
newDescribedWorkflow :: Text -> DescribedWorkflow

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
describedWorkflow_onExceptionSteps :: Lens' DescribedWorkflow (Maybe [WorkflowStep])

-- | Specifies the details for the steps that are in the specified
--   workflow.
describedWorkflow_steps :: Lens' DescribedWorkflow (Maybe [WorkflowStep])

-- | A unique identifier for the workflow.
describedWorkflow_workflowId :: Lens' DescribedWorkflow (Maybe Text)

-- | Specifies the text description for the workflow.
describedWorkflow_description :: Lens' DescribedWorkflow (Maybe Text)

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
describedWorkflow_tags :: Lens' DescribedWorkflow (Maybe (NonEmpty Tag))

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
describedWorkflow_arn :: Lens' DescribedWorkflow Text
instance GHC.Generics.Generic Amazonka.Transfer.Types.DescribedWorkflow.DescribedWorkflow
instance GHC.Show.Show Amazonka.Transfer.Types.DescribedWorkflow.DescribedWorkflow
instance GHC.Read.Read Amazonka.Transfer.Types.DescribedWorkflow.DescribedWorkflow
instance GHC.Classes.Eq Amazonka.Transfer.Types.DescribedWorkflow.DescribedWorkflow
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.DescribedWorkflow.DescribedWorkflow
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.DescribedWorkflow.DescribedWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.DescribedWorkflow.DescribedWorkflow


module Amazonka.Transfer.Types.ExecutionStepResult

-- | Specifies the following details for the step: error (if any), outputs
--   (if any), and the step type.
--   
--   <i>See:</i> <a>newExecutionStepResult</a> smart constructor.
data ExecutionStepResult
ExecutionStepResult' :: Maybe WorkflowStepType -> Maybe ExecutionError -> Maybe Text -> ExecutionStepResult

-- | One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
[$sel:stepType:ExecutionStepResult'] :: ExecutionStepResult -> Maybe WorkflowStepType

-- | Specifies the details for an error, if it occurred during execution of
--   the specified workfow step.
[$sel:error:ExecutionStepResult'] :: ExecutionStepResult -> Maybe ExecutionError

-- | The values for the key/value pair applied as a tag to the file. Only
--   applicable if the step type is <tt>TAG</tt>.
[$sel:outputs:ExecutionStepResult'] :: ExecutionStepResult -> Maybe Text

-- | Create a value of <a>ExecutionStepResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepType:ExecutionStepResult'</a>,
--   <a>executionStepResult_stepType</a> - One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   <a>$sel:error:ExecutionStepResult'</a>,
--   <a>executionStepResult_error</a> - Specifies the details for an error,
--   if it occurred during execution of the specified workfow step.
--   
--   <a>$sel:outputs:ExecutionStepResult'</a>,
--   <a>executionStepResult_outputs</a> - The values for the key/value pair
--   applied as a tag to the file. Only applicable if the step type is
--   <tt>TAG</tt>.
newExecutionStepResult :: ExecutionStepResult

-- | One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
executionStepResult_stepType :: Lens' ExecutionStepResult (Maybe WorkflowStepType)

-- | Specifies the details for an error, if it occurred during execution of
--   the specified workfow step.
executionStepResult_error :: Lens' ExecutionStepResult (Maybe ExecutionError)

-- | The values for the key/value pair applied as a tag to the file. Only
--   applicable if the step type is <tt>TAG</tt>.
executionStepResult_outputs :: Lens' ExecutionStepResult (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.ExecutionStepResult.ExecutionStepResult
instance GHC.Show.Show Amazonka.Transfer.Types.ExecutionStepResult.ExecutionStepResult
instance GHC.Read.Read Amazonka.Transfer.Types.ExecutionStepResult.ExecutionStepResult
instance GHC.Classes.Eq Amazonka.Transfer.Types.ExecutionStepResult.ExecutionStepResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ExecutionStepResult.ExecutionStepResult
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ExecutionStepResult.ExecutionStepResult
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ExecutionStepResult.ExecutionStepResult


module Amazonka.Transfer.Types.ExecutionResults

-- | Specifies the steps in the workflow, as well as the steps to execute
--   in case of any errors during workflow execution.
--   
--   <i>See:</i> <a>newExecutionResults</a> smart constructor.
data ExecutionResults
ExecutionResults' :: Maybe (NonEmpty ExecutionStepResult) -> Maybe (NonEmpty ExecutionStepResult) -> ExecutionResults

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
[$sel:onExceptionSteps:ExecutionResults'] :: ExecutionResults -> Maybe (NonEmpty ExecutionStepResult)

-- | Specifies the details for the steps that are in the specified
--   workflow.
[$sel:steps:ExecutionResults'] :: ExecutionResults -> Maybe (NonEmpty ExecutionStepResult)

-- | Create a value of <a>ExecutionResults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:ExecutionResults'</a>,
--   <a>executionResults_onExceptionSteps</a> - Specifies the steps
--   (actions) to take if errors are encountered during execution of the
--   workflow.
--   
--   <a>$sel:steps:ExecutionResults'</a>, <a>executionResults_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
newExecutionResults :: ExecutionResults

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
executionResults_onExceptionSteps :: Lens' ExecutionResults (Maybe (NonEmpty ExecutionStepResult))

-- | Specifies the details for the steps that are in the specified
--   workflow.
executionResults_steps :: Lens' ExecutionResults (Maybe (NonEmpty ExecutionStepResult))
instance GHC.Generics.Generic Amazonka.Transfer.Types.ExecutionResults.ExecutionResults
instance GHC.Show.Show Amazonka.Transfer.Types.ExecutionResults.ExecutionResults
instance GHC.Read.Read Amazonka.Transfer.Types.ExecutionResults.ExecutionResults
instance GHC.Classes.Eq Amazonka.Transfer.Types.ExecutionResults.ExecutionResults
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.ExecutionResults.ExecutionResults
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.ExecutionResults.ExecutionResults
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.ExecutionResults.ExecutionResults


module Amazonka.Transfer.Types.DescribedExecution

-- | The details for an execution object.
--   
--   <i>See:</i> <a>newDescribedExecution</a> smart constructor.
data DescribedExecution
DescribedExecution' :: Maybe ExecutionStatus -> Maybe Text -> Maybe ExecutionResults -> Maybe FileLocation -> Maybe PosixProfile -> Maybe ServiceMetadata -> Maybe LoggingConfiguration -> Maybe Text -> DescribedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
[$sel:status:DescribedExecution'] :: DescribedExecution -> Maybe ExecutionStatus

-- | A unique identifier for the execution of a workflow.
[$sel:executionId:DescribedExecution'] :: DescribedExecution -> Maybe Text

-- | A structure that describes the execution results. This includes a list
--   of the steps along with the details of each step, error type and
--   message (if any), and the <tt>OnExceptionSteps</tt> structure.
[$sel:results:DescribedExecution'] :: DescribedExecution -> Maybe ExecutionResults

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
[$sel:initialFileLocation:DescribedExecution'] :: DescribedExecution -> Maybe FileLocation
[$sel:posixProfile:DescribedExecution'] :: DescribedExecution -> Maybe PosixProfile

-- | A container object for the session details associated with a workflow.
[$sel:serviceMetadata:DescribedExecution'] :: DescribedExecution -> Maybe ServiceMetadata

-- | The IAM logging role associated with the execution.
[$sel:loggingConfiguration:DescribedExecution'] :: DescribedExecution -> Maybe LoggingConfiguration

-- | The IAM role associated with the execution.
[$sel:executionRole:DescribedExecution'] :: DescribedExecution -> Maybe Text

-- | Create a value of <a>DescribedExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribedExecution'</a>,
--   <a>describedExecution_status</a> - The status is one of the execution.
--   Can be in progress, completed, exception encountered, or handling the
--   exception.
--   
--   <a>$sel:executionId:DescribedExecution'</a>,
--   <a>describedExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:results:DescribedExecution'</a>,
--   <a>describedExecution_results</a> - A structure that describes the
--   execution results. This includes a list of the steps along with the
--   details of each step, error type and message (if any), and the
--   <tt>OnExceptionSteps</tt> structure.
--   
--   <a>$sel:initialFileLocation:DescribedExecution'</a>,
--   <a>describedExecution_initialFileLocation</a> - A structure that
--   describes the Amazon S3 or EFS file location. This is the file
--   location when the execution begins: if the file is being copied, this
--   is the initial (as opposed to destination) file location.
--   
--   <a>$sel:posixProfile:DescribedExecution'</a>,
--   <a>describedExecution_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:serviceMetadata:DescribedExecution'</a>,
--   <a>describedExecution_serviceMetadata</a> - A container object for the
--   session details associated with a workflow.
--   
--   <a>$sel:loggingConfiguration:DescribedExecution'</a>,
--   <a>describedExecution_loggingConfiguration</a> - The IAM logging role
--   associated with the execution.
--   
--   <a>$sel:executionRole:DescribedExecution'</a>,
--   <a>describedExecution_executionRole</a> - The IAM role associated with
--   the execution.
newDescribedExecution :: DescribedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
describedExecution_status :: Lens' DescribedExecution (Maybe ExecutionStatus)

-- | A unique identifier for the execution of a workflow.
describedExecution_executionId :: Lens' DescribedExecution (Maybe Text)

-- | A structure that describes the execution results. This includes a list
--   of the steps along with the details of each step, error type and
--   message (if any), and the <tt>OnExceptionSteps</tt> structure.
describedExecution_results :: Lens' DescribedExecution (Maybe ExecutionResults)

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
describedExecution_initialFileLocation :: Lens' DescribedExecution (Maybe FileLocation)

-- | Undocumented member.
describedExecution_posixProfile :: Lens' DescribedExecution (Maybe PosixProfile)

-- | A container object for the session details associated with a workflow.
describedExecution_serviceMetadata :: Lens' DescribedExecution (Maybe ServiceMetadata)

-- | The IAM logging role associated with the execution.
describedExecution_loggingConfiguration :: Lens' DescribedExecution (Maybe LoggingConfiguration)

-- | The IAM role associated with the execution.
describedExecution_executionRole :: Lens' DescribedExecution (Maybe Text)
instance GHC.Generics.Generic Amazonka.Transfer.Types.DescribedExecution.DescribedExecution
instance GHC.Show.Show Amazonka.Transfer.Types.DescribedExecution.DescribedExecution
instance GHC.Read.Read Amazonka.Transfer.Types.DescribedExecution.DescribedExecution
instance GHC.Classes.Eq Amazonka.Transfer.Types.DescribedExecution.DescribedExecution
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Transfer.Types.DescribedExecution.DescribedExecution
instance Data.Hashable.Class.Hashable Amazonka.Transfer.Types.DescribedExecution.DescribedExecution
instance Control.DeepSeq.NFData Amazonka.Transfer.Types.DescribedExecution.DescribedExecution


module Amazonka.Transfer.Types

-- | API version <tt>2018-11-05</tt> of the Amazon Transfer Family SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the client submits a malformed request.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the <tt>UpdateServer</tt> is called for
--   a file transfer protocol-enabled server that has VPC as the endpoint
--   type and the server's <tt>VpcEndpointID</tt> is not in the available
--   state.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
--   
--   HTTP Status Code: 400
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>NextToken</tt> parameter that was passed is invalid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when an error occurs in the Amazon Web
--   ServicesTransfer Family service.
_InternalServiceError :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource does not exist.
_ResourceExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed because the Amazon Web ServicesTransfer Family
--   service is not available.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a resource is not found by the Amazon
--   Web ServicesTransfer Family service.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype CustomStepStatus
CustomStepStatus' :: Text -> CustomStepStatus
[fromCustomStepStatus] :: CustomStepStatus -> Text
pattern CustomStepStatus_FAILURE :: CustomStepStatus
pattern CustomStepStatus_SUCCESS :: CustomStepStatus
newtype Domain
Domain' :: Text -> Domain
[fromDomain] :: Domain -> Text
pattern Domain_EFS :: Domain
pattern Domain_S3 :: Domain
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_PUBLIC :: EndpointType
pattern EndpointType_VPC :: EndpointType
pattern EndpointType_VPC_ENDPOINT :: EndpointType
newtype ExecutionErrorType
ExecutionErrorType' :: Text -> ExecutionErrorType
[fromExecutionErrorType] :: ExecutionErrorType -> Text
pattern ExecutionErrorType_PERMISSION_DENIED :: ExecutionErrorType
newtype ExecutionStatus
ExecutionStatus' :: Text -> ExecutionStatus
[fromExecutionStatus] :: ExecutionStatus -> Text
pattern ExecutionStatus_COMPLETED :: ExecutionStatus
pattern ExecutionStatus_EXCEPTION :: ExecutionStatus
pattern ExecutionStatus_HANDLING_EXCEPTION :: ExecutionStatus
pattern ExecutionStatus_IN_PROGRESS :: ExecutionStatus
newtype HomeDirectoryType
HomeDirectoryType' :: Text -> HomeDirectoryType
[fromHomeDirectoryType] :: HomeDirectoryType -> Text
pattern HomeDirectoryType_LOGICAL :: HomeDirectoryType
pattern HomeDirectoryType_PATH :: HomeDirectoryType

-- | Returns information related to the type of user authentication that is
--   in use for a file transfer protocol-enabled server's users. For
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>SERVICE_MANAGED</tt>
--   authentication, the Secure Shell (SSH) public keys are stored with a
--   user on the server instance. For <tt>API_GATEWAY</tt> authentication,
--   your custom authentication method is implemented by using an API call.
--   The server can have only one method of authentication.
newtype IdentityProviderType
IdentityProviderType' :: Text -> IdentityProviderType
[fromIdentityProviderType] :: IdentityProviderType -> Text
pattern IdentityProviderType_API_GATEWAY :: IdentityProviderType
pattern IdentityProviderType_AWS_DIRECTORY_SERVICE :: IdentityProviderType
pattern IdentityProviderType_SERVICE_MANAGED :: IdentityProviderType
newtype OverwriteExisting
OverwriteExisting' :: Text -> OverwriteExisting
[fromOverwriteExisting] :: OverwriteExisting -> Text
pattern OverwriteExisting_FALSE :: OverwriteExisting
pattern OverwriteExisting_TRUE :: OverwriteExisting
newtype Protocol
Protocol' :: Text -> Protocol
[fromProtocol] :: Protocol -> Text
pattern Protocol_FTP :: Protocol
pattern Protocol_FTPS :: Protocol
pattern Protocol_SFTP :: Protocol

-- | Describes the condition of a file transfer protocol-enabled server
--   with respect to its ability to perform file operations. There are six
--   possible states: <tt>OFFLINE</tt>, <tt>ONLINE</tt>, <tt>STARTING</tt>,
--   <tt>STOPPING</tt>, <tt>START_FAILED</tt>, and <tt>STOP_FAILED</tt>.
--   
--   <tt>OFFLINE</tt> indicates that the server exists, but that it is not
--   available for file operations. <tt>ONLINE</tt> indicates that the
--   server is available to perform file operations. <tt>STARTING</tt>
--   indicates that the server's was instantiated, but the server is not
--   yet available to perform file operations. Under normal conditions, it
--   can take a couple of minutes for the server to be completely
--   operational. Both <tt>START_FAILED</tt> and <tt>STOP_FAILED</tt> are
--   error conditions.
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_OFFLINE :: State
pattern State_ONLINE :: State
pattern State_STARTING :: State
pattern State_START_FAILED :: State
pattern State_STOPPING :: State
pattern State_STOP_FAILED :: State
newtype WorkflowStepType
WorkflowStepType' :: Text -> WorkflowStepType
[fromWorkflowStepType] :: WorkflowStepType -> Text
pattern WorkflowStepType_COPY :: WorkflowStepType
pattern WorkflowStepType_CUSTOM :: WorkflowStepType
pattern WorkflowStepType_DELETE :: WorkflowStepType
pattern WorkflowStepType_TAG :: WorkflowStepType

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   <i>See:</i> <a>newCopyStepDetails</a> smart constructor.
data CopyStepDetails
CopyStepDetails' :: Maybe InputFileLocation -> Maybe OverwriteExisting -> Maybe Text -> CopyStepDetails
[$sel:destinationFileLocation:CopyStepDetails'] :: CopyStepDetails -> Maybe InputFileLocation

-- | A flag that indicates whether or not to overwrite an existing file of
--   the same name. The default is <tt>FALSE</tt>.
[$sel:overwriteExisting:CopyStepDetails'] :: CopyStepDetails -> Maybe OverwriteExisting

-- | The name of the step, used as an identifier.
[$sel:name:CopyStepDetails'] :: CopyStepDetails -> Maybe Text

-- | Create a value of <a>CopyStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationFileLocation:CopyStepDetails'</a>,
--   <a>copyStepDetails_destinationFileLocation</a> - Undocumented member.
--   
--   <a>$sel:overwriteExisting:CopyStepDetails'</a>,
--   <a>copyStepDetails_overwriteExisting</a> - A flag that indicates
--   whether or not to overwrite an existing file of the same name. The
--   default is <tt>FALSE</tt>.
--   
--   <a>$sel:name:CopyStepDetails'</a>, <a>copyStepDetails_name</a> - The
--   name of the step, used as an identifier.
newCopyStepDetails :: CopyStepDetails

-- | Undocumented member.
copyStepDetails_destinationFileLocation :: Lens' CopyStepDetails (Maybe InputFileLocation)

-- | A flag that indicates whether or not to overwrite an existing file of
--   the same name. The default is <tt>FALSE</tt>.
copyStepDetails_overwriteExisting :: Lens' CopyStepDetails (Maybe OverwriteExisting)

-- | The name of the step, used as an identifier.
copyStepDetails_name :: Lens' CopyStepDetails (Maybe Text)

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   <i>See:</i> <a>newCustomStepDetails</a> smart constructor.
data CustomStepDetails
CustomStepDetails' :: Maybe Text -> Maybe Natural -> Maybe Text -> CustomStepDetails

-- | The name of the step, used as an identifier.
[$sel:name:CustomStepDetails'] :: CustomStepDetails -> Maybe Text

-- | Timeout, in seconds, for the step.
[$sel:timeoutSeconds:CustomStepDetails'] :: CustomStepDetails -> Maybe Natural

-- | The ARN for the lambda function that is being called.
[$sel:target:CustomStepDetails'] :: CustomStepDetails -> Maybe Text

-- | Create a value of <a>CustomStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CustomStepDetails'</a>, <a>customStepDetails_name</a> -
--   The name of the step, used as an identifier.
--   
--   <a>$sel:timeoutSeconds:CustomStepDetails'</a>,
--   <a>customStepDetails_timeoutSeconds</a> - Timeout, in seconds, for the
--   step.
--   
--   <a>$sel:target:CustomStepDetails'</a>, <a>customStepDetails_target</a>
--   - The ARN for the lambda function that is being called.
newCustomStepDetails :: CustomStepDetails

-- | The name of the step, used as an identifier.
customStepDetails_name :: Lens' CustomStepDetails (Maybe Text)

-- | Timeout, in seconds, for the step.
customStepDetails_timeoutSeconds :: Lens' CustomStepDetails (Maybe Natural)

-- | The ARN for the lambda function that is being called.
customStepDetails_target :: Lens' CustomStepDetails (Maybe Text)

-- | The name of the step, used to identify the delete step.
--   
--   <i>See:</i> <a>newDeleteStepDetails</a> smart constructor.
data DeleteStepDetails
DeleteStepDetails' :: Maybe Text -> DeleteStepDetails

-- | The name of the step, used as an identifier.
[$sel:name:DeleteStepDetails'] :: DeleteStepDetails -> Maybe Text

-- | Create a value of <a>DeleteStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteStepDetails'</a>, <a>deleteStepDetails_name</a> -
--   The name of the step, used as an identifier.
newDeleteStepDetails :: DeleteStepDetails

-- | The name of the step, used as an identifier.
deleteStepDetails_name :: Lens' DeleteStepDetails (Maybe Text)

-- | Describes the properties of the access that was specified.
--   
--   <i>See:</i> <a>newDescribedAccess</a> smart constructor.
data DescribedAccess
DescribedAccess' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DescribedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:DescribedAccess'] :: DescribedAccess -> Maybe HomeDirectoryType
[$sel:posixProfile:DescribedAccess'] :: DescribedAccess -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
[$sel:homeDirectoryMappings:DescribedAccess'] :: DescribedAccess -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
[$sel:policy:DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:DescribedAccess'] :: DescribedAccess -> Maybe Text

-- | Create a value of <a>DescribedAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectoryType</a> - The type of landing
--   directory (folder) you want your users' home directory to be when they
--   log into the server. If you set it to <tt>PATH</tt>, the user will see
--   the absolute Amazon S3 bucket or EFS paths as is in their file
--   transfer protocol clients. If you set it <tt>LOGICAL</tt>, you need to
--   provide mappings in the <tt>HomeDirectoryMappings</tt> for how you
--   want to make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:DescribedAccess'</a>,
--   <a>describedAccess_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:homeDirectoryMappings:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectoryMappings</a> - Logical directory
--   mappings that specify what Amazon S3 or Amazon EFS paths and keys
--   should be visible to your user and how you want to make them visible.
--   You must specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
--   
--   <a>$sel:role':DescribedAccess'</a>, <a>describedAccess_role</a> -
--   Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:DescribedAccess'</a>, <a>describedAccess_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   <a>$sel:externalId:DescribedAccess'</a>,
--   <a>describedAccess_externalId</a> - A unique identifier that is
--   required to identify specific groups within your directory. The users
--   of the group that you associate have access to your Amazon S3 or
--   Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family. If you know the group name, you can view the
--   SID values by running the following command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:homeDirectory:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectory</a> - The landing directory (folder)
--   for a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
newDescribedAccess :: DescribedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
describedAccess_homeDirectoryType :: Lens' DescribedAccess (Maybe HomeDirectoryType)

-- | Undocumented member.
describedAccess_posixProfile :: Lens' DescribedAccess (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
describedAccess_homeDirectoryMappings :: Lens' DescribedAccess (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
describedAccess_role :: Lens' DescribedAccess (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
describedAccess_policy :: Lens' DescribedAccess (Maybe Text)

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
describedAccess_externalId :: Lens' DescribedAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
describedAccess_homeDirectory :: Lens' DescribedAccess (Maybe Text)

-- | The details for an execution object.
--   
--   <i>See:</i> <a>newDescribedExecution</a> smart constructor.
data DescribedExecution
DescribedExecution' :: Maybe ExecutionStatus -> Maybe Text -> Maybe ExecutionResults -> Maybe FileLocation -> Maybe PosixProfile -> Maybe ServiceMetadata -> Maybe LoggingConfiguration -> Maybe Text -> DescribedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
[$sel:status:DescribedExecution'] :: DescribedExecution -> Maybe ExecutionStatus

-- | A unique identifier for the execution of a workflow.
[$sel:executionId:DescribedExecution'] :: DescribedExecution -> Maybe Text

-- | A structure that describes the execution results. This includes a list
--   of the steps along with the details of each step, error type and
--   message (if any), and the <tt>OnExceptionSteps</tt> structure.
[$sel:results:DescribedExecution'] :: DescribedExecution -> Maybe ExecutionResults

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
[$sel:initialFileLocation:DescribedExecution'] :: DescribedExecution -> Maybe FileLocation
[$sel:posixProfile:DescribedExecution'] :: DescribedExecution -> Maybe PosixProfile

-- | A container object for the session details associated with a workflow.
[$sel:serviceMetadata:DescribedExecution'] :: DescribedExecution -> Maybe ServiceMetadata

-- | The IAM logging role associated with the execution.
[$sel:loggingConfiguration:DescribedExecution'] :: DescribedExecution -> Maybe LoggingConfiguration

-- | The IAM role associated with the execution.
[$sel:executionRole:DescribedExecution'] :: DescribedExecution -> Maybe Text

-- | Create a value of <a>DescribedExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribedExecution'</a>,
--   <a>describedExecution_status</a> - The status is one of the execution.
--   Can be in progress, completed, exception encountered, or handling the
--   exception.
--   
--   <a>$sel:executionId:DescribedExecution'</a>,
--   <a>describedExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:results:DescribedExecution'</a>,
--   <a>describedExecution_results</a> - A structure that describes the
--   execution results. This includes a list of the steps along with the
--   details of each step, error type and message (if any), and the
--   <tt>OnExceptionSteps</tt> structure.
--   
--   <a>$sel:initialFileLocation:DescribedExecution'</a>,
--   <a>describedExecution_initialFileLocation</a> - A structure that
--   describes the Amazon S3 or EFS file location. This is the file
--   location when the execution begins: if the file is being copied, this
--   is the initial (as opposed to destination) file location.
--   
--   <a>$sel:posixProfile:DescribedExecution'</a>,
--   <a>describedExecution_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:serviceMetadata:DescribedExecution'</a>,
--   <a>describedExecution_serviceMetadata</a> - A container object for the
--   session details associated with a workflow.
--   
--   <a>$sel:loggingConfiguration:DescribedExecution'</a>,
--   <a>describedExecution_loggingConfiguration</a> - The IAM logging role
--   associated with the execution.
--   
--   <a>$sel:executionRole:DescribedExecution'</a>,
--   <a>describedExecution_executionRole</a> - The IAM role associated with
--   the execution.
newDescribedExecution :: DescribedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
describedExecution_status :: Lens' DescribedExecution (Maybe ExecutionStatus)

-- | A unique identifier for the execution of a workflow.
describedExecution_executionId :: Lens' DescribedExecution (Maybe Text)

-- | A structure that describes the execution results. This includes a list
--   of the steps along with the details of each step, error type and
--   message (if any), and the <tt>OnExceptionSteps</tt> structure.
describedExecution_results :: Lens' DescribedExecution (Maybe ExecutionResults)

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
describedExecution_initialFileLocation :: Lens' DescribedExecution (Maybe FileLocation)

-- | Undocumented member.
describedExecution_posixProfile :: Lens' DescribedExecution (Maybe PosixProfile)

-- | A container object for the session details associated with a workflow.
describedExecution_serviceMetadata :: Lens' DescribedExecution (Maybe ServiceMetadata)

-- | The IAM logging role associated with the execution.
describedExecution_loggingConfiguration :: Lens' DescribedExecution (Maybe LoggingConfiguration)

-- | The IAM role associated with the execution.
describedExecution_executionRole :: Lens' DescribedExecution (Maybe Text)

-- | Describes the properties of a security policy that was specified. For
--   more information about security policies, see <a>Working with security
--   policies</a>.
--   
--   <i>See:</i> <a>newDescribedSecurityPolicy</a> smart constructor.
data DescribedSecurityPolicy
DescribedSecurityPolicy' :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Text -> DescribedSecurityPolicy

-- | Specifies whether this policy enables Federal Information Processing
--   Standards (FIPS).
[$sel:fips:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe Bool

-- | Specifies the enabled SSH message authentication code (MAC) encryption
--   algorithms in the security policy that is attached to the server.
[$sel:sshMacs:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the enabled SSH key exchange (KEX) encryption algorithms in
--   the security policy that is attached to the server.
[$sel:sshKexs:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the enabled Transport Layer Security (TLS) cipher encryption
--   algorithms in the security policy that is attached to the server.
[$sel:tlsCiphers:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the enabled Secure Shell (SSH) cipher encryption algorithms
--   in the security policy that is attached to the server.
[$sel:sshCiphers:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Maybe [Text]

-- | Specifies the name of the security policy that is attached to the
--   server.
[$sel:securityPolicyName:DescribedSecurityPolicy'] :: DescribedSecurityPolicy -> Text

-- | Create a value of <a>DescribedSecurityPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fips:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_fips</a> - Specifies whether this policy
--   enables Federal Information Processing Standards (FIPS).
--   
--   <a>$sel:sshMacs:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshMacs</a> - Specifies the enabled SSH
--   message authentication code (MAC) encryption algorithms in the
--   security policy that is attached to the server.
--   
--   <a>$sel:sshKexs:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshKexs</a> - Specifies the enabled SSH key
--   exchange (KEX) encryption algorithms in the security policy that is
--   attached to the server.
--   
--   <a>$sel:tlsCiphers:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_tlsCiphers</a> - Specifies the enabled
--   Transport Layer Security (TLS) cipher encryption algorithms in the
--   security policy that is attached to the server.
--   
--   <a>$sel:sshCiphers:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshCiphers</a> - Specifies the enabled
--   Secure Shell (SSH) cipher encryption algorithms in the security policy
--   that is attached to the server.
--   
--   <a>$sel:securityPolicyName:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_securityPolicyName</a> - Specifies the name
--   of the security policy that is attached to the server.
newDescribedSecurityPolicy :: Text -> DescribedSecurityPolicy

-- | Specifies whether this policy enables Federal Information Processing
--   Standards (FIPS).
describedSecurityPolicy_fips :: Lens' DescribedSecurityPolicy (Maybe Bool)

-- | Specifies the enabled SSH message authentication code (MAC) encryption
--   algorithms in the security policy that is attached to the server.
describedSecurityPolicy_sshMacs :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled SSH key exchange (KEX) encryption algorithms in
--   the security policy that is attached to the server.
describedSecurityPolicy_sshKexs :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled Transport Layer Security (TLS) cipher encryption
--   algorithms in the security policy that is attached to the server.
describedSecurityPolicy_tlsCiphers :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled Secure Shell (SSH) cipher encryption algorithms
--   in the security policy that is attached to the server.
describedSecurityPolicy_sshCiphers :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the name of the security policy that is attached to the
--   server.
describedSecurityPolicy_securityPolicyName :: Lens' DescribedSecurityPolicy Text

-- | Describes the properties of a file transfer protocol-enabled server
--   that was specified.
--   
--   <i>See:</i> <a>newDescribedServer</a> smart constructor.
data DescribedServer
DescribedServer' :: Maybe ProtocolDetails -> Maybe Text -> Maybe State -> Maybe IdentityProviderType -> Maybe (NonEmpty Protocol) -> Maybe Text -> Maybe Domain -> Maybe EndpointType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe IdentityProviderDetails -> Maybe WorkflowDetails -> Maybe (NonEmpty Tag) -> Maybe EndpointDetails -> Text -> DescribedServer

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
[$sel:protocolDetails:DescribedServer'] :: DescribedServer -> Maybe ProtocolDetails

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
[$sel:state:DescribedServer'] :: DescribedServer -> Maybe State

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
[$sel:identityProviderType:DescribedServer'] :: DescribedServer -> Maybe IdentityProviderType

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
[$sel:protocols:DescribedServer'] :: DescribedServer -> Maybe (NonEmpty Protocol)

-- | Specifies the unique system-assigned identifier for a server that you
--   instantiate.
[$sel:serverId:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the domain of the storage system that is used for file
--   transfers.
[$sel:domain:DescribedServer'] :: DescribedServer -> Maybe Domain

-- | Defines the type of endpoint that your server is connected to. If your
--   server is connected to a VPC endpoint, your server isn't accessible
--   over the public internet.
[$sel:endpointType:DescribedServer'] :: DescribedServer -> Maybe EndpointType

-- | Specifies the name of the security policy that is attached to the
--   server.
[$sel:securityPolicyName:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the Base64-encoded SHA256 fingerprint of the server's host
--   key. This value is equivalent to the output of the <tt>ssh-keygen -l
--   -f my-new-server-key</tt> command.
[$sel:hostKeyFingerprint:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
[$sel:userCount:DescribedServer'] :: DescribedServer -> Maybe Int

-- | Specifies the ARN of the Amazon Web ServicesCertificate Manager (ACM)
--   certificate. Required when <tt>Protocols</tt> is set to <tt>FTPS</tt>.
[$sel:certificate:DescribedServer'] :: DescribedServer -> Maybe Text

-- | Specifies information to call a customer-supplied authentication API.
--   This field is not populated when the <tt>IdentityProviderType</tt> of
--   a server is <tt>AWS_DIRECTORY_SERVICE</tt> or
--   <tt>SERVICE_MANAGED</tt>.
[$sel:identityProviderDetails:DescribedServer'] :: DescribedServer -> Maybe IdentityProviderDetails

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
[$sel:workflowDetails:DescribedServer'] :: DescribedServer -> Maybe WorkflowDetails

-- | Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
[$sel:tags:DescribedServer'] :: DescribedServer -> Maybe (NonEmpty Tag)

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
[$sel:endpointDetails:DescribedServer'] :: DescribedServer -> Maybe EndpointDetails

-- | Specifies the unique Amazon Resource Name (ARN) of the server.
[$sel:arn:DescribedServer'] :: DescribedServer -> Text

-- | Create a value of <a>DescribedServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolDetails:DescribedServer'</a>,
--   <a>describedServer_protocolDetails</a> - The protocol settings that
--   are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
--   
--   <a>$sel:loggingRole:DescribedServer'</a>,
--   <a>describedServer_loggingRole</a> - Specifies the Amazon Resource
--   Name (ARN) of the Amazon Web Services Identity and Access Management
--   (IAM) role that allows a server to turn on Amazon CloudWatch logging
--   for Amazon S3 or Amazon EFS events. When set, user activity can be
--   viewed in your CloudWatch logs.
--   
--   <a>$sel:state:DescribedServer'</a>, <a>describedServer_state</a> -
--   Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
--   
--   <a>$sel:identityProviderType:DescribedServer'</a>,
--   <a>describedServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:protocols:DescribedServer'</a>,
--   <a>describedServer_protocols</a> - Specifies the file transfer
--   protocol or protocols over which your file transfer protocol client
--   can connect to your server's endpoint. The available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   <a>$sel:serverId:DescribedServer'</a>, <a>describedServer_serverId</a>
--   - Specifies the unique system-assigned identifier for a server that
--   you instantiate.
--   
--   <a>$sel:domain:DescribedServer'</a>, <a>describedServer_domain</a> -
--   Specifies the domain of the storage system that is used for file
--   transfers.
--   
--   <a>$sel:endpointType:DescribedServer'</a>,
--   <a>describedServer_endpointType</a> - Defines the type of endpoint
--   that your server is connected to. If your server is connected to a VPC
--   endpoint, your server isn't accessible over the public internet.
--   
--   <a>$sel:securityPolicyName:DescribedServer'</a>,
--   <a>describedServer_securityPolicyName</a> - Specifies the name of the
--   security policy that is attached to the server.
--   
--   <a>$sel:hostKeyFingerprint:DescribedServer'</a>,
--   <a>describedServer_hostKeyFingerprint</a> - Specifies the
--   Base64-encoded SHA256 fingerprint of the server's host key. This value
--   is equivalent to the output of the <tt>ssh-keygen -l -f
--   my-new-server-key</tt> command.
--   
--   <a>$sel:userCount:DescribedServer'</a>,
--   <a>describedServer_userCount</a> - Specifies the number of users that
--   are assigned to a server you specified with the <tt>ServerId</tt>.
--   
--   <a>$sel:certificate:DescribedServer'</a>,
--   <a>describedServer_certificate</a> - Specifies the ARN of the Amazon
--   Web ServicesCertificate Manager (ACM) certificate. Required when
--   <tt>Protocols</tt> is set to <tt>FTPS</tt>.
--   
--   <a>$sel:identityProviderDetails:DescribedServer'</a>,
--   <a>describedServer_identityProviderDetails</a> - Specifies information
--   to call a customer-supplied authentication API. This field is not
--   populated when the <tt>IdentityProviderType</tt> of a server is
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:workflowDetails:DescribedServer'</a>,
--   <a>describedServer_workflowDetails</a> - Specifies the workflow ID for
--   the workflow to assign and the execution role used for executing the
--   workflow.
--   
--   <a>$sel:tags:DescribedServer'</a>, <a>describedServer_tags</a> -
--   Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
--   
--   <a>$sel:endpointDetails:DescribedServer'</a>,
--   <a>describedServer_endpointDetails</a> - The virtual private cloud
--   (VPC) endpoint settings that are configured for your server. When you
--   host your endpoint within your VPC, you can make it accessible only to
--   resources within your VPC, or you can attach Elastic IP addresses and
--   make it accessible to clients over the internet. Your VPC's default
--   security groups are automatically assigned to your endpoint.
--   
--   <a>$sel:arn:DescribedServer'</a>, <a>describedServer_arn</a> -
--   Specifies the unique Amazon Resource Name (ARN) of the server.
newDescribedServer :: Text -> DescribedServer

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
describedServer_protocolDetails :: Lens' DescribedServer (Maybe ProtocolDetails)

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
describedServer_loggingRole :: Lens' DescribedServer (Maybe Text)

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
describedServer_state :: Lens' DescribedServer (Maybe State)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
describedServer_identityProviderType :: Lens' DescribedServer (Maybe IdentityProviderType)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
describedServer_protocols :: Lens' DescribedServer (Maybe (NonEmpty Protocol))

-- | Specifies the unique system-assigned identifier for a server that you
--   instantiate.
describedServer_serverId :: Lens' DescribedServer (Maybe Text)

-- | Specifies the domain of the storage system that is used for file
--   transfers.
describedServer_domain :: Lens' DescribedServer (Maybe Domain)

-- | Defines the type of endpoint that your server is connected to. If your
--   server is connected to a VPC endpoint, your server isn't accessible
--   over the public internet.
describedServer_endpointType :: Lens' DescribedServer (Maybe EndpointType)

-- | Specifies the name of the security policy that is attached to the
--   server.
describedServer_securityPolicyName :: Lens' DescribedServer (Maybe Text)

-- | Specifies the Base64-encoded SHA256 fingerprint of the server's host
--   key. This value is equivalent to the output of the <tt>ssh-keygen -l
--   -f my-new-server-key</tt> command.
describedServer_hostKeyFingerprint :: Lens' DescribedServer (Maybe Text)

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
describedServer_userCount :: Lens' DescribedServer (Maybe Int)

-- | Specifies the ARN of the Amazon Web ServicesCertificate Manager (ACM)
--   certificate. Required when <tt>Protocols</tt> is set to <tt>FTPS</tt>.
describedServer_certificate :: Lens' DescribedServer (Maybe Text)

-- | Specifies information to call a customer-supplied authentication API.
--   This field is not populated when the <tt>IdentityProviderType</tt> of
--   a server is <tt>AWS_DIRECTORY_SERVICE</tt> or
--   <tt>SERVICE_MANAGED</tt>.
describedServer_identityProviderDetails :: Lens' DescribedServer (Maybe IdentityProviderDetails)

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
describedServer_workflowDetails :: Lens' DescribedServer (Maybe WorkflowDetails)

-- | Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
describedServer_tags :: Lens' DescribedServer (Maybe (NonEmpty Tag))

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
describedServer_endpointDetails :: Lens' DescribedServer (Maybe EndpointDetails)

-- | Specifies the unique Amazon Resource Name (ARN) of the server.
describedServer_arn :: Lens' DescribedServer Text

-- | Describes the properties of a user that was specified.
--   
--   <i>See:</i> <a>newDescribedUser</a> smart constructor.
data DescribedUser
DescribedUser' :: Maybe [SshPublicKey] -> Maybe HomeDirectoryType -> Maybe Text -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> DescribedUser

-- | Specifies the public key portion of the Secure Shell (SSH) keys stored
--   for the described user.
[$sel:sshPublicKeys:DescribedUser'] :: DescribedUser -> Maybe [SshPublicKey]

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:DescribedUser'] :: DescribedUser -> Maybe HomeDirectoryType

-- | Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
[$sel:userName:DescribedUser'] :: DescribedUser -> Maybe Text

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File System (Amazon EFS) file systems. The POSIX
--   permissions that are set on files and directories in your file system
--   determine the level of access your users get when transferring files
--   into and out of your Amazon EFS file systems.
[$sel:posixProfile:DescribedUser'] :: DescribedUser -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
[$sel:homeDirectoryMappings:DescribedUser'] :: DescribedUser -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':DescribedUser'] :: DescribedUser -> Maybe Text

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
[$sel:policy:DescribedUser'] :: DescribedUser -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:DescribedUser'] :: DescribedUser -> Maybe Text

-- | Specifies the key-value pairs for the user requested. Tag can be used
--   to search for and group users for a variety of purposes.
[$sel:tags:DescribedUser'] :: DescribedUser -> Maybe (NonEmpty Tag)

-- | Specifies the unique Amazon Resource Name (ARN) for the user that was
--   requested to be described.
[$sel:arn:DescribedUser'] :: DescribedUser -> Text

-- | Create a value of <a>DescribedUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sshPublicKeys:DescribedUser'</a>,
--   <a>describedUser_sshPublicKeys</a> - Specifies the public key portion
--   of the Secure Shell (SSH) keys stored for the described user.
--   
--   <a>$sel:homeDirectoryType:DescribedUser'</a>,
--   <a>describedUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:userName:DescribedUser'</a>, <a>describedUser_userName</a> -
--   Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
--   
--   <a>$sel:posixProfile:DescribedUser'</a>,
--   <a>describedUser_posixProfile</a> - Specifies the full POSIX identity,
--   including user ID (<tt>Uid</tt>), group ID (<tt>Gid</tt>), and any
--   secondary groups IDs (<tt>SecondaryGids</tt>), that controls your
--   users' access to your Amazon Elastic File System (Amazon EFS) file
--   systems. The POSIX permissions that are set on files and directories
--   in your file system determine the level of access your users get when
--   transferring files into and out of your Amazon EFS file systems.
--   
--   <a>$sel:homeDirectoryMappings:DescribedUser'</a>,
--   <a>describedUser_homeDirectoryMappings</a> - Logical directory
--   mappings that specify what Amazon S3 or Amazon EFS paths and keys
--   should be visible to your user and how you want to make them visible.
--   You must specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   <a>$sel:role':DescribedUser'</a>, <a>describedUser_role</a> -
--   Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:DescribedUser'</a>, <a>describedUser_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   <a>$sel:homeDirectory:DescribedUser'</a>,
--   <a>describedUser_homeDirectory</a> - The landing directory (folder)
--   for a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:tags:DescribedUser'</a>, <a>describedUser_tags</a> - Specifies
--   the key-value pairs for the user requested. Tag can be used to search
--   for and group users for a variety of purposes.
--   
--   <a>$sel:arn:DescribedUser'</a>, <a>describedUser_arn</a> - Specifies
--   the unique Amazon Resource Name (ARN) for the user that was requested
--   to be described.
newDescribedUser :: Text -> DescribedUser

-- | Specifies the public key portion of the Secure Shell (SSH) keys stored
--   for the described user.
describedUser_sshPublicKeys :: Lens' DescribedUser (Maybe [SshPublicKey])

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
describedUser_homeDirectoryType :: Lens' DescribedUser (Maybe HomeDirectoryType)

-- | Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
describedUser_userName :: Lens' DescribedUser (Maybe Text)

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File System (Amazon EFS) file systems. The POSIX
--   permissions that are set on files and directories in your file system
--   determine the level of access your users get when transferring files
--   into and out of your Amazon EFS file systems.
describedUser_posixProfile :: Lens' DescribedUser (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
describedUser_homeDirectoryMappings :: Lens' DescribedUser (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
describedUser_role :: Lens' DescribedUser (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
describedUser_policy :: Lens' DescribedUser (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
describedUser_homeDirectory :: Lens' DescribedUser (Maybe Text)

-- | Specifies the key-value pairs for the user requested. Tag can be used
--   to search for and group users for a variety of purposes.
describedUser_tags :: Lens' DescribedUser (Maybe (NonEmpty Tag))

-- | Specifies the unique Amazon Resource Name (ARN) for the user that was
--   requested to be described.
describedUser_arn :: Lens' DescribedUser Text

-- | Describes the properties of the specified workflow
--   
--   <i>See:</i> <a>newDescribedWorkflow</a> smart constructor.
data DescribedWorkflow
DescribedWorkflow' :: Maybe [WorkflowStep] -> Maybe [WorkflowStep] -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> DescribedWorkflow

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
[$sel:onExceptionSteps:DescribedWorkflow'] :: DescribedWorkflow -> Maybe [WorkflowStep]

-- | Specifies the details for the steps that are in the specified
--   workflow.
[$sel:steps:DescribedWorkflow'] :: DescribedWorkflow -> Maybe [WorkflowStep]

-- | A unique identifier for the workflow.
[$sel:workflowId:DescribedWorkflow'] :: DescribedWorkflow -> Maybe Text

-- | Specifies the text description for the workflow.
[$sel:description:DescribedWorkflow'] :: DescribedWorkflow -> Maybe Text

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
[$sel:tags:DescribedWorkflow'] :: DescribedWorkflow -> Maybe (NonEmpty Tag)

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
[$sel:arn:DescribedWorkflow'] :: DescribedWorkflow -> Text

-- | Create a value of <a>DescribedWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:DescribedWorkflow'</a>,
--   <a>describedWorkflow_onExceptionSteps</a> - Specifies the steps
--   (actions) to take if errors are encountered during execution of the
--   workflow.
--   
--   <a>$sel:steps:DescribedWorkflow'</a>, <a>describedWorkflow_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
--   
--   <a>$sel:workflowId:DescribedWorkflow'</a>,
--   <a>describedWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:description:DescribedWorkflow'</a>,
--   <a>describedWorkflow_description</a> - Specifies the text description
--   for the workflow.
--   
--   <a>$sel:tags:DescribedWorkflow'</a>, <a>describedWorkflow_tags</a> -
--   Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
--   
--   <a>$sel:arn:DescribedWorkflow'</a>, <a>describedWorkflow_arn</a> -
--   Specifies the unique Amazon Resource Name (ARN) for the workflow.
newDescribedWorkflow :: Text -> DescribedWorkflow

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
describedWorkflow_onExceptionSteps :: Lens' DescribedWorkflow (Maybe [WorkflowStep])

-- | Specifies the details for the steps that are in the specified
--   workflow.
describedWorkflow_steps :: Lens' DescribedWorkflow (Maybe [WorkflowStep])

-- | A unique identifier for the workflow.
describedWorkflow_workflowId :: Lens' DescribedWorkflow (Maybe Text)

-- | Specifies the text description for the workflow.
describedWorkflow_description :: Lens' DescribedWorkflow (Maybe Text)

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
describedWorkflow_tags :: Lens' DescribedWorkflow (Maybe (NonEmpty Tag))

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
describedWorkflow_arn :: Lens' DescribedWorkflow Text

-- | Reserved for future use.
--   
--   <i>See:</i> <a>newEfsFileLocation</a> smart constructor.
data EfsFileLocation
EfsFileLocation' :: Maybe Text -> Maybe Text -> EfsFileLocation

-- | The pathname for the folder being used by a workflow.
[$sel:path:EfsFileLocation'] :: EfsFileLocation -> Maybe Text

-- | The ID of the file system, assigned by Amazon EFS.
[$sel:fileSystemId:EfsFileLocation'] :: EfsFileLocation -> Maybe Text

-- | Create a value of <a>EfsFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:EfsFileLocation'</a>, <a>efsFileLocation_path</a> - The
--   pathname for the folder being used by a workflow.
--   
--   <a>$sel:fileSystemId:EfsFileLocation'</a>,
--   <a>efsFileLocation_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
newEfsFileLocation :: EfsFileLocation

-- | The pathname for the folder being used by a workflow.
efsFileLocation_path :: Lens' EfsFileLocation (Maybe Text)

-- | The ID of the file system, assigned by Amazon EFS.
efsFileLocation_fileSystemId :: Lens' EfsFileLocation (Maybe Text)

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your file transfer protocol-enabled server. With a VPC endpoint,
--   you can restrict access to your server and resources only within your
--   VPC. To control incoming internet traffic, invoke the
--   <tt>UpdateServer</tt> API and attach an Elastic IP address to your
--   server's endpoint.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   <i>See:</i> <a>newEndpointDetails</a> smart constructor.
data EndpointDetails
EndpointDetails' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> EndpointDetails

-- | A list of security groups IDs that are available to attach to your
--   server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
[$sel:securityGroupIds:EndpointDetails'] :: EndpointDetails -> Maybe [Text]

-- | A list of subnet IDs that are required to host your server endpoint in
--   your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
[$sel:subnetIds:EndpointDetails'] :: EndpointDetails -> Maybe [Text]

-- | The VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
[$sel:vpcId:EndpointDetails'] :: EndpointDetails -> Maybe Text

-- | A list of address allocation IDs that are required to attach an
--   Elastic IP address to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
[$sel:addressAllocationIds:EndpointDetails'] :: EndpointDetails -> Maybe [Text]

-- | The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
[$sel:vpcEndpointId:EndpointDetails'] :: EndpointDetails -> Maybe Text

-- | Create a value of <a>EndpointDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:EndpointDetails'</a>,
--   <a>endpointDetails_securityGroupIds</a> - A list of security groups
--   IDs that are available to attach to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
--   
--   <a>$sel:subnetIds:EndpointDetails'</a>,
--   <a>endpointDetails_subnetIds</a> - A list of subnet IDs that are
--   required to host your server endpoint in your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   <a>$sel:vpcId:EndpointDetails'</a>, <a>endpointDetails_vpcId</a> - The
--   VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   <a>$sel:addressAllocationIds:EndpointDetails'</a>,
--   <a>endpointDetails_addressAllocationIds</a> - A list of address
--   allocation IDs that are required to attach an Elastic IP address to
--   your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
--   
--   <a>$sel:vpcEndpointId:EndpointDetails'</a>,
--   <a>endpointDetails_vpcEndpointId</a> - The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
newEndpointDetails :: EndpointDetails

-- | A list of security groups IDs that are available to attach to your
--   server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
endpointDetails_securityGroupIds :: Lens' EndpointDetails (Maybe [Text])

-- | A list of subnet IDs that are required to host your server endpoint in
--   your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
endpointDetails_subnetIds :: Lens' EndpointDetails (Maybe [Text])

-- | The VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
endpointDetails_vpcId :: Lens' EndpointDetails (Maybe Text)

-- | A list of address allocation IDs that are required to attach an
--   Elastic IP address to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
endpointDetails_addressAllocationIds :: Lens' EndpointDetails (Maybe [Text])

-- | The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
endpointDetails_vpcEndpointId :: Lens' EndpointDetails (Maybe Text)

-- | Specifies the error message and type, for an error that occurs during
--   the execution of the workflow.
--   
--   <i>See:</i> <a>newExecutionError</a> smart constructor.
data ExecutionError
ExecutionError' :: ExecutionErrorType -> Text -> ExecutionError

-- | Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
[$sel:type':ExecutionError'] :: ExecutionError -> ExecutionErrorType

-- | Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
[$sel:message:ExecutionError'] :: ExecutionError -> Text

-- | Create a value of <a>ExecutionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ExecutionError'</a>, <a>executionError_type</a> -
--   Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
--   
--   <a>$sel:message:ExecutionError'</a>, <a>executionError_message</a> -
--   Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
newExecutionError :: ExecutionErrorType -> Text -> ExecutionError

-- | Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
executionError_type :: Lens' ExecutionError ExecutionErrorType

-- | Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
executionError_message :: Lens' ExecutionError Text

-- | Specifies the steps in the workflow, as well as the steps to execute
--   in case of any errors during workflow execution.
--   
--   <i>See:</i> <a>newExecutionResults</a> smart constructor.
data ExecutionResults
ExecutionResults' :: Maybe (NonEmpty ExecutionStepResult) -> Maybe (NonEmpty ExecutionStepResult) -> ExecutionResults

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
[$sel:onExceptionSteps:ExecutionResults'] :: ExecutionResults -> Maybe (NonEmpty ExecutionStepResult)

-- | Specifies the details for the steps that are in the specified
--   workflow.
[$sel:steps:ExecutionResults'] :: ExecutionResults -> Maybe (NonEmpty ExecutionStepResult)

-- | Create a value of <a>ExecutionResults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:ExecutionResults'</a>,
--   <a>executionResults_onExceptionSteps</a> - Specifies the steps
--   (actions) to take if errors are encountered during execution of the
--   workflow.
--   
--   <a>$sel:steps:ExecutionResults'</a>, <a>executionResults_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
newExecutionResults :: ExecutionResults

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
executionResults_onExceptionSteps :: Lens' ExecutionResults (Maybe (NonEmpty ExecutionStepResult))

-- | Specifies the details for the steps that are in the specified
--   workflow.
executionResults_steps :: Lens' ExecutionResults (Maybe (NonEmpty ExecutionStepResult))

-- | Specifies the following details for the step: error (if any), outputs
--   (if any), and the step type.
--   
--   <i>See:</i> <a>newExecutionStepResult</a> smart constructor.
data ExecutionStepResult
ExecutionStepResult' :: Maybe WorkflowStepType -> Maybe ExecutionError -> Maybe Text -> ExecutionStepResult

-- | One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
[$sel:stepType:ExecutionStepResult'] :: ExecutionStepResult -> Maybe WorkflowStepType

-- | Specifies the details for an error, if it occurred during execution of
--   the specified workfow step.
[$sel:error:ExecutionStepResult'] :: ExecutionStepResult -> Maybe ExecutionError

-- | The values for the key/value pair applied as a tag to the file. Only
--   applicable if the step type is <tt>TAG</tt>.
[$sel:outputs:ExecutionStepResult'] :: ExecutionStepResult -> Maybe Text

-- | Create a value of <a>ExecutionStepResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepType:ExecutionStepResult'</a>,
--   <a>executionStepResult_stepType</a> - One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   <a>$sel:error:ExecutionStepResult'</a>,
--   <a>executionStepResult_error</a> - Specifies the details for an error,
--   if it occurred during execution of the specified workfow step.
--   
--   <a>$sel:outputs:ExecutionStepResult'</a>,
--   <a>executionStepResult_outputs</a> - The values for the key/value pair
--   applied as a tag to the file. Only applicable if the step type is
--   <tt>TAG</tt>.
newExecutionStepResult :: ExecutionStepResult

-- | One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
executionStepResult_stepType :: Lens' ExecutionStepResult (Maybe WorkflowStepType)

-- | Specifies the details for an error, if it occurred during execution of
--   the specified workfow step.
executionStepResult_error :: Lens' ExecutionStepResult (Maybe ExecutionError)

-- | The values for the key/value pair applied as a tag to the file. Only
--   applicable if the step type is <tt>TAG</tt>.
executionStepResult_outputs :: Lens' ExecutionStepResult (Maybe Text)

-- | Specifies the Amazon S3 or EFS file details to be used in the step.
--   
--   <i>See:</i> <a>newFileLocation</a> smart constructor.
data FileLocation
FileLocation' :: Maybe EfsFileLocation -> Maybe S3FileLocation -> FileLocation

-- | Specifies the Amazon EFS ID and the path for the file being used.
[$sel:efsFileLocation:FileLocation'] :: FileLocation -> Maybe EfsFileLocation

-- | Specifies the S3 details for the file being used, such as bucket,
--   Etag, and so forth.
[$sel:s3FileLocation:FileLocation'] :: FileLocation -> Maybe S3FileLocation

-- | Create a value of <a>FileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:efsFileLocation:FileLocation'</a>,
--   <a>fileLocation_efsFileLocation</a> - Specifies the Amazon EFS ID and
--   the path for the file being used.
--   
--   <a>$sel:s3FileLocation:FileLocation'</a>,
--   <a>fileLocation_s3FileLocation</a> - Specifies the S3 details for the
--   file being used, such as bucket, Etag, and so forth.
newFileLocation :: FileLocation

-- | Specifies the Amazon EFS ID and the path for the file being used.
fileLocation_efsFileLocation :: Lens' FileLocation (Maybe EfsFileLocation)

-- | Specifies the S3 details for the file being used, such as bucket,
--   Etag, and so forth.
fileLocation_s3FileLocation :: Lens' FileLocation (Maybe S3FileLocation)

-- | Represents an object that contains entries and targets for
--   <tt>HomeDirectoryMappings</tt>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <i>See:</i> <a>newHomeDirectoryMapEntry</a> smart constructor.
data HomeDirectoryMapEntry
HomeDirectoryMapEntry' :: Text -> Text -> HomeDirectoryMapEntry

-- | Represents an entry for <tt>HomeDirectoryMappings</tt>.
[$sel:entry:HomeDirectoryMapEntry'] :: HomeDirectoryMapEntry -> Text

-- | Represents the map target that is used in a
--   <tt>HomeDirectorymapEntry</tt>.
[$sel:target:HomeDirectoryMapEntry'] :: HomeDirectoryMapEntry -> Text

-- | Create a value of <a>HomeDirectoryMapEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entry:HomeDirectoryMapEntry'</a>,
--   <a>homeDirectoryMapEntry_entry</a> - Represents an entry for
--   <tt>HomeDirectoryMappings</tt>.
--   
--   <a>$sel:target:HomeDirectoryMapEntry'</a>,
--   <a>homeDirectoryMapEntry_target</a> - Represents the map target that
--   is used in a <tt>HomeDirectorymapEntry</tt>.
newHomeDirectoryMapEntry :: Text -> Text -> HomeDirectoryMapEntry

-- | Represents an entry for <tt>HomeDirectoryMappings</tt>.
homeDirectoryMapEntry_entry :: Lens' HomeDirectoryMapEntry Text

-- | Represents the map target that is used in a
--   <tt>HomeDirectorymapEntry</tt>.
homeDirectoryMapEntry_target :: Lens' HomeDirectoryMapEntry Text

-- | Returns information related to the type of user authentication that is
--   in use for a file transfer protocol-enabled server's users. A server
--   can have only one method of authentication.
--   
--   <i>See:</i> <a>newIdentityProviderDetails</a> smart constructor.
data IdentityProviderDetails
IdentityProviderDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> IdentityProviderDetails

-- | Provides the type of <tt>InvocationRole</tt> used to authenticate the
--   user account.
[$sel:invocationRole:IdentityProviderDetails'] :: IdentityProviderDetails -> Maybe Text

-- | The identifier of the Amazon Web ServicesDirectory Service directory
--   that you want to stop sharing.
[$sel:directoryId:IdentityProviderDetails'] :: IdentityProviderDetails -> Maybe Text

-- | Provides the location of the service endpoint used to authenticate
--   users.
[$sel:url:IdentityProviderDetails'] :: IdentityProviderDetails -> Maybe Text

-- | Create a value of <a>IdentityProviderDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invocationRole:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_invocationRole</a> - Provides the type of
--   <tt>InvocationRole</tt> used to authenticate the user account.
--   
--   <a>$sel:directoryId:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_directoryId</a> - The identifier of the
--   Amazon Web ServicesDirectory Service directory that you want to stop
--   sharing.
--   
--   <a>$sel:url:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_url</a> - Provides the location of the
--   service endpoint used to authenticate users.
newIdentityProviderDetails :: IdentityProviderDetails

-- | Provides the type of <tt>InvocationRole</tt> used to authenticate the
--   user account.
identityProviderDetails_invocationRole :: Lens' IdentityProviderDetails (Maybe Text)

-- | The identifier of the Amazon Web ServicesDirectory Service directory
--   that you want to stop sharing.
identityProviderDetails_directoryId :: Lens' IdentityProviderDetails (Maybe Text)

-- | Provides the location of the service endpoint used to authenticate
--   users.
identityProviderDetails_url :: Lens' IdentityProviderDetails (Maybe Text)

-- | Specifies the location for the file being copied. Only applicable for
--   the Copy type of workflow steps.
--   
--   <i>See:</i> <a>newInputFileLocation</a> smart constructor.
data InputFileLocation
InputFileLocation' :: Maybe EfsFileLocation -> Maybe S3InputFileLocation -> InputFileLocation

-- | Reserved for future use.
[$sel:efsFileLocation:InputFileLocation'] :: InputFileLocation -> Maybe EfsFileLocation

-- | Specifies the details for the S3 file being copied.
[$sel:s3FileLocation:InputFileLocation'] :: InputFileLocation -> Maybe S3InputFileLocation

-- | Create a value of <a>InputFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:efsFileLocation:InputFileLocation'</a>,
--   <a>inputFileLocation_efsFileLocation</a> - Reserved for future use.
--   
--   <a>$sel:s3FileLocation:InputFileLocation'</a>,
--   <a>inputFileLocation_s3FileLocation</a> - Specifies the details for
--   the S3 file being copied.
newInputFileLocation :: InputFileLocation

-- | Reserved for future use.
inputFileLocation_efsFileLocation :: Lens' InputFileLocation (Maybe EfsFileLocation)

-- | Specifies the details for the S3 file being copied.
inputFileLocation_s3FileLocation :: Lens' InputFileLocation (Maybe S3InputFileLocation)

-- | Lists the properties for one or more specified associated accesses.
--   
--   <i>See:</i> <a>newListedAccess</a> smart constructor.
data ListedAccess
ListedAccess' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe Text -> Maybe Text -> ListedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:ListedAccess'] :: ListedAccess -> Maybe HomeDirectoryType

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':ListedAccess'] :: ListedAccess -> Maybe Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:ListedAccess'] :: ListedAccess -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:ListedAccess'] :: ListedAccess -> Maybe Text

-- | Create a value of <a>ListedAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:ListedAccess'</a>,
--   <a>listedAccess_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:role':ListedAccess'</a>, <a>listedAccess_role</a> - Specifies
--   the Amazon Resource Name (ARN) of the IAM role that controls your
--   users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:externalId:ListedAccess'</a>, <a>listedAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:homeDirectory:ListedAccess'</a>,
--   <a>listedAccess_homeDirectory</a> - The landing directory (folder) for
--   a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
newListedAccess :: ListedAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
listedAccess_homeDirectoryType :: Lens' ListedAccess (Maybe HomeDirectoryType)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
listedAccess_role :: Lens' ListedAccess (Maybe Text)

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
listedAccess_externalId :: Lens' ListedAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
listedAccess_homeDirectory :: Lens' ListedAccess (Maybe Text)

-- | Returns properties of the execution that is specified.
--   
--   <i>See:</i> <a>newListedExecution</a> smart constructor.
data ListedExecution
ListedExecution' :: Maybe ExecutionStatus -> Maybe Text -> Maybe FileLocation -> Maybe ServiceMetadata -> ListedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
[$sel:status:ListedExecution'] :: ListedExecution -> Maybe ExecutionStatus

-- | A unique identifier for the execution of a workflow.
[$sel:executionId:ListedExecution'] :: ListedExecution -> Maybe Text

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
[$sel:initialFileLocation:ListedExecution'] :: ListedExecution -> Maybe FileLocation

-- | A container object for the session details associated with a workflow.
[$sel:serviceMetadata:ListedExecution'] :: ListedExecution -> Maybe ServiceMetadata

-- | Create a value of <a>ListedExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListedExecution'</a>, <a>listedExecution_status</a> -
--   The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
--   
--   <a>$sel:executionId:ListedExecution'</a>,
--   <a>listedExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:initialFileLocation:ListedExecution'</a>,
--   <a>listedExecution_initialFileLocation</a> - A structure that
--   describes the Amazon S3 or EFS file location. This is the file
--   location when the execution begins: if the file is being copied, this
--   is the initial (as opposed to destination) file location.
--   
--   <a>$sel:serviceMetadata:ListedExecution'</a>,
--   <a>listedExecution_serviceMetadata</a> - A container object for the
--   session details associated with a workflow.
newListedExecution :: ListedExecution

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
listedExecution_status :: Lens' ListedExecution (Maybe ExecutionStatus)

-- | A unique identifier for the execution of a workflow.
listedExecution_executionId :: Lens' ListedExecution (Maybe Text)

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
listedExecution_initialFileLocation :: Lens' ListedExecution (Maybe FileLocation)

-- | A container object for the session details associated with a workflow.
listedExecution_serviceMetadata :: Lens' ListedExecution (Maybe ServiceMetadata)

-- | Returns properties of a file transfer protocol-enabled server that was
--   specified.
--   
--   <i>See:</i> <a>newListedServer</a> smart constructor.
data ListedServer
ListedServer' :: Maybe Text -> Maybe State -> Maybe IdentityProviderType -> Maybe Text -> Maybe Domain -> Maybe EndpointType -> Maybe Int -> Text -> ListedServer

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:ListedServer'] :: ListedServer -> Maybe Text

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
[$sel:state:ListedServer'] :: ListedServer -> Maybe State

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
[$sel:identityProviderType:ListedServer'] :: ListedServer -> Maybe IdentityProviderType

-- | Specifies the unique system assigned identifier for the servers that
--   were listed.
[$sel:serverId:ListedServer'] :: ListedServer -> Maybe Text

-- | Specifies the domain of the storage system that is used for file
--   transfers.
[$sel:domain:ListedServer'] :: ListedServer -> Maybe Domain

-- | Specifies the type of VPC endpoint that your server is connected to.
--   If your server is connected to a VPC endpoint, your server isn't
--   accessible over the public internet.
[$sel:endpointType:ListedServer'] :: ListedServer -> Maybe EndpointType

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
[$sel:userCount:ListedServer'] :: ListedServer -> Maybe Int

-- | Specifies the unique Amazon Resource Name (ARN) for a server to be
--   listed.
[$sel:arn:ListedServer'] :: ListedServer -> Text

-- | Create a value of <a>ListedServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:ListedServer'</a>, <a>listedServer_loggingRole</a>
--   - Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:state:ListedServer'</a>, <a>listedServer_state</a> - Specifies
--   the condition of a server for the server that was described. A value
--   of <tt>ONLINE</tt> indicates that the server can accept jobs and
--   transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means that
--   the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
--   
--   <a>$sel:identityProviderType:ListedServer'</a>,
--   <a>listedServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:serverId:ListedServer'</a>, <a>listedServer_serverId</a> -
--   Specifies the unique system assigned identifier for the servers that
--   were listed.
--   
--   <a>$sel:domain:ListedServer'</a>, <a>listedServer_domain</a> -
--   Specifies the domain of the storage system that is used for file
--   transfers.
--   
--   <a>$sel:endpointType:ListedServer'</a>,
--   <a>listedServer_endpointType</a> - Specifies the type of VPC endpoint
--   that your server is connected to. If your server is connected to a VPC
--   endpoint, your server isn't accessible over the public internet.
--   
--   <a>$sel:userCount:ListedServer'</a>, <a>listedServer_userCount</a> -
--   Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
--   
--   <a>$sel:arn:ListedServer'</a>, <a>listedServer_arn</a> - Specifies the
--   unique Amazon Resource Name (ARN) for a server to be listed.
newListedServer :: Text -> ListedServer

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
listedServer_loggingRole :: Lens' ListedServer (Maybe Text)

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
listedServer_state :: Lens' ListedServer (Maybe State)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
listedServer_identityProviderType :: Lens' ListedServer (Maybe IdentityProviderType)

-- | Specifies the unique system assigned identifier for the servers that
--   were listed.
listedServer_serverId :: Lens' ListedServer (Maybe Text)

-- | Specifies the domain of the storage system that is used for file
--   transfers.
listedServer_domain :: Lens' ListedServer (Maybe Domain)

-- | Specifies the type of VPC endpoint that your server is connected to.
--   If your server is connected to a VPC endpoint, your server isn't
--   accessible over the public internet.
listedServer_endpointType :: Lens' ListedServer (Maybe EndpointType)

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
listedServer_userCount :: Lens' ListedServer (Maybe Int)

-- | Specifies the unique Amazon Resource Name (ARN) for a server to be
--   listed.
listedServer_arn :: Lens' ListedServer Text

-- | Returns properties of the user that you specify.
--   
--   <i>See:</i> <a>newListedUser</a> smart constructor.
data ListedUser
ListedUser' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> ListedUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:ListedUser'] :: ListedUser -> Maybe HomeDirectoryType

-- | Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
[$sel:userName:ListedUser'] :: ListedUser -> Maybe Text

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
[$sel:role':ListedUser'] :: ListedUser -> Maybe Text

-- | Specifies the number of SSH public keys stored for the user you
--   specified.
[$sel:sshPublicKeyCount:ListedUser'] :: ListedUser -> Maybe Int

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:ListedUser'] :: ListedUser -> Maybe Text

-- | Provides the unique Amazon Resource Name (ARN) for the user that you
--   want to learn about.
[$sel:arn:ListedUser'] :: ListedUser -> Text

-- | Create a value of <a>ListedUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:ListedUser'</a>,
--   <a>listedUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:userName:ListedUser'</a>, <a>listedUser_userName</a> -
--   Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
--   
--   <a>$sel:role':ListedUser'</a>, <a>listedUser_role</a> - Specifies the
--   Amazon Resource Name (ARN) of the IAM role that controls your users'
--   access to your Amazon S3 bucket or EFS file system. The policies
--   attached to this role determine the level of access that you want to
--   provide your users when transferring files into and out of your Amazon
--   S3 bucket or EFS file system. The IAM role should also contain a trust
--   relationship that allows the server to access your resources when
--   servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
--   
--   <a>$sel:sshPublicKeyCount:ListedUser'</a>,
--   <a>listedUser_sshPublicKeyCount</a> - Specifies the number of SSH
--   public keys stored for the user you specified.
--   
--   <a>$sel:homeDirectory:ListedUser'</a>, <a>listedUser_homeDirectory</a>
--   - The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:arn:ListedUser'</a>, <a>listedUser_arn</a> - Provides the
--   unique Amazon Resource Name (ARN) for the user that you want to learn
--   about.
newListedUser :: Text -> ListedUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
listedUser_homeDirectoryType :: Lens' ListedUser (Maybe HomeDirectoryType)

-- | Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
listedUser_userName :: Lens' ListedUser (Maybe Text)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
listedUser_role :: Lens' ListedUser (Maybe Text)

-- | Specifies the number of SSH public keys stored for the user you
--   specified.
listedUser_sshPublicKeyCount :: Lens' ListedUser (Maybe Int)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
listedUser_homeDirectory :: Lens' ListedUser (Maybe Text)

-- | Provides the unique Amazon Resource Name (ARN) for the user that you
--   want to learn about.
listedUser_arn :: Lens' ListedUser Text

-- | Contains the ID, text description, and Amazon Resource Name (ARN) for
--   the workflow.
--   
--   <i>See:</i> <a>newListedWorkflow</a> smart constructor.
data ListedWorkflow
ListedWorkflow' :: Maybe Text -> Maybe Text -> Maybe Text -> ListedWorkflow

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
[$sel:arn:ListedWorkflow'] :: ListedWorkflow -> Maybe Text

-- | A unique identifier for the workflow.
[$sel:workflowId:ListedWorkflow'] :: ListedWorkflow -> Maybe Text

-- | Specifies the text description for the workflow.
[$sel:description:ListedWorkflow'] :: ListedWorkflow -> Maybe Text

-- | Create a value of <a>ListedWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListedWorkflow'</a>, <a>listedWorkflow_arn</a> - Specifies
--   the unique Amazon Resource Name (ARN) for the workflow.
--   
--   <a>$sel:workflowId:ListedWorkflow'</a>,
--   <a>listedWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:description:ListedWorkflow'</a>,
--   <a>listedWorkflow_description</a> - Specifies the text description for
--   the workflow.
newListedWorkflow :: ListedWorkflow

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
listedWorkflow_arn :: Lens' ListedWorkflow (Maybe Text)

-- | A unique identifier for the workflow.
listedWorkflow_workflowId :: Lens' ListedWorkflow (Maybe Text)

-- | Specifies the text description for the workflow.
listedWorkflow_description :: Lens' ListedWorkflow (Maybe Text)

-- | Consists of the logging role and the log group name.
--   
--   <i>See:</i> <a>newLoggingConfiguration</a> smart constructor.
data LoggingConfiguration
LoggingConfiguration' :: Maybe Text -> Maybe Text -> LoggingConfiguration

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:LoggingConfiguration'] :: LoggingConfiguration -> Maybe Text

-- | The name of the CloudWatch logging group for the Amazon Web Services
--   Transfer server to which this workflow belongs.
[$sel:logGroupName:LoggingConfiguration'] :: LoggingConfiguration -> Maybe Text

-- | Create a value of <a>LoggingConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:LoggingConfiguration'</a>,
--   <a>loggingConfiguration_loggingRole</a> - Specifies the Amazon
--   Resource Name (ARN) of the Amazon Web Services Identity and Access
--   Management (IAM) role that allows a server to turn on Amazon
--   CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user
--   activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:logGroupName:LoggingConfiguration'</a>,
--   <a>loggingConfiguration_logGroupName</a> - The name of the CloudWatch
--   logging group for the Amazon Web Services Transfer server to which
--   this workflow belongs.
newLoggingConfiguration :: LoggingConfiguration

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
loggingConfiguration_loggingRole :: Lens' LoggingConfiguration (Maybe Text)

-- | The name of the CloudWatch logging group for the Amazon Web Services
--   Transfer server to which this workflow belongs.
loggingConfiguration_logGroupName :: Lens' LoggingConfiguration (Maybe Text)

-- | The full POSIX identity, including user ID (<tt>Uid</tt>), group ID
--   (<tt>Gid</tt>), and any secondary groups IDs (<tt>SecondaryGids</tt>),
--   that controls your users' access to your Amazon EFS file systems. The
--   POSIX permissions that are set on files and directories in your file
--   system determine the level of access your users get when transferring
--   files into and out of your Amazon EFS file systems.
--   
--   <i>See:</i> <a>newPosixProfile</a> smart constructor.
data PosixProfile
PosixProfile' :: Maybe [Natural] -> Natural -> Natural -> PosixProfile

-- | The secondary POSIX group IDs used for all EFS operations by this
--   user.
[$sel:secondaryGids:PosixProfile'] :: PosixProfile -> Maybe [Natural]

-- | The POSIX user ID used for all EFS operations by this user.
[$sel:uid:PosixProfile'] :: PosixProfile -> Natural

-- | The POSIX group ID used for all EFS operations by this user.
[$sel:gid:PosixProfile'] :: PosixProfile -> Natural

-- | Create a value of <a>PosixProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryGids:PosixProfile'</a>,
--   <a>posixProfile_secondaryGids</a> - The secondary POSIX group IDs used
--   for all EFS operations by this user.
--   
--   <a>$sel:uid:PosixProfile'</a>, <a>posixProfile_uid</a> - The POSIX
--   user ID used for all EFS operations by this user.
--   
--   <a>$sel:gid:PosixProfile'</a>, <a>posixProfile_gid</a> - The POSIX
--   group ID used for all EFS operations by this user.
newPosixProfile :: Natural -> Natural -> PosixProfile

-- | The secondary POSIX group IDs used for all EFS operations by this
--   user.
posixProfile_secondaryGids :: Lens' PosixProfile (Maybe [Natural])

-- | The POSIX user ID used for all EFS operations by this user.
posixProfile_uid :: Lens' PosixProfile Natural

-- | The POSIX group ID used for all EFS operations by this user.
posixProfile_gid :: Lens' PosixProfile Natural

-- | The protocol settings that are configured for your server.
--   
--   This type is only valid in the <tt>UpdateServer</tt> API.
--   
--   <i>See:</i> <a>newProtocolDetails</a> smart constructor.
data ProtocolDetails
ProtocolDetails' :: Maybe Text -> ProtocolDetails

-- | Indicates passive mode, for FTP and FTPS protocols. Enter a single
--   dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer. For example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
[$sel:passiveIp:ProtocolDetails'] :: ProtocolDetails -> Maybe Text

-- | Create a value of <a>ProtocolDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passiveIp:ProtocolDetails'</a>,
--   <a>protocolDetails_passiveIp</a> - Indicates passive mode, for FTP and
--   FTPS protocols. Enter a single dotted-quad IPv4 address, such as the
--   external IP address of a firewall, router, or load balancer. For
--   example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
newProtocolDetails :: ProtocolDetails

-- | Indicates passive mode, for FTP and FTPS protocols. Enter a single
--   dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer. For example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
protocolDetails_passiveIp :: Lens' ProtocolDetails (Maybe Text)

-- | Specifies the details for the file location for the file being used in
--   the workflow. Only applicable if you are using S3 storage.
--   
--   <i>See:</i> <a>newS3FileLocation</a> smart constructor.
data S3FileLocation
S3FileLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> S3FileLocation

-- | Specifies the file version.
[$sel:versionId:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | The entity tag is a hash of the object. The ETag reflects changes only
--   to the contents of an object, not its metadata.
[$sel:etag:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | Specifies the S3 bucket that contains the file being used.
[$sel:bucket:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
[$sel:key:S3FileLocation'] :: S3FileLocation -> Maybe Text

-- | Create a value of <a>S3FileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:S3FileLocation'</a>, <a>s3FileLocation_versionId</a>
--   - Specifies the file version.
--   
--   <a>$sel:etag:S3FileLocation'</a>, <a>s3FileLocation_etag</a> - The
--   entity tag is a hash of the object. The ETag reflects changes only to
--   the contents of an object, not its metadata.
--   
--   <a>$sel:bucket:S3FileLocation'</a>, <a>s3FileLocation_bucket</a> -
--   Specifies the S3 bucket that contains the file being used.
--   
--   <a>$sel:key:S3FileLocation'</a>, <a>s3FileLocation_key</a> - The name
--   assigned to the file when it was created in S3. You use the object key
--   to retrieve the object.
newS3FileLocation :: S3FileLocation

-- | Specifies the file version.
s3FileLocation_versionId :: Lens' S3FileLocation (Maybe Text)

-- | The entity tag is a hash of the object. The ETag reflects changes only
--   to the contents of an object, not its metadata.
s3FileLocation_etag :: Lens' S3FileLocation (Maybe Text)

-- | Specifies the S3 bucket that contains the file being used.
s3FileLocation_bucket :: Lens' S3FileLocation (Maybe Text)

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
s3FileLocation_key :: Lens' S3FileLocation (Maybe Text)

-- | Specifies the customer input S3 file location. If it is used inside
--   <tt>copyStepDetails.DestinationFileLocation</tt>, it should be the S3
--   copy destination.
--   
--   You need to provide the bucket and key. The key can represent either a
--   path or a file. This is determined by whether or not you end the key
--   value with the forward slash (/) character. If the final character is
--   "/", then your file is copied to the folder, and its name does not
--   change. If, rather, the final character is alphanumeric, your uploaded
--   file is renamed to the path value. In this case, if a file with that
--   name already exists, it is overwritten.
--   
--   For example, if your path is <tt>shared-files/bob/</tt>, your uploaded
--   files are copied to the <tt>shared-files/bob/</tt>, folder. If your
--   path is <tt>shared-files/today</tt>, each uploaded file is copied to
--   the <tt>shared-files</tt> folder and named <tt>today</tt>: each upload
--   overwrites the previous version of the <i>bob</i> file.
--   
--   <i>See:</i> <a>newS3InputFileLocation</a> smart constructor.
data S3InputFileLocation
S3InputFileLocation' :: Maybe Text -> Maybe Text -> S3InputFileLocation

-- | Specifies the S3 bucket for the customer input file.
[$sel:bucket:S3InputFileLocation'] :: S3InputFileLocation -> Maybe Text

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
[$sel:key:S3InputFileLocation'] :: S3InputFileLocation -> Maybe Text

-- | Create a value of <a>S3InputFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3InputFileLocation'</a>,
--   <a>s3InputFileLocation_bucket</a> - Specifies the S3 bucket for the
--   customer input file.
--   
--   <a>$sel:key:S3InputFileLocation'</a>, <a>s3InputFileLocation_key</a> -
--   The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
newS3InputFileLocation :: S3InputFileLocation

-- | Specifies the S3 bucket for the customer input file.
s3InputFileLocation_bucket :: Lens' S3InputFileLocation (Maybe Text)

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
s3InputFileLocation_key :: Lens' S3InputFileLocation (Maybe Text)

-- | Specifies the key-value pair that are assigned to a file during the
--   execution of a Tagging step.
--   
--   <i>See:</i> <a>newS3Tag</a> smart constructor.
data S3Tag
S3Tag' :: Text -> Text -> S3Tag

-- | The name assigned to the tag that you create.
[$sel:key:S3Tag'] :: S3Tag -> Text

-- | The value that corresponds to the key.
[$sel:value:S3Tag'] :: S3Tag -> Text

-- | Create a value of <a>S3Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Tag'</a>, <a>s3Tag_key</a> - The name assigned to the
--   tag that you create.
--   
--   <a>$sel:value:S3Tag'</a>, <a>s3Tag_value</a> - The value that
--   corresponds to the key.
newS3Tag :: Text -> Text -> S3Tag

-- | The name assigned to the tag that you create.
s3Tag_key :: Lens' S3Tag Text

-- | The value that corresponds to the key.
s3Tag_value :: Lens' S3Tag Text

-- | A container object for the session details associated with a workflow.
--   
--   <i>See:</i> <a>newServiceMetadata</a> smart constructor.
data ServiceMetadata
ServiceMetadata' :: UserDetails -> ServiceMetadata

-- | The Server ID (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and
--   user (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
[$sel:userDetails:ServiceMetadata'] :: ServiceMetadata -> UserDetails

-- | Create a value of <a>ServiceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userDetails:ServiceMetadata'</a>,
--   <a>serviceMetadata_userDetails</a> - The Server ID
--   (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and user
--   (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
newServiceMetadata :: UserDetails -> ServiceMetadata

-- | The Server ID (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and
--   user (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
serviceMetadata_userDetails :: Lens' ServiceMetadata UserDetails

-- | Provides information about the public Secure Shell (SSH) key that is
--   associated with a user account for the specific file transfer
--   protocol-enabled server (as identified by <tt>ServerId</tt>). The
--   information returned includes the date the key was imported, the
--   public key contents, and the public key ID. A user can store more than
--   one SSH public key associated with their user name on a specific
--   server.
--   
--   <i>See:</i> <a>newSshPublicKey</a> smart constructor.
data SshPublicKey
SshPublicKey' :: POSIX -> Text -> Text -> SshPublicKey

-- | Specifies the date that the public key was added to the user account.
[$sel:dateImported:SshPublicKey'] :: SshPublicKey -> POSIX

-- | Specifies the content of the SSH public key as specified by the
--   <tt>PublicKeyId</tt>.
[$sel:sshPublicKeyBody:SshPublicKey'] :: SshPublicKey -> Text

-- | Specifies the <tt>SshPublicKeyId</tt> parameter contains the
--   identifier of the public key.
[$sel:sshPublicKeyId:SshPublicKey'] :: SshPublicKey -> Text

-- | Create a value of <a>SshPublicKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dateImported:SshPublicKey'</a>,
--   <a>sshPublicKey_dateImported</a> - Specifies the date that the public
--   key was added to the user account.
--   
--   <a>$sel:sshPublicKeyBody:SshPublicKey'</a>,
--   <a>sshPublicKey_sshPublicKeyBody</a> - Specifies the content of the
--   SSH public key as specified by the <tt>PublicKeyId</tt>.
--   
--   <a>$sel:sshPublicKeyId:SshPublicKey'</a>,
--   <a>sshPublicKey_sshPublicKeyId</a> - Specifies the
--   <tt>SshPublicKeyId</tt> parameter contains the identifier of the
--   public key.
newSshPublicKey :: UTCTime -> Text -> Text -> SshPublicKey

-- | Specifies the date that the public key was added to the user account.
sshPublicKey_dateImported :: Lens' SshPublicKey UTCTime

-- | Specifies the content of the SSH public key as specified by the
--   <tt>PublicKeyId</tt>.
sshPublicKey_sshPublicKeyBody :: Lens' SshPublicKey Text

-- | Specifies the <tt>SshPublicKeyId</tt> parameter contains the
--   identifier of the public key.
sshPublicKey_sshPublicKeyId :: Lens' SshPublicKey Text

-- | Creates a key-value pair for a specific resource. Tags are metadata
--   that you can use to search for and group a resource for various
--   purposes. You can apply tags to servers, users, and roles. A tag key
--   can take more than one value. For example, to group servers for
--   accounting purposes, you might create a tag called <tt>Group</tt> and
--   assign the values <tt>Research</tt> and <tt>Accounting</tt> to that
--   group.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The name assigned to the tag that you create.
[$sel:key:Tag'] :: Tag -> Text

-- | Contains one or more values that you assigned to the key name you
--   create.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The name assigned to the tag
--   that you create.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - Contains one or more values
--   that you assigned to the key name you create.
newTag :: Text -> Text -> Tag

-- | The name assigned to the tag that you create.
tag_key :: Lens' Tag Text

-- | Contains one or more values that you assigned to the key name you
--   create.
tag_value :: Lens' Tag Text

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   The key/value pairs used to tag a file during the execution of a
--   workflow step.
--   
--   <i>See:</i> <a>newTagStepDetails</a> smart constructor.
data TagStepDetails
TagStepDetails' :: Maybe Text -> Maybe (NonEmpty S3Tag) -> TagStepDetails

-- | The name of the step, used as an identifier.
[$sel:name:TagStepDetails'] :: TagStepDetails -> Maybe Text

-- | Array that contains from 1 to 10 key/value pairs.
[$sel:tags:TagStepDetails'] :: TagStepDetails -> Maybe (NonEmpty S3Tag)

-- | Create a value of <a>TagStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TagStepDetails'</a>, <a>tagStepDetails_name</a> - The
--   name of the step, used as an identifier.
--   
--   <a>$sel:tags:TagStepDetails'</a>, <a>tagStepDetails_tags</a> - Array
--   that contains from 1 to 10 key/value pairs.
newTagStepDetails :: TagStepDetails

-- | The name of the step, used as an identifier.
tagStepDetails_name :: Lens' TagStepDetails (Maybe Text)

-- | Array that contains from 1 to 10 key/value pairs.
tagStepDetails_tags :: Lens' TagStepDetails (Maybe (NonEmpty S3Tag))

-- | Specifies the user name, server ID, and session ID for a workflow.
--   
--   <i>See:</i> <a>newUserDetails</a> smart constructor.
data UserDetails
UserDetails' :: Maybe Text -> Text -> Text -> UserDetails

-- | The system-assigned unique identifier for a session that corresponds
--   to the workflow.
[$sel:sessionId:UserDetails'] :: UserDetails -> Maybe Text

-- | A unique string that identifies a user account associated with a
--   server.
[$sel:userName:UserDetails'] :: UserDetails -> Text

-- | The system-assigned unique identifier for a Transfer server instance.
[$sel:serverId:UserDetails'] :: UserDetails -> Text

-- | Create a value of <a>UserDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionId:UserDetails'</a>, <a>userDetails_sessionId</a> - The
--   system-assigned unique identifier for a session that corresponds to
--   the workflow.
--   
--   <a>$sel:userName:UserDetails'</a>, <a>userDetails_userName</a> - A
--   unique string that identifies a user account associated with a server.
--   
--   <a>$sel:serverId:UserDetails'</a>, <a>userDetails_serverId</a> - The
--   system-assigned unique identifier for a Transfer server instance.
newUserDetails :: Text -> Text -> UserDetails

-- | The system-assigned unique identifier for a session that corresponds
--   to the workflow.
userDetails_sessionId :: Lens' UserDetails (Maybe Text)

-- | A unique string that identifies a user account associated with a
--   server.
userDetails_userName :: Lens' UserDetails Text

-- | The system-assigned unique identifier for a Transfer server instance.
userDetails_serverId :: Lens' UserDetails Text

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
--   
--   <i>See:</i> <a>newWorkflowDetail</a> smart constructor.
data WorkflowDetail
WorkflowDetail' :: Text -> Text -> WorkflowDetail

-- | A unique identifier for the workflow.
[$sel:workflowId:WorkflowDetail'] :: WorkflowDetail -> Text

-- | Includes the necessary permissions for S3, EFS, and Lambda operations
--   that Transfer can assume, so that all workflow steps can operate on
--   the required resources
[$sel:executionRole:WorkflowDetail'] :: WorkflowDetail -> Text

-- | Create a value of <a>WorkflowDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:WorkflowDetail'</a>,
--   <a>workflowDetail_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:executionRole:WorkflowDetail'</a>,
--   <a>workflowDetail_executionRole</a> - Includes the necessary
--   permissions for S3, EFS, and Lambda operations that Transfer can
--   assume, so that all workflow steps can operate on the required
--   resources
newWorkflowDetail :: Text -> Text -> WorkflowDetail

-- | A unique identifier for the workflow.
workflowDetail_workflowId :: Lens' WorkflowDetail Text

-- | Includes the necessary permissions for S3, EFS, and Lambda operations
--   that Transfer can assume, so that all workflow steps can operate on
--   the required resources
workflowDetail_executionRole :: Lens' WorkflowDetail Text

-- | Container for the <tt>WorkflowDetail</tt> data type. It is used by
--   actions that trigger a workflow to begin execution.
--   
--   <i>See:</i> <a>newWorkflowDetails</a> smart constructor.
data WorkflowDetails
WorkflowDetails' :: [WorkflowDetail] -> WorkflowDetails

-- | A trigger that starts a workflow: the workflow begins to execute after
--   a file is uploaded.
[$sel:onUpload:WorkflowDetails'] :: WorkflowDetails -> [WorkflowDetail]

-- | Create a value of <a>WorkflowDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onUpload:WorkflowDetails'</a>, <a>workflowDetails_onUpload</a>
--   - A trigger that starts a workflow: the workflow begins to execute
--   after a file is uploaded.
newWorkflowDetails :: WorkflowDetails

-- | A trigger that starts a workflow: the workflow begins to execute after
--   a file is uploaded.
workflowDetails_onUpload :: Lens' WorkflowDetails [WorkflowDetail]

-- | The basic building block of a workflow.
--   
--   <i>See:</i> <a>newWorkflowStep</a> smart constructor.
data WorkflowStep
WorkflowStep' :: Maybe TagStepDetails -> Maybe DeleteStepDetails -> Maybe CopyStepDetails -> Maybe WorkflowStepType -> Maybe CustomStepDetails -> WorkflowStep

-- | Details for a step that creates one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
[$sel:tagStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe TagStepDetails

-- | Details for a step that deletes the file.
[$sel:deleteStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe DeleteStepDetails

-- | Details for a step that performs a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
[$sel:copyStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe CopyStepDetails

-- | Currently, the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
[$sel:type':WorkflowStep'] :: WorkflowStep -> Maybe WorkflowStepType

-- | Details for a step that invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
[$sel:customStepDetails:WorkflowStep'] :: WorkflowStep -> Maybe CustomStepDetails

-- | Create a value of <a>WorkflowStep</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_tagStepDetails</a> - Details for a step that creates
--   one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
--   
--   <a>$sel:deleteStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_deleteStepDetails</a> - Details for a step that
--   deletes the file.
--   
--   <a>$sel:copyStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_copyStepDetails</a> - Details for a step that performs
--   a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
--   
--   <a>$sel:type':WorkflowStep'</a>, <a>workflowStep_type</a> - Currently,
--   the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   <a>$sel:customStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_customStepDetails</a> - Details for a step that
--   invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
newWorkflowStep :: WorkflowStep

-- | Details for a step that creates one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
workflowStep_tagStepDetails :: Lens' WorkflowStep (Maybe TagStepDetails)

-- | Details for a step that deletes the file.
workflowStep_deleteStepDetails :: Lens' WorkflowStep (Maybe DeleteStepDetails)

-- | Details for a step that performs a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
workflowStep_copyStepDetails :: Lens' WorkflowStep (Maybe CopyStepDetails)

-- | Currently, the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
workflowStep_type :: Lens' WorkflowStep (Maybe WorkflowStepType)

-- | Details for a step that invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
workflowStep_customStepDetails :: Lens' WorkflowStep (Maybe CustomStepDetails)


-- | If the <tt>IdentityProviderType</tt> of a file transfer
--   protocol-enabled server is <tt>AWS_DIRECTORY_SERVICE</tt> or
--   <tt>API_Gateway</tt>, tests whether your identity provider is set up
--   successfully. We highly recommend that you call this operation to test
--   your authentication method as soon as you create your server. By doing
--   so, you can troubleshoot issues with the identity provider integration
--   to ensure that your users can successfully use the service.
--   
--   The <tt>ServerId</tt> and <tt>UserName</tt> parameters are required.
--   The <tt>ServerProtocol</tt>, <tt>SourceIp</tt>, and
--   <tt>UserPassword</tt> are all optional.
--   
--   You cannot use <tt>TestIdentityProvider</tt> if the
--   <tt>IdentityProviderType</tt> of your server is
--   <tt>SERVICE_MANAGED</tt>.
--   
--   <ul>
--   <li>If you provide any incorrect values for any parameters, the
--   <tt>Response</tt> field is empty.</li>
--   <li>If you provide a server ID for a server that uses service-managed
--   users, you get an error:<pre> An error occurred
--   (InvalidRequestException) when calling the TestIdentityProvider
--   operation: s-server-ID not configured for external auth</pre></li>
--   <li>If you enter a Server ID for the <tt>--server-id</tt> parameter
--   that does not identify an actual Transfer server, you receive the
--   following error:<pre>An error occurred (ResourceNotFoundException)
--   when calling the TestIdentityProvider operation: Unknown
--   server</pre></li>
--   </ul>
module Amazonka.Transfer.TestIdentityProvider

-- | <i>See:</i> <a>newTestIdentityProvider</a> smart constructor.
data TestIdentityProvider
TestIdentityProvider' :: Maybe Protocol -> Maybe (Sensitive Text) -> Maybe Text -> Text -> Text -> TestIdentityProvider

-- | The type of file transfer protocol to be tested.
--   
--   The available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP)</li>
--   <li>File Transfer Protocol Secure (FTPS)</li>
--   <li>File Transfer Protocol (FTP)</li>
--   </ul>
[$sel:serverProtocol:TestIdentityProvider'] :: TestIdentityProvider -> Maybe Protocol

-- | The password of the user account to be tested.
[$sel:userPassword:TestIdentityProvider'] :: TestIdentityProvider -> Maybe (Sensitive Text)

-- | The source IP address of the user account to be tested.
[$sel:sourceIp:TestIdentityProvider'] :: TestIdentityProvider -> Maybe Text

-- | A system-assigned identifier for a specific server. That server's user
--   authentication method is tested with a user name and password.
[$sel:serverId:TestIdentityProvider'] :: TestIdentityProvider -> Text

-- | The name of the user account to be tested.
[$sel:userName:TestIdentityProvider'] :: TestIdentityProvider -> Text

-- | Create a value of <a>TestIdentityProvider</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverProtocol:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_serverProtocol</a> - The type of file transfer
--   protocol to be tested.
--   
--   The available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP)</li>
--   <li>File Transfer Protocol Secure (FTPS)</li>
--   <li>File Transfer Protocol (FTP)</li>
--   </ul>
--   
--   <a>$sel:userPassword:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_userPassword</a> - The password of the user
--   account to be tested.
--   
--   <a>$sel:sourceIp:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_sourceIp</a> - The source IP address of the
--   user account to be tested.
--   
--   <a>$sel:serverId:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_serverId</a> - A system-assigned identifier
--   for a specific server. That server's user authentication method is
--   tested with a user name and password.
--   
--   <a>$sel:userName:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_userName</a> - The name of the user account to
--   be tested.
newTestIdentityProvider :: Text -> Text -> TestIdentityProvider

-- | The type of file transfer protocol to be tested.
--   
--   The available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP)</li>
--   <li>File Transfer Protocol Secure (FTPS)</li>
--   <li>File Transfer Protocol (FTP)</li>
--   </ul>
testIdentityProvider_serverProtocol :: Lens' TestIdentityProvider (Maybe Protocol)

-- | The password of the user account to be tested.
testIdentityProvider_userPassword :: Lens' TestIdentityProvider (Maybe Text)

-- | The source IP address of the user account to be tested.
testIdentityProvider_sourceIp :: Lens' TestIdentityProvider (Maybe Text)

-- | A system-assigned identifier for a specific server. That server's user
--   authentication method is tested with a user name and password.
testIdentityProvider_serverId :: Lens' TestIdentityProvider Text

-- | The name of the user account to be tested.
testIdentityProvider_userName :: Lens' TestIdentityProvider Text

-- | <i>See:</i> <a>newTestIdentityProviderResponse</a> smart constructor.
data TestIdentityProviderResponse
TestIdentityProviderResponse' :: Maybe Text -> Maybe Text -> Int -> Int -> Text -> TestIdentityProviderResponse

-- | The response that is returned from your API Gateway.
[$sel:response:TestIdentityProviderResponse'] :: TestIdentityProviderResponse -> Maybe Text

-- | A message that indicates whether the test was successful or not.
[$sel:message:TestIdentityProviderResponse'] :: TestIdentityProviderResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:TestIdentityProviderResponse'] :: TestIdentityProviderResponse -> Int

-- | The HTTP status code that is the response from your API Gateway.
[$sel:statusCode:TestIdentityProviderResponse'] :: TestIdentityProviderResponse -> Int

-- | The endpoint of the service used to authenticate a user.
[$sel:url:TestIdentityProviderResponse'] :: TestIdentityProviderResponse -> Text

-- | Create a value of <a>TestIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:response:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_response</a> - The response that is
--   returned from your API Gateway.
--   
--   <a>$sel:message:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_message</a> - A message that indicates
--   whether the test was successful or not.
--   
--   <a>$sel:httpStatus:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:statusCode:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_statusCode</a> - The HTTP status code
--   that is the response from your API Gateway.
--   
--   <a>$sel:url:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_url</a> - The endpoint of the service
--   used to authenticate a user.
newTestIdentityProviderResponse :: Int -> Int -> Text -> TestIdentityProviderResponse

-- | The response that is returned from your API Gateway.
testIdentityProviderResponse_response :: Lens' TestIdentityProviderResponse (Maybe Text)

-- | A message that indicates whether the test was successful or not.
testIdentityProviderResponse_message :: Lens' TestIdentityProviderResponse (Maybe Text)

-- | The response's http status code.
testIdentityProviderResponse_httpStatus :: Lens' TestIdentityProviderResponse Int

-- | The HTTP status code that is the response from your API Gateway.
testIdentityProviderResponse_statusCode :: Lens' TestIdentityProviderResponse Int

-- | The endpoint of the service used to authenticate a user.
testIdentityProviderResponse_url :: Lens' TestIdentityProviderResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance GHC.Show.Show Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance GHC.Classes.Eq Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance GHC.Generics.Generic Amazonka.Transfer.TestIdentityProvider.TestIdentityProviderResponse
instance GHC.Show.Show Amazonka.Transfer.TestIdentityProvider.TestIdentityProviderResponse
instance GHC.Read.Read Amazonka.Transfer.TestIdentityProvider.TestIdentityProviderResponse
instance GHC.Classes.Eq Amazonka.Transfer.TestIdentityProvider.TestIdentityProviderResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance Control.DeepSeq.NFData Amazonka.Transfer.TestIdentityProvider.TestIdentityProviderResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance Control.DeepSeq.NFData Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.TestIdentityProvider.TestIdentityProvider


-- | Attaches a key-value pair to a resource, as identified by its Amazon
--   Resource Name (ARN). Resources are users, servers, roles, and other
--   entities.
--   
--   There is no response returned from this call.
module Amazonka.Transfer.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | An Amazon Resource Name (ARN) for a specific Amazon Web Services
--   resource, such as a server, user, or role.
[$sel:arn:TagResource'] :: TagResource -> Text

-- | Key-value pairs assigned to ARNs that you can use to group and search
--   for resources by type. You can attach this metadata to user accounts
--   for any purpose.
[$sel:tags:TagResource'] :: TagResource -> NonEmpty Tag

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:TagResource'</a>, <a>tagResource_arn</a> - An Amazon
--   Resource Name (ARN) for a specific Amazon Web Services resource, such
--   as a server, user, or role.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Key-value
--   pairs assigned to ARNs that you can use to group and search for
--   resources by type. You can attach this metadata to user accounts for
--   any purpose.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | An Amazon Resource Name (ARN) for a specific Amazon Web Services
--   resource, such as a server, user, or role.
tagResource_arn :: Lens' TagResource Text

-- | Key-value pairs assigned to ARNs that you can use to group and search
--   for resources by type. You can attach this metadata to user accounts
--   for any purpose.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.Transfer.TagResource.TagResource
instance GHC.Show.Show Amazonka.Transfer.TagResource.TagResource
instance GHC.Read.Read Amazonka.Transfer.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.Transfer.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.Transfer.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.Transfer.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.Transfer.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.Transfer.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Transfer.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Transfer.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.TagResource.TagResource


-- | Changes the state of a file transfer protocol-enabled server from
--   <tt>ONLINE</tt> to <tt>OFFLINE</tt>. An <tt>OFFLINE</tt> server cannot
--   accept and process file transfer jobs. Information tied to your
--   server, such as server and user properties, are not affected by
--   stopping your server.
--   
--   Stopping the server will not reduce or impact your file transfer
--   protocol endpoint billing; you must delete the server to stop being
--   billed.
--   
--   The state of <tt>STOPPING</tt> indicates that the server is in an
--   intermediate state, either not fully able to respond, or not fully
--   offline. The values of <tt>STOP_FAILED</tt> can indicate an error
--   condition.
--   
--   No response is returned from this call.
module Amazonka.Transfer.StopServer

-- | <i>See:</i> <a>newStopServer</a> smart constructor.
data StopServer
StopServer' :: Text -> StopServer

-- | A system-assigned unique identifier for a server that you stopped.
[$sel:serverId:StopServer'] :: StopServer -> Text

-- | Create a value of <a>StopServer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:StopServer'</a>, <a>stopServer_serverId</a> - A
--   system-assigned unique identifier for a server that you stopped.
newStopServer :: Text -> StopServer

-- | A system-assigned unique identifier for a server that you stopped.
stopServer_serverId :: Lens' StopServer Text

-- | <i>See:</i> <a>newStopServerResponse</a> smart constructor.
data StopServerResponse
StopServerResponse' :: StopServerResponse

-- | Create a value of <a>StopServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStopServerResponse :: StopServerResponse
instance GHC.Generics.Generic Amazonka.Transfer.StopServer.StopServer
instance GHC.Show.Show Amazonka.Transfer.StopServer.StopServer
instance GHC.Read.Read Amazonka.Transfer.StopServer.StopServer
instance GHC.Classes.Eq Amazonka.Transfer.StopServer.StopServer
instance GHC.Generics.Generic Amazonka.Transfer.StopServer.StopServerResponse
instance GHC.Show.Show Amazonka.Transfer.StopServer.StopServerResponse
instance GHC.Read.Read Amazonka.Transfer.StopServer.StopServerResponse
instance GHC.Classes.Eq Amazonka.Transfer.StopServer.StopServerResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.StopServer.StopServer
instance Control.DeepSeq.NFData Amazonka.Transfer.StopServer.StopServerResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.StopServer.StopServer
instance Control.DeepSeq.NFData Amazonka.Transfer.StopServer.StopServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.StopServer.StopServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.StopServer.StopServer
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.StopServer.StopServer
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.StopServer.StopServer


-- | Changes the state of a file transfer protocol-enabled server from
--   <tt>OFFLINE</tt> to <tt>ONLINE</tt>. It has no impact on a server that
--   is already <tt>ONLINE</tt>. An <tt>ONLINE</tt> server can accept and
--   process file transfer jobs.
--   
--   The state of <tt>STARTING</tt> indicates that the server is in an
--   intermediate state, either not fully able to respond, or not fully
--   online. The values of <tt>START_FAILED</tt> can indicate an error
--   condition.
--   
--   No response is returned from this call.
module Amazonka.Transfer.StartServer

-- | <i>See:</i> <a>newStartServer</a> smart constructor.
data StartServer
StartServer' :: Text -> StartServer

-- | A system-assigned unique identifier for a server that you start.
[$sel:serverId:StartServer'] :: StartServer -> Text

-- | Create a value of <a>StartServer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:StartServer'</a>, <a>startServer_serverId</a> - A
--   system-assigned unique identifier for a server that you start.
newStartServer :: Text -> StartServer

-- | A system-assigned unique identifier for a server that you start.
startServer_serverId :: Lens' StartServer Text

-- | <i>See:</i> <a>newStartServerResponse</a> smart constructor.
data StartServerResponse
StartServerResponse' :: StartServerResponse

-- | Create a value of <a>StartServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartServerResponse :: StartServerResponse
instance GHC.Generics.Generic Amazonka.Transfer.StartServer.StartServer
instance GHC.Show.Show Amazonka.Transfer.StartServer.StartServer
instance GHC.Read.Read Amazonka.Transfer.StartServer.StartServer
instance GHC.Classes.Eq Amazonka.Transfer.StartServer.StartServer
instance GHC.Generics.Generic Amazonka.Transfer.StartServer.StartServerResponse
instance GHC.Show.Show Amazonka.Transfer.StartServer.StartServerResponse
instance GHC.Read.Read Amazonka.Transfer.StartServer.StartServerResponse
instance GHC.Classes.Eq Amazonka.Transfer.StartServer.StartServerResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.StartServer.StartServer
instance Control.DeepSeq.NFData Amazonka.Transfer.StartServer.StartServerResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.StartServer.StartServer
instance Control.DeepSeq.NFData Amazonka.Transfer.StartServer.StartServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.StartServer.StartServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.StartServer.StartServer
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.StartServer.StartServer
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.StartServer.StartServer


-- | Sends a callback for asynchronous custom steps.
--   
--   The <tt>ExecutionId</tt>, <tt>WorkflowId</tt>, and <tt>Token</tt> are
--   passed to the target resource during execution of a custom step of a
--   workflow. You must include those with their callback as well as
--   providing a status.
module Amazonka.Transfer.SendWorkflowStepState

-- | <i>See:</i> <a>newSendWorkflowStepState</a> smart constructor.
data SendWorkflowStepState
SendWorkflowStepState' :: Text -> Text -> Text -> CustomStepStatus -> SendWorkflowStepState

-- | A unique identifier for the workflow.
[$sel:workflowId:SendWorkflowStepState'] :: SendWorkflowStepState -> Text

-- | A unique identifier for the execution of a workflow.
[$sel:executionId:SendWorkflowStepState'] :: SendWorkflowStepState -> Text

-- | Used to distinguish between multiple callbacks for multiple Lambda
--   steps within the same execution.
[$sel:token:SendWorkflowStepState'] :: SendWorkflowStepState -> Text

-- | Indicates whether the specified step succeeded or failed.
[$sel:status:SendWorkflowStepState'] :: SendWorkflowStepState -> CustomStepStatus

-- | Create a value of <a>SendWorkflowStepState</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:executionId:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:token:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_token</a> - Used to distinguish between
--   multiple callbacks for multiple Lambda steps within the same
--   execution.
--   
--   <a>$sel:status:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_status</a> - Indicates whether the specified
--   step succeeded or failed.
newSendWorkflowStepState :: Text -> Text -> Text -> CustomStepStatus -> SendWorkflowStepState

-- | A unique identifier for the workflow.
sendWorkflowStepState_workflowId :: Lens' SendWorkflowStepState Text

-- | A unique identifier for the execution of a workflow.
sendWorkflowStepState_executionId :: Lens' SendWorkflowStepState Text

-- | Used to distinguish between multiple callbacks for multiple Lambda
--   steps within the same execution.
sendWorkflowStepState_token :: Lens' SendWorkflowStepState Text

-- | Indicates whether the specified step succeeded or failed.
sendWorkflowStepState_status :: Lens' SendWorkflowStepState CustomStepStatus

-- | <i>See:</i> <a>newSendWorkflowStepStateResponse</a> smart constructor.
data SendWorkflowStepStateResponse
SendWorkflowStepStateResponse' :: Int -> SendWorkflowStepStateResponse

-- | The response's http status code.
[$sel:httpStatus:SendWorkflowStepStateResponse'] :: SendWorkflowStepStateResponse -> Int

-- | Create a value of <a>SendWorkflowStepStateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendWorkflowStepStateResponse'</a>,
--   <a>sendWorkflowStepStateResponse_httpStatus</a> - The response's http
--   status code.
newSendWorkflowStepStateResponse :: Int -> SendWorkflowStepStateResponse

-- | The response's http status code.
sendWorkflowStepStateResponse_httpStatus :: Lens' SendWorkflowStepStateResponse Int
instance GHC.Generics.Generic Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance GHC.Show.Show Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance GHC.Read.Read Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance GHC.Classes.Eq Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance GHC.Generics.Generic Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepStateResponse
instance GHC.Show.Show Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepStateResponse
instance GHC.Read.Read Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepStateResponse
instance GHC.Classes.Eq Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepStateResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance Control.DeepSeq.NFData Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepStateResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance Control.DeepSeq.NFData Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.SendWorkflowStepState.SendWorkflowStepState


-- | Lists all of your workflows.
module Amazonka.Transfer.ListWorkflows

-- | <i>See:</i> <a>newListWorkflows</a> smart constructor.
data ListWorkflows
ListWorkflows' :: Maybe Text -> Maybe Natural -> ListWorkflows

-- | <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
[$sel:nextToken:ListWorkflows'] :: ListWorkflows -> Maybe Text

-- | Specifies the maximum number of workflows to return.
[$sel:maxResults:ListWorkflows'] :: ListWorkflows -> Maybe Natural

-- | Create a value of <a>ListWorkflows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>, <a>listWorkflows_nextToken</a> -
--   <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
--   
--   <a>$sel:maxResults:ListWorkflows'</a>, <a>listWorkflows_maxResults</a>
--   - Specifies the maximum number of workflows to return.
newListWorkflows :: ListWorkflows

-- | <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
listWorkflows_nextToken :: Lens' ListWorkflows (Maybe Text)

-- | Specifies the maximum number of workflows to return.
listWorkflows_maxResults :: Lens' ListWorkflows (Maybe Natural)

-- | <i>See:</i> <a>newListWorkflowsResponse</a> smart constructor.
data ListWorkflowsResponse
ListWorkflowsResponse' :: Maybe Text -> Int -> [ListedWorkflow] -> ListWorkflowsResponse

-- | <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
[$sel:nextToken:ListWorkflowsResponse'] :: ListWorkflowsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListWorkflowsResponse'] :: ListWorkflowsResponse -> Int

-- | Returns the <tt>Arn</tt>, <tt>WorkflowId</tt>, and
--   <tt>Description</tt> for each workflow.
[$sel:workflows:ListWorkflowsResponse'] :: ListWorkflowsResponse -> [ListedWorkflow]

-- | Create a value of <a>ListWorkflowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>,
--   <a>listWorkflowsResponse_nextToken</a> - <tt>ListWorkflows</tt>
--   returns the <tt>NextToken</tt> parameter in the output. You can then
--   pass the <tt>NextToken</tt> parameter in a subsequent command to
--   continue listing additional workflows.
--   
--   <a>$sel:httpStatus:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:workflows:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_workflows</a> - Returns the <tt>Arn</tt>,
--   <tt>WorkflowId</tt>, and <tt>Description</tt> for each workflow.
newListWorkflowsResponse :: Int -> ListWorkflowsResponse

-- | <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
listWorkflowsResponse_nextToken :: Lens' ListWorkflowsResponse (Maybe Text)

-- | The response's http status code.
listWorkflowsResponse_httpStatus :: Lens' ListWorkflowsResponse Int

-- | Returns the <tt>Arn</tt>, <tt>WorkflowId</tt>, and
--   <tt>Description</tt> for each workflow.
listWorkflowsResponse_workflows :: Lens' ListWorkflowsResponse [ListedWorkflow]
instance GHC.Generics.Generic Amazonka.Transfer.ListWorkflows.ListWorkflows
instance GHC.Show.Show Amazonka.Transfer.ListWorkflows.ListWorkflows
instance GHC.Read.Read Amazonka.Transfer.ListWorkflows.ListWorkflows
instance GHC.Classes.Eq Amazonka.Transfer.ListWorkflows.ListWorkflows
instance GHC.Generics.Generic Amazonka.Transfer.ListWorkflows.ListWorkflowsResponse
instance GHC.Show.Show Amazonka.Transfer.ListWorkflows.ListWorkflowsResponse
instance GHC.Read.Read Amazonka.Transfer.ListWorkflows.ListWorkflowsResponse
instance GHC.Classes.Eq Amazonka.Transfer.ListWorkflows.ListWorkflowsResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ListWorkflows.ListWorkflows
instance Control.DeepSeq.NFData Amazonka.Transfer.ListWorkflows.ListWorkflowsResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ListWorkflows.ListWorkflows
instance Control.DeepSeq.NFData Amazonka.Transfer.ListWorkflows.ListWorkflows
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ListWorkflows.ListWorkflows
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ListWorkflows.ListWorkflows
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ListWorkflows.ListWorkflows
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ListWorkflows.ListWorkflows


-- | Lists the users for a file transfer protocol-enabled server that you
--   specify by passing the <tt>ServerId</tt> parameter.
module Amazonka.Transfer.ListUsers

-- | <i>See:</i> <a>newListUsers</a> smart constructor.
data ListUsers
ListUsers' :: Maybe Text -> Maybe Natural -> Text -> ListUsers

-- | When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
[$sel:nextToken:ListUsers'] :: ListUsers -> Maybe Text

-- | Specifies the number of users to return as a response to the
--   <tt>ListUsers</tt> request.
[$sel:maxResults:ListUsers'] :: ListUsers -> Maybe Natural

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
[$sel:serverId:ListUsers'] :: ListUsers -> Text

-- | Create a value of <a>ListUsers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsers_nextToken</a> - When
--   you can get additional results from the <tt>ListUsers</tt> call, a
--   <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
--   
--   <a>$sel:maxResults:ListUsers'</a>, <a>listUsers_maxResults</a> -
--   Specifies the number of users to return as a response to the
--   <tt>ListUsers</tt> request.
--   
--   <a>$sel:serverId:ListUsers'</a>, <a>listUsers_serverId</a> - A
--   system-assigned unique identifier for a server that has users assigned
--   to it.
newListUsers :: Text -> ListUsers

-- | When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
listUsers_nextToken :: Lens' ListUsers (Maybe Text)

-- | Specifies the number of users to return as a response to the
--   <tt>ListUsers</tt> request.
listUsers_maxResults :: Lens' ListUsers (Maybe Natural)

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
listUsers_serverId :: Lens' ListUsers Text

-- | <i>See:</i> <a>newListUsersResponse</a> smart constructor.
data ListUsersResponse
ListUsersResponse' :: Maybe Text -> Int -> Text -> [ListedUser] -> ListUsersResponse

-- | When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
[$sel:nextToken:ListUsersResponse'] :: ListUsersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListUsersResponse'] :: ListUsersResponse -> Int

-- | A system-assigned unique identifier for a server that the users are
--   assigned to.
[$sel:serverId:ListUsersResponse'] :: ListUsersResponse -> Text

-- | Returns the user accounts and their properties for the
--   <tt>ServerId</tt> value that you specify.
[$sel:users:ListUsersResponse'] :: ListUsersResponse -> [ListedUser]

-- | Create a value of <a>ListUsersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsersResponse_nextToken</a> -
--   When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
--   
--   <a>$sel:httpStatus:ListUsersResponse'</a>,
--   <a>listUsersResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:serverId:ListUsers'</a>, <a>listUsersResponse_serverId</a> - A
--   system-assigned unique identifier for a server that the users are
--   assigned to.
--   
--   <a>$sel:users:ListUsersResponse'</a>, <a>listUsersResponse_users</a> -
--   Returns the user accounts and their properties for the
--   <tt>ServerId</tt> value that you specify.
newListUsersResponse :: Int -> Text -> ListUsersResponse

-- | When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
listUsersResponse_nextToken :: Lens' ListUsersResponse (Maybe Text)

-- | The response's http status code.
listUsersResponse_httpStatus :: Lens' ListUsersResponse Int

-- | A system-assigned unique identifier for a server that the users are
--   assigned to.
listUsersResponse_serverId :: Lens' ListUsersResponse Text

-- | Returns the user accounts and their properties for the
--   <tt>ServerId</tt> value that you specify.
listUsersResponse_users :: Lens' ListUsersResponse [ListedUser]
instance GHC.Generics.Generic Amazonka.Transfer.ListUsers.ListUsers
instance GHC.Show.Show Amazonka.Transfer.ListUsers.ListUsers
instance GHC.Read.Read Amazonka.Transfer.ListUsers.ListUsers
instance GHC.Classes.Eq Amazonka.Transfer.ListUsers.ListUsers
instance GHC.Generics.Generic Amazonka.Transfer.ListUsers.ListUsersResponse
instance GHC.Show.Show Amazonka.Transfer.ListUsers.ListUsersResponse
instance GHC.Read.Read Amazonka.Transfer.ListUsers.ListUsersResponse
instance GHC.Classes.Eq Amazonka.Transfer.ListUsers.ListUsersResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ListUsers.ListUsers
instance Control.DeepSeq.NFData Amazonka.Transfer.ListUsers.ListUsersResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ListUsers.ListUsers
instance Control.DeepSeq.NFData Amazonka.Transfer.ListUsers.ListUsers
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ListUsers.ListUsers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ListUsers.ListUsers
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ListUsers.ListUsers
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ListUsers.ListUsers


-- | Lists all of the tags associated with the Amazon Resource Name (ARN)
--   that you specify. The resource can be a user, server, or role.
module Amazonka.Transfer.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | When you request additional results from the
--   <tt>ListTagsForResource</tt> operation, a <tt>NextToken</tt> parameter
--   is returned in the input. You can then pass in a subsequent command to
--   the <tt>NextToken</tt> parameter to continue listing additional tags.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | Specifies the number of tags to return as a response to the
--   <tt>ListTagsForResource</tt> request.
[$sel:maxResults:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | Requests the tags associated with a particular Amazon Resource Name
--   (ARN). An ARN is an identifier for a specific Amazon Web Services
--   resource, such as a server, user, or role.
[$sel:arn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - When you request additional
--   results from the <tt>ListTagsForResource</tt> operation, a
--   <tt>NextToken</tt> parameter is returned in the input. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional tags.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - Specifies the number of tags
--   to return as a response to the <tt>ListTagsForResource</tt> request.
--   
--   <a>$sel:arn:ListTagsForResource'</a>, <a>listTagsForResource_arn</a> -
--   Requests the tags associated with a particular Amazon Resource Name
--   (ARN). An ARN is an identifier for a specific Amazon Web Services
--   resource, such as a server, user, or role.
newListTagsForResource :: Text -> ListTagsForResource

-- | When you request additional results from the
--   <tt>ListTagsForResource</tt> operation, a <tt>NextToken</tt> parameter
--   is returned in the input. You can then pass in a subsequent command to
--   the <tt>NextToken</tt> parameter to continue listing additional tags.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | Specifies the number of tags to return as a response to the
--   <tt>ListTagsForResource</tt> request.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | Requests the tags associated with a particular Amazon Resource Name
--   (ARN). An ARN is an identifier for a specific Amazon Web Services
--   resource, such as a server, user, or role.
listTagsForResource_arn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | The ARN you specified to list the tags of.
[$sel:arn:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | When you can get additional results from the
--   <tt>ListTagsForResource</tt> call, a <tt>NextToken</tt> parameter is
--   returned in the output. You can then pass in a subsequent command to
--   the <tt>NextToken</tt> parameter to continue listing additional tags.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | Key-value pairs that are assigned to a resource, usually for the
--   purpose of grouping and searching for items. Tags are metadata that
--   you define.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (NonEmpty Tag)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_arn</a> - The ARN you specified to list
--   the tags of.
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - When you can get
--   additional results from the <tt>ListTagsForResource</tt> call, a
--   <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional tags.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Key-value pairs that are
--   assigned to a resource, usually for the purpose of grouping and
--   searching for items. Tags are metadata that you define.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The ARN you specified to list the tags of.
listTagsForResourceResponse_arn :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | When you can get additional results from the
--   <tt>ListTagsForResource</tt> call, a <tt>NextToken</tt> parameter is
--   returned in the output. You can then pass in a subsequent command to
--   the <tt>NextToken</tt> parameter to continue listing additional tags.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | Key-value pairs that are assigned to a resource, usually for the
--   purpose of grouping and searching for items. Tags are metadata that
--   you define.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.Transfer.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.Transfer.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.Transfer.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.Transfer.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Transfer.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ListTagsForResource.ListTagsForResource


-- | Lists the file transfer protocol-enabled servers that are associated
--   with your Amazon Web Services account.
--   
--   This operation returns paginated results.
module Amazonka.Transfer.ListServers

-- | <i>See:</i> <a>newListServers</a> smart constructor.
data ListServers
ListServers' :: Maybe Text -> Maybe Natural -> ListServers

-- | When additional results are obtained from the <tt>ListServers</tt>
--   command, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass the <tt>NextToken</tt> parameter in a subsequent command
--   to continue listing additional servers.
[$sel:nextToken:ListServers'] :: ListServers -> Maybe Text

-- | Specifies the number of servers to return as a response to the
--   <tt>ListServers</tt> query.
[$sel:maxResults:ListServers'] :: ListServers -> Maybe Natural

-- | Create a value of <a>ListServers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServers'</a>, <a>listServers_nextToken</a> -
--   When additional results are obtained from the <tt>ListServers</tt>
--   command, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass the <tt>NextToken</tt> parameter in a subsequent command
--   to continue listing additional servers.
--   
--   <a>$sel:maxResults:ListServers'</a>, <a>listServers_maxResults</a> -
--   Specifies the number of servers to return as a response to the
--   <tt>ListServers</tt> query.
newListServers :: ListServers

-- | When additional results are obtained from the <tt>ListServers</tt>
--   command, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass the <tt>NextToken</tt> parameter in a subsequent command
--   to continue listing additional servers.
listServers_nextToken :: Lens' ListServers (Maybe Text)

-- | Specifies the number of servers to return as a response to the
--   <tt>ListServers</tt> query.
listServers_maxResults :: Lens' ListServers (Maybe Natural)

-- | <i>See:</i> <a>newListServersResponse</a> smart constructor.
data ListServersResponse
ListServersResponse' :: Maybe Text -> Int -> [ListedServer] -> ListServersResponse

-- | When you can get additional results from the <tt>ListServers</tt>
--   operation, a <tt>NextToken</tt> parameter is returned in the output.
--   In a following command, you can pass in the <tt>NextToken</tt>
--   parameter to continue listing additional servers.
[$sel:nextToken:ListServersResponse'] :: ListServersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListServersResponse'] :: ListServersResponse -> Int

-- | An array of servers that were listed.
[$sel:servers:ListServersResponse'] :: ListServersResponse -> [ListedServer]

-- | Create a value of <a>ListServersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServers'</a>,
--   <a>listServersResponse_nextToken</a> - When you can get additional
--   results from the <tt>ListServers</tt> operation, a <tt>NextToken</tt>
--   parameter is returned in the output. In a following command, you can
--   pass in the <tt>NextToken</tt> parameter to continue listing
--   additional servers.
--   
--   <a>$sel:httpStatus:ListServersResponse'</a>,
--   <a>listServersResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:servers:ListServersResponse'</a>,
--   <a>listServersResponse_servers</a> - An array of servers that were
--   listed.
newListServersResponse :: Int -> ListServersResponse

-- | When you can get additional results from the <tt>ListServers</tt>
--   operation, a <tt>NextToken</tt> parameter is returned in the output.
--   In a following command, you can pass in the <tt>NextToken</tt>
--   parameter to continue listing additional servers.
listServersResponse_nextToken :: Lens' ListServersResponse (Maybe Text)

-- | The response's http status code.
listServersResponse_httpStatus :: Lens' ListServersResponse Int

-- | An array of servers that were listed.
listServersResponse_servers :: Lens' ListServersResponse [ListedServer]
instance GHC.Generics.Generic Amazonka.Transfer.ListServers.ListServers
instance GHC.Show.Show Amazonka.Transfer.ListServers.ListServers
instance GHC.Read.Read Amazonka.Transfer.ListServers.ListServers
instance GHC.Classes.Eq Amazonka.Transfer.ListServers.ListServers
instance GHC.Generics.Generic Amazonka.Transfer.ListServers.ListServersResponse
instance GHC.Show.Show Amazonka.Transfer.ListServers.ListServersResponse
instance GHC.Read.Read Amazonka.Transfer.ListServers.ListServersResponse
instance GHC.Classes.Eq Amazonka.Transfer.ListServers.ListServersResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ListServers.ListServers
instance Control.DeepSeq.NFData Amazonka.Transfer.ListServers.ListServersResponse
instance Amazonka.Pager.AWSPager Amazonka.Transfer.ListServers.ListServers
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ListServers.ListServers
instance Control.DeepSeq.NFData Amazonka.Transfer.ListServers.ListServers
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ListServers.ListServers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ListServers.ListServers
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ListServers.ListServers
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ListServers.ListServers


-- | Lists the security policies that are attached to your file transfer
--   protocol-enabled servers.
module Amazonka.Transfer.ListSecurityPolicies

-- | <i>See:</i> <a>newListSecurityPolicies</a> smart constructor.
data ListSecurityPolicies
ListSecurityPolicies' :: Maybe Text -> Maybe Natural -> ListSecurityPolicies

-- | When additional results are obtained from the
--   <tt>ListSecurityPolicies</tt> command, a <tt>NextToken</tt> parameter
--   is returned in the output. You can then pass the <tt>NextToken</tt>
--   parameter in a subsequent command to continue listing additional
--   security policies.
[$sel:nextToken:ListSecurityPolicies'] :: ListSecurityPolicies -> Maybe Text

-- | Specifies the number of security policies to return as a response to
--   the <tt>ListSecurityPolicies</tt> query.
[$sel:maxResults:ListSecurityPolicies'] :: ListSecurityPolicies -> Maybe Natural

-- | Create a value of <a>ListSecurityPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecurityPolicies'</a>,
--   <a>listSecurityPolicies_nextToken</a> - When additional results are
--   obtained from the <tt>ListSecurityPolicies</tt> command, a
--   <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass the <tt>NextToken</tt> parameter in a subsequent command to
--   continue listing additional security policies.
--   
--   <a>$sel:maxResults:ListSecurityPolicies'</a>,
--   <a>listSecurityPolicies_maxResults</a> - Specifies the number of
--   security policies to return as a response to the
--   <tt>ListSecurityPolicies</tt> query.
newListSecurityPolicies :: ListSecurityPolicies

-- | When additional results are obtained from the
--   <tt>ListSecurityPolicies</tt> command, a <tt>NextToken</tt> parameter
--   is returned in the output. You can then pass the <tt>NextToken</tt>
--   parameter in a subsequent command to continue listing additional
--   security policies.
listSecurityPolicies_nextToken :: Lens' ListSecurityPolicies (Maybe Text)

-- | Specifies the number of security policies to return as a response to
--   the <tt>ListSecurityPolicies</tt> query.
listSecurityPolicies_maxResults :: Lens' ListSecurityPolicies (Maybe Natural)

-- | <i>See:</i> <a>newListSecurityPoliciesResponse</a> smart constructor.
data ListSecurityPoliciesResponse
ListSecurityPoliciesResponse' :: Maybe Text -> Int -> [Text] -> ListSecurityPoliciesResponse

-- | When you can get additional results from the
--   <tt>ListSecurityPolicies</tt> operation, a <tt>NextToken</tt>
--   parameter is returned in the output. In a following command, you can
--   pass in the <tt>NextToken</tt> parameter to continue listing security
--   policies.
[$sel:nextToken:ListSecurityPoliciesResponse'] :: ListSecurityPoliciesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSecurityPoliciesResponse'] :: ListSecurityPoliciesResponse -> Int

-- | An array of security policies that were listed.
[$sel:securityPolicyNames:ListSecurityPoliciesResponse'] :: ListSecurityPoliciesResponse -> [Text]

-- | Create a value of <a>ListSecurityPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecurityPolicies'</a>,
--   <a>listSecurityPoliciesResponse_nextToken</a> - When you can get
--   additional results from the <tt>ListSecurityPolicies</tt> operation, a
--   <tt>NextToken</tt> parameter is returned in the output. In a following
--   command, you can pass in the <tt>NextToken</tt> parameter to continue
--   listing security policies.
--   
--   <a>$sel:httpStatus:ListSecurityPoliciesResponse'</a>,
--   <a>listSecurityPoliciesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:securityPolicyNames:ListSecurityPoliciesResponse'</a>,
--   <a>listSecurityPoliciesResponse_securityPolicyNames</a> - An array of
--   security policies that were listed.
newListSecurityPoliciesResponse :: Int -> ListSecurityPoliciesResponse

-- | When you can get additional results from the
--   <tt>ListSecurityPolicies</tt> operation, a <tt>NextToken</tt>
--   parameter is returned in the output. In a following command, you can
--   pass in the <tt>NextToken</tt> parameter to continue listing security
--   policies.
listSecurityPoliciesResponse_nextToken :: Lens' ListSecurityPoliciesResponse (Maybe Text)

-- | The response's http status code.
listSecurityPoliciesResponse_httpStatus :: Lens' ListSecurityPoliciesResponse Int

-- | An array of security policies that were listed.
listSecurityPoliciesResponse_securityPolicyNames :: Lens' ListSecurityPoliciesResponse [Text]
instance GHC.Generics.Generic Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance GHC.Show.Show Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance GHC.Read.Read Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance GHC.Classes.Eq Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance GHC.Generics.Generic Amazonka.Transfer.ListSecurityPolicies.ListSecurityPoliciesResponse
instance GHC.Show.Show Amazonka.Transfer.ListSecurityPolicies.ListSecurityPoliciesResponse
instance GHC.Read.Read Amazonka.Transfer.ListSecurityPolicies.ListSecurityPoliciesResponse
instance GHC.Classes.Eq Amazonka.Transfer.ListSecurityPolicies.ListSecurityPoliciesResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance Control.DeepSeq.NFData Amazonka.Transfer.ListSecurityPolicies.ListSecurityPoliciesResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance Control.DeepSeq.NFData Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ListSecurityPolicies.ListSecurityPolicies


-- | Lists all executions for the specified workflow.
module Amazonka.Transfer.ListExecutions

-- | <i>See:</i> <a>newListExecutions</a> smart constructor.
data ListExecutions
ListExecutions' :: Maybe Text -> Maybe Natural -> Text -> ListExecutions

-- | <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
--   
--   This is useful for pagination, for instance. If you have 100
--   executions for a workflow, you might only want to list first 10. If
--   so, callthe API by specifing the <tt>max-results</tt>:
--   
--   <pre>
--   aws transfer list-executions --max-results 10
--   </pre>
--   
--   This returns details for the first 10 executions, as well as the
--   pointer (<tt>NextToken</tt>) to the eleventh execution. You can now
--   call the API again, suppling the <tt>NextToken</tt> value you
--   received:
--   
--   <pre>
--   aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult
--   </pre>
--   
--   This call returns the next 10 executions, the 11th through the 20th.
--   You can then repeat the call until the details for all 100 executions
--   have been returned.
[$sel:nextToken:ListExecutions'] :: ListExecutions -> Maybe Text

-- | Specifies the aximum number of executions to return.
[$sel:maxResults:ListExecutions'] :: ListExecutions -> Maybe Natural

-- | A unique identifier for the workflow.
[$sel:workflowId:ListExecutions'] :: ListExecutions -> Text

-- | Create a value of <a>ListExecutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListExecutions'</a>, <a>listExecutions_nextToken</a>
--   - <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
--   
--   This is useful for pagination, for instance. If you have 100
--   executions for a workflow, you might only want to list first 10. If
--   so, callthe API by specifing the <tt>max-results</tt>:
--   
--   <pre>
--   aws transfer list-executions --max-results 10
--   </pre>
--   
--   This returns details for the first 10 executions, as well as the
--   pointer (<tt>NextToken</tt>) to the eleventh execution. You can now
--   call the API again, suppling the <tt>NextToken</tt> value you
--   received:
--   
--   <pre>
--   aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult
--   </pre>
--   
--   This call returns the next 10 executions, the 11th through the 20th.
--   You can then repeat the call until the details for all 100 executions
--   have been returned.
--   
--   <a>$sel:maxResults:ListExecutions'</a>,
--   <a>listExecutions_maxResults</a> - Specifies the aximum number of
--   executions to return.
--   
--   <a>$sel:workflowId:ListExecutions'</a>,
--   <a>listExecutions_workflowId</a> - A unique identifier for the
--   workflow.
newListExecutions :: Text -> ListExecutions

-- | <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
--   
--   This is useful for pagination, for instance. If you have 100
--   executions for a workflow, you might only want to list first 10. If
--   so, callthe API by specifing the <tt>max-results</tt>:
--   
--   <pre>
--   aws transfer list-executions --max-results 10
--   </pre>
--   
--   This returns details for the first 10 executions, as well as the
--   pointer (<tt>NextToken</tt>) to the eleventh execution. You can now
--   call the API again, suppling the <tt>NextToken</tt> value you
--   received:
--   
--   <pre>
--   aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult
--   </pre>
--   
--   This call returns the next 10 executions, the 11th through the 20th.
--   You can then repeat the call until the details for all 100 executions
--   have been returned.
listExecutions_nextToken :: Lens' ListExecutions (Maybe Text)

-- | Specifies the aximum number of executions to return.
listExecutions_maxResults :: Lens' ListExecutions (Maybe Natural)

-- | A unique identifier for the workflow.
listExecutions_workflowId :: Lens' ListExecutions Text

-- | <i>See:</i> <a>newListExecutionsResponse</a> smart constructor.
data ListExecutionsResponse
ListExecutionsResponse' :: Maybe Text -> Int -> Text -> [ListedExecution] -> ListExecutionsResponse

-- | <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
[$sel:nextToken:ListExecutionsResponse'] :: ListExecutionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListExecutionsResponse'] :: ListExecutionsResponse -> Int

-- | A unique identifier for the workflow.
[$sel:workflowId:ListExecutionsResponse'] :: ListExecutionsResponse -> Text

-- | Returns the details for each execution.
--   
--   <ul>
--   <li><b>NextToken</b>: returned from a call to several APIs, you can
--   use pass it to a subsequent command to continue listing additional
--   executions.</li>
--   <li><b>StartTime</b>: timestamp indicating when the execution
--   began.</li>
--   <li><b>Executions</b>: details of the execution, including the
--   execution ID, initial file location, and Service metadata.</li>
--   <li><b>Status</b>: one of the following values: <tt>IN_PROGRESS</tt>,
--   <tt>COMPLETED</tt>, <tt>EXCEPTION</tt>,
--   <tt>HANDLING_EXEPTION</tt>.</li>
--   </ul>
[$sel:executions:ListExecutionsResponse'] :: ListExecutionsResponse -> [ListedExecution]

-- | Create a value of <a>ListExecutionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListExecutions'</a>,
--   <a>listExecutionsResponse_nextToken</a> - <tt>ListExecutions</tt>
--   returns the <tt>NextToken</tt> parameter in the output. You can then
--   pass the <tt>NextToken</tt> parameter in a subsequent command to
--   continue listing additional executions.
--   
--   <a>$sel:httpStatus:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:workflowId:ListExecutions'</a>,
--   <a>listExecutionsResponse_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:executions:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_executions</a> - Returns the details for
--   each execution.
--   
--   <ul>
--   <li><b>NextToken</b>: returned from a call to several APIs, you can
--   use pass it to a subsequent command to continue listing additional
--   executions.</li>
--   <li><b>StartTime</b>: timestamp indicating when the execution
--   began.</li>
--   <li><b>Executions</b>: details of the execution, including the
--   execution ID, initial file location, and Service metadata.</li>
--   <li><b>Status</b>: one of the following values: <tt>IN_PROGRESS</tt>,
--   <tt>COMPLETED</tt>, <tt>EXCEPTION</tt>,
--   <tt>HANDLING_EXEPTION</tt>.</li>
--   </ul>
newListExecutionsResponse :: Int -> Text -> ListExecutionsResponse

-- | <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
listExecutionsResponse_nextToken :: Lens' ListExecutionsResponse (Maybe Text)

-- | The response's http status code.
listExecutionsResponse_httpStatus :: Lens' ListExecutionsResponse Int

-- | A unique identifier for the workflow.
listExecutionsResponse_workflowId :: Lens' ListExecutionsResponse Text

-- | Returns the details for each execution.
--   
--   <ul>
--   <li><b>NextToken</b>: returned from a call to several APIs, you can
--   use pass it to a subsequent command to continue listing additional
--   executions.</li>
--   <li><b>StartTime</b>: timestamp indicating when the execution
--   began.</li>
--   <li><b>Executions</b>: details of the execution, including the
--   execution ID, initial file location, and Service metadata.</li>
--   <li><b>Status</b>: one of the following values: <tt>IN_PROGRESS</tt>,
--   <tt>COMPLETED</tt>, <tt>EXCEPTION</tt>,
--   <tt>HANDLING_EXEPTION</tt>.</li>
--   </ul>
listExecutionsResponse_executions :: Lens' ListExecutionsResponse [ListedExecution]
instance GHC.Generics.Generic Amazonka.Transfer.ListExecutions.ListExecutions
instance GHC.Show.Show Amazonka.Transfer.ListExecutions.ListExecutions
instance GHC.Read.Read Amazonka.Transfer.ListExecutions.ListExecutions
instance GHC.Classes.Eq Amazonka.Transfer.ListExecutions.ListExecutions
instance GHC.Generics.Generic Amazonka.Transfer.ListExecutions.ListExecutionsResponse
instance GHC.Show.Show Amazonka.Transfer.ListExecutions.ListExecutionsResponse
instance GHC.Read.Read Amazonka.Transfer.ListExecutions.ListExecutionsResponse
instance GHC.Classes.Eq Amazonka.Transfer.ListExecutions.ListExecutionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ListExecutions.ListExecutions
instance Control.DeepSeq.NFData Amazonka.Transfer.ListExecutions.ListExecutionsResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ListExecutions.ListExecutions
instance Control.DeepSeq.NFData Amazonka.Transfer.ListExecutions.ListExecutions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ListExecutions.ListExecutions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ListExecutions.ListExecutions
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ListExecutions.ListExecutions
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ListExecutions.ListExecutions


-- | Lists the details for all the accesses you have on your server.
module Amazonka.Transfer.ListAccesses

-- | <i>See:</i> <a>newListAccesses</a> smart constructor.
data ListAccesses
ListAccesses' :: Maybe Text -> Maybe Natural -> Text -> ListAccesses

-- | When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
[$sel:nextToken:ListAccesses'] :: ListAccesses -> Maybe Text

-- | Specifies the maximum number of access SIDs to return.
[$sel:maxResults:ListAccesses'] :: ListAccesses -> Maybe Natural

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
[$sel:serverId:ListAccesses'] :: ListAccesses -> Text

-- | Create a value of <a>ListAccesses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccesses'</a>, <a>listAccesses_nextToken</a> -
--   When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
--   
--   <a>$sel:maxResults:ListAccesses'</a>, <a>listAccesses_maxResults</a> -
--   Specifies the maximum number of access SIDs to return.
--   
--   <a>$sel:serverId:ListAccesses'</a>, <a>listAccesses_serverId</a> - A
--   system-assigned unique identifier for a server that has users assigned
--   to it.
newListAccesses :: Text -> ListAccesses

-- | When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
listAccesses_nextToken :: Lens' ListAccesses (Maybe Text)

-- | Specifies the maximum number of access SIDs to return.
listAccesses_maxResults :: Lens' ListAccesses (Maybe Natural)

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
listAccesses_serverId :: Lens' ListAccesses Text

-- | <i>See:</i> <a>newListAccessesResponse</a> smart constructor.
data ListAccessesResponse
ListAccessesResponse' :: Maybe Text -> Int -> Text -> [ListedAccess] -> ListAccessesResponse

-- | When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
[$sel:nextToken:ListAccessesResponse'] :: ListAccessesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAccessesResponse'] :: ListAccessesResponse -> Int

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
[$sel:serverId:ListAccessesResponse'] :: ListAccessesResponse -> Text

-- | Returns the accesses and their properties for the <tt>ServerId</tt>
--   value that you specify.
[$sel:accesses:ListAccessesResponse'] :: ListAccessesResponse -> [ListedAccess]

-- | Create a value of <a>ListAccessesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccesses'</a>,
--   <a>listAccessesResponse_nextToken</a> - When you can get additional
--   results from the <tt>ListAccesses</tt> call, a <tt>NextToken</tt>
--   parameter is returned in the output. You can then pass in a subsequent
--   command to the <tt>NextToken</tt> parameter to continue listing
--   additional accesses.
--   
--   <a>$sel:httpStatus:ListAccessesResponse'</a>,
--   <a>listAccessesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:ListAccesses'</a>,
--   <a>listAccessesResponse_serverId</a> - A system-assigned unique
--   identifier for a server that has users assigned to it.
--   
--   <a>$sel:accesses:ListAccessesResponse'</a>,
--   <a>listAccessesResponse_accesses</a> - Returns the accesses and their
--   properties for the <tt>ServerId</tt> value that you specify.
newListAccessesResponse :: Int -> Text -> ListAccessesResponse

-- | When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
listAccessesResponse_nextToken :: Lens' ListAccessesResponse (Maybe Text)

-- | The response's http status code.
listAccessesResponse_httpStatus :: Lens' ListAccessesResponse Int

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
listAccessesResponse_serverId :: Lens' ListAccessesResponse Text

-- | Returns the accesses and their properties for the <tt>ServerId</tt>
--   value that you specify.
listAccessesResponse_accesses :: Lens' ListAccessesResponse [ListedAccess]
instance GHC.Generics.Generic Amazonka.Transfer.ListAccesses.ListAccesses
instance GHC.Show.Show Amazonka.Transfer.ListAccesses.ListAccesses
instance GHC.Read.Read Amazonka.Transfer.ListAccesses.ListAccesses
instance GHC.Classes.Eq Amazonka.Transfer.ListAccesses.ListAccesses
instance GHC.Generics.Generic Amazonka.Transfer.ListAccesses.ListAccessesResponse
instance GHC.Show.Show Amazonka.Transfer.ListAccesses.ListAccessesResponse
instance GHC.Read.Read Amazonka.Transfer.ListAccesses.ListAccessesResponse
instance GHC.Classes.Eq Amazonka.Transfer.ListAccesses.ListAccessesResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ListAccesses.ListAccesses
instance Control.DeepSeq.NFData Amazonka.Transfer.ListAccesses.ListAccessesResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ListAccesses.ListAccesses
instance Control.DeepSeq.NFData Amazonka.Transfer.ListAccesses.ListAccesses
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ListAccesses.ListAccesses
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ListAccesses.ListAccesses
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ListAccesses.ListAccesses
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ListAccesses.ListAccesses


-- | Adds a Secure Shell (SSH) public key to a user account identified by a
--   <tt>UserName</tt> value assigned to the specific file transfer
--   protocol-enabled server, identified by <tt>ServerId</tt>.
--   
--   The response returns the <tt>UserName</tt> value, the
--   <tt>ServerId</tt> value, and the name of the <tt>SshPublicKeyId</tt>.
module Amazonka.Transfer.ImportSshPublicKey

-- | <i>See:</i> <a>newImportSshPublicKey</a> smart constructor.
data ImportSshPublicKey
ImportSshPublicKey' :: Text -> Text -> Text -> ImportSshPublicKey

-- | A system-assigned unique identifier for a server.
[$sel:serverId:ImportSshPublicKey'] :: ImportSshPublicKey -> Text

-- | The public key portion of an SSH key pair.
[$sel:sshPublicKeyBody:ImportSshPublicKey'] :: ImportSshPublicKey -> Text

-- | The name of the user account that is assigned to one or more servers.
[$sel:userName:ImportSshPublicKey'] :: ImportSshPublicKey -> Text

-- | Create a value of <a>ImportSshPublicKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:ImportSshPublicKey'</a>,
--   <a>importSshPublicKey_serverId</a> - A system-assigned unique
--   identifier for a server.
--   
--   <a>$sel:sshPublicKeyBody:ImportSshPublicKey'</a>,
--   <a>importSshPublicKey_sshPublicKeyBody</a> - The public key portion of
--   an SSH key pair.
--   
--   <a>$sel:userName:ImportSshPublicKey'</a>,
--   <a>importSshPublicKey_userName</a> - The name of the user account that
--   is assigned to one or more servers.
newImportSshPublicKey :: Text -> Text -> Text -> ImportSshPublicKey

-- | A system-assigned unique identifier for a server.
importSshPublicKey_serverId :: Lens' ImportSshPublicKey Text

-- | The public key portion of an SSH key pair.
importSshPublicKey_sshPublicKeyBody :: Lens' ImportSshPublicKey Text

-- | The name of the user account that is assigned to one or more servers.
importSshPublicKey_userName :: Lens' ImportSshPublicKey Text

-- | Identifies the user, the server they belong to, and the identifier of
--   the SSH public key associated with that user. A user can have more
--   than one key on each server that they are associated with.
--   
--   <i>See:</i> <a>newImportSshPublicKeyResponse</a> smart constructor.
data ImportSshPublicKeyResponse
ImportSshPublicKeyResponse' :: Int -> Text -> Text -> Text -> ImportSshPublicKeyResponse

-- | The response's http status code.
[$sel:httpStatus:ImportSshPublicKeyResponse'] :: ImportSshPublicKeyResponse -> Int

-- | A system-assigned unique identifier for a server.
[$sel:serverId:ImportSshPublicKeyResponse'] :: ImportSshPublicKeyResponse -> Text

-- | The name given to a public key by the system that was imported.
[$sel:sshPublicKeyId:ImportSshPublicKeyResponse'] :: ImportSshPublicKeyResponse -> Text

-- | A user name assigned to the <tt>ServerID</tt> value that you
--   specified.
[$sel:userName:ImportSshPublicKeyResponse'] :: ImportSshPublicKeyResponse -> Text

-- | Create a value of <a>ImportSshPublicKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ImportSshPublicKeyResponse'</a>,
--   <a>importSshPublicKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:serverId:ImportSshPublicKey'</a>,
--   <a>importSshPublicKeyResponse_serverId</a> - A system-assigned unique
--   identifier for a server.
--   
--   <a>$sel:sshPublicKeyId:ImportSshPublicKeyResponse'</a>,
--   <a>importSshPublicKeyResponse_sshPublicKeyId</a> - The name given to a
--   public key by the system that was imported.
--   
--   <a>$sel:userName:ImportSshPublicKey'</a>,
--   <a>importSshPublicKeyResponse_userName</a> - A user name assigned to
--   the <tt>ServerID</tt> value that you specified.
newImportSshPublicKeyResponse :: Int -> Text -> Text -> Text -> ImportSshPublicKeyResponse

-- | The response's http status code.
importSshPublicKeyResponse_httpStatus :: Lens' ImportSshPublicKeyResponse Int

-- | A system-assigned unique identifier for a server.
importSshPublicKeyResponse_serverId :: Lens' ImportSshPublicKeyResponse Text

-- | The name given to a public key by the system that was imported.
importSshPublicKeyResponse_sshPublicKeyId :: Lens' ImportSshPublicKeyResponse Text

-- | A user name assigned to the <tt>ServerID</tt> value that you
--   specified.
importSshPublicKeyResponse_userName :: Lens' ImportSshPublicKeyResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance GHC.Show.Show Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance GHC.Read.Read Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance GHC.Classes.Eq Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance GHC.Generics.Generic Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKeyResponse
instance GHC.Show.Show Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKeyResponse
instance GHC.Read.Read Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKeyResponse
instance GHC.Classes.Eq Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKeyResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance Control.DeepSeq.NFData Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKeyResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance Control.DeepSeq.NFData Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.ImportSshPublicKey.ImportSshPublicKey


-- | Describes the specified workflow.
module Amazonka.Transfer.DescribeWorkflow

-- | <i>See:</i> <a>newDescribeWorkflow</a> smart constructor.
data DescribeWorkflow
DescribeWorkflow' :: Text -> DescribeWorkflow

-- | A unique identifier for the workflow.
[$sel:workflowId:DescribeWorkflow'] :: DescribeWorkflow -> Text

-- | Create a value of <a>DescribeWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:DescribeWorkflow'</a>,
--   <a>describeWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
newDescribeWorkflow :: Text -> DescribeWorkflow

-- | A unique identifier for the workflow.
describeWorkflow_workflowId :: Lens' DescribeWorkflow Text

-- | <i>See:</i> <a>newDescribeWorkflowResponse</a> smart constructor.
data DescribeWorkflowResponse
DescribeWorkflowResponse' :: Int -> DescribedWorkflow -> DescribeWorkflowResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeWorkflowResponse'] :: DescribeWorkflowResponse -> Int

-- | The structure that contains the details of the workflow.
[$sel:workflow:DescribeWorkflowResponse'] :: DescribeWorkflowResponse -> DescribedWorkflow

-- | Create a value of <a>DescribeWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeWorkflowResponse'</a>,
--   <a>describeWorkflowResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:workflow:DescribeWorkflowResponse'</a>,
--   <a>describeWorkflowResponse_workflow</a> - The structure that contains
--   the details of the workflow.
newDescribeWorkflowResponse :: Int -> DescribedWorkflow -> DescribeWorkflowResponse

-- | The response's http status code.
describeWorkflowResponse_httpStatus :: Lens' DescribeWorkflowResponse Int

-- | The structure that contains the details of the workflow.
describeWorkflowResponse_workflow :: Lens' DescribeWorkflowResponse DescribedWorkflow
instance GHC.Generics.Generic Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance GHC.Show.Show Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance GHC.Read.Read Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance GHC.Classes.Eq Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance GHC.Generics.Generic Amazonka.Transfer.DescribeWorkflow.DescribeWorkflowResponse
instance GHC.Show.Show Amazonka.Transfer.DescribeWorkflow.DescribeWorkflowResponse
instance GHC.Read.Read Amazonka.Transfer.DescribeWorkflow.DescribeWorkflowResponse
instance GHC.Classes.Eq Amazonka.Transfer.DescribeWorkflow.DescribeWorkflowResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeWorkflow.DescribeWorkflowResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DescribeWorkflow.DescribeWorkflow


-- | Describes the user assigned to the specific file transfer
--   protocol-enabled server, as identified by its <tt>ServerId</tt>
--   property.
--   
--   The response from this call returns the properties of the user
--   associated with the <tt>ServerId</tt> value that was specified.
module Amazonka.Transfer.DescribeUser

-- | <i>See:</i> <a>newDescribeUser</a> smart constructor.
data DescribeUser
DescribeUser' :: Text -> Text -> DescribeUser

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
[$sel:serverId:DescribeUser'] :: DescribeUser -> Text

-- | The name of the user assigned to one or more servers. User names are
--   part of the sign-in credentials to use the Amazon Web Services
--   Transfer Family service and perform file transfer tasks.
[$sel:userName:DescribeUser'] :: DescribeUser -> Text

-- | Create a value of <a>DescribeUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DescribeUser'</a>, <a>describeUser_serverId</a> - A
--   system-assigned unique identifier for a server that has this user
--   assigned.
--   
--   <a>$sel:userName:DescribeUser'</a>, <a>describeUser_userName</a> - The
--   name of the user assigned to one or more servers. User names are part
--   of the sign-in credentials to use the Amazon Web Services Transfer
--   Family service and perform file transfer tasks.
newDescribeUser :: Text -> Text -> DescribeUser

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
describeUser_serverId :: Lens' DescribeUser Text

-- | The name of the user assigned to one or more servers. User names are
--   part of the sign-in credentials to use the Amazon Web Services
--   Transfer Family service and perform file transfer tasks.
describeUser_userName :: Lens' DescribeUser Text

-- | <i>See:</i> <a>newDescribeUserResponse</a> smart constructor.
data DescribeUserResponse
DescribeUserResponse' :: Int -> Text -> DescribedUser -> DescribeUserResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeUserResponse'] :: DescribeUserResponse -> Int

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
[$sel:serverId:DescribeUserResponse'] :: DescribeUserResponse -> Text

-- | An array containing the properties of the user account for the
--   <tt>ServerID</tt> value that you specified.
[$sel:user:DescribeUserResponse'] :: DescribeUserResponse -> DescribedUser

-- | Create a value of <a>DescribeUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeUserResponse'</a>,
--   <a>describeUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:DescribeUser'</a>,
--   <a>describeUserResponse_serverId</a> - A system-assigned unique
--   identifier for a server that has this user assigned.
--   
--   <a>$sel:user:DescribeUserResponse'</a>,
--   <a>describeUserResponse_user</a> - An array containing the properties
--   of the user account for the <tt>ServerID</tt> value that you
--   specified.
newDescribeUserResponse :: Int -> Text -> DescribedUser -> DescribeUserResponse

-- | The response's http status code.
describeUserResponse_httpStatus :: Lens' DescribeUserResponse Int

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
describeUserResponse_serverId :: Lens' DescribeUserResponse Text

-- | An array containing the properties of the user account for the
--   <tt>ServerID</tt> value that you specified.
describeUserResponse_user :: Lens' DescribeUserResponse DescribedUser
instance GHC.Generics.Generic Amazonka.Transfer.DescribeUser.DescribeUser
instance GHC.Show.Show Amazonka.Transfer.DescribeUser.DescribeUser
instance GHC.Read.Read Amazonka.Transfer.DescribeUser.DescribeUser
instance GHC.Classes.Eq Amazonka.Transfer.DescribeUser.DescribeUser
instance GHC.Generics.Generic Amazonka.Transfer.DescribeUser.DescribeUserResponse
instance GHC.Show.Show Amazonka.Transfer.DescribeUser.DescribeUserResponse
instance GHC.Read.Read Amazonka.Transfer.DescribeUser.DescribeUserResponse
instance GHC.Classes.Eq Amazonka.Transfer.DescribeUser.DescribeUserResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DescribeUser.DescribeUser
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeUser.DescribeUserResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DescribeUser.DescribeUser
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeUser.DescribeUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DescribeUser.DescribeUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DescribeUser.DescribeUser
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DescribeUser.DescribeUser
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DescribeUser.DescribeUser


-- | Describes a file transfer protocol-enabled server that you specify by
--   passing the <tt>ServerId</tt> parameter.
--   
--   The response contains a description of a server's properties. When you
--   set <tt>EndpointType</tt> to VPC, the response will contain the
--   <tt>EndpointDetails</tt>.
module Amazonka.Transfer.DescribeServer

-- | <i>See:</i> <a>newDescribeServer</a> smart constructor.
data DescribeServer
DescribeServer' :: Text -> DescribeServer

-- | A system-assigned unique identifier for a server.
[$sel:serverId:DescribeServer'] :: DescribeServer -> Text

-- | Create a value of <a>DescribeServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DescribeServer'</a>, <a>describeServer_serverId</a> -
--   A system-assigned unique identifier for a server.
newDescribeServer :: Text -> DescribeServer

-- | A system-assigned unique identifier for a server.
describeServer_serverId :: Lens' DescribeServer Text

-- | <i>See:</i> <a>newDescribeServerResponse</a> smart constructor.
data DescribeServerResponse
DescribeServerResponse' :: Int -> DescribedServer -> DescribeServerResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeServerResponse'] :: DescribeServerResponse -> Int

-- | An array containing the properties of a server with the
--   <tt>ServerID</tt> you specified.
[$sel:server:DescribeServerResponse'] :: DescribeServerResponse -> DescribedServer

-- | Create a value of <a>DescribeServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeServerResponse'</a>,
--   <a>describeServerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:server:DescribeServerResponse'</a>,
--   <a>describeServerResponse_server</a> - An array containing the
--   properties of a server with the <tt>ServerID</tt> you specified.
newDescribeServerResponse :: Int -> DescribedServer -> DescribeServerResponse

-- | The response's http status code.
describeServerResponse_httpStatus :: Lens' DescribeServerResponse Int

-- | An array containing the properties of a server with the
--   <tt>ServerID</tt> you specified.
describeServerResponse_server :: Lens' DescribeServerResponse DescribedServer
instance GHC.Generics.Generic Amazonka.Transfer.DescribeServer.DescribeServer
instance GHC.Show.Show Amazonka.Transfer.DescribeServer.DescribeServer
instance GHC.Read.Read Amazonka.Transfer.DescribeServer.DescribeServer
instance GHC.Classes.Eq Amazonka.Transfer.DescribeServer.DescribeServer
instance GHC.Generics.Generic Amazonka.Transfer.DescribeServer.DescribeServerResponse
instance GHC.Show.Show Amazonka.Transfer.DescribeServer.DescribeServerResponse
instance GHC.Read.Read Amazonka.Transfer.DescribeServer.DescribeServerResponse
instance GHC.Classes.Eq Amazonka.Transfer.DescribeServer.DescribeServerResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DescribeServer.DescribeServer
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeServer.DescribeServerResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DescribeServer.DescribeServer
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeServer.DescribeServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DescribeServer.DescribeServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DescribeServer.DescribeServer
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DescribeServer.DescribeServer
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DescribeServer.DescribeServer


-- | Describes the security policy that is attached to your file transfer
--   protocol-enabled server. The response contains a description of the
--   security policy's properties. For more information about security
--   policies, see <a>Working with security policies</a>.
module Amazonka.Transfer.DescribeSecurityPolicy

-- | <i>See:</i> <a>newDescribeSecurityPolicy</a> smart constructor.
data DescribeSecurityPolicy
DescribeSecurityPolicy' :: Text -> DescribeSecurityPolicy

-- | Specifies the name of the security policy that is attached to the
--   server.
[$sel:securityPolicyName:DescribeSecurityPolicy'] :: DescribeSecurityPolicy -> Text

-- | Create a value of <a>DescribeSecurityPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityPolicyName:DescribeSecurityPolicy'</a>,
--   <a>describeSecurityPolicy_securityPolicyName</a> - Specifies the name
--   of the security policy that is attached to the server.
newDescribeSecurityPolicy :: Text -> DescribeSecurityPolicy

-- | Specifies the name of the security policy that is attached to the
--   server.
describeSecurityPolicy_securityPolicyName :: Lens' DescribeSecurityPolicy Text

-- | <i>See:</i> <a>newDescribeSecurityPolicyResponse</a> smart
--   constructor.
data DescribeSecurityPolicyResponse
DescribeSecurityPolicyResponse' :: Int -> DescribedSecurityPolicy -> DescribeSecurityPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeSecurityPolicyResponse'] :: DescribeSecurityPolicyResponse -> Int

-- | An array containing the properties of the security policy.
[$sel:securityPolicy:DescribeSecurityPolicyResponse'] :: DescribeSecurityPolicyResponse -> DescribedSecurityPolicy

-- | Create a value of <a>DescribeSecurityPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeSecurityPolicyResponse'</a>,
--   <a>describeSecurityPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:securityPolicy:DescribeSecurityPolicyResponse'</a>,
--   <a>describeSecurityPolicyResponse_securityPolicy</a> - An array
--   containing the properties of the security policy.
newDescribeSecurityPolicyResponse :: Int -> DescribedSecurityPolicy -> DescribeSecurityPolicyResponse

-- | The response's http status code.
describeSecurityPolicyResponse_httpStatus :: Lens' DescribeSecurityPolicyResponse Int

-- | An array containing the properties of the security policy.
describeSecurityPolicyResponse_securityPolicy :: Lens' DescribeSecurityPolicyResponse DescribedSecurityPolicy
instance GHC.Generics.Generic Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance GHC.Show.Show Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance GHC.Read.Read Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance GHC.Classes.Eq Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance GHC.Generics.Generic Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicyResponse
instance GHC.Show.Show Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicyResponse
instance GHC.Read.Read Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicyResponse
instance GHC.Classes.Eq Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DescribeSecurityPolicy.DescribeSecurityPolicy


-- | You can use <tt>DescribeExecution</tt> to check the details of the
--   execution of the specified workflow.
module Amazonka.Transfer.DescribeExecution

-- | <i>See:</i> <a>newDescribeExecution</a> smart constructor.
data DescribeExecution
DescribeExecution' :: Text -> Text -> DescribeExecution

-- | A unique identifier for the execution of a workflow.
[$sel:executionId:DescribeExecution'] :: DescribeExecution -> Text

-- | A unique identifier for the workflow.
[$sel:workflowId:DescribeExecution'] :: DescribeExecution -> Text

-- | Create a value of <a>DescribeExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionId:DescribeExecution'</a>,
--   <a>describeExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:workflowId:DescribeExecution'</a>,
--   <a>describeExecution_workflowId</a> - A unique identifier for the
--   workflow.
newDescribeExecution :: Text -> Text -> DescribeExecution

-- | A unique identifier for the execution of a workflow.
describeExecution_executionId :: Lens' DescribeExecution Text

-- | A unique identifier for the workflow.
describeExecution_workflowId :: Lens' DescribeExecution Text

-- | <i>See:</i> <a>newDescribeExecutionResponse</a> smart constructor.
data DescribeExecutionResponse
DescribeExecutionResponse' :: Int -> Text -> DescribedExecution -> DescribeExecutionResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Int

-- | A unique identifier for the workflow.
[$sel:workflowId:DescribeExecutionResponse'] :: DescribeExecutionResponse -> Text

-- | The structure that contains the details of the workflow' execution.
[$sel:execution:DescribeExecutionResponse'] :: DescribeExecutionResponse -> DescribedExecution

-- | Create a value of <a>DescribeExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:workflowId:DescribeExecution'</a>,
--   <a>describeExecutionResponse_workflowId</a> - A unique identifier for
--   the workflow.
--   
--   <a>$sel:execution:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_execution</a> - The structure that
--   contains the details of the workflow' execution.
newDescribeExecutionResponse :: Int -> Text -> DescribedExecution -> DescribeExecutionResponse

-- | The response's http status code.
describeExecutionResponse_httpStatus :: Lens' DescribeExecutionResponse Int

-- | A unique identifier for the workflow.
describeExecutionResponse_workflowId :: Lens' DescribeExecutionResponse Text

-- | The structure that contains the details of the workflow' execution.
describeExecutionResponse_execution :: Lens' DescribeExecutionResponse DescribedExecution
instance GHC.Generics.Generic Amazonka.Transfer.DescribeExecution.DescribeExecution
instance GHC.Show.Show Amazonka.Transfer.DescribeExecution.DescribeExecution
instance GHC.Read.Read Amazonka.Transfer.DescribeExecution.DescribeExecution
instance GHC.Classes.Eq Amazonka.Transfer.DescribeExecution.DescribeExecution
instance GHC.Generics.Generic Amazonka.Transfer.DescribeExecution.DescribeExecutionResponse
instance GHC.Show.Show Amazonka.Transfer.DescribeExecution.DescribeExecutionResponse
instance GHC.Read.Read Amazonka.Transfer.DescribeExecution.DescribeExecutionResponse
instance GHC.Classes.Eq Amazonka.Transfer.DescribeExecution.DescribeExecutionResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DescribeExecution.DescribeExecution
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeExecution.DescribeExecutionResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DescribeExecution.DescribeExecution
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeExecution.DescribeExecution
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DescribeExecution.DescribeExecution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DescribeExecution.DescribeExecution
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DescribeExecution.DescribeExecution
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DescribeExecution.DescribeExecution


-- | Describes the access that is assigned to the specific file transfer
--   protocol-enabled server, as identified by its <tt>ServerId</tt>
--   property and its <tt>ExternalID</tt>.
--   
--   The response from this call returns the properties of the access that
--   is associated with the <tt>ServerId</tt> value that was specified.
module Amazonka.Transfer.DescribeAccess

-- | <i>See:</i> <a>newDescribeAccess</a> smart constructor.
data DescribeAccess
DescribeAccess' :: Text -> Text -> DescribeAccess

-- | A system-assigned unique identifier for a server that has this access
--   assigned.
[$sel:serverId:DescribeAccess'] :: DescribeAccess -> Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:DescribeAccess'] :: DescribeAccess -> Text

-- | Create a value of <a>DescribeAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DescribeAccess'</a>, <a>describeAccess_serverId</a> -
--   A system-assigned unique identifier for a server that has this access
--   assigned.
--   
--   <a>$sel:externalId:DescribeAccess'</a>,
--   <a>describeAccess_externalId</a> - A unique identifier that is
--   required to identify specific groups within your directory. The users
--   of the group that you associate have access to your Amazon S3 or
--   Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family. If you know the group name, you can view the
--   SID values by running the following command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newDescribeAccess :: Text -> Text -> DescribeAccess

-- | A system-assigned unique identifier for a server that has this access
--   assigned.
describeAccess_serverId :: Lens' DescribeAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
describeAccess_externalId :: Lens' DescribeAccess Text

-- | <i>See:</i> <a>newDescribeAccessResponse</a> smart constructor.
data DescribeAccessResponse
DescribeAccessResponse' :: Int -> Text -> DescribedAccess -> DescribeAccessResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeAccessResponse'] :: DescribeAccessResponse -> Int

-- | A system-assigned unique identifier for a server that has this access
--   assigned.
[$sel:serverId:DescribeAccessResponse'] :: DescribeAccessResponse -> Text

-- | The external ID of the server that the access is attached to.
[$sel:access:DescribeAccessResponse'] :: DescribeAccessResponse -> DescribedAccess

-- | Create a value of <a>DescribeAccessResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeAccessResponse'</a>,
--   <a>describeAccessResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:DescribeAccess'</a>,
--   <a>describeAccessResponse_serverId</a> - A system-assigned unique
--   identifier for a server that has this access assigned.
--   
--   <a>$sel:access:DescribeAccessResponse'</a>,
--   <a>describeAccessResponse_access</a> - The external ID of the server
--   that the access is attached to.
newDescribeAccessResponse :: Int -> Text -> DescribedAccess -> DescribeAccessResponse

-- | The response's http status code.
describeAccessResponse_httpStatus :: Lens' DescribeAccessResponse Int

-- | A system-assigned unique identifier for a server that has this access
--   assigned.
describeAccessResponse_serverId :: Lens' DescribeAccessResponse Text

-- | The external ID of the server that the access is attached to.
describeAccessResponse_access :: Lens' DescribeAccessResponse DescribedAccess
instance GHC.Generics.Generic Amazonka.Transfer.DescribeAccess.DescribeAccess
instance GHC.Show.Show Amazonka.Transfer.DescribeAccess.DescribeAccess
instance GHC.Read.Read Amazonka.Transfer.DescribeAccess.DescribeAccess
instance GHC.Classes.Eq Amazonka.Transfer.DescribeAccess.DescribeAccess
instance GHC.Generics.Generic Amazonka.Transfer.DescribeAccess.DescribeAccessResponse
instance GHC.Show.Show Amazonka.Transfer.DescribeAccess.DescribeAccessResponse
instance GHC.Read.Read Amazonka.Transfer.DescribeAccess.DescribeAccessResponse
instance GHC.Classes.Eq Amazonka.Transfer.DescribeAccess.DescribeAccessResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DescribeAccess.DescribeAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeAccess.DescribeAccessResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DescribeAccess.DescribeAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.DescribeAccess.DescribeAccess
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DescribeAccess.DescribeAccess
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DescribeAccess.DescribeAccess
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DescribeAccess.DescribeAccess
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DescribeAccess.DescribeAccess


-- | Deletes the specified workflow.
module Amazonka.Transfer.DeleteWorkflow

-- | <i>See:</i> <a>newDeleteWorkflow</a> smart constructor.
data DeleteWorkflow
DeleteWorkflow' :: Text -> DeleteWorkflow

-- | A unique identifier for the workflow.
[$sel:workflowId:DeleteWorkflow'] :: DeleteWorkflow -> Text

-- | Create a value of <a>DeleteWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:DeleteWorkflow'</a>,
--   <a>deleteWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
newDeleteWorkflow :: Text -> DeleteWorkflow

-- | A unique identifier for the workflow.
deleteWorkflow_workflowId :: Lens' DeleteWorkflow Text

-- | <i>See:</i> <a>newDeleteWorkflowResponse</a> smart constructor.
data DeleteWorkflowResponse
DeleteWorkflowResponse' :: DeleteWorkflowResponse

-- | Create a value of <a>DeleteWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteWorkflowResponse :: DeleteWorkflowResponse
instance GHC.Generics.Generic Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance GHC.Show.Show Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance GHC.Read.Read Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance GHC.Classes.Eq Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance GHC.Generics.Generic Amazonka.Transfer.DeleteWorkflow.DeleteWorkflowResponse
instance GHC.Show.Show Amazonka.Transfer.DeleteWorkflow.DeleteWorkflowResponse
instance GHC.Read.Read Amazonka.Transfer.DeleteWorkflow.DeleteWorkflowResponse
instance GHC.Classes.Eq Amazonka.Transfer.DeleteWorkflow.DeleteWorkflowResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteWorkflow.DeleteWorkflowResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DeleteWorkflow.DeleteWorkflow


-- | Deletes the user belonging to a file transfer protocol-enabled server
--   you specify.
--   
--   No response returns from this operation.
--   
--   When you delete a user from a server, the user's information is lost.
module Amazonka.Transfer.DeleteUser

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Text -> Text -> DeleteUser

-- | A system-assigned unique identifier for a server instance that has the
--   user assigned to it.
[$sel:serverId:DeleteUser'] :: DeleteUser -> Text

-- | A unique string that identifies a user that is being deleted from a
--   server.
[$sel:userName:DeleteUser'] :: DeleteUser -> Text

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteUser'</a>, <a>deleteUser_serverId</a> - A
--   system-assigned unique identifier for a server instance that has the
--   user assigned to it.
--   
--   <a>$sel:userName:DeleteUser'</a>, <a>deleteUser_userName</a> - A
--   unique string that identifies a user that is being deleted from a
--   server.
newDeleteUser :: Text -> Text -> DeleteUser

-- | A system-assigned unique identifier for a server instance that has the
--   user assigned to it.
deleteUser_serverId :: Lens' DeleteUser Text

-- | A unique string that identifies a user that is being deleted from a
--   server.
deleteUser_userName :: Lens' DeleteUser Text

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: DeleteUserResponse

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserResponse :: DeleteUserResponse
instance GHC.Generics.Generic Amazonka.Transfer.DeleteUser.DeleteUser
instance GHC.Show.Show Amazonka.Transfer.DeleteUser.DeleteUser
instance GHC.Read.Read Amazonka.Transfer.DeleteUser.DeleteUser
instance GHC.Classes.Eq Amazonka.Transfer.DeleteUser.DeleteUser
instance GHC.Generics.Generic Amazonka.Transfer.DeleteUser.DeleteUserResponse
instance GHC.Show.Show Amazonka.Transfer.DeleteUser.DeleteUserResponse
instance GHC.Read.Read Amazonka.Transfer.DeleteUser.DeleteUserResponse
instance GHC.Classes.Eq Amazonka.Transfer.DeleteUser.DeleteUserResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteUser.DeleteUserResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteUser.DeleteUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DeleteUser.DeleteUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DeleteUser.DeleteUser
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DeleteUser.DeleteUser
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DeleteUser.DeleteUser


-- | Deletes a user's Secure Shell (SSH) public key.
module Amazonka.Transfer.DeleteSshPublicKey

-- | <i>See:</i> <a>newDeleteSshPublicKey</a> smart constructor.
data DeleteSshPublicKey
DeleteSshPublicKey' :: Text -> Text -> Text -> DeleteSshPublicKey

-- | A system-assigned unique identifier for a file transfer
--   protocol-enabled server instance that has the user assigned to it.
[$sel:serverId:DeleteSshPublicKey'] :: DeleteSshPublicKey -> Text

-- | A unique identifier used to reference your user's specific SSH key.
[$sel:sshPublicKeyId:DeleteSshPublicKey'] :: DeleteSshPublicKey -> Text

-- | A unique string that identifies a user whose public key is being
--   deleted.
[$sel:userName:DeleteSshPublicKey'] :: DeleteSshPublicKey -> Text

-- | Create a value of <a>DeleteSshPublicKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteSshPublicKey'</a>,
--   <a>deleteSshPublicKey_serverId</a> - A system-assigned unique
--   identifier for a file transfer protocol-enabled server instance that
--   has the user assigned to it.
--   
--   <a>$sel:sshPublicKeyId:DeleteSshPublicKey'</a>,
--   <a>deleteSshPublicKey_sshPublicKeyId</a> - A unique identifier used to
--   reference your user's specific SSH key.
--   
--   <a>$sel:userName:DeleteSshPublicKey'</a>,
--   <a>deleteSshPublicKey_userName</a> - A unique string that identifies a
--   user whose public key is being deleted.
newDeleteSshPublicKey :: Text -> Text -> Text -> DeleteSshPublicKey

-- | A system-assigned unique identifier for a file transfer
--   protocol-enabled server instance that has the user assigned to it.
deleteSshPublicKey_serverId :: Lens' DeleteSshPublicKey Text

-- | A unique identifier used to reference your user's specific SSH key.
deleteSshPublicKey_sshPublicKeyId :: Lens' DeleteSshPublicKey Text

-- | A unique string that identifies a user whose public key is being
--   deleted.
deleteSshPublicKey_userName :: Lens' DeleteSshPublicKey Text

-- | <i>See:</i> <a>newDeleteSshPublicKeyResponse</a> smart constructor.
data DeleteSshPublicKeyResponse
DeleteSshPublicKeyResponse' :: DeleteSshPublicKeyResponse

-- | Create a value of <a>DeleteSshPublicKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSshPublicKeyResponse :: DeleteSshPublicKeyResponse
instance GHC.Generics.Generic Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance GHC.Show.Show Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance GHC.Read.Read Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance GHC.Classes.Eq Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance GHC.Generics.Generic Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKeyResponse
instance GHC.Show.Show Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKeyResponse
instance GHC.Read.Read Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKeyResponse
instance GHC.Classes.Eq Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKeyResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKeyResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DeleteSshPublicKey.DeleteSshPublicKey


-- | Deletes the file transfer protocol-enabled server that you specify.
--   
--   No response returns from this operation.
module Amazonka.Transfer.DeleteServer

-- | <i>See:</i> <a>newDeleteServer</a> smart constructor.
data DeleteServer
DeleteServer' :: Text -> DeleteServer

-- | A unique system-assigned identifier for a server instance.
[$sel:serverId:DeleteServer'] :: DeleteServer -> Text

-- | Create a value of <a>DeleteServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteServer'</a>, <a>deleteServer_serverId</a> - A
--   unique system-assigned identifier for a server instance.
newDeleteServer :: Text -> DeleteServer

-- | A unique system-assigned identifier for a server instance.
deleteServer_serverId :: Lens' DeleteServer Text

-- | <i>See:</i> <a>newDeleteServerResponse</a> smart constructor.
data DeleteServerResponse
DeleteServerResponse' :: DeleteServerResponse

-- | Create a value of <a>DeleteServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteServerResponse :: DeleteServerResponse
instance GHC.Generics.Generic Amazonka.Transfer.DeleteServer.DeleteServer
instance GHC.Show.Show Amazonka.Transfer.DeleteServer.DeleteServer
instance GHC.Read.Read Amazonka.Transfer.DeleteServer.DeleteServer
instance GHC.Classes.Eq Amazonka.Transfer.DeleteServer.DeleteServer
instance GHC.Generics.Generic Amazonka.Transfer.DeleteServer.DeleteServerResponse
instance GHC.Show.Show Amazonka.Transfer.DeleteServer.DeleteServerResponse
instance GHC.Read.Read Amazonka.Transfer.DeleteServer.DeleteServerResponse
instance GHC.Classes.Eq Amazonka.Transfer.DeleteServer.DeleteServerResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DeleteServer.DeleteServer
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteServer.DeleteServerResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DeleteServer.DeleteServer
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteServer.DeleteServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DeleteServer.DeleteServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DeleteServer.DeleteServer
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DeleteServer.DeleteServer
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DeleteServer.DeleteServer


-- | Allows you to delete the access specified in the <tt>ServerID</tt> and
--   <tt>ExternalID</tt> parameters.
module Amazonka.Transfer.DeleteAccess

-- | <i>See:</i> <a>newDeleteAccess</a> smart constructor.
data DeleteAccess
DeleteAccess' :: Text -> Text -> DeleteAccess

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
[$sel:serverId:DeleteAccess'] :: DeleteAccess -> Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:DeleteAccess'] :: DeleteAccess -> Text

-- | Create a value of <a>DeleteAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteAccess'</a>, <a>deleteAccess_serverId</a> - A
--   system-assigned unique identifier for a server that has this user
--   assigned.
--   
--   <a>$sel:externalId:DeleteAccess'</a>, <a>deleteAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newDeleteAccess :: Text -> Text -> DeleteAccess

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
deleteAccess_serverId :: Lens' DeleteAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
deleteAccess_externalId :: Lens' DeleteAccess Text

-- | <i>See:</i> <a>newDeleteAccessResponse</a> smart constructor.
data DeleteAccessResponse
DeleteAccessResponse' :: DeleteAccessResponse

-- | Create a value of <a>DeleteAccessResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAccessResponse :: DeleteAccessResponse
instance GHC.Generics.Generic Amazonka.Transfer.DeleteAccess.DeleteAccess
instance GHC.Show.Show Amazonka.Transfer.DeleteAccess.DeleteAccess
instance GHC.Read.Read Amazonka.Transfer.DeleteAccess.DeleteAccess
instance GHC.Classes.Eq Amazonka.Transfer.DeleteAccess.DeleteAccess
instance GHC.Generics.Generic Amazonka.Transfer.DeleteAccess.DeleteAccessResponse
instance GHC.Show.Show Amazonka.Transfer.DeleteAccess.DeleteAccessResponse
instance GHC.Read.Read Amazonka.Transfer.DeleteAccess.DeleteAccessResponse
instance GHC.Classes.Eq Amazonka.Transfer.DeleteAccess.DeleteAccessResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.DeleteAccess.DeleteAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteAccess.DeleteAccessResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.DeleteAccess.DeleteAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.DeleteAccess.DeleteAccess
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.DeleteAccess.DeleteAccess
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.DeleteAccess.DeleteAccess
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.DeleteAccess.DeleteAccess
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.DeleteAccess.DeleteAccess


-- | Allows you to create a workflow with specified steps and step details
--   the workflow invokes after file transfer completes. After creating a
--   workflow, you can associate the workflow created with any transfer
--   servers by specifying the <tt>workflow-details</tt> field in
--   <tt>CreateServer</tt> and <tt>UpdateServer</tt> operations.
module Amazonka.Transfer.CreateWorkflow

-- | <i>See:</i> <a>newCreateWorkflow</a> smart constructor.
data CreateWorkflow
CreateWorkflow' :: Maybe [WorkflowStep] -> Maybe Text -> Maybe (NonEmpty Tag) -> [WorkflowStep] -> CreateWorkflow

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
--   
--   For custom steps, the lambda function needs to send <tt>FAILURE</tt>
--   to the call back API to kick off the exception steps. Additionally, if
--   the lambda does not send <tt>SUCCESS</tt> before it times out, the
--   exception steps are executed.
[$sel:onExceptionSteps:CreateWorkflow'] :: CreateWorkflow -> Maybe [WorkflowStep]

-- | A textual description for the workflow.
[$sel:description:CreateWorkflow'] :: CreateWorkflow -> Maybe Text

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
[$sel:tags:CreateWorkflow'] :: CreateWorkflow -> Maybe (NonEmpty Tag)

-- | Specifies the details for the steps that are in the specified
--   workflow.
--   
--   The <tt>TYPE</tt> specifies which of the following actions is being
--   taken for this step.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   Currently, copying and tagging are supported only on S3.
--   
--   For file location, you specify either the S3 bucket and key, or the
--   EFS filesystem ID and path.
[$sel:steps:CreateWorkflow'] :: CreateWorkflow -> [WorkflowStep]

-- | Create a value of <a>CreateWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:CreateWorkflow'</a>,
--   <a>createWorkflow_onExceptionSteps</a> - Specifies the steps (actions)
--   to take if errors are encountered during execution of the workflow.
--   
--   For custom steps, the lambda function needs to send <tt>FAILURE</tt>
--   to the call back API to kick off the exception steps. Additionally, if
--   the lambda does not send <tt>SUCCESS</tt> before it times out, the
--   exception steps are executed.
--   
--   <a>$sel:description:CreateWorkflow'</a>,
--   <a>createWorkflow_description</a> - A textual description for the
--   workflow.
--   
--   <a>$sel:tags:CreateWorkflow'</a>, <a>createWorkflow_tags</a> -
--   Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
--   
--   <a>$sel:steps:CreateWorkflow'</a>, <a>createWorkflow_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
--   
--   The <tt>TYPE</tt> specifies which of the following actions is being
--   taken for this step.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   Currently, copying and tagging are supported only on S3.
--   
--   For file location, you specify either the S3 bucket and key, or the
--   EFS filesystem ID and path.
newCreateWorkflow :: CreateWorkflow

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
--   
--   For custom steps, the lambda function needs to send <tt>FAILURE</tt>
--   to the call back API to kick off the exception steps. Additionally, if
--   the lambda does not send <tt>SUCCESS</tt> before it times out, the
--   exception steps are executed.
createWorkflow_onExceptionSteps :: Lens' CreateWorkflow (Maybe [WorkflowStep])

-- | A textual description for the workflow.
createWorkflow_description :: Lens' CreateWorkflow (Maybe Text)

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
createWorkflow_tags :: Lens' CreateWorkflow (Maybe (NonEmpty Tag))

-- | Specifies the details for the steps that are in the specified
--   workflow.
--   
--   The <tt>TYPE</tt> specifies which of the following actions is being
--   taken for this step.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   Currently, copying and tagging are supported only on S3.
--   
--   For file location, you specify either the S3 bucket and key, or the
--   EFS filesystem ID and path.
createWorkflow_steps :: Lens' CreateWorkflow [WorkflowStep]

-- | <i>See:</i> <a>newCreateWorkflowResponse</a> smart constructor.
data CreateWorkflowResponse
CreateWorkflowResponse' :: Int -> Text -> CreateWorkflowResponse

-- | The response's http status code.
[$sel:httpStatus:CreateWorkflowResponse'] :: CreateWorkflowResponse -> Int

-- | A unique identifier for the workflow.
[$sel:workflowId:CreateWorkflowResponse'] :: CreateWorkflowResponse -> Text

-- | Create a value of <a>CreateWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateWorkflowResponse'</a>,
--   <a>createWorkflowResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:workflowId:CreateWorkflowResponse'</a>,
--   <a>createWorkflowResponse_workflowId</a> - A unique identifier for the
--   workflow.
newCreateWorkflowResponse :: Int -> Text -> CreateWorkflowResponse

-- | The response's http status code.
createWorkflowResponse_httpStatus :: Lens' CreateWorkflowResponse Int

-- | A unique identifier for the workflow.
createWorkflowResponse_workflowId :: Lens' CreateWorkflowResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance GHC.Show.Show Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance GHC.Read.Read Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance GHC.Classes.Eq Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance GHC.Generics.Generic Amazonka.Transfer.CreateWorkflow.CreateWorkflowResponse
instance GHC.Show.Show Amazonka.Transfer.CreateWorkflow.CreateWorkflowResponse
instance GHC.Read.Read Amazonka.Transfer.CreateWorkflow.CreateWorkflowResponse
instance GHC.Classes.Eq Amazonka.Transfer.CreateWorkflow.CreateWorkflowResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateWorkflow.CreateWorkflowResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.CreateWorkflow.CreateWorkflow
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.CreateWorkflow.CreateWorkflow


-- | Creates a user and associates them with an existing file transfer
--   protocol-enabled server. You can only create and associate users with
--   servers that have the <tt>IdentityProviderType</tt> set to
--   <tt>SERVICE_MANAGED</tt>. Using parameters for <tt>CreateUser</tt>,
--   you can specify the user name, set the home directory, store the
--   user's public key, and assign the user's Amazon Web Services Identity
--   and Access Management (IAM) role. You can also optionally add a
--   session policy, and assign metadata with tags that can be used to
--   group and search for users.
module Amazonka.Transfer.CreateUser

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> Text -> Text -> CreateUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:CreateUser'] :: CreateUser -> Maybe HomeDirectoryType

-- | The public portion of the Secure Shell (SSH) key used to authenticate
--   the user to the server.
[$sel:sshPublicKeyBody:CreateUser'] :: CreateUser -> Maybe Text

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon EFS file systems. The POSIX permissions that are set on files
--   and directories in Amazon EFS determine the level of access your users
--   get when transferring files into and out of your Amazon EFS file
--   systems.
[$sel:posixProfile:CreateUser'] :: CreateUser -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the HomeDirectory parameter
--   value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
[$sel:homeDirectoryMappings:CreateUser'] :: CreateUser -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
[$sel:policy:CreateUser'] :: CreateUser -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:CreateUser'] :: CreateUser -> Maybe Text

-- | Key-value pairs that can be used to group and search for users. Tags
--   are metadata attached to users for any purpose.
[$sel:tags:CreateUser'] :: CreateUser -> Maybe (NonEmpty Tag)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':CreateUser'] :: CreateUser -> Text

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
[$sel:serverId:CreateUser'] :: CreateUser -> Text

-- | A unique string that identifies a user and is associated with a
--   <tt>ServerId</tt>. This user name must be a minimum of 3 and a maximum
--   of 100 characters long. The following are valid characters: a-z, A-Z,
--   0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user
--   name can't start with a hyphen, period, or at sign.
[$sel:userName:CreateUser'] :: CreateUser -> Text

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:CreateUser'</a>,
--   <a>createUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:sshPublicKeyBody:CreateUser'</a>,
--   <a>createUser_sshPublicKeyBody</a> - The public portion of the Secure
--   Shell (SSH) key used to authenticate the user to the server.
--   
--   <a>$sel:posixProfile:CreateUser'</a>, <a>createUser_posixProfile</a> -
--   Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon EFS file systems. The POSIX permissions that are set on files
--   and directories in Amazon EFS determine the level of access your users
--   get when transferring files into and out of your Amazon EFS file
--   systems.
--   
--   <a>$sel:homeDirectoryMappings:CreateUser'</a>,
--   <a>createUser_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the HomeDirectory parameter
--   value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:policy:CreateUser'</a>, <a>createUser_policy</a> - A session
--   policy for your user so that you can use the same IAM role across
--   multiple users. This policy scopes down user access to portions of
--   their Amazon S3 bucket. Variables that you can use inside this policy
--   include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:CreateUser'</a>, <a>createUser_homeDirectory</a>
--   - The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:tags:CreateUser'</a>, <a>createUser_tags</a> - Key-value pairs
--   that can be used to group and search for users. Tags are metadata
--   attached to users for any purpose.
--   
--   <a>$sel:role':CreateUser'</a>, <a>createUser_role</a> - Specifies the
--   Amazon Resource Name (ARN) of the IAM role that controls your users'
--   access to your Amazon S3 bucket or EFS file system. The policies
--   attached to this role determine the level of access that you want to
--   provide your users when transferring files into and out of your Amazon
--   S3 bucket or EFS file system. The IAM role should also contain a trust
--   relationship that allows the server to access your resources when
--   servicing your users' transfer requests.
--   
--   <a>$sel:serverId:CreateUser'</a>, <a>createUser_serverId</a> - A
--   system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - A
--   unique string that identifies a user and is associated with a
--   <tt>ServerId</tt>. This user name must be a minimum of 3 and a maximum
--   of 100 characters long. The following are valid characters: a-z, A-Z,
--   0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user
--   name can't start with a hyphen, period, or at sign.
newCreateUser :: Text -> Text -> Text -> CreateUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
createUser_homeDirectoryType :: Lens' CreateUser (Maybe HomeDirectoryType)

-- | The public portion of the Secure Shell (SSH) key used to authenticate
--   the user to the server.
createUser_sshPublicKeyBody :: Lens' CreateUser (Maybe Text)

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon EFS file systems. The POSIX permissions that are set on files
--   and directories in Amazon EFS determine the level of access your users
--   get when transferring files into and out of your Amazon EFS file
--   systems.
createUser_posixProfile :: Lens' CreateUser (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the HomeDirectory parameter
--   value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
createUser_homeDirectoryMappings :: Lens' CreateUser (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
createUser_policy :: Lens' CreateUser (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
createUser_homeDirectory :: Lens' CreateUser (Maybe Text)

-- | Key-value pairs that can be used to group and search for users. Tags
--   are metadata attached to users for any purpose.
createUser_tags :: Lens' CreateUser (Maybe (NonEmpty Tag))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
createUser_role :: Lens' CreateUser Text

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
createUser_serverId :: Lens' CreateUser Text

-- | A unique string that identifies a user and is associated with a
--   <tt>ServerId</tt>. This user name must be a minimum of 3 and a maximum
--   of 100 characters long. The following are valid characters: a-z, A-Z,
--   0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user
--   name can't start with a hyphen, period, or at sign.
createUser_userName :: Lens' CreateUser Text

-- | <i>See:</i> <a>newCreateUserResponse</a> smart constructor.
data CreateUserResponse
CreateUserResponse' :: Int -> Text -> Text -> CreateUserResponse

-- | The response's http status code.
[$sel:httpStatus:CreateUserResponse'] :: CreateUserResponse -> Int

-- | The ID of the server that the user is attached to.
[$sel:serverId:CreateUserResponse'] :: CreateUserResponse -> Text

-- | A unique string that identifies a user account associated with a
--   server.
[$sel:userName:CreateUserResponse'] :: CreateUserResponse -> Text

-- | Create a value of <a>CreateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateUserResponse'</a>,
--   <a>createUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:CreateUser'</a>, <a>createUserResponse_serverId</a> -
--   The ID of the server that the user is attached to.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUserResponse_userName</a> -
--   A unique string that identifies a user account associated with a
--   server.
newCreateUserResponse :: Int -> Text -> Text -> CreateUserResponse

-- | The response's http status code.
createUserResponse_httpStatus :: Lens' CreateUserResponse Int

-- | The ID of the server that the user is attached to.
createUserResponse_serverId :: Lens' CreateUserResponse Text

-- | A unique string that identifies a user account associated with a
--   server.
createUserResponse_userName :: Lens' CreateUserResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.CreateUser.CreateUser
instance GHC.Show.Show Amazonka.Transfer.CreateUser.CreateUser
instance GHC.Read.Read Amazonka.Transfer.CreateUser.CreateUser
instance GHC.Classes.Eq Amazonka.Transfer.CreateUser.CreateUser
instance GHC.Generics.Generic Amazonka.Transfer.CreateUser.CreateUserResponse
instance GHC.Show.Show Amazonka.Transfer.CreateUser.CreateUserResponse
instance GHC.Read.Read Amazonka.Transfer.CreateUser.CreateUserResponse
instance GHC.Classes.Eq Amazonka.Transfer.CreateUser.CreateUserResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.CreateUser.CreateUser
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateUser.CreateUserResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.CreateUser.CreateUser
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateUser.CreateUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.CreateUser.CreateUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.CreateUser.CreateUser
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.CreateUser.CreateUser
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.CreateUser.CreateUser


-- | Instantiates an auto-scaling virtual server based on the selected file
--   transfer protocol in Amazon Web Services. When you make updates to
--   your file transfer protocol-enabled server or when you work with
--   users, use the service-generated <tt>ServerId</tt> property that is
--   assigned to the newly created server.
module Amazonka.Transfer.CreateServer

-- | <i>See:</i> <a>newCreateServer</a> smart constructor.
data CreateServer
CreateServer' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe IdentityProviderType -> Maybe (NonEmpty Protocol) -> Maybe Domain -> Maybe EndpointType -> Maybe Text -> Maybe Text -> Maybe IdentityProviderDetails -> Maybe WorkflowDetails -> Maybe (NonEmpty Tag) -> Maybe EndpointDetails -> CreateServer

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:CreateServer'] :: CreateServer -> Maybe Text

-- | The RSA private key as generated by the <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt> command.
--   
--   If you aren't planning to migrate existing users from an existing
--   SFTP-enabled server to a new server, don't update the host key.
--   Accidentally changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web Services Transfer Family User
--   Guide</i>.
[$sel:hostKey:CreateServer'] :: CreateServer -> Maybe (Sensitive Text)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
[$sel:identityProviderType:CreateServer'] :: CreateServer -> Maybe IdentityProviderType

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web Services Certificate Manager (ACM) which is used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
[$sel:protocols:CreateServer'] :: CreateServer -> Maybe (NonEmpty Protocol)

-- | The domain of the storage system that is used for file transfers.
--   There are two domains available: Amazon Simple Storage Service (Amazon
--   S3) and Amazon Elastic File System (Amazon EFS). The default value is
--   S3.
--   
--   After the server is created, the domain cannot be changed.
[$sel:domain:CreateServer'] :: CreateServer -> Maybe Domain

-- | The type of endpoint that you want your server to use. You can choose
--   to make your server's endpoint publicly accessible (PUBLIC) or host it
--   inside your VPC. With an endpoint that is hosted in a VPC, you can
--   restrict access to your server and resources only within your VPC or
--   choose to make it internet facing by attaching Elastic IP addresses
--   directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Services account
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Services account on or before May 19, 2021, you
--   will not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
[$sel:endpointType:CreateServer'] :: CreateServer -> Maybe EndpointType

-- | Specifies the name of the security policy that is attached to the
--   server.
[$sel:securityPolicyName:CreateServer'] :: CreateServer -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Web Services Certificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web Services Certificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web Services Certificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web Services Certificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
[$sel:certificate:CreateServer'] :: CreateServer -> Maybe Text

-- | Required when <tt>IdentityProviderType</tt> is set to
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>API_GATEWAY</tt>. Accepts an
--   array containing all of the information required to use a directory in
--   <tt>AWS_DIRECTORY_SERVICE</tt> or invoke a customer-supplied
--   authentication API, including the API Gateway URL. Not required when
--   <tt>IdentityProviderType</tt> is set to <tt>SERVICE_MANAGED</tt>.
[$sel:identityProviderDetails:CreateServer'] :: CreateServer -> Maybe IdentityProviderDetails

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
[$sel:workflowDetails:CreateServer'] :: CreateServer -> Maybe WorkflowDetails

-- | Key-value pairs that can be used to group and search for servers.
[$sel:tags:CreateServer'] :: CreateServer -> Maybe (NonEmpty Tag)

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
[$sel:endpointDetails:CreateServer'] :: CreateServer -> Maybe EndpointDetails

-- | Create a value of <a>CreateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:CreateServer'</a>, <a>createServer_loggingRole</a>
--   - Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:hostKey:CreateServer'</a>, <a>createServer_hostKey</a> - The
--   RSA private key as generated by the <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt> command.
--   
--   If you aren't planning to migrate existing users from an existing
--   SFTP-enabled server to a new server, don't update the host key.
--   Accidentally changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web Services Transfer Family User
--   Guide</i>.
--   
--   <a>$sel:identityProviderType:CreateServer'</a>,
--   <a>createServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:protocols:CreateServer'</a>, <a>createServer_protocols</a> -
--   Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web Services Certificate Manager (ACM) which is used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:domain:CreateServer'</a>, <a>createServer_domain</a> - The
--   domain of the storage system that is used for file transfers. There
--   are two domains available: Amazon Simple Storage Service (Amazon S3)
--   and Amazon Elastic File System (Amazon EFS). The default value is S3.
--   
--   After the server is created, the domain cannot be changed.
--   
--   <a>$sel:endpointType:CreateServer'</a>,
--   <a>createServer_endpointType</a> - The type of endpoint that you want
--   your server to use. You can choose to make your server's endpoint
--   publicly accessible (PUBLIC) or host it inside your VPC. With an
--   endpoint that is hosted in a VPC, you can restrict access to your
--   server and resources only within your VPC or choose to make it
--   internet facing by attaching Elastic IP addresses directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Services account
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Services account on or before May 19, 2021, you
--   will not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
--   
--   <a>$sel:securityPolicyName:CreateServer'</a>,
--   <a>createServer_securityPolicyName</a> - Specifies the name of the
--   security policy that is attached to the server.
--   
--   <a>$sel:certificate:CreateServer'</a>, <a>createServer_certificate</a>
--   - The Amazon Resource Name (ARN) of the Amazon Web Services
--   Certificate Manager (ACM) certificate. Required when
--   <tt>Protocols</tt> is set to <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web Services Certificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web Services Certificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web Services Certificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
--   
--   <a>$sel:identityProviderDetails:CreateServer'</a>,
--   <a>createServer_identityProviderDetails</a> - Required when
--   <tt>IdentityProviderType</tt> is set to <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>. Accepts an array containing all of the
--   information required to use a directory in
--   <tt>AWS_DIRECTORY_SERVICE</tt> or invoke a customer-supplied
--   authentication API, including the API Gateway URL. Not required when
--   <tt>IdentityProviderType</tt> is set to <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:workflowDetails:CreateServer'</a>,
--   <a>createServer_workflowDetails</a> - Specifies the workflow ID for
--   the workflow to assign and the execution role used for executing the
--   workflow.
--   
--   <a>$sel:tags:CreateServer'</a>, <a>createServer_tags</a> - Key-value
--   pairs that can be used to group and search for servers.
--   
--   <a>$sel:endpointDetails:CreateServer'</a>,
--   <a>createServer_endpointDetails</a> - The virtual private cloud (VPC)
--   endpoint settings that are configured for your server. When you host
--   your endpoint within your VPC, you can make it accessible only to
--   resources within your VPC, or you can attach Elastic IP addresses and
--   make it accessible to clients over the internet. Your VPC's default
--   security groups are automatically assigned to your endpoint.
newCreateServer :: CreateServer

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
createServer_loggingRole :: Lens' CreateServer (Maybe Text)

-- | The RSA private key as generated by the <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt> command.
--   
--   If you aren't planning to migrate existing users from an existing
--   SFTP-enabled server to a new server, don't update the host key.
--   Accidentally changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web Services Transfer Family User
--   Guide</i>.
createServer_hostKey :: Lens' CreateServer (Maybe Text)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
createServer_identityProviderType :: Lens' CreateServer (Maybe IdentityProviderType)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web Services Certificate Manager (ACM) which is used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
createServer_protocols :: Lens' CreateServer (Maybe (NonEmpty Protocol))

-- | The domain of the storage system that is used for file transfers.
--   There are two domains available: Amazon Simple Storage Service (Amazon
--   S3) and Amazon Elastic File System (Amazon EFS). The default value is
--   S3.
--   
--   After the server is created, the domain cannot be changed.
createServer_domain :: Lens' CreateServer (Maybe Domain)

-- | The type of endpoint that you want your server to use. You can choose
--   to make your server's endpoint publicly accessible (PUBLIC) or host it
--   inside your VPC. With an endpoint that is hosted in a VPC, you can
--   restrict access to your server and resources only within your VPC or
--   choose to make it internet facing by attaching Elastic IP addresses
--   directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Services account
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Services account on or before May 19, 2021, you
--   will not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
createServer_endpointType :: Lens' CreateServer (Maybe EndpointType)

-- | Specifies the name of the security policy that is attached to the
--   server.
createServer_securityPolicyName :: Lens' CreateServer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Web Services Certificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web Services Certificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web Services Certificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web Services Certificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
createServer_certificate :: Lens' CreateServer (Maybe Text)

-- | Required when <tt>IdentityProviderType</tt> is set to
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>API_GATEWAY</tt>. Accepts an
--   array containing all of the information required to use a directory in
--   <tt>AWS_DIRECTORY_SERVICE</tt> or invoke a customer-supplied
--   authentication API, including the API Gateway URL. Not required when
--   <tt>IdentityProviderType</tt> is set to <tt>SERVICE_MANAGED</tt>.
createServer_identityProviderDetails :: Lens' CreateServer (Maybe IdentityProviderDetails)

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
createServer_workflowDetails :: Lens' CreateServer (Maybe WorkflowDetails)

-- | Key-value pairs that can be used to group and search for servers.
createServer_tags :: Lens' CreateServer (Maybe (NonEmpty Tag))

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
createServer_endpointDetails :: Lens' CreateServer (Maybe EndpointDetails)

-- | <i>See:</i> <a>newCreateServerResponse</a> smart constructor.
data CreateServerResponse
CreateServerResponse' :: Int -> Text -> CreateServerResponse

-- | The response's http status code.
[$sel:httpStatus:CreateServerResponse'] :: CreateServerResponse -> Int

-- | The service-assigned ID of the server that is created.
[$sel:serverId:CreateServerResponse'] :: CreateServerResponse -> Text

-- | Create a value of <a>CreateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateServerResponse'</a>,
--   <a>createServerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:CreateServerResponse'</a>,
--   <a>createServerResponse_serverId</a> - The service-assigned ID of the
--   server that is created.
newCreateServerResponse :: Int -> Text -> CreateServerResponse

-- | The response's http status code.
createServerResponse_httpStatus :: Lens' CreateServerResponse Int

-- | The service-assigned ID of the server that is created.
createServerResponse_serverId :: Lens' CreateServerResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.CreateServer.CreateServer
instance GHC.Show.Show Amazonka.Transfer.CreateServer.CreateServer
instance GHC.Classes.Eq Amazonka.Transfer.CreateServer.CreateServer
instance GHC.Generics.Generic Amazonka.Transfer.CreateServer.CreateServerResponse
instance GHC.Show.Show Amazonka.Transfer.CreateServer.CreateServerResponse
instance GHC.Read.Read Amazonka.Transfer.CreateServer.CreateServerResponse
instance GHC.Classes.Eq Amazonka.Transfer.CreateServer.CreateServerResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.CreateServer.CreateServer
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateServer.CreateServerResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.CreateServer.CreateServer
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateServer.CreateServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.CreateServer.CreateServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.CreateServer.CreateServer
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.CreateServer.CreateServer
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.CreateServer.CreateServer


-- | Used by administrators to choose which groups in the directory should
--   have access to upload and download files over the enabled protocols
--   using Amazon Web Services Transfer Family. For example, a Microsoft
--   Active Directory might contain 50,000 users, but only a small fraction
--   might need the ability to transfer files to the server. An
--   administrator can use <tt>CreateAccess</tt> to limit the access to the
--   correct set of users who need this ability.
module Amazonka.Transfer.CreateAccess

-- | <i>See:</i> <a>newCreateAccess</a> smart constructor.
data CreateAccess
CreateAccess' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:CreateAccess'] :: CreateAccess -> Maybe HomeDirectoryType
[$sel:posixProfile:CreateAccess'] :: CreateAccess -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
[$sel:homeDirectoryMappings:CreateAccess'] :: CreateAccess -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
[$sel:policy:CreateAccess'] :: CreateAccess -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:CreateAccess'] :: CreateAccess -> Maybe Text

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':CreateAccess'] :: CreateAccess -> Text

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
[$sel:serverId:CreateAccess'] :: CreateAccess -> Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:CreateAccess'] :: CreateAccess -> Text

-- | Create a value of <a>CreateAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:CreateAccess'</a>,
--   <a>createAccess_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:CreateAccess'</a>,
--   <a>createAccess_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:homeDirectoryMappings:CreateAccess'</a>,
--   <a>createAccess_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:policy:CreateAccess'</a>, <a>createAccess_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:CreateAccess'</a>,
--   <a>createAccess_homeDirectory</a> - The landing directory (folder) for
--   a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:role':CreateAccess'</a>, <a>createAccess_role</a> - Specifies
--   the Amazon Resource Name (ARN) of the IAM role that controls your
--   users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:serverId:CreateAccess'</a>, <a>createAccess_serverId</a> - A
--   system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
--   
--   <a>$sel:externalId:CreateAccess'</a>, <a>createAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newCreateAccess :: Text -> Text -> Text -> CreateAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
createAccess_homeDirectoryType :: Lens' CreateAccess (Maybe HomeDirectoryType)

-- | Undocumented member.
createAccess_posixProfile :: Lens' CreateAccess (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
createAccess_homeDirectoryMappings :: Lens' CreateAccess (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
createAccess_policy :: Lens' CreateAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
createAccess_homeDirectory :: Lens' CreateAccess (Maybe Text)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
createAccess_role :: Lens' CreateAccess Text

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
createAccess_serverId :: Lens' CreateAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
createAccess_externalId :: Lens' CreateAccess Text

-- | <i>See:</i> <a>newCreateAccessResponse</a> smart constructor.
data CreateAccessResponse
CreateAccessResponse' :: Int -> Text -> Text -> CreateAccessResponse

-- | The response's http status code.
[$sel:httpStatus:CreateAccessResponse'] :: CreateAccessResponse -> Int

-- | The ID of the server that the user is attached to.
[$sel:serverId:CreateAccessResponse'] :: CreateAccessResponse -> Text

-- | The external ID of the group whose users have access to your Amazon S3
--   or Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family.
[$sel:externalId:CreateAccessResponse'] :: CreateAccessResponse -> Text

-- | Create a value of <a>CreateAccessResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateAccessResponse'</a>,
--   <a>createAccessResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:CreateAccess'</a>,
--   <a>createAccessResponse_serverId</a> - The ID of the server that the
--   user is attached to.
--   
--   <a>$sel:externalId:CreateAccess'</a>,
--   <a>createAccessResponse_externalId</a> - The external ID of the group
--   whose users have access to your Amazon S3 or Amazon EFS resources over
--   the enabled protocols using Amazon Web Services Transfer Family.
newCreateAccessResponse :: Int -> Text -> Text -> CreateAccessResponse

-- | The response's http status code.
createAccessResponse_httpStatus :: Lens' CreateAccessResponse Int

-- | The ID of the server that the user is attached to.
createAccessResponse_serverId :: Lens' CreateAccessResponse Text

-- | The external ID of the group whose users have access to your Amazon S3
--   or Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family.
createAccessResponse_externalId :: Lens' CreateAccessResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.CreateAccess.CreateAccess
instance GHC.Show.Show Amazonka.Transfer.CreateAccess.CreateAccess
instance GHC.Read.Read Amazonka.Transfer.CreateAccess.CreateAccess
instance GHC.Classes.Eq Amazonka.Transfer.CreateAccess.CreateAccess
instance GHC.Generics.Generic Amazonka.Transfer.CreateAccess.CreateAccessResponse
instance GHC.Show.Show Amazonka.Transfer.CreateAccess.CreateAccessResponse
instance GHC.Read.Read Amazonka.Transfer.CreateAccess.CreateAccessResponse
instance GHC.Classes.Eq Amazonka.Transfer.CreateAccess.CreateAccessResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.CreateAccess.CreateAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateAccess.CreateAccessResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.CreateAccess.CreateAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.CreateAccess.CreateAccess
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.CreateAccess.CreateAccess
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.CreateAccess.CreateAccess
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.CreateAccess.CreateAccess
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.CreateAccess.CreateAccess


-- | Detaches a key-value pair from a resource, as identified by its Amazon
--   Resource Name (ARN). Resources are users, servers, roles, and other
--   entities.
--   
--   No response is returned from this call.
module Amazonka.Transfer.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The value of the resource that will have the tag removed. An Amazon
--   Resource Name (ARN) is an identifier for a specific Amazon Web
--   Services resource, such as a server, user, or role.
[$sel:arn:UntagResource'] :: UntagResource -> Text

-- | TagKeys are key-value pairs assigned to ARNs that can be used to group
--   and search for resources by type. This metadata can be attached to
--   resources for any purpose.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UntagResource'</a>, <a>untagResource_arn</a> - The value
--   of the resource that will have the tag removed. An Amazon Resource
--   Name (ARN) is an identifier for a specific Amazon Web Services
--   resource, such as a server, user, or role.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   TagKeys are key-value pairs assigned to ARNs that can be used to group
--   and search for resources by type. This metadata can be attached to
--   resources for any purpose.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The value of the resource that will have the tag removed. An Amazon
--   Resource Name (ARN) is an identifier for a specific Amazon Web
--   Services resource, such as a server, user, or role.
untagResource_arn :: Lens' UntagResource Text

-- | TagKeys are key-value pairs assigned to ARNs that can be used to group
--   and search for resources by type. This metadata can be attached to
--   resources for any purpose.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.Transfer.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.Transfer.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.Transfer.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.Transfer.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.Transfer.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.Transfer.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.Transfer.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.Transfer.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Transfer.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Transfer.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.UntagResource.UntagResource


-- | Allows you to update parameters for the access specified in the
--   <tt>ServerID</tt> and <tt>ExternalID</tt> parameters.
module Amazonka.Transfer.UpdateAccess

-- | <i>See:</i> <a>newUpdateAccess</a> smart constructor.
data UpdateAccess
UpdateAccess' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:UpdateAccess'] :: UpdateAccess -> Maybe HomeDirectoryType
[$sel:posixProfile:UpdateAccess'] :: UpdateAccess -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
[$sel:homeDirectoryMappings:UpdateAccess'] :: UpdateAccess -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':UpdateAccess'] :: UpdateAccess -> Maybe Text

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   ServicesSecurity Token Service API Reference</i>.
[$sel:policy:UpdateAccess'] :: UpdateAccess -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:UpdateAccess'] :: UpdateAccess -> Maybe Text

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
[$sel:serverId:UpdateAccess'] :: UpdateAccess -> Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:UpdateAccess'] :: UpdateAccess -> Text

-- | Create a value of <a>UpdateAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:UpdateAccess'</a>,
--   <a>updateAccess_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:UpdateAccess'</a>,
--   <a>updateAccess_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:homeDirectoryMappings:UpdateAccess'</a>,
--   <a>updateAccess_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:role':UpdateAccess'</a>, <a>updateAccess_role</a> - Specifies
--   the Amazon Resource Name (ARN) of the IAM role that controls your
--   users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:UpdateAccess'</a>, <a>updateAccess_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   ServicesSecurity Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:UpdateAccess'</a>,
--   <a>updateAccess_homeDirectory</a> - The landing directory (folder) for
--   a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:serverId:UpdateAccess'</a>, <a>updateAccess_serverId</a> - A
--   system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
--   
--   <a>$sel:externalId:UpdateAccess'</a>, <a>updateAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newUpdateAccess :: Text -> Text -> UpdateAccess

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
updateAccess_homeDirectoryType :: Lens' UpdateAccess (Maybe HomeDirectoryType)

-- | Undocumented member.
updateAccess_posixProfile :: Lens' UpdateAccess (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
updateAccess_homeDirectoryMappings :: Lens' UpdateAccess (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
updateAccess_role :: Lens' UpdateAccess (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   ServicesSecurity Token Service API Reference</i>.
updateAccess_policy :: Lens' UpdateAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
updateAccess_homeDirectory :: Lens' UpdateAccess (Maybe Text)

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
updateAccess_serverId :: Lens' UpdateAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
updateAccess_externalId :: Lens' UpdateAccess Text

-- | <i>See:</i> <a>newUpdateAccessResponse</a> smart constructor.
data UpdateAccessResponse
UpdateAccessResponse' :: Int -> Text -> Text -> UpdateAccessResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateAccessResponse'] :: UpdateAccessResponse -> Int

-- | The ID of the server that the user is attached to.
[$sel:serverId:UpdateAccessResponse'] :: UpdateAccessResponse -> Text

-- | The external ID of the group whose users have access to your Amazon S3
--   or Amazon EFS resources over the enabled protocols using Amazon Web
--   ServicesTransfer Family.
[$sel:externalId:UpdateAccessResponse'] :: UpdateAccessResponse -> Text

-- | Create a value of <a>UpdateAccessResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateAccessResponse'</a>,
--   <a>updateAccessResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:UpdateAccess'</a>,
--   <a>updateAccessResponse_serverId</a> - The ID of the server that the
--   user is attached to.
--   
--   <a>$sel:externalId:UpdateAccess'</a>,
--   <a>updateAccessResponse_externalId</a> - The external ID of the group
--   whose users have access to your Amazon S3 or Amazon EFS resources over
--   the enabled protocols using Amazon Web ServicesTransfer Family.
newUpdateAccessResponse :: Int -> Text -> Text -> UpdateAccessResponse

-- | The response's http status code.
updateAccessResponse_httpStatus :: Lens' UpdateAccessResponse Int

-- | The ID of the server that the user is attached to.
updateAccessResponse_serverId :: Lens' UpdateAccessResponse Text

-- | The external ID of the group whose users have access to your Amazon S3
--   or Amazon EFS resources over the enabled protocols using Amazon Web
--   ServicesTransfer Family.
updateAccessResponse_externalId :: Lens' UpdateAccessResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.UpdateAccess.UpdateAccess
instance GHC.Show.Show Amazonka.Transfer.UpdateAccess.UpdateAccess
instance GHC.Read.Read Amazonka.Transfer.UpdateAccess.UpdateAccess
instance GHC.Classes.Eq Amazonka.Transfer.UpdateAccess.UpdateAccess
instance GHC.Generics.Generic Amazonka.Transfer.UpdateAccess.UpdateAccessResponse
instance GHC.Show.Show Amazonka.Transfer.UpdateAccess.UpdateAccessResponse
instance GHC.Read.Read Amazonka.Transfer.UpdateAccess.UpdateAccessResponse
instance GHC.Classes.Eq Amazonka.Transfer.UpdateAccess.UpdateAccessResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.UpdateAccess.UpdateAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.UpdateAccess.UpdateAccessResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.UpdateAccess.UpdateAccess
instance Control.DeepSeq.NFData Amazonka.Transfer.UpdateAccess.UpdateAccess
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.UpdateAccess.UpdateAccess
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.UpdateAccess.UpdateAccess
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.UpdateAccess.UpdateAccess
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.UpdateAccess.UpdateAccess


-- | Updates the file transfer protocol-enabled server's properties after
--   that server has been created.
--   
--   The <tt>UpdateServer</tt> call returns the <tt>ServerId</tt> of the
--   server you updated.
module Amazonka.Transfer.UpdateServer

-- | <i>See:</i> <a>newUpdateServer</a> smart constructor.
data UpdateServer
UpdateServer' :: Maybe ProtocolDetails -> Maybe Text -> Maybe (Sensitive Text) -> Maybe (NonEmpty Protocol) -> Maybe EndpointType -> Maybe Text -> Maybe Text -> Maybe IdentityProviderDetails -> Maybe WorkflowDetails -> Maybe EndpointDetails -> Text -> UpdateServer

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode (for FTP
--   and FTPS protocols). Enter a single dotted-quad IPv4 address, such as
--   the external IP address of a firewall, router, or load balancer.
[$sel:protocolDetails:UpdateServer'] :: UpdateServer -> Maybe ProtocolDetails

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
[$sel:loggingRole:UpdateServer'] :: UpdateServer -> Maybe Text

-- | The RSA private key as generated by <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt>.
--   
--   If you aren't planning to migrate existing users from an existing
--   server to a new server, don't update the host key. Accidentally
--   changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web ServicesTransfer Family User
--   Guide</i>.
[$sel:hostKey:UpdateServer'] :: UpdateServer -> Maybe (Sensitive Text)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP): File transfer
--   over SSH</li>
--   <li>File Transfer Protocol Secure (FTPS): File transfer with TLS
--   encryption</li>
--   <li>File Transfer Protocol (FTP): Unencrypted file transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web ServicesCertificate Manager (ACM) which will be used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
[$sel:protocols:UpdateServer'] :: UpdateServer -> Maybe (NonEmpty Protocol)

-- | The type of endpoint that you want your server to use. You can choose
--   to make your server's endpoint publicly accessible (PUBLIC) or host it
--   inside your VPC. With an endpoint that is hosted in a VPC, you can
--   restrict access to your server and resources only within your VPC or
--   choose to make it internet facing by attaching Elastic IP addresses
--   directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
[$sel:endpointType:UpdateServer'] :: UpdateServer -> Maybe EndpointType

-- | Specifies the name of the security policy that is attached to the
--   server.
[$sel:securityPolicyName:UpdateServer'] :: UpdateServer -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web ServicesCertificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web ServicesCertificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web ServicesCertificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
[$sel:certificate:UpdateServer'] :: UpdateServer -> Maybe Text

-- | An array containing all of the information required to call a
--   customer's authentication API method.
[$sel:identityProviderDetails:UpdateServer'] :: UpdateServer -> Maybe IdentityProviderDetails

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
[$sel:workflowDetails:UpdateServer'] :: UpdateServer -> Maybe WorkflowDetails

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
[$sel:endpointDetails:UpdateServer'] :: UpdateServer -> Maybe EndpointDetails

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
[$sel:serverId:UpdateServer'] :: UpdateServer -> Text

-- | Create a value of <a>UpdateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolDetails:UpdateServer'</a>,
--   <a>updateServer_protocolDetails</a> - The protocol settings that are
--   configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode (for FTP
--   and FTPS protocols). Enter a single dotted-quad IPv4 address, such as
--   the external IP address of a firewall, router, or load balancer.
--   
--   <a>$sel:loggingRole:UpdateServer'</a>, <a>updateServer_loggingRole</a>
--   - Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:hostKey:UpdateServer'</a>, <a>updateServer_hostKey</a> - The
--   RSA private key as generated by <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt>.
--   
--   If you aren't planning to migrate existing users from an existing
--   server to a new server, don't update the host key. Accidentally
--   changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web ServicesTransfer Family User
--   Guide</i>.
--   
--   <a>$sel:protocols:UpdateServer'</a>, <a>updateServer_protocols</a> -
--   Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP): File transfer
--   over SSH</li>
--   <li>File Transfer Protocol Secure (FTPS): File transfer with TLS
--   encryption</li>
--   <li>File Transfer Protocol (FTP): Unencrypted file transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web ServicesCertificate Manager (ACM) which will be used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:endpointType:UpdateServer'</a>,
--   <a>updateServer_endpointType</a> - The type of endpoint that you want
--   your server to use. You can choose to make your server's endpoint
--   publicly accessible (PUBLIC) or host it inside your VPC. With an
--   endpoint that is hosted in a VPC, you can restrict access to your
--   server and resources only within your VPC or choose to make it
--   internet facing by attaching Elastic IP addresses directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
--   
--   <a>$sel:securityPolicyName:UpdateServer'</a>,
--   <a>updateServer_securityPolicyName</a> - Specifies the name of the
--   security policy that is attached to the server.
--   
--   <a>$sel:certificate:UpdateServer'</a>, <a>updateServer_certificate</a>
--   - The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web ServicesCertificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web ServicesCertificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web ServicesCertificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
--   
--   <a>$sel:identityProviderDetails:UpdateServer'</a>,
--   <a>updateServer_identityProviderDetails</a> - An array containing all
--   of the information required to call a customer's authentication API
--   method.
--   
--   <a>$sel:workflowDetails:UpdateServer'</a>,
--   <a>updateServer_workflowDetails</a> - Specifies the workflow ID for
--   the workflow to assign and the execution role used for executing the
--   workflow.
--   
--   <a>$sel:endpointDetails:UpdateServer'</a>,
--   <a>updateServer_endpointDetails</a> - The virtual private cloud (VPC)
--   endpoint settings that are configured for your server. When you host
--   your endpoint within your VPC, you can make it accessible only to
--   resources within your VPC, or you can attach Elastic IP addresses and
--   make it accessible to clients over the internet. Your VPC's default
--   security groups are automatically assigned to your endpoint.
--   
--   <a>$sel:serverId:UpdateServer'</a>, <a>updateServer_serverId</a> - A
--   system-assigned unique identifier for a server instance that the user
--   account is assigned to.
newUpdateServer :: Text -> UpdateServer

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode (for FTP
--   and FTPS protocols). Enter a single dotted-quad IPv4 address, such as
--   the external IP address of a firewall, router, or load balancer.
updateServer_protocolDetails :: Lens' UpdateServer (Maybe ProtocolDetails)

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
updateServer_loggingRole :: Lens' UpdateServer (Maybe Text)

-- | The RSA private key as generated by <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt>.
--   
--   If you aren't planning to migrate existing users from an existing
--   server to a new server, don't update the host key. Accidentally
--   changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web ServicesTransfer Family User
--   Guide</i>.
updateServer_hostKey :: Lens' UpdateServer (Maybe Text)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP): File transfer
--   over SSH</li>
--   <li>File Transfer Protocol Secure (FTPS): File transfer with TLS
--   encryption</li>
--   <li>File Transfer Protocol (FTP): Unencrypted file transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web ServicesCertificate Manager (ACM) which will be used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
updateServer_protocols :: Lens' UpdateServer (Maybe (NonEmpty Protocol))

-- | The type of endpoint that you want your server to use. You can choose
--   to make your server's endpoint publicly accessible (PUBLIC) or host it
--   inside your VPC. With an endpoint that is hosted in a VPC, you can
--   restrict access to your server and resources only within your VPC or
--   choose to make it internet facing by attaching Elastic IP addresses
--   directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
updateServer_endpointType :: Lens' UpdateServer (Maybe EndpointType)

-- | Specifies the name of the security policy that is attached to the
--   server.
updateServer_securityPolicyName :: Lens' UpdateServer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web ServicesCertificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web ServicesCertificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web ServicesCertificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
updateServer_certificate :: Lens' UpdateServer (Maybe Text)

-- | An array containing all of the information required to call a
--   customer's authentication API method.
updateServer_identityProviderDetails :: Lens' UpdateServer (Maybe IdentityProviderDetails)

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
updateServer_workflowDetails :: Lens' UpdateServer (Maybe WorkflowDetails)

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
updateServer_endpointDetails :: Lens' UpdateServer (Maybe EndpointDetails)

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
updateServer_serverId :: Lens' UpdateServer Text

-- | <i>See:</i> <a>newUpdateServerResponse</a> smart constructor.
data UpdateServerResponse
UpdateServerResponse' :: Int -> Text -> UpdateServerResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateServerResponse'] :: UpdateServerResponse -> Int

-- | A system-assigned unique identifier for a server that the user account
--   is assigned to.
[$sel:serverId:UpdateServerResponse'] :: UpdateServerResponse -> Text

-- | Create a value of <a>UpdateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateServerResponse'</a>,
--   <a>updateServerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:UpdateServer'</a>,
--   <a>updateServerResponse_serverId</a> - A system-assigned unique
--   identifier for a server that the user account is assigned to.
newUpdateServerResponse :: Int -> Text -> UpdateServerResponse

-- | The response's http status code.
updateServerResponse_httpStatus :: Lens' UpdateServerResponse Int

-- | A system-assigned unique identifier for a server that the user account
--   is assigned to.
updateServerResponse_serverId :: Lens' UpdateServerResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.UpdateServer.UpdateServer
instance GHC.Show.Show Amazonka.Transfer.UpdateServer.UpdateServer
instance GHC.Classes.Eq Amazonka.Transfer.UpdateServer.UpdateServer
instance GHC.Generics.Generic Amazonka.Transfer.UpdateServer.UpdateServerResponse
instance GHC.Show.Show Amazonka.Transfer.UpdateServer.UpdateServerResponse
instance GHC.Read.Read Amazonka.Transfer.UpdateServer.UpdateServerResponse
instance GHC.Classes.Eq Amazonka.Transfer.UpdateServer.UpdateServerResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.UpdateServer.UpdateServer
instance Control.DeepSeq.NFData Amazonka.Transfer.UpdateServer.UpdateServerResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.UpdateServer.UpdateServer
instance Control.DeepSeq.NFData Amazonka.Transfer.UpdateServer.UpdateServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.UpdateServer.UpdateServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.UpdateServer.UpdateServer
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.UpdateServer.UpdateServer
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.UpdateServer.UpdateServer


-- | Assigns new properties to a user. Parameters you pass modify any or
--   all of the following: the home directory, role, and policy for the
--   <tt>UserName</tt> and <tt>ServerId</tt> you specify.
--   
--   The response returns the <tt>ServerId</tt> and the <tt>UserName</tt>
--   for the updated user.
module Amazonka.Transfer.UpdateUser

-- | <i>See:</i> <a>newUpdateUser</a> smart constructor.
data UpdateUser
UpdateUser' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
[$sel:homeDirectoryType:UpdateUser'] :: UpdateUser -> Maybe HomeDirectoryType

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File Systems (Amazon EFS). The POSIX permissions that
--   are set on files and directories in your file system determines the
--   level of access your users get when transferring files into and out of
--   your Amazon EFS file systems.
[$sel:posixProfile:UpdateUser'] :: UpdateUser -> Maybe PosixProfile

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
[$sel:homeDirectoryMappings:UpdateUser'] :: UpdateUser -> Maybe (NonEmpty HomeDirectoryMapEntry)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
[$sel:role':UpdateUser'] :: UpdateUser -> Maybe Text

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Creating a session
--   policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
[$sel:policy:UpdateUser'] :: UpdateUser -> Maybe Text

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
[$sel:homeDirectory:UpdateUser'] :: UpdateUser -> Maybe Text

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
[$sel:serverId:UpdateUser'] :: UpdateUser -> Text

-- | A unique string that identifies a user and is associated with a server
--   as specified by the <tt>ServerId</tt>. This user name must be a
--   minimum of 3 and a maximum of 100 characters long. The following are
--   valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period
--   '.', and at sign '@'. The user name can't start with a hyphen, period,
--   or at sign.
[$sel:userName:UpdateUser'] :: UpdateUser -> Text

-- | Create a value of <a>UpdateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:UpdateUser'</a>,
--   <a>updateUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:UpdateUser'</a>, <a>updateUser_posixProfile</a> -
--   Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File Systems (Amazon EFS). The POSIX permissions that
--   are set on files and directories in your file system determines the
--   level of access your users get when transferring files into and out of
--   your Amazon EFS file systems.
--   
--   <a>$sel:homeDirectoryMappings:UpdateUser'</a>,
--   <a>updateUser_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:role':UpdateUser'</a>, <a>updateUser_role</a> - Specifies the
--   Amazon Resource Name (ARN) of the IAM role that controls your users'
--   access to your Amazon S3 bucket or EFS file system. The policies
--   attached to this role determine the level of access that you want to
--   provide your users when transferring files into and out of your Amazon
--   S3 bucket or EFS file system. The IAM role should also contain a trust
--   relationship that allows the server to access your resources when
--   servicing your users' transfer requests.
--   
--   <a>$sel:policy:UpdateUser'</a>, <a>updateUser_policy</a> - A session
--   policy for your user so that you can use the same IAM role across
--   multiple users. This policy scopes down user access to portions of
--   their Amazon S3 bucket. Variables that you can use inside this policy
--   include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Creating a session
--   policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:UpdateUser'</a>, <a>updateUser_homeDirectory</a>
--   - The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:serverId:UpdateUser'</a>, <a>updateUser_serverId</a> - A
--   system-assigned unique identifier for a server instance that the user
--   account is assigned to.
--   
--   <a>$sel:userName:UpdateUser'</a>, <a>updateUser_userName</a> - A
--   unique string that identifies a user and is associated with a server
--   as specified by the <tt>ServerId</tt>. This user name must be a
--   minimum of 3 and a maximum of 100 characters long. The following are
--   valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period
--   '.', and at sign '@'. The user name can't start with a hyphen, period,
--   or at sign.
newUpdateUser :: Text -> Text -> UpdateUser

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
updateUser_homeDirectoryType :: Lens' UpdateUser (Maybe HomeDirectoryType)

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File Systems (Amazon EFS). The POSIX permissions that
--   are set on files and directories in your file system determines the
--   level of access your users get when transferring files into and out of
--   your Amazon EFS file systems.
updateUser_posixProfile :: Lens' UpdateUser (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
updateUser_homeDirectoryMappings :: Lens' UpdateUser (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
updateUser_role :: Lens' UpdateUser (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Creating a session
--   policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
updateUser_policy :: Lens' UpdateUser (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
updateUser_homeDirectory :: Lens' UpdateUser (Maybe Text)

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
updateUser_serverId :: Lens' UpdateUser Text

-- | A unique string that identifies a user and is associated with a server
--   as specified by the <tt>ServerId</tt>. This user name must be a
--   minimum of 3 and a maximum of 100 characters long. The following are
--   valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period
--   '.', and at sign '@'. The user name can't start with a hyphen, period,
--   or at sign.
updateUser_userName :: Lens' UpdateUser Text

-- | <tt>UpdateUserResponse</tt> returns the user name and identifier for
--   the request to update a user's properties.
--   
--   <i>See:</i> <a>newUpdateUserResponse</a> smart constructor.
data UpdateUserResponse
UpdateUserResponse' :: Int -> Text -> Text -> UpdateUserResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateUserResponse'] :: UpdateUserResponse -> Int

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
[$sel:serverId:UpdateUserResponse'] :: UpdateUserResponse -> Text

-- | The unique identifier for a user that is assigned to a server instance
--   that was specified in the request.
[$sel:userName:UpdateUserResponse'] :: UpdateUserResponse -> Text

-- | Create a value of <a>UpdateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateUserResponse'</a>,
--   <a>updateUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:UpdateUser'</a>, <a>updateUserResponse_serverId</a> -
--   A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
--   
--   <a>$sel:userName:UpdateUser'</a>, <a>updateUserResponse_userName</a> -
--   The unique identifier for a user that is assigned to a server instance
--   that was specified in the request.
newUpdateUserResponse :: Int -> Text -> Text -> UpdateUserResponse

-- | The response's http status code.
updateUserResponse_httpStatus :: Lens' UpdateUserResponse Int

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
updateUserResponse_serverId :: Lens' UpdateUserResponse Text

-- | The unique identifier for a user that is assigned to a server instance
--   that was specified in the request.
updateUserResponse_userName :: Lens' UpdateUserResponse Text
instance GHC.Generics.Generic Amazonka.Transfer.UpdateUser.UpdateUser
instance GHC.Show.Show Amazonka.Transfer.UpdateUser.UpdateUser
instance GHC.Read.Read Amazonka.Transfer.UpdateUser.UpdateUser
instance GHC.Classes.Eq Amazonka.Transfer.UpdateUser.UpdateUser
instance GHC.Generics.Generic Amazonka.Transfer.UpdateUser.UpdateUserResponse
instance GHC.Show.Show Amazonka.Transfer.UpdateUser.UpdateUserResponse
instance GHC.Read.Read Amazonka.Transfer.UpdateUser.UpdateUserResponse
instance GHC.Classes.Eq Amazonka.Transfer.UpdateUser.UpdateUserResponse
instance Amazonka.Types.AWSRequest Amazonka.Transfer.UpdateUser.UpdateUser
instance Control.DeepSeq.NFData Amazonka.Transfer.UpdateUser.UpdateUserResponse
instance Data.Hashable.Class.Hashable Amazonka.Transfer.UpdateUser.UpdateUser
instance Control.DeepSeq.NFData Amazonka.Transfer.UpdateUser.UpdateUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.Transfer.UpdateUser.UpdateUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Transfer.UpdateUser.UpdateUser
instance Amazonka.Data.Path.ToPath Amazonka.Transfer.UpdateUser.UpdateUser
instance Amazonka.Data.Query.ToQuery Amazonka.Transfer.UpdateUser.UpdateUser


module Amazonka.Transfer.Lens

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode (for FTP
--   and FTPS protocols). Enter a single dotted-quad IPv4 address, such as
--   the external IP address of a firewall, router, or load balancer.
updateServer_protocolDetails :: Lens' UpdateServer (Maybe ProtocolDetails)

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
updateServer_loggingRole :: Lens' UpdateServer (Maybe Text)

-- | The RSA private key as generated by <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt>.
--   
--   If you aren't planning to migrate existing users from an existing
--   server to a new server, don't update the host key. Accidentally
--   changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web ServicesTransfer Family User
--   Guide</i>.
updateServer_hostKey :: Lens' UpdateServer (Maybe Text)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP): File transfer
--   over SSH</li>
--   <li>File Transfer Protocol Secure (FTPS): File transfer with TLS
--   encryption</li>
--   <li>File Transfer Protocol (FTP): Unencrypted file transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web ServicesCertificate Manager (ACM) which will be used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
updateServer_protocols :: Lens' UpdateServer (Maybe (NonEmpty Protocol))

-- | The type of endpoint that you want your server to use. You can choose
--   to make your server's endpoint publicly accessible (PUBLIC) or host it
--   inside your VPC. With an endpoint that is hosted in a VPC, you can
--   restrict access to your server and resources only within your VPC or
--   choose to make it internet facing by attaching Elastic IP addresses
--   directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
updateServer_endpointType :: Lens' UpdateServer (Maybe EndpointType)

-- | Specifies the name of the security policy that is attached to the
--   server.
updateServer_securityPolicyName :: Lens' UpdateServer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web ServicesCertificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web ServicesCertificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web ServicesCertificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
updateServer_certificate :: Lens' UpdateServer (Maybe Text)

-- | An array containing all of the information required to call a
--   customer's authentication API method.
updateServer_identityProviderDetails :: Lens' UpdateServer (Maybe IdentityProviderDetails)

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
updateServer_workflowDetails :: Lens' UpdateServer (Maybe WorkflowDetails)

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
updateServer_endpointDetails :: Lens' UpdateServer (Maybe EndpointDetails)

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
updateServer_serverId :: Lens' UpdateServer Text

-- | The response's http status code.
updateServerResponse_httpStatus :: Lens' UpdateServerResponse Int

-- | A system-assigned unique identifier for a server that the user account
--   is assigned to.
updateServerResponse_serverId :: Lens' UpdateServerResponse Text

-- | A unique system-assigned identifier for a server instance.
deleteServer_serverId :: Lens' DeleteServer Text

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
--   
--   For custom steps, the lambda function needs to send <tt>FAILURE</tt>
--   to the call back API to kick off the exception steps. Additionally, if
--   the lambda does not send <tt>SUCCESS</tt> before it times out, the
--   exception steps are executed.
createWorkflow_onExceptionSteps :: Lens' CreateWorkflow (Maybe [WorkflowStep])

-- | A textual description for the workflow.
createWorkflow_description :: Lens' CreateWorkflow (Maybe Text)

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
createWorkflow_tags :: Lens' CreateWorkflow (Maybe (NonEmpty Tag))

-- | Specifies the details for the steps that are in the specified
--   workflow.
--   
--   The <tt>TYPE</tt> specifies which of the following actions is being
--   taken for this step.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   Currently, copying and tagging are supported only on S3.
--   
--   For file location, you specify either the S3 bucket and key, or the
--   EFS filesystem ID and path.
createWorkflow_steps :: Lens' CreateWorkflow [WorkflowStep]

-- | The response's http status code.
createWorkflowResponse_httpStatus :: Lens' CreateWorkflowResponse Int

-- | A unique identifier for the workflow.
createWorkflowResponse_workflowId :: Lens' CreateWorkflowResponse Text

-- | A system-assigned unique identifier for a file transfer
--   protocol-enabled server instance that has the user assigned to it.
deleteSshPublicKey_serverId :: Lens' DeleteSshPublicKey Text

-- | A unique identifier used to reference your user's specific SSH key.
deleteSshPublicKey_sshPublicKeyId :: Lens' DeleteSshPublicKey Text

-- | A unique string that identifies a user whose public key is being
--   deleted.
deleteSshPublicKey_userName :: Lens' DeleteSshPublicKey Text

-- | When additional results are obtained from the
--   <tt>ListSecurityPolicies</tt> command, a <tt>NextToken</tt> parameter
--   is returned in the output. You can then pass the <tt>NextToken</tt>
--   parameter in a subsequent command to continue listing additional
--   security policies.
listSecurityPolicies_nextToken :: Lens' ListSecurityPolicies (Maybe Text)

-- | Specifies the number of security policies to return as a response to
--   the <tt>ListSecurityPolicies</tt> query.
listSecurityPolicies_maxResults :: Lens' ListSecurityPolicies (Maybe Natural)

-- | When you can get additional results from the
--   <tt>ListSecurityPolicies</tt> operation, a <tt>NextToken</tt>
--   parameter is returned in the output. In a following command, you can
--   pass in the <tt>NextToken</tt> parameter to continue listing security
--   policies.
listSecurityPoliciesResponse_nextToken :: Lens' ListSecurityPoliciesResponse (Maybe Text)

-- | The response's http status code.
listSecurityPoliciesResponse_httpStatus :: Lens' ListSecurityPoliciesResponse Int

-- | An array of security policies that were listed.
listSecurityPoliciesResponse_securityPolicyNames :: Lens' ListSecurityPoliciesResponse [Text]

-- | A unique identifier for the workflow.
deleteWorkflow_workflowId :: Lens' DeleteWorkflow Text

-- | When you request additional results from the
--   <tt>ListTagsForResource</tt> operation, a <tt>NextToken</tt> parameter
--   is returned in the input. You can then pass in a subsequent command to
--   the <tt>NextToken</tt> parameter to continue listing additional tags.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | Specifies the number of tags to return as a response to the
--   <tt>ListTagsForResource</tt> request.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | Requests the tags associated with a particular Amazon Resource Name
--   (ARN). An ARN is an identifier for a specific Amazon Web Services
--   resource, such as a server, user, or role.
listTagsForResource_arn :: Lens' ListTagsForResource Text

-- | The ARN you specified to list the tags of.
listTagsForResourceResponse_arn :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | When you can get additional results from the
--   <tt>ListTagsForResource</tt> call, a <tt>NextToken</tt> parameter is
--   returned in the output. You can then pass in a subsequent command to
--   the <tt>NextToken</tt> parameter to continue listing additional tags.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | Key-value pairs that are assigned to a resource, usually for the
--   purpose of grouping and searching for items. Tags are metadata that
--   you define.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A unique identifier for the workflow.
sendWorkflowStepState_workflowId :: Lens' SendWorkflowStepState Text

-- | A unique identifier for the execution of a workflow.
sendWorkflowStepState_executionId :: Lens' SendWorkflowStepState Text

-- | Used to distinguish between multiple callbacks for multiple Lambda
--   steps within the same execution.
sendWorkflowStepState_token :: Lens' SendWorkflowStepState Text

-- | Indicates whether the specified step succeeded or failed.
sendWorkflowStepState_status :: Lens' SendWorkflowStepState CustomStepStatus

-- | The response's http status code.
sendWorkflowStepStateResponse_httpStatus :: Lens' SendWorkflowStepStateResponse Int

-- | A system-assigned unique identifier for a server that you stopped.
stopServer_serverId :: Lens' StopServer Text

-- | When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
listUsers_nextToken :: Lens' ListUsers (Maybe Text)

-- | Specifies the number of users to return as a response to the
--   <tt>ListUsers</tt> request.
listUsers_maxResults :: Lens' ListUsers (Maybe Natural)

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
listUsers_serverId :: Lens' ListUsers Text

-- | When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
listUsersResponse_nextToken :: Lens' ListUsersResponse (Maybe Text)

-- | The response's http status code.
listUsersResponse_httpStatus :: Lens' ListUsersResponse Int

-- | A system-assigned unique identifier for a server that the users are
--   assigned to.
listUsersResponse_serverId :: Lens' ListUsersResponse Text

-- | Returns the user accounts and their properties for the
--   <tt>ServerId</tt> value that you specify.
listUsersResponse_users :: Lens' ListUsersResponse [ListedUser]

-- | A system-assigned unique identifier for a server.
describeServer_serverId :: Lens' DescribeServer Text

-- | The response's http status code.
describeServerResponse_httpStatus :: Lens' DescribeServerResponse Int

-- | An array containing the properties of a server with the
--   <tt>ServerID</tt> you specified.
describeServerResponse_server :: Lens' DescribeServerResponse DescribedServer

-- | Specifies the name of the security policy that is attached to the
--   server.
describeSecurityPolicy_securityPolicyName :: Lens' DescribeSecurityPolicy Text

-- | The response's http status code.
describeSecurityPolicyResponse_httpStatus :: Lens' DescribeSecurityPolicyResponse Int

-- | An array containing the properties of the security policy.
describeSecurityPolicyResponse_securityPolicy :: Lens' DescribeSecurityPolicyResponse DescribedSecurityPolicy

-- | A system-assigned unique identifier for a server.
importSshPublicKey_serverId :: Lens' ImportSshPublicKey Text

-- | The public key portion of an SSH key pair.
importSshPublicKey_sshPublicKeyBody :: Lens' ImportSshPublicKey Text

-- | The name of the user account that is assigned to one or more servers.
importSshPublicKey_userName :: Lens' ImportSshPublicKey Text

-- | The response's http status code.
importSshPublicKeyResponse_httpStatus :: Lens' ImportSshPublicKeyResponse Int

-- | A system-assigned unique identifier for a server.
importSshPublicKeyResponse_serverId :: Lens' ImportSshPublicKeyResponse Text

-- | The name given to a public key by the system that was imported.
importSshPublicKeyResponse_sshPublicKeyId :: Lens' ImportSshPublicKeyResponse Text

-- | A user name assigned to the <tt>ServerID</tt> value that you
--   specified.
importSshPublicKeyResponse_userName :: Lens' ImportSshPublicKeyResponse Text

-- | <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
--   
--   This is useful for pagination, for instance. If you have 100
--   executions for a workflow, you might only want to list first 10. If
--   so, callthe API by specifing the <tt>max-results</tt>:
--   
--   <pre>
--   aws transfer list-executions --max-results 10
--   </pre>
--   
--   This returns details for the first 10 executions, as well as the
--   pointer (<tt>NextToken</tt>) to the eleventh execution. You can now
--   call the API again, suppling the <tt>NextToken</tt> value you
--   received:
--   
--   <pre>
--   aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult
--   </pre>
--   
--   This call returns the next 10 executions, the 11th through the 20th.
--   You can then repeat the call until the details for all 100 executions
--   have been returned.
listExecutions_nextToken :: Lens' ListExecutions (Maybe Text)

-- | Specifies the aximum number of executions to return.
listExecutions_maxResults :: Lens' ListExecutions (Maybe Natural)

-- | A unique identifier for the workflow.
listExecutions_workflowId :: Lens' ListExecutions Text

-- | <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
listExecutionsResponse_nextToken :: Lens' ListExecutionsResponse (Maybe Text)

-- | The response's http status code.
listExecutionsResponse_httpStatus :: Lens' ListExecutionsResponse Int

-- | A unique identifier for the workflow.
listExecutionsResponse_workflowId :: Lens' ListExecutionsResponse Text

-- | Returns the details for each execution.
--   
--   <ul>
--   <li><b>NextToken</b>: returned from a call to several APIs, you can
--   use pass it to a subsequent command to continue listing additional
--   executions.</li>
--   <li><b>StartTime</b>: timestamp indicating when the execution
--   began.</li>
--   <li><b>Executions</b>: details of the execution, including the
--   execution ID, initial file location, and Service metadata.</li>
--   <li><b>Status</b>: one of the following values: <tt>IN_PROGRESS</tt>,
--   <tt>COMPLETED</tt>, <tt>EXCEPTION</tt>,
--   <tt>HANDLING_EXEPTION</tt>.</li>
--   </ul>
listExecutionsResponse_executions :: Lens' ListExecutionsResponse [ListedExecution]

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
createServer_loggingRole :: Lens' CreateServer (Maybe Text)

-- | The RSA private key as generated by the <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt> command.
--   
--   If you aren't planning to migrate existing users from an existing
--   SFTP-enabled server to a new server, don't update the host key.
--   Accidentally changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web Services Transfer Family User
--   Guide</i>.
createServer_hostKey :: Lens' CreateServer (Maybe Text)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
createServer_identityProviderType :: Lens' CreateServer (Maybe IdentityProviderType)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web Services Certificate Manager (ACM) which is used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
createServer_protocols :: Lens' CreateServer (Maybe (NonEmpty Protocol))

-- | The domain of the storage system that is used for file transfers.
--   There are two domains available: Amazon Simple Storage Service (Amazon
--   S3) and Amazon Elastic File System (Amazon EFS). The default value is
--   S3.
--   
--   After the server is created, the domain cannot be changed.
createServer_domain :: Lens' CreateServer (Maybe Domain)

-- | The type of endpoint that you want your server to use. You can choose
--   to make your server's endpoint publicly accessible (PUBLIC) or host it
--   inside your VPC. With an endpoint that is hosted in a VPC, you can
--   restrict access to your server and resources only within your VPC or
--   choose to make it internet facing by attaching Elastic IP addresses
--   directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Services account
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Services account on or before May 19, 2021, you
--   will not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
createServer_endpointType :: Lens' CreateServer (Maybe EndpointType)

-- | Specifies the name of the security policy that is attached to the
--   server.
createServer_securityPolicyName :: Lens' CreateServer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Web Services Certificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web Services Certificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web Services Certificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web Services Certificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
createServer_certificate :: Lens' CreateServer (Maybe Text)

-- | Required when <tt>IdentityProviderType</tt> is set to
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>API_GATEWAY</tt>. Accepts an
--   array containing all of the information required to use a directory in
--   <tt>AWS_DIRECTORY_SERVICE</tt> or invoke a customer-supplied
--   authentication API, including the API Gateway URL. Not required when
--   <tt>IdentityProviderType</tt> is set to <tt>SERVICE_MANAGED</tt>.
createServer_identityProviderDetails :: Lens' CreateServer (Maybe IdentityProviderDetails)

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
createServer_workflowDetails :: Lens' CreateServer (Maybe WorkflowDetails)

-- | Key-value pairs that can be used to group and search for servers.
createServer_tags :: Lens' CreateServer (Maybe (NonEmpty Tag))

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
createServer_endpointDetails :: Lens' CreateServer (Maybe EndpointDetails)

-- | The response's http status code.
createServerResponse_httpStatus :: Lens' CreateServerResponse Int

-- | The service-assigned ID of the server that is created.
createServerResponse_serverId :: Lens' CreateServerResponse Text

-- | The type of file transfer protocol to be tested.
--   
--   The available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP)</li>
--   <li>File Transfer Protocol Secure (FTPS)</li>
--   <li>File Transfer Protocol (FTP)</li>
--   </ul>
testIdentityProvider_serverProtocol :: Lens' TestIdentityProvider (Maybe Protocol)

-- | The password of the user account to be tested.
testIdentityProvider_userPassword :: Lens' TestIdentityProvider (Maybe Text)

-- | The source IP address of the user account to be tested.
testIdentityProvider_sourceIp :: Lens' TestIdentityProvider (Maybe Text)

-- | A system-assigned identifier for a specific server. That server's user
--   authentication method is tested with a user name and password.
testIdentityProvider_serverId :: Lens' TestIdentityProvider Text

-- | The name of the user account to be tested.
testIdentityProvider_userName :: Lens' TestIdentityProvider Text

-- | The response that is returned from your API Gateway.
testIdentityProviderResponse_response :: Lens' TestIdentityProviderResponse (Maybe Text)

-- | A message that indicates whether the test was successful or not.
testIdentityProviderResponse_message :: Lens' TestIdentityProviderResponse (Maybe Text)

-- | The response's http status code.
testIdentityProviderResponse_httpStatus :: Lens' TestIdentityProviderResponse Int

-- | The HTTP status code that is the response from your API Gateway.
testIdentityProviderResponse_statusCode :: Lens' TestIdentityProviderResponse Int

-- | The endpoint of the service used to authenticate a user.
testIdentityProviderResponse_url :: Lens' TestIdentityProviderResponse Text

-- | When additional results are obtained from the <tt>ListServers</tt>
--   command, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass the <tt>NextToken</tt> parameter in a subsequent command
--   to continue listing additional servers.
listServers_nextToken :: Lens' ListServers (Maybe Text)

-- | Specifies the number of servers to return as a response to the
--   <tt>ListServers</tt> query.
listServers_maxResults :: Lens' ListServers (Maybe Natural)

-- | When you can get additional results from the <tt>ListServers</tt>
--   operation, a <tt>NextToken</tt> parameter is returned in the output.
--   In a following command, you can pass in the <tt>NextToken</tt>
--   parameter to continue listing additional servers.
listServersResponse_nextToken :: Lens' ListServersResponse (Maybe Text)

-- | The response's http status code.
listServersResponse_httpStatus :: Lens' ListServersResponse Int

-- | An array of servers that were listed.
listServersResponse_servers :: Lens' ListServersResponse [ListedServer]

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
describeUser_serverId :: Lens' DescribeUser Text

-- | The name of the user assigned to one or more servers. User names are
--   part of the sign-in credentials to use the Amazon Web Services
--   Transfer Family service and perform file transfer tasks.
describeUser_userName :: Lens' DescribeUser Text

-- | The response's http status code.
describeUserResponse_httpStatus :: Lens' DescribeUserResponse Int

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
describeUserResponse_serverId :: Lens' DescribeUserResponse Text

-- | An array containing the properties of the user account for the
--   <tt>ServerID</tt> value that you specified.
describeUserResponse_user :: Lens' DescribeUserResponse DescribedUser

-- | A unique identifier for the execution of a workflow.
describeExecution_executionId :: Lens' DescribeExecution Text

-- | A unique identifier for the workflow.
describeExecution_workflowId :: Lens' DescribeExecution Text

-- | The response's http status code.
describeExecutionResponse_httpStatus :: Lens' DescribeExecutionResponse Int

-- | A unique identifier for the workflow.
describeExecutionResponse_workflowId :: Lens' DescribeExecutionResponse Text

-- | The structure that contains the details of the workflow' execution.
describeExecutionResponse_execution :: Lens' DescribeExecutionResponse DescribedExecution

-- | <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
listWorkflows_nextToken :: Lens' ListWorkflows (Maybe Text)

-- | Specifies the maximum number of workflows to return.
listWorkflows_maxResults :: Lens' ListWorkflows (Maybe Natural)

-- | <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
listWorkflowsResponse_nextToken :: Lens' ListWorkflowsResponse (Maybe Text)

-- | The response's http status code.
listWorkflowsResponse_httpStatus :: Lens' ListWorkflowsResponse Int

-- | Returns the <tt>Arn</tt>, <tt>WorkflowId</tt>, and
--   <tt>Description</tt> for each workflow.
listWorkflowsResponse_workflows :: Lens' ListWorkflowsResponse [ListedWorkflow]

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
createUser_homeDirectoryType :: Lens' CreateUser (Maybe HomeDirectoryType)

-- | The public portion of the Secure Shell (SSH) key used to authenticate
--   the user to the server.
createUser_sshPublicKeyBody :: Lens' CreateUser (Maybe Text)

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon EFS file systems. The POSIX permissions that are set on files
--   and directories in Amazon EFS determine the level of access your users
--   get when transferring files into and out of your Amazon EFS file
--   systems.
createUser_posixProfile :: Lens' CreateUser (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the HomeDirectory parameter
--   value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
createUser_homeDirectoryMappings :: Lens' CreateUser (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
createUser_policy :: Lens' CreateUser (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
createUser_homeDirectory :: Lens' CreateUser (Maybe Text)

-- | Key-value pairs that can be used to group and search for users. Tags
--   are metadata attached to users for any purpose.
createUser_tags :: Lens' CreateUser (Maybe (NonEmpty Tag))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
createUser_role :: Lens' CreateUser Text

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
createUser_serverId :: Lens' CreateUser Text

-- | A unique string that identifies a user and is associated with a
--   <tt>ServerId</tt>. This user name must be a minimum of 3 and a maximum
--   of 100 characters long. The following are valid characters: a-z, A-Z,
--   0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user
--   name can't start with a hyphen, period, or at sign.
createUser_userName :: Lens' CreateUser Text

-- | The response's http status code.
createUserResponse_httpStatus :: Lens' CreateUserResponse Int

-- | The ID of the server that the user is attached to.
createUserResponse_serverId :: Lens' CreateUserResponse Text

-- | A unique string that identifies a user account associated with a
--   server.
createUserResponse_userName :: Lens' CreateUserResponse Text

-- | A system-assigned unique identifier for a server that you start.
startServer_serverId :: Lens' StartServer Text

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
updateAccess_homeDirectoryType :: Lens' UpdateAccess (Maybe HomeDirectoryType)

-- | Undocumented member.
updateAccess_posixProfile :: Lens' UpdateAccess (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
updateAccess_homeDirectoryMappings :: Lens' UpdateAccess (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
updateAccess_role :: Lens' UpdateAccess (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   ServicesSecurity Token Service API Reference</i>.
updateAccess_policy :: Lens' UpdateAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
updateAccess_homeDirectory :: Lens' UpdateAccess (Maybe Text)

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
updateAccess_serverId :: Lens' UpdateAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
updateAccess_externalId :: Lens' UpdateAccess Text

-- | The response's http status code.
updateAccessResponse_httpStatus :: Lens' UpdateAccessResponse Int

-- | The ID of the server that the user is attached to.
updateAccessResponse_serverId :: Lens' UpdateAccessResponse Text

-- | The external ID of the group whose users have access to your Amazon S3
--   or Amazon EFS resources over the enabled protocols using Amazon Web
--   ServicesTransfer Family.
updateAccessResponse_externalId :: Lens' UpdateAccessResponse Text

-- | A system-assigned unique identifier for a server that has this user
--   assigned.
deleteAccess_serverId :: Lens' DeleteAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
deleteAccess_externalId :: Lens' DeleteAccess Text

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
createAccess_homeDirectoryType :: Lens' CreateAccess (Maybe HomeDirectoryType)

-- | Undocumented member.
createAccess_posixProfile :: Lens' CreateAccess (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
createAccess_homeDirectoryMappings :: Lens' CreateAccess (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
createAccess_policy :: Lens' CreateAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
createAccess_homeDirectory :: Lens' CreateAccess (Maybe Text)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
createAccess_role :: Lens' CreateAccess Text

-- | A system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
createAccess_serverId :: Lens' CreateAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
createAccess_externalId :: Lens' CreateAccess Text

-- | The response's http status code.
createAccessResponse_httpStatus :: Lens' CreateAccessResponse Int

-- | The ID of the server that the user is attached to.
createAccessResponse_serverId :: Lens' CreateAccessResponse Text

-- | The external ID of the group whose users have access to your Amazon S3
--   or Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family.
createAccessResponse_externalId :: Lens' CreateAccessResponse Text

-- | When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
listAccesses_nextToken :: Lens' ListAccesses (Maybe Text)

-- | Specifies the maximum number of access SIDs to return.
listAccesses_maxResults :: Lens' ListAccesses (Maybe Natural)

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
listAccesses_serverId :: Lens' ListAccesses Text

-- | When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
listAccessesResponse_nextToken :: Lens' ListAccessesResponse (Maybe Text)

-- | The response's http status code.
listAccessesResponse_httpStatus :: Lens' ListAccessesResponse Int

-- | A system-assigned unique identifier for a server that has users
--   assigned to it.
listAccessesResponse_serverId :: Lens' ListAccessesResponse Text

-- | Returns the accesses and their properties for the <tt>ServerId</tt>
--   value that you specify.
listAccessesResponse_accesses :: Lens' ListAccessesResponse [ListedAccess]

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
updateUser_homeDirectoryType :: Lens' UpdateUser (Maybe HomeDirectoryType)

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File Systems (Amazon EFS). The POSIX permissions that
--   are set on files and directories in your file system determines the
--   level of access your users get when transferring files into and out of
--   your Amazon EFS file systems.
updateUser_posixProfile :: Lens' UpdateUser (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
updateUser_homeDirectoryMappings :: Lens' UpdateUser (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
updateUser_role :: Lens' UpdateUser (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Creating a session
--   policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
updateUser_policy :: Lens' UpdateUser (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
updateUser_homeDirectory :: Lens' UpdateUser (Maybe Text)

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
updateUser_serverId :: Lens' UpdateUser Text

-- | A unique string that identifies a user and is associated with a server
--   as specified by the <tt>ServerId</tt>. This user name must be a
--   minimum of 3 and a maximum of 100 characters long. The following are
--   valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period
--   '.', and at sign '@'. The user name can't start with a hyphen, period,
--   or at sign.
updateUser_userName :: Lens' UpdateUser Text

-- | The response's http status code.
updateUserResponse_httpStatus :: Lens' UpdateUserResponse Int

-- | A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
updateUserResponse_serverId :: Lens' UpdateUserResponse Text

-- | The unique identifier for a user that is assigned to a server instance
--   that was specified in the request.
updateUserResponse_userName :: Lens' UpdateUserResponse Text

-- | A system-assigned unique identifier for a server instance that has the
--   user assigned to it.
deleteUser_serverId :: Lens' DeleteUser Text

-- | A unique string that identifies a user that is being deleted from a
--   server.
deleteUser_userName :: Lens' DeleteUser Text

-- | An Amazon Resource Name (ARN) for a specific Amazon Web Services
--   resource, such as a server, user, or role.
tagResource_arn :: Lens' TagResource Text

-- | Key-value pairs assigned to ARNs that you can use to group and search
--   for resources by type. You can attach this metadata to user accounts
--   for any purpose.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | The value of the resource that will have the tag removed. An Amazon
--   Resource Name (ARN) is an identifier for a specific Amazon Web
--   Services resource, such as a server, user, or role.
untagResource_arn :: Lens' UntagResource Text

-- | TagKeys are key-value pairs assigned to ARNs that can be used to group
--   and search for resources by type. This metadata can be attached to
--   resources for any purpose.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | A unique identifier for the workflow.
describeWorkflow_workflowId :: Lens' DescribeWorkflow Text

-- | The response's http status code.
describeWorkflowResponse_httpStatus :: Lens' DescribeWorkflowResponse Int

-- | The structure that contains the details of the workflow.
describeWorkflowResponse_workflow :: Lens' DescribeWorkflowResponse DescribedWorkflow

-- | A system-assigned unique identifier for a server that has this access
--   assigned.
describeAccess_serverId :: Lens' DescribeAccess Text

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
describeAccess_externalId :: Lens' DescribeAccess Text

-- | The response's http status code.
describeAccessResponse_httpStatus :: Lens' DescribeAccessResponse Int

-- | A system-assigned unique identifier for a server that has this access
--   assigned.
describeAccessResponse_serverId :: Lens' DescribeAccessResponse Text

-- | The external ID of the server that the access is attached to.
describeAccessResponse_access :: Lens' DescribeAccessResponse DescribedAccess

-- | Undocumented member.
copyStepDetails_destinationFileLocation :: Lens' CopyStepDetails (Maybe InputFileLocation)

-- | A flag that indicates whether or not to overwrite an existing file of
--   the same name. The default is <tt>FALSE</tt>.
copyStepDetails_overwriteExisting :: Lens' CopyStepDetails (Maybe OverwriteExisting)

-- | The name of the step, used as an identifier.
copyStepDetails_name :: Lens' CopyStepDetails (Maybe Text)

-- | The name of the step, used as an identifier.
customStepDetails_name :: Lens' CustomStepDetails (Maybe Text)

-- | Timeout, in seconds, for the step.
customStepDetails_timeoutSeconds :: Lens' CustomStepDetails (Maybe Natural)

-- | The ARN for the lambda function that is being called.
customStepDetails_target :: Lens' CustomStepDetails (Maybe Text)

-- | The name of the step, used as an identifier.
deleteStepDetails_name :: Lens' DeleteStepDetails (Maybe Text)

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
describedAccess_homeDirectoryType :: Lens' DescribedAccess (Maybe HomeDirectoryType)

-- | Undocumented member.
describedAccess_posixProfile :: Lens' DescribedAccess (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
describedAccess_homeDirectoryMappings :: Lens' DescribedAccess (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
describedAccess_role :: Lens' DescribedAccess (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
describedAccess_policy :: Lens' DescribedAccess (Maybe Text)

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
describedAccess_externalId :: Lens' DescribedAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
describedAccess_homeDirectory :: Lens' DescribedAccess (Maybe Text)

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
describedExecution_status :: Lens' DescribedExecution (Maybe ExecutionStatus)

-- | A unique identifier for the execution of a workflow.
describedExecution_executionId :: Lens' DescribedExecution (Maybe Text)

-- | A structure that describes the execution results. This includes a list
--   of the steps along with the details of each step, error type and
--   message (if any), and the <tt>OnExceptionSteps</tt> structure.
describedExecution_results :: Lens' DescribedExecution (Maybe ExecutionResults)

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
describedExecution_initialFileLocation :: Lens' DescribedExecution (Maybe FileLocation)

-- | Undocumented member.
describedExecution_posixProfile :: Lens' DescribedExecution (Maybe PosixProfile)

-- | A container object for the session details associated with a workflow.
describedExecution_serviceMetadata :: Lens' DescribedExecution (Maybe ServiceMetadata)

-- | The IAM logging role associated with the execution.
describedExecution_loggingConfiguration :: Lens' DescribedExecution (Maybe LoggingConfiguration)

-- | The IAM role associated with the execution.
describedExecution_executionRole :: Lens' DescribedExecution (Maybe Text)

-- | Specifies whether this policy enables Federal Information Processing
--   Standards (FIPS).
describedSecurityPolicy_fips :: Lens' DescribedSecurityPolicy (Maybe Bool)

-- | Specifies the enabled SSH message authentication code (MAC) encryption
--   algorithms in the security policy that is attached to the server.
describedSecurityPolicy_sshMacs :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled SSH key exchange (KEX) encryption algorithms in
--   the security policy that is attached to the server.
describedSecurityPolicy_sshKexs :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled Transport Layer Security (TLS) cipher encryption
--   algorithms in the security policy that is attached to the server.
describedSecurityPolicy_tlsCiphers :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the enabled Secure Shell (SSH) cipher encryption algorithms
--   in the security policy that is attached to the server.
describedSecurityPolicy_sshCiphers :: Lens' DescribedSecurityPolicy (Maybe [Text])

-- | Specifies the name of the security policy that is attached to the
--   server.
describedSecurityPolicy_securityPolicyName :: Lens' DescribedSecurityPolicy Text

-- | The protocol settings that are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
describedServer_protocolDetails :: Lens' DescribedServer (Maybe ProtocolDetails)

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
describedServer_loggingRole :: Lens' DescribedServer (Maybe Text)

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
describedServer_state :: Lens' DescribedServer (Maybe State)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
describedServer_identityProviderType :: Lens' DescribedServer (Maybe IdentityProviderType)

-- | Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
describedServer_protocols :: Lens' DescribedServer (Maybe (NonEmpty Protocol))

-- | Specifies the unique system-assigned identifier for a server that you
--   instantiate.
describedServer_serverId :: Lens' DescribedServer (Maybe Text)

-- | Specifies the domain of the storage system that is used for file
--   transfers.
describedServer_domain :: Lens' DescribedServer (Maybe Domain)

-- | Defines the type of endpoint that your server is connected to. If your
--   server is connected to a VPC endpoint, your server isn't accessible
--   over the public internet.
describedServer_endpointType :: Lens' DescribedServer (Maybe EndpointType)

-- | Specifies the name of the security policy that is attached to the
--   server.
describedServer_securityPolicyName :: Lens' DescribedServer (Maybe Text)

-- | Specifies the Base64-encoded SHA256 fingerprint of the server's host
--   key. This value is equivalent to the output of the <tt>ssh-keygen -l
--   -f my-new-server-key</tt> command.
describedServer_hostKeyFingerprint :: Lens' DescribedServer (Maybe Text)

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
describedServer_userCount :: Lens' DescribedServer (Maybe Int)

-- | Specifies the ARN of the Amazon Web ServicesCertificate Manager (ACM)
--   certificate. Required when <tt>Protocols</tt> is set to <tt>FTPS</tt>.
describedServer_certificate :: Lens' DescribedServer (Maybe Text)

-- | Specifies information to call a customer-supplied authentication API.
--   This field is not populated when the <tt>IdentityProviderType</tt> of
--   a server is <tt>AWS_DIRECTORY_SERVICE</tt> or
--   <tt>SERVICE_MANAGED</tt>.
describedServer_identityProviderDetails :: Lens' DescribedServer (Maybe IdentityProviderDetails)

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
describedServer_workflowDetails :: Lens' DescribedServer (Maybe WorkflowDetails)

-- | Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
describedServer_tags :: Lens' DescribedServer (Maybe (NonEmpty Tag))

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your server. When you host your endpoint within your VPC, you can
--   make it accessible only to resources within your VPC, or you can
--   attach Elastic IP addresses and make it accessible to clients over the
--   internet. Your VPC's default security groups are automatically
--   assigned to your endpoint.
describedServer_endpointDetails :: Lens' DescribedServer (Maybe EndpointDetails)

-- | Specifies the unique Amazon Resource Name (ARN) of the server.
describedServer_arn :: Lens' DescribedServer Text

-- | Specifies the public key portion of the Secure Shell (SSH) keys stored
--   for the described user.
describedUser_sshPublicKeys :: Lens' DescribedUser (Maybe [SshPublicKey])

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
describedUser_homeDirectoryType :: Lens' DescribedUser (Maybe HomeDirectoryType)

-- | Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
describedUser_userName :: Lens' DescribedUser (Maybe Text)

-- | Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File System (Amazon EFS) file systems. The POSIX
--   permissions that are set on files and directories in your file system
--   determine the level of access your users get when transferring files
--   into and out of your Amazon EFS file systems.
describedUser_posixProfile :: Lens' DescribedUser (Maybe PosixProfile)

-- | Logical directory mappings that specify what Amazon S3 or Amazon EFS
--   paths and keys should be visible to your user and how you want to make
--   them visible. You must specify the <tt>Entry</tt> and <tt>Target</tt>
--   pair, where <tt>Entry</tt> shows how the path is made visible and
--   <tt>Target</tt> is the actual Amazon S3 or Amazon EFS path. If you
--   only specify a target, it is displayed as is. You also must ensure
--   that your Amazon Web Services Identity and Access Management (IAM)
--   role provides access to paths in <tt>Target</tt>. This value can only
--   be set when <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
describedUser_homeDirectoryMappings :: Lens' DescribedUser (Maybe (NonEmpty HomeDirectoryMapEntry))

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
describedUser_role :: Lens' DescribedUser (Maybe Text)

-- | A session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
describedUser_policy :: Lens' DescribedUser (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
describedUser_homeDirectory :: Lens' DescribedUser (Maybe Text)

-- | Specifies the key-value pairs for the user requested. Tag can be used
--   to search for and group users for a variety of purposes.
describedUser_tags :: Lens' DescribedUser (Maybe (NonEmpty Tag))

-- | Specifies the unique Amazon Resource Name (ARN) for the user that was
--   requested to be described.
describedUser_arn :: Lens' DescribedUser Text

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
describedWorkflow_onExceptionSteps :: Lens' DescribedWorkflow (Maybe [WorkflowStep])

-- | Specifies the details for the steps that are in the specified
--   workflow.
describedWorkflow_steps :: Lens' DescribedWorkflow (Maybe [WorkflowStep])

-- | A unique identifier for the workflow.
describedWorkflow_workflowId :: Lens' DescribedWorkflow (Maybe Text)

-- | Specifies the text description for the workflow.
describedWorkflow_description :: Lens' DescribedWorkflow (Maybe Text)

-- | Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
describedWorkflow_tags :: Lens' DescribedWorkflow (Maybe (NonEmpty Tag))

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
describedWorkflow_arn :: Lens' DescribedWorkflow Text

-- | The pathname for the folder being used by a workflow.
efsFileLocation_path :: Lens' EfsFileLocation (Maybe Text)

-- | The ID of the file system, assigned by Amazon EFS.
efsFileLocation_fileSystemId :: Lens' EfsFileLocation (Maybe Text)

-- | A list of security groups IDs that are available to attach to your
--   server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
endpointDetails_securityGroupIds :: Lens' EndpointDetails (Maybe [Text])

-- | A list of subnet IDs that are required to host your server endpoint in
--   your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
endpointDetails_subnetIds :: Lens' EndpointDetails (Maybe [Text])

-- | The VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
endpointDetails_vpcId :: Lens' EndpointDetails (Maybe Text)

-- | A list of address allocation IDs that are required to attach an
--   Elastic IP address to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
endpointDetails_addressAllocationIds :: Lens' EndpointDetails (Maybe [Text])

-- | The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
endpointDetails_vpcEndpointId :: Lens' EndpointDetails (Maybe Text)

-- | Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
executionError_type :: Lens' ExecutionError ExecutionErrorType

-- | Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
executionError_message :: Lens' ExecutionError Text

-- | Specifies the steps (actions) to take if errors are encountered during
--   execution of the workflow.
executionResults_onExceptionSteps :: Lens' ExecutionResults (Maybe (NonEmpty ExecutionStepResult))

-- | Specifies the details for the steps that are in the specified
--   workflow.
executionResults_steps :: Lens' ExecutionResults (Maybe (NonEmpty ExecutionStepResult))

-- | One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
executionStepResult_stepType :: Lens' ExecutionStepResult (Maybe WorkflowStepType)

-- | Specifies the details for an error, if it occurred during execution of
--   the specified workfow step.
executionStepResult_error :: Lens' ExecutionStepResult (Maybe ExecutionError)

-- | The values for the key/value pair applied as a tag to the file. Only
--   applicable if the step type is <tt>TAG</tt>.
executionStepResult_outputs :: Lens' ExecutionStepResult (Maybe Text)

-- | Specifies the Amazon EFS ID and the path for the file being used.
fileLocation_efsFileLocation :: Lens' FileLocation (Maybe EfsFileLocation)

-- | Specifies the S3 details for the file being used, such as bucket,
--   Etag, and so forth.
fileLocation_s3FileLocation :: Lens' FileLocation (Maybe S3FileLocation)

-- | Represents an entry for <tt>HomeDirectoryMappings</tt>.
homeDirectoryMapEntry_entry :: Lens' HomeDirectoryMapEntry Text

-- | Represents the map target that is used in a
--   <tt>HomeDirectorymapEntry</tt>.
homeDirectoryMapEntry_target :: Lens' HomeDirectoryMapEntry Text

-- | Provides the type of <tt>InvocationRole</tt> used to authenticate the
--   user account.
identityProviderDetails_invocationRole :: Lens' IdentityProviderDetails (Maybe Text)

-- | The identifier of the Amazon Web ServicesDirectory Service directory
--   that you want to stop sharing.
identityProviderDetails_directoryId :: Lens' IdentityProviderDetails (Maybe Text)

-- | Provides the location of the service endpoint used to authenticate
--   users.
identityProviderDetails_url :: Lens' IdentityProviderDetails (Maybe Text)

-- | Reserved for future use.
inputFileLocation_efsFileLocation :: Lens' InputFileLocation (Maybe EfsFileLocation)

-- | Specifies the details for the S3 file being copied.
inputFileLocation_s3FileLocation :: Lens' InputFileLocation (Maybe S3InputFileLocation)

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
listedAccess_homeDirectoryType :: Lens' ListedAccess (Maybe HomeDirectoryType)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
listedAccess_role :: Lens' ListedAccess (Maybe Text)

-- | A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
listedAccess_externalId :: Lens' ListedAccess (Maybe Text)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
listedAccess_homeDirectory :: Lens' ListedAccess (Maybe Text)

-- | The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
listedExecution_status :: Lens' ListedExecution (Maybe ExecutionStatus)

-- | A unique identifier for the execution of a workflow.
listedExecution_executionId :: Lens' ListedExecution (Maybe Text)

-- | A structure that describes the Amazon S3 or EFS file location. This is
--   the file location when the execution begins: if the file is being
--   copied, this is the initial (as opposed to destination) file location.
listedExecution_initialFileLocation :: Lens' ListedExecution (Maybe FileLocation)

-- | A container object for the session details associated with a workflow.
listedExecution_serviceMetadata :: Lens' ListedExecution (Maybe ServiceMetadata)

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
listedServer_loggingRole :: Lens' ListedServer (Maybe Text)

-- | Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
listedServer_state :: Lens' ListedServer (Maybe State)

-- | Specifies the mode of authentication for a server. The default value
--   is <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
listedServer_identityProviderType :: Lens' ListedServer (Maybe IdentityProviderType)

-- | Specifies the unique system assigned identifier for the servers that
--   were listed.
listedServer_serverId :: Lens' ListedServer (Maybe Text)

-- | Specifies the domain of the storage system that is used for file
--   transfers.
listedServer_domain :: Lens' ListedServer (Maybe Domain)

-- | Specifies the type of VPC endpoint that your server is connected to.
--   If your server is connected to a VPC endpoint, your server isn't
--   accessible over the public internet.
listedServer_endpointType :: Lens' ListedServer (Maybe EndpointType)

-- | Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
listedServer_userCount :: Lens' ListedServer (Maybe Int)

-- | Specifies the unique Amazon Resource Name (ARN) for a server to be
--   listed.
listedServer_arn :: Lens' ListedServer Text

-- | The type of landing directory (folder) you want your users' home
--   directory to be when they log into the server. If you set it to
--   <tt>PATH</tt>, the user will see the absolute Amazon S3 bucket or EFS
--   paths as is in their file transfer protocol clients. If you set it
--   <tt>LOGICAL</tt>, you need to provide mappings in the
--   <tt>HomeDirectoryMappings</tt> for how you want to make Amazon S3 or
--   EFS paths visible to your users.
listedUser_homeDirectoryType :: Lens' ListedUser (Maybe HomeDirectoryType)

-- | Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
listedUser_userName :: Lens' ListedUser (Maybe Text)

-- | Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
listedUser_role :: Lens' ListedUser (Maybe Text)

-- | Specifies the number of SSH public keys stored for the user you
--   specified.
listedUser_sshPublicKeyCount :: Lens' ListedUser (Maybe Int)

-- | The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
listedUser_homeDirectory :: Lens' ListedUser (Maybe Text)

-- | Provides the unique Amazon Resource Name (ARN) for the user that you
--   want to learn about.
listedUser_arn :: Lens' ListedUser Text

-- | Specifies the unique Amazon Resource Name (ARN) for the workflow.
listedWorkflow_arn :: Lens' ListedWorkflow (Maybe Text)

-- | A unique identifier for the workflow.
listedWorkflow_workflowId :: Lens' ListedWorkflow (Maybe Text)

-- | Specifies the text description for the workflow.
listedWorkflow_description :: Lens' ListedWorkflow (Maybe Text)

-- | Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
loggingConfiguration_loggingRole :: Lens' LoggingConfiguration (Maybe Text)

-- | The name of the CloudWatch logging group for the Amazon Web Services
--   Transfer server to which this workflow belongs.
loggingConfiguration_logGroupName :: Lens' LoggingConfiguration (Maybe Text)

-- | The secondary POSIX group IDs used for all EFS operations by this
--   user.
posixProfile_secondaryGids :: Lens' PosixProfile (Maybe [Natural])

-- | The POSIX user ID used for all EFS operations by this user.
posixProfile_uid :: Lens' PosixProfile Natural

-- | The POSIX group ID used for all EFS operations by this user.
posixProfile_gid :: Lens' PosixProfile Natural

-- | Indicates passive mode, for FTP and FTPS protocols. Enter a single
--   dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer. For example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
protocolDetails_passiveIp :: Lens' ProtocolDetails (Maybe Text)

-- | Specifies the file version.
s3FileLocation_versionId :: Lens' S3FileLocation (Maybe Text)

-- | The entity tag is a hash of the object. The ETag reflects changes only
--   to the contents of an object, not its metadata.
s3FileLocation_etag :: Lens' S3FileLocation (Maybe Text)

-- | Specifies the S3 bucket that contains the file being used.
s3FileLocation_bucket :: Lens' S3FileLocation (Maybe Text)

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
s3FileLocation_key :: Lens' S3FileLocation (Maybe Text)

-- | Specifies the S3 bucket for the customer input file.
s3InputFileLocation_bucket :: Lens' S3InputFileLocation (Maybe Text)

-- | The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
s3InputFileLocation_key :: Lens' S3InputFileLocation (Maybe Text)

-- | The name assigned to the tag that you create.
s3Tag_key :: Lens' S3Tag Text

-- | The value that corresponds to the key.
s3Tag_value :: Lens' S3Tag Text

-- | The Server ID (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and
--   user (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
serviceMetadata_userDetails :: Lens' ServiceMetadata UserDetails

-- | Specifies the date that the public key was added to the user account.
sshPublicKey_dateImported :: Lens' SshPublicKey UTCTime

-- | Specifies the content of the SSH public key as specified by the
--   <tt>PublicKeyId</tt>.
sshPublicKey_sshPublicKeyBody :: Lens' SshPublicKey Text

-- | Specifies the <tt>SshPublicKeyId</tt> parameter contains the
--   identifier of the public key.
sshPublicKey_sshPublicKeyId :: Lens' SshPublicKey Text

-- | The name assigned to the tag that you create.
tag_key :: Lens' Tag Text

-- | Contains one or more values that you assigned to the key name you
--   create.
tag_value :: Lens' Tag Text

-- | The name of the step, used as an identifier.
tagStepDetails_name :: Lens' TagStepDetails (Maybe Text)

-- | Array that contains from 1 to 10 key/value pairs.
tagStepDetails_tags :: Lens' TagStepDetails (Maybe (NonEmpty S3Tag))

-- | The system-assigned unique identifier for a session that corresponds
--   to the workflow.
userDetails_sessionId :: Lens' UserDetails (Maybe Text)

-- | A unique string that identifies a user account associated with a
--   server.
userDetails_userName :: Lens' UserDetails Text

-- | The system-assigned unique identifier for a Transfer server instance.
userDetails_serverId :: Lens' UserDetails Text

-- | A unique identifier for the workflow.
workflowDetail_workflowId :: Lens' WorkflowDetail Text

-- | Includes the necessary permissions for S3, EFS, and Lambda operations
--   that Transfer can assume, so that all workflow steps can operate on
--   the required resources
workflowDetail_executionRole :: Lens' WorkflowDetail Text

-- | A trigger that starts a workflow: the workflow begins to execute after
--   a file is uploaded.
workflowDetails_onUpload :: Lens' WorkflowDetails [WorkflowDetail]

-- | Details for a step that creates one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
workflowStep_tagStepDetails :: Lens' WorkflowStep (Maybe TagStepDetails)

-- | Details for a step that deletes the file.
workflowStep_deleteStepDetails :: Lens' WorkflowStep (Maybe DeleteStepDetails)

-- | Details for a step that performs a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
workflowStep_copyStepDetails :: Lens' WorkflowStep (Maybe CopyStepDetails)

-- | Currently, the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
workflowStep_type :: Lens' WorkflowStep (Maybe WorkflowStepType)

-- | Details for a step that invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
workflowStep_customStepDetails :: Lens' WorkflowStep (Maybe CustomStepDetails)


module Amazonka.Transfer.Waiters


-- | Derived from API version <tt>2018-11-05</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Web Services Transfer Family is a fully managed service that
--   enables the transfer of files over the File Transfer Protocol (FTP),
--   File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File
--   Transfer Protocol (SFTP) directly into and out of Amazon Simple
--   Storage Service (Amazon S3). Amazon Web Services helps you seamlessly
--   migrate your file transfer workflows to Amazon Web Services Transfer
--   Family by integrating with existing authentication systems, and
--   providing DNS routing with Amazon Route 53 so nothing changes for your
--   customers and partners, or their applications. With your data in
--   Amazon S3, you can use it with Amazon Web Services services for
--   processing, analytics, machine learning, and archiving. Getting
--   started with Amazon Web Services Transfer Family is easy since there
--   is no infrastructure to buy and set up.
module Amazonka.Transfer

-- | API version <tt>2018-11-05</tt> of the Amazon Transfer Family SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the client submits a malformed request.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the <tt>UpdateServer</tt> is called for
--   a file transfer protocol-enabled server that has VPC as the endpoint
--   type and the server's <tt>VpcEndpointID</tt> is not in the available
--   state.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
--   
--   HTTP Status Code: 400
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>NextToken</tt> parameter that was passed is invalid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when an error occurs in the Amazon Web
--   ServicesTransfer Family service.
_InternalServiceError :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource does not exist.
_ResourceExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed because the Amazon Web ServicesTransfer Family
--   service is not available.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a resource is not found by the Amazon
--   Web ServicesTransfer Family service.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newUpdateServer</a> smart constructor.
data UpdateServer
UpdateServer' :: Maybe ProtocolDetails -> Maybe Text -> Maybe (Sensitive Text) -> Maybe (NonEmpty Protocol) -> Maybe EndpointType -> Maybe Text -> Maybe Text -> Maybe IdentityProviderDetails -> Maybe WorkflowDetails -> Maybe EndpointDetails -> Text -> UpdateServer

-- | Create a value of <a>UpdateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolDetails:UpdateServer'</a>,
--   <a>updateServer_protocolDetails</a> - The protocol settings that are
--   configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode (for FTP
--   and FTPS protocols). Enter a single dotted-quad IPv4 address, such as
--   the external IP address of a firewall, router, or load balancer.
--   
--   <a>$sel:loggingRole:UpdateServer'</a>, <a>updateServer_loggingRole</a>
--   - Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:hostKey:UpdateServer'</a>, <a>updateServer_hostKey</a> - The
--   RSA private key as generated by <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt>.
--   
--   If you aren't planning to migrate existing users from an existing
--   server to a new server, don't update the host key. Accidentally
--   changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web ServicesTransfer Family User
--   Guide</i>.
--   
--   <a>$sel:protocols:UpdateServer'</a>, <a>updateServer_protocols</a> -
--   Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP): File transfer
--   over SSH</li>
--   <li>File Transfer Protocol Secure (FTPS): File transfer with TLS
--   encryption</li>
--   <li>File Transfer Protocol (FTP): Unencrypted file transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web ServicesCertificate Manager (ACM) which will be used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:endpointType:UpdateServer'</a>,
--   <a>updateServer_endpointType</a> - The type of endpoint that you want
--   your server to use. You can choose to make your server's endpoint
--   publicly accessible (PUBLIC) or host it inside your VPC. With an
--   endpoint that is hosted in a VPC, you can restrict access to your
--   server and resources only within your VPC or choose to make it
--   internet facing by attaching Elastic IP addresses directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
--   
--   <a>$sel:securityPolicyName:UpdateServer'</a>,
--   <a>updateServer_securityPolicyName</a> - Specifies the name of the
--   security policy that is attached to the server.
--   
--   <a>$sel:certificate:UpdateServer'</a>, <a>updateServer_certificate</a>
--   - The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate
--   Manager (ACM) certificate. Required when <tt>Protocols</tt> is set to
--   <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web ServicesCertificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web ServicesCertificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web ServicesCertificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
--   
--   <a>$sel:identityProviderDetails:UpdateServer'</a>,
--   <a>updateServer_identityProviderDetails</a> - An array containing all
--   of the information required to call a customer's authentication API
--   method.
--   
--   <a>$sel:workflowDetails:UpdateServer'</a>,
--   <a>updateServer_workflowDetails</a> - Specifies the workflow ID for
--   the workflow to assign and the execution role used for executing the
--   workflow.
--   
--   <a>$sel:endpointDetails:UpdateServer'</a>,
--   <a>updateServer_endpointDetails</a> - The virtual private cloud (VPC)
--   endpoint settings that are configured for your server. When you host
--   your endpoint within your VPC, you can make it accessible only to
--   resources within your VPC, or you can attach Elastic IP addresses and
--   make it accessible to clients over the internet. Your VPC's default
--   security groups are automatically assigned to your endpoint.
--   
--   <a>$sel:serverId:UpdateServer'</a>, <a>updateServer_serverId</a> - A
--   system-assigned unique identifier for a server instance that the user
--   account is assigned to.
newUpdateServer :: Text -> UpdateServer

-- | <i>See:</i> <a>newUpdateServerResponse</a> smart constructor.
data UpdateServerResponse
UpdateServerResponse' :: Int -> Text -> UpdateServerResponse

-- | Create a value of <a>UpdateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateServerResponse'</a>,
--   <a>updateServerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:UpdateServer'</a>,
--   <a>updateServerResponse_serverId</a> - A system-assigned unique
--   identifier for a server that the user account is assigned to.
newUpdateServerResponse :: Int -> Text -> UpdateServerResponse

-- | <i>See:</i> <a>newDeleteServer</a> smart constructor.
data DeleteServer
DeleteServer' :: Text -> DeleteServer

-- | Create a value of <a>DeleteServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteServer'</a>, <a>deleteServer_serverId</a> - A
--   unique system-assigned identifier for a server instance.
newDeleteServer :: Text -> DeleteServer

-- | <i>See:</i> <a>newDeleteServerResponse</a> smart constructor.
data DeleteServerResponse
DeleteServerResponse' :: DeleteServerResponse

-- | Create a value of <a>DeleteServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteServerResponse :: DeleteServerResponse

-- | <i>See:</i> <a>newCreateWorkflow</a> smart constructor.
data CreateWorkflow
CreateWorkflow' :: Maybe [WorkflowStep] -> Maybe Text -> Maybe (NonEmpty Tag) -> [WorkflowStep] -> CreateWorkflow

-- | Create a value of <a>CreateWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:CreateWorkflow'</a>,
--   <a>createWorkflow_onExceptionSteps</a> - Specifies the steps (actions)
--   to take if errors are encountered during execution of the workflow.
--   
--   For custom steps, the lambda function needs to send <tt>FAILURE</tt>
--   to the call back API to kick off the exception steps. Additionally, if
--   the lambda does not send <tt>SUCCESS</tt> before it times out, the
--   exception steps are executed.
--   
--   <a>$sel:description:CreateWorkflow'</a>,
--   <a>createWorkflow_description</a> - A textual description for the
--   workflow.
--   
--   <a>$sel:tags:CreateWorkflow'</a>, <a>createWorkflow_tags</a> -
--   Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
--   
--   <a>$sel:steps:CreateWorkflow'</a>, <a>createWorkflow_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
--   
--   The <tt>TYPE</tt> specifies which of the following actions is being
--   taken for this step.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   Currently, copying and tagging are supported only on S3.
--   
--   For file location, you specify either the S3 bucket and key, or the
--   EFS filesystem ID and path.
newCreateWorkflow :: CreateWorkflow

-- | <i>See:</i> <a>newCreateWorkflowResponse</a> smart constructor.
data CreateWorkflowResponse
CreateWorkflowResponse' :: Int -> Text -> CreateWorkflowResponse

-- | Create a value of <a>CreateWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateWorkflowResponse'</a>,
--   <a>createWorkflowResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:workflowId:CreateWorkflowResponse'</a>,
--   <a>createWorkflowResponse_workflowId</a> - A unique identifier for the
--   workflow.
newCreateWorkflowResponse :: Int -> Text -> CreateWorkflowResponse

-- | <i>See:</i> <a>newDeleteSshPublicKey</a> smart constructor.
data DeleteSshPublicKey
DeleteSshPublicKey' :: Text -> Text -> Text -> DeleteSshPublicKey

-- | Create a value of <a>DeleteSshPublicKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteSshPublicKey'</a>,
--   <a>deleteSshPublicKey_serverId</a> - A system-assigned unique
--   identifier for a file transfer protocol-enabled server instance that
--   has the user assigned to it.
--   
--   <a>$sel:sshPublicKeyId:DeleteSshPublicKey'</a>,
--   <a>deleteSshPublicKey_sshPublicKeyId</a> - A unique identifier used to
--   reference your user's specific SSH key.
--   
--   <a>$sel:userName:DeleteSshPublicKey'</a>,
--   <a>deleteSshPublicKey_userName</a> - A unique string that identifies a
--   user whose public key is being deleted.
newDeleteSshPublicKey :: Text -> Text -> Text -> DeleteSshPublicKey

-- | <i>See:</i> <a>newDeleteSshPublicKeyResponse</a> smart constructor.
data DeleteSshPublicKeyResponse
DeleteSshPublicKeyResponse' :: DeleteSshPublicKeyResponse

-- | Create a value of <a>DeleteSshPublicKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSshPublicKeyResponse :: DeleteSshPublicKeyResponse

-- | <i>See:</i> <a>newListSecurityPolicies</a> smart constructor.
data ListSecurityPolicies
ListSecurityPolicies' :: Maybe Text -> Maybe Natural -> ListSecurityPolicies

-- | Create a value of <a>ListSecurityPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecurityPolicies'</a>,
--   <a>listSecurityPolicies_nextToken</a> - When additional results are
--   obtained from the <tt>ListSecurityPolicies</tt> command, a
--   <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass the <tt>NextToken</tt> parameter in a subsequent command to
--   continue listing additional security policies.
--   
--   <a>$sel:maxResults:ListSecurityPolicies'</a>,
--   <a>listSecurityPolicies_maxResults</a> - Specifies the number of
--   security policies to return as a response to the
--   <tt>ListSecurityPolicies</tt> query.
newListSecurityPolicies :: ListSecurityPolicies

-- | <i>See:</i> <a>newListSecurityPoliciesResponse</a> smart constructor.
data ListSecurityPoliciesResponse
ListSecurityPoliciesResponse' :: Maybe Text -> Int -> [Text] -> ListSecurityPoliciesResponse

-- | Create a value of <a>ListSecurityPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecurityPolicies'</a>,
--   <a>listSecurityPoliciesResponse_nextToken</a> - When you can get
--   additional results from the <tt>ListSecurityPolicies</tt> operation, a
--   <tt>NextToken</tt> parameter is returned in the output. In a following
--   command, you can pass in the <tt>NextToken</tt> parameter to continue
--   listing security policies.
--   
--   <a>$sel:httpStatus:ListSecurityPoliciesResponse'</a>,
--   <a>listSecurityPoliciesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:securityPolicyNames:ListSecurityPoliciesResponse'</a>,
--   <a>listSecurityPoliciesResponse_securityPolicyNames</a> - An array of
--   security policies that were listed.
newListSecurityPoliciesResponse :: Int -> ListSecurityPoliciesResponse

-- | <i>See:</i> <a>newDeleteWorkflow</a> smart constructor.
data DeleteWorkflow
DeleteWorkflow' :: Text -> DeleteWorkflow

-- | Create a value of <a>DeleteWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:DeleteWorkflow'</a>,
--   <a>deleteWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
newDeleteWorkflow :: Text -> DeleteWorkflow

-- | <i>See:</i> <a>newDeleteWorkflowResponse</a> smart constructor.
data DeleteWorkflowResponse
DeleteWorkflowResponse' :: DeleteWorkflowResponse

-- | Create a value of <a>DeleteWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteWorkflowResponse :: DeleteWorkflowResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - When you request additional
--   results from the <tt>ListTagsForResource</tt> operation, a
--   <tt>NextToken</tt> parameter is returned in the input. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional tags.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - Specifies the number of tags
--   to return as a response to the <tt>ListTagsForResource</tt> request.
--   
--   <a>$sel:arn:ListTagsForResource'</a>, <a>listTagsForResource_arn</a> -
--   Requests the tags associated with a particular Amazon Resource Name
--   (ARN). An ARN is an identifier for a specific Amazon Web Services
--   resource, such as a server, user, or role.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_arn</a> - The ARN you specified to list
--   the tags of.
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - When you can get
--   additional results from the <tt>ListTagsForResource</tt> call, a
--   <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional tags.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Key-value pairs that are
--   assigned to a resource, usually for the purpose of grouping and
--   searching for items. Tags are metadata that you define.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newSendWorkflowStepState</a> smart constructor.
data SendWorkflowStepState
SendWorkflowStepState' :: Text -> Text -> Text -> CustomStepStatus -> SendWorkflowStepState

-- | Create a value of <a>SendWorkflowStepState</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:executionId:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:token:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_token</a> - Used to distinguish between
--   multiple callbacks for multiple Lambda steps within the same
--   execution.
--   
--   <a>$sel:status:SendWorkflowStepState'</a>,
--   <a>sendWorkflowStepState_status</a> - Indicates whether the specified
--   step succeeded or failed.
newSendWorkflowStepState :: Text -> Text -> Text -> CustomStepStatus -> SendWorkflowStepState

-- | <i>See:</i> <a>newSendWorkflowStepStateResponse</a> smart constructor.
data SendWorkflowStepStateResponse
SendWorkflowStepStateResponse' :: Int -> SendWorkflowStepStateResponse

-- | Create a value of <a>SendWorkflowStepStateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendWorkflowStepStateResponse'</a>,
--   <a>sendWorkflowStepStateResponse_httpStatus</a> - The response's http
--   status code.
newSendWorkflowStepStateResponse :: Int -> SendWorkflowStepStateResponse

-- | <i>See:</i> <a>newStopServer</a> smart constructor.
data StopServer
StopServer' :: Text -> StopServer

-- | Create a value of <a>StopServer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:StopServer'</a>, <a>stopServer_serverId</a> - A
--   system-assigned unique identifier for a server that you stopped.
newStopServer :: Text -> StopServer

-- | <i>See:</i> <a>newStopServerResponse</a> smart constructor.
data StopServerResponse
StopServerResponse' :: StopServerResponse

-- | Create a value of <a>StopServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStopServerResponse :: StopServerResponse

-- | <i>See:</i> <a>newListUsers</a> smart constructor.
data ListUsers
ListUsers' :: Maybe Text -> Maybe Natural -> Text -> ListUsers

-- | Create a value of <a>ListUsers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsers_nextToken</a> - When
--   you can get additional results from the <tt>ListUsers</tt> call, a
--   <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
--   
--   <a>$sel:maxResults:ListUsers'</a>, <a>listUsers_maxResults</a> -
--   Specifies the number of users to return as a response to the
--   <tt>ListUsers</tt> request.
--   
--   <a>$sel:serverId:ListUsers'</a>, <a>listUsers_serverId</a> - A
--   system-assigned unique identifier for a server that has users assigned
--   to it.
newListUsers :: Text -> ListUsers

-- | <i>See:</i> <a>newListUsersResponse</a> smart constructor.
data ListUsersResponse
ListUsersResponse' :: Maybe Text -> Int -> Text -> [ListedUser] -> ListUsersResponse

-- | Create a value of <a>ListUsersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsers'</a>, <a>listUsersResponse_nextToken</a> -
--   When you can get additional results from the <tt>ListUsers</tt> call,
--   a <tt>NextToken</tt> parameter is returned in the output. You can then
--   pass in a subsequent command to the <tt>NextToken</tt> parameter to
--   continue listing additional users.
--   
--   <a>$sel:httpStatus:ListUsersResponse'</a>,
--   <a>listUsersResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:serverId:ListUsers'</a>, <a>listUsersResponse_serverId</a> - A
--   system-assigned unique identifier for a server that the users are
--   assigned to.
--   
--   <a>$sel:users:ListUsersResponse'</a>, <a>listUsersResponse_users</a> -
--   Returns the user accounts and their properties for the
--   <tt>ServerId</tt> value that you specify.
newListUsersResponse :: Int -> Text -> ListUsersResponse

-- | <i>See:</i> <a>newDescribeServer</a> smart constructor.
data DescribeServer
DescribeServer' :: Text -> DescribeServer

-- | Create a value of <a>DescribeServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DescribeServer'</a>, <a>describeServer_serverId</a> -
--   A system-assigned unique identifier for a server.
newDescribeServer :: Text -> DescribeServer

-- | <i>See:</i> <a>newDescribeServerResponse</a> smart constructor.
data DescribeServerResponse
DescribeServerResponse' :: Int -> DescribedServer -> DescribeServerResponse

-- | Create a value of <a>DescribeServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeServerResponse'</a>,
--   <a>describeServerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:server:DescribeServerResponse'</a>,
--   <a>describeServerResponse_server</a> - An array containing the
--   properties of a server with the <tt>ServerID</tt> you specified.
newDescribeServerResponse :: Int -> DescribedServer -> DescribeServerResponse

-- | <i>See:</i> <a>newDescribeSecurityPolicy</a> smart constructor.
data DescribeSecurityPolicy
DescribeSecurityPolicy' :: Text -> DescribeSecurityPolicy

-- | Create a value of <a>DescribeSecurityPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityPolicyName:DescribeSecurityPolicy'</a>,
--   <a>describeSecurityPolicy_securityPolicyName</a> - Specifies the name
--   of the security policy that is attached to the server.
newDescribeSecurityPolicy :: Text -> DescribeSecurityPolicy

-- | <i>See:</i> <a>newDescribeSecurityPolicyResponse</a> smart
--   constructor.
data DescribeSecurityPolicyResponse
DescribeSecurityPolicyResponse' :: Int -> DescribedSecurityPolicy -> DescribeSecurityPolicyResponse

-- | Create a value of <a>DescribeSecurityPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeSecurityPolicyResponse'</a>,
--   <a>describeSecurityPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:securityPolicy:DescribeSecurityPolicyResponse'</a>,
--   <a>describeSecurityPolicyResponse_securityPolicy</a> - An array
--   containing the properties of the security policy.
newDescribeSecurityPolicyResponse :: Int -> DescribedSecurityPolicy -> DescribeSecurityPolicyResponse

-- | <i>See:</i> <a>newImportSshPublicKey</a> smart constructor.
data ImportSshPublicKey
ImportSshPublicKey' :: Text -> Text -> Text -> ImportSshPublicKey

-- | Create a value of <a>ImportSshPublicKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:ImportSshPublicKey'</a>,
--   <a>importSshPublicKey_serverId</a> - A system-assigned unique
--   identifier for a server.
--   
--   <a>$sel:sshPublicKeyBody:ImportSshPublicKey'</a>,
--   <a>importSshPublicKey_sshPublicKeyBody</a> - The public key portion of
--   an SSH key pair.
--   
--   <a>$sel:userName:ImportSshPublicKey'</a>,
--   <a>importSshPublicKey_userName</a> - The name of the user account that
--   is assigned to one or more servers.
newImportSshPublicKey :: Text -> Text -> Text -> ImportSshPublicKey

-- | Identifies the user, the server they belong to, and the identifier of
--   the SSH public key associated with that user. A user can have more
--   than one key on each server that they are associated with.
--   
--   <i>See:</i> <a>newImportSshPublicKeyResponse</a> smart constructor.
data ImportSshPublicKeyResponse
ImportSshPublicKeyResponse' :: Int -> Text -> Text -> Text -> ImportSshPublicKeyResponse

-- | Create a value of <a>ImportSshPublicKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ImportSshPublicKeyResponse'</a>,
--   <a>importSshPublicKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:serverId:ImportSshPublicKey'</a>,
--   <a>importSshPublicKeyResponse_serverId</a> - A system-assigned unique
--   identifier for a server.
--   
--   <a>$sel:sshPublicKeyId:ImportSshPublicKeyResponse'</a>,
--   <a>importSshPublicKeyResponse_sshPublicKeyId</a> - The name given to a
--   public key by the system that was imported.
--   
--   <a>$sel:userName:ImportSshPublicKey'</a>,
--   <a>importSshPublicKeyResponse_userName</a> - A user name assigned to
--   the <tt>ServerID</tt> value that you specified.
newImportSshPublicKeyResponse :: Int -> Text -> Text -> Text -> ImportSshPublicKeyResponse

-- | <i>See:</i> <a>newListExecutions</a> smart constructor.
data ListExecutions
ListExecutions' :: Maybe Text -> Maybe Natural -> Text -> ListExecutions

-- | Create a value of <a>ListExecutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListExecutions'</a>, <a>listExecutions_nextToken</a>
--   - <tt>ListExecutions</tt> returns the <tt>NextToken</tt> parameter in
--   the output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional executions.
--   
--   This is useful for pagination, for instance. If you have 100
--   executions for a workflow, you might only want to list first 10. If
--   so, callthe API by specifing the <tt>max-results</tt>:
--   
--   <pre>
--   aws transfer list-executions --max-results 10
--   </pre>
--   
--   This returns details for the first 10 executions, as well as the
--   pointer (<tt>NextToken</tt>) to the eleventh execution. You can now
--   call the API again, suppling the <tt>NextToken</tt> value you
--   received:
--   
--   <pre>
--   aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult
--   </pre>
--   
--   This call returns the next 10 executions, the 11th through the 20th.
--   You can then repeat the call until the details for all 100 executions
--   have been returned.
--   
--   <a>$sel:maxResults:ListExecutions'</a>,
--   <a>listExecutions_maxResults</a> - Specifies the aximum number of
--   executions to return.
--   
--   <a>$sel:workflowId:ListExecutions'</a>,
--   <a>listExecutions_workflowId</a> - A unique identifier for the
--   workflow.
newListExecutions :: Text -> ListExecutions

-- | <i>See:</i> <a>newListExecutionsResponse</a> smart constructor.
data ListExecutionsResponse
ListExecutionsResponse' :: Maybe Text -> Int -> Text -> [ListedExecution] -> ListExecutionsResponse

-- | Create a value of <a>ListExecutionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListExecutions'</a>,
--   <a>listExecutionsResponse_nextToken</a> - <tt>ListExecutions</tt>
--   returns the <tt>NextToken</tt> parameter in the output. You can then
--   pass the <tt>NextToken</tt> parameter in a subsequent command to
--   continue listing additional executions.
--   
--   <a>$sel:httpStatus:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:workflowId:ListExecutions'</a>,
--   <a>listExecutionsResponse_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:executions:ListExecutionsResponse'</a>,
--   <a>listExecutionsResponse_executions</a> - Returns the details for
--   each execution.
--   
--   <ul>
--   <li><b>NextToken</b>: returned from a call to several APIs, you can
--   use pass it to a subsequent command to continue listing additional
--   executions.</li>
--   <li><b>StartTime</b>: timestamp indicating when the execution
--   began.</li>
--   <li><b>Executions</b>: details of the execution, including the
--   execution ID, initial file location, and Service metadata.</li>
--   <li><b>Status</b>: one of the following values: <tt>IN_PROGRESS</tt>,
--   <tt>COMPLETED</tt>, <tt>EXCEPTION</tt>,
--   <tt>HANDLING_EXEPTION</tt>.</li>
--   </ul>
newListExecutionsResponse :: Int -> Text -> ListExecutionsResponse

-- | <i>See:</i> <a>newCreateServer</a> smart constructor.
data CreateServer
CreateServer' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe IdentityProviderType -> Maybe (NonEmpty Protocol) -> Maybe Domain -> Maybe EndpointType -> Maybe Text -> Maybe Text -> Maybe IdentityProviderDetails -> Maybe WorkflowDetails -> Maybe (NonEmpty Tag) -> Maybe EndpointDetails -> CreateServer

-- | Create a value of <a>CreateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:CreateServer'</a>, <a>createServer_loggingRole</a>
--   - Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:hostKey:CreateServer'</a>, <a>createServer_hostKey</a> - The
--   RSA private key as generated by the <tt>ssh-keygen -N "" -m PEM -f
--   my-new-server-key</tt> command.
--   
--   If you aren't planning to migrate existing users from an existing
--   SFTP-enabled server to a new server, don't update the host key.
--   Accidentally changing a server's host key can be disruptive.
--   
--   For more information, see <a>Change the host key for your SFTP-enabled
--   server</a> in the <i>Amazon Web Services Transfer Family User
--   Guide</i>.
--   
--   <a>$sel:identityProviderType:CreateServer'</a>,
--   <a>createServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:protocols:CreateServer'</a>, <a>createServer_protocols</a> -
--   Specifies the file transfer protocol or protocols over which your file
--   transfer protocol client can connect to your server's endpoint. The
--   available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   If you select <tt>FTPS</tt>, you must choose a certificate stored in
--   Amazon Web Services Certificate Manager (ACM) which is used to
--   identify your server when clients connect to it over FTPS.
--   
--   If <tt>Protocol</tt> includes either <tt>FTP</tt> or <tt>FTPS</tt>,
--   then the <tt>EndpointType</tt> must be <tt>VPC</tt> and the
--   <tt>IdentityProviderType</tt> must be <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>.
--   
--   If <tt>Protocol</tt> includes <tt>FTP</tt>, then
--   <tt>AddressAllocationIds</tt> cannot be associated.
--   
--   If <tt>Protocol</tt> is set only to <tt>SFTP</tt>, the
--   <tt>EndpointType</tt> can be set to <tt>PUBLIC</tt> and the
--   <tt>IdentityProviderType</tt> can be set to <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:domain:CreateServer'</a>, <a>createServer_domain</a> - The
--   domain of the storage system that is used for file transfers. There
--   are two domains available: Amazon Simple Storage Service (Amazon S3)
--   and Amazon Elastic File System (Amazon EFS). The default value is S3.
--   
--   After the server is created, the domain cannot be changed.
--   
--   <a>$sel:endpointType:CreateServer'</a>,
--   <a>createServer_endpointType</a> - The type of endpoint that you want
--   your server to use. You can choose to make your server's endpoint
--   publicly accessible (PUBLIC) or host it inside your VPC. With an
--   endpoint that is hosted in a VPC, you can restrict access to your
--   server and resources only within your VPC or choose to make it
--   internet facing by attaching Elastic IP addresses directly to it.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Services account
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Services account on or before May 19, 2021, you
--   will not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   It is recommended that you use <tt>VPC</tt> as the
--   <tt>EndpointType</tt>. With this endpoint type, you have the option to
--   directly associate up to three Elastic IPv4 addresses (BYO IP
--   included) with your server's endpoint and use VPC security groups to
--   restrict traffic by the client's public IP address. This is not
--   possible with <tt>EndpointType</tt> set to <tt>VPC_ENDPOINT</tt>.
--   
--   <a>$sel:securityPolicyName:CreateServer'</a>,
--   <a>createServer_securityPolicyName</a> - Specifies the name of the
--   security policy that is attached to the server.
--   
--   <a>$sel:certificate:CreateServer'</a>, <a>createServer_certificate</a>
--   - The Amazon Resource Name (ARN) of the Amazon Web Services
--   Certificate Manager (ACM) certificate. Required when
--   <tt>Protocols</tt> is set to <tt>FTPS</tt>.
--   
--   To request a new public certificate, see <a>Request a public
--   certificate</a> in the <i>Amazon Web Services Certificate Manager User
--   Guide</i>.
--   
--   To import an existing certificate into ACM, see <a>Importing
--   certificates into ACM</a> in the <i>Amazon Web Services Certificate
--   Manager User Guide</i>.
--   
--   To request a private certificate to use FTPS through private IP
--   addresses, see <a>Request a private certificate</a> in the <i>Amazon
--   Web Services Certificate Manager User Guide</i>.
--   
--   Certificates with the following cryptographic algorithms and key sizes
--   are supported:
--   
--   <ul>
--   <li>2048-bit RSA (RSA_2048)</li>
--   <li>4096-bit RSA (RSA_4096)</li>
--   <li>Elliptic Prime Curve 256 bit (EC_prime256v1)</li>
--   <li>Elliptic Prime Curve 384 bit (EC_secp384r1)</li>
--   <li>Elliptic Prime Curve 521 bit (EC_secp521r1)</li>
--   </ul>
--   
--   The certificate must be a valid SSL/TLS X.509 version 3 certificate
--   with FQDN or IP address specified and information about the issuer.
--   
--   <a>$sel:identityProviderDetails:CreateServer'</a>,
--   <a>createServer_identityProviderDetails</a> - Required when
--   <tt>IdentityProviderType</tt> is set to <tt>AWS_DIRECTORY_SERVICE</tt>
--   or <tt>API_GATEWAY</tt>. Accepts an array containing all of the
--   information required to use a directory in
--   <tt>AWS_DIRECTORY_SERVICE</tt> or invoke a customer-supplied
--   authentication API, including the API Gateway URL. Not required when
--   <tt>IdentityProviderType</tt> is set to <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:workflowDetails:CreateServer'</a>,
--   <a>createServer_workflowDetails</a> - Specifies the workflow ID for
--   the workflow to assign and the execution role used for executing the
--   workflow.
--   
--   <a>$sel:tags:CreateServer'</a>, <a>createServer_tags</a> - Key-value
--   pairs that can be used to group and search for servers.
--   
--   <a>$sel:endpointDetails:CreateServer'</a>,
--   <a>createServer_endpointDetails</a> - The virtual private cloud (VPC)
--   endpoint settings that are configured for your server. When you host
--   your endpoint within your VPC, you can make it accessible only to
--   resources within your VPC, or you can attach Elastic IP addresses and
--   make it accessible to clients over the internet. Your VPC's default
--   security groups are automatically assigned to your endpoint.
newCreateServer :: CreateServer

-- | <i>See:</i> <a>newCreateServerResponse</a> smart constructor.
data CreateServerResponse
CreateServerResponse' :: Int -> Text -> CreateServerResponse

-- | Create a value of <a>CreateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateServerResponse'</a>,
--   <a>createServerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:CreateServerResponse'</a>,
--   <a>createServerResponse_serverId</a> - The service-assigned ID of the
--   server that is created.
newCreateServerResponse :: Int -> Text -> CreateServerResponse

-- | <i>See:</i> <a>newTestIdentityProvider</a> smart constructor.
data TestIdentityProvider
TestIdentityProvider' :: Maybe Protocol -> Maybe (Sensitive Text) -> Maybe Text -> Text -> Text -> TestIdentityProvider

-- | Create a value of <a>TestIdentityProvider</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverProtocol:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_serverProtocol</a> - The type of file transfer
--   protocol to be tested.
--   
--   The available protocols are:
--   
--   <ul>
--   <li>Secure Shell (SSH) File Transfer Protocol (SFTP)</li>
--   <li>File Transfer Protocol Secure (FTPS)</li>
--   <li>File Transfer Protocol (FTP)</li>
--   </ul>
--   
--   <a>$sel:userPassword:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_userPassword</a> - The password of the user
--   account to be tested.
--   
--   <a>$sel:sourceIp:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_sourceIp</a> - The source IP address of the
--   user account to be tested.
--   
--   <a>$sel:serverId:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_serverId</a> - A system-assigned identifier
--   for a specific server. That server's user authentication method is
--   tested with a user name and password.
--   
--   <a>$sel:userName:TestIdentityProvider'</a>,
--   <a>testIdentityProvider_userName</a> - The name of the user account to
--   be tested.
newTestIdentityProvider :: Text -> Text -> TestIdentityProvider

-- | <i>See:</i> <a>newTestIdentityProviderResponse</a> smart constructor.
data TestIdentityProviderResponse
TestIdentityProviderResponse' :: Maybe Text -> Maybe Text -> Int -> Int -> Text -> TestIdentityProviderResponse

-- | Create a value of <a>TestIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:response:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_response</a> - The response that is
--   returned from your API Gateway.
--   
--   <a>$sel:message:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_message</a> - A message that indicates
--   whether the test was successful or not.
--   
--   <a>$sel:httpStatus:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:statusCode:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_statusCode</a> - The HTTP status code
--   that is the response from your API Gateway.
--   
--   <a>$sel:url:TestIdentityProviderResponse'</a>,
--   <a>testIdentityProviderResponse_url</a> - The endpoint of the service
--   used to authenticate a user.
newTestIdentityProviderResponse :: Int -> Int -> Text -> TestIdentityProviderResponse

-- | <i>See:</i> <a>newListServers</a> smart constructor.
data ListServers
ListServers' :: Maybe Text -> Maybe Natural -> ListServers

-- | Create a value of <a>ListServers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServers'</a>, <a>listServers_nextToken</a> -
--   When additional results are obtained from the <tt>ListServers</tt>
--   command, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass the <tt>NextToken</tt> parameter in a subsequent command
--   to continue listing additional servers.
--   
--   <a>$sel:maxResults:ListServers'</a>, <a>listServers_maxResults</a> -
--   Specifies the number of servers to return as a response to the
--   <tt>ListServers</tt> query.
newListServers :: ListServers

-- | <i>See:</i> <a>newListServersResponse</a> smart constructor.
data ListServersResponse
ListServersResponse' :: Maybe Text -> Int -> [ListedServer] -> ListServersResponse

-- | Create a value of <a>ListServersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServers'</a>,
--   <a>listServersResponse_nextToken</a> - When you can get additional
--   results from the <tt>ListServers</tt> operation, a <tt>NextToken</tt>
--   parameter is returned in the output. In a following command, you can
--   pass in the <tt>NextToken</tt> parameter to continue listing
--   additional servers.
--   
--   <a>$sel:httpStatus:ListServersResponse'</a>,
--   <a>listServersResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:servers:ListServersResponse'</a>,
--   <a>listServersResponse_servers</a> - An array of servers that were
--   listed.
newListServersResponse :: Int -> ListServersResponse

-- | <i>See:</i> <a>newDescribeUser</a> smart constructor.
data DescribeUser
DescribeUser' :: Text -> Text -> DescribeUser

-- | Create a value of <a>DescribeUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DescribeUser'</a>, <a>describeUser_serverId</a> - A
--   system-assigned unique identifier for a server that has this user
--   assigned.
--   
--   <a>$sel:userName:DescribeUser'</a>, <a>describeUser_userName</a> - The
--   name of the user assigned to one or more servers. User names are part
--   of the sign-in credentials to use the Amazon Web Services Transfer
--   Family service and perform file transfer tasks.
newDescribeUser :: Text -> Text -> DescribeUser

-- | <i>See:</i> <a>newDescribeUserResponse</a> smart constructor.
data DescribeUserResponse
DescribeUserResponse' :: Int -> Text -> DescribedUser -> DescribeUserResponse

-- | Create a value of <a>DescribeUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeUserResponse'</a>,
--   <a>describeUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:DescribeUser'</a>,
--   <a>describeUserResponse_serverId</a> - A system-assigned unique
--   identifier for a server that has this user assigned.
--   
--   <a>$sel:user:DescribeUserResponse'</a>,
--   <a>describeUserResponse_user</a> - An array containing the properties
--   of the user account for the <tt>ServerID</tt> value that you
--   specified.
newDescribeUserResponse :: Int -> Text -> DescribedUser -> DescribeUserResponse

-- | <i>See:</i> <a>newDescribeExecution</a> smart constructor.
data DescribeExecution
DescribeExecution' :: Text -> Text -> DescribeExecution

-- | Create a value of <a>DescribeExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionId:DescribeExecution'</a>,
--   <a>describeExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:workflowId:DescribeExecution'</a>,
--   <a>describeExecution_workflowId</a> - A unique identifier for the
--   workflow.
newDescribeExecution :: Text -> Text -> DescribeExecution

-- | <i>See:</i> <a>newDescribeExecutionResponse</a> smart constructor.
data DescribeExecutionResponse
DescribeExecutionResponse' :: Int -> Text -> DescribedExecution -> DescribeExecutionResponse

-- | Create a value of <a>DescribeExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:workflowId:DescribeExecution'</a>,
--   <a>describeExecutionResponse_workflowId</a> - A unique identifier for
--   the workflow.
--   
--   <a>$sel:execution:DescribeExecutionResponse'</a>,
--   <a>describeExecutionResponse_execution</a> - The structure that
--   contains the details of the workflow' execution.
newDescribeExecutionResponse :: Int -> Text -> DescribedExecution -> DescribeExecutionResponse

-- | <i>See:</i> <a>newListWorkflows</a> smart constructor.
data ListWorkflows
ListWorkflows' :: Maybe Text -> Maybe Natural -> ListWorkflows

-- | Create a value of <a>ListWorkflows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>, <a>listWorkflows_nextToken</a> -
--   <tt>ListWorkflows</tt> returns the <tt>NextToken</tt> parameter in the
--   output. You can then pass the <tt>NextToken</tt> parameter in a
--   subsequent command to continue listing additional workflows.
--   
--   <a>$sel:maxResults:ListWorkflows'</a>, <a>listWorkflows_maxResults</a>
--   - Specifies the maximum number of workflows to return.
newListWorkflows :: ListWorkflows

-- | <i>See:</i> <a>newListWorkflowsResponse</a> smart constructor.
data ListWorkflowsResponse
ListWorkflowsResponse' :: Maybe Text -> Int -> [ListedWorkflow] -> ListWorkflowsResponse

-- | Create a value of <a>ListWorkflowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>,
--   <a>listWorkflowsResponse_nextToken</a> - <tt>ListWorkflows</tt>
--   returns the <tt>NextToken</tt> parameter in the output. You can then
--   pass the <tt>NextToken</tt> parameter in a subsequent command to
--   continue listing additional workflows.
--   
--   <a>$sel:httpStatus:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:workflows:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_workflows</a> - Returns the <tt>Arn</tt>,
--   <tt>WorkflowId</tt>, and <tt>Description</tt> for each workflow.
newListWorkflowsResponse :: Int -> ListWorkflowsResponse

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> Text -> Text -> CreateUser

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:CreateUser'</a>,
--   <a>createUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:sshPublicKeyBody:CreateUser'</a>,
--   <a>createUser_sshPublicKeyBody</a> - The public portion of the Secure
--   Shell (SSH) key used to authenticate the user to the server.
--   
--   <a>$sel:posixProfile:CreateUser'</a>, <a>createUser_posixProfile</a> -
--   Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon EFS file systems. The POSIX permissions that are set on files
--   and directories in Amazon EFS determine the level of access your users
--   get when transferring files into and out of your Amazon EFS file
--   systems.
--   
--   <a>$sel:homeDirectoryMappings:CreateUser'</a>,
--   <a>createUser_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the HomeDirectory parameter
--   value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:policy:CreateUser'</a>, <a>createUser_policy</a> - A session
--   policy for your user so that you can use the same IAM role across
--   multiple users. This policy scopes down user access to portions of
--   their Amazon S3 bucket. Variables that you can use inside this policy
--   include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:CreateUser'</a>, <a>createUser_homeDirectory</a>
--   - The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:tags:CreateUser'</a>, <a>createUser_tags</a> - Key-value pairs
--   that can be used to group and search for users. Tags are metadata
--   attached to users for any purpose.
--   
--   <a>$sel:role':CreateUser'</a>, <a>createUser_role</a> - Specifies the
--   Amazon Resource Name (ARN) of the IAM role that controls your users'
--   access to your Amazon S3 bucket or EFS file system. The policies
--   attached to this role determine the level of access that you want to
--   provide your users when transferring files into and out of your Amazon
--   S3 bucket or EFS file system. The IAM role should also contain a trust
--   relationship that allows the server to access your resources when
--   servicing your users' transfer requests.
--   
--   <a>$sel:serverId:CreateUser'</a>, <a>createUser_serverId</a> - A
--   system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - A
--   unique string that identifies a user and is associated with a
--   <tt>ServerId</tt>. This user name must be a minimum of 3 and a maximum
--   of 100 characters long. The following are valid characters: a-z, A-Z,
--   0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user
--   name can't start with a hyphen, period, or at sign.
newCreateUser :: Text -> Text -> Text -> CreateUser

-- | <i>See:</i> <a>newCreateUserResponse</a> smart constructor.
data CreateUserResponse
CreateUserResponse' :: Int -> Text -> Text -> CreateUserResponse

-- | Create a value of <a>CreateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateUserResponse'</a>,
--   <a>createUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:CreateUser'</a>, <a>createUserResponse_serverId</a> -
--   The ID of the server that the user is attached to.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUserResponse_userName</a> -
--   A unique string that identifies a user account associated with a
--   server.
newCreateUserResponse :: Int -> Text -> Text -> CreateUserResponse

-- | <i>See:</i> <a>newStartServer</a> smart constructor.
data StartServer
StartServer' :: Text -> StartServer

-- | Create a value of <a>StartServer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:StartServer'</a>, <a>startServer_serverId</a> - A
--   system-assigned unique identifier for a server that you start.
newStartServer :: Text -> StartServer

-- | <i>See:</i> <a>newStartServerResponse</a> smart constructor.
data StartServerResponse
StartServerResponse' :: StartServerResponse

-- | Create a value of <a>StartServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartServerResponse :: StartServerResponse

-- | <i>See:</i> <a>newUpdateAccess</a> smart constructor.
data UpdateAccess
UpdateAccess' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateAccess

-- | Create a value of <a>UpdateAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:UpdateAccess'</a>,
--   <a>updateAccess_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:UpdateAccess'</a>,
--   <a>updateAccess_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:homeDirectoryMappings:UpdateAccess'</a>,
--   <a>updateAccess_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:role':UpdateAccess'</a>, <a>updateAccess_role</a> - Specifies
--   the Amazon Resource Name (ARN) of the IAM role that controls your
--   users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:UpdateAccess'</a>, <a>updateAccess_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   ServicesSecurity Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:UpdateAccess'</a>,
--   <a>updateAccess_homeDirectory</a> - The landing directory (folder) for
--   a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:serverId:UpdateAccess'</a>, <a>updateAccess_serverId</a> - A
--   system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
--   
--   <a>$sel:externalId:UpdateAccess'</a>, <a>updateAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newUpdateAccess :: Text -> Text -> UpdateAccess

-- | <i>See:</i> <a>newUpdateAccessResponse</a> smart constructor.
data UpdateAccessResponse
UpdateAccessResponse' :: Int -> Text -> Text -> UpdateAccessResponse

-- | Create a value of <a>UpdateAccessResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateAccessResponse'</a>,
--   <a>updateAccessResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:UpdateAccess'</a>,
--   <a>updateAccessResponse_serverId</a> - The ID of the server that the
--   user is attached to.
--   
--   <a>$sel:externalId:UpdateAccess'</a>,
--   <a>updateAccessResponse_externalId</a> - The external ID of the group
--   whose users have access to your Amazon S3 or Amazon EFS resources over
--   the enabled protocols using Amazon Web ServicesTransfer Family.
newUpdateAccessResponse :: Int -> Text -> Text -> UpdateAccessResponse

-- | <i>See:</i> <a>newDeleteAccess</a> smart constructor.
data DeleteAccess
DeleteAccess' :: Text -> Text -> DeleteAccess

-- | Create a value of <a>DeleteAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteAccess'</a>, <a>deleteAccess_serverId</a> - A
--   system-assigned unique identifier for a server that has this user
--   assigned.
--   
--   <a>$sel:externalId:DeleteAccess'</a>, <a>deleteAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newDeleteAccess :: Text -> Text -> DeleteAccess

-- | <i>See:</i> <a>newDeleteAccessResponse</a> smart constructor.
data DeleteAccessResponse
DeleteAccessResponse' :: DeleteAccessResponse

-- | Create a value of <a>DeleteAccessResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAccessResponse :: DeleteAccessResponse

-- | <i>See:</i> <a>newCreateAccess</a> smart constructor.
data CreateAccess
CreateAccess' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateAccess

-- | Create a value of <a>CreateAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:CreateAccess'</a>,
--   <a>createAccess_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:CreateAccess'</a>,
--   <a>createAccess_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:homeDirectoryMappings:CreateAccess'</a>,
--   <a>createAccess_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to
--   <tt>/</tt> and set <tt>Target</tt> to the <tt>HomeDirectory</tt>
--   parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:policy:CreateAccess'</a>, <a>createAccess_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Example session policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:CreateAccess'</a>,
--   <a>createAccess_homeDirectory</a> - The landing directory (folder) for
--   a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:role':CreateAccess'</a>, <a>createAccess_role</a> - Specifies
--   the Amazon Resource Name (ARN) of the IAM role that controls your
--   users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:serverId:CreateAccess'</a>, <a>createAccess_serverId</a> - A
--   system-assigned unique identifier for a server instance. This is the
--   specific server that you added your user to.
--   
--   <a>$sel:externalId:CreateAccess'</a>, <a>createAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newCreateAccess :: Text -> Text -> Text -> CreateAccess

-- | <i>See:</i> <a>newCreateAccessResponse</a> smart constructor.
data CreateAccessResponse
CreateAccessResponse' :: Int -> Text -> Text -> CreateAccessResponse

-- | Create a value of <a>CreateAccessResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateAccessResponse'</a>,
--   <a>createAccessResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:CreateAccess'</a>,
--   <a>createAccessResponse_serverId</a> - The ID of the server that the
--   user is attached to.
--   
--   <a>$sel:externalId:CreateAccess'</a>,
--   <a>createAccessResponse_externalId</a> - The external ID of the group
--   whose users have access to your Amazon S3 or Amazon EFS resources over
--   the enabled protocols using Amazon Web Services Transfer Family.
newCreateAccessResponse :: Int -> Text -> Text -> CreateAccessResponse

-- | <i>See:</i> <a>newListAccesses</a> smart constructor.
data ListAccesses
ListAccesses' :: Maybe Text -> Maybe Natural -> Text -> ListAccesses

-- | Create a value of <a>ListAccesses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccesses'</a>, <a>listAccesses_nextToken</a> -
--   When you can get additional results from the <tt>ListAccesses</tt>
--   call, a <tt>NextToken</tt> parameter is returned in the output. You
--   can then pass in a subsequent command to the <tt>NextToken</tt>
--   parameter to continue listing additional accesses.
--   
--   <a>$sel:maxResults:ListAccesses'</a>, <a>listAccesses_maxResults</a> -
--   Specifies the maximum number of access SIDs to return.
--   
--   <a>$sel:serverId:ListAccesses'</a>, <a>listAccesses_serverId</a> - A
--   system-assigned unique identifier for a server that has users assigned
--   to it.
newListAccesses :: Text -> ListAccesses

-- | <i>See:</i> <a>newListAccessesResponse</a> smart constructor.
data ListAccessesResponse
ListAccessesResponse' :: Maybe Text -> Int -> Text -> [ListedAccess] -> ListAccessesResponse

-- | Create a value of <a>ListAccessesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccesses'</a>,
--   <a>listAccessesResponse_nextToken</a> - When you can get additional
--   results from the <tt>ListAccesses</tt> call, a <tt>NextToken</tt>
--   parameter is returned in the output. You can then pass in a subsequent
--   command to the <tt>NextToken</tt> parameter to continue listing
--   additional accesses.
--   
--   <a>$sel:httpStatus:ListAccessesResponse'</a>,
--   <a>listAccessesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:ListAccesses'</a>,
--   <a>listAccessesResponse_serverId</a> - A system-assigned unique
--   identifier for a server that has users assigned to it.
--   
--   <a>$sel:accesses:ListAccessesResponse'</a>,
--   <a>listAccessesResponse_accesses</a> - Returns the accesses and their
--   properties for the <tt>ServerId</tt> value that you specify.
newListAccessesResponse :: Int -> Text -> ListAccessesResponse

-- | <i>See:</i> <a>newUpdateUser</a> smart constructor.
data UpdateUser
UpdateUser' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateUser

-- | Create a value of <a>UpdateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:UpdateUser'</a>,
--   <a>updateUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:UpdateUser'</a>, <a>updateUser_posixProfile</a> -
--   Specifies the full POSIX identity, including user ID (<tt>Uid</tt>),
--   group ID (<tt>Gid</tt>), and any secondary groups IDs
--   (<tt>SecondaryGids</tt>), that controls your users' access to your
--   Amazon Elastic File Systems (Amazon EFS). The POSIX permissions that
--   are set on files and directories in your file system determines the
--   level of access your users get when transferring files into and out of
--   your Amazon EFS file systems.
--   
--   <a>$sel:homeDirectoryMappings:UpdateUser'</a>,
--   <a>updateUser_homeDirectoryMappings</a> - Logical directory mappings
--   that specify what Amazon S3 or Amazon EFS paths and keys should be
--   visible to your user and how you want to make them visible. You must
--   specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example.
--   
--   <pre>
--   [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down your user to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <a>$sel:role':UpdateUser'</a>, <a>updateUser_role</a> - Specifies the
--   Amazon Resource Name (ARN) of the IAM role that controls your users'
--   access to your Amazon S3 bucket or EFS file system. The policies
--   attached to this role determine the level of access that you want to
--   provide your users when transferring files into and out of your Amazon
--   S3 bucket or EFS file system. The IAM role should also contain a trust
--   relationship that allows the server to access your resources when
--   servicing your users' transfer requests.
--   
--   <a>$sel:policy:UpdateUser'</a>, <a>updateUser_policy</a> - A session
--   policy for your user so that you can use the same IAM role across
--   multiple users. This policy scopes down user access to portions of
--   their Amazon S3 bucket. Variables that you can use inside this policy
--   include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   This only applies when the domain of <tt>ServerId</tt> is S3. EFS does
--   not use session policies.
--   
--   For session policies, Amazon Web Services Transfer Family stores the
--   policy as a JSON blob, instead of the Amazon Resource Name (ARN) of
--   the policy. You save the policy as a JSON blob and pass it in the
--   <tt>Policy</tt> argument.
--   
--   For an example of a session policy, see <a>Creating a session
--   policy</a>.
--   
--   For more information, see <a>AssumeRole</a> in the <i>Amazon Web
--   Services Security Token Service API Reference</i>.
--   
--   <a>$sel:homeDirectory:UpdateUser'</a>, <a>updateUser_homeDirectory</a>
--   - The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:serverId:UpdateUser'</a>, <a>updateUser_serverId</a> - A
--   system-assigned unique identifier for a server instance that the user
--   account is assigned to.
--   
--   <a>$sel:userName:UpdateUser'</a>, <a>updateUser_userName</a> - A
--   unique string that identifies a user and is associated with a server
--   as specified by the <tt>ServerId</tt>. This user name must be a
--   minimum of 3 and a maximum of 100 characters long. The following are
--   valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period
--   '.', and at sign '@'. The user name can't start with a hyphen, period,
--   or at sign.
newUpdateUser :: Text -> Text -> UpdateUser

-- | <tt>UpdateUserResponse</tt> returns the user name and identifier for
--   the request to update a user's properties.
--   
--   <i>See:</i> <a>newUpdateUserResponse</a> smart constructor.
data UpdateUserResponse
UpdateUserResponse' :: Int -> Text -> Text -> UpdateUserResponse

-- | Create a value of <a>UpdateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateUserResponse'</a>,
--   <a>updateUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:UpdateUser'</a>, <a>updateUserResponse_serverId</a> -
--   A system-assigned unique identifier for a server instance that the
--   user account is assigned to.
--   
--   <a>$sel:userName:UpdateUser'</a>, <a>updateUserResponse_userName</a> -
--   The unique identifier for a user that is assigned to a server instance
--   that was specified in the request.
newUpdateUserResponse :: Int -> Text -> Text -> UpdateUserResponse

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Text -> Text -> DeleteUser

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DeleteUser'</a>, <a>deleteUser_serverId</a> - A
--   system-assigned unique identifier for a server instance that has the
--   user assigned to it.
--   
--   <a>$sel:userName:DeleteUser'</a>, <a>deleteUser_userName</a> - A
--   unique string that identifies a user that is being deleted from a
--   server.
newDeleteUser :: Text -> Text -> DeleteUser

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: DeleteUserResponse

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserResponse :: DeleteUserResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:TagResource'</a>, <a>tagResource_arn</a> - An Amazon
--   Resource Name (ARN) for a specific Amazon Web Services resource, such
--   as a server, user, or role.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Key-value
--   pairs assigned to ARNs that you can use to group and search for
--   resources by type. You can attach this metadata to user accounts for
--   any purpose.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UntagResource'</a>, <a>untagResource_arn</a> - The value
--   of the resource that will have the tag removed. An Amazon Resource
--   Name (ARN) is an identifier for a specific Amazon Web Services
--   resource, such as a server, user, or role.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   TagKeys are key-value pairs assigned to ARNs that can be used to group
--   and search for resources by type. This metadata can be attached to
--   resources for any purpose.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newDescribeWorkflow</a> smart constructor.
data DescribeWorkflow
DescribeWorkflow' :: Text -> DescribeWorkflow

-- | Create a value of <a>DescribeWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:DescribeWorkflow'</a>,
--   <a>describeWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
newDescribeWorkflow :: Text -> DescribeWorkflow

-- | <i>See:</i> <a>newDescribeWorkflowResponse</a> smart constructor.
data DescribeWorkflowResponse
DescribeWorkflowResponse' :: Int -> DescribedWorkflow -> DescribeWorkflowResponse

-- | Create a value of <a>DescribeWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeWorkflowResponse'</a>,
--   <a>describeWorkflowResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:workflow:DescribeWorkflowResponse'</a>,
--   <a>describeWorkflowResponse_workflow</a> - The structure that contains
--   the details of the workflow.
newDescribeWorkflowResponse :: Int -> DescribedWorkflow -> DescribeWorkflowResponse

-- | <i>See:</i> <a>newDescribeAccess</a> smart constructor.
data DescribeAccess
DescribeAccess' :: Text -> Text -> DescribeAccess

-- | Create a value of <a>DescribeAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverId:DescribeAccess'</a>, <a>describeAccess_serverId</a> -
--   A system-assigned unique identifier for a server that has this access
--   assigned.
--   
--   <a>$sel:externalId:DescribeAccess'</a>,
--   <a>describeAccess_externalId</a> - A unique identifier that is
--   required to identify specific groups within your directory. The users
--   of the group that you associate have access to your Amazon S3 or
--   Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family. If you know the group name, you can view the
--   SID values by running the following command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
newDescribeAccess :: Text -> Text -> DescribeAccess

-- | <i>See:</i> <a>newDescribeAccessResponse</a> smart constructor.
data DescribeAccessResponse
DescribeAccessResponse' :: Int -> Text -> DescribedAccess -> DescribeAccessResponse

-- | Create a value of <a>DescribeAccessResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeAccessResponse'</a>,
--   <a>describeAccessResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:serverId:DescribeAccess'</a>,
--   <a>describeAccessResponse_serverId</a> - A system-assigned unique
--   identifier for a server that has this access assigned.
--   
--   <a>$sel:access:DescribeAccessResponse'</a>,
--   <a>describeAccessResponse_access</a> - The external ID of the server
--   that the access is attached to.
newDescribeAccessResponse :: Int -> Text -> DescribedAccess -> DescribeAccessResponse
newtype CustomStepStatus
CustomStepStatus' :: Text -> CustomStepStatus
[fromCustomStepStatus] :: CustomStepStatus -> Text
pattern CustomStepStatus_FAILURE :: CustomStepStatus
pattern CustomStepStatus_SUCCESS :: CustomStepStatus
newtype Domain
Domain' :: Text -> Domain
[fromDomain] :: Domain -> Text
pattern Domain_EFS :: Domain
pattern Domain_S3 :: Domain
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_PUBLIC :: EndpointType
pattern EndpointType_VPC :: EndpointType
pattern EndpointType_VPC_ENDPOINT :: EndpointType
newtype ExecutionErrorType
ExecutionErrorType' :: Text -> ExecutionErrorType
[fromExecutionErrorType] :: ExecutionErrorType -> Text
pattern ExecutionErrorType_PERMISSION_DENIED :: ExecutionErrorType
newtype ExecutionStatus
ExecutionStatus' :: Text -> ExecutionStatus
[fromExecutionStatus] :: ExecutionStatus -> Text
pattern ExecutionStatus_COMPLETED :: ExecutionStatus
pattern ExecutionStatus_EXCEPTION :: ExecutionStatus
pattern ExecutionStatus_HANDLING_EXCEPTION :: ExecutionStatus
pattern ExecutionStatus_IN_PROGRESS :: ExecutionStatus
newtype HomeDirectoryType
HomeDirectoryType' :: Text -> HomeDirectoryType
[fromHomeDirectoryType] :: HomeDirectoryType -> Text
pattern HomeDirectoryType_LOGICAL :: HomeDirectoryType
pattern HomeDirectoryType_PATH :: HomeDirectoryType

-- | Returns information related to the type of user authentication that is
--   in use for a file transfer protocol-enabled server's users. For
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>SERVICE_MANAGED</tt>
--   authentication, the Secure Shell (SSH) public keys are stored with a
--   user on the server instance. For <tt>API_GATEWAY</tt> authentication,
--   your custom authentication method is implemented by using an API call.
--   The server can have only one method of authentication.
newtype IdentityProviderType
IdentityProviderType' :: Text -> IdentityProviderType
[fromIdentityProviderType] :: IdentityProviderType -> Text
pattern IdentityProviderType_API_GATEWAY :: IdentityProviderType
pattern IdentityProviderType_AWS_DIRECTORY_SERVICE :: IdentityProviderType
pattern IdentityProviderType_SERVICE_MANAGED :: IdentityProviderType
newtype OverwriteExisting
OverwriteExisting' :: Text -> OverwriteExisting
[fromOverwriteExisting] :: OverwriteExisting -> Text
pattern OverwriteExisting_FALSE :: OverwriteExisting
pattern OverwriteExisting_TRUE :: OverwriteExisting
newtype Protocol
Protocol' :: Text -> Protocol
[fromProtocol] :: Protocol -> Text
pattern Protocol_FTP :: Protocol
pattern Protocol_FTPS :: Protocol
pattern Protocol_SFTP :: Protocol

-- | Describes the condition of a file transfer protocol-enabled server
--   with respect to its ability to perform file operations. There are six
--   possible states: <tt>OFFLINE</tt>, <tt>ONLINE</tt>, <tt>STARTING</tt>,
--   <tt>STOPPING</tt>, <tt>START_FAILED</tt>, and <tt>STOP_FAILED</tt>.
--   
--   <tt>OFFLINE</tt> indicates that the server exists, but that it is not
--   available for file operations. <tt>ONLINE</tt> indicates that the
--   server is available to perform file operations. <tt>STARTING</tt>
--   indicates that the server's was instantiated, but the server is not
--   yet available to perform file operations. Under normal conditions, it
--   can take a couple of minutes for the server to be completely
--   operational. Both <tt>START_FAILED</tt> and <tt>STOP_FAILED</tt> are
--   error conditions.
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_OFFLINE :: State
pattern State_ONLINE :: State
pattern State_STARTING :: State
pattern State_START_FAILED :: State
pattern State_STOPPING :: State
pattern State_STOP_FAILED :: State
newtype WorkflowStepType
WorkflowStepType' :: Text -> WorkflowStepType
[fromWorkflowStepType] :: WorkflowStepType -> Text
pattern WorkflowStepType_COPY :: WorkflowStepType
pattern WorkflowStepType_CUSTOM :: WorkflowStepType
pattern WorkflowStepType_DELETE :: WorkflowStepType
pattern WorkflowStepType_TAG :: WorkflowStepType

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   <i>See:</i> <a>newCopyStepDetails</a> smart constructor.
data CopyStepDetails
CopyStepDetails' :: Maybe InputFileLocation -> Maybe OverwriteExisting -> Maybe Text -> CopyStepDetails

-- | Create a value of <a>CopyStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationFileLocation:CopyStepDetails'</a>,
--   <a>copyStepDetails_destinationFileLocation</a> - Undocumented member.
--   
--   <a>$sel:overwriteExisting:CopyStepDetails'</a>,
--   <a>copyStepDetails_overwriteExisting</a> - A flag that indicates
--   whether or not to overwrite an existing file of the same name. The
--   default is <tt>FALSE</tt>.
--   
--   <a>$sel:name:CopyStepDetails'</a>, <a>copyStepDetails_name</a> - The
--   name of the step, used as an identifier.
newCopyStepDetails :: CopyStepDetails

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   <i>See:</i> <a>newCustomStepDetails</a> smart constructor.
data CustomStepDetails
CustomStepDetails' :: Maybe Text -> Maybe Natural -> Maybe Text -> CustomStepDetails

-- | Create a value of <a>CustomStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CustomStepDetails'</a>, <a>customStepDetails_name</a> -
--   The name of the step, used as an identifier.
--   
--   <a>$sel:timeoutSeconds:CustomStepDetails'</a>,
--   <a>customStepDetails_timeoutSeconds</a> - Timeout, in seconds, for the
--   step.
--   
--   <a>$sel:target:CustomStepDetails'</a>, <a>customStepDetails_target</a>
--   - The ARN for the lambda function that is being called.
newCustomStepDetails :: CustomStepDetails

-- | The name of the step, used to identify the delete step.
--   
--   <i>See:</i> <a>newDeleteStepDetails</a> smart constructor.
data DeleteStepDetails
DeleteStepDetails' :: Maybe Text -> DeleteStepDetails

-- | Create a value of <a>DeleteStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteStepDetails'</a>, <a>deleteStepDetails_name</a> -
--   The name of the step, used as an identifier.
newDeleteStepDetails :: DeleteStepDetails

-- | Describes the properties of the access that was specified.
--   
--   <i>See:</i> <a>newDescribedAccess</a> smart constructor.
data DescribedAccess
DescribedAccess' :: Maybe HomeDirectoryType -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DescribedAccess

-- | Create a value of <a>DescribedAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectoryType</a> - The type of landing
--   directory (folder) you want your users' home directory to be when they
--   log into the server. If you set it to <tt>PATH</tt>, the user will see
--   the absolute Amazon S3 bucket or EFS paths as is in their file
--   transfer protocol clients. If you set it <tt>LOGICAL</tt>, you need to
--   provide mappings in the <tt>HomeDirectoryMappings</tt> for how you
--   want to make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:posixProfile:DescribedAccess'</a>,
--   <a>describedAccess_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:homeDirectoryMappings:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectoryMappings</a> - Logical directory
--   mappings that specify what Amazon S3 or Amazon EFS paths and keys
--   should be visible to your user and how you want to make them visible.
--   You must specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock down the associated access to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the <tt>HomeDirectory</tt> parameter value.
--   
--   <a>$sel:role':DescribedAccess'</a>, <a>describedAccess_role</a> -
--   Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:DescribedAccess'</a>, <a>describedAccess_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   <a>$sel:externalId:DescribedAccess'</a>,
--   <a>describedAccess_externalId</a> - A unique identifier that is
--   required to identify specific groups within your directory. The users
--   of the group that you associate have access to your Amazon S3 or
--   Amazon EFS resources over the enabled protocols using Amazon Web
--   Services Transfer Family. If you know the group name, you can view the
--   SID values by running the following command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:homeDirectory:DescribedAccess'</a>,
--   <a>describedAccess_homeDirectory</a> - The landing directory (folder)
--   for a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
newDescribedAccess :: DescribedAccess

-- | The details for an execution object.
--   
--   <i>See:</i> <a>newDescribedExecution</a> smart constructor.
data DescribedExecution
DescribedExecution' :: Maybe ExecutionStatus -> Maybe Text -> Maybe ExecutionResults -> Maybe FileLocation -> Maybe PosixProfile -> Maybe ServiceMetadata -> Maybe LoggingConfiguration -> Maybe Text -> DescribedExecution

-- | Create a value of <a>DescribedExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribedExecution'</a>,
--   <a>describedExecution_status</a> - The status is one of the execution.
--   Can be in progress, completed, exception encountered, or handling the
--   exception.
--   
--   <a>$sel:executionId:DescribedExecution'</a>,
--   <a>describedExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:results:DescribedExecution'</a>,
--   <a>describedExecution_results</a> - A structure that describes the
--   execution results. This includes a list of the steps along with the
--   details of each step, error type and message (if any), and the
--   <tt>OnExceptionSteps</tt> structure.
--   
--   <a>$sel:initialFileLocation:DescribedExecution'</a>,
--   <a>describedExecution_initialFileLocation</a> - A structure that
--   describes the Amazon S3 or EFS file location. This is the file
--   location when the execution begins: if the file is being copied, this
--   is the initial (as opposed to destination) file location.
--   
--   <a>$sel:posixProfile:DescribedExecution'</a>,
--   <a>describedExecution_posixProfile</a> - Undocumented member.
--   
--   <a>$sel:serviceMetadata:DescribedExecution'</a>,
--   <a>describedExecution_serviceMetadata</a> - A container object for the
--   session details associated with a workflow.
--   
--   <a>$sel:loggingConfiguration:DescribedExecution'</a>,
--   <a>describedExecution_loggingConfiguration</a> - The IAM logging role
--   associated with the execution.
--   
--   <a>$sel:executionRole:DescribedExecution'</a>,
--   <a>describedExecution_executionRole</a> - The IAM role associated with
--   the execution.
newDescribedExecution :: DescribedExecution

-- | Describes the properties of a security policy that was specified. For
--   more information about security policies, see <a>Working with security
--   policies</a>.
--   
--   <i>See:</i> <a>newDescribedSecurityPolicy</a> smart constructor.
data DescribedSecurityPolicy
DescribedSecurityPolicy' :: Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Text -> DescribedSecurityPolicy

-- | Create a value of <a>DescribedSecurityPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fips:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_fips</a> - Specifies whether this policy
--   enables Federal Information Processing Standards (FIPS).
--   
--   <a>$sel:sshMacs:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshMacs</a> - Specifies the enabled SSH
--   message authentication code (MAC) encryption algorithms in the
--   security policy that is attached to the server.
--   
--   <a>$sel:sshKexs:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshKexs</a> - Specifies the enabled SSH key
--   exchange (KEX) encryption algorithms in the security policy that is
--   attached to the server.
--   
--   <a>$sel:tlsCiphers:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_tlsCiphers</a> - Specifies the enabled
--   Transport Layer Security (TLS) cipher encryption algorithms in the
--   security policy that is attached to the server.
--   
--   <a>$sel:sshCiphers:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_sshCiphers</a> - Specifies the enabled
--   Secure Shell (SSH) cipher encryption algorithms in the security policy
--   that is attached to the server.
--   
--   <a>$sel:securityPolicyName:DescribedSecurityPolicy'</a>,
--   <a>describedSecurityPolicy_securityPolicyName</a> - Specifies the name
--   of the security policy that is attached to the server.
newDescribedSecurityPolicy :: Text -> DescribedSecurityPolicy

-- | Describes the properties of a file transfer protocol-enabled server
--   that was specified.
--   
--   <i>See:</i> <a>newDescribedServer</a> smart constructor.
data DescribedServer
DescribedServer' :: Maybe ProtocolDetails -> Maybe Text -> Maybe State -> Maybe IdentityProviderType -> Maybe (NonEmpty Protocol) -> Maybe Text -> Maybe Domain -> Maybe EndpointType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe IdentityProviderDetails -> Maybe WorkflowDetails -> Maybe (NonEmpty Tag) -> Maybe EndpointDetails -> Text -> DescribedServer

-- | Create a value of <a>DescribedServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:protocolDetails:DescribedServer'</a>,
--   <a>describedServer_protocolDetails</a> - The protocol settings that
--   are configured for your server.
--   
--   Use the <tt>PassiveIp</tt> parameter to indicate passive mode. Enter a
--   single dotted-quad IPv4 address, such as the external IP address of a
--   firewall, router, or load balancer.
--   
--   <a>$sel:loggingRole:DescribedServer'</a>,
--   <a>describedServer_loggingRole</a> - Specifies the Amazon Resource
--   Name (ARN) of the Amazon Web Services Identity and Access Management
--   (IAM) role that allows a server to turn on Amazon CloudWatch logging
--   for Amazon S3 or Amazon EFS events. When set, user activity can be
--   viewed in your CloudWatch logs.
--   
--   <a>$sel:state:DescribedServer'</a>, <a>describedServer_state</a> -
--   Specifies the condition of a server for the server that was described.
--   A value of <tt>ONLINE</tt> indicates that the server can accept jobs
--   and transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means
--   that the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
--   
--   <a>$sel:identityProviderType:DescribedServer'</a>,
--   <a>describedServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:protocols:DescribedServer'</a>,
--   <a>describedServer_protocols</a> - Specifies the file transfer
--   protocol or protocols over which your file transfer protocol client
--   can connect to your server's endpoint. The available protocols are:
--   
--   <ul>
--   <li><tt>SFTP</tt> (Secure Shell (SSH) File Transfer Protocol): File
--   transfer over SSH</li>
--   <li><tt>FTPS</tt> (File Transfer Protocol Secure): File transfer with
--   TLS encryption</li>
--   <li><tt>FTP</tt> (File Transfer Protocol): Unencrypted file
--   transfer</li>
--   </ul>
--   
--   <a>$sel:serverId:DescribedServer'</a>, <a>describedServer_serverId</a>
--   - Specifies the unique system-assigned identifier for a server that
--   you instantiate.
--   
--   <a>$sel:domain:DescribedServer'</a>, <a>describedServer_domain</a> -
--   Specifies the domain of the storage system that is used for file
--   transfers.
--   
--   <a>$sel:endpointType:DescribedServer'</a>,
--   <a>describedServer_endpointType</a> - Defines the type of endpoint
--   that your server is connected to. If your server is connected to a VPC
--   endpoint, your server isn't accessible over the public internet.
--   
--   <a>$sel:securityPolicyName:DescribedServer'</a>,
--   <a>describedServer_securityPolicyName</a> - Specifies the name of the
--   security policy that is attached to the server.
--   
--   <a>$sel:hostKeyFingerprint:DescribedServer'</a>,
--   <a>describedServer_hostKeyFingerprint</a> - Specifies the
--   Base64-encoded SHA256 fingerprint of the server's host key. This value
--   is equivalent to the output of the <tt>ssh-keygen -l -f
--   my-new-server-key</tt> command.
--   
--   <a>$sel:userCount:DescribedServer'</a>,
--   <a>describedServer_userCount</a> - Specifies the number of users that
--   are assigned to a server you specified with the <tt>ServerId</tt>.
--   
--   <a>$sel:certificate:DescribedServer'</a>,
--   <a>describedServer_certificate</a> - Specifies the ARN of the Amazon
--   Web ServicesCertificate Manager (ACM) certificate. Required when
--   <tt>Protocols</tt> is set to <tt>FTPS</tt>.
--   
--   <a>$sel:identityProviderDetails:DescribedServer'</a>,
--   <a>describedServer_identityProviderDetails</a> - Specifies information
--   to call a customer-supplied authentication API. This field is not
--   populated when the <tt>IdentityProviderType</tt> of a server is
--   <tt>AWS_DIRECTORY_SERVICE</tt> or <tt>SERVICE_MANAGED</tt>.
--   
--   <a>$sel:workflowDetails:DescribedServer'</a>,
--   <a>describedServer_workflowDetails</a> - Specifies the workflow ID for
--   the workflow to assign and the execution role used for executing the
--   workflow.
--   
--   <a>$sel:tags:DescribedServer'</a>, <a>describedServer_tags</a> -
--   Specifies the key-value pairs that you can use to search for and group
--   servers that were assigned to the server that was described.
--   
--   <a>$sel:endpointDetails:DescribedServer'</a>,
--   <a>describedServer_endpointDetails</a> - The virtual private cloud
--   (VPC) endpoint settings that are configured for your server. When you
--   host your endpoint within your VPC, you can make it accessible only to
--   resources within your VPC, or you can attach Elastic IP addresses and
--   make it accessible to clients over the internet. Your VPC's default
--   security groups are automatically assigned to your endpoint.
--   
--   <a>$sel:arn:DescribedServer'</a>, <a>describedServer_arn</a> -
--   Specifies the unique Amazon Resource Name (ARN) of the server.
newDescribedServer :: Text -> DescribedServer

-- | Describes the properties of a user that was specified.
--   
--   <i>See:</i> <a>newDescribedUser</a> smart constructor.
data DescribedUser
DescribedUser' :: Maybe [SshPublicKey] -> Maybe HomeDirectoryType -> Maybe Text -> Maybe PosixProfile -> Maybe (NonEmpty HomeDirectoryMapEntry) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> DescribedUser

-- | Create a value of <a>DescribedUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sshPublicKeys:DescribedUser'</a>,
--   <a>describedUser_sshPublicKeys</a> - Specifies the public key portion
--   of the Secure Shell (SSH) keys stored for the described user.
--   
--   <a>$sel:homeDirectoryType:DescribedUser'</a>,
--   <a>describedUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:userName:DescribedUser'</a>, <a>describedUser_userName</a> -
--   Specifies the name of the user that was requested to be described.
--   User names are used for authentication purposes. This is the string
--   that will be used by your user when they log in to your server.
--   
--   <a>$sel:posixProfile:DescribedUser'</a>,
--   <a>describedUser_posixProfile</a> - Specifies the full POSIX identity,
--   including user ID (<tt>Uid</tt>), group ID (<tt>Gid</tt>), and any
--   secondary groups IDs (<tt>SecondaryGids</tt>), that controls your
--   users' access to your Amazon Elastic File System (Amazon EFS) file
--   systems. The POSIX permissions that are set on files and directories
--   in your file system determine the level of access your users get when
--   transferring files into and out of your Amazon EFS file systems.
--   
--   <a>$sel:homeDirectoryMappings:DescribedUser'</a>,
--   <a>describedUser_homeDirectoryMappings</a> - Logical directory
--   mappings that specify what Amazon S3 or Amazon EFS paths and keys
--   should be visible to your user and how you want to make them visible.
--   You must specify the <tt>Entry</tt> and <tt>Target</tt> pair, where
--   <tt>Entry</tt> shows how the path is made visible and <tt>Target</tt>
--   is the actual Amazon S3 or Amazon EFS path. If you only specify a
--   target, it is displayed as is. You also must ensure that your Amazon
--   Web Services Identity and Access Management (IAM) role provides access
--   to paths in <tt>Target</tt>. This value can only be set when
--   <tt>HomeDirectoryType</tt> is set to <i>LOGICAL</i>.
--   
--   In most cases, you can use this value instead of the session policy to
--   lock your user down to the designated home directory
--   ("<tt>chroot</tt>"). To do this, you can set <tt>Entry</tt> to '/' and
--   set <tt>Target</tt> to the HomeDirectory parameter value.
--   
--   <a>$sel:role':DescribedUser'</a>, <a>describedUser_role</a> -
--   Specifies the Amazon Resource Name (ARN) of the IAM role that controls
--   your users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:policy:DescribedUser'</a>, <a>describedUser_policy</a> - A
--   session policy for your user so that you can use the same IAM role
--   across multiple users. This policy scopes down user access to portions
--   of their Amazon S3 bucket. Variables that you can use inside this
--   policy include <tt>${Transfer:UserName}</tt>,
--   <tt>${Transfer:HomeDirectory}</tt>, and
--   <tt>${Transfer:HomeBucket}</tt>.
--   
--   <a>$sel:homeDirectory:DescribedUser'</a>,
--   <a>describedUser_homeDirectory</a> - The landing directory (folder)
--   for a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:tags:DescribedUser'</a>, <a>describedUser_tags</a> - Specifies
--   the key-value pairs for the user requested. Tag can be used to search
--   for and group users for a variety of purposes.
--   
--   <a>$sel:arn:DescribedUser'</a>, <a>describedUser_arn</a> - Specifies
--   the unique Amazon Resource Name (ARN) for the user that was requested
--   to be described.
newDescribedUser :: Text -> DescribedUser

-- | Describes the properties of the specified workflow
--   
--   <i>See:</i> <a>newDescribedWorkflow</a> smart constructor.
data DescribedWorkflow
DescribedWorkflow' :: Maybe [WorkflowStep] -> Maybe [WorkflowStep] -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> DescribedWorkflow

-- | Create a value of <a>DescribedWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:DescribedWorkflow'</a>,
--   <a>describedWorkflow_onExceptionSteps</a> - Specifies the steps
--   (actions) to take if errors are encountered during execution of the
--   workflow.
--   
--   <a>$sel:steps:DescribedWorkflow'</a>, <a>describedWorkflow_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
--   
--   <a>$sel:workflowId:DescribedWorkflow'</a>,
--   <a>describedWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:description:DescribedWorkflow'</a>,
--   <a>describedWorkflow_description</a> - Specifies the text description
--   for the workflow.
--   
--   <a>$sel:tags:DescribedWorkflow'</a>, <a>describedWorkflow_tags</a> -
--   Key-value pairs that can be used to group and search for workflows.
--   Tags are metadata attached to workflows for any purpose.
--   
--   <a>$sel:arn:DescribedWorkflow'</a>, <a>describedWorkflow_arn</a> -
--   Specifies the unique Amazon Resource Name (ARN) for the workflow.
newDescribedWorkflow :: Text -> DescribedWorkflow

-- | Reserved for future use.
--   
--   <i>See:</i> <a>newEfsFileLocation</a> smart constructor.
data EfsFileLocation
EfsFileLocation' :: Maybe Text -> Maybe Text -> EfsFileLocation

-- | Create a value of <a>EfsFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:EfsFileLocation'</a>, <a>efsFileLocation_path</a> - The
--   pathname for the folder being used by a workflow.
--   
--   <a>$sel:fileSystemId:EfsFileLocation'</a>,
--   <a>efsFileLocation_fileSystemId</a> - The ID of the file system,
--   assigned by Amazon EFS.
newEfsFileLocation :: EfsFileLocation

-- | The virtual private cloud (VPC) endpoint settings that are configured
--   for your file transfer protocol-enabled server. With a VPC endpoint,
--   you can restrict access to your server and resources only within your
--   VPC. To control incoming internet traffic, invoke the
--   <tt>UpdateServer</tt> API and attach an Elastic IP address to your
--   server's endpoint.
--   
--   After May 19, 2021, you won't be able to create a server using
--   <tt>EndpointType=VPC_ENDPOINT</tt> in your Amazon Web Servicesaccount
--   if your account hasn't already done so before May 19, 2021. If you
--   have already created servers with <tt>EndpointType=VPC_ENDPOINT</tt>
--   in your Amazon Web Servicesaccount on or before May 19, 2021, you will
--   not be affected. After this date, use
--   <tt>EndpointType</tt>=<tt>VPC</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
--   
--   <i>See:</i> <a>newEndpointDetails</a> smart constructor.
data EndpointDetails
EndpointDetails' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> EndpointDetails

-- | Create a value of <a>EndpointDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:EndpointDetails'</a>,
--   <a>endpointDetails_securityGroupIds</a> - A list of security groups
--   IDs that are available to attach to your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   You can edit the <tt>SecurityGroupIds</tt> property in the
--   <a>UpdateServer</a> API only if you are changing the
--   <tt>EndpointType</tt> from <tt>PUBLIC</tt> or <tt>VPC_ENDPOINT</tt> to
--   <tt>VPC</tt>. To change security groups associated with your server's
--   VPC endpoint after creation, use the Amazon EC2
--   <a>ModifyVpcEndpoint</a> API.
--   
--   <a>$sel:subnetIds:EndpointDetails'</a>,
--   <a>endpointDetails_subnetIds</a> - A list of subnet IDs that are
--   required to host your server endpoint in your VPC.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   <a>$sel:vpcId:EndpointDetails'</a>, <a>endpointDetails_vpcId</a> - The
--   VPC ID of the VPC in which a server's endpoint will be hosted.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt>.
--   
--   <a>$sel:addressAllocationIds:EndpointDetails'</a>,
--   <a>endpointDetails_addressAllocationIds</a> - A list of address
--   allocation IDs that are required to attach an Elastic IP address to
--   your server's endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC</tt> and it is only valid in the <tt>UpdateServer</tt> API.
--   
--   <a>$sel:vpcEndpointId:EndpointDetails'</a>,
--   <a>endpointDetails_vpcEndpointId</a> - The ID of the VPC endpoint.
--   
--   This property can only be set when <tt>EndpointType</tt> is set to
--   <tt>VPC_ENDPOINT</tt>.
--   
--   For more information, see
--   https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.
newEndpointDetails :: EndpointDetails

-- | Specifies the error message and type, for an error that occurs during
--   the execution of the workflow.
--   
--   <i>See:</i> <a>newExecutionError</a> smart constructor.
data ExecutionError
ExecutionError' :: ExecutionErrorType -> Text -> ExecutionError

-- | Create a value of <a>ExecutionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ExecutionError'</a>, <a>executionError_type</a> -
--   Specifies the error type: currently, the only valid value is
--   <tt>PERMISSION_DENIED</tt>, which occurs if your policy does not
--   contain the correct permissions to complete one or more of the steps
--   in the workflow.
--   
--   <a>$sel:message:ExecutionError'</a>, <a>executionError_message</a> -
--   Specifies the descriptive message that corresponds to the
--   <tt>ErrorType</tt>.
newExecutionError :: ExecutionErrorType -> Text -> ExecutionError

-- | Specifies the steps in the workflow, as well as the steps to execute
--   in case of any errors during workflow execution.
--   
--   <i>See:</i> <a>newExecutionResults</a> smart constructor.
data ExecutionResults
ExecutionResults' :: Maybe (NonEmpty ExecutionStepResult) -> Maybe (NonEmpty ExecutionStepResult) -> ExecutionResults

-- | Create a value of <a>ExecutionResults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExceptionSteps:ExecutionResults'</a>,
--   <a>executionResults_onExceptionSteps</a> - Specifies the steps
--   (actions) to take if errors are encountered during execution of the
--   workflow.
--   
--   <a>$sel:steps:ExecutionResults'</a>, <a>executionResults_steps</a> -
--   Specifies the details for the steps that are in the specified
--   workflow.
newExecutionResults :: ExecutionResults

-- | Specifies the following details for the step: error (if any), outputs
--   (if any), and the step type.
--   
--   <i>See:</i> <a>newExecutionStepResult</a> smart constructor.
data ExecutionStepResult
ExecutionStepResult' :: Maybe WorkflowStepType -> Maybe ExecutionError -> Maybe Text -> ExecutionStepResult

-- | Create a value of <a>ExecutionStepResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepType:ExecutionStepResult'</a>,
--   <a>executionStepResult_stepType</a> - One of the available step types.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   <a>$sel:error:ExecutionStepResult'</a>,
--   <a>executionStepResult_error</a> - Specifies the details for an error,
--   if it occurred during execution of the specified workfow step.
--   
--   <a>$sel:outputs:ExecutionStepResult'</a>,
--   <a>executionStepResult_outputs</a> - The values for the key/value pair
--   applied as a tag to the file. Only applicable if the step type is
--   <tt>TAG</tt>.
newExecutionStepResult :: ExecutionStepResult

-- | Specifies the Amazon S3 or EFS file details to be used in the step.
--   
--   <i>See:</i> <a>newFileLocation</a> smart constructor.
data FileLocation
FileLocation' :: Maybe EfsFileLocation -> Maybe S3FileLocation -> FileLocation

-- | Create a value of <a>FileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:efsFileLocation:FileLocation'</a>,
--   <a>fileLocation_efsFileLocation</a> - Specifies the Amazon EFS ID and
--   the path for the file being used.
--   
--   <a>$sel:s3FileLocation:FileLocation'</a>,
--   <a>fileLocation_s3FileLocation</a> - Specifies the S3 details for the
--   file being used, such as bucket, Etag, and so forth.
newFileLocation :: FileLocation

-- | Represents an object that contains entries and targets for
--   <tt>HomeDirectoryMappings</tt>.
--   
--   The following is an <tt>Entry</tt> and <tt>Target</tt> pair example
--   for <tt>chroot</tt>.
--   
--   <pre>
--   [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]
--   </pre>
--   
--   If the target of a logical directory entry does not exist in Amazon S3
--   or EFS, the entry is ignored. As a workaround, you can use the Amazon
--   S3 API or EFS API to create 0 byte objects as place holders for your
--   directory. If using the CLI, use the <tt>s3api</tt> or <tt>efsapi</tt>
--   call instead of <tt>s3</tt> or <tt>efs</tt> so you can use the
--   put-object operation. For example, you use the following: <tt>aws
--   s3api put-object --bucket bucketname --key path/to/folder/</tt>. Make
--   sure that the end of the key name ends in a <tt>/</tt> for it to be
--   considered a folder.
--   
--   <i>See:</i> <a>newHomeDirectoryMapEntry</a> smart constructor.
data HomeDirectoryMapEntry
HomeDirectoryMapEntry' :: Text -> Text -> HomeDirectoryMapEntry

-- | Create a value of <a>HomeDirectoryMapEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entry:HomeDirectoryMapEntry'</a>,
--   <a>homeDirectoryMapEntry_entry</a> - Represents an entry for
--   <tt>HomeDirectoryMappings</tt>.
--   
--   <a>$sel:target:HomeDirectoryMapEntry'</a>,
--   <a>homeDirectoryMapEntry_target</a> - Represents the map target that
--   is used in a <tt>HomeDirectorymapEntry</tt>.
newHomeDirectoryMapEntry :: Text -> Text -> HomeDirectoryMapEntry

-- | Returns information related to the type of user authentication that is
--   in use for a file transfer protocol-enabled server's users. A server
--   can have only one method of authentication.
--   
--   <i>See:</i> <a>newIdentityProviderDetails</a> smart constructor.
data IdentityProviderDetails
IdentityProviderDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> IdentityProviderDetails

-- | Create a value of <a>IdentityProviderDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invocationRole:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_invocationRole</a> - Provides the type of
--   <tt>InvocationRole</tt> used to authenticate the user account.
--   
--   <a>$sel:directoryId:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_directoryId</a> - The identifier of the
--   Amazon Web ServicesDirectory Service directory that you want to stop
--   sharing.
--   
--   <a>$sel:url:IdentityProviderDetails'</a>,
--   <a>identityProviderDetails_url</a> - Provides the location of the
--   service endpoint used to authenticate users.
newIdentityProviderDetails :: IdentityProviderDetails

-- | Specifies the location for the file being copied. Only applicable for
--   the Copy type of workflow steps.
--   
--   <i>See:</i> <a>newInputFileLocation</a> smart constructor.
data InputFileLocation
InputFileLocation' :: Maybe EfsFileLocation -> Maybe S3InputFileLocation -> InputFileLocation

-- | Create a value of <a>InputFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:efsFileLocation:InputFileLocation'</a>,
--   <a>inputFileLocation_efsFileLocation</a> - Reserved for future use.
--   
--   <a>$sel:s3FileLocation:InputFileLocation'</a>,
--   <a>inputFileLocation_s3FileLocation</a> - Specifies the details for
--   the S3 file being copied.
newInputFileLocation :: InputFileLocation

-- | Lists the properties for one or more specified associated accesses.
--   
--   <i>See:</i> <a>newListedAccess</a> smart constructor.
data ListedAccess
ListedAccess' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe Text -> Maybe Text -> ListedAccess

-- | Create a value of <a>ListedAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:ListedAccess'</a>,
--   <a>listedAccess_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:role':ListedAccess'</a>, <a>listedAccess_role</a> - Specifies
--   the Amazon Resource Name (ARN) of the IAM role that controls your
--   users' access to your Amazon S3 bucket or EFS file system. The
--   policies attached to this role determine the level of access that you
--   want to provide your users when transferring files into and out of
--   your Amazon S3 bucket or EFS file system. The IAM role should also
--   contain a trust relationship that allows the server to access your
--   resources when servicing your users' transfer requests.
--   
--   <a>$sel:externalId:ListedAccess'</a>, <a>listedAccess_externalId</a> -
--   A unique identifier that is required to identify specific groups
--   within your directory. The users of the group that you associate have
--   access to your Amazon S3 or Amazon EFS resources over the enabled
--   protocols using Amazon Web Services Transfer Family. If you know the
--   group name, you can view the SID values by running the following
--   command using Windows PowerShell.
--   
--   <pre>
--   Get-ADGroup -Filter {samAccountName -like "YourGroupName*"} -Properties * | Select SamAccountName,ObjectSid
--   </pre>
--   
--   In that command, replace <i>YourGroupName</i> with the name of your
--   Active Directory group.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of uppercase and lowercase alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:homeDirectory:ListedAccess'</a>,
--   <a>listedAccess_homeDirectory</a> - The landing directory (folder) for
--   a user when they log in to the server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
newListedAccess :: ListedAccess

-- | Returns properties of the execution that is specified.
--   
--   <i>See:</i> <a>newListedExecution</a> smart constructor.
data ListedExecution
ListedExecution' :: Maybe ExecutionStatus -> Maybe Text -> Maybe FileLocation -> Maybe ServiceMetadata -> ListedExecution

-- | Create a value of <a>ListedExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListedExecution'</a>, <a>listedExecution_status</a> -
--   The status is one of the execution. Can be in progress, completed,
--   exception encountered, or handling the exception.
--   
--   <a>$sel:executionId:ListedExecution'</a>,
--   <a>listedExecution_executionId</a> - A unique identifier for the
--   execution of a workflow.
--   
--   <a>$sel:initialFileLocation:ListedExecution'</a>,
--   <a>listedExecution_initialFileLocation</a> - A structure that
--   describes the Amazon S3 or EFS file location. This is the file
--   location when the execution begins: if the file is being copied, this
--   is the initial (as opposed to destination) file location.
--   
--   <a>$sel:serviceMetadata:ListedExecution'</a>,
--   <a>listedExecution_serviceMetadata</a> - A container object for the
--   session details associated with a workflow.
newListedExecution :: ListedExecution

-- | Returns properties of a file transfer protocol-enabled server that was
--   specified.
--   
--   <i>See:</i> <a>newListedServer</a> smart constructor.
data ListedServer
ListedServer' :: Maybe Text -> Maybe State -> Maybe IdentityProviderType -> Maybe Text -> Maybe Domain -> Maybe EndpointType -> Maybe Int -> Text -> ListedServer

-- | Create a value of <a>ListedServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:ListedServer'</a>, <a>listedServer_loggingRole</a>
--   - Specifies the Amazon Resource Name (ARN) of the Amazon Web Services
--   Identity and Access Management (IAM) role that allows a server to turn
--   on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When
--   set, user activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:state:ListedServer'</a>, <a>listedServer_state</a> - Specifies
--   the condition of a server for the server that was described. A value
--   of <tt>ONLINE</tt> indicates that the server can accept jobs and
--   transfer files. A <tt>State</tt> value of <tt>OFFLINE</tt> means that
--   the server cannot perform file transfer operations.
--   
--   The states of <tt>STARTING</tt> and <tt>STOPPING</tt> indicate that
--   the server is in an intermediate state, either not fully able to
--   respond, or not fully offline. The values of <tt>START_FAILED</tt> or
--   <tt>STOP_FAILED</tt> can indicate an error condition.
--   
--   <a>$sel:identityProviderType:ListedServer'</a>,
--   <a>listedServer_identityProviderType</a> - Specifies the mode of
--   authentication for a server. The default value is
--   <tt>SERVICE_MANAGED</tt>, which allows you to store and access user
--   credentials within the Amazon Web Services Transfer Family service.
--   
--   Use <tt>AWS_DIRECTORY_SERVICE</tt> to provide access to Active
--   Directory groups in Amazon Web Services Managed Active Directory or
--   Microsoft Active Directory in your on-premises environment or in
--   Amazon Web Services using AD Connectors. This option also requires you
--   to provide a Directory ID using the <tt>IdentityProviderDetails</tt>
--   parameter.
--   
--   Use the <tt>API_GATEWAY</tt> value to integrate with an identity
--   provider of your choosing. The <tt>API_GATEWAY</tt> setting requires
--   you to provide an API Gateway endpoint URL to call for authentication
--   using the <tt>IdentityProviderDetails</tt> parameter.
--   
--   <a>$sel:serverId:ListedServer'</a>, <a>listedServer_serverId</a> -
--   Specifies the unique system assigned identifier for the servers that
--   were listed.
--   
--   <a>$sel:domain:ListedServer'</a>, <a>listedServer_domain</a> -
--   Specifies the domain of the storage system that is used for file
--   transfers.
--   
--   <a>$sel:endpointType:ListedServer'</a>,
--   <a>listedServer_endpointType</a> - Specifies the type of VPC endpoint
--   that your server is connected to. If your server is connected to a VPC
--   endpoint, your server isn't accessible over the public internet.
--   
--   <a>$sel:userCount:ListedServer'</a>, <a>listedServer_userCount</a> -
--   Specifies the number of users that are assigned to a server you
--   specified with the <tt>ServerId</tt>.
--   
--   <a>$sel:arn:ListedServer'</a>, <a>listedServer_arn</a> - Specifies the
--   unique Amazon Resource Name (ARN) for a server to be listed.
newListedServer :: Text -> ListedServer

-- | Returns properties of the user that you specify.
--   
--   <i>See:</i> <a>newListedUser</a> smart constructor.
data ListedUser
ListedUser' :: Maybe HomeDirectoryType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> ListedUser

-- | Create a value of <a>ListedUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeDirectoryType:ListedUser'</a>,
--   <a>listedUser_homeDirectoryType</a> - The type of landing directory
--   (folder) you want your users' home directory to be when they log into
--   the server. If you set it to <tt>PATH</tt>, the user will see the
--   absolute Amazon S3 bucket or EFS paths as is in their file transfer
--   protocol clients. If you set it <tt>LOGICAL</tt>, you need to provide
--   mappings in the <tt>HomeDirectoryMappings</tt> for how you want to
--   make Amazon S3 or EFS paths visible to your users.
--   
--   <a>$sel:userName:ListedUser'</a>, <a>listedUser_userName</a> -
--   Specifies the name of the user whose ARN was specified. User names are
--   used for authentication purposes.
--   
--   <a>$sel:role':ListedUser'</a>, <a>listedUser_role</a> - Specifies the
--   Amazon Resource Name (ARN) of the IAM role that controls your users'
--   access to your Amazon S3 bucket or EFS file system. The policies
--   attached to this role determine the level of access that you want to
--   provide your users when transferring files into and out of your Amazon
--   S3 bucket or EFS file system. The IAM role should also contain a trust
--   relationship that allows the server to access your resources when
--   servicing your users' transfer requests.
--   
--   The IAM role that controls your users' access to your Amazon S3 bucket
--   for servers with <tt>Domain=S3</tt>, or your EFS file system for
--   servers with <tt>Domain=EFS</tt>.
--   
--   The policies attached to this role determine the level of access you
--   want to provide your users when transferring files into and out of
--   your S3 buckets or EFS file systems.
--   
--   <a>$sel:sshPublicKeyCount:ListedUser'</a>,
--   <a>listedUser_sshPublicKeyCount</a> - Specifies the number of SSH
--   public keys stored for the user you specified.
--   
--   <a>$sel:homeDirectory:ListedUser'</a>, <a>listedUser_homeDirectory</a>
--   - The landing directory (folder) for a user when they log in to the
--   server using the client.
--   
--   A <tt>HomeDirectory</tt> example is
--   <tt>/bucket_name/home/mydirectory</tt>.
--   
--   <a>$sel:arn:ListedUser'</a>, <a>listedUser_arn</a> - Provides the
--   unique Amazon Resource Name (ARN) for the user that you want to learn
--   about.
newListedUser :: Text -> ListedUser

-- | Contains the ID, text description, and Amazon Resource Name (ARN) for
--   the workflow.
--   
--   <i>See:</i> <a>newListedWorkflow</a> smart constructor.
data ListedWorkflow
ListedWorkflow' :: Maybe Text -> Maybe Text -> Maybe Text -> ListedWorkflow

-- | Create a value of <a>ListedWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListedWorkflow'</a>, <a>listedWorkflow_arn</a> - Specifies
--   the unique Amazon Resource Name (ARN) for the workflow.
--   
--   <a>$sel:workflowId:ListedWorkflow'</a>,
--   <a>listedWorkflow_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:description:ListedWorkflow'</a>,
--   <a>listedWorkflow_description</a> - Specifies the text description for
--   the workflow.
newListedWorkflow :: ListedWorkflow

-- | Consists of the logging role and the log group name.
--   
--   <i>See:</i> <a>newLoggingConfiguration</a> smart constructor.
data LoggingConfiguration
LoggingConfiguration' :: Maybe Text -> Maybe Text -> LoggingConfiguration

-- | Create a value of <a>LoggingConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingRole:LoggingConfiguration'</a>,
--   <a>loggingConfiguration_loggingRole</a> - Specifies the Amazon
--   Resource Name (ARN) of the Amazon Web Services Identity and Access
--   Management (IAM) role that allows a server to turn on Amazon
--   CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user
--   activity can be viewed in your CloudWatch logs.
--   
--   <a>$sel:logGroupName:LoggingConfiguration'</a>,
--   <a>loggingConfiguration_logGroupName</a> - The name of the CloudWatch
--   logging group for the Amazon Web Services Transfer server to which
--   this workflow belongs.
newLoggingConfiguration :: LoggingConfiguration

-- | The full POSIX identity, including user ID (<tt>Uid</tt>), group ID
--   (<tt>Gid</tt>), and any secondary groups IDs (<tt>SecondaryGids</tt>),
--   that controls your users' access to your Amazon EFS file systems. The
--   POSIX permissions that are set on files and directories in your file
--   system determine the level of access your users get when transferring
--   files into and out of your Amazon EFS file systems.
--   
--   <i>See:</i> <a>newPosixProfile</a> smart constructor.
data PosixProfile
PosixProfile' :: Maybe [Natural] -> Natural -> Natural -> PosixProfile

-- | Create a value of <a>PosixProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryGids:PosixProfile'</a>,
--   <a>posixProfile_secondaryGids</a> - The secondary POSIX group IDs used
--   for all EFS operations by this user.
--   
--   <a>$sel:uid:PosixProfile'</a>, <a>posixProfile_uid</a> - The POSIX
--   user ID used for all EFS operations by this user.
--   
--   <a>$sel:gid:PosixProfile'</a>, <a>posixProfile_gid</a> - The POSIX
--   group ID used for all EFS operations by this user.
newPosixProfile :: Natural -> Natural -> PosixProfile

-- | The protocol settings that are configured for your server.
--   
--   This type is only valid in the <tt>UpdateServer</tt> API.
--   
--   <i>See:</i> <a>newProtocolDetails</a> smart constructor.
data ProtocolDetails
ProtocolDetails' :: Maybe Text -> ProtocolDetails

-- | Create a value of <a>ProtocolDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passiveIp:ProtocolDetails'</a>,
--   <a>protocolDetails_passiveIp</a> - Indicates passive mode, for FTP and
--   FTPS protocols. Enter a single dotted-quad IPv4 address, such as the
--   external IP address of a firewall, router, or load balancer. For
--   example:
--   
--   <pre>
--   aws transfer update-server --protocol-details PassiveIp=0.0.0.0
--   </pre>
--   
--   Replace <tt> 0.0.0.0 </tt> in the example above with the actual IP
--   address you want to use.
--   
--   If you change the <tt>PassiveIp</tt> value, you must stop and then
--   restart your Transfer server for the change to take effect. For
--   details on using Passive IP (PASV) in a NAT environment, see
--   <a>Configuring your FTPS server behind a firewall or NAT with Amazon
--   Web Services Transfer Family</a>.
newProtocolDetails :: ProtocolDetails

-- | Specifies the details for the file location for the file being used in
--   the workflow. Only applicable if you are using S3 storage.
--   
--   <i>See:</i> <a>newS3FileLocation</a> smart constructor.
data S3FileLocation
S3FileLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> S3FileLocation

-- | Create a value of <a>S3FileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:S3FileLocation'</a>, <a>s3FileLocation_versionId</a>
--   - Specifies the file version.
--   
--   <a>$sel:etag:S3FileLocation'</a>, <a>s3FileLocation_etag</a> - The
--   entity tag is a hash of the object. The ETag reflects changes only to
--   the contents of an object, not its metadata.
--   
--   <a>$sel:bucket:S3FileLocation'</a>, <a>s3FileLocation_bucket</a> -
--   Specifies the S3 bucket that contains the file being used.
--   
--   <a>$sel:key:S3FileLocation'</a>, <a>s3FileLocation_key</a> - The name
--   assigned to the file when it was created in S3. You use the object key
--   to retrieve the object.
newS3FileLocation :: S3FileLocation

-- | Specifies the customer input S3 file location. If it is used inside
--   <tt>copyStepDetails.DestinationFileLocation</tt>, it should be the S3
--   copy destination.
--   
--   You need to provide the bucket and key. The key can represent either a
--   path or a file. This is determined by whether or not you end the key
--   value with the forward slash (/) character. If the final character is
--   "/", then your file is copied to the folder, and its name does not
--   change. If, rather, the final character is alphanumeric, your uploaded
--   file is renamed to the path value. In this case, if a file with that
--   name already exists, it is overwritten.
--   
--   For example, if your path is <tt>shared-files/bob/</tt>, your uploaded
--   files are copied to the <tt>shared-files/bob/</tt>, folder. If your
--   path is <tt>shared-files/today</tt>, each uploaded file is copied to
--   the <tt>shared-files</tt> folder and named <tt>today</tt>: each upload
--   overwrites the previous version of the <i>bob</i> file.
--   
--   <i>See:</i> <a>newS3InputFileLocation</a> smart constructor.
data S3InputFileLocation
S3InputFileLocation' :: Maybe Text -> Maybe Text -> S3InputFileLocation

-- | Create a value of <a>S3InputFileLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3InputFileLocation'</a>,
--   <a>s3InputFileLocation_bucket</a> - Specifies the S3 bucket for the
--   customer input file.
--   
--   <a>$sel:key:S3InputFileLocation'</a>, <a>s3InputFileLocation_key</a> -
--   The name assigned to the file when it was created in S3. You use the
--   object key to retrieve the object.
newS3InputFileLocation :: S3InputFileLocation

-- | Specifies the key-value pair that are assigned to a file during the
--   execution of a Tagging step.
--   
--   <i>See:</i> <a>newS3Tag</a> smart constructor.
data S3Tag
S3Tag' :: Text -> Text -> S3Tag

-- | Create a value of <a>S3Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Tag'</a>, <a>s3Tag_key</a> - The name assigned to the
--   tag that you create.
--   
--   <a>$sel:value:S3Tag'</a>, <a>s3Tag_value</a> - The value that
--   corresponds to the key.
newS3Tag :: Text -> Text -> S3Tag

-- | A container object for the session details associated with a workflow.
--   
--   <i>See:</i> <a>newServiceMetadata</a> smart constructor.
data ServiceMetadata
ServiceMetadata' :: UserDetails -> ServiceMetadata

-- | Create a value of <a>ServiceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userDetails:ServiceMetadata'</a>,
--   <a>serviceMetadata_userDetails</a> - The Server ID
--   (<tt>ServerId</tt>), Session ID (<tt>SessionId</tt>) and user
--   (<tt>UserName</tt>) make up the <tt>UserDetails</tt>.
newServiceMetadata :: UserDetails -> ServiceMetadata

-- | Provides information about the public Secure Shell (SSH) key that is
--   associated with a user account for the specific file transfer
--   protocol-enabled server (as identified by <tt>ServerId</tt>). The
--   information returned includes the date the key was imported, the
--   public key contents, and the public key ID. A user can store more than
--   one SSH public key associated with their user name on a specific
--   server.
--   
--   <i>See:</i> <a>newSshPublicKey</a> smart constructor.
data SshPublicKey
SshPublicKey' :: POSIX -> Text -> Text -> SshPublicKey

-- | Create a value of <a>SshPublicKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dateImported:SshPublicKey'</a>,
--   <a>sshPublicKey_dateImported</a> - Specifies the date that the public
--   key was added to the user account.
--   
--   <a>$sel:sshPublicKeyBody:SshPublicKey'</a>,
--   <a>sshPublicKey_sshPublicKeyBody</a> - Specifies the content of the
--   SSH public key as specified by the <tt>PublicKeyId</tt>.
--   
--   <a>$sel:sshPublicKeyId:SshPublicKey'</a>,
--   <a>sshPublicKey_sshPublicKeyId</a> - Specifies the
--   <tt>SshPublicKeyId</tt> parameter contains the identifier of the
--   public key.
newSshPublicKey :: UTCTime -> Text -> Text -> SshPublicKey

-- | Creates a key-value pair for a specific resource. Tags are metadata
--   that you can use to search for and group a resource for various
--   purposes. You can apply tags to servers, users, and roles. A tag key
--   can take more than one value. For example, to group servers for
--   accounting purposes, you might create a tag called <tt>Group</tt> and
--   assign the values <tt>Research</tt> and <tt>Accounting</tt> to that
--   group.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The name assigned to the tag
--   that you create.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - Contains one or more values
--   that you assigned to the key name you create.
newTag :: Text -> Text -> Tag

-- | Each step type has its own <tt>StepDetails</tt> structure.
--   
--   The key/value pairs used to tag a file during the execution of a
--   workflow step.
--   
--   <i>See:</i> <a>newTagStepDetails</a> smart constructor.
data TagStepDetails
TagStepDetails' :: Maybe Text -> Maybe (NonEmpty S3Tag) -> TagStepDetails

-- | Create a value of <a>TagStepDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TagStepDetails'</a>, <a>tagStepDetails_name</a> - The
--   name of the step, used as an identifier.
--   
--   <a>$sel:tags:TagStepDetails'</a>, <a>tagStepDetails_tags</a> - Array
--   that contains from 1 to 10 key/value pairs.
newTagStepDetails :: TagStepDetails

-- | Specifies the user name, server ID, and session ID for a workflow.
--   
--   <i>See:</i> <a>newUserDetails</a> smart constructor.
data UserDetails
UserDetails' :: Maybe Text -> Text -> Text -> UserDetails

-- | Create a value of <a>UserDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionId:UserDetails'</a>, <a>userDetails_sessionId</a> - The
--   system-assigned unique identifier for a session that corresponds to
--   the workflow.
--   
--   <a>$sel:userName:UserDetails'</a>, <a>userDetails_userName</a> - A
--   unique string that identifies a user account associated with a server.
--   
--   <a>$sel:serverId:UserDetails'</a>, <a>userDetails_serverId</a> - The
--   system-assigned unique identifier for a Transfer server instance.
newUserDetails :: Text -> Text -> UserDetails

-- | Specifies the workflow ID for the workflow to assign and the execution
--   role used for executing the workflow.
--   
--   <i>See:</i> <a>newWorkflowDetail</a> smart constructor.
data WorkflowDetail
WorkflowDetail' :: Text -> Text -> WorkflowDetail

-- | Create a value of <a>WorkflowDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowId:WorkflowDetail'</a>,
--   <a>workflowDetail_workflowId</a> - A unique identifier for the
--   workflow.
--   
--   <a>$sel:executionRole:WorkflowDetail'</a>,
--   <a>workflowDetail_executionRole</a> - Includes the necessary
--   permissions for S3, EFS, and Lambda operations that Transfer can
--   assume, so that all workflow steps can operate on the required
--   resources
newWorkflowDetail :: Text -> Text -> WorkflowDetail

-- | Container for the <tt>WorkflowDetail</tt> data type. It is used by
--   actions that trigger a workflow to begin execution.
--   
--   <i>See:</i> <a>newWorkflowDetails</a> smart constructor.
data WorkflowDetails
WorkflowDetails' :: [WorkflowDetail] -> WorkflowDetails

-- | Create a value of <a>WorkflowDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onUpload:WorkflowDetails'</a>, <a>workflowDetails_onUpload</a>
--   - A trigger that starts a workflow: the workflow begins to execute
--   after a file is uploaded.
newWorkflowDetails :: WorkflowDetails

-- | The basic building block of a workflow.
--   
--   <i>See:</i> <a>newWorkflowStep</a> smart constructor.
data WorkflowStep
WorkflowStep' :: Maybe TagStepDetails -> Maybe DeleteStepDetails -> Maybe CopyStepDetails -> Maybe WorkflowStepType -> Maybe CustomStepDetails -> WorkflowStep

-- | Create a value of <a>WorkflowStep</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_tagStepDetails</a> - Details for a step that creates
--   one or more tags.
--   
--   You specify one or more tags: each tag contains a key/value pair.
--   
--   <a>$sel:deleteStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_deleteStepDetails</a> - Details for a step that
--   deletes the file.
--   
--   <a>$sel:copyStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_copyStepDetails</a> - Details for a step that performs
--   a file copy.
--   
--   Consists of the following values:
--   
--   <ul>
--   <li>A description</li>
--   <li>An S3 location for the destination of the file copy.</li>
--   <li>A flag that indicates whether or not to overwrite an existing file
--   of the same name. The default is <tt>FALSE</tt>.</li>
--   </ul>
--   
--   <a>$sel:type':WorkflowStep'</a>, <a>workflowStep_type</a> - Currently,
--   the following step types are supported.
--   
--   <ul>
--   <li><i>Copy</i>: copy the file to another location</li>
--   <li><i>Custom</i>: custom step with a lambda target</li>
--   <li><i>Delete</i>: delete the file</li>
--   <li><i>Tag</i>: add a tag to the file</li>
--   </ul>
--   
--   <a>$sel:customStepDetails:WorkflowStep'</a>,
--   <a>workflowStep_customStepDetails</a> - Details for a step that
--   invokes a lambda function.
--   
--   Consists of the lambda function name, target, and timeout (in
--   seconds).
newWorkflowStep :: WorkflowStep
