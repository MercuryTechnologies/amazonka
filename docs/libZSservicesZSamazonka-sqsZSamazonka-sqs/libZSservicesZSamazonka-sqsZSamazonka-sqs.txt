-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-sqsZSamazonka-sqs
@version 1.6.1


module Network.AWS.SQS.Types.BatchResultErrorEntry

-- | Gives a detailed description of the result of an action on each entry
--   in the request.
--   
--   <i>See:</i> <a>newBatchResultErrorEntry</a> smart constructor.
data BatchResultErrorEntry
BatchResultErrorEntry' :: Maybe Text -> Text -> Bool -> Text -> BatchResultErrorEntry

-- | A message explaining why the action failed on this entry.
[$sel:message:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Maybe Text

-- | The <tt>Id</tt> of an entry in a batch request.
[$sel:id:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Text

-- | Specifies whether the error happened due to the caller of the batch
--   API action.
[$sel:senderFault:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Bool

-- | An error code representing why the action failed on this entry.
[$sel:code:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Text

-- | Create a value of <a>BatchResultErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_message</a> - A message explaining why the
--   action failed on this entry.
--   
--   <a>$sel:id:BatchResultErrorEntry'</a>, <a>batchResultErrorEntry_id</a>
--   - The <tt>Id</tt> of an entry in a batch request.
--   
--   <a>$sel:senderFault:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_senderFault</a> - Specifies whether the error
--   happened due to the caller of the batch API action.
--   
--   <a>$sel:code:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_code</a> - An error code representing why the
--   action failed on this entry.
newBatchResultErrorEntry :: Text -> Bool -> Text -> BatchResultErrorEntry

-- | A message explaining why the action failed on this entry.
batchResultErrorEntry_message :: Lens' BatchResultErrorEntry (Maybe Text)

-- | The <tt>Id</tt> of an entry in a batch request.
batchResultErrorEntry_id :: Lens' BatchResultErrorEntry Text

-- | Specifies whether the error happened due to the caller of the batch
--   API action.
batchResultErrorEntry_senderFault :: Lens' BatchResultErrorEntry Bool

-- | An error code representing why the action failed on this entry.
batchResultErrorEntry_code :: Lens' BatchResultErrorEntry Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.BatchResultErrorEntry.BatchResultErrorEntry
instance GHC.Show.Show Network.AWS.SQS.Types.BatchResultErrorEntry.BatchResultErrorEntry
instance GHC.Read.Read Network.AWS.SQS.Types.BatchResultErrorEntry.BatchResultErrorEntry
instance GHC.Classes.Eq Network.AWS.SQS.Types.BatchResultErrorEntry.BatchResultErrorEntry
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.BatchResultErrorEntry.BatchResultErrorEntry
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.BatchResultErrorEntry.BatchResultErrorEntry
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.BatchResultErrorEntry.BatchResultErrorEntry


module Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry

-- | Encloses a receipt handle and an entry id for each message in <tt>
--   ChangeMessageVisibilityBatch.</tt>
--   
--   All of the following list parameters must be prefixed with
--   <tt>ChangeMessageVisibilityBatchRequestEntry.n</tt>, where <tt>n</tt>
--   is an integer value starting with <tt>1</tt>. For example, a parameter
--   list for this action might look like this:
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.Id=change_visibility_msg_2
--   </pre>
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle=your_receipt_handle
--   </pre>
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout=45
--   </pre>
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchRequestEntry</a> smart
--   constructor.
data ChangeMessageVisibilityBatchRequestEntry
ChangeMessageVisibilityBatchRequestEntry' :: Maybe Int -> Text -> Text -> ChangeMessageVisibilityBatchRequestEntry

-- | The new value (in seconds) for the message's visibility timeout.
[$sel:visibilityTimeout:ChangeMessageVisibilityBatchRequestEntry'] :: ChangeMessageVisibilityBatchRequestEntry -> Maybe Int

-- | An identifier for this particular receipt handle used to communicate
--   the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
[$sel:id:ChangeMessageVisibilityBatchRequestEntry'] :: ChangeMessageVisibilityBatchRequestEntry -> Text

-- | A receipt handle.
[$sel:receiptHandle:ChangeMessageVisibilityBatchRequestEntry'] :: ChangeMessageVisibilityBatchRequestEntry -> Text

-- | Create a value of <a>ChangeMessageVisibilityBatchRequestEntry</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:visibilityTimeout:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_visibilityTimeout</a> -
--   The new value (in seconds) for the message's visibility timeout.
--   
--   <a>$sel:id:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_id</a> - An identifier for
--   this particular receipt handle used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:receiptHandle:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_receiptHandle</a> - A
--   receipt handle.
newChangeMessageVisibilityBatchRequestEntry :: Text -> Text -> ChangeMessageVisibilityBatchRequestEntry

-- | The new value (in seconds) for the message's visibility timeout.
changeMessageVisibilityBatchRequestEntry_visibilityTimeout :: Lens' ChangeMessageVisibilityBatchRequestEntry (Maybe Int)

-- | An identifier for this particular receipt handle used to communicate
--   the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
changeMessageVisibilityBatchRequestEntry_id :: Lens' ChangeMessageVisibilityBatchRequestEntry Text

-- | A receipt handle.
changeMessageVisibilityBatchRequestEntry_receiptHandle :: Lens' ChangeMessageVisibilityBatchRequestEntry Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry.ChangeMessageVisibilityBatchRequestEntry
instance GHC.Show.Show Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry.ChangeMessageVisibilityBatchRequestEntry
instance GHC.Read.Read Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry.ChangeMessageVisibilityBatchRequestEntry
instance GHC.Classes.Eq Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry.ChangeMessageVisibilityBatchRequestEntry
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry.ChangeMessageVisibilityBatchRequestEntry
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry.ChangeMessageVisibilityBatchRequestEntry
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.ChangeMessageVisibilityBatchRequestEntry.ChangeMessageVisibilityBatchRequestEntry


module Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry

-- | Encloses the <tt>Id</tt> of an entry in <tt>
--   ChangeMessageVisibilityBatch.</tt>
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchResultEntry</a> smart
--   constructor.
data ChangeMessageVisibilityBatchResultEntry
ChangeMessageVisibilityBatchResultEntry' :: Text -> ChangeMessageVisibilityBatchResultEntry

-- | Represents a message whose visibility timeout has been changed
--   successfully.
[$sel:id:ChangeMessageVisibilityBatchResultEntry'] :: ChangeMessageVisibilityBatchResultEntry -> Text

-- | Create a value of <a>ChangeMessageVisibilityBatchResultEntry</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ChangeMessageVisibilityBatchResultEntry'</a>,
--   <a>changeMessageVisibilityBatchResultEntry_id</a> - Represents a
--   message whose visibility timeout has been changed successfully.
newChangeMessageVisibilityBatchResultEntry :: Text -> ChangeMessageVisibilityBatchResultEntry

-- | Represents a message whose visibility timeout has been changed
--   successfully.
changeMessageVisibilityBatchResultEntry_id :: Lens' ChangeMessageVisibilityBatchResultEntry Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry.ChangeMessageVisibilityBatchResultEntry
instance GHC.Show.Show Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry.ChangeMessageVisibilityBatchResultEntry
instance GHC.Read.Read Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry.ChangeMessageVisibilityBatchResultEntry
instance GHC.Classes.Eq Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry.ChangeMessageVisibilityBatchResultEntry
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry.ChangeMessageVisibilityBatchResultEntry
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry.ChangeMessageVisibilityBatchResultEntry
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.ChangeMessageVisibilityBatchResultEntry.ChangeMessageVisibilityBatchResultEntry


module Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry

-- | Encloses a receipt handle and an identifier for it.
--   
--   <i>See:</i> <a>newDeleteMessageBatchRequestEntry</a> smart
--   constructor.
data DeleteMessageBatchRequestEntry
DeleteMessageBatchRequestEntry' :: Text -> Text -> DeleteMessageBatchRequestEntry

-- | An identifier for this particular receipt handle. This is used to
--   communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
[$sel:id:DeleteMessageBatchRequestEntry'] :: DeleteMessageBatchRequestEntry -> Text

-- | A receipt handle.
[$sel:receiptHandle:DeleteMessageBatchRequestEntry'] :: DeleteMessageBatchRequestEntry -> Text

-- | Create a value of <a>DeleteMessageBatchRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteMessageBatchRequestEntry'</a>,
--   <a>deleteMessageBatchRequestEntry_id</a> - An identifier for this
--   particular receipt handle. This is used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:receiptHandle:DeleteMessageBatchRequestEntry'</a>,
--   <a>deleteMessageBatchRequestEntry_receiptHandle</a> - A receipt
--   handle.
newDeleteMessageBatchRequestEntry :: Text -> Text -> DeleteMessageBatchRequestEntry

-- | An identifier for this particular receipt handle. This is used to
--   communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
deleteMessageBatchRequestEntry_id :: Lens' DeleteMessageBatchRequestEntry Text

-- | A receipt handle.
deleteMessageBatchRequestEntry_receiptHandle :: Lens' DeleteMessageBatchRequestEntry Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry.DeleteMessageBatchRequestEntry
instance GHC.Show.Show Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry.DeleteMessageBatchRequestEntry
instance GHC.Read.Read Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry.DeleteMessageBatchRequestEntry
instance GHC.Classes.Eq Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry.DeleteMessageBatchRequestEntry
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry.DeleteMessageBatchRequestEntry
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry.DeleteMessageBatchRequestEntry
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.DeleteMessageBatchRequestEntry.DeleteMessageBatchRequestEntry


module Network.AWS.SQS.Types.DeleteMessageBatchResultEntry

-- | Encloses the <tt>Id</tt> of an entry in <tt> DeleteMessageBatch.</tt>
--   
--   <i>See:</i> <a>newDeleteMessageBatchResultEntry</a> smart constructor.
data DeleteMessageBatchResultEntry
DeleteMessageBatchResultEntry' :: Text -> DeleteMessageBatchResultEntry

-- | Represents a successfully deleted message.
[$sel:id:DeleteMessageBatchResultEntry'] :: DeleteMessageBatchResultEntry -> Text

-- | Create a value of <a>DeleteMessageBatchResultEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteMessageBatchResultEntry'</a>,
--   <a>deleteMessageBatchResultEntry_id</a> - Represents a successfully
--   deleted message.
newDeleteMessageBatchResultEntry :: Text -> DeleteMessageBatchResultEntry

-- | Represents a successfully deleted message.
deleteMessageBatchResultEntry_id :: Lens' DeleteMessageBatchResultEntry Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.DeleteMessageBatchResultEntry.DeleteMessageBatchResultEntry
instance GHC.Show.Show Network.AWS.SQS.Types.DeleteMessageBatchResultEntry.DeleteMessageBatchResultEntry
instance GHC.Read.Read Network.AWS.SQS.Types.DeleteMessageBatchResultEntry.DeleteMessageBatchResultEntry
instance GHC.Classes.Eq Network.AWS.SQS.Types.DeleteMessageBatchResultEntry.DeleteMessageBatchResultEntry
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.DeleteMessageBatchResultEntry.DeleteMessageBatchResultEntry
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.DeleteMessageBatchResultEntry.DeleteMessageBatchResultEntry
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.DeleteMessageBatchResultEntry.DeleteMessageBatchResultEntry


module Network.AWS.SQS.Types.MessageAttribute
newtype MessageAttribute
MessageAttribute' :: Text -> MessageAttribute
[fromMessageAttribute] :: MessageAttribute -> Text
pattern MessageAttribute_All :: MessageAttribute
pattern MessageAttribute_ApproximateFirstReceiveTimestamp :: MessageAttribute
pattern MessageAttribute_ApproximateReceiveCount :: MessageAttribute
pattern MessageAttribute_SenderId :: MessageAttribute
pattern MessageAttribute_SentTimestamp :: MessageAttribute
instance Network.AWS.Data.XML.ToXML Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Network.AWS.Data.Log.ToLog Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Network.AWS.Data.Text.ToText Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Network.AWS.Data.Text.FromText Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance GHC.Generics.Generic Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance GHC.Classes.Ord Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance GHC.Classes.Eq Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance GHC.Read.Read Network.AWS.SQS.Types.MessageAttribute.MessageAttribute
instance GHC.Show.Show Network.AWS.SQS.Types.MessageAttribute.MessageAttribute


module Network.AWS.SQS.Types.MessageAttributeValue

-- | The user-specified message attribute value. For string data types, the
--   <tt>Value</tt> attribute has the same restrictions on the content as
--   the message body. For more information, see <tt> SendMessage.</tt>
--   
--   <tt>Name</tt>, <tt>type</tt>, <tt>value</tt> and the message body must
--   not be empty or null. All parts of the message attribute, including
--   <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>, are part of the
--   message size restriction (256 KB or 262,144 bytes).
--   
--   <i>See:</i> <a>newMessageAttributeValue</a> smart constructor.
data MessageAttributeValue
MessageAttributeValue' :: Maybe [Text] -> Maybe Text -> Maybe [Base64] -> Maybe Base64 -> Text -> MessageAttributeValue

-- | Not implemented. Reserved for future use.
[$sel:stringListValues:MessageAttributeValue'] :: MessageAttributeValue -> Maybe [Text]

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
[$sel:stringValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Text

-- | Not implemented. Reserved for future use.
[$sel:binaryListValues:MessageAttributeValue'] :: MessageAttributeValue -> Maybe [Base64]

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.
[$sel:binaryValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Base64

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:dataType:MessageAttributeValue'] :: MessageAttributeValue -> Text

-- | Create a value of <a>MessageAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringListValues:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:stringValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringValue</a> - Strings are Unicode with
--   UTF-8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryListValues:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:binaryValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryValue</a> - Binary type attributes can
--   store any binary data, such as compressed data, encrypted data, or
--   images.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and
--   decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:dataType:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_dataType</a> - Amazon SQS supports the
--   following logical data types: <tt>String</tt>, <tt>Number</tt>, and
--   <tt>Binary</tt>. For the <tt>Number</tt> data type, you must use
--   <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
newMessageAttributeValue :: Text -> MessageAttributeValue

-- | Not implemented. Reserved for future use.
messageAttributeValue_stringListValues :: Lens' MessageAttributeValue (Maybe [Text])

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageAttributeValue_stringValue :: Lens' MessageAttributeValue (Maybe Text)

-- | Not implemented. Reserved for future use.
messageAttributeValue_binaryListValues :: Lens' MessageAttributeValue (Maybe [ByteString])

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageAttributeValue_binaryValue :: Lens' MessageAttributeValue (Maybe ByteString)

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
messageAttributeValue_dataType :: Lens' MessageAttributeValue Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue
instance GHC.Show.Show Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue
instance GHC.Read.Read Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue
instance GHC.Classes.Eq Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.MessageAttributeValue.MessageAttributeValue


module Network.AWS.SQS.Types.Message

-- | An Amazon SQS message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe Text -> Maybe Text -> Maybe (HashMap MessageAttribute Text) -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe Text -> Maybe Text -> Message

-- | The message's contents (not URL-encoded).
[$sel:body:Message'] :: Message -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message body string.
[$sel:mD5OfBody:Message'] :: Message -> Maybe Text

-- | A map of the attributes requested in <tt> ReceiveMessage </tt> to
--   their respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
[$sel:attributes:Message'] :: Message -> Maybe (HashMap MessageAttribute Text)

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:messageAttributes:Message'] :: Message -> Maybe (HashMap Text MessageAttributeValue)

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageAttributes:Message'] :: Message -> Maybe Text

-- | An identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
[$sel:receiptHandle:Message'] :: Message -> Maybe Text

-- | A unique identifier for the message. A <tt>MessageId</tt>is considered
--   unique across all accounts for an extended period of time.
[$sel:messageId:Message'] :: Message -> Maybe Text

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:Message'</a>, <a>message_body</a> - The message's
--   contents (not URL-encoded).
--   
--   <a>$sel:mD5OfBody:Message'</a>, <a>message_mD5OfBody</a> - An MD5
--   digest of the non-URL-encoded message body string.
--   
--   <a>$sel:attributes:Message'</a>, <a>message_attributes</a> - A map of
--   the attributes requested in <tt> ReceiveMessage </tt> to their
--   respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
--   
--   <a>$sel:messageAttributes:Message'</a>,
--   <a>message_messageAttributes</a> - Each message attribute consists of
--   a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>. For more
--   information, see <a>Amazon SQS message attributes</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   <a>$sel:mD5OfMessageAttributes:Message'</a>,
--   <a>message_mD5OfMessageAttributes</a> - An MD5 digest of the
--   non-URL-encoded message attribute string. You can use this attribute
--   to verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:receiptHandle:Message'</a>, <a>message_receiptHandle</a> - An
--   identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - A unique
--   identifier for the message. A <tt>MessageId</tt>is considered unique
--   across all accounts for an extended period of time.
newMessage :: Message

-- | The message's contents (not URL-encoded).
message_body :: Lens' Message (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string.
message_mD5OfBody :: Lens' Message (Maybe Text)

-- | A map of the attributes requested in <tt> ReceiveMessage </tt> to
--   their respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
message_attributes :: Lens' Message (Maybe (HashMap MessageAttribute Text))

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
message_messageAttributes :: Lens' Message (Maybe (HashMap Text MessageAttributeValue))

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
message_mD5OfMessageAttributes :: Lens' Message (Maybe Text)

-- | An identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
message_receiptHandle :: Lens' Message (Maybe Text)

-- | A unique identifier for the message. A <tt>MessageId</tt>is considered
--   unique across all accounts for an extended period of time.
message_messageId :: Lens' Message (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SQS.Types.Message.Message
instance GHC.Show.Show Network.AWS.SQS.Types.Message.Message
instance GHC.Read.Read Network.AWS.SQS.Types.Message.Message
instance GHC.Classes.Eq Network.AWS.SQS.Types.Message.Message
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.Message.Message
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.Message.Message
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.Message.Message


module Network.AWS.SQS.Types.MessageSystemAttributeNameForSends
newtype MessageSystemAttributeNameForSends
MessageSystemAttributeNameForSends' :: Text -> MessageSystemAttributeNameForSends
[fromMessageSystemAttributeNameForSends] :: MessageSystemAttributeNameForSends -> Text
pattern MessageSystemAttributeNameForSends_AWSTraceHeader :: MessageSystemAttributeNameForSends
instance Network.AWS.Data.XML.ToXML Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Network.AWS.Data.Log.ToLog Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Network.AWS.Data.Text.ToText Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Network.AWS.Data.Text.FromText Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance GHC.Generics.Generic Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance GHC.Classes.Ord Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance GHC.Classes.Eq Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance GHC.Read.Read Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends
instance GHC.Show.Show Network.AWS.SQS.Types.MessageSystemAttributeNameForSends.MessageSystemAttributeNameForSends


module Network.AWS.SQS.Types.MessageSystemAttributeValue

-- | The user-specified message system attribute value. For string data
--   types, the <tt>Value</tt> attribute has the same restrictions on the
--   content as the message body. For more information, see <tt>
--   SendMessage.</tt>
--   
--   <tt>Name</tt>, <tt>type</tt>, <tt>value</tt> and the message body must
--   not be empty or null.
--   
--   <i>See:</i> <a>newMessageSystemAttributeValue</a> smart constructor.
data MessageSystemAttributeValue
MessageSystemAttributeValue' :: Maybe [Text] -> Maybe Text -> Maybe [Base64] -> Maybe Base64 -> Text -> MessageSystemAttributeValue

-- | Not implemented. Reserved for future use.
[$sel:stringListValues:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe [Text]

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
[$sel:stringValue:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe Text

-- | Not implemented. Reserved for future use.
[$sel:binaryListValues:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe [Base64]

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.
[$sel:binaryValue:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe Base64

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:dataType:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Text

-- | Create a value of <a>MessageSystemAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringListValues:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_stringListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:stringValue:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_stringValue</a> - Strings are Unicode
--   with UTF-8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryListValues:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_binaryListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:binaryValue:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_binaryValue</a> - Binary type
--   attributes can store any binary data, such as compressed data,
--   encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:dataType:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_dataType</a> - Amazon SQS supports the
--   following logical data types: <tt>String</tt>, <tt>Number</tt>, and
--   <tt>Binary</tt>. For the <tt>Number</tt> data type, you must use
--   <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
newMessageSystemAttributeValue :: Text -> MessageSystemAttributeValue

-- | Not implemented. Reserved for future use.
messageSystemAttributeValue_stringListValues :: Lens' MessageSystemAttributeValue (Maybe [Text])

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageSystemAttributeValue_stringValue :: Lens' MessageSystemAttributeValue (Maybe Text)

-- | Not implemented. Reserved for future use.
messageSystemAttributeValue_binaryListValues :: Lens' MessageSystemAttributeValue (Maybe [ByteString])

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageSystemAttributeValue_binaryValue :: Lens' MessageSystemAttributeValue (Maybe ByteString)

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
messageSystemAttributeValue_dataType :: Lens' MessageSystemAttributeValue Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.MessageSystemAttributeValue.MessageSystemAttributeValue
instance GHC.Show.Show Network.AWS.SQS.Types.MessageSystemAttributeValue.MessageSystemAttributeValue
instance GHC.Read.Read Network.AWS.SQS.Types.MessageSystemAttributeValue.MessageSystemAttributeValue
instance GHC.Classes.Eq Network.AWS.SQS.Types.MessageSystemAttributeValue.MessageSystemAttributeValue
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.MessageSystemAttributeValue.MessageSystemAttributeValue
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.MessageSystemAttributeValue.MessageSystemAttributeValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.MessageSystemAttributeValue.MessageSystemAttributeValue


module Network.AWS.SQS.Types.QueueAttributeName
newtype QueueAttributeName
QueueAttributeName' :: Text -> QueueAttributeName
[fromQueueAttributeName] :: QueueAttributeName -> Text
pattern QueueAttributeName_All :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessages :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessagesDelayed :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessagesNotVisible :: QueueAttributeName
pattern QueueAttributeName_ContentBasedDeduplication :: QueueAttributeName
pattern QueueAttributeName_CreatedTimestamp :: QueueAttributeName
pattern QueueAttributeName_DeduplicationScope :: QueueAttributeName
pattern QueueAttributeName_DelaySeconds :: QueueAttributeName
pattern QueueAttributeName_FifoQueue :: QueueAttributeName
pattern QueueAttributeName_FifoThroughputLimit :: QueueAttributeName
pattern QueueAttributeName_KmsDataKeyReusePeriodSeconds :: QueueAttributeName
pattern QueueAttributeName_KmsMasterKeyId :: QueueAttributeName
pattern QueueAttributeName_LastModifiedTimestamp :: QueueAttributeName
pattern QueueAttributeName_MaximumMessageSize :: QueueAttributeName
pattern QueueAttributeName_MessageRetentionPeriod :: QueueAttributeName
pattern QueueAttributeName_Policy :: QueueAttributeName
pattern QueueAttributeName_QueueArn :: QueueAttributeName
pattern QueueAttributeName_ReceiveMessageWaitTimeSeconds :: QueueAttributeName
pattern QueueAttributeName_RedriveAllowPolicy :: QueueAttributeName
pattern QueueAttributeName_RedrivePolicy :: QueueAttributeName
pattern QueueAttributeName_VisibilityTimeout :: QueueAttributeName
instance Network.AWS.Data.XML.ToXML Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Network.AWS.Data.Log.ToLog Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Network.AWS.Data.Text.ToText Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Network.AWS.Data.Text.FromText Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance GHC.Generics.Generic Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance GHC.Classes.Ord Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance GHC.Classes.Eq Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance GHC.Read.Read Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName
instance GHC.Show.Show Network.AWS.SQS.Types.QueueAttributeName.QueueAttributeName


module Network.AWS.SQS.Types.SendMessageBatchRequestEntry

-- | Contains the details of a single Amazon SQS message along with an
--   <tt>Id</tt>.
--   
--   <i>See:</i> <a>newSendMessageBatchRequestEntry</a> smart constructor.
data SendMessageBatchRequestEntry
SendMessageBatchRequestEntry' :: Maybe Text -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue) -> Maybe Int -> Text -> Text -> SendMessageBatchRequestEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
[$sel:messageDeduplicationId:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe Text

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:messageAttributes:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe (HashMap Text MessageAttributeValue)

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
[$sel:messageGroupId:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe Text

-- | The message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
[$sel:messageSystemAttributes:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue)

-- | The length of time, in seconds, for which a specific message is
--   delayed. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a
--   positive <tt>DelaySeconds</tt> value become available for processing
--   after the delay period is finished. If you don't specify a value, the
--   default value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
[$sel:delaySeconds:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe Int

-- | An identifier for a message in this batch used to communicate the
--   result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
[$sel:id:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Text

-- | The body of the message.
[$sel:messageBody:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Text

-- | Create a value of <a>SendMessageBatchRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageDeduplicationId:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageDeduplicationId</a> - This
--   parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   <a>$sel:messageAttributes:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageAttributes</a> - Each message
--   attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:messageGroupId:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageGroupId</a> - This parameter
--   applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
--   
--   <a>$sel:messageSystemAttributes:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageSystemAttributes</a> - The
--   message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
--   
--   <a>$sel:delaySeconds:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_delaySeconds</a> - The length of time,
--   in seconds, for which a specific message is delayed. Valid values: 0
--   to 900. Maximum: 15 minutes. Messages with a positive
--   <tt>DelaySeconds</tt> value become available for processing after the
--   delay period is finished. If you don't specify a value, the default
--   value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
--   
--   <a>$sel:id:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_id</a> - An identifier for a message
--   in this batch used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:messageBody:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageBody</a> - The body of the
--   message.
newSendMessageBatchRequestEntry :: Text -> Text -> SendMessageBatchRequestEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
sendMessageBatchRequestEntry_messageDeduplicationId :: Lens' SendMessageBatchRequestEntry (Maybe Text)

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
sendMessageBatchRequestEntry_messageAttributes :: Lens' SendMessageBatchRequestEntry (Maybe (HashMap Text MessageAttributeValue))

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
sendMessageBatchRequestEntry_messageGroupId :: Lens' SendMessageBatchRequestEntry (Maybe Text)

-- | The message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
sendMessageBatchRequestEntry_messageSystemAttributes :: Lens' SendMessageBatchRequestEntry (Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue))

-- | The length of time, in seconds, for which a specific message is
--   delayed. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a
--   positive <tt>DelaySeconds</tt> value become available for processing
--   after the delay period is finished. If you don't specify a value, the
--   default value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
sendMessageBatchRequestEntry_delaySeconds :: Lens' SendMessageBatchRequestEntry (Maybe Int)

-- | An identifier for a message in this batch used to communicate the
--   result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
sendMessageBatchRequestEntry_id :: Lens' SendMessageBatchRequestEntry Text

-- | The body of the message.
sendMessageBatchRequestEntry_messageBody :: Lens' SendMessageBatchRequestEntry Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.SendMessageBatchRequestEntry.SendMessageBatchRequestEntry
instance GHC.Show.Show Network.AWS.SQS.Types.SendMessageBatchRequestEntry.SendMessageBatchRequestEntry
instance GHC.Read.Read Network.AWS.SQS.Types.SendMessageBatchRequestEntry.SendMessageBatchRequestEntry
instance GHC.Classes.Eq Network.AWS.SQS.Types.SendMessageBatchRequestEntry.SendMessageBatchRequestEntry
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.SendMessageBatchRequestEntry.SendMessageBatchRequestEntry
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.SendMessageBatchRequestEntry.SendMessageBatchRequestEntry
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.Types.SendMessageBatchRequestEntry.SendMessageBatchRequestEntry


module Network.AWS.SQS.Types.SendMessageBatchResultEntry

-- | Encloses a <tt>MessageId</tt> for a successfully-enqueued message in a
--   <tt> SendMessageBatch.</tt>
--   
--   <i>See:</i> <a>newSendMessageBatchResultEntry</a> smart constructor.
data SendMessageBatchResultEntry
SendMessageBatchResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> SendMessageBatchResultEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
[$sel:sequenceNumber:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageSystemAttributes:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageAttributes:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Maybe Text

-- | An identifier for the message in this batch.
[$sel:id:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Text

-- | An identifier for the message.
[$sel:messageId:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Text

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageBody:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Text

-- | Create a value of <a>SendMessageBatchResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceNumber:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_sequenceNumber</a> - This parameter
--   applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
--   
--   <a>$sel:mD5OfMessageSystemAttributes:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageSystemAttributes</a> - An
--   MD5 digest of the non-URL-encoded message system attribute string. You
--   can use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:mD5OfMessageAttributes:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageAttributes</a> - An MD5
--   digest of the non-URL-encoded message attribute string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:id:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_id</a> - An identifier for the message
--   in this batch.
--   
--   <a>$sel:messageId:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_messageId</a> - An identifier for the
--   message.
--   
--   <a>$sel:mD5OfMessageBody:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageBody</a> - An MD5 digest of
--   the non-URL-encoded message body string. You can use this attribute to
--   verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
newSendMessageBatchResultEntry :: Text -> Text -> Text -> SendMessageBatchResultEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
sendMessageBatchResultEntry_sequenceNumber :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageSystemAttributes :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageAttributes :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An identifier for the message in this batch.
sendMessageBatchResultEntry_id :: Lens' SendMessageBatchResultEntry Text

-- | An identifier for the message.
sendMessageBatchResultEntry_messageId :: Lens' SendMessageBatchResultEntry Text

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageBody :: Lens' SendMessageBatchResultEntry Text
instance GHC.Generics.Generic Network.AWS.SQS.Types.SendMessageBatchResultEntry.SendMessageBatchResultEntry
instance GHC.Show.Show Network.AWS.SQS.Types.SendMessageBatchResultEntry.SendMessageBatchResultEntry
instance GHC.Read.Read Network.AWS.SQS.Types.SendMessageBatchResultEntry.SendMessageBatchResultEntry
instance GHC.Classes.Eq Network.AWS.SQS.Types.SendMessageBatchResultEntry.SendMessageBatchResultEntry
instance Network.AWS.Data.XML.FromXML Network.AWS.SQS.Types.SendMessageBatchResultEntry.SendMessageBatchResultEntry
instance Data.Hashable.Class.Hashable Network.AWS.SQS.Types.SendMessageBatchResultEntry.SendMessageBatchResultEntry
instance Control.DeepSeq.NFData Network.AWS.SQS.Types.SendMessageBatchResultEntry.SendMessageBatchResultEntry


module Network.AWS.SQS.Types

-- | API version <tt>2012-11-05</tt> of the Amazon Simple Queue Service SDK
--   configuration.
defaultService :: Service

-- | The batch request contains more entries than permissible.
_TooManyEntriesInBatchRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified receipt handle isn't valid for the current version.
_InvalidIdFormat :: AsError a => Getting (First ServiceError) a ServiceError

-- | A queue with this name already exists. Amazon SQS returns this error
--   only if the request includes attributes whose values differ from those
--   of the existing queue.
_QueueNameExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The batch request doesn't contain any entries.
_EmptyBatchRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | Error code 400. Unsupported operation.
_UnsupportedOperation :: AsError a => Getting (First ServiceError) a ServiceError

-- | The message contains characters outside the allowed set.
_InvalidMessageContents :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified receipt handle isn't valid.
_ReceiptHandleIsInvalid :: AsError a => Getting (First ServiceError) a ServiceError

-- | You must wait 60 seconds after deleting a queue before you can create
--   another queue with the same name.
_QueueDeletedRecently :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified attribute doesn't exist.
_InvalidAttributeName :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>Id</tt> of a batch entry in a batch request doesn't abide by
--   the specification.
_InvalidBatchEntryId :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two or more batch entries in the request have the same <tt>Id</tt>.
_BatchEntryIdsNotDistinct :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified message isn't in flight.
_MessageNotInflight :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the specified queue previously received a
--   <tt>PurgeQueue</tt> request within the last 60 seconds (the time it
--   can take to delete the messages in the queue).
_PurgeQueueInProgress :: AsError a => Getting (First ServiceError) a ServiceError

-- | The length of all the messages put together is more than the limit.
_BatchRequestTooLong :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action violates a limit. For example,
--   <tt>ReceiveMessage</tt> returns this error if the maximum number of
--   inflight messages is reached and <tt>AddPermission</tt> returns this
--   error if the maximum number of permissions for the queue is reached.
_OverLimit :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified queue doesn't exist.
_QueueDoesNotExist :: AsError a => Getting (First ServiceError) a ServiceError
newtype MessageAttribute
MessageAttribute' :: Text -> MessageAttribute
[fromMessageAttribute] :: MessageAttribute -> Text
pattern MessageAttribute_All :: MessageAttribute
pattern MessageAttribute_ApproximateFirstReceiveTimestamp :: MessageAttribute
pattern MessageAttribute_ApproximateReceiveCount :: MessageAttribute
pattern MessageAttribute_SenderId :: MessageAttribute
pattern MessageAttribute_SentTimestamp :: MessageAttribute
newtype MessageSystemAttributeNameForSends
MessageSystemAttributeNameForSends' :: Text -> MessageSystemAttributeNameForSends
[fromMessageSystemAttributeNameForSends] :: MessageSystemAttributeNameForSends -> Text
pattern MessageSystemAttributeNameForSends_AWSTraceHeader :: MessageSystemAttributeNameForSends
newtype QueueAttributeName
QueueAttributeName' :: Text -> QueueAttributeName
[fromQueueAttributeName] :: QueueAttributeName -> Text
pattern QueueAttributeName_All :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessages :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessagesDelayed :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessagesNotVisible :: QueueAttributeName
pattern QueueAttributeName_ContentBasedDeduplication :: QueueAttributeName
pattern QueueAttributeName_CreatedTimestamp :: QueueAttributeName
pattern QueueAttributeName_DeduplicationScope :: QueueAttributeName
pattern QueueAttributeName_DelaySeconds :: QueueAttributeName
pattern QueueAttributeName_FifoQueue :: QueueAttributeName
pattern QueueAttributeName_FifoThroughputLimit :: QueueAttributeName
pattern QueueAttributeName_KmsDataKeyReusePeriodSeconds :: QueueAttributeName
pattern QueueAttributeName_KmsMasterKeyId :: QueueAttributeName
pattern QueueAttributeName_LastModifiedTimestamp :: QueueAttributeName
pattern QueueAttributeName_MaximumMessageSize :: QueueAttributeName
pattern QueueAttributeName_MessageRetentionPeriod :: QueueAttributeName
pattern QueueAttributeName_Policy :: QueueAttributeName
pattern QueueAttributeName_QueueArn :: QueueAttributeName
pattern QueueAttributeName_ReceiveMessageWaitTimeSeconds :: QueueAttributeName
pattern QueueAttributeName_RedriveAllowPolicy :: QueueAttributeName
pattern QueueAttributeName_RedrivePolicy :: QueueAttributeName
pattern QueueAttributeName_VisibilityTimeout :: QueueAttributeName

-- | Gives a detailed description of the result of an action on each entry
--   in the request.
--   
--   <i>See:</i> <a>newBatchResultErrorEntry</a> smart constructor.
data BatchResultErrorEntry
BatchResultErrorEntry' :: Maybe Text -> Text -> Bool -> Text -> BatchResultErrorEntry

-- | A message explaining why the action failed on this entry.
[$sel:message:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Maybe Text

-- | The <tt>Id</tt> of an entry in a batch request.
[$sel:id:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Text

-- | Specifies whether the error happened due to the caller of the batch
--   API action.
[$sel:senderFault:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Bool

-- | An error code representing why the action failed on this entry.
[$sel:code:BatchResultErrorEntry'] :: BatchResultErrorEntry -> Text

-- | Create a value of <a>BatchResultErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_message</a> - A message explaining why the
--   action failed on this entry.
--   
--   <a>$sel:id:BatchResultErrorEntry'</a>, <a>batchResultErrorEntry_id</a>
--   - The <tt>Id</tt> of an entry in a batch request.
--   
--   <a>$sel:senderFault:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_senderFault</a> - Specifies whether the error
--   happened due to the caller of the batch API action.
--   
--   <a>$sel:code:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_code</a> - An error code representing why the
--   action failed on this entry.
newBatchResultErrorEntry :: Text -> Bool -> Text -> BatchResultErrorEntry

-- | A message explaining why the action failed on this entry.
batchResultErrorEntry_message :: Lens' BatchResultErrorEntry (Maybe Text)

-- | The <tt>Id</tt> of an entry in a batch request.
batchResultErrorEntry_id :: Lens' BatchResultErrorEntry Text

-- | Specifies whether the error happened due to the caller of the batch
--   API action.
batchResultErrorEntry_senderFault :: Lens' BatchResultErrorEntry Bool

-- | An error code representing why the action failed on this entry.
batchResultErrorEntry_code :: Lens' BatchResultErrorEntry Text

-- | Encloses a receipt handle and an entry id for each message in <tt>
--   ChangeMessageVisibilityBatch.</tt>
--   
--   All of the following list parameters must be prefixed with
--   <tt>ChangeMessageVisibilityBatchRequestEntry.n</tt>, where <tt>n</tt>
--   is an integer value starting with <tt>1</tt>. For example, a parameter
--   list for this action might look like this:
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.Id=change_visibility_msg_2
--   </pre>
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle=your_receipt_handle
--   </pre>
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout=45
--   </pre>
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchRequestEntry</a> smart
--   constructor.
data ChangeMessageVisibilityBatchRequestEntry
ChangeMessageVisibilityBatchRequestEntry' :: Maybe Int -> Text -> Text -> ChangeMessageVisibilityBatchRequestEntry

-- | The new value (in seconds) for the message's visibility timeout.
[$sel:visibilityTimeout:ChangeMessageVisibilityBatchRequestEntry'] :: ChangeMessageVisibilityBatchRequestEntry -> Maybe Int

-- | An identifier for this particular receipt handle used to communicate
--   the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
[$sel:id:ChangeMessageVisibilityBatchRequestEntry'] :: ChangeMessageVisibilityBatchRequestEntry -> Text

-- | A receipt handle.
[$sel:receiptHandle:ChangeMessageVisibilityBatchRequestEntry'] :: ChangeMessageVisibilityBatchRequestEntry -> Text

-- | Create a value of <a>ChangeMessageVisibilityBatchRequestEntry</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:visibilityTimeout:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_visibilityTimeout</a> -
--   The new value (in seconds) for the message's visibility timeout.
--   
--   <a>$sel:id:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_id</a> - An identifier for
--   this particular receipt handle used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:receiptHandle:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_receiptHandle</a> - A
--   receipt handle.
newChangeMessageVisibilityBatchRequestEntry :: Text -> Text -> ChangeMessageVisibilityBatchRequestEntry

-- | The new value (in seconds) for the message's visibility timeout.
changeMessageVisibilityBatchRequestEntry_visibilityTimeout :: Lens' ChangeMessageVisibilityBatchRequestEntry (Maybe Int)

-- | An identifier for this particular receipt handle used to communicate
--   the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
changeMessageVisibilityBatchRequestEntry_id :: Lens' ChangeMessageVisibilityBatchRequestEntry Text

-- | A receipt handle.
changeMessageVisibilityBatchRequestEntry_receiptHandle :: Lens' ChangeMessageVisibilityBatchRequestEntry Text

-- | Encloses the <tt>Id</tt> of an entry in <tt>
--   ChangeMessageVisibilityBatch.</tt>
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchResultEntry</a> smart
--   constructor.
data ChangeMessageVisibilityBatchResultEntry
ChangeMessageVisibilityBatchResultEntry' :: Text -> ChangeMessageVisibilityBatchResultEntry

-- | Represents a message whose visibility timeout has been changed
--   successfully.
[$sel:id:ChangeMessageVisibilityBatchResultEntry'] :: ChangeMessageVisibilityBatchResultEntry -> Text

-- | Create a value of <a>ChangeMessageVisibilityBatchResultEntry</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ChangeMessageVisibilityBatchResultEntry'</a>,
--   <a>changeMessageVisibilityBatchResultEntry_id</a> - Represents a
--   message whose visibility timeout has been changed successfully.
newChangeMessageVisibilityBatchResultEntry :: Text -> ChangeMessageVisibilityBatchResultEntry

-- | Represents a message whose visibility timeout has been changed
--   successfully.
changeMessageVisibilityBatchResultEntry_id :: Lens' ChangeMessageVisibilityBatchResultEntry Text

-- | Encloses a receipt handle and an identifier for it.
--   
--   <i>See:</i> <a>newDeleteMessageBatchRequestEntry</a> smart
--   constructor.
data DeleteMessageBatchRequestEntry
DeleteMessageBatchRequestEntry' :: Text -> Text -> DeleteMessageBatchRequestEntry

-- | An identifier for this particular receipt handle. This is used to
--   communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
[$sel:id:DeleteMessageBatchRequestEntry'] :: DeleteMessageBatchRequestEntry -> Text

-- | A receipt handle.
[$sel:receiptHandle:DeleteMessageBatchRequestEntry'] :: DeleteMessageBatchRequestEntry -> Text

-- | Create a value of <a>DeleteMessageBatchRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteMessageBatchRequestEntry'</a>,
--   <a>deleteMessageBatchRequestEntry_id</a> - An identifier for this
--   particular receipt handle. This is used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:receiptHandle:DeleteMessageBatchRequestEntry'</a>,
--   <a>deleteMessageBatchRequestEntry_receiptHandle</a> - A receipt
--   handle.
newDeleteMessageBatchRequestEntry :: Text -> Text -> DeleteMessageBatchRequestEntry

-- | An identifier for this particular receipt handle. This is used to
--   communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
deleteMessageBatchRequestEntry_id :: Lens' DeleteMessageBatchRequestEntry Text

-- | A receipt handle.
deleteMessageBatchRequestEntry_receiptHandle :: Lens' DeleteMessageBatchRequestEntry Text

-- | Encloses the <tt>Id</tt> of an entry in <tt> DeleteMessageBatch.</tt>
--   
--   <i>See:</i> <a>newDeleteMessageBatchResultEntry</a> smart constructor.
data DeleteMessageBatchResultEntry
DeleteMessageBatchResultEntry' :: Text -> DeleteMessageBatchResultEntry

-- | Represents a successfully deleted message.
[$sel:id:DeleteMessageBatchResultEntry'] :: DeleteMessageBatchResultEntry -> Text

-- | Create a value of <a>DeleteMessageBatchResultEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteMessageBatchResultEntry'</a>,
--   <a>deleteMessageBatchResultEntry_id</a> - Represents a successfully
--   deleted message.
newDeleteMessageBatchResultEntry :: Text -> DeleteMessageBatchResultEntry

-- | Represents a successfully deleted message.
deleteMessageBatchResultEntry_id :: Lens' DeleteMessageBatchResultEntry Text

-- | An Amazon SQS message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe Text -> Maybe Text -> Maybe (HashMap MessageAttribute Text) -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe Text -> Maybe Text -> Message

-- | The message's contents (not URL-encoded).
[$sel:body:Message'] :: Message -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message body string.
[$sel:mD5OfBody:Message'] :: Message -> Maybe Text

-- | A map of the attributes requested in <tt> ReceiveMessage </tt> to
--   their respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
[$sel:attributes:Message'] :: Message -> Maybe (HashMap MessageAttribute Text)

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:messageAttributes:Message'] :: Message -> Maybe (HashMap Text MessageAttributeValue)

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageAttributes:Message'] :: Message -> Maybe Text

-- | An identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
[$sel:receiptHandle:Message'] :: Message -> Maybe Text

-- | A unique identifier for the message. A <tt>MessageId</tt>is considered
--   unique across all accounts for an extended period of time.
[$sel:messageId:Message'] :: Message -> Maybe Text

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:Message'</a>, <a>message_body</a> - The message's
--   contents (not URL-encoded).
--   
--   <a>$sel:mD5OfBody:Message'</a>, <a>message_mD5OfBody</a> - An MD5
--   digest of the non-URL-encoded message body string.
--   
--   <a>$sel:attributes:Message'</a>, <a>message_attributes</a> - A map of
--   the attributes requested in <tt> ReceiveMessage </tt> to their
--   respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
--   
--   <a>$sel:messageAttributes:Message'</a>,
--   <a>message_messageAttributes</a> - Each message attribute consists of
--   a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>. For more
--   information, see <a>Amazon SQS message attributes</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   <a>$sel:mD5OfMessageAttributes:Message'</a>,
--   <a>message_mD5OfMessageAttributes</a> - An MD5 digest of the
--   non-URL-encoded message attribute string. You can use this attribute
--   to verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:receiptHandle:Message'</a>, <a>message_receiptHandle</a> - An
--   identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - A unique
--   identifier for the message. A <tt>MessageId</tt>is considered unique
--   across all accounts for an extended period of time.
newMessage :: Message

-- | The message's contents (not URL-encoded).
message_body :: Lens' Message (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string.
message_mD5OfBody :: Lens' Message (Maybe Text)

-- | A map of the attributes requested in <tt> ReceiveMessage </tt> to
--   their respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
message_attributes :: Lens' Message (Maybe (HashMap MessageAttribute Text))

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
message_messageAttributes :: Lens' Message (Maybe (HashMap Text MessageAttributeValue))

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
message_mD5OfMessageAttributes :: Lens' Message (Maybe Text)

-- | An identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
message_receiptHandle :: Lens' Message (Maybe Text)

-- | A unique identifier for the message. A <tt>MessageId</tt>is considered
--   unique across all accounts for an extended period of time.
message_messageId :: Lens' Message (Maybe Text)

-- | The user-specified message attribute value. For string data types, the
--   <tt>Value</tt> attribute has the same restrictions on the content as
--   the message body. For more information, see <tt> SendMessage.</tt>
--   
--   <tt>Name</tt>, <tt>type</tt>, <tt>value</tt> and the message body must
--   not be empty or null. All parts of the message attribute, including
--   <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>, are part of the
--   message size restriction (256 KB or 262,144 bytes).
--   
--   <i>See:</i> <a>newMessageAttributeValue</a> smart constructor.
data MessageAttributeValue
MessageAttributeValue' :: Maybe [Text] -> Maybe Text -> Maybe [Base64] -> Maybe Base64 -> Text -> MessageAttributeValue

-- | Not implemented. Reserved for future use.
[$sel:stringListValues:MessageAttributeValue'] :: MessageAttributeValue -> Maybe [Text]

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
[$sel:stringValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Text

-- | Not implemented. Reserved for future use.
[$sel:binaryListValues:MessageAttributeValue'] :: MessageAttributeValue -> Maybe [Base64]

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.
[$sel:binaryValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Base64

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:dataType:MessageAttributeValue'] :: MessageAttributeValue -> Text

-- | Create a value of <a>MessageAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringListValues:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:stringValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringValue</a> - Strings are Unicode with
--   UTF-8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryListValues:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:binaryValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryValue</a> - Binary type attributes can
--   store any binary data, such as compressed data, encrypted data, or
--   images.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and
--   decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:dataType:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_dataType</a> - Amazon SQS supports the
--   following logical data types: <tt>String</tt>, <tt>Number</tt>, and
--   <tt>Binary</tt>. For the <tt>Number</tt> data type, you must use
--   <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
newMessageAttributeValue :: Text -> MessageAttributeValue

-- | Not implemented. Reserved for future use.
messageAttributeValue_stringListValues :: Lens' MessageAttributeValue (Maybe [Text])

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageAttributeValue_stringValue :: Lens' MessageAttributeValue (Maybe Text)

-- | Not implemented. Reserved for future use.
messageAttributeValue_binaryListValues :: Lens' MessageAttributeValue (Maybe [ByteString])

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageAttributeValue_binaryValue :: Lens' MessageAttributeValue (Maybe ByteString)

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
messageAttributeValue_dataType :: Lens' MessageAttributeValue Text

-- | The user-specified message system attribute value. For string data
--   types, the <tt>Value</tt> attribute has the same restrictions on the
--   content as the message body. For more information, see <tt>
--   SendMessage.</tt>
--   
--   <tt>Name</tt>, <tt>type</tt>, <tt>value</tt> and the message body must
--   not be empty or null.
--   
--   <i>See:</i> <a>newMessageSystemAttributeValue</a> smart constructor.
data MessageSystemAttributeValue
MessageSystemAttributeValue' :: Maybe [Text] -> Maybe Text -> Maybe [Base64] -> Maybe Base64 -> Text -> MessageSystemAttributeValue

-- | Not implemented. Reserved for future use.
[$sel:stringListValues:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe [Text]

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
[$sel:stringValue:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe Text

-- | Not implemented. Reserved for future use.
[$sel:binaryListValues:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe [Base64]

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.
[$sel:binaryValue:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Maybe Base64

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:dataType:MessageSystemAttributeValue'] :: MessageSystemAttributeValue -> Text

-- | Create a value of <a>MessageSystemAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringListValues:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_stringListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:stringValue:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_stringValue</a> - Strings are Unicode
--   with UTF-8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryListValues:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_binaryListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:binaryValue:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_binaryValue</a> - Binary type
--   attributes can store any binary data, such as compressed data,
--   encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:dataType:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_dataType</a> - Amazon SQS supports the
--   following logical data types: <tt>String</tt>, <tt>Number</tt>, and
--   <tt>Binary</tt>. For the <tt>Number</tt> data type, you must use
--   <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
newMessageSystemAttributeValue :: Text -> MessageSystemAttributeValue

-- | Not implemented. Reserved for future use.
messageSystemAttributeValue_stringListValues :: Lens' MessageSystemAttributeValue (Maybe [Text])

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageSystemAttributeValue_stringValue :: Lens' MessageSystemAttributeValue (Maybe Text)

-- | Not implemented. Reserved for future use.
messageSystemAttributeValue_binaryListValues :: Lens' MessageSystemAttributeValue (Maybe [ByteString])

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageSystemAttributeValue_binaryValue :: Lens' MessageSystemAttributeValue (Maybe ByteString)

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
messageSystemAttributeValue_dataType :: Lens' MessageSystemAttributeValue Text

-- | Contains the details of a single Amazon SQS message along with an
--   <tt>Id</tt>.
--   
--   <i>See:</i> <a>newSendMessageBatchRequestEntry</a> smart constructor.
data SendMessageBatchRequestEntry
SendMessageBatchRequestEntry' :: Maybe Text -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue) -> Maybe Int -> Text -> Text -> SendMessageBatchRequestEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
[$sel:messageDeduplicationId:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe Text

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:messageAttributes:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe (HashMap Text MessageAttributeValue)

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
[$sel:messageGroupId:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe Text

-- | The message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
[$sel:messageSystemAttributes:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue)

-- | The length of time, in seconds, for which a specific message is
--   delayed. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a
--   positive <tt>DelaySeconds</tt> value become available for processing
--   after the delay period is finished. If you don't specify a value, the
--   default value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
[$sel:delaySeconds:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Maybe Int

-- | An identifier for a message in this batch used to communicate the
--   result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
[$sel:id:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Text

-- | The body of the message.
[$sel:messageBody:SendMessageBatchRequestEntry'] :: SendMessageBatchRequestEntry -> Text

-- | Create a value of <a>SendMessageBatchRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageDeduplicationId:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageDeduplicationId</a> - This
--   parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   <a>$sel:messageAttributes:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageAttributes</a> - Each message
--   attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:messageGroupId:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageGroupId</a> - This parameter
--   applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
--   
--   <a>$sel:messageSystemAttributes:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageSystemAttributes</a> - The
--   message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
--   
--   <a>$sel:delaySeconds:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_delaySeconds</a> - The length of time,
--   in seconds, for which a specific message is delayed. Valid values: 0
--   to 900. Maximum: 15 minutes. Messages with a positive
--   <tt>DelaySeconds</tt> value become available for processing after the
--   delay period is finished. If you don't specify a value, the default
--   value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
--   
--   <a>$sel:id:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_id</a> - An identifier for a message
--   in this batch used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:messageBody:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageBody</a> - The body of the
--   message.
newSendMessageBatchRequestEntry :: Text -> Text -> SendMessageBatchRequestEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
sendMessageBatchRequestEntry_messageDeduplicationId :: Lens' SendMessageBatchRequestEntry (Maybe Text)

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
sendMessageBatchRequestEntry_messageAttributes :: Lens' SendMessageBatchRequestEntry (Maybe (HashMap Text MessageAttributeValue))

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
sendMessageBatchRequestEntry_messageGroupId :: Lens' SendMessageBatchRequestEntry (Maybe Text)

-- | The message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
sendMessageBatchRequestEntry_messageSystemAttributes :: Lens' SendMessageBatchRequestEntry (Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue))

-- | The length of time, in seconds, for which a specific message is
--   delayed. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a
--   positive <tt>DelaySeconds</tt> value become available for processing
--   after the delay period is finished. If you don't specify a value, the
--   default value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
sendMessageBatchRequestEntry_delaySeconds :: Lens' SendMessageBatchRequestEntry (Maybe Int)

-- | An identifier for a message in this batch used to communicate the
--   result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
sendMessageBatchRequestEntry_id :: Lens' SendMessageBatchRequestEntry Text

-- | The body of the message.
sendMessageBatchRequestEntry_messageBody :: Lens' SendMessageBatchRequestEntry Text

-- | Encloses a <tt>MessageId</tt> for a successfully-enqueued message in a
--   <tt> SendMessageBatch.</tt>
--   
--   <i>See:</i> <a>newSendMessageBatchResultEntry</a> smart constructor.
data SendMessageBatchResultEntry
SendMessageBatchResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> SendMessageBatchResultEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
[$sel:sequenceNumber:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageSystemAttributes:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageAttributes:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Maybe Text

-- | An identifier for the message in this batch.
[$sel:id:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Text

-- | An identifier for the message.
[$sel:messageId:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Text

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageBody:SendMessageBatchResultEntry'] :: SendMessageBatchResultEntry -> Text

-- | Create a value of <a>SendMessageBatchResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceNumber:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_sequenceNumber</a> - This parameter
--   applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
--   
--   <a>$sel:mD5OfMessageSystemAttributes:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageSystemAttributes</a> - An
--   MD5 digest of the non-URL-encoded message system attribute string. You
--   can use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:mD5OfMessageAttributes:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageAttributes</a> - An MD5
--   digest of the non-URL-encoded message attribute string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:id:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_id</a> - An identifier for the message
--   in this batch.
--   
--   <a>$sel:messageId:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_messageId</a> - An identifier for the
--   message.
--   
--   <a>$sel:mD5OfMessageBody:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageBody</a> - An MD5 digest of
--   the non-URL-encoded message body string. You can use this attribute to
--   verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
newSendMessageBatchResultEntry :: Text -> Text -> Text -> SendMessageBatchResultEntry

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
sendMessageBatchResultEntry_sequenceNumber :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageSystemAttributes :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageAttributes :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An identifier for the message in this batch.
sendMessageBatchResultEntry_id :: Lens' SendMessageBatchResultEntry Text

-- | An identifier for the message.
sendMessageBatchResultEntry_messageId :: Lens' SendMessageBatchResultEntry Text

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageBody :: Lens' SendMessageBatchResultEntry Text


-- | Add cost allocation tags to the specified Amazon SQS queue. For an
--   overview, see <a>Tagging Your Amazon SQS Queues</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   When you use queue tags, keep the following guidelines in mind:
--   
--   <ul>
--   <li>Adding more than 50 tags to a queue isn't recommended.</li>
--   <li>Tags don't have any semantic meaning. Amazon SQS interprets tags
--   as character strings.</li>
--   <li>Tags are case-sensitive.</li>
--   <li>A new tag with a key identical to that of an existing tag
--   overwrites the existing tag.</li>
--   </ul>
--   
--   For a full list of tag restrictions, see <a>Quotas related to
--   queues</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
module Network.AWS.SQS.TagQueue

-- | <i>See:</i> <a>newTagQueue</a> smart constructor.
data TagQueue
TagQueue' :: Text -> HashMap Text Text -> TagQueue

-- | The URL of the queue.
[$sel:queueUrl:TagQueue'] :: TagQueue -> Text

-- | The list of tags to be added to the specified queue.
[$sel:tags:TagQueue'] :: TagQueue -> HashMap Text Text

-- | Create a value of <a>TagQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:TagQueue'</a>, <a>tagQueue_queueUrl</a> - The URL of
--   the queue.
--   
--   <a>$sel:tags:TagQueue'</a>, <a>tagQueue_tags</a> - The list of tags to
--   be added to the specified queue.
newTagQueue :: Text -> TagQueue

-- | The URL of the queue.
tagQueue_queueUrl :: Lens' TagQueue Text

-- | The list of tags to be added to the specified queue.
tagQueue_tags :: Lens' TagQueue (HashMap Text Text)

-- | <i>See:</i> <a>newTagQueueResponse</a> smart constructor.
data TagQueueResponse
TagQueueResponse' :: TagQueueResponse

-- | Create a value of <a>TagQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagQueueResponse :: TagQueueResponse
instance GHC.Generics.Generic Network.AWS.SQS.TagQueue.TagQueue
instance GHC.Show.Show Network.AWS.SQS.TagQueue.TagQueue
instance GHC.Read.Read Network.AWS.SQS.TagQueue.TagQueue
instance GHC.Classes.Eq Network.AWS.SQS.TagQueue.TagQueue
instance GHC.Generics.Generic Network.AWS.SQS.TagQueue.TagQueueResponse
instance GHC.Show.Show Network.AWS.SQS.TagQueue.TagQueueResponse
instance GHC.Read.Read Network.AWS.SQS.TagQueue.TagQueueResponse
instance GHC.Classes.Eq Network.AWS.SQS.TagQueue.TagQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.TagQueue.TagQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.TagQueue.TagQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.TagQueue.TagQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.TagQueue.TagQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.TagQueue.TagQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.TagQueue.TagQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.TagQueue.TagQueue


-- | Sets the value of one or more queue attributes. When you change a
--   queue's attributes, the change can take up to 60 seconds for most of
--   the attributes to propagate throughout the Amazon SQS system. Changes
--   made to the <tt>MessageRetentionPeriod</tt> attribute can take up to
--   15 minutes.
--   
--   <ul>
--   <li>In the future, new attributes might be added. If you write code
--   that calls this action, we recommend that you structure your code so
--   that it can handle new attributes gracefully.</li>
--   <li>Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.</li>
--   <li>To remove the ability to change queue permissions, you must deny
--   permission to the <tt>AddPermission</tt>, <tt>RemovePermission</tt>,
--   and <tt>SetQueueAttributes</tt> actions in your IAM policy.</li>
--   </ul>
module Network.AWS.SQS.SetQueueAttributes

-- | <i>See:</i> <a>newSetQueueAttributes</a> smart constructor.
data SetQueueAttributes
SetQueueAttributes' :: Text -> HashMap QueueAttributeName Text -> SetQueueAttributes

-- | The URL of the Amazon SQS queue whose attributes are set.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:SetQueueAttributes'] :: SetQueueAttributes -> Text

-- | A map of attributes to set.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetQueueAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB).
--   Default: 262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer
--   representing seconds, from 60 (1 minute) to 1,209,600 (14 days).
--   Default: 345,600 (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Identity and Access
--   Management User Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the AWS-managed
--   CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>, the alias of a
--   custom CMK can, for example, be <tt>alias/MyAlias </tt>. For more
--   examples, see <a>KeyId</a> in the <i>Key Management Service API
--   Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>. Note the
--   following:<ul><li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>.<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:attributes:SetQueueAttributes'] :: SetQueueAttributes -> HashMap QueueAttributeName Text

-- | Create a value of <a>SetQueueAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:SetQueueAttributes'</a>,
--   <a>setQueueAttributes_queueUrl</a> - The URL of the Amazon SQS queue
--   whose attributes are set.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:attributes:SetQueueAttributes'</a>,
--   <a>setQueueAttributes_attributes</a> - A map of attributes to set.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetQueueAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB).
--   Default: 262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer
--   representing seconds, from 60 (1 minute) to 1,209,600 (14 days).
--   Default: 345,600 (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Identity and Access
--   Management User Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the AWS-managed
--   CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>, the alias of a
--   custom CMK can, for example, be <tt>alias/MyAlias </tt>. For more
--   examples, see <a>KeyId</a> in the <i>Key Management Service API
--   Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>. Note the
--   following:<ul><li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>.<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
newSetQueueAttributes :: Text -> SetQueueAttributes

-- | The URL of the Amazon SQS queue whose attributes are set.
--   
--   Queue URLs and names are case-sensitive.
setQueueAttributes_queueUrl :: Lens' SetQueueAttributes Text

-- | A map of attributes to set.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetQueueAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB).
--   Default: 262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer
--   representing seconds, from 60 (1 minute) to 1,209,600 (14 days).
--   Default: 345,600 (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Identity and Access
--   Management User Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the AWS-managed
--   CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>, the alias of a
--   custom CMK can, for example, be <tt>alias/MyAlias </tt>. For more
--   examples, see <a>KeyId</a> in the <i>Key Management Service API
--   Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>. Note the
--   following:<ul><li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>.<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
setQueueAttributes_attributes :: Lens' SetQueueAttributes (HashMap QueueAttributeName Text)

-- | <i>See:</i> <a>newSetQueueAttributesResponse</a> smart constructor.
data SetQueueAttributesResponse
SetQueueAttributesResponse' :: SetQueueAttributesResponse

-- | Create a value of <a>SetQueueAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetQueueAttributesResponse :: SetQueueAttributesResponse
instance GHC.Generics.Generic Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance GHC.Show.Show Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance GHC.Read.Read Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance GHC.Classes.Eq Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance GHC.Generics.Generic Network.AWS.SQS.SetQueueAttributes.SetQueueAttributesResponse
instance GHC.Show.Show Network.AWS.SQS.SetQueueAttributes.SetQueueAttributesResponse
instance GHC.Read.Read Network.AWS.SQS.SetQueueAttributes.SetQueueAttributesResponse
instance GHC.Classes.Eq Network.AWS.SQS.SetQueueAttributes.SetQueueAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance Control.DeepSeq.NFData Network.AWS.SQS.SetQueueAttributes.SetQueueAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance Control.DeepSeq.NFData Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.SetQueueAttributes.SetQueueAttributes


-- | Delivers up to ten messages to the specified queue. This is a batch
--   version of <tt> SendMessage.</tt> For a FIFO queue, multiple messages
--   within a single batch are enqueued in the order they are sent.
--   
--   The result of sending each message is reported individually in the
--   response. Because the batch request can result in a combination of
--   successful and unsuccessful actions, you should check for batch errors
--   even when the call returns an HTTP status code of <tt>200</tt>.
--   
--   The maximum allowed individual message size and the maximum total
--   payload size (the sum of the individual lengths of all of the batched
--   messages) are both 256 KB (262,144 bytes).
--   
--   A message can include only XML, JSON, and unformatted text. The
--   following Unicode characters are allowed:
--   
--   <tt>#x9</tt> | <tt>#xA</tt> | <tt>#xD</tt> | <tt>#x20</tt> to
--   <tt>#xD7FF</tt> | <tt>#xE000</tt> to <tt>#xFFFD</tt> |
--   <tt>#x10000</tt> to <tt>#x10FFFF</tt>
--   
--   Any characters not included in this list will be rejected. For more
--   information, see the <a>W3C specification for characters</a>.
--   
--   If you don't specify the <tt>DelaySeconds</tt> parameter for an entry,
--   Amazon SQS uses the default value for the queue.
--   
--   Some actions take lists of parameters. These lists are specified using
--   the <tt>param.n</tt> notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this:
--   
--   <pre>
--   &amp;AttributeName.1=first
--   </pre>
--   
--   <pre>
--   &amp;AttributeName.2=second
--   </pre>
module Network.AWS.SQS.SendMessageBatch

-- | <i>See:</i> <a>newSendMessageBatch</a> smart constructor.
data SendMessageBatch
SendMessageBatch' :: Text -> [SendMessageBatchRequestEntry] -> SendMessageBatch

-- | The URL of the Amazon SQS queue to which batched messages are sent.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:SendMessageBatch'] :: SendMessageBatch -> Text

-- | A list of <tt> SendMessageBatchRequestEntry </tt> items.
[$sel:entries:SendMessageBatch'] :: SendMessageBatch -> [SendMessageBatchRequestEntry]

-- | Create a value of <a>SendMessageBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:SendMessageBatch'</a>,
--   <a>sendMessageBatch_queueUrl</a> - The URL of the Amazon SQS queue to
--   which batched messages are sent.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:entries:SendMessageBatch'</a>, <a>sendMessageBatch_entries</a>
--   - A list of <tt> SendMessageBatchRequestEntry </tt> items.
newSendMessageBatch :: Text -> SendMessageBatch

-- | The URL of the Amazon SQS queue to which batched messages are sent.
--   
--   Queue URLs and names are case-sensitive.
sendMessageBatch_queueUrl :: Lens' SendMessageBatch Text

-- | A list of <tt> SendMessageBatchRequestEntry </tt> items.
sendMessageBatch_entries :: Lens' SendMessageBatch [SendMessageBatchRequestEntry]

-- | For each message in the batch, the response contains a <tt>
--   SendMessageBatchResultEntry </tt> tag if the message succeeds or a
--   <tt> BatchResultErrorEntry </tt> tag if the message fails.
--   
--   <i>See:</i> <a>newSendMessageBatchResponse</a> smart constructor.
data SendMessageBatchResponse
SendMessageBatchResponse' :: Int -> [SendMessageBatchResultEntry] -> [BatchResultErrorEntry] -> SendMessageBatchResponse

-- | The response's http status code.
[$sel:httpStatus:SendMessageBatchResponse'] :: SendMessageBatchResponse -> Int

-- | A list of <tt> SendMessageBatchResultEntry </tt> items.
[$sel:successful:SendMessageBatchResponse'] :: SendMessageBatchResponse -> [SendMessageBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items with error details
--   about each message that can't be enqueued.
[$sel:failed:SendMessageBatchResponse'] :: SendMessageBatchResponse -> [BatchResultErrorEntry]

-- | Create a value of <a>SendMessageBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendMessageBatchResponse'</a>,
--   <a>sendMessageBatchResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:successful:SendMessageBatchResponse'</a>,
--   <a>sendMessageBatchResponse_successful</a> - A list of <tt>
--   SendMessageBatchResultEntry </tt> items.
--   
--   <a>$sel:failed:SendMessageBatchResponse'</a>,
--   <a>sendMessageBatchResponse_failed</a> - A list of <tt>
--   BatchResultErrorEntry </tt> items with error details about each
--   message that can't be enqueued.
newSendMessageBatchResponse :: Int -> SendMessageBatchResponse

-- | The response's http status code.
sendMessageBatchResponse_httpStatus :: Lens' SendMessageBatchResponse Int

-- | A list of <tt> SendMessageBatchResultEntry </tt> items.
sendMessageBatchResponse_successful :: Lens' SendMessageBatchResponse [SendMessageBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items with error details
--   about each message that can't be enqueued.
sendMessageBatchResponse_failed :: Lens' SendMessageBatchResponse [BatchResultErrorEntry]
instance GHC.Generics.Generic Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance GHC.Show.Show Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance GHC.Read.Read Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance GHC.Classes.Eq Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance GHC.Generics.Generic Network.AWS.SQS.SendMessageBatch.SendMessageBatchResponse
instance GHC.Show.Show Network.AWS.SQS.SendMessageBatch.SendMessageBatchResponse
instance GHC.Read.Read Network.AWS.SQS.SendMessageBatch.SendMessageBatchResponse
instance GHC.Classes.Eq Network.AWS.SQS.SendMessageBatch.SendMessageBatchResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance Control.DeepSeq.NFData Network.AWS.SQS.SendMessageBatch.SendMessageBatchResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance Control.DeepSeq.NFData Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.SendMessageBatch.SendMessageBatch
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.SendMessageBatch.SendMessageBatch


-- | Delivers a message to the specified queue.
--   
--   A message can include only XML, JSON, and unformatted text. The
--   following Unicode characters are allowed:
--   
--   <tt>#x9</tt> | <tt>#xA</tt> | <tt>#xD</tt> | <tt>#x20</tt> to
--   <tt>#xD7FF</tt> | <tt>#xE000</tt> to <tt>#xFFFD</tt> |
--   <tt>#x10000</tt> to <tt>#x10FFFF</tt>
--   
--   Any characters not included in this list will be rejected. For more
--   information, see the <a>W3C specification for characters</a>.
module Network.AWS.SQS.SendMessage

-- | <i>See:</i> <a>newSendMessage</a> smart constructor.
data SendMessage
SendMessage' :: Maybe Text -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue) -> Maybe Int -> Text -> Text -> SendMessage

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of sent messages. If a message with a
--   particular <tt>MessageDeduplicationId</tt> is sent successfully, any
--   messages sent with the same <tt>MessageDeduplicationId</tt> are
--   accepted successfully but aren't delivered during the 5-minute
--   deduplication interval. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The maximum length of <tt>MessageDeduplicationId</tt> is 128
--   characters. <tt>MessageDeduplicationId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
[$sel:messageDeduplicationId:SendMessage'] :: SendMessage -> Maybe Text

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:messageAttributes:SendMessage'] :: SendMessage -> Maybe (HashMap Text MessageAttributeValue)

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
[$sel:messageGroupId:SendMessage'] :: SendMessage -> Maybe Text

-- | The message system attribute to send. Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
[$sel:messageSystemAttributes:SendMessage'] :: SendMessage -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue)

-- | The length of time, in seconds, for which to delay a specific message.
--   Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive
--   <tt>DelaySeconds</tt> value become available for processing after the
--   delay period is finished. If you don't specify a value, the default
--   value for the queue applies.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
[$sel:delaySeconds:SendMessage'] :: SendMessage -> Maybe Int

-- | The URL of the Amazon SQS queue to which a message is sent.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:SendMessage'] :: SendMessage -> Text

-- | The message to send. The minimum size is one character. The maximum
--   size is 256 KB.
--   
--   A message can include only XML, JSON, and unformatted text. The
--   following Unicode characters are allowed:
--   
--   <tt>#x9</tt> | <tt>#xA</tt> | <tt>#xD</tt> | <tt>#x20</tt> to
--   <tt>#xD7FF</tt> | <tt>#xE000</tt> to <tt>#xFFFD</tt> |
--   <tt>#x10000</tt> to <tt>#x10FFFF</tt>
--   
--   Any characters not included in this list will be rejected. For more
--   information, see the <a>W3C specification for characters</a>.
[$sel:messageBody:SendMessage'] :: SendMessage -> Text

-- | Create a value of <a>SendMessage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageDeduplicationId:SendMessage'</a>,
--   <a>sendMessage_messageDeduplicationId</a> - This parameter applies
--   only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of sent messages. If a message with a
--   particular <tt>MessageDeduplicationId</tt> is sent successfully, any
--   messages sent with the same <tt>MessageDeduplicationId</tt> are
--   accepted successfully but aren't delivered during the 5-minute
--   deduplication interval. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The maximum length of <tt>MessageDeduplicationId</tt> is 128
--   characters. <tt>MessageDeduplicationId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   <a>$sel:messageAttributes:SendMessage'</a>,
--   <a>sendMessage_messageAttributes</a> - Each message attribute consists
--   of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>. For more
--   information, see <a>Amazon SQS message attributes</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   <a>$sel:messageGroupId:SendMessage'</a>,
--   <a>sendMessage_messageGroupId</a> - This parameter applies only to
--   FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
--   
--   <a>$sel:messageSystemAttributes:SendMessage'</a>,
--   <a>sendMessage_messageSystemAttributes</a> - The message system
--   attribute to send. Each message system attribute consists of a
--   <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
--   
--   <a>$sel:delaySeconds:SendMessage'</a>, <a>sendMessage_delaySeconds</a>
--   - The length of time, in seconds, for which to delay a specific
--   message. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a
--   positive <tt>DelaySeconds</tt> value become available for processing
--   after the delay period is finished. If you don't specify a value, the
--   default value for the queue applies.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
--   
--   <a>$sel:queueUrl:SendMessage'</a>, <a>sendMessage_queueUrl</a> - The
--   URL of the Amazon SQS queue to which a message is sent.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:messageBody:SendMessage'</a>, <a>sendMessage_messageBody</a> -
--   The message to send. The minimum size is one character. The maximum
--   size is 256 KB.
--   
--   A message can include only XML, JSON, and unformatted text. The
--   following Unicode characters are allowed:
--   
--   <tt>#x9</tt> | <tt>#xA</tt> | <tt>#xD</tt> | <tt>#x20</tt> to
--   <tt>#xD7FF</tt> | <tt>#xE000</tt> to <tt>#xFFFD</tt> |
--   <tt>#x10000</tt> to <tt>#x10FFFF</tt>
--   
--   Any characters not included in this list will be rejected. For more
--   information, see the <a>W3C specification for characters</a>.
newSendMessage :: Text -> Text -> SendMessage

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of sent messages. If a message with a
--   particular <tt>MessageDeduplicationId</tt> is sent successfully, any
--   messages sent with the same <tt>MessageDeduplicationId</tt> are
--   accepted successfully but aren't delivered during the 5-minute
--   deduplication interval. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The maximum length of <tt>MessageDeduplicationId</tt> is 128
--   characters. <tt>MessageDeduplicationId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
sendMessage_messageDeduplicationId :: Lens' SendMessage (Maybe Text)

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
sendMessage_messageAttributes :: Lens' SendMessage (Maybe (HashMap Text MessageAttributeValue))

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
sendMessage_messageGroupId :: Lens' SendMessage (Maybe Text)

-- | The message system attribute to send. Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
sendMessage_messageSystemAttributes :: Lens' SendMessage (Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue))

-- | The length of time, in seconds, for which to delay a specific message.
--   Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive
--   <tt>DelaySeconds</tt> value become available for processing after the
--   delay period is finished. If you don't specify a value, the default
--   value for the queue applies.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
sendMessage_delaySeconds :: Lens' SendMessage (Maybe Int)

-- | The URL of the Amazon SQS queue to which a message is sent.
--   
--   Queue URLs and names are case-sensitive.
sendMessage_queueUrl :: Lens' SendMessage Text

-- | The message to send. The minimum size is one character. The maximum
--   size is 256 KB.
--   
--   A message can include only XML, JSON, and unformatted text. The
--   following Unicode characters are allowed:
--   
--   <tt>#x9</tt> | <tt>#xA</tt> | <tt>#xD</tt> | <tt>#x20</tt> to
--   <tt>#xD7FF</tt> | <tt>#xE000</tt> to <tt>#xFFFD</tt> |
--   <tt>#x10000</tt> to <tt>#x10FFFF</tt>
--   
--   Any characters not included in this list will be rejected. For more
--   information, see the <a>W3C specification for characters</a>.
sendMessage_messageBody :: Lens' SendMessage Text

-- | The <tt>MD5OfMessageBody</tt> and <tt>MessageId</tt> elements.
--   
--   <i>See:</i> <a>newSendMessageResponse</a> smart constructor.
data SendMessageResponse
SendMessageResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> SendMessageResponse

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits.
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
[$sel:sequenceNumber:SendMessageResponse'] :: SendMessageResponse -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageBody:SendMessageResponse'] :: SendMessageResponse -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest.
[$sel:mD5OfMessageSystemAttributes:SendMessageResponse'] :: SendMessageResponse -> Maybe Text

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
[$sel:mD5OfMessageAttributes:SendMessageResponse'] :: SendMessageResponse -> Maybe Text

-- | An attribute containing the <tt>MessageId</tt> of the message sent to
--   the queue. For more information, see <a>Queue and Message
--   Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:messageId:SendMessageResponse'] :: SendMessageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SendMessageResponse'] :: SendMessageResponse -> Int

-- | Create a value of <a>SendMessageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceNumber:SendMessageResponse'</a>,
--   <a>sendMessageResponse_sequenceNumber</a> - This parameter applies
--   only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits.
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
--   
--   <a>$sel:mD5OfMessageBody:SendMessageResponse'</a>,
--   <a>sendMessageResponse_mD5OfMessageBody</a> - An MD5 digest of the
--   non-URL-encoded message body string. You can use this attribute to
--   verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:mD5OfMessageSystemAttributes:SendMessageResponse'</a>,
--   <a>sendMessageResponse_mD5OfMessageSystemAttributes</a> - An MD5
--   digest of the non-URL-encoded message system attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest.
--   
--   <a>$sel:mD5OfMessageAttributes:SendMessageResponse'</a>,
--   <a>sendMessageResponse_mD5OfMessageAttributes</a> - An MD5 digest of
--   the non-URL-encoded message attribute string. You can use this
--   attribute to verify that Amazon SQS received the message correctly.
--   Amazon SQS URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:messageId:SendMessageResponse'</a>,
--   <a>sendMessageResponse_messageId</a> - An attribute containing the
--   <tt>MessageId</tt> of the message sent to the queue. For more
--   information, see <a>Queue and Message Identifiers</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   <a>$sel:httpStatus:SendMessageResponse'</a>,
--   <a>sendMessageResponse_httpStatus</a> - The response's http status
--   code.
newSendMessageResponse :: Int -> SendMessageResponse

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits.
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
sendMessageResponse_sequenceNumber :: Lens' SendMessageResponse (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageResponse_mD5OfMessageBody :: Lens' SendMessageResponse (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest.
sendMessageResponse_mD5OfMessageSystemAttributes :: Lens' SendMessageResponse (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageResponse_mD5OfMessageAttributes :: Lens' SendMessageResponse (Maybe Text)

-- | An attribute containing the <tt>MessageId</tt> of the message sent to
--   the queue. For more information, see <a>Queue and Message
--   Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
sendMessageResponse_messageId :: Lens' SendMessageResponse (Maybe Text)

-- | The response's http status code.
sendMessageResponse_httpStatus :: Lens' SendMessageResponse Int
instance GHC.Generics.Generic Network.AWS.SQS.SendMessage.SendMessage
instance GHC.Show.Show Network.AWS.SQS.SendMessage.SendMessage
instance GHC.Read.Read Network.AWS.SQS.SendMessage.SendMessage
instance GHC.Classes.Eq Network.AWS.SQS.SendMessage.SendMessage
instance GHC.Generics.Generic Network.AWS.SQS.SendMessage.SendMessageResponse
instance GHC.Show.Show Network.AWS.SQS.SendMessage.SendMessageResponse
instance GHC.Read.Read Network.AWS.SQS.SendMessage.SendMessageResponse
instance GHC.Classes.Eq Network.AWS.SQS.SendMessage.SendMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.SendMessage.SendMessage
instance Control.DeepSeq.NFData Network.AWS.SQS.SendMessage.SendMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.SendMessage.SendMessage
instance Control.DeepSeq.NFData Network.AWS.SQS.SendMessage.SendMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.SendMessage.SendMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.SendMessage.SendMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.SendMessage.SendMessage


-- | Revokes any permissions in the queue policy that matches the specified
--   <tt>Label</tt> parameter.
--   
--   <ul>
--   <li>Only the owner of a queue can remove permissions from it.</li>
--   <li>Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.</li>
--   <li>To remove the ability to change queue permissions, you must deny
--   permission to the <tt>AddPermission</tt>, <tt>RemovePermission</tt>,
--   and <tt>SetQueueAttributes</tt> actions in your IAM policy.</li>
--   </ul>
module Network.AWS.SQS.RemovePermission

-- | <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Text -> Text -> RemovePermission

-- | The URL of the Amazon SQS queue from which permissions are removed.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:RemovePermission'] :: RemovePermission -> Text

-- | The identification of the permission to remove. This is the label
--   added using the <tt> AddPermission </tt> action.
[$sel:label:RemovePermission'] :: RemovePermission -> Text

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:RemovePermission'</a>,
--   <a>removePermission_queueUrl</a> - The URL of the Amazon SQS queue
--   from which permissions are removed.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:label:RemovePermission'</a>, <a>removePermission_label</a> -
--   The identification of the permission to remove. This is the label
--   added using the <tt> AddPermission </tt> action.
newRemovePermission :: Text -> Text -> RemovePermission

-- | The URL of the Amazon SQS queue from which permissions are removed.
--   
--   Queue URLs and names are case-sensitive.
removePermission_queueUrl :: Lens' RemovePermission Text

-- | The identification of the permission to remove. This is the label
--   added using the <tt> AddPermission </tt> action.
removePermission_label :: Lens' RemovePermission Text

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse
instance GHC.Generics.Generic Network.AWS.SQS.RemovePermission.RemovePermission
instance GHC.Show.Show Network.AWS.SQS.RemovePermission.RemovePermission
instance GHC.Read.Read Network.AWS.SQS.RemovePermission.RemovePermission
instance GHC.Classes.Eq Network.AWS.SQS.RemovePermission.RemovePermission
instance GHC.Generics.Generic Network.AWS.SQS.RemovePermission.RemovePermissionResponse
instance GHC.Show.Show Network.AWS.SQS.RemovePermission.RemovePermissionResponse
instance GHC.Read.Read Network.AWS.SQS.RemovePermission.RemovePermissionResponse
instance GHC.Classes.Eq Network.AWS.SQS.RemovePermission.RemovePermissionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Network.AWS.SQS.RemovePermission.RemovePermissionResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Network.AWS.SQS.RemovePermission.RemovePermission
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.RemovePermission.RemovePermission
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.RemovePermission.RemovePermission
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.RemovePermission.RemovePermission


-- | Retrieves one or more messages (up to 10), from the specified queue.
--   Using the <tt>WaitTimeSeconds</tt> parameter enables long-poll
--   support. For more information, see <a>Amazon SQS Long Polling</a> in
--   the <i>Amazon SQS Developer Guide</i>.
--   
--   Short poll is the default behavior where a weighted random set of
--   machines is sampled on a <tt>ReceiveMessage</tt> call. Thus, only the
--   messages on the sampled machines are returned. If the number of
--   messages in the queue is small (fewer than 1,000), you most likely get
--   fewer messages than you requested per <tt>ReceiveMessage</tt> call. If
--   the number of messages in the queue is extremely small, you might not
--   receive any messages in a particular <tt>ReceiveMessage</tt> response.
--   If this happens, repeat the request.
--   
--   For each message returned, the response includes the following:
--   
--   <ul>
--   <li>The message body.</li>
--   <li>An MD5 digest of the message body. For information about MD5, see
--   <a>RFC1321</a>.</li>
--   <li>The <tt>MessageId</tt> you received when you sent the message to
--   the queue.</li>
--   <li>The receipt handle.</li>
--   <li>The message attributes.</li>
--   <li>An MD5 digest of the message attributes.</li>
--   </ul>
--   
--   The receipt handle is the identifier you must provide when deleting
--   the message. For more information, see <a>Queue and Message
--   Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   You can provide the <tt>VisibilityTimeout</tt> parameter in your
--   request. The parameter is applied to the messages that Amazon SQS
--   returns in the response. If you don't include the parameter, the
--   overall visibility timeout for the queue is used for the returned
--   messages. For more information, see <a>Visibility Timeout</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   A message that isn't deleted or a message whose visibility isn't
--   extended before the visibility timeout expires counts as a failed
--   receive. Depending on the configuration of the queue, the message
--   might be sent to the dead-letter queue.
--   
--   In the future, new attributes might be added. If you write code that
--   calls this action, we recommend that you structure your code so that
--   it can handle new attributes gracefully.
module Network.AWS.SQS.ReceiveMessage

-- | <i>See:</i> <a>newReceiveMessage</a> smart constructor.
data ReceiveMessage
ReceiveMessage' :: Maybe Int -> Maybe Int -> Maybe [Text] -> Maybe [MessageAttribute] -> Maybe Int -> Maybe Text -> Text -> ReceiveMessage

-- | The duration (in seconds) that the received messages are hidden from
--   subsequent retrieve requests after being retrieved by a
--   <tt>ReceiveMessage</tt> request.
[$sel:visibilityTimeout:ReceiveMessage'] :: ReceiveMessage -> Maybe Int

-- | The maximum number of messages to return. Amazon SQS never returns
--   more messages than this value (however, fewer messages might be
--   returned). Valid values: 1 to 10. Default: 1.
[$sel:maxNumberOfMessages:ReceiveMessage'] :: ReceiveMessage -> Maybe Int

-- | The name of the message attribute, where <i>N</i> is the index.
--   
--   <ul>
--   <li>The name can contain alphanumeric characters and the underscore
--   (<tt>_</tt>), hyphen (<tt>-</tt>), and period (<tt>.</tt>).</li>
--   <li>The name is case-sensitive and must be unique among all attribute
--   names for the message.</li>
--   <li>The name must not start with AWS-reserved prefixes such as
--   <tt>AWS.</tt> or <tt>Amazon.</tt> (or any casing variants).</li>
--   <li>The name must not start or end with a period (<tt>.</tt>), and it
--   should not have periods in succession (<tt>..</tt>).</li>
--   <li>The name can be up to 256 characters long.</li>
--   </ul>
--   
--   When using <tt>ReceiveMessage</tt>, you can send a list of attribute
--   names to receive, or you can return all of the attributes by
--   specifying <tt>All</tt> or <tt>.*</tt> in your request. You can also
--   use all message attributes starting with a prefix, for example
--   <tt>bar.*</tt>.
[$sel:messageAttributeNames:ReceiveMessage'] :: ReceiveMessage -> Maybe [Text]

-- | A list of attributes that need to be returned along with each message.
--   These attributes include:
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateFirstReceiveTimestamp</tt> – Returns the time the
--   message was first received from the queue (<a>epoch time</a> in
--   milliseconds).</li>
--   <li><tt>ApproximateReceiveCount</tt> – Returns the number of times a
--   message has been received across all queues but not deleted.</li>
--   <li><tt>AWSTraceHeader</tt> – Returns the X-Ray trace header
--   string.</li>
--   <li><pre>SenderId</pre><ul><li>For an IAM user, returns the IAM user
--   ID, for example <tt>ABCDEFGHI1JKLMNOPQ23R</tt>.</li><li>For an IAM
--   role, returns the IAM role ID, for example
--   <tt>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</tt>.</li></ul></li>
--   <li><tt>SentTimestamp</tt> – Returns the time the message was sent to
--   the queue (<a>epoch time</a> in milliseconds).</li>
--   <li><tt>MessageDeduplicationId</tt> – Returns the value provided by
--   the producer that calls the <tt> SendMessage </tt> action.</li>
--   <li><tt>MessageGroupId</tt> – Returns the value provided by the
--   producer that calls the <tt> SendMessage </tt> action. Messages with
--   the same <tt>MessageGroupId</tt> are returned in sequence.</li>
--   <li><tt>SequenceNumber</tt> – Returns the value provided by Amazon
--   SQS.</li>
--   </ul>
[$sel:attributeNames:ReceiveMessage'] :: ReceiveMessage -> Maybe [MessageAttribute]

-- | The duration (in seconds) for which the call waits for a message to
--   arrive in the queue before returning. If a message is available, the
--   call returns sooner than <tt>WaitTimeSeconds</tt>. If no messages are
--   available and the wait time expires, the call returns successfully
--   with an empty list of messages.
--   
--   To avoid HTTP errors, ensure that the HTTP response timeout for
--   <tt>ReceiveMessage</tt> requests is longer than the
--   <tt>WaitTimeSeconds</tt> parameter. For example, with the Java SDK,
--   you can set HTTP transport settings using the
--   <a>NettyNioAsyncHttpClient</a> for asynchronous clients, or the
--   <a>ApacheHttpClient</a> for synchronous clients.
[$sel:waitTimeSeconds:ReceiveMessage'] :: ReceiveMessage -> Maybe Int

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of <tt>ReceiveMessage</tt> calls. If
--   a networking issue occurs after a <tt>ReceiveMessage</tt> action, and
--   instead of a response you receive a generic error, it is possible to
--   retry the same action with an identical
--   <tt>ReceiveRequestAttemptId</tt> to retrieve the same set of messages,
--   even if their visibility timeout has not yet expired.
--   
--   <ul>
--   <li>You can use <tt>ReceiveRequestAttemptId</tt> only for 5 minutes
--   after a <tt>ReceiveMessage</tt> action.</li>
--   <li>When you set <tt>FifoQueue</tt>, a caller of the
--   <tt>ReceiveMessage</tt> action can provide a
--   <tt>ReceiveRequestAttemptId</tt> explicitly.</li>
--   <li>If a caller of the <tt>ReceiveMessage</tt> action doesn't provide
--   a <tt>ReceiveRequestAttemptId</tt>, Amazon SQS generates a
--   <tt>ReceiveRequestAttemptId</tt>.</li>
--   <li>It is possible to retry the <tt>ReceiveMessage</tt> action with
--   the same <tt>ReceiveRequestAttemptId</tt> if none of the messages have
--   been modified (deleted or had their visibility changes).</li>
--   <li>During a visibility timeout, subsequent calls with the same
--   <tt>ReceiveRequestAttemptId</tt> return the same messages and receipt
--   handles. If a retry occurs within the deduplication interval, it
--   resets the visibility timeout. For more information, see <a>Visibility
--   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.If a caller of
--   the <tt>ReceiveMessage</tt> action still processes messages when the
--   visibility timeout expires and messages become visible, another worker
--   consuming from the same queue can receive the same messages and
--   therefore process duplicates. Also, if a consumer whose message
--   processing time is longer than the visibility timeout tries to delete
--   the processed messages, the action fails with an error.To mitigate
--   this effect, ensure that your application observes a safe threshold
--   before the visibility timeout expires and extend the visibility
--   timeout as necessary.</li>
--   <li>While messages with a particular <tt>MessageGroupId</tt> are
--   invisible, no more messages belonging to the same
--   <tt>MessageGroupId</tt> are returned until the visibility timeout
--   expires. You can still receive messages with another
--   <tt>MessageGroupId</tt> as long as it is also visible.</li>
--   <li>If a caller of <tt>ReceiveMessage</tt> can't track the
--   <tt>ReceiveRequestAttemptId</tt>, no retries work until the original
--   visibility timeout expires. As a result, delays might occur but the
--   messages in the queue remain in a strict order.</li>
--   </ul>
--   
--   The maximum length of <tt>ReceiveRequestAttemptId</tt> is 128
--   characters. <tt>ReceiveRequestAttemptId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>ReceiveRequestAttemptId</tt>, see
--   <a>Using the ReceiveRequestAttemptId Request Parameter</a> in the
--   <i>Amazon SQS Developer Guide</i>.
[$sel:receiveRequestAttemptId:ReceiveMessage'] :: ReceiveMessage -> Maybe Text

-- | The URL of the Amazon SQS queue from which messages are received.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:ReceiveMessage'] :: ReceiveMessage -> Text

-- | Create a value of <a>ReceiveMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:visibilityTimeout:ReceiveMessage'</a>,
--   <a>receiveMessage_visibilityTimeout</a> - The duration (in seconds)
--   that the received messages are hidden from subsequent retrieve
--   requests after being retrieved by a <tt>ReceiveMessage</tt> request.
--   
--   <a>$sel:maxNumberOfMessages:ReceiveMessage'</a>,
--   <a>receiveMessage_maxNumberOfMessages</a> - The maximum number of
--   messages to return. Amazon SQS never returns more messages than this
--   value (however, fewer messages might be returned). Valid values: 1 to
--   10. Default: 1.
--   
--   <a>$sel:messageAttributeNames:ReceiveMessage'</a>,
--   <a>receiveMessage_messageAttributeNames</a> - The name of the message
--   attribute, where <i>N</i> is the index.
--   
--   <ul>
--   <li>The name can contain alphanumeric characters and the underscore
--   (<tt>_</tt>), hyphen (<tt>-</tt>), and period (<tt>.</tt>).</li>
--   <li>The name is case-sensitive and must be unique among all attribute
--   names for the message.</li>
--   <li>The name must not start with AWS-reserved prefixes such as
--   <tt>AWS.</tt> or <tt>Amazon.</tt> (or any casing variants).</li>
--   <li>The name must not start or end with a period (<tt>.</tt>), and it
--   should not have periods in succession (<tt>..</tt>).</li>
--   <li>The name can be up to 256 characters long.</li>
--   </ul>
--   
--   When using <tt>ReceiveMessage</tt>, you can send a list of attribute
--   names to receive, or you can return all of the attributes by
--   specifying <tt>All</tt> or <tt>.*</tt> in your request. You can also
--   use all message attributes starting with a prefix, for example
--   <tt>bar.*</tt>.
--   
--   <a>$sel:attributeNames:ReceiveMessage'</a>,
--   <a>receiveMessage_attributeNames</a> - A list of attributes that need
--   to be returned along with each message. These attributes include:
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateFirstReceiveTimestamp</tt> – Returns the time the
--   message was first received from the queue (<a>epoch time</a> in
--   milliseconds).</li>
--   <li><tt>ApproximateReceiveCount</tt> – Returns the number of times a
--   message has been received across all queues but not deleted.</li>
--   <li><tt>AWSTraceHeader</tt> – Returns the X-Ray trace header
--   string.</li>
--   <li><pre>SenderId</pre><ul><li>For an IAM user, returns the IAM user
--   ID, for example <tt>ABCDEFGHI1JKLMNOPQ23R</tt>.</li><li>For an IAM
--   role, returns the IAM role ID, for example
--   <tt>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</tt>.</li></ul></li>
--   <li><tt>SentTimestamp</tt> – Returns the time the message was sent to
--   the queue (<a>epoch time</a> in milliseconds).</li>
--   <li><tt>MessageDeduplicationId</tt> – Returns the value provided by
--   the producer that calls the <tt> SendMessage </tt> action.</li>
--   <li><tt>MessageGroupId</tt> – Returns the value provided by the
--   producer that calls the <tt> SendMessage </tt> action. Messages with
--   the same <tt>MessageGroupId</tt> are returned in sequence.</li>
--   <li><tt>SequenceNumber</tt> – Returns the value provided by Amazon
--   SQS.</li>
--   </ul>
--   
--   <a>$sel:waitTimeSeconds:ReceiveMessage'</a>,
--   <a>receiveMessage_waitTimeSeconds</a> - The duration (in seconds) for
--   which the call waits for a message to arrive in the queue before
--   returning. If a message is available, the call returns sooner than
--   <tt>WaitTimeSeconds</tt>. If no messages are available and the wait
--   time expires, the call returns successfully with an empty list of
--   messages.
--   
--   To avoid HTTP errors, ensure that the HTTP response timeout for
--   <tt>ReceiveMessage</tt> requests is longer than the
--   <tt>WaitTimeSeconds</tt> parameter. For example, with the Java SDK,
--   you can set HTTP transport settings using the
--   <a>NettyNioAsyncHttpClient</a> for asynchronous clients, or the
--   <a>ApacheHttpClient</a> for synchronous clients.
--   
--   <a>$sel:receiveRequestAttemptId:ReceiveMessage'</a>,
--   <a>receiveMessage_receiveRequestAttemptId</a> - This parameter applies
--   only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of <tt>ReceiveMessage</tt> calls. If
--   a networking issue occurs after a <tt>ReceiveMessage</tt> action, and
--   instead of a response you receive a generic error, it is possible to
--   retry the same action with an identical
--   <tt>ReceiveRequestAttemptId</tt> to retrieve the same set of messages,
--   even if their visibility timeout has not yet expired.
--   
--   <ul>
--   <li>You can use <tt>ReceiveRequestAttemptId</tt> only for 5 minutes
--   after a <tt>ReceiveMessage</tt> action.</li>
--   <li>When you set <tt>FifoQueue</tt>, a caller of the
--   <tt>ReceiveMessage</tt> action can provide a
--   <tt>ReceiveRequestAttemptId</tt> explicitly.</li>
--   <li>If a caller of the <tt>ReceiveMessage</tt> action doesn't provide
--   a <tt>ReceiveRequestAttemptId</tt>, Amazon SQS generates a
--   <tt>ReceiveRequestAttemptId</tt>.</li>
--   <li>It is possible to retry the <tt>ReceiveMessage</tt> action with
--   the same <tt>ReceiveRequestAttemptId</tt> if none of the messages have
--   been modified (deleted or had their visibility changes).</li>
--   <li>During a visibility timeout, subsequent calls with the same
--   <tt>ReceiveRequestAttemptId</tt> return the same messages and receipt
--   handles. If a retry occurs within the deduplication interval, it
--   resets the visibility timeout. For more information, see <a>Visibility
--   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.If a caller of
--   the <tt>ReceiveMessage</tt> action still processes messages when the
--   visibility timeout expires and messages become visible, another worker
--   consuming from the same queue can receive the same messages and
--   therefore process duplicates. Also, if a consumer whose message
--   processing time is longer than the visibility timeout tries to delete
--   the processed messages, the action fails with an error.To mitigate
--   this effect, ensure that your application observes a safe threshold
--   before the visibility timeout expires and extend the visibility
--   timeout as necessary.</li>
--   <li>While messages with a particular <tt>MessageGroupId</tt> are
--   invisible, no more messages belonging to the same
--   <tt>MessageGroupId</tt> are returned until the visibility timeout
--   expires. You can still receive messages with another
--   <tt>MessageGroupId</tt> as long as it is also visible.</li>
--   <li>If a caller of <tt>ReceiveMessage</tt> can't track the
--   <tt>ReceiveRequestAttemptId</tt>, no retries work until the original
--   visibility timeout expires. As a result, delays might occur but the
--   messages in the queue remain in a strict order.</li>
--   </ul>
--   
--   The maximum length of <tt>ReceiveRequestAttemptId</tt> is 128
--   characters. <tt>ReceiveRequestAttemptId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>ReceiveRequestAttemptId</tt>, see
--   <a>Using the ReceiveRequestAttemptId Request Parameter</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:queueUrl:ReceiveMessage'</a>, <a>receiveMessage_queueUrl</a> -
--   The URL of the Amazon SQS queue from which messages are received.
--   
--   Queue URLs and names are case-sensitive.
newReceiveMessage :: Text -> ReceiveMessage

-- | The duration (in seconds) that the received messages are hidden from
--   subsequent retrieve requests after being retrieved by a
--   <tt>ReceiveMessage</tt> request.
receiveMessage_visibilityTimeout :: Lens' ReceiveMessage (Maybe Int)

-- | The maximum number of messages to return. Amazon SQS never returns
--   more messages than this value (however, fewer messages might be
--   returned). Valid values: 1 to 10. Default: 1.
receiveMessage_maxNumberOfMessages :: Lens' ReceiveMessage (Maybe Int)

-- | The name of the message attribute, where <i>N</i> is the index.
--   
--   <ul>
--   <li>The name can contain alphanumeric characters and the underscore
--   (<tt>_</tt>), hyphen (<tt>-</tt>), and period (<tt>.</tt>).</li>
--   <li>The name is case-sensitive and must be unique among all attribute
--   names for the message.</li>
--   <li>The name must not start with AWS-reserved prefixes such as
--   <tt>AWS.</tt> or <tt>Amazon.</tt> (or any casing variants).</li>
--   <li>The name must not start or end with a period (<tt>.</tt>), and it
--   should not have periods in succession (<tt>..</tt>).</li>
--   <li>The name can be up to 256 characters long.</li>
--   </ul>
--   
--   When using <tt>ReceiveMessage</tt>, you can send a list of attribute
--   names to receive, or you can return all of the attributes by
--   specifying <tt>All</tt> or <tt>.*</tt> in your request. You can also
--   use all message attributes starting with a prefix, for example
--   <tt>bar.*</tt>.
receiveMessage_messageAttributeNames :: Lens' ReceiveMessage (Maybe [Text])

-- | A list of attributes that need to be returned along with each message.
--   These attributes include:
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateFirstReceiveTimestamp</tt> – Returns the time the
--   message was first received from the queue (<a>epoch time</a> in
--   milliseconds).</li>
--   <li><tt>ApproximateReceiveCount</tt> – Returns the number of times a
--   message has been received across all queues but not deleted.</li>
--   <li><tt>AWSTraceHeader</tt> – Returns the X-Ray trace header
--   string.</li>
--   <li><pre>SenderId</pre><ul><li>For an IAM user, returns the IAM user
--   ID, for example <tt>ABCDEFGHI1JKLMNOPQ23R</tt>.</li><li>For an IAM
--   role, returns the IAM role ID, for example
--   <tt>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</tt>.</li></ul></li>
--   <li><tt>SentTimestamp</tt> – Returns the time the message was sent to
--   the queue (<a>epoch time</a> in milliseconds).</li>
--   <li><tt>MessageDeduplicationId</tt> – Returns the value provided by
--   the producer that calls the <tt> SendMessage </tt> action.</li>
--   <li><tt>MessageGroupId</tt> – Returns the value provided by the
--   producer that calls the <tt> SendMessage </tt> action. Messages with
--   the same <tt>MessageGroupId</tt> are returned in sequence.</li>
--   <li><tt>SequenceNumber</tt> – Returns the value provided by Amazon
--   SQS.</li>
--   </ul>
receiveMessage_attributeNames :: Lens' ReceiveMessage (Maybe [MessageAttribute])

-- | The duration (in seconds) for which the call waits for a message to
--   arrive in the queue before returning. If a message is available, the
--   call returns sooner than <tt>WaitTimeSeconds</tt>. If no messages are
--   available and the wait time expires, the call returns successfully
--   with an empty list of messages.
--   
--   To avoid HTTP errors, ensure that the HTTP response timeout for
--   <tt>ReceiveMessage</tt> requests is longer than the
--   <tt>WaitTimeSeconds</tt> parameter. For example, with the Java SDK,
--   you can set HTTP transport settings using the
--   <a>NettyNioAsyncHttpClient</a> for asynchronous clients, or the
--   <a>ApacheHttpClient</a> for synchronous clients.
receiveMessage_waitTimeSeconds :: Lens' ReceiveMessage (Maybe Int)

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of <tt>ReceiveMessage</tt> calls. If
--   a networking issue occurs after a <tt>ReceiveMessage</tt> action, and
--   instead of a response you receive a generic error, it is possible to
--   retry the same action with an identical
--   <tt>ReceiveRequestAttemptId</tt> to retrieve the same set of messages,
--   even if their visibility timeout has not yet expired.
--   
--   <ul>
--   <li>You can use <tt>ReceiveRequestAttemptId</tt> only for 5 minutes
--   after a <tt>ReceiveMessage</tt> action.</li>
--   <li>When you set <tt>FifoQueue</tt>, a caller of the
--   <tt>ReceiveMessage</tt> action can provide a
--   <tt>ReceiveRequestAttemptId</tt> explicitly.</li>
--   <li>If a caller of the <tt>ReceiveMessage</tt> action doesn't provide
--   a <tt>ReceiveRequestAttemptId</tt>, Amazon SQS generates a
--   <tt>ReceiveRequestAttemptId</tt>.</li>
--   <li>It is possible to retry the <tt>ReceiveMessage</tt> action with
--   the same <tt>ReceiveRequestAttemptId</tt> if none of the messages have
--   been modified (deleted or had their visibility changes).</li>
--   <li>During a visibility timeout, subsequent calls with the same
--   <tt>ReceiveRequestAttemptId</tt> return the same messages and receipt
--   handles. If a retry occurs within the deduplication interval, it
--   resets the visibility timeout. For more information, see <a>Visibility
--   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.If a caller of
--   the <tt>ReceiveMessage</tt> action still processes messages when the
--   visibility timeout expires and messages become visible, another worker
--   consuming from the same queue can receive the same messages and
--   therefore process duplicates. Also, if a consumer whose message
--   processing time is longer than the visibility timeout tries to delete
--   the processed messages, the action fails with an error.To mitigate
--   this effect, ensure that your application observes a safe threshold
--   before the visibility timeout expires and extend the visibility
--   timeout as necessary.</li>
--   <li>While messages with a particular <tt>MessageGroupId</tt> are
--   invisible, no more messages belonging to the same
--   <tt>MessageGroupId</tt> are returned until the visibility timeout
--   expires. You can still receive messages with another
--   <tt>MessageGroupId</tt> as long as it is also visible.</li>
--   <li>If a caller of <tt>ReceiveMessage</tt> can't track the
--   <tt>ReceiveRequestAttemptId</tt>, no retries work until the original
--   visibility timeout expires. As a result, delays might occur but the
--   messages in the queue remain in a strict order.</li>
--   </ul>
--   
--   The maximum length of <tt>ReceiveRequestAttemptId</tt> is 128
--   characters. <tt>ReceiveRequestAttemptId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>ReceiveRequestAttemptId</tt>, see
--   <a>Using the ReceiveRequestAttemptId Request Parameter</a> in the
--   <i>Amazon SQS Developer Guide</i>.
receiveMessage_receiveRequestAttemptId :: Lens' ReceiveMessage (Maybe Text)

-- | The URL of the Amazon SQS queue from which messages are received.
--   
--   Queue URLs and names are case-sensitive.
receiveMessage_queueUrl :: Lens' ReceiveMessage Text

-- | A list of received messages.
--   
--   <i>See:</i> <a>newReceiveMessageResponse</a> smart constructor.
data ReceiveMessageResponse
ReceiveMessageResponse' :: Maybe [Message] -> Int -> ReceiveMessageResponse

-- | A list of messages.
[$sel:messages:ReceiveMessageResponse'] :: ReceiveMessageResponse -> Maybe [Message]

-- | The response's http status code.
[$sel:httpStatus:ReceiveMessageResponse'] :: ReceiveMessageResponse -> Int

-- | Create a value of <a>ReceiveMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messages:ReceiveMessageResponse'</a>,
--   <a>receiveMessageResponse_messages</a> - A list of messages.
--   
--   <a>$sel:httpStatus:ReceiveMessageResponse'</a>,
--   <a>receiveMessageResponse_httpStatus</a> - The response's http status
--   code.
newReceiveMessageResponse :: Int -> ReceiveMessageResponse

-- | A list of messages.
receiveMessageResponse_messages :: Lens' ReceiveMessageResponse (Maybe [Message])

-- | The response's http status code.
receiveMessageResponse_httpStatus :: Lens' ReceiveMessageResponse Int
instance GHC.Generics.Generic Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance GHC.Show.Show Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance GHC.Read.Read Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance GHC.Classes.Eq Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance GHC.Generics.Generic Network.AWS.SQS.ReceiveMessage.ReceiveMessageResponse
instance GHC.Show.Show Network.AWS.SQS.ReceiveMessage.ReceiveMessageResponse
instance GHC.Read.Read Network.AWS.SQS.ReceiveMessage.ReceiveMessageResponse
instance GHC.Classes.Eq Network.AWS.SQS.ReceiveMessage.ReceiveMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance Control.DeepSeq.NFData Network.AWS.SQS.ReceiveMessage.ReceiveMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance Control.DeepSeq.NFData Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.ReceiveMessage.ReceiveMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.ReceiveMessage.ReceiveMessage


-- | Deletes the messages in a queue specified by the <tt>QueueURL</tt>
--   parameter.
--   
--   When you use the <tt>PurgeQueue</tt> action, you can't retrieve any
--   messages deleted from a queue.
--   
--   The message deletion process takes up to 60 seconds. We recommend
--   waiting for 60 seconds regardless of your queue's size.
--   
--   Messages sent to the queue <i>before</i> you call <tt>PurgeQueue</tt>
--   might be received but are deleted within the next minute.
--   
--   Messages sent to the queue <i>after</i> you call <tt>PurgeQueue</tt>
--   might be deleted while the queue is being purged.
module Network.AWS.SQS.PurgeQueue

-- | <i>See:</i> <a>newPurgeQueue</a> smart constructor.
data PurgeQueue
PurgeQueue' :: Text -> PurgeQueue

-- | The URL of the queue from which the <tt>PurgeQueue</tt> action deletes
--   messages.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:PurgeQueue'] :: PurgeQueue -> Text

-- | Create a value of <a>PurgeQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:PurgeQueue'</a>, <a>purgeQueue_queueUrl</a> - The URL
--   of the queue from which the <tt>PurgeQueue</tt> action deletes
--   messages.
--   
--   Queue URLs and names are case-sensitive.
newPurgeQueue :: Text -> PurgeQueue

-- | The URL of the queue from which the <tt>PurgeQueue</tt> action deletes
--   messages.
--   
--   Queue URLs and names are case-sensitive.
purgeQueue_queueUrl :: Lens' PurgeQueue Text

-- | <i>See:</i> <a>newPurgeQueueResponse</a> smart constructor.
data PurgeQueueResponse
PurgeQueueResponse' :: PurgeQueueResponse

-- | Create a value of <a>PurgeQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPurgeQueueResponse :: PurgeQueueResponse
instance GHC.Generics.Generic Network.AWS.SQS.PurgeQueue.PurgeQueue
instance GHC.Show.Show Network.AWS.SQS.PurgeQueue.PurgeQueue
instance GHC.Read.Read Network.AWS.SQS.PurgeQueue.PurgeQueue
instance GHC.Classes.Eq Network.AWS.SQS.PurgeQueue.PurgeQueue
instance GHC.Generics.Generic Network.AWS.SQS.PurgeQueue.PurgeQueueResponse
instance GHC.Show.Show Network.AWS.SQS.PurgeQueue.PurgeQueueResponse
instance GHC.Read.Read Network.AWS.SQS.PurgeQueue.PurgeQueueResponse
instance GHC.Classes.Eq Network.AWS.SQS.PurgeQueue.PurgeQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.PurgeQueue.PurgeQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.PurgeQueue.PurgeQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.PurgeQueue.PurgeQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.PurgeQueue.PurgeQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.PurgeQueue.PurgeQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.PurgeQueue.PurgeQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.PurgeQueue.PurgeQueue


-- | Returns a list of your queues in the current region. The response
--   includes a maximum of 1,000 results. If you specify a value for the
--   optional <tt>QueueNamePrefix</tt> parameter, only queues with a name
--   that begins with the specified value are returned.
--   
--   The <tt>listQueues</tt> methods supports pagination. Set parameter
--   <tt>MaxResults</tt> in the request to specify the maximum number of
--   results to be returned in the response. If you do not set
--   <tt>MaxResults</tt>, the response includes a maximum of 1,000 results.
--   If you set <tt>MaxResults</tt> and there are additional results to
--   display, the response includes a value for <tt>NextToken</tt>. Use
--   <tt>NextToken</tt> as a parameter in your next request to
--   <tt>listQueues</tt> to receive the next page of results.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.SQS.ListQueues

-- | <i>See:</i> <a>newListQueues</a> smart constructor.
data ListQueues
ListQueues' :: Maybe Text -> Maybe Text -> Maybe Int -> ListQueues

-- | Pagination token to request the next set of results.
[$sel:nextToken:ListQueues'] :: ListQueues -> Maybe Text

-- | A string to use for filtering the list results. Only those queues
--   whose name begins with the specified string are returned.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueNamePrefix:ListQueues'] :: ListQueues -> Maybe Text

-- | Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
[$sel:maxResults:ListQueues'] :: ListQueues -> Maybe Int

-- | Create a value of <a>ListQueues</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQueues'</a>, <a>listQueues_nextToken</a> -
--   Pagination token to request the next set of results.
--   
--   <a>$sel:queueNamePrefix:ListQueues'</a>,
--   <a>listQueues_queueNamePrefix</a> - A string to use for filtering the
--   list results. Only those queues whose name begins with the specified
--   string are returned.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:maxResults:ListQueues'</a>, <a>listQueues_maxResults</a> -
--   Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
newListQueues :: ListQueues

-- | Pagination token to request the next set of results.
listQueues_nextToken :: Lens' ListQueues (Maybe Text)

-- | A string to use for filtering the list results. Only those queues
--   whose name begins with the specified string are returned.
--   
--   Queue URLs and names are case-sensitive.
listQueues_queueNamePrefix :: Lens' ListQueues (Maybe Text)

-- | Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
listQueues_maxResults :: Lens' ListQueues (Maybe Int)

-- | A list of your queues.
--   
--   <i>See:</i> <a>newListQueuesResponse</a> smart constructor.
data ListQueuesResponse
ListQueuesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListQueuesResponse

-- | Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
[$sel:nextToken:ListQueuesResponse'] :: ListQueuesResponse -> Maybe Text

-- | A list of queue URLs, up to 1,000 entries, or the value of MaxResults
--   that you sent in the request.
[$sel:queueUrls:ListQueuesResponse'] :: ListQueuesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListQueuesResponse'] :: ListQueuesResponse -> Int

-- | Create a value of <a>ListQueuesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQueues'</a>, <a>listQueuesResponse_nextToken</a>
--   - Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:queueUrls:ListQueuesResponse'</a>,
--   <a>listQueuesResponse_queueUrls</a> - A list of queue URLs, up to
--   1,000 entries, or the value of MaxResults that you sent in the
--   request.
--   
--   <a>$sel:httpStatus:ListQueuesResponse'</a>,
--   <a>listQueuesResponse_httpStatus</a> - The response's http status
--   code.
newListQueuesResponse :: Int -> ListQueuesResponse

-- | Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
listQueuesResponse_nextToken :: Lens' ListQueuesResponse (Maybe Text)

-- | A list of queue URLs, up to 1,000 entries, or the value of MaxResults
--   that you sent in the request.
listQueuesResponse_queueUrls :: Lens' ListQueuesResponse (Maybe [Text])

-- | The response's http status code.
listQueuesResponse_httpStatus :: Lens' ListQueuesResponse Int
instance GHC.Generics.Generic Network.AWS.SQS.ListQueues.ListQueues
instance GHC.Show.Show Network.AWS.SQS.ListQueues.ListQueues
instance GHC.Read.Read Network.AWS.SQS.ListQueues.ListQueues
instance GHC.Classes.Eq Network.AWS.SQS.ListQueues.ListQueues
instance GHC.Generics.Generic Network.AWS.SQS.ListQueues.ListQueuesResponse
instance GHC.Show.Show Network.AWS.SQS.ListQueues.ListQueuesResponse
instance GHC.Read.Read Network.AWS.SQS.ListQueues.ListQueuesResponse
instance GHC.Classes.Eq Network.AWS.SQS.ListQueues.ListQueuesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.ListQueues.ListQueues
instance Control.DeepSeq.NFData Network.AWS.SQS.ListQueues.ListQueuesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SQS.ListQueues.ListQueues
instance Data.Hashable.Class.Hashable Network.AWS.SQS.ListQueues.ListQueues
instance Control.DeepSeq.NFData Network.AWS.SQS.ListQueues.ListQueues
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.ListQueues.ListQueues
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.ListQueues.ListQueues
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.ListQueues.ListQueues


-- | List all cost allocation tags added to the specified Amazon SQS queue.
--   For an overview, see <a>Tagging Your Amazon SQS Queues</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
module Network.AWS.SQS.ListQueueTags

-- | <i>See:</i> <a>newListQueueTags</a> smart constructor.
data ListQueueTags
ListQueueTags' :: Text -> ListQueueTags

-- | The URL of the queue.
[$sel:queueUrl:ListQueueTags'] :: ListQueueTags -> Text

-- | Create a value of <a>ListQueueTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:ListQueueTags'</a>, <a>listQueueTags_queueUrl</a> -
--   The URL of the queue.
newListQueueTags :: Text -> ListQueueTags

-- | The URL of the queue.
listQueueTags_queueUrl :: Lens' ListQueueTags Text

-- | <i>See:</i> <a>newListQueueTagsResponse</a> smart constructor.
data ListQueueTagsResponse
ListQueueTagsResponse' :: Maybe (HashMap Text Text) -> Int -> ListQueueTagsResponse

-- | The list of all tags added to the specified queue.
[$sel:tags:ListQueueTagsResponse'] :: ListQueueTagsResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListQueueTagsResponse'] :: ListQueueTagsResponse -> Int

-- | Create a value of <a>ListQueueTagsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListQueueTagsResponse'</a>,
--   <a>listQueueTagsResponse_tags</a> - The list of all tags added to the
--   specified queue.
--   
--   <a>$sel:httpStatus:ListQueueTagsResponse'</a>,
--   <a>listQueueTagsResponse_httpStatus</a> - The response's http status
--   code.
newListQueueTagsResponse :: Int -> ListQueueTagsResponse

-- | The list of all tags added to the specified queue.
listQueueTagsResponse_tags :: Lens' ListQueueTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listQueueTagsResponse_httpStatus :: Lens' ListQueueTagsResponse Int
instance GHC.Generics.Generic Network.AWS.SQS.ListQueueTags.ListQueueTags
instance GHC.Show.Show Network.AWS.SQS.ListQueueTags.ListQueueTags
instance GHC.Read.Read Network.AWS.SQS.ListQueueTags.ListQueueTags
instance GHC.Classes.Eq Network.AWS.SQS.ListQueueTags.ListQueueTags
instance GHC.Generics.Generic Network.AWS.SQS.ListQueueTags.ListQueueTagsResponse
instance GHC.Show.Show Network.AWS.SQS.ListQueueTags.ListQueueTagsResponse
instance GHC.Read.Read Network.AWS.SQS.ListQueueTags.ListQueueTagsResponse
instance GHC.Classes.Eq Network.AWS.SQS.ListQueueTags.ListQueueTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.ListQueueTags.ListQueueTags
instance Control.DeepSeq.NFData Network.AWS.SQS.ListQueueTags.ListQueueTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.ListQueueTags.ListQueueTags
instance Control.DeepSeq.NFData Network.AWS.SQS.ListQueueTags.ListQueueTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.ListQueueTags.ListQueueTags
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.ListQueueTags.ListQueueTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.ListQueueTags.ListQueueTags


-- | Returns a list of your queues that have the <tt>RedrivePolicy</tt>
--   queue attribute configured with a dead-letter queue.
--   
--   The <tt>ListDeadLetterSourceQueues</tt> methods supports pagination.
--   Set parameter <tt>MaxResults</tt> in the request to specify the
--   maximum number of results to be returned in the response. If you do
--   not set <tt>MaxResults</tt>, the response includes a maximum of 1,000
--   results. If you set <tt>MaxResults</tt> and there are additional
--   results to display, the response includes a value for
--   <tt>NextToken</tt>. Use <tt>NextToken</tt> as a parameter in your next
--   request to <tt>ListDeadLetterSourceQueues</tt> to receive the next
--   page of results.
--   
--   For more information about using dead-letter queues, see <a>Using
--   Amazon SQS Dead-Letter Queues</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.SQS.ListDeadLetterSourceQueues

-- | <i>See:</i> <a>newListDeadLetterSourceQueues</a> smart constructor.
data ListDeadLetterSourceQueues
ListDeadLetterSourceQueues' :: Maybe Text -> Maybe Int -> Text -> ListDeadLetterSourceQueues

-- | Pagination token to request the next set of results.
[$sel:nextToken:ListDeadLetterSourceQueues'] :: ListDeadLetterSourceQueues -> Maybe Text

-- | Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
[$sel:maxResults:ListDeadLetterSourceQueues'] :: ListDeadLetterSourceQueues -> Maybe Int

-- | The URL of a dead-letter queue.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:ListDeadLetterSourceQueues'] :: ListDeadLetterSourceQueues -> Text

-- | Create a value of <a>ListDeadLetterSourceQueues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueues_nextToken</a> - Pagination token to
--   request the next set of results.
--   
--   <a>$sel:maxResults:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueues_maxResults</a> - Maximum number of
--   results to include in the response. Value range is 1 to 1000. You must
--   set <tt>MaxResults</tt> to receive a value for <tt>NextToken</tt> in
--   the response.
--   
--   <a>$sel:queueUrl:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueues_queueUrl</a> - The URL of a dead-letter
--   queue.
--   
--   Queue URLs and names are case-sensitive.
newListDeadLetterSourceQueues :: Text -> ListDeadLetterSourceQueues

-- | Pagination token to request the next set of results.
listDeadLetterSourceQueues_nextToken :: Lens' ListDeadLetterSourceQueues (Maybe Text)

-- | Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
listDeadLetterSourceQueues_maxResults :: Lens' ListDeadLetterSourceQueues (Maybe Int)

-- | The URL of a dead-letter queue.
--   
--   Queue URLs and names are case-sensitive.
listDeadLetterSourceQueues_queueUrl :: Lens' ListDeadLetterSourceQueues Text

-- | A list of your dead letter source queues.
--   
--   <i>See:</i> <a>newListDeadLetterSourceQueuesResponse</a> smart
--   constructor.
data ListDeadLetterSourceQueuesResponse
ListDeadLetterSourceQueuesResponse' :: Maybe Text -> Int -> [Text] -> ListDeadLetterSourceQueuesResponse

-- | Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
[$sel:nextToken:ListDeadLetterSourceQueuesResponse'] :: ListDeadLetterSourceQueuesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDeadLetterSourceQueuesResponse'] :: ListDeadLetterSourceQueuesResponse -> Int

-- | A list of source queue URLs that have the <tt>RedrivePolicy</tt> queue
--   attribute configured with a dead-letter queue.
[$sel:queueUrls:ListDeadLetterSourceQueuesResponse'] :: ListDeadLetterSourceQueuesResponse -> [Text]

-- | Create a value of <a>ListDeadLetterSourceQueuesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueuesResponse_nextToken</a> - Pagination token
--   to include in the next request. Token value is <tt>null</tt> if there
--   are no additional results to request, or if you did not set
--   <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListDeadLetterSourceQueuesResponse'</a>,
--   <a>listDeadLetterSourceQueuesResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:queueUrls:ListDeadLetterSourceQueuesResponse'</a>,
--   <a>listDeadLetterSourceQueuesResponse_queueUrls</a> - A list of source
--   queue URLs that have the <tt>RedrivePolicy</tt> queue attribute
--   configured with a dead-letter queue.
newListDeadLetterSourceQueuesResponse :: Int -> ListDeadLetterSourceQueuesResponse

-- | Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
listDeadLetterSourceQueuesResponse_nextToken :: Lens' ListDeadLetterSourceQueuesResponse (Maybe Text)

-- | The response's http status code.
listDeadLetterSourceQueuesResponse_httpStatus :: Lens' ListDeadLetterSourceQueuesResponse Int

-- | A list of source queue URLs that have the <tt>RedrivePolicy</tt> queue
--   attribute configured with a dead-letter queue.
listDeadLetterSourceQueuesResponse_queueUrls :: Lens' ListDeadLetterSourceQueuesResponse [Text]
instance GHC.Generics.Generic Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance GHC.Show.Show Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance GHC.Read.Read Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance GHC.Classes.Eq Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance GHC.Generics.Generic Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueuesResponse
instance GHC.Show.Show Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueuesResponse
instance GHC.Read.Read Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueuesResponse
instance GHC.Classes.Eq Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueuesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance Control.DeepSeq.NFData Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueuesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance Data.Hashable.Class.Hashable Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance Control.DeepSeq.NFData Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.ListDeadLetterSourceQueues.ListDeadLetterSourceQueues


-- | Returns the URL of an existing Amazon SQS queue.
--   
--   To access a queue that belongs to another AWS account, use the
--   <tt>QueueOwnerAWSAccountId</tt> parameter to specify the account ID of
--   the queue's owner. The queue's owner must grant you permission to
--   access the queue. For more information about shared queue access, see
--   <tt> AddPermission </tt> or see <a>Allow Developers to Write Messages
--   to a Shared Queue</a> in the <i>Amazon SQS Developer Guide</i>.
module Network.AWS.SQS.GetQueueUrl

-- | <i>See:</i> <a>newGetQueueUrl</a> smart constructor.
data GetQueueUrl
GetQueueUrl' :: Maybe Text -> Text -> GetQueueUrl

-- | The account ID of the account that created the queue.
[$sel:queueOwnerAWSAccountId:GetQueueUrl'] :: GetQueueUrl -> Maybe Text

-- | The name of the queue whose URL must be fetched. Maximum 80
--   characters. Valid values: alphanumeric characters, hyphens
--   (<tt>-</tt>), and underscores (<tt>_</tt>).
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueName:GetQueueUrl'] :: GetQueueUrl -> Text

-- | Create a value of <a>GetQueueUrl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueOwnerAWSAccountId:GetQueueUrl'</a>,
--   <a>getQueueUrl_queueOwnerAWSAccountId</a> - The account ID of the
--   account that created the queue.
--   
--   <a>$sel:queueName:GetQueueUrl'</a>, <a>getQueueUrl_queueName</a> - The
--   name of the queue whose URL must be fetched. Maximum 80 characters.
--   Valid values: alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).
--   
--   Queue URLs and names are case-sensitive.
newGetQueueUrl :: Text -> GetQueueUrl

-- | The account ID of the account that created the queue.
getQueueUrl_queueOwnerAWSAccountId :: Lens' GetQueueUrl (Maybe Text)

-- | The name of the queue whose URL must be fetched. Maximum 80
--   characters. Valid values: alphanumeric characters, hyphens
--   (<tt>-</tt>), and underscores (<tt>_</tt>).
--   
--   Queue URLs and names are case-sensitive.
getQueueUrl_queueName :: Lens' GetQueueUrl Text

-- | For more information, see <a>Interpreting Responses</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   <i>See:</i> <a>newGetQueueUrlResponse</a> smart constructor.
data GetQueueUrlResponse
GetQueueUrlResponse' :: Int -> Text -> GetQueueUrlResponse

-- | The response's http status code.
[$sel:httpStatus:GetQueueUrlResponse'] :: GetQueueUrlResponse -> Int

-- | The URL of the queue.
[$sel:queueUrl:GetQueueUrlResponse'] :: GetQueueUrlResponse -> Text

-- | Create a value of <a>GetQueueUrlResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetQueueUrlResponse'</a>,
--   <a>getQueueUrlResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:queueUrl:GetQueueUrlResponse'</a>,
--   <a>getQueueUrlResponse_queueUrl</a> - The URL of the queue.
newGetQueueUrlResponse :: Int -> Text -> GetQueueUrlResponse

-- | The response's http status code.
getQueueUrlResponse_httpStatus :: Lens' GetQueueUrlResponse Int

-- | The URL of the queue.
getQueueUrlResponse_queueUrl :: Lens' GetQueueUrlResponse Text
instance GHC.Generics.Generic Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance GHC.Show.Show Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance GHC.Read.Read Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance GHC.Classes.Eq Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance GHC.Generics.Generic Network.AWS.SQS.GetQueueUrl.GetQueueUrlResponse
instance GHC.Show.Show Network.AWS.SQS.GetQueueUrl.GetQueueUrlResponse
instance GHC.Read.Read Network.AWS.SQS.GetQueueUrl.GetQueueUrlResponse
instance GHC.Classes.Eq Network.AWS.SQS.GetQueueUrl.GetQueueUrlResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance Control.DeepSeq.NFData Network.AWS.SQS.GetQueueUrl.GetQueueUrlResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance Control.DeepSeq.NFData Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.GetQueueUrl.GetQueueUrl
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.GetQueueUrl.GetQueueUrl


-- | Gets attributes for the specified queue.
--   
--   To determine whether a queue is <a>FIFO</a>, you can check whether
--   <tt>QueueName</tt> ends with the <tt>.fifo</tt> suffix.
module Network.AWS.SQS.GetQueueAttributes

-- | <i>See:</i> <a>newGetQueueAttributes</a> smart constructor.
data GetQueueAttributes
GetQueueAttributes' :: Maybe [QueueAttributeName] -> Text -> GetQueueAttributes

-- | A list of attributes for which to retrieve information.
--   
--   The <tt>AttributeName.N</tt> parameter is optional, but if you don't
--   specify values for this parameter, the request returns empty results.
--   
--   In the future, new attributes might be added. If you write code that
--   calls this action, we recommend that you structure your code so that
--   it can handle new attributes gracefully.
--   
--   The following attributes are supported:
--   
--   The <tt>ApproximateNumberOfMessagesDelayed</tt>,
--   <tt>ApproximateNumberOfMessagesNotVisible</tt>, and
--   <tt>ApproximateNumberOfMessagesVisible</tt> metrics may not achieve
--   consistency until at least 1 minute after the producers stop sending
--   messages. This period is required for the queue metadata to reach
--   eventual consistency.
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateNumberOfMessages</tt> – Returns the approximate
--   number of messages available for retrieval from the queue.</li>
--   <li><tt>ApproximateNumberOfMessagesDelayed</tt> – Returns the
--   approximate number of messages in the queue that are delayed and not
--   available for reading immediately. This can happen when the queue is
--   configured as a delay queue or when a message has been sent with a
--   delay parameter.</li>
--   <li><tt>ApproximateNumberOfMessagesNotVisible</tt> – Returns the
--   approximate number of messages that are in flight. Messages are
--   considered to be <i>in flight</i> if they have been sent to a client
--   but have not yet been deleted or have not yet reached the end of their
--   visibility window.</li>
--   <li><tt>CreatedTimestamp</tt> – Returns the time when the queue was
--   created in seconds (<a>epoch time</a>).</li>
--   <li><tt>DelaySeconds</tt> – Returns the default delay on the queue in
--   seconds.</li>
--   <li><tt>LastModifiedTimestamp</tt> – Returns the time when the queue
--   was last changed in seconds (<a>epoch time</a>).</li>
--   <li><tt>MaximumMessageSize</tt> – Returns the limit of how many bytes
--   a message can contain before Amazon SQS rejects it.</li>
--   <li><tt>MessageRetentionPeriod</tt> – Returns the length of time, in
--   seconds, for which Amazon SQS retains a message.</li>
--   <li><tt>Policy</tt> – Returns the policy of the queue.</li>
--   <li><tt>QueueArn</tt> – Returns the Amazon resource name (ARN) of the
--   queue.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – Returns the length of
--   time, in seconds, for which the <tt>ReceiveMessage</tt> action waits
--   for a message to arrive.</li>
--   <li><tt>VisibilityTimeout</tt> – Returns the visibility timeout for
--   the queue. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – Returns the ID of an Amazon Web Services
--   managed customer master key (CMK) for Amazon SQS or a custom CMK. For
--   more information, see <a>Key Terms</a>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – Returns the length of
--   time, in seconds, for which Amazon SQS can reuse a data key to encrypt
--   or decrypt messages before calling KMS again. For more information,
--   see <a>How Does the Data Key Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Returns information about whether the queue
--   is FIFO. For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.To determine whether a queue is
--   <a>FIFO</a>, you can check whether <tt>QueueName</tt> ends with the
--   <tt>.fifo</tt> suffix.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Returns whether content-based
--   deduplication is enabled for the queue. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:attributeNames:GetQueueAttributes'] :: GetQueueAttributes -> Maybe [QueueAttributeName]

-- | The URL of the Amazon SQS queue whose attribute information is
--   retrieved.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:GetQueueAttributes'] :: GetQueueAttributes -> Text

-- | Create a value of <a>GetQueueAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeNames:GetQueueAttributes'</a>,
--   <a>getQueueAttributes_attributeNames</a> - A list of attributes for
--   which to retrieve information.
--   
--   The <tt>AttributeName.N</tt> parameter is optional, but if you don't
--   specify values for this parameter, the request returns empty results.
--   
--   In the future, new attributes might be added. If you write code that
--   calls this action, we recommend that you structure your code so that
--   it can handle new attributes gracefully.
--   
--   The following attributes are supported:
--   
--   The <tt>ApproximateNumberOfMessagesDelayed</tt>,
--   <tt>ApproximateNumberOfMessagesNotVisible</tt>, and
--   <tt>ApproximateNumberOfMessagesVisible</tt> metrics may not achieve
--   consistency until at least 1 minute after the producers stop sending
--   messages. This period is required for the queue metadata to reach
--   eventual consistency.
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateNumberOfMessages</tt> – Returns the approximate
--   number of messages available for retrieval from the queue.</li>
--   <li><tt>ApproximateNumberOfMessagesDelayed</tt> – Returns the
--   approximate number of messages in the queue that are delayed and not
--   available for reading immediately. This can happen when the queue is
--   configured as a delay queue or when a message has been sent with a
--   delay parameter.</li>
--   <li><tt>ApproximateNumberOfMessagesNotVisible</tt> – Returns the
--   approximate number of messages that are in flight. Messages are
--   considered to be <i>in flight</i> if they have been sent to a client
--   but have not yet been deleted or have not yet reached the end of their
--   visibility window.</li>
--   <li><tt>CreatedTimestamp</tt> – Returns the time when the queue was
--   created in seconds (<a>epoch time</a>).</li>
--   <li><tt>DelaySeconds</tt> – Returns the default delay on the queue in
--   seconds.</li>
--   <li><tt>LastModifiedTimestamp</tt> – Returns the time when the queue
--   was last changed in seconds (<a>epoch time</a>).</li>
--   <li><tt>MaximumMessageSize</tt> – Returns the limit of how many bytes
--   a message can contain before Amazon SQS rejects it.</li>
--   <li><tt>MessageRetentionPeriod</tt> – Returns the length of time, in
--   seconds, for which Amazon SQS retains a message.</li>
--   <li><tt>Policy</tt> – Returns the policy of the queue.</li>
--   <li><tt>QueueArn</tt> – Returns the Amazon resource name (ARN) of the
--   queue.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – Returns the length of
--   time, in seconds, for which the <tt>ReceiveMessage</tt> action waits
--   for a message to arrive.</li>
--   <li><tt>VisibilityTimeout</tt> – Returns the visibility timeout for
--   the queue. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – Returns the ID of an Amazon Web Services
--   managed customer master key (CMK) for Amazon SQS or a custom CMK. For
--   more information, see <a>Key Terms</a>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – Returns the length of
--   time, in seconds, for which Amazon SQS can reuse a data key to encrypt
--   or decrypt messages before calling KMS again. For more information,
--   see <a>How Does the Data Key Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Returns information about whether the queue
--   is FIFO. For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.To determine whether a queue is
--   <a>FIFO</a>, you can check whether <tt>QueueName</tt> ends with the
--   <tt>.fifo</tt> suffix.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Returns whether content-based
--   deduplication is enabled for the queue. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:queueUrl:GetQueueAttributes'</a>,
--   <a>getQueueAttributes_queueUrl</a> - The URL of the Amazon SQS queue
--   whose attribute information is retrieved.
--   
--   Queue URLs and names are case-sensitive.
newGetQueueAttributes :: Text -> GetQueueAttributes

-- | A list of attributes for which to retrieve information.
--   
--   The <tt>AttributeName.N</tt> parameter is optional, but if you don't
--   specify values for this parameter, the request returns empty results.
--   
--   In the future, new attributes might be added. If you write code that
--   calls this action, we recommend that you structure your code so that
--   it can handle new attributes gracefully.
--   
--   The following attributes are supported:
--   
--   The <tt>ApproximateNumberOfMessagesDelayed</tt>,
--   <tt>ApproximateNumberOfMessagesNotVisible</tt>, and
--   <tt>ApproximateNumberOfMessagesVisible</tt> metrics may not achieve
--   consistency until at least 1 minute after the producers stop sending
--   messages. This period is required for the queue metadata to reach
--   eventual consistency.
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateNumberOfMessages</tt> – Returns the approximate
--   number of messages available for retrieval from the queue.</li>
--   <li><tt>ApproximateNumberOfMessagesDelayed</tt> – Returns the
--   approximate number of messages in the queue that are delayed and not
--   available for reading immediately. This can happen when the queue is
--   configured as a delay queue or when a message has been sent with a
--   delay parameter.</li>
--   <li><tt>ApproximateNumberOfMessagesNotVisible</tt> – Returns the
--   approximate number of messages that are in flight. Messages are
--   considered to be <i>in flight</i> if they have been sent to a client
--   but have not yet been deleted or have not yet reached the end of their
--   visibility window.</li>
--   <li><tt>CreatedTimestamp</tt> – Returns the time when the queue was
--   created in seconds (<a>epoch time</a>).</li>
--   <li><tt>DelaySeconds</tt> – Returns the default delay on the queue in
--   seconds.</li>
--   <li><tt>LastModifiedTimestamp</tt> – Returns the time when the queue
--   was last changed in seconds (<a>epoch time</a>).</li>
--   <li><tt>MaximumMessageSize</tt> – Returns the limit of how many bytes
--   a message can contain before Amazon SQS rejects it.</li>
--   <li><tt>MessageRetentionPeriod</tt> – Returns the length of time, in
--   seconds, for which Amazon SQS retains a message.</li>
--   <li><tt>Policy</tt> – Returns the policy of the queue.</li>
--   <li><tt>QueueArn</tt> – Returns the Amazon resource name (ARN) of the
--   queue.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – Returns the length of
--   time, in seconds, for which the <tt>ReceiveMessage</tt> action waits
--   for a message to arrive.</li>
--   <li><tt>VisibilityTimeout</tt> – Returns the visibility timeout for
--   the queue. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – Returns the ID of an Amazon Web Services
--   managed customer master key (CMK) for Amazon SQS or a custom CMK. For
--   more information, see <a>Key Terms</a>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – Returns the length of
--   time, in seconds, for which Amazon SQS can reuse a data key to encrypt
--   or decrypt messages before calling KMS again. For more information,
--   see <a>How Does the Data Key Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Returns information about whether the queue
--   is FIFO. For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.To determine whether a queue is
--   <a>FIFO</a>, you can check whether <tt>QueueName</tt> ends with the
--   <tt>.fifo</tt> suffix.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Returns whether content-based
--   deduplication is enabled for the queue. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
getQueueAttributes_attributeNames :: Lens' GetQueueAttributes (Maybe [QueueAttributeName])

-- | The URL of the Amazon SQS queue whose attribute information is
--   retrieved.
--   
--   Queue URLs and names are case-sensitive.
getQueueAttributes_queueUrl :: Lens' GetQueueAttributes Text

-- | A list of returned queue attributes.
--   
--   <i>See:</i> <a>newGetQueueAttributesResponse</a> smart constructor.
data GetQueueAttributesResponse
GetQueueAttributesResponse' :: Maybe (HashMap QueueAttributeName Text) -> Int -> GetQueueAttributesResponse

-- | A map of attributes to their respective values.
[$sel:attributes:GetQueueAttributesResponse'] :: GetQueueAttributesResponse -> Maybe (HashMap QueueAttributeName Text)

-- | The response's http status code.
[$sel:httpStatus:GetQueueAttributesResponse'] :: GetQueueAttributesResponse -> Int

-- | Create a value of <a>GetQueueAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetQueueAttributesResponse'</a>,
--   <a>getQueueAttributesResponse_attributes</a> - A map of attributes to
--   their respective values.
--   
--   <a>$sel:httpStatus:GetQueueAttributesResponse'</a>,
--   <a>getQueueAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetQueueAttributesResponse :: Int -> GetQueueAttributesResponse

-- | A map of attributes to their respective values.
getQueueAttributesResponse_attributes :: Lens' GetQueueAttributesResponse (Maybe (HashMap QueueAttributeName Text))

-- | The response's http status code.
getQueueAttributesResponse_httpStatus :: Lens' GetQueueAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance GHC.Show.Show Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance GHC.Read.Read Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance GHC.Classes.Eq Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance GHC.Generics.Generic Network.AWS.SQS.GetQueueAttributes.GetQueueAttributesResponse
instance GHC.Show.Show Network.AWS.SQS.GetQueueAttributes.GetQueueAttributesResponse
instance GHC.Read.Read Network.AWS.SQS.GetQueueAttributes.GetQueueAttributesResponse
instance GHC.Classes.Eq Network.AWS.SQS.GetQueueAttributes.GetQueueAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance Control.DeepSeq.NFData Network.AWS.SQS.GetQueueAttributes.GetQueueAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance Control.DeepSeq.NFData Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.GetQueueAttributes.GetQueueAttributes


-- | Deletes the queue specified by the <tt>QueueUrl</tt>, regardless of
--   the queue's contents.
--   
--   Be careful with the <tt>DeleteQueue</tt> action: When you delete a
--   queue, any messages in the queue are no longer available.
--   
--   When you delete a queue, the deletion process takes up to 60 seconds.
--   Requests you send involving that queue during the 60 seconds might
--   succeed. For example, a <tt> SendMessage </tt> request might succeed,
--   but after 60 seconds the queue and the message you sent no longer
--   exist.
--   
--   When you delete a queue, you must wait at least 60 seconds before
--   creating a queue with the same name.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
module Network.AWS.SQS.DeleteQueue

-- | <i>See:</i> <a>newDeleteQueue</a> smart constructor.
data DeleteQueue
DeleteQueue' :: Text -> DeleteQueue

-- | The URL of the Amazon SQS queue to delete.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:DeleteQueue'] :: DeleteQueue -> Text

-- | Create a value of <a>DeleteQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:DeleteQueue'</a>, <a>deleteQueue_queueUrl</a> - The
--   URL of the Amazon SQS queue to delete.
--   
--   Queue URLs and names are case-sensitive.
newDeleteQueue :: Text -> DeleteQueue

-- | The URL of the Amazon SQS queue to delete.
--   
--   Queue URLs and names are case-sensitive.
deleteQueue_queueUrl :: Lens' DeleteQueue Text

-- | <i>See:</i> <a>newDeleteQueueResponse</a> smart constructor.
data DeleteQueueResponse
DeleteQueueResponse' :: DeleteQueueResponse

-- | Create a value of <a>DeleteQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteQueueResponse :: DeleteQueueResponse
instance GHC.Generics.Generic Network.AWS.SQS.DeleteQueue.DeleteQueue
instance GHC.Show.Show Network.AWS.SQS.DeleteQueue.DeleteQueue
instance GHC.Read.Read Network.AWS.SQS.DeleteQueue.DeleteQueue
instance GHC.Classes.Eq Network.AWS.SQS.DeleteQueue.DeleteQueue
instance GHC.Generics.Generic Network.AWS.SQS.DeleteQueue.DeleteQueueResponse
instance GHC.Show.Show Network.AWS.SQS.DeleteQueue.DeleteQueueResponse
instance GHC.Read.Read Network.AWS.SQS.DeleteQueue.DeleteQueueResponse
instance GHC.Classes.Eq Network.AWS.SQS.DeleteQueue.DeleteQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.DeleteQueue.DeleteQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.DeleteQueue.DeleteQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.DeleteQueue.DeleteQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.DeleteQueue.DeleteQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.DeleteQueue.DeleteQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.DeleteQueue.DeleteQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.DeleteQueue.DeleteQueue


-- | Deletes up to ten messages from the specified queue. This is a batch
--   version of <tt> DeleteMessage.</tt> The result of the action on each
--   message is reported individually in the response.
--   
--   Because the batch request can result in a combination of successful
--   and unsuccessful actions, you should check for batch errors even when
--   the call returns an HTTP status code of <tt>200</tt>.
--   
--   Some actions take lists of parameters. These lists are specified using
--   the <tt>param.n</tt> notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this:
--   
--   <pre>
--   &amp;AttributeName.1=first
--   </pre>
--   
--   <pre>
--   &amp;AttributeName.2=second
--   </pre>
module Network.AWS.SQS.DeleteMessageBatch

-- | <i>See:</i> <a>newDeleteMessageBatch</a> smart constructor.
data DeleteMessageBatch
DeleteMessageBatch' :: Text -> [DeleteMessageBatchRequestEntry] -> DeleteMessageBatch

-- | The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:DeleteMessageBatch'] :: DeleteMessageBatch -> Text

-- | A list of receipt handles for the messages to be deleted.
[$sel:entries:DeleteMessageBatch'] :: DeleteMessageBatch -> [DeleteMessageBatchRequestEntry]

-- | Create a value of <a>DeleteMessageBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:DeleteMessageBatch'</a>,
--   <a>deleteMessageBatch_queueUrl</a> - The URL of the Amazon SQS queue
--   from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:entries:DeleteMessageBatch'</a>,
--   <a>deleteMessageBatch_entries</a> - A list of receipt handles for the
--   messages to be deleted.
newDeleteMessageBatch :: Text -> DeleteMessageBatch

-- | The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
deleteMessageBatch_queueUrl :: Lens' DeleteMessageBatch Text

-- | A list of receipt handles for the messages to be deleted.
deleteMessageBatch_entries :: Lens' DeleteMessageBatch [DeleteMessageBatchRequestEntry]

-- | For each message in the batch, the response contains a <tt>
--   DeleteMessageBatchResultEntry </tt> tag if the message is deleted or a
--   <tt> BatchResultErrorEntry </tt> tag if the message can't be deleted.
--   
--   <i>See:</i> <a>newDeleteMessageBatchResponse</a> smart constructor.
data DeleteMessageBatchResponse
DeleteMessageBatchResponse' :: Int -> [DeleteMessageBatchResultEntry] -> [BatchResultErrorEntry] -> DeleteMessageBatchResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteMessageBatchResponse'] :: DeleteMessageBatchResponse -> Int

-- | A list of <tt> DeleteMessageBatchResultEntry </tt> items.
[$sel:successful:DeleteMessageBatchResponse'] :: DeleteMessageBatchResponse -> [DeleteMessageBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items.
[$sel:failed:DeleteMessageBatchResponse'] :: DeleteMessageBatchResponse -> [BatchResultErrorEntry]

-- | Create a value of <a>DeleteMessageBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMessageBatchResponse'</a>,
--   <a>deleteMessageBatchResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:successful:DeleteMessageBatchResponse'</a>,
--   <a>deleteMessageBatchResponse_successful</a> - A list of <tt>
--   DeleteMessageBatchResultEntry </tt> items.
--   
--   <a>$sel:failed:DeleteMessageBatchResponse'</a>,
--   <a>deleteMessageBatchResponse_failed</a> - A list of <tt>
--   BatchResultErrorEntry </tt> items.
newDeleteMessageBatchResponse :: Int -> DeleteMessageBatchResponse

-- | The response's http status code.
deleteMessageBatchResponse_httpStatus :: Lens' DeleteMessageBatchResponse Int

-- | A list of <tt> DeleteMessageBatchResultEntry </tt> items.
deleteMessageBatchResponse_successful :: Lens' DeleteMessageBatchResponse [DeleteMessageBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items.
deleteMessageBatchResponse_failed :: Lens' DeleteMessageBatchResponse [BatchResultErrorEntry]
instance GHC.Generics.Generic Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance GHC.Show.Show Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance GHC.Read.Read Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance GHC.Classes.Eq Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance GHC.Generics.Generic Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatchResponse
instance GHC.Show.Show Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatchResponse
instance GHC.Read.Read Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatchResponse
instance GHC.Classes.Eq Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatchResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance Control.DeepSeq.NFData Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatchResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance Control.DeepSeq.NFData Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.DeleteMessageBatch.DeleteMessageBatch


-- | Deletes the specified message from the specified queue. To select the
--   message to delete, use the <tt>ReceiptHandle</tt> of the message
--   (<i>not</i> the <tt>MessageId</tt> which you receive when you send the
--   message). Amazon SQS can delete a message from a queue even if a
--   visibility timeout setting causes the message to be locked by another
--   consumer. Amazon SQS automatically deletes messages left in a queue
--   longer than the retention period configured for the queue.
--   
--   The <tt>ReceiptHandle</tt> is associated with a <i>specific
--   instance</i> of receiving a message. If you receive a message more
--   than once, the <tt>ReceiptHandle</tt> is different each time you
--   receive a message. When you use the <tt>DeleteMessage</tt> action, you
--   must provide the most recently received <tt>ReceiptHandle</tt> for the
--   message (otherwise, the request succeeds, but the message might not be
--   deleted).
--   
--   For standard queues, it is possible to receive a message even after
--   you delete it. This might happen on rare occasions if one of the
--   servers which stores a copy of the message is unavailable when you
--   send the request to delete the message. The copy remains on the server
--   and might be returned to you during a subsequent receive request. You
--   should ensure that your application is idempotent, so that receiving a
--   message more than once does not cause issues.
module Network.AWS.SQS.DeleteMessage

-- | <i>See:</i> <a>newDeleteMessage</a> smart constructor.
data DeleteMessage
DeleteMessage' :: Text -> Text -> DeleteMessage

-- | The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:DeleteMessage'] :: DeleteMessage -> Text

-- | The receipt handle associated with the message to delete.
[$sel:receiptHandle:DeleteMessage'] :: DeleteMessage -> Text

-- | Create a value of <a>DeleteMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:DeleteMessage'</a>, <a>deleteMessage_queueUrl</a> -
--   The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:receiptHandle:DeleteMessage'</a>,
--   <a>deleteMessage_receiptHandle</a> - The receipt handle associated
--   with the message to delete.
newDeleteMessage :: Text -> Text -> DeleteMessage

-- | The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
deleteMessage_queueUrl :: Lens' DeleteMessage Text

-- | The receipt handle associated with the message to delete.
deleteMessage_receiptHandle :: Lens' DeleteMessage Text

-- | <i>See:</i> <a>newDeleteMessageResponse</a> smart constructor.
data DeleteMessageResponse
DeleteMessageResponse' :: DeleteMessageResponse

-- | Create a value of <a>DeleteMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMessageResponse :: DeleteMessageResponse
instance GHC.Generics.Generic Network.AWS.SQS.DeleteMessage.DeleteMessage
instance GHC.Show.Show Network.AWS.SQS.DeleteMessage.DeleteMessage
instance GHC.Read.Read Network.AWS.SQS.DeleteMessage.DeleteMessage
instance GHC.Classes.Eq Network.AWS.SQS.DeleteMessage.DeleteMessage
instance GHC.Generics.Generic Network.AWS.SQS.DeleteMessage.DeleteMessageResponse
instance GHC.Show.Show Network.AWS.SQS.DeleteMessage.DeleteMessageResponse
instance GHC.Read.Read Network.AWS.SQS.DeleteMessage.DeleteMessageResponse
instance GHC.Classes.Eq Network.AWS.SQS.DeleteMessage.DeleteMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.DeleteMessage.DeleteMessage
instance Control.DeepSeq.NFData Network.AWS.SQS.DeleteMessage.DeleteMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.DeleteMessage.DeleteMessage
instance Control.DeepSeq.NFData Network.AWS.SQS.DeleteMessage.DeleteMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.DeleteMessage.DeleteMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.DeleteMessage.DeleteMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.DeleteMessage.DeleteMessage


-- | Creates a new standard or FIFO queue. You can pass one or more
--   attributes in the request. Keep the following in mind:
--   
--   <ul>
--   <li>If you don't specify the <tt>FifoQueue</tt> attribute, Amazon SQS
--   creates a standard queue.You can't change the queue type after you
--   create it and you can't convert an existing standard queue into a FIFO
--   queue. You must either create a new FIFO queue for your application or
--   delete your existing standard queue and recreate it as a FIFO queue.
--   For more information, see <a>Moving From a Standard Queue to a FIFO
--   Queue</a> in the <i>Amazon SQS Developer Guide</i>.</li>
--   <li>If you don't provide a value for an attribute, the queue is
--   created with the default value for the attribute.</li>
--   <li>If you delete a queue, you must wait at least 60 seconds before
--   creating a queue with the same name.</li>
--   </ul>
--   
--   To successfully create a new queue, you must provide a queue name that
--   adheres to the <a>limits related to queues</a> and is unique within
--   the scope of your queues.
--   
--   After you create a queue, you must wait at least one second after the
--   queue is created to be able to use the queue.
--   
--   To get the queue URL, use the <tt> GetQueueUrl </tt> action. <tt>
--   GetQueueUrl </tt> requires only the <tt>QueueName</tt> parameter. be
--   aware of existing queue names:
--   
--   <ul>
--   <li>If you provide the name of an existing queue along with the exact
--   names and values of all the queue's attributes, <tt>CreateQueue</tt>
--   returns the queue URL for the existing queue.</li>
--   <li>If the queue name, attribute names, or attribute values don't
--   match an existing queue, <tt>CreateQueue</tt> returns an error.</li>
--   </ul>
--   
--   Some actions take lists of parameters. These lists are specified using
--   the <tt>param.n</tt> notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this:
--   
--   <pre>
--   &amp;AttributeName.1=first
--   </pre>
--   
--   <pre>
--   &amp;AttributeName.2=second
--   </pre>
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
module Network.AWS.SQS.CreateQueue

-- | <i>See:</i> <a>newCreateQueue</a> smart constructor.
data CreateQueue
CreateQueue' :: Maybe (HashMap QueueAttributeName Text) -> Maybe (HashMap Text Text) -> Text -> CreateQueue

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateQueue</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 seconds (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). Default:
--   262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer from
--   60 seconds (1 minute) to 1,209,600 seconds (14 days). Default: 345,600
--   (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Amazon IAM User
--   Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the Amazon Web
--   Services managed CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>,
--   the alias of a custom CMK can, for example, be <tt>alias/MyAlias
--   </tt>. For more examples, see <a>KeyId</a> in the <i>Key Management
--   Service API Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Designates a queue as FIFO. Valid values are
--   <tt>true</tt> and <tt>false</tt>. If you don't specify the
--   <tt>FifoQueue</tt> attribute, Amazon SQS creates a standard queue. You
--   can provide this attribute only during queue creation. You can't
--   change it for an existing queue. When you set this attribute, you must
--   also provide the <tt>MessageGroupId</tt> for your messages
--   explicitly.For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. Valid values are <tt>true</tt> and <tt>false</tt>. For
--   more information, see <a>Exactly-once processing</a> in the <i>Amazon
--   SQS Developer Guide</i>. Note the following:<ul><li>Every message must
--   have a unique <tt>MessageDeduplicationId</tt>.<ul><li>You may provide
--   a <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't
--   able to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:attributes:CreateQueue'] :: CreateQueue -> Maybe (HashMap QueueAttributeName Text)

-- | Add cost allocation tags to the specified Amazon SQS queue. For an
--   overview, see <a>Tagging Your Amazon SQS Queues</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   When you use queue tags, keep the following guidelines in mind:
--   
--   <ul>
--   <li>Adding more than 50 tags to a queue isn't recommended.</li>
--   <li>Tags don't have any semantic meaning. Amazon SQS interprets tags
--   as character strings.</li>
--   <li>Tags are case-sensitive.</li>
--   <li>A new tag with a key identical to that of an existing tag
--   overwrites the existing tag.</li>
--   </ul>
--   
--   For a full list of tag restrictions, see <a>Quotas related to
--   queues</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   To be able to tag a queue on creation, you must have the
--   <tt>sqs:CreateQueue</tt> and <tt>sqs:TagQueue</tt> permissions.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
[$sel:tags:CreateQueue'] :: CreateQueue -> Maybe (HashMap Text Text)

-- | The name of the new queue. The following limits apply to this name:
--   
--   <ul>
--   <li>A queue name can have up to 80 characters.</li>
--   <li>Valid values: alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).</li>
--   <li>A FIFO queue name must end with the <tt>.fifo</tt> suffix.</li>
--   </ul>
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueName:CreateQueue'] :: CreateQueue -> Text

-- | Create a value of <a>CreateQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:CreateQueue'</a>, <a>createQueue_attributes</a> - A
--   map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateQueue</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 seconds (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). Default:
--   262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer from
--   60 seconds (1 minute) to 1,209,600 seconds (14 days). Default: 345,600
--   (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Amazon IAM User
--   Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the Amazon Web
--   Services managed CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>,
--   the alias of a custom CMK can, for example, be <tt>alias/MyAlias
--   </tt>. For more examples, see <a>KeyId</a> in the <i>Key Management
--   Service API Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Designates a queue as FIFO. Valid values are
--   <tt>true</tt> and <tt>false</tt>. If you don't specify the
--   <tt>FifoQueue</tt> attribute, Amazon SQS creates a standard queue. You
--   can provide this attribute only during queue creation. You can't
--   change it for an existing queue. When you set this attribute, you must
--   also provide the <tt>MessageGroupId</tt> for your messages
--   explicitly.For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. Valid values are <tt>true</tt> and <tt>false</tt>. For
--   more information, see <a>Exactly-once processing</a> in the <i>Amazon
--   SQS Developer Guide</i>. Note the following:<ul><li>Every message must
--   have a unique <tt>MessageDeduplicationId</tt>.<ul><li>You may provide
--   a <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't
--   able to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:tags:CreateQueue'</a>, <a>createQueue_tags</a> - Add cost
--   allocation tags to the specified Amazon SQS queue. For an overview,
--   see <a>Tagging Your Amazon SQS Queues</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   When you use queue tags, keep the following guidelines in mind:
--   
--   <ul>
--   <li>Adding more than 50 tags to a queue isn't recommended.</li>
--   <li>Tags don't have any semantic meaning. Amazon SQS interprets tags
--   as character strings.</li>
--   <li>Tags are case-sensitive.</li>
--   <li>A new tag with a key identical to that of an existing tag
--   overwrites the existing tag.</li>
--   </ul>
--   
--   For a full list of tag restrictions, see <a>Quotas related to
--   queues</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   To be able to tag a queue on creation, you must have the
--   <tt>sqs:CreateQueue</tt> and <tt>sqs:TagQueue</tt> permissions.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:queueName:CreateQueue'</a>, <a>createQueue_queueName</a> - The
--   name of the new queue. The following limits apply to this name:
--   
--   <ul>
--   <li>A queue name can have up to 80 characters.</li>
--   <li>Valid values: alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).</li>
--   <li>A FIFO queue name must end with the <tt>.fifo</tt> suffix.</li>
--   </ul>
--   
--   Queue URLs and names are case-sensitive.
newCreateQueue :: Text -> CreateQueue

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateQueue</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 seconds (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). Default:
--   262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer from
--   60 seconds (1 minute) to 1,209,600 seconds (14 days). Default: 345,600
--   (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Amazon IAM User
--   Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the Amazon Web
--   Services managed CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>,
--   the alias of a custom CMK can, for example, be <tt>alias/MyAlias
--   </tt>. For more examples, see <a>KeyId</a> in the <i>Key Management
--   Service API Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Designates a queue as FIFO. Valid values are
--   <tt>true</tt> and <tt>false</tt>. If you don't specify the
--   <tt>FifoQueue</tt> attribute, Amazon SQS creates a standard queue. You
--   can provide this attribute only during queue creation. You can't
--   change it for an existing queue. When you set this attribute, you must
--   also provide the <tt>MessageGroupId</tt> for your messages
--   explicitly.For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. Valid values are <tt>true</tt> and <tt>false</tt>. For
--   more information, see <a>Exactly-once processing</a> in the <i>Amazon
--   SQS Developer Guide</i>. Note the following:<ul><li>Every message must
--   have a unique <tt>MessageDeduplicationId</tt>.<ul><li>You may provide
--   a <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't
--   able to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
createQueue_attributes :: Lens' CreateQueue (Maybe (HashMap QueueAttributeName Text))

-- | Add cost allocation tags to the specified Amazon SQS queue. For an
--   overview, see <a>Tagging Your Amazon SQS Queues</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   When you use queue tags, keep the following guidelines in mind:
--   
--   <ul>
--   <li>Adding more than 50 tags to a queue isn't recommended.</li>
--   <li>Tags don't have any semantic meaning. Amazon SQS interprets tags
--   as character strings.</li>
--   <li>Tags are case-sensitive.</li>
--   <li>A new tag with a key identical to that of an existing tag
--   overwrites the existing tag.</li>
--   </ul>
--   
--   For a full list of tag restrictions, see <a>Quotas related to
--   queues</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   To be able to tag a queue on creation, you must have the
--   <tt>sqs:CreateQueue</tt> and <tt>sqs:TagQueue</tt> permissions.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
createQueue_tags :: Lens' CreateQueue (Maybe (HashMap Text Text))

-- | The name of the new queue. The following limits apply to this name:
--   
--   <ul>
--   <li>A queue name can have up to 80 characters.</li>
--   <li>Valid values: alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).</li>
--   <li>A FIFO queue name must end with the <tt>.fifo</tt> suffix.</li>
--   </ul>
--   
--   Queue URLs and names are case-sensitive.
createQueue_queueName :: Lens' CreateQueue Text

-- | Returns the <tt>QueueUrl</tt> attribute of the created queue.
--   
--   <i>See:</i> <a>newCreateQueueResponse</a> smart constructor.
data CreateQueueResponse
CreateQueueResponse' :: Maybe Text -> Int -> CreateQueueResponse

-- | The URL of the created Amazon SQS queue.
[$sel:queueUrl:CreateQueueResponse'] :: CreateQueueResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateQueueResponse'] :: CreateQueueResponse -> Int

-- | Create a value of <a>CreateQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:CreateQueueResponse'</a>,
--   <a>createQueueResponse_queueUrl</a> - The URL of the created Amazon
--   SQS queue.
--   
--   <a>$sel:httpStatus:CreateQueueResponse'</a>,
--   <a>createQueueResponse_httpStatus</a> - The response's http status
--   code.
newCreateQueueResponse :: Int -> CreateQueueResponse

-- | The URL of the created Amazon SQS queue.
createQueueResponse_queueUrl :: Lens' CreateQueueResponse (Maybe Text)

-- | The response's http status code.
createQueueResponse_httpStatus :: Lens' CreateQueueResponse Int
instance GHC.Generics.Generic Network.AWS.SQS.CreateQueue.CreateQueue
instance GHC.Show.Show Network.AWS.SQS.CreateQueue.CreateQueue
instance GHC.Read.Read Network.AWS.SQS.CreateQueue.CreateQueue
instance GHC.Classes.Eq Network.AWS.SQS.CreateQueue.CreateQueue
instance GHC.Generics.Generic Network.AWS.SQS.CreateQueue.CreateQueueResponse
instance GHC.Show.Show Network.AWS.SQS.CreateQueue.CreateQueueResponse
instance GHC.Read.Read Network.AWS.SQS.CreateQueue.CreateQueueResponse
instance GHC.Classes.Eq Network.AWS.SQS.CreateQueue.CreateQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.CreateQueue.CreateQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.CreateQueue.CreateQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.CreateQueue.CreateQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.CreateQueue.CreateQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.CreateQueue.CreateQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.CreateQueue.CreateQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.CreateQueue.CreateQueue


-- | Changes the visibility timeout of multiple messages. This is a batch
--   version of <tt> ChangeMessageVisibility.</tt> The result of the action
--   on each message is reported individually in the response. You can send
--   up to 10 <tt> ChangeMessageVisibility </tt> requests with each
--   <tt>ChangeMessageVisibilityBatch</tt> action.
--   
--   Because the batch request can result in a combination of successful
--   and unsuccessful actions, you should check for batch errors even when
--   the call returns an HTTP status code of <tt>200</tt>.
--   
--   Some actions take lists of parameters. These lists are specified using
--   the <tt>param.n</tt> notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this:
--   
--   <pre>
--   &amp;AttributeName.1=first
--   </pre>
--   
--   <pre>
--   &amp;AttributeName.2=second
--   </pre>
module Network.AWS.SQS.ChangeMessageVisibilityBatch

-- | <i>See:</i> <a>newChangeMessageVisibilityBatch</a> smart constructor.
data ChangeMessageVisibilityBatch
ChangeMessageVisibilityBatch' :: Text -> [ChangeMessageVisibilityBatchRequestEntry] -> ChangeMessageVisibilityBatch

-- | The URL of the Amazon SQS queue whose messages' visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:ChangeMessageVisibilityBatch'] :: ChangeMessageVisibilityBatch -> Text

-- | A list of receipt handles of the messages for which the visibility
--   timeout must be changed.
[$sel:entries:ChangeMessageVisibilityBatch'] :: ChangeMessageVisibilityBatch -> [ChangeMessageVisibilityBatchRequestEntry]

-- | Create a value of <a>ChangeMessageVisibilityBatch</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:ChangeMessageVisibilityBatch'</a>,
--   <a>changeMessageVisibilityBatch_queueUrl</a> - The URL of the Amazon
--   SQS queue whose messages' visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:entries:ChangeMessageVisibilityBatch'</a>,
--   <a>changeMessageVisibilityBatch_entries</a> - A list of receipt
--   handles of the messages for which the visibility timeout must be
--   changed.
newChangeMessageVisibilityBatch :: Text -> ChangeMessageVisibilityBatch

-- | The URL of the Amazon SQS queue whose messages' visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
changeMessageVisibilityBatch_queueUrl :: Lens' ChangeMessageVisibilityBatch Text

-- | A list of receipt handles of the messages for which the visibility
--   timeout must be changed.
changeMessageVisibilityBatch_entries :: Lens' ChangeMessageVisibilityBatch [ChangeMessageVisibilityBatchRequestEntry]

-- | For each message in the batch, the response contains a <tt>
--   ChangeMessageVisibilityBatchResultEntry </tt> tag if the message
--   succeeds or a <tt> BatchResultErrorEntry </tt> tag if the message
--   fails.
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchResponse</a> smart
--   constructor.
data ChangeMessageVisibilityBatchResponse
ChangeMessageVisibilityBatchResponse' :: Int -> [ChangeMessageVisibilityBatchResultEntry] -> [BatchResultErrorEntry] -> ChangeMessageVisibilityBatchResponse

-- | The response's http status code.
[$sel:httpStatus:ChangeMessageVisibilityBatchResponse'] :: ChangeMessageVisibilityBatchResponse -> Int

-- | A list of <tt> ChangeMessageVisibilityBatchResultEntry </tt> items.
[$sel:successful:ChangeMessageVisibilityBatchResponse'] :: ChangeMessageVisibilityBatchResponse -> [ChangeMessageVisibilityBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items.
[$sel:failed:ChangeMessageVisibilityBatchResponse'] :: ChangeMessageVisibilityBatchResponse -> [BatchResultErrorEntry]

-- | Create a value of <a>ChangeMessageVisibilityBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangeMessageVisibilityBatchResponse'</a>,
--   <a>changeMessageVisibilityBatchResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:successful:ChangeMessageVisibilityBatchResponse'</a>,
--   <a>changeMessageVisibilityBatchResponse_successful</a> - A list of
--   <tt> ChangeMessageVisibilityBatchResultEntry </tt> items.
--   
--   <a>$sel:failed:ChangeMessageVisibilityBatchResponse'</a>,
--   <a>changeMessageVisibilityBatchResponse_failed</a> - A list of <tt>
--   BatchResultErrorEntry </tt> items.
newChangeMessageVisibilityBatchResponse :: Int -> ChangeMessageVisibilityBatchResponse

-- | The response's http status code.
changeMessageVisibilityBatchResponse_httpStatus :: Lens' ChangeMessageVisibilityBatchResponse Int

-- | A list of <tt> ChangeMessageVisibilityBatchResultEntry </tt> items.
changeMessageVisibilityBatchResponse_successful :: Lens' ChangeMessageVisibilityBatchResponse [ChangeMessageVisibilityBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items.
changeMessageVisibilityBatchResponse_failed :: Lens' ChangeMessageVisibilityBatchResponse [BatchResultErrorEntry]
instance GHC.Generics.Generic Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance GHC.Show.Show Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance GHC.Read.Read Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance GHC.Classes.Eq Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance GHC.Generics.Generic Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatchResponse
instance GHC.Show.Show Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatchResponse
instance GHC.Read.Read Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatchResponse
instance GHC.Classes.Eq Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatchResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance Control.DeepSeq.NFData Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatchResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance Control.DeepSeq.NFData Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.ChangeMessageVisibilityBatch.ChangeMessageVisibilityBatch


-- | Changes the visibility timeout of a specified message in a queue to a
--   new value. The default visibility timeout for a message is 30 seconds.
--   The minimum is 0 seconds. The maximum is 12 hours. For more
--   information, see <a>Visibility Timeout</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   For example, you have a message with a visibility timeout of 5
--   minutes. After 3 minutes, you call <tt>ChangeMessageVisibility</tt>
--   with a timeout of 10 minutes. You can continue to call
--   <tt>ChangeMessageVisibility</tt> to extend the visibility timeout to
--   the maximum allowed time. If you try to extend the visibility timeout
--   beyond the maximum, your request is rejected.
--   
--   An Amazon SQS message has three basic states:
--   
--   <ol>
--   <li>Sent to a queue by a producer.</li>
--   <li>Received from the queue by a consumer.</li>
--   <li>Deleted from the queue.</li>
--   </ol>
--   
--   A message is considered to be <i>stored</i> after it is sent to a
--   queue by a producer, but not yet received from the queue by a consumer
--   (that is, between states 1 and 2). There is no limit to the number of
--   stored messages. A message is considered to be <i>in flight</i> after
--   it is received from a queue by a consumer, but not yet deleted from
--   the queue (that is, between states 2 and 3). There is a limit to the
--   number of inflight messages.
--   
--   Limits that apply to inflight messages are unrelated to the
--   <i>unlimited</i> number of stored messages.
--   
--   For most standard queues (depending on queue traffic and message
--   backlog), there can be a maximum of approximately 120,000 inflight
--   messages (received from a queue by a consumer, but not yet deleted
--   from the queue). If you reach this limit, Amazon SQS returns the
--   <tt>OverLimit</tt> error message. To avoid reaching the limit, you
--   should delete messages from the queue after they're processed. You can
--   also increase the number of queues you use to process your messages.
--   To request a limit increase, <a>file a support request</a>.
--   
--   For FIFO queues, there can be a maximum of 20,000 inflight messages
--   (received from a queue by a consumer, but not yet deleted from the
--   queue). If you reach this limit, Amazon SQS returns no error messages.
--   
--   If you attempt to set the <tt>VisibilityTimeout</tt> to a value
--   greater than the maximum time left, Amazon SQS returns an error.
--   Amazon SQS doesn't automatically recalculate and increase the timeout
--   to the maximum remaining time.
--   
--   Unlike with a queue, when you change the visibility timeout for a
--   specific message the timeout value is applied immediately but isn't
--   saved in memory for that message. If you don't delete a message after
--   it is received, the visibility timeout for the message reverts to the
--   original timeout value (not to the value you set using the
--   <tt>ChangeMessageVisibility</tt> action) the next time the message is
--   received.
module Network.AWS.SQS.ChangeMessageVisibility

-- | <i>See:</i> <a>newChangeMessageVisibility</a> smart constructor.
data ChangeMessageVisibility
ChangeMessageVisibility' :: Text -> Text -> Int -> ChangeMessageVisibility

-- | The URL of the Amazon SQS queue whose message's visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:ChangeMessageVisibility'] :: ChangeMessageVisibility -> Text

-- | The receipt handle associated with the message whose visibility
--   timeout is changed. This parameter is returned by the <tt>
--   ReceiveMessage </tt> action.
[$sel:receiptHandle:ChangeMessageVisibility'] :: ChangeMessageVisibility -> Text

-- | The new value for the message's visibility timeout (in seconds).
--   Values range: <tt>0</tt> to <tt>43200</tt>. Maximum: 12 hours.
[$sel:visibilityTimeout:ChangeMessageVisibility'] :: ChangeMessageVisibility -> Int

-- | Create a value of <a>ChangeMessageVisibility</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:ChangeMessageVisibility'</a>,
--   <a>changeMessageVisibility_queueUrl</a> - The URL of the Amazon SQS
--   queue whose message's visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:receiptHandle:ChangeMessageVisibility'</a>,
--   <a>changeMessageVisibility_receiptHandle</a> - The receipt handle
--   associated with the message whose visibility timeout is changed. This
--   parameter is returned by the <tt> ReceiveMessage </tt> action.
--   
--   <a>$sel:visibilityTimeout:ChangeMessageVisibility'</a>,
--   <a>changeMessageVisibility_visibilityTimeout</a> - The new value for
--   the message's visibility timeout (in seconds). Values range:
--   <tt>0</tt> to <tt>43200</tt>. Maximum: 12 hours.
newChangeMessageVisibility :: Text -> Text -> Int -> ChangeMessageVisibility

-- | The URL of the Amazon SQS queue whose message's visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
changeMessageVisibility_queueUrl :: Lens' ChangeMessageVisibility Text

-- | The receipt handle associated with the message whose visibility
--   timeout is changed. This parameter is returned by the <tt>
--   ReceiveMessage </tt> action.
changeMessageVisibility_receiptHandle :: Lens' ChangeMessageVisibility Text

-- | The new value for the message's visibility timeout (in seconds).
--   Values range: <tt>0</tt> to <tt>43200</tt>. Maximum: 12 hours.
changeMessageVisibility_visibilityTimeout :: Lens' ChangeMessageVisibility Int

-- | <i>See:</i> <a>newChangeMessageVisibilityResponse</a> smart
--   constructor.
data ChangeMessageVisibilityResponse
ChangeMessageVisibilityResponse' :: ChangeMessageVisibilityResponse

-- | Create a value of <a>ChangeMessageVisibilityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newChangeMessageVisibilityResponse :: ChangeMessageVisibilityResponse
instance GHC.Generics.Generic Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance GHC.Show.Show Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance GHC.Read.Read Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance GHC.Classes.Eq Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance GHC.Generics.Generic Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibilityResponse
instance GHC.Show.Show Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibilityResponse
instance GHC.Read.Read Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibilityResponse
instance GHC.Classes.Eq Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibilityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance Control.DeepSeq.NFData Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibilityResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance Control.DeepSeq.NFData Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.ChangeMessageVisibility.ChangeMessageVisibility


-- | Adds a permission to a queue for a specific <a>principal</a>. This
--   allows sharing access to the queue.
--   
--   When you create a queue, you have full control access rights for the
--   queue. Only you, the owner of the queue, can grant or deny permissions
--   to the queue. For more information about these permissions, see
--   <a>Allow Developers to Write Messages to a Shared Queue</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   <ul>
--   <li><tt>AddPermission</tt> generates a policy for you. You can use
--   <tt> SetQueueAttributes </tt> to upload your policy. For more
--   information, see <a>Using Custom Policies with the Amazon SQS Access
--   Policy Language</a> in the <i>Amazon SQS Developer Guide</i>.</li>
--   <li>An Amazon SQS policy can have a maximum of 7 actions.</li>
--   <li>To remove the ability to change queue permissions, you must deny
--   permission to the <tt>AddPermission</tt>, <tt>RemovePermission</tt>,
--   and <tt>SetQueueAttributes</tt> actions in your IAM policy.</li>
--   </ul>
--   
--   Some actions take lists of parameters. These lists are specified using
--   the <tt>param.n</tt> notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this:
--   
--   <pre>
--   &amp;AttributeName.1=first
--   </pre>
--   
--   <pre>
--   &amp;AttributeName.2=second
--   </pre>
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
module Network.AWS.SQS.AddPermission

-- | <i>See:</i> <a>newAddPermission</a> smart constructor.
data AddPermission
AddPermission' :: Text -> Text -> [Text] -> [Text] -> AddPermission

-- | The URL of the Amazon SQS queue to which permissions are added.
--   
--   Queue URLs and names are case-sensitive.
[$sel:queueUrl:AddPermission'] :: AddPermission -> Text

-- | The unique identification of the permission you're setting (for
--   example, <tt>AliceSendMessage</tt>). Maximum 80 characters. Allowed
--   characters include alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).
[$sel:label:AddPermission'] :: AddPermission -> Text

-- | The account numbers of the <a>principals</a> who are to receive
--   permission. For information about locating the account identification,
--   see <a>Your Amazon Web Services Identifiers</a> in the <i>Amazon SQS
--   Developer Guide</i>.
[$sel:aWSAccountIds:AddPermission'] :: AddPermission -> [Text]

-- | The action the client wants to allow for the specified principal.
--   Valid values: the name of any action or <tt>*</tt>.
--   
--   For more information about these actions, see <a>Overview of Managing
--   Access Permissions to Your Amazon Simple Queue Service Resource</a> in
--   the <i>Amazon SQS Developer Guide</i>.
--   
--   Specifying <tt>SendMessage</tt>, <tt>DeleteMessage</tt>, or
--   <tt>ChangeMessageVisibility</tt> for <tt>ActionName.n</tt> also grants
--   permissions for the corresponding batch versions of those actions:
--   <tt>SendMessageBatch</tt>, <tt>DeleteMessageBatch</tt>, and
--   <tt>ChangeMessageVisibilityBatch</tt>.
[$sel:actions:AddPermission'] :: AddPermission -> [Text]

-- | Create a value of <a>AddPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:AddPermission'</a>, <a>addPermission_queueUrl</a> -
--   The URL of the Amazon SQS queue to which permissions are added.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:label:AddPermission'</a>, <a>addPermission_label</a> - The
--   unique identification of the permission you're setting (for example,
--   <tt>AliceSendMessage</tt>). Maximum 80 characters. Allowed characters
--   include alphanumeric characters, hyphens (<tt>-</tt>), and underscores
--   (<tt>_</tt>).
--   
--   <a>$sel:aWSAccountIds:AddPermission'</a>,
--   <a>addPermission_aWSAccountIds</a> - The account numbers of the
--   <a>principals</a> who are to receive permission. For information about
--   locating the account identification, see <a>Your Amazon Web Services
--   Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:actions:AddPermission'</a>, <a>addPermission_actions</a> - The
--   action the client wants to allow for the specified principal. Valid
--   values: the name of any action or <tt>*</tt>.
--   
--   For more information about these actions, see <a>Overview of Managing
--   Access Permissions to Your Amazon Simple Queue Service Resource</a> in
--   the <i>Amazon SQS Developer Guide</i>.
--   
--   Specifying <tt>SendMessage</tt>, <tt>DeleteMessage</tt>, or
--   <tt>ChangeMessageVisibility</tt> for <tt>ActionName.n</tt> also grants
--   permissions for the corresponding batch versions of those actions:
--   <tt>SendMessageBatch</tt>, <tt>DeleteMessageBatch</tt>, and
--   <tt>ChangeMessageVisibilityBatch</tt>.
newAddPermission :: Text -> Text -> AddPermission

-- | The URL of the Amazon SQS queue to which permissions are added.
--   
--   Queue URLs and names are case-sensitive.
addPermission_queueUrl :: Lens' AddPermission Text

-- | The unique identification of the permission you're setting (for
--   example, <tt>AliceSendMessage</tt>). Maximum 80 characters. Allowed
--   characters include alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).
addPermission_label :: Lens' AddPermission Text

-- | The account numbers of the <a>principals</a> who are to receive
--   permission. For information about locating the account identification,
--   see <a>Your Amazon Web Services Identifiers</a> in the <i>Amazon SQS
--   Developer Guide</i>.
addPermission_aWSAccountIds :: Lens' AddPermission [Text]

-- | The action the client wants to allow for the specified principal.
--   Valid values: the name of any action or <tt>*</tt>.
--   
--   For more information about these actions, see <a>Overview of Managing
--   Access Permissions to Your Amazon Simple Queue Service Resource</a> in
--   the <i>Amazon SQS Developer Guide</i>.
--   
--   Specifying <tt>SendMessage</tt>, <tt>DeleteMessage</tt>, or
--   <tt>ChangeMessageVisibility</tt> for <tt>ActionName.n</tt> also grants
--   permissions for the corresponding batch versions of those actions:
--   <tt>SendMessageBatch</tt>, <tt>DeleteMessageBatch</tt>, and
--   <tt>ChangeMessageVisibilityBatch</tt>.
addPermission_actions :: Lens' AddPermission [Text]

-- | <i>See:</i> <a>newAddPermissionResponse</a> smart constructor.
data AddPermissionResponse
AddPermissionResponse' :: AddPermissionResponse

-- | Create a value of <a>AddPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAddPermissionResponse :: AddPermissionResponse
instance GHC.Generics.Generic Network.AWS.SQS.AddPermission.AddPermission
instance GHC.Show.Show Network.AWS.SQS.AddPermission.AddPermission
instance GHC.Read.Read Network.AWS.SQS.AddPermission.AddPermission
instance GHC.Classes.Eq Network.AWS.SQS.AddPermission.AddPermission
instance GHC.Generics.Generic Network.AWS.SQS.AddPermission.AddPermissionResponse
instance GHC.Show.Show Network.AWS.SQS.AddPermission.AddPermissionResponse
instance GHC.Read.Read Network.AWS.SQS.AddPermission.AddPermissionResponse
instance GHC.Classes.Eq Network.AWS.SQS.AddPermission.AddPermissionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.AddPermission.AddPermission
instance Control.DeepSeq.NFData Network.AWS.SQS.AddPermission.AddPermissionResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.AddPermission.AddPermission
instance Control.DeepSeq.NFData Network.AWS.SQS.AddPermission.AddPermission
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.AddPermission.AddPermission
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.AddPermission.AddPermission
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.AddPermission.AddPermission


-- | Remove cost allocation tags from the specified Amazon SQS queue. For
--   an overview, see <a>Tagging Your Amazon SQS Queues</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
module Network.AWS.SQS.UntagQueue

-- | <i>See:</i> <a>newUntagQueue</a> smart constructor.
data UntagQueue
UntagQueue' :: Text -> [Text] -> UntagQueue

-- | The URL of the queue.
[$sel:queueUrl:UntagQueue'] :: UntagQueue -> Text

-- | The list of tags to be removed from the specified queue.
[$sel:tagKeys:UntagQueue'] :: UntagQueue -> [Text]

-- | Create a value of <a>UntagQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:UntagQueue'</a>, <a>untagQueue_queueUrl</a> - The URL
--   of the queue.
--   
--   <a>$sel:tagKeys:UntagQueue'</a>, <a>untagQueue_tagKeys</a> - The list
--   of tags to be removed from the specified queue.
newUntagQueue :: Text -> UntagQueue

-- | The URL of the queue.
untagQueue_queueUrl :: Lens' UntagQueue Text

-- | The list of tags to be removed from the specified queue.
untagQueue_tagKeys :: Lens' UntagQueue [Text]

-- | <i>See:</i> <a>newUntagQueueResponse</a> smart constructor.
data UntagQueueResponse
UntagQueueResponse' :: UntagQueueResponse

-- | Create a value of <a>UntagQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagQueueResponse :: UntagQueueResponse
instance GHC.Generics.Generic Network.AWS.SQS.UntagQueue.UntagQueue
instance GHC.Show.Show Network.AWS.SQS.UntagQueue.UntagQueue
instance GHC.Read.Read Network.AWS.SQS.UntagQueue.UntagQueue
instance GHC.Classes.Eq Network.AWS.SQS.UntagQueue.UntagQueue
instance GHC.Generics.Generic Network.AWS.SQS.UntagQueue.UntagQueueResponse
instance GHC.Show.Show Network.AWS.SQS.UntagQueue.UntagQueueResponse
instance GHC.Read.Read Network.AWS.SQS.UntagQueue.UntagQueueResponse
instance GHC.Classes.Eq Network.AWS.SQS.UntagQueue.UntagQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SQS.UntagQueue.UntagQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.UntagQueue.UntagQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.SQS.UntagQueue.UntagQueue
instance Control.DeepSeq.NFData Network.AWS.SQS.UntagQueue.UntagQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SQS.UntagQueue.UntagQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.SQS.UntagQueue.UntagQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SQS.UntagQueue.UntagQueue


module Network.AWS.SQS.Lens

-- | The URL of the Amazon SQS queue whose messages' visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
changeMessageVisibilityBatch_queueUrl :: Lens' ChangeMessageVisibilityBatch Text

-- | A list of receipt handles of the messages for which the visibility
--   timeout must be changed.
changeMessageVisibilityBatch_entries :: Lens' ChangeMessageVisibilityBatch [ChangeMessageVisibilityBatchRequestEntry]

-- | The response's http status code.
changeMessageVisibilityBatchResponse_httpStatus :: Lens' ChangeMessageVisibilityBatchResponse Int

-- | A list of <tt> ChangeMessageVisibilityBatchResultEntry </tt> items.
changeMessageVisibilityBatchResponse_successful :: Lens' ChangeMessageVisibilityBatchResponse [ChangeMessageVisibilityBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items.
changeMessageVisibilityBatchResponse_failed :: Lens' ChangeMessageVisibilityBatchResponse [BatchResultErrorEntry]

-- | The URL of the queue from which the <tt>PurgeQueue</tt> action deletes
--   messages.
--   
--   Queue URLs and names are case-sensitive.
purgeQueue_queueUrl :: Lens' PurgeQueue Text

-- | The URL of the queue.
tagQueue_queueUrl :: Lens' TagQueue Text

-- | The list of tags to be added to the specified queue.
tagQueue_tags :: Lens' TagQueue (HashMap Text Text)

-- | The URL of the Amazon SQS queue whose message's visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
changeMessageVisibility_queueUrl :: Lens' ChangeMessageVisibility Text

-- | The receipt handle associated with the message whose visibility
--   timeout is changed. This parameter is returned by the <tt>
--   ReceiveMessage </tt> action.
changeMessageVisibility_receiptHandle :: Lens' ChangeMessageVisibility Text

-- | The new value for the message's visibility timeout (in seconds).
--   Values range: <tt>0</tt> to <tt>43200</tt>. Maximum: 12 hours.
changeMessageVisibility_visibilityTimeout :: Lens' ChangeMessageVisibility Int

-- | A list of attributes for which to retrieve information.
--   
--   The <tt>AttributeName.N</tt> parameter is optional, but if you don't
--   specify values for this parameter, the request returns empty results.
--   
--   In the future, new attributes might be added. If you write code that
--   calls this action, we recommend that you structure your code so that
--   it can handle new attributes gracefully.
--   
--   The following attributes are supported:
--   
--   The <tt>ApproximateNumberOfMessagesDelayed</tt>,
--   <tt>ApproximateNumberOfMessagesNotVisible</tt>, and
--   <tt>ApproximateNumberOfMessagesVisible</tt> metrics may not achieve
--   consistency until at least 1 minute after the producers stop sending
--   messages. This period is required for the queue metadata to reach
--   eventual consistency.
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateNumberOfMessages</tt> – Returns the approximate
--   number of messages available for retrieval from the queue.</li>
--   <li><tt>ApproximateNumberOfMessagesDelayed</tt> – Returns the
--   approximate number of messages in the queue that are delayed and not
--   available for reading immediately. This can happen when the queue is
--   configured as a delay queue or when a message has been sent with a
--   delay parameter.</li>
--   <li><tt>ApproximateNumberOfMessagesNotVisible</tt> – Returns the
--   approximate number of messages that are in flight. Messages are
--   considered to be <i>in flight</i> if they have been sent to a client
--   but have not yet been deleted or have not yet reached the end of their
--   visibility window.</li>
--   <li><tt>CreatedTimestamp</tt> – Returns the time when the queue was
--   created in seconds (<a>epoch time</a>).</li>
--   <li><tt>DelaySeconds</tt> – Returns the default delay on the queue in
--   seconds.</li>
--   <li><tt>LastModifiedTimestamp</tt> – Returns the time when the queue
--   was last changed in seconds (<a>epoch time</a>).</li>
--   <li><tt>MaximumMessageSize</tt> – Returns the limit of how many bytes
--   a message can contain before Amazon SQS rejects it.</li>
--   <li><tt>MessageRetentionPeriod</tt> – Returns the length of time, in
--   seconds, for which Amazon SQS retains a message.</li>
--   <li><tt>Policy</tt> – Returns the policy of the queue.</li>
--   <li><tt>QueueArn</tt> – Returns the Amazon resource name (ARN) of the
--   queue.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – Returns the length of
--   time, in seconds, for which the <tt>ReceiveMessage</tt> action waits
--   for a message to arrive.</li>
--   <li><tt>VisibilityTimeout</tt> – Returns the visibility timeout for
--   the queue. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – Returns the ID of an Amazon Web Services
--   managed customer master key (CMK) for Amazon SQS or a custom CMK. For
--   more information, see <a>Key Terms</a>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – Returns the length of
--   time, in seconds, for which Amazon SQS can reuse a data key to encrypt
--   or decrypt messages before calling KMS again. For more information,
--   see <a>How Does the Data Key Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Returns information about whether the queue
--   is FIFO. For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.To determine whether a queue is
--   <a>FIFO</a>, you can check whether <tt>QueueName</tt> ends with the
--   <tt>.fifo</tt> suffix.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Returns whether content-based
--   deduplication is enabled for the queue. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
getQueueAttributes_attributeNames :: Lens' GetQueueAttributes (Maybe [QueueAttributeName])

-- | The URL of the Amazon SQS queue whose attribute information is
--   retrieved.
--   
--   Queue URLs and names are case-sensitive.
getQueueAttributes_queueUrl :: Lens' GetQueueAttributes Text

-- | A map of attributes to their respective values.
getQueueAttributesResponse_attributes :: Lens' GetQueueAttributesResponse (Maybe (HashMap QueueAttributeName Text))

-- | The response's http status code.
getQueueAttributesResponse_httpStatus :: Lens' GetQueueAttributesResponse Int

-- | Pagination token to request the next set of results.
listQueues_nextToken :: Lens' ListQueues (Maybe Text)

-- | A string to use for filtering the list results. Only those queues
--   whose name begins with the specified string are returned.
--   
--   Queue URLs and names are case-sensitive.
listQueues_queueNamePrefix :: Lens' ListQueues (Maybe Text)

-- | Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
listQueues_maxResults :: Lens' ListQueues (Maybe Int)

-- | Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
listQueuesResponse_nextToken :: Lens' ListQueuesResponse (Maybe Text)

-- | A list of queue URLs, up to 1,000 entries, or the value of MaxResults
--   that you sent in the request.
listQueuesResponse_queueUrls :: Lens' ListQueuesResponse (Maybe [Text])

-- | The response's http status code.
listQueuesResponse_httpStatus :: Lens' ListQueuesResponse Int

-- | The duration (in seconds) that the received messages are hidden from
--   subsequent retrieve requests after being retrieved by a
--   <tt>ReceiveMessage</tt> request.
receiveMessage_visibilityTimeout :: Lens' ReceiveMessage (Maybe Int)

-- | The maximum number of messages to return. Amazon SQS never returns
--   more messages than this value (however, fewer messages might be
--   returned). Valid values: 1 to 10. Default: 1.
receiveMessage_maxNumberOfMessages :: Lens' ReceiveMessage (Maybe Int)

-- | The name of the message attribute, where <i>N</i> is the index.
--   
--   <ul>
--   <li>The name can contain alphanumeric characters and the underscore
--   (<tt>_</tt>), hyphen (<tt>-</tt>), and period (<tt>.</tt>).</li>
--   <li>The name is case-sensitive and must be unique among all attribute
--   names for the message.</li>
--   <li>The name must not start with AWS-reserved prefixes such as
--   <tt>AWS.</tt> or <tt>Amazon.</tt> (or any casing variants).</li>
--   <li>The name must not start or end with a period (<tt>.</tt>), and it
--   should not have periods in succession (<tt>..</tt>).</li>
--   <li>The name can be up to 256 characters long.</li>
--   </ul>
--   
--   When using <tt>ReceiveMessage</tt>, you can send a list of attribute
--   names to receive, or you can return all of the attributes by
--   specifying <tt>All</tt> or <tt>.*</tt> in your request. You can also
--   use all message attributes starting with a prefix, for example
--   <tt>bar.*</tt>.
receiveMessage_messageAttributeNames :: Lens' ReceiveMessage (Maybe [Text])

-- | A list of attributes that need to be returned along with each message.
--   These attributes include:
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateFirstReceiveTimestamp</tt> – Returns the time the
--   message was first received from the queue (<a>epoch time</a> in
--   milliseconds).</li>
--   <li><tt>ApproximateReceiveCount</tt> – Returns the number of times a
--   message has been received across all queues but not deleted.</li>
--   <li><tt>AWSTraceHeader</tt> – Returns the X-Ray trace header
--   string.</li>
--   <li><pre>SenderId</pre><ul><li>For an IAM user, returns the IAM user
--   ID, for example <tt>ABCDEFGHI1JKLMNOPQ23R</tt>.</li><li>For an IAM
--   role, returns the IAM role ID, for example
--   <tt>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</tt>.</li></ul></li>
--   <li><tt>SentTimestamp</tt> – Returns the time the message was sent to
--   the queue (<a>epoch time</a> in milliseconds).</li>
--   <li><tt>MessageDeduplicationId</tt> – Returns the value provided by
--   the producer that calls the <tt> SendMessage </tt> action.</li>
--   <li><tt>MessageGroupId</tt> – Returns the value provided by the
--   producer that calls the <tt> SendMessage </tt> action. Messages with
--   the same <tt>MessageGroupId</tt> are returned in sequence.</li>
--   <li><tt>SequenceNumber</tt> – Returns the value provided by Amazon
--   SQS.</li>
--   </ul>
receiveMessage_attributeNames :: Lens' ReceiveMessage (Maybe [MessageAttribute])

-- | The duration (in seconds) for which the call waits for a message to
--   arrive in the queue before returning. If a message is available, the
--   call returns sooner than <tt>WaitTimeSeconds</tt>. If no messages are
--   available and the wait time expires, the call returns successfully
--   with an empty list of messages.
--   
--   To avoid HTTP errors, ensure that the HTTP response timeout for
--   <tt>ReceiveMessage</tt> requests is longer than the
--   <tt>WaitTimeSeconds</tt> parameter. For example, with the Java SDK,
--   you can set HTTP transport settings using the
--   <a>NettyNioAsyncHttpClient</a> for asynchronous clients, or the
--   <a>ApacheHttpClient</a> for synchronous clients.
receiveMessage_waitTimeSeconds :: Lens' ReceiveMessage (Maybe Int)

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of <tt>ReceiveMessage</tt> calls. If
--   a networking issue occurs after a <tt>ReceiveMessage</tt> action, and
--   instead of a response you receive a generic error, it is possible to
--   retry the same action with an identical
--   <tt>ReceiveRequestAttemptId</tt> to retrieve the same set of messages,
--   even if their visibility timeout has not yet expired.
--   
--   <ul>
--   <li>You can use <tt>ReceiveRequestAttemptId</tt> only for 5 minutes
--   after a <tt>ReceiveMessage</tt> action.</li>
--   <li>When you set <tt>FifoQueue</tt>, a caller of the
--   <tt>ReceiveMessage</tt> action can provide a
--   <tt>ReceiveRequestAttemptId</tt> explicitly.</li>
--   <li>If a caller of the <tt>ReceiveMessage</tt> action doesn't provide
--   a <tt>ReceiveRequestAttemptId</tt>, Amazon SQS generates a
--   <tt>ReceiveRequestAttemptId</tt>.</li>
--   <li>It is possible to retry the <tt>ReceiveMessage</tt> action with
--   the same <tt>ReceiveRequestAttemptId</tt> if none of the messages have
--   been modified (deleted or had their visibility changes).</li>
--   <li>During a visibility timeout, subsequent calls with the same
--   <tt>ReceiveRequestAttemptId</tt> return the same messages and receipt
--   handles. If a retry occurs within the deduplication interval, it
--   resets the visibility timeout. For more information, see <a>Visibility
--   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.If a caller of
--   the <tt>ReceiveMessage</tt> action still processes messages when the
--   visibility timeout expires and messages become visible, another worker
--   consuming from the same queue can receive the same messages and
--   therefore process duplicates. Also, if a consumer whose message
--   processing time is longer than the visibility timeout tries to delete
--   the processed messages, the action fails with an error.To mitigate
--   this effect, ensure that your application observes a safe threshold
--   before the visibility timeout expires and extend the visibility
--   timeout as necessary.</li>
--   <li>While messages with a particular <tt>MessageGroupId</tt> are
--   invisible, no more messages belonging to the same
--   <tt>MessageGroupId</tt> are returned until the visibility timeout
--   expires. You can still receive messages with another
--   <tt>MessageGroupId</tt> as long as it is also visible.</li>
--   <li>If a caller of <tt>ReceiveMessage</tt> can't track the
--   <tt>ReceiveRequestAttemptId</tt>, no retries work until the original
--   visibility timeout expires. As a result, delays might occur but the
--   messages in the queue remain in a strict order.</li>
--   </ul>
--   
--   The maximum length of <tt>ReceiveRequestAttemptId</tt> is 128
--   characters. <tt>ReceiveRequestAttemptId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>ReceiveRequestAttemptId</tt>, see
--   <a>Using the ReceiveRequestAttemptId Request Parameter</a> in the
--   <i>Amazon SQS Developer Guide</i>.
receiveMessage_receiveRequestAttemptId :: Lens' ReceiveMessage (Maybe Text)

-- | The URL of the Amazon SQS queue from which messages are received.
--   
--   Queue URLs and names are case-sensitive.
receiveMessage_queueUrl :: Lens' ReceiveMessage Text

-- | A list of messages.
receiveMessageResponse_messages :: Lens' ReceiveMessageResponse (Maybe [Message])

-- | The response's http status code.
receiveMessageResponse_httpStatus :: Lens' ReceiveMessageResponse Int

-- | The URL of the Amazon SQS queue to which permissions are added.
--   
--   Queue URLs and names are case-sensitive.
addPermission_queueUrl :: Lens' AddPermission Text

-- | The unique identification of the permission you're setting (for
--   example, <tt>AliceSendMessage</tt>). Maximum 80 characters. Allowed
--   characters include alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).
addPermission_label :: Lens' AddPermission Text

-- | The account numbers of the <a>principals</a> who are to receive
--   permission. For information about locating the account identification,
--   see <a>Your Amazon Web Services Identifiers</a> in the <i>Amazon SQS
--   Developer Guide</i>.
addPermission_aWSAccountIds :: Lens' AddPermission [Text]

-- | The action the client wants to allow for the specified principal.
--   Valid values: the name of any action or <tt>*</tt>.
--   
--   For more information about these actions, see <a>Overview of Managing
--   Access Permissions to Your Amazon Simple Queue Service Resource</a> in
--   the <i>Amazon SQS Developer Guide</i>.
--   
--   Specifying <tt>SendMessage</tt>, <tt>DeleteMessage</tt>, or
--   <tt>ChangeMessageVisibility</tt> for <tt>ActionName.n</tt> also grants
--   permissions for the corresponding batch versions of those actions:
--   <tt>SendMessageBatch</tt>, <tt>DeleteMessageBatch</tt>, and
--   <tt>ChangeMessageVisibilityBatch</tt>.
addPermission_actions :: Lens' AddPermission [Text]

-- | The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
deleteMessage_queueUrl :: Lens' DeleteMessage Text

-- | The receipt handle associated with the message to delete.
deleteMessage_receiptHandle :: Lens' DeleteMessage Text

-- | The URL of the queue.
listQueueTags_queueUrl :: Lens' ListQueueTags Text

-- | The list of all tags added to the specified queue.
listQueueTagsResponse_tags :: Lens' ListQueueTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listQueueTagsResponse_httpStatus :: Lens' ListQueueTagsResponse Int

-- | Pagination token to request the next set of results.
listDeadLetterSourceQueues_nextToken :: Lens' ListDeadLetterSourceQueues (Maybe Text)

-- | Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
listDeadLetterSourceQueues_maxResults :: Lens' ListDeadLetterSourceQueues (Maybe Int)

-- | The URL of a dead-letter queue.
--   
--   Queue URLs and names are case-sensitive.
listDeadLetterSourceQueues_queueUrl :: Lens' ListDeadLetterSourceQueues Text

-- | Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
listDeadLetterSourceQueuesResponse_nextToken :: Lens' ListDeadLetterSourceQueuesResponse (Maybe Text)

-- | The response's http status code.
listDeadLetterSourceQueuesResponse_httpStatus :: Lens' ListDeadLetterSourceQueuesResponse Int

-- | A list of source queue URLs that have the <tt>RedrivePolicy</tt> queue
--   attribute configured with a dead-letter queue.
listDeadLetterSourceQueuesResponse_queueUrls :: Lens' ListDeadLetterSourceQueuesResponse [Text]

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of sent messages. If a message with a
--   particular <tt>MessageDeduplicationId</tt> is sent successfully, any
--   messages sent with the same <tt>MessageDeduplicationId</tt> are
--   accepted successfully but aren't delivered during the 5-minute
--   deduplication interval. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The maximum length of <tt>MessageDeduplicationId</tt> is 128
--   characters. <tt>MessageDeduplicationId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
sendMessage_messageDeduplicationId :: Lens' SendMessage (Maybe Text)

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
sendMessage_messageAttributes :: Lens' SendMessage (Maybe (HashMap Text MessageAttributeValue))

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
sendMessage_messageGroupId :: Lens' SendMessage (Maybe Text)

-- | The message system attribute to send. Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
sendMessage_messageSystemAttributes :: Lens' SendMessage (Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue))

-- | The length of time, in seconds, for which to delay a specific message.
--   Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive
--   <tt>DelaySeconds</tt> value become available for processing after the
--   delay period is finished. If you don't specify a value, the default
--   value for the queue applies.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
sendMessage_delaySeconds :: Lens' SendMessage (Maybe Int)

-- | The URL of the Amazon SQS queue to which a message is sent.
--   
--   Queue URLs and names are case-sensitive.
sendMessage_queueUrl :: Lens' SendMessage Text

-- | The message to send. The minimum size is one character. The maximum
--   size is 256 KB.
--   
--   A message can include only XML, JSON, and unformatted text. The
--   following Unicode characters are allowed:
--   
--   <tt>#x9</tt> | <tt>#xA</tt> | <tt>#xD</tt> | <tt>#x20</tt> to
--   <tt>#xD7FF</tt> | <tt>#xE000</tt> to <tt>#xFFFD</tt> |
--   <tt>#x10000</tt> to <tt>#x10FFFF</tt>
--   
--   Any characters not included in this list will be rejected. For more
--   information, see the <a>W3C specification for characters</a>.
sendMessage_messageBody :: Lens' SendMessage Text

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits.
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
sendMessageResponse_sequenceNumber :: Lens' SendMessageResponse (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageResponse_mD5OfMessageBody :: Lens' SendMessageResponse (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest.
sendMessageResponse_mD5OfMessageSystemAttributes :: Lens' SendMessageResponse (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageResponse_mD5OfMessageAttributes :: Lens' SendMessageResponse (Maybe Text)

-- | An attribute containing the <tt>MessageId</tt> of the message sent to
--   the queue. For more information, see <a>Queue and Message
--   Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
sendMessageResponse_messageId :: Lens' SendMessageResponse (Maybe Text)

-- | The response's http status code.
sendMessageResponse_httpStatus :: Lens' SendMessageResponse Int

-- | The account ID of the account that created the queue.
getQueueUrl_queueOwnerAWSAccountId :: Lens' GetQueueUrl (Maybe Text)

-- | The name of the queue whose URL must be fetched. Maximum 80
--   characters. Valid values: alphanumeric characters, hyphens
--   (<tt>-</tt>), and underscores (<tt>_</tt>).
--   
--   Queue URLs and names are case-sensitive.
getQueueUrl_queueName :: Lens' GetQueueUrl Text

-- | The response's http status code.
getQueueUrlResponse_httpStatus :: Lens' GetQueueUrlResponse Int

-- | The URL of the queue.
getQueueUrlResponse_queueUrl :: Lens' GetQueueUrlResponse Text

-- | The URL of the Amazon SQS queue whose attributes are set.
--   
--   Queue URLs and names are case-sensitive.
setQueueAttributes_queueUrl :: Lens' SetQueueAttributes Text

-- | A map of attributes to set.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetQueueAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB).
--   Default: 262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer
--   representing seconds, from 60 (1 minute) to 1,209,600 (14 days).
--   Default: 345,600 (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Identity and Access
--   Management User Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the AWS-managed
--   CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>, the alias of a
--   custom CMK can, for example, be <tt>alias/MyAlias </tt>. For more
--   examples, see <a>KeyId</a> in the <i>Key Management Service API
--   Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>. Note the
--   following:<ul><li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>.<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
setQueueAttributes_attributes :: Lens' SetQueueAttributes (HashMap QueueAttributeName Text)

-- | The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
deleteMessageBatch_queueUrl :: Lens' DeleteMessageBatch Text

-- | A list of receipt handles for the messages to be deleted.
deleteMessageBatch_entries :: Lens' DeleteMessageBatch [DeleteMessageBatchRequestEntry]

-- | The response's http status code.
deleteMessageBatchResponse_httpStatus :: Lens' DeleteMessageBatchResponse Int

-- | A list of <tt> DeleteMessageBatchResultEntry </tt> items.
deleteMessageBatchResponse_successful :: Lens' DeleteMessageBatchResponse [DeleteMessageBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items.
deleteMessageBatchResponse_failed :: Lens' DeleteMessageBatchResponse [BatchResultErrorEntry]

-- | The URL of the Amazon SQS queue to which batched messages are sent.
--   
--   Queue URLs and names are case-sensitive.
sendMessageBatch_queueUrl :: Lens' SendMessageBatch Text

-- | A list of <tt> SendMessageBatchRequestEntry </tt> items.
sendMessageBatch_entries :: Lens' SendMessageBatch [SendMessageBatchRequestEntry]

-- | The response's http status code.
sendMessageBatchResponse_httpStatus :: Lens' SendMessageBatchResponse Int

-- | A list of <tt> SendMessageBatchResultEntry </tt> items.
sendMessageBatchResponse_successful :: Lens' SendMessageBatchResponse [SendMessageBatchResultEntry]

-- | A list of <tt> BatchResultErrorEntry </tt> items with error details
--   about each message that can't be enqueued.
sendMessageBatchResponse_failed :: Lens' SendMessageBatchResponse [BatchResultErrorEntry]

-- | The URL of the queue.
untagQueue_queueUrl :: Lens' UntagQueue Text

-- | The list of tags to be removed from the specified queue.
untagQueue_tagKeys :: Lens' UntagQueue [Text]

-- | The URL of the Amazon SQS queue to delete.
--   
--   Queue URLs and names are case-sensitive.
deleteQueue_queueUrl :: Lens' DeleteQueue Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateQueue</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 seconds (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). Default:
--   262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer from
--   60 seconds (1 minute) to 1,209,600 seconds (14 days). Default: 345,600
--   (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Amazon IAM User
--   Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the Amazon Web
--   Services managed CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>,
--   the alias of a custom CMK can, for example, be <tt>alias/MyAlias
--   </tt>. For more examples, see <a>KeyId</a> in the <i>Key Management
--   Service API Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Designates a queue as FIFO. Valid values are
--   <tt>true</tt> and <tt>false</tt>. If you don't specify the
--   <tt>FifoQueue</tt> attribute, Amazon SQS creates a standard queue. You
--   can provide this attribute only during queue creation. You can't
--   change it for an existing queue. When you set this attribute, you must
--   also provide the <tt>MessageGroupId</tt> for your messages
--   explicitly.For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. Valid values are <tt>true</tt> and <tt>false</tt>. For
--   more information, see <a>Exactly-once processing</a> in the <i>Amazon
--   SQS Developer Guide</i>. Note the following:<ul><li>Every message must
--   have a unique <tt>MessageDeduplicationId</tt>.<ul><li>You may provide
--   a <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't
--   able to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
createQueue_attributes :: Lens' CreateQueue (Maybe (HashMap QueueAttributeName Text))

-- | Add cost allocation tags to the specified Amazon SQS queue. For an
--   overview, see <a>Tagging Your Amazon SQS Queues</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   When you use queue tags, keep the following guidelines in mind:
--   
--   <ul>
--   <li>Adding more than 50 tags to a queue isn't recommended.</li>
--   <li>Tags don't have any semantic meaning. Amazon SQS interprets tags
--   as character strings.</li>
--   <li>Tags are case-sensitive.</li>
--   <li>A new tag with a key identical to that of an existing tag
--   overwrites the existing tag.</li>
--   </ul>
--   
--   For a full list of tag restrictions, see <a>Quotas related to
--   queues</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   To be able to tag a queue on creation, you must have the
--   <tt>sqs:CreateQueue</tt> and <tt>sqs:TagQueue</tt> permissions.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
createQueue_tags :: Lens' CreateQueue (Maybe (HashMap Text Text))

-- | The name of the new queue. The following limits apply to this name:
--   
--   <ul>
--   <li>A queue name can have up to 80 characters.</li>
--   <li>Valid values: alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).</li>
--   <li>A FIFO queue name must end with the <tt>.fifo</tt> suffix.</li>
--   </ul>
--   
--   Queue URLs and names are case-sensitive.
createQueue_queueName :: Lens' CreateQueue Text

-- | The URL of the created Amazon SQS queue.
createQueueResponse_queueUrl :: Lens' CreateQueueResponse (Maybe Text)

-- | The response's http status code.
createQueueResponse_httpStatus :: Lens' CreateQueueResponse Int

-- | The URL of the Amazon SQS queue from which permissions are removed.
--   
--   Queue URLs and names are case-sensitive.
removePermission_queueUrl :: Lens' RemovePermission Text

-- | The identification of the permission to remove. This is the label
--   added using the <tt> AddPermission </tt> action.
removePermission_label :: Lens' RemovePermission Text

-- | A message explaining why the action failed on this entry.
batchResultErrorEntry_message :: Lens' BatchResultErrorEntry (Maybe Text)

-- | The <tt>Id</tt> of an entry in a batch request.
batchResultErrorEntry_id :: Lens' BatchResultErrorEntry Text

-- | Specifies whether the error happened due to the caller of the batch
--   API action.
batchResultErrorEntry_senderFault :: Lens' BatchResultErrorEntry Bool

-- | An error code representing why the action failed on this entry.
batchResultErrorEntry_code :: Lens' BatchResultErrorEntry Text

-- | The new value (in seconds) for the message's visibility timeout.
changeMessageVisibilityBatchRequestEntry_visibilityTimeout :: Lens' ChangeMessageVisibilityBatchRequestEntry (Maybe Int)

-- | An identifier for this particular receipt handle used to communicate
--   the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
changeMessageVisibilityBatchRequestEntry_id :: Lens' ChangeMessageVisibilityBatchRequestEntry Text

-- | A receipt handle.
changeMessageVisibilityBatchRequestEntry_receiptHandle :: Lens' ChangeMessageVisibilityBatchRequestEntry Text

-- | Represents a message whose visibility timeout has been changed
--   successfully.
changeMessageVisibilityBatchResultEntry_id :: Lens' ChangeMessageVisibilityBatchResultEntry Text

-- | An identifier for this particular receipt handle. This is used to
--   communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
deleteMessageBatchRequestEntry_id :: Lens' DeleteMessageBatchRequestEntry Text

-- | A receipt handle.
deleteMessageBatchRequestEntry_receiptHandle :: Lens' DeleteMessageBatchRequestEntry Text

-- | Represents a successfully deleted message.
deleteMessageBatchResultEntry_id :: Lens' DeleteMessageBatchResultEntry Text

-- | The message's contents (not URL-encoded).
message_body :: Lens' Message (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string.
message_mD5OfBody :: Lens' Message (Maybe Text)

-- | A map of the attributes requested in <tt> ReceiveMessage </tt> to
--   their respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
message_attributes :: Lens' Message (Maybe (HashMap MessageAttribute Text))

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
message_messageAttributes :: Lens' Message (Maybe (HashMap Text MessageAttributeValue))

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
message_mD5OfMessageAttributes :: Lens' Message (Maybe Text)

-- | An identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
message_receiptHandle :: Lens' Message (Maybe Text)

-- | A unique identifier for the message. A <tt>MessageId</tt>is considered
--   unique across all accounts for an extended period of time.
message_messageId :: Lens' Message (Maybe Text)

-- | Not implemented. Reserved for future use.
messageAttributeValue_stringListValues :: Lens' MessageAttributeValue (Maybe [Text])

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageAttributeValue_stringValue :: Lens' MessageAttributeValue (Maybe Text)

-- | Not implemented. Reserved for future use.
messageAttributeValue_binaryListValues :: Lens' MessageAttributeValue (Maybe [ByteString])

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageAttributeValue_binaryValue :: Lens' MessageAttributeValue (Maybe ByteString)

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
messageAttributeValue_dataType :: Lens' MessageAttributeValue Text

-- | Not implemented. Reserved for future use.
messageSystemAttributeValue_stringListValues :: Lens' MessageSystemAttributeValue (Maybe [Text])

-- | Strings are Unicode with UTF-8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageSystemAttributeValue_stringValue :: Lens' MessageSystemAttributeValue (Maybe Text)

-- | Not implemented. Reserved for future use.
messageSystemAttributeValue_binaryListValues :: Lens' MessageSystemAttributeValue (Maybe [ByteString])

-- | Binary type attributes can store any binary data, such as compressed
--   data, encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageSystemAttributeValue_binaryValue :: Lens' MessageSystemAttributeValue (Maybe ByteString)

-- | Amazon SQS supports the following logical data types: <tt>String</tt>,
--   <tt>Number</tt>, and <tt>Binary</tt>. For the <tt>Number</tt> data
--   type, you must use <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
messageSystemAttributeValue_dataType :: Lens' MessageSystemAttributeValue Text

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
sendMessageBatchRequestEntry_messageDeduplicationId :: Lens' SendMessageBatchRequestEntry (Maybe Text)

-- | Each message attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
sendMessageBatchRequestEntry_messageAttributes :: Lens' SendMessageBatchRequestEntry (Maybe (HashMap Text MessageAttributeValue))

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
sendMessageBatchRequestEntry_messageGroupId :: Lens' SendMessageBatchRequestEntry (Maybe Text)

-- | The message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
sendMessageBatchRequestEntry_messageSystemAttributes :: Lens' SendMessageBatchRequestEntry (Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue))

-- | The length of time, in seconds, for which a specific message is
--   delayed. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a
--   positive <tt>DelaySeconds</tt> value become available for processing
--   after the delay period is finished. If you don't specify a value, the
--   default value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
sendMessageBatchRequestEntry_delaySeconds :: Lens' SendMessageBatchRequestEntry (Maybe Int)

-- | An identifier for a message in this batch used to communicate the
--   result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
sendMessageBatchRequestEntry_id :: Lens' SendMessageBatchRequestEntry Text

-- | The body of the message.
sendMessageBatchRequestEntry_messageBody :: Lens' SendMessageBatchRequestEntry Text

-- | This parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
sendMessageBatchResultEntry_sequenceNumber :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message system attribute string.
--   You can use this attribute to verify that Amazon SQS received the
--   message correctly. Amazon SQS URL-decodes the message before creating
--   the MD5 digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageSystemAttributes :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageAttributes :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An identifier for the message in this batch.
sendMessageBatchResultEntry_id :: Lens' SendMessageBatchResultEntry Text

-- | An identifier for the message.
sendMessageBatchResultEntry_messageId :: Lens' SendMessageBatchResultEntry Text

-- | An MD5 digest of the non-URL-encoded message body string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
sendMessageBatchResultEntry_mD5OfMessageBody :: Lens' SendMessageBatchResultEntry Text


module Network.AWS.SQS.Waiters


-- | Derived from API version <tt>2012-11-05</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Welcome to the <i>Amazon SQS API Reference</i>.
--   
--   Amazon SQS is a reliable, highly-scalable hosted queue for storing
--   messages as they travel between applications or microservices. Amazon
--   SQS moves data between distributed application components and helps
--   you decouple these components.
--   
--   For information on the permissions you need to use this API, see
--   <a>Identity and access management</a> in the <i>Amazon SQS Developer
--   Guide.</i>
--   
--   You can use <a>Amazon Web Services SDKs</a> to access Amazon SQS using
--   your favorite programming language. The SDKs perform tasks such as the
--   following automatically:
--   
--   <ul>
--   <li>Cryptographically sign your service requests</li>
--   <li>Retry requests</li>
--   <li>Handle error responses</li>
--   </ul>
--   
--   <b>Additional information</b>
--   
--   <ul>
--   <li><a>Amazon SQS Product Page</a></li>
--   <li><i>Amazon SQS Developer Guide</i><ul><li><a>Making API
--   Requests</a></li><li><a>Amazon SQS Message
--   Attributes</a></li><li><a>Amazon SQS Dead-Letter
--   Queues</a></li></ul></li>
--   <li><a>Amazon SQS in the Command Line Interface</a></li>
--   <li><i>Amazon Web Services General Reference</i><ul><li><a>Regions and
--   Endpoints</a></li></ul></li>
--   </ul>
module Network.AWS.SQS

-- | API version <tt>2012-11-05</tt> of the Amazon Simple Queue Service SDK
--   configuration.
defaultService :: Service

-- | The batch request contains more entries than permissible.
_TooManyEntriesInBatchRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified receipt handle isn't valid for the current version.
_InvalidIdFormat :: AsError a => Getting (First ServiceError) a ServiceError

-- | A queue with this name already exists. Amazon SQS returns this error
--   only if the request includes attributes whose values differ from those
--   of the existing queue.
_QueueNameExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The batch request doesn't contain any entries.
_EmptyBatchRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | Error code 400. Unsupported operation.
_UnsupportedOperation :: AsError a => Getting (First ServiceError) a ServiceError

-- | The message contains characters outside the allowed set.
_InvalidMessageContents :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified receipt handle isn't valid.
_ReceiptHandleIsInvalid :: AsError a => Getting (First ServiceError) a ServiceError

-- | You must wait 60 seconds after deleting a queue before you can create
--   another queue with the same name.
_QueueDeletedRecently :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified attribute doesn't exist.
_InvalidAttributeName :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>Id</tt> of a batch entry in a batch request doesn't abide by
--   the specification.
_InvalidBatchEntryId :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two or more batch entries in the request have the same <tt>Id</tt>.
_BatchEntryIdsNotDistinct :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified message isn't in flight.
_MessageNotInflight :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the specified queue previously received a
--   <tt>PurgeQueue</tt> request within the last 60 seconds (the time it
--   can take to delete the messages in the queue).
_PurgeQueueInProgress :: AsError a => Getting (First ServiceError) a ServiceError

-- | The length of all the messages put together is more than the limit.
_BatchRequestTooLong :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action violates a limit. For example,
--   <tt>ReceiveMessage</tt> returns this error if the maximum number of
--   inflight messages is reached and <tt>AddPermission</tt> returns this
--   error if the maximum number of permissions for the queue is reached.
_OverLimit :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified queue doesn't exist.
_QueueDoesNotExist :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newChangeMessageVisibilityBatch</a> smart constructor.
data ChangeMessageVisibilityBatch
ChangeMessageVisibilityBatch' :: Text -> [ChangeMessageVisibilityBatchRequestEntry] -> ChangeMessageVisibilityBatch

-- | Create a value of <a>ChangeMessageVisibilityBatch</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:ChangeMessageVisibilityBatch'</a>,
--   <a>changeMessageVisibilityBatch_queueUrl</a> - The URL of the Amazon
--   SQS queue whose messages' visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:entries:ChangeMessageVisibilityBatch'</a>,
--   <a>changeMessageVisibilityBatch_entries</a> - A list of receipt
--   handles of the messages for which the visibility timeout must be
--   changed.
newChangeMessageVisibilityBatch :: Text -> ChangeMessageVisibilityBatch

-- | For each message in the batch, the response contains a <tt>
--   ChangeMessageVisibilityBatchResultEntry </tt> tag if the message
--   succeeds or a <tt> BatchResultErrorEntry </tt> tag if the message
--   fails.
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchResponse</a> smart
--   constructor.
data ChangeMessageVisibilityBatchResponse
ChangeMessageVisibilityBatchResponse' :: Int -> [ChangeMessageVisibilityBatchResultEntry] -> [BatchResultErrorEntry] -> ChangeMessageVisibilityBatchResponse

-- | Create a value of <a>ChangeMessageVisibilityBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangeMessageVisibilityBatchResponse'</a>,
--   <a>changeMessageVisibilityBatchResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:successful:ChangeMessageVisibilityBatchResponse'</a>,
--   <a>changeMessageVisibilityBatchResponse_successful</a> - A list of
--   <tt> ChangeMessageVisibilityBatchResultEntry </tt> items.
--   
--   <a>$sel:failed:ChangeMessageVisibilityBatchResponse'</a>,
--   <a>changeMessageVisibilityBatchResponse_failed</a> - A list of <tt>
--   BatchResultErrorEntry </tt> items.
newChangeMessageVisibilityBatchResponse :: Int -> ChangeMessageVisibilityBatchResponse

-- | <i>See:</i> <a>newPurgeQueue</a> smart constructor.
data PurgeQueue
PurgeQueue' :: Text -> PurgeQueue

-- | Create a value of <a>PurgeQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:PurgeQueue'</a>, <a>purgeQueue_queueUrl</a> - The URL
--   of the queue from which the <tt>PurgeQueue</tt> action deletes
--   messages.
--   
--   Queue URLs and names are case-sensitive.
newPurgeQueue :: Text -> PurgeQueue

-- | <i>See:</i> <a>newPurgeQueueResponse</a> smart constructor.
data PurgeQueueResponse
PurgeQueueResponse' :: PurgeQueueResponse

-- | Create a value of <a>PurgeQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPurgeQueueResponse :: PurgeQueueResponse

-- | <i>See:</i> <a>newTagQueue</a> smart constructor.
data TagQueue
TagQueue' :: Text -> HashMap Text Text -> TagQueue

-- | Create a value of <a>TagQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:TagQueue'</a>, <a>tagQueue_queueUrl</a> - The URL of
--   the queue.
--   
--   <a>$sel:tags:TagQueue'</a>, <a>tagQueue_tags</a> - The list of tags to
--   be added to the specified queue.
newTagQueue :: Text -> TagQueue

-- | <i>See:</i> <a>newTagQueueResponse</a> smart constructor.
data TagQueueResponse
TagQueueResponse' :: TagQueueResponse

-- | Create a value of <a>TagQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagQueueResponse :: TagQueueResponse

-- | <i>See:</i> <a>newChangeMessageVisibility</a> smart constructor.
data ChangeMessageVisibility
ChangeMessageVisibility' :: Text -> Text -> Int -> ChangeMessageVisibility

-- | Create a value of <a>ChangeMessageVisibility</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:ChangeMessageVisibility'</a>,
--   <a>changeMessageVisibility_queueUrl</a> - The URL of the Amazon SQS
--   queue whose message's visibility is changed.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:receiptHandle:ChangeMessageVisibility'</a>,
--   <a>changeMessageVisibility_receiptHandle</a> - The receipt handle
--   associated with the message whose visibility timeout is changed. This
--   parameter is returned by the <tt> ReceiveMessage </tt> action.
--   
--   <a>$sel:visibilityTimeout:ChangeMessageVisibility'</a>,
--   <a>changeMessageVisibility_visibilityTimeout</a> - The new value for
--   the message's visibility timeout (in seconds). Values range:
--   <tt>0</tt> to <tt>43200</tt>. Maximum: 12 hours.
newChangeMessageVisibility :: Text -> Text -> Int -> ChangeMessageVisibility

-- | <i>See:</i> <a>newChangeMessageVisibilityResponse</a> smart
--   constructor.
data ChangeMessageVisibilityResponse
ChangeMessageVisibilityResponse' :: ChangeMessageVisibilityResponse

-- | Create a value of <a>ChangeMessageVisibilityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newChangeMessageVisibilityResponse :: ChangeMessageVisibilityResponse

-- | <i>See:</i> <a>newGetQueueAttributes</a> smart constructor.
data GetQueueAttributes
GetQueueAttributes' :: Maybe [QueueAttributeName] -> Text -> GetQueueAttributes

-- | Create a value of <a>GetQueueAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeNames:GetQueueAttributes'</a>,
--   <a>getQueueAttributes_attributeNames</a> - A list of attributes for
--   which to retrieve information.
--   
--   The <tt>AttributeName.N</tt> parameter is optional, but if you don't
--   specify values for this parameter, the request returns empty results.
--   
--   In the future, new attributes might be added. If you write code that
--   calls this action, we recommend that you structure your code so that
--   it can handle new attributes gracefully.
--   
--   The following attributes are supported:
--   
--   The <tt>ApproximateNumberOfMessagesDelayed</tt>,
--   <tt>ApproximateNumberOfMessagesNotVisible</tt>, and
--   <tt>ApproximateNumberOfMessagesVisible</tt> metrics may not achieve
--   consistency until at least 1 minute after the producers stop sending
--   messages. This period is required for the queue metadata to reach
--   eventual consistency.
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateNumberOfMessages</tt> – Returns the approximate
--   number of messages available for retrieval from the queue.</li>
--   <li><tt>ApproximateNumberOfMessagesDelayed</tt> – Returns the
--   approximate number of messages in the queue that are delayed and not
--   available for reading immediately. This can happen when the queue is
--   configured as a delay queue or when a message has been sent with a
--   delay parameter.</li>
--   <li><tt>ApproximateNumberOfMessagesNotVisible</tt> – Returns the
--   approximate number of messages that are in flight. Messages are
--   considered to be <i>in flight</i> if they have been sent to a client
--   but have not yet been deleted or have not yet reached the end of their
--   visibility window.</li>
--   <li><tt>CreatedTimestamp</tt> – Returns the time when the queue was
--   created in seconds (<a>epoch time</a>).</li>
--   <li><tt>DelaySeconds</tt> – Returns the default delay on the queue in
--   seconds.</li>
--   <li><tt>LastModifiedTimestamp</tt> – Returns the time when the queue
--   was last changed in seconds (<a>epoch time</a>).</li>
--   <li><tt>MaximumMessageSize</tt> – Returns the limit of how many bytes
--   a message can contain before Amazon SQS rejects it.</li>
--   <li><tt>MessageRetentionPeriod</tt> – Returns the length of time, in
--   seconds, for which Amazon SQS retains a message.</li>
--   <li><tt>Policy</tt> – Returns the policy of the queue.</li>
--   <li><tt>QueueArn</tt> – Returns the Amazon resource name (ARN) of the
--   queue.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – Returns the length of
--   time, in seconds, for which the <tt>ReceiveMessage</tt> action waits
--   for a message to arrive.</li>
--   <li><tt>VisibilityTimeout</tt> – Returns the visibility timeout for
--   the queue. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – Returns the ID of an Amazon Web Services
--   managed customer master key (CMK) for Amazon SQS or a custom CMK. For
--   more information, see <a>Key Terms</a>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – Returns the length of
--   time, in seconds, for which Amazon SQS can reuse a data key to encrypt
--   or decrypt messages before calling KMS again. For more information,
--   see <a>How Does the Data Key Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Returns information about whether the queue
--   is FIFO. For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.To determine whether a queue is
--   <a>FIFO</a>, you can check whether <tt>QueueName</tt> ends with the
--   <tt>.fifo</tt> suffix.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Returns whether content-based
--   deduplication is enabled for the queue. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:queueUrl:GetQueueAttributes'</a>,
--   <a>getQueueAttributes_queueUrl</a> - The URL of the Amazon SQS queue
--   whose attribute information is retrieved.
--   
--   Queue URLs and names are case-sensitive.
newGetQueueAttributes :: Text -> GetQueueAttributes

-- | A list of returned queue attributes.
--   
--   <i>See:</i> <a>newGetQueueAttributesResponse</a> smart constructor.
data GetQueueAttributesResponse
GetQueueAttributesResponse' :: Maybe (HashMap QueueAttributeName Text) -> Int -> GetQueueAttributesResponse

-- | Create a value of <a>GetQueueAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetQueueAttributesResponse'</a>,
--   <a>getQueueAttributesResponse_attributes</a> - A map of attributes to
--   their respective values.
--   
--   <a>$sel:httpStatus:GetQueueAttributesResponse'</a>,
--   <a>getQueueAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetQueueAttributesResponse :: Int -> GetQueueAttributesResponse

-- | <i>See:</i> <a>newListQueues</a> smart constructor.
data ListQueues
ListQueues' :: Maybe Text -> Maybe Text -> Maybe Int -> ListQueues

-- | Create a value of <a>ListQueues</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQueues'</a>, <a>listQueues_nextToken</a> -
--   Pagination token to request the next set of results.
--   
--   <a>$sel:queueNamePrefix:ListQueues'</a>,
--   <a>listQueues_queueNamePrefix</a> - A string to use for filtering the
--   list results. Only those queues whose name begins with the specified
--   string are returned.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:maxResults:ListQueues'</a>, <a>listQueues_maxResults</a> -
--   Maximum number of results to include in the response. Value range is 1
--   to 1000. You must set <tt>MaxResults</tt> to receive a value for
--   <tt>NextToken</tt> in the response.
newListQueues :: ListQueues

-- | A list of your queues.
--   
--   <i>See:</i> <a>newListQueuesResponse</a> smart constructor.
data ListQueuesResponse
ListQueuesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListQueuesResponse

-- | Create a value of <a>ListQueuesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQueues'</a>, <a>listQueuesResponse_nextToken</a>
--   - Pagination token to include in the next request. Token value is
--   <tt>null</tt> if there are no additional results to request, or if you
--   did not set <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:queueUrls:ListQueuesResponse'</a>,
--   <a>listQueuesResponse_queueUrls</a> - A list of queue URLs, up to
--   1,000 entries, or the value of MaxResults that you sent in the
--   request.
--   
--   <a>$sel:httpStatus:ListQueuesResponse'</a>,
--   <a>listQueuesResponse_httpStatus</a> - The response's http status
--   code.
newListQueuesResponse :: Int -> ListQueuesResponse

-- | <i>See:</i> <a>newReceiveMessage</a> smart constructor.
data ReceiveMessage
ReceiveMessage' :: Maybe Int -> Maybe Int -> Maybe [Text] -> Maybe [MessageAttribute] -> Maybe Int -> Maybe Text -> Text -> ReceiveMessage

-- | Create a value of <a>ReceiveMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:visibilityTimeout:ReceiveMessage'</a>,
--   <a>receiveMessage_visibilityTimeout</a> - The duration (in seconds)
--   that the received messages are hidden from subsequent retrieve
--   requests after being retrieved by a <tt>ReceiveMessage</tt> request.
--   
--   <a>$sel:maxNumberOfMessages:ReceiveMessage'</a>,
--   <a>receiveMessage_maxNumberOfMessages</a> - The maximum number of
--   messages to return. Amazon SQS never returns more messages than this
--   value (however, fewer messages might be returned). Valid values: 1 to
--   10. Default: 1.
--   
--   <a>$sel:messageAttributeNames:ReceiveMessage'</a>,
--   <a>receiveMessage_messageAttributeNames</a> - The name of the message
--   attribute, where <i>N</i> is the index.
--   
--   <ul>
--   <li>The name can contain alphanumeric characters and the underscore
--   (<tt>_</tt>), hyphen (<tt>-</tt>), and period (<tt>.</tt>).</li>
--   <li>The name is case-sensitive and must be unique among all attribute
--   names for the message.</li>
--   <li>The name must not start with AWS-reserved prefixes such as
--   <tt>AWS.</tt> or <tt>Amazon.</tt> (or any casing variants).</li>
--   <li>The name must not start or end with a period (<tt>.</tt>), and it
--   should not have periods in succession (<tt>..</tt>).</li>
--   <li>The name can be up to 256 characters long.</li>
--   </ul>
--   
--   When using <tt>ReceiveMessage</tt>, you can send a list of attribute
--   names to receive, or you can return all of the attributes by
--   specifying <tt>All</tt> or <tt>.*</tt> in your request. You can also
--   use all message attributes starting with a prefix, for example
--   <tt>bar.*</tt>.
--   
--   <a>$sel:attributeNames:ReceiveMessage'</a>,
--   <a>receiveMessage_attributeNames</a> - A list of attributes that need
--   to be returned along with each message. These attributes include:
--   
--   <ul>
--   <li><tt>All</tt> – Returns all values.</li>
--   <li><tt>ApproximateFirstReceiveTimestamp</tt> – Returns the time the
--   message was first received from the queue (<a>epoch time</a> in
--   milliseconds).</li>
--   <li><tt>ApproximateReceiveCount</tt> – Returns the number of times a
--   message has been received across all queues but not deleted.</li>
--   <li><tt>AWSTraceHeader</tt> – Returns the X-Ray trace header
--   string.</li>
--   <li><pre>SenderId</pre><ul><li>For an IAM user, returns the IAM user
--   ID, for example <tt>ABCDEFGHI1JKLMNOPQ23R</tt>.</li><li>For an IAM
--   role, returns the IAM role ID, for example
--   <tt>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</tt>.</li></ul></li>
--   <li><tt>SentTimestamp</tt> – Returns the time the message was sent to
--   the queue (<a>epoch time</a> in milliseconds).</li>
--   <li><tt>MessageDeduplicationId</tt> – Returns the value provided by
--   the producer that calls the <tt> SendMessage </tt> action.</li>
--   <li><tt>MessageGroupId</tt> – Returns the value provided by the
--   producer that calls the <tt> SendMessage </tt> action. Messages with
--   the same <tt>MessageGroupId</tt> are returned in sequence.</li>
--   <li><tt>SequenceNumber</tt> – Returns the value provided by Amazon
--   SQS.</li>
--   </ul>
--   
--   <a>$sel:waitTimeSeconds:ReceiveMessage'</a>,
--   <a>receiveMessage_waitTimeSeconds</a> - The duration (in seconds) for
--   which the call waits for a message to arrive in the queue before
--   returning. If a message is available, the call returns sooner than
--   <tt>WaitTimeSeconds</tt>. If no messages are available and the wait
--   time expires, the call returns successfully with an empty list of
--   messages.
--   
--   To avoid HTTP errors, ensure that the HTTP response timeout for
--   <tt>ReceiveMessage</tt> requests is longer than the
--   <tt>WaitTimeSeconds</tt> parameter. For example, with the Java SDK,
--   you can set HTTP transport settings using the
--   <a>NettyNioAsyncHttpClient</a> for asynchronous clients, or the
--   <a>ApacheHttpClient</a> for synchronous clients.
--   
--   <a>$sel:receiveRequestAttemptId:ReceiveMessage'</a>,
--   <a>receiveMessage_receiveRequestAttemptId</a> - This parameter applies
--   only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of <tt>ReceiveMessage</tt> calls. If
--   a networking issue occurs after a <tt>ReceiveMessage</tt> action, and
--   instead of a response you receive a generic error, it is possible to
--   retry the same action with an identical
--   <tt>ReceiveRequestAttemptId</tt> to retrieve the same set of messages,
--   even if their visibility timeout has not yet expired.
--   
--   <ul>
--   <li>You can use <tt>ReceiveRequestAttemptId</tt> only for 5 minutes
--   after a <tt>ReceiveMessage</tt> action.</li>
--   <li>When you set <tt>FifoQueue</tt>, a caller of the
--   <tt>ReceiveMessage</tt> action can provide a
--   <tt>ReceiveRequestAttemptId</tt> explicitly.</li>
--   <li>If a caller of the <tt>ReceiveMessage</tt> action doesn't provide
--   a <tt>ReceiveRequestAttemptId</tt>, Amazon SQS generates a
--   <tt>ReceiveRequestAttemptId</tt>.</li>
--   <li>It is possible to retry the <tt>ReceiveMessage</tt> action with
--   the same <tt>ReceiveRequestAttemptId</tt> if none of the messages have
--   been modified (deleted or had their visibility changes).</li>
--   <li>During a visibility timeout, subsequent calls with the same
--   <tt>ReceiveRequestAttemptId</tt> return the same messages and receipt
--   handles. If a retry occurs within the deduplication interval, it
--   resets the visibility timeout. For more information, see <a>Visibility
--   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.If a caller of
--   the <tt>ReceiveMessage</tt> action still processes messages when the
--   visibility timeout expires and messages become visible, another worker
--   consuming from the same queue can receive the same messages and
--   therefore process duplicates. Also, if a consumer whose message
--   processing time is longer than the visibility timeout tries to delete
--   the processed messages, the action fails with an error.To mitigate
--   this effect, ensure that your application observes a safe threshold
--   before the visibility timeout expires and extend the visibility
--   timeout as necessary.</li>
--   <li>While messages with a particular <tt>MessageGroupId</tt> are
--   invisible, no more messages belonging to the same
--   <tt>MessageGroupId</tt> are returned until the visibility timeout
--   expires. You can still receive messages with another
--   <tt>MessageGroupId</tt> as long as it is also visible.</li>
--   <li>If a caller of <tt>ReceiveMessage</tt> can't track the
--   <tt>ReceiveRequestAttemptId</tt>, no retries work until the original
--   visibility timeout expires. As a result, delays might occur but the
--   messages in the queue remain in a strict order.</li>
--   </ul>
--   
--   The maximum length of <tt>ReceiveRequestAttemptId</tt> is 128
--   characters. <tt>ReceiveRequestAttemptId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>ReceiveRequestAttemptId</tt>, see
--   <a>Using the ReceiveRequestAttemptId Request Parameter</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:queueUrl:ReceiveMessage'</a>, <a>receiveMessage_queueUrl</a> -
--   The URL of the Amazon SQS queue from which messages are received.
--   
--   Queue URLs and names are case-sensitive.
newReceiveMessage :: Text -> ReceiveMessage

-- | A list of received messages.
--   
--   <i>See:</i> <a>newReceiveMessageResponse</a> smart constructor.
data ReceiveMessageResponse
ReceiveMessageResponse' :: Maybe [Message] -> Int -> ReceiveMessageResponse

-- | Create a value of <a>ReceiveMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messages:ReceiveMessageResponse'</a>,
--   <a>receiveMessageResponse_messages</a> - A list of messages.
--   
--   <a>$sel:httpStatus:ReceiveMessageResponse'</a>,
--   <a>receiveMessageResponse_httpStatus</a> - The response's http status
--   code.
newReceiveMessageResponse :: Int -> ReceiveMessageResponse

-- | <i>See:</i> <a>newAddPermission</a> smart constructor.
data AddPermission
AddPermission' :: Text -> Text -> [Text] -> [Text] -> AddPermission

-- | Create a value of <a>AddPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:AddPermission'</a>, <a>addPermission_queueUrl</a> -
--   The URL of the Amazon SQS queue to which permissions are added.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:label:AddPermission'</a>, <a>addPermission_label</a> - The
--   unique identification of the permission you're setting (for example,
--   <tt>AliceSendMessage</tt>). Maximum 80 characters. Allowed characters
--   include alphanumeric characters, hyphens (<tt>-</tt>), and underscores
--   (<tt>_</tt>).
--   
--   <a>$sel:aWSAccountIds:AddPermission'</a>,
--   <a>addPermission_aWSAccountIds</a> - The account numbers of the
--   <a>principals</a> who are to receive permission. For information about
--   locating the account identification, see <a>Your Amazon Web Services
--   Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:actions:AddPermission'</a>, <a>addPermission_actions</a> - The
--   action the client wants to allow for the specified principal. Valid
--   values: the name of any action or <tt>*</tt>.
--   
--   For more information about these actions, see <a>Overview of Managing
--   Access Permissions to Your Amazon Simple Queue Service Resource</a> in
--   the <i>Amazon SQS Developer Guide</i>.
--   
--   Specifying <tt>SendMessage</tt>, <tt>DeleteMessage</tt>, or
--   <tt>ChangeMessageVisibility</tt> for <tt>ActionName.n</tt> also grants
--   permissions for the corresponding batch versions of those actions:
--   <tt>SendMessageBatch</tt>, <tt>DeleteMessageBatch</tt>, and
--   <tt>ChangeMessageVisibilityBatch</tt>.
newAddPermission :: Text -> Text -> AddPermission

-- | <i>See:</i> <a>newAddPermissionResponse</a> smart constructor.
data AddPermissionResponse
AddPermissionResponse' :: AddPermissionResponse

-- | Create a value of <a>AddPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAddPermissionResponse :: AddPermissionResponse

-- | <i>See:</i> <a>newDeleteMessage</a> smart constructor.
data DeleteMessage
DeleteMessage' :: Text -> Text -> DeleteMessage

-- | Create a value of <a>DeleteMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:DeleteMessage'</a>, <a>deleteMessage_queueUrl</a> -
--   The URL of the Amazon SQS queue from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:receiptHandle:DeleteMessage'</a>,
--   <a>deleteMessage_receiptHandle</a> - The receipt handle associated
--   with the message to delete.
newDeleteMessage :: Text -> Text -> DeleteMessage

-- | <i>See:</i> <a>newDeleteMessageResponse</a> smart constructor.
data DeleteMessageResponse
DeleteMessageResponse' :: DeleteMessageResponse

-- | Create a value of <a>DeleteMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMessageResponse :: DeleteMessageResponse

-- | <i>See:</i> <a>newListQueueTags</a> smart constructor.
data ListQueueTags
ListQueueTags' :: Text -> ListQueueTags

-- | Create a value of <a>ListQueueTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:ListQueueTags'</a>, <a>listQueueTags_queueUrl</a> -
--   The URL of the queue.
newListQueueTags :: Text -> ListQueueTags

-- | <i>See:</i> <a>newListQueueTagsResponse</a> smart constructor.
data ListQueueTagsResponse
ListQueueTagsResponse' :: Maybe (HashMap Text Text) -> Int -> ListQueueTagsResponse

-- | Create a value of <a>ListQueueTagsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListQueueTagsResponse'</a>,
--   <a>listQueueTagsResponse_tags</a> - The list of all tags added to the
--   specified queue.
--   
--   <a>$sel:httpStatus:ListQueueTagsResponse'</a>,
--   <a>listQueueTagsResponse_httpStatus</a> - The response's http status
--   code.
newListQueueTagsResponse :: Int -> ListQueueTagsResponse

-- | <i>See:</i> <a>newListDeadLetterSourceQueues</a> smart constructor.
data ListDeadLetterSourceQueues
ListDeadLetterSourceQueues' :: Maybe Text -> Maybe Int -> Text -> ListDeadLetterSourceQueues

-- | Create a value of <a>ListDeadLetterSourceQueues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueues_nextToken</a> - Pagination token to
--   request the next set of results.
--   
--   <a>$sel:maxResults:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueues_maxResults</a> - Maximum number of
--   results to include in the response. Value range is 1 to 1000. You must
--   set <tt>MaxResults</tt> to receive a value for <tt>NextToken</tt> in
--   the response.
--   
--   <a>$sel:queueUrl:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueues_queueUrl</a> - The URL of a dead-letter
--   queue.
--   
--   Queue URLs and names are case-sensitive.
newListDeadLetterSourceQueues :: Text -> ListDeadLetterSourceQueues

-- | A list of your dead letter source queues.
--   
--   <i>See:</i> <a>newListDeadLetterSourceQueuesResponse</a> smart
--   constructor.
data ListDeadLetterSourceQueuesResponse
ListDeadLetterSourceQueuesResponse' :: Maybe Text -> Int -> [Text] -> ListDeadLetterSourceQueuesResponse

-- | Create a value of <a>ListDeadLetterSourceQueuesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeadLetterSourceQueues'</a>,
--   <a>listDeadLetterSourceQueuesResponse_nextToken</a> - Pagination token
--   to include in the next request. Token value is <tt>null</tt> if there
--   are no additional results to request, or if you did not set
--   <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListDeadLetterSourceQueuesResponse'</a>,
--   <a>listDeadLetterSourceQueuesResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:queueUrls:ListDeadLetterSourceQueuesResponse'</a>,
--   <a>listDeadLetterSourceQueuesResponse_queueUrls</a> - A list of source
--   queue URLs that have the <tt>RedrivePolicy</tt> queue attribute
--   configured with a dead-letter queue.
newListDeadLetterSourceQueuesResponse :: Int -> ListDeadLetterSourceQueuesResponse

-- | <i>See:</i> <a>newSendMessage</a> smart constructor.
data SendMessage
SendMessage' :: Maybe Text -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue) -> Maybe Int -> Text -> Text -> SendMessage

-- | Create a value of <a>SendMessage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageDeduplicationId:SendMessage'</a>,
--   <a>sendMessage_messageDeduplicationId</a> - This parameter applies
--   only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of sent messages. If a message with a
--   particular <tt>MessageDeduplicationId</tt> is sent successfully, any
--   messages sent with the same <tt>MessageDeduplicationId</tt> are
--   accepted successfully but aren't delivered during the 5-minute
--   deduplication interval. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The maximum length of <tt>MessageDeduplicationId</tt> is 128
--   characters. <tt>MessageDeduplicationId</tt> can contain alphanumeric
--   characters (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   <a>$sel:messageAttributes:SendMessage'</a>,
--   <a>sendMessage_messageAttributes</a> - Each message attribute consists
--   of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>. For more
--   information, see <a>Amazon SQS message attributes</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   <a>$sel:messageGroupId:SendMessage'</a>,
--   <a>sendMessage_messageGroupId</a> - This parameter applies only to
--   FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
--   
--   <a>$sel:messageSystemAttributes:SendMessage'</a>,
--   <a>sendMessage_messageSystemAttributes</a> - The message system
--   attribute to send. Each message system attribute consists of a
--   <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
--   
--   <a>$sel:delaySeconds:SendMessage'</a>, <a>sendMessage_delaySeconds</a>
--   - The length of time, in seconds, for which to delay a specific
--   message. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a
--   positive <tt>DelaySeconds</tt> value become available for processing
--   after the delay period is finished. If you don't specify a value, the
--   default value for the queue applies.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
--   
--   <a>$sel:queueUrl:SendMessage'</a>, <a>sendMessage_queueUrl</a> - The
--   URL of the Amazon SQS queue to which a message is sent.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:messageBody:SendMessage'</a>, <a>sendMessage_messageBody</a> -
--   The message to send. The minimum size is one character. The maximum
--   size is 256 KB.
--   
--   A message can include only XML, JSON, and unformatted text. The
--   following Unicode characters are allowed:
--   
--   <tt>#x9</tt> | <tt>#xA</tt> | <tt>#xD</tt> | <tt>#x20</tt> to
--   <tt>#xD7FF</tt> | <tt>#xE000</tt> to <tt>#xFFFD</tt> |
--   <tt>#x10000</tt> to <tt>#x10FFFF</tt>
--   
--   Any characters not included in this list will be rejected. For more
--   information, see the <a>W3C specification for characters</a>.
newSendMessage :: Text -> Text -> SendMessage

-- | The <tt>MD5OfMessageBody</tt> and <tt>MessageId</tt> elements.
--   
--   <i>See:</i> <a>newSendMessageResponse</a> smart constructor.
data SendMessageResponse
SendMessageResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> SendMessageResponse

-- | Create a value of <a>SendMessageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceNumber:SendMessageResponse'</a>,
--   <a>sendMessageResponse_sequenceNumber</a> - This parameter applies
--   only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits.
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
--   
--   <a>$sel:mD5OfMessageBody:SendMessageResponse'</a>,
--   <a>sendMessageResponse_mD5OfMessageBody</a> - An MD5 digest of the
--   non-URL-encoded message body string. You can use this attribute to
--   verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:mD5OfMessageSystemAttributes:SendMessageResponse'</a>,
--   <a>sendMessageResponse_mD5OfMessageSystemAttributes</a> - An MD5
--   digest of the non-URL-encoded message system attribute string. You can
--   use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest.
--   
--   <a>$sel:mD5OfMessageAttributes:SendMessageResponse'</a>,
--   <a>sendMessageResponse_mD5OfMessageAttributes</a> - An MD5 digest of
--   the non-URL-encoded message attribute string. You can use this
--   attribute to verify that Amazon SQS received the message correctly.
--   Amazon SQS URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:messageId:SendMessageResponse'</a>,
--   <a>sendMessageResponse_messageId</a> - An attribute containing the
--   <tt>MessageId</tt> of the message sent to the queue. For more
--   information, see <a>Queue and Message Identifiers</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   <a>$sel:httpStatus:SendMessageResponse'</a>,
--   <a>sendMessageResponse_httpStatus</a> - The response's http status
--   code.
newSendMessageResponse :: Int -> SendMessageResponse

-- | <i>See:</i> <a>newGetQueueUrl</a> smart constructor.
data GetQueueUrl
GetQueueUrl' :: Maybe Text -> Text -> GetQueueUrl

-- | Create a value of <a>GetQueueUrl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueOwnerAWSAccountId:GetQueueUrl'</a>,
--   <a>getQueueUrl_queueOwnerAWSAccountId</a> - The account ID of the
--   account that created the queue.
--   
--   <a>$sel:queueName:GetQueueUrl'</a>, <a>getQueueUrl_queueName</a> - The
--   name of the queue whose URL must be fetched. Maximum 80 characters.
--   Valid values: alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).
--   
--   Queue URLs and names are case-sensitive.
newGetQueueUrl :: Text -> GetQueueUrl

-- | For more information, see <a>Interpreting Responses</a> in the
--   <i>Amazon SQS Developer Guide</i>.
--   
--   <i>See:</i> <a>newGetQueueUrlResponse</a> smart constructor.
data GetQueueUrlResponse
GetQueueUrlResponse' :: Int -> Text -> GetQueueUrlResponse

-- | Create a value of <a>GetQueueUrlResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetQueueUrlResponse'</a>,
--   <a>getQueueUrlResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:queueUrl:GetQueueUrlResponse'</a>,
--   <a>getQueueUrlResponse_queueUrl</a> - The URL of the queue.
newGetQueueUrlResponse :: Int -> Text -> GetQueueUrlResponse

-- | <i>See:</i> <a>newSetQueueAttributes</a> smart constructor.
data SetQueueAttributes
SetQueueAttributes' :: Text -> HashMap QueueAttributeName Text -> SetQueueAttributes

-- | Create a value of <a>SetQueueAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:SetQueueAttributes'</a>,
--   <a>setQueueAttributes_queueUrl</a> - The URL of the Amazon SQS queue
--   whose attributes are set.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:attributes:SetQueueAttributes'</a>,
--   <a>setQueueAttributes_attributes</a> - A map of attributes to set.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetQueueAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB).
--   Default: 262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer
--   representing seconds, from 60 (1 minute) to 1,209,600 (14 days).
--   Default: 345,600 (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Identity and Access
--   Management User Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the AWS-managed
--   CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>, the alias of a
--   custom CMK can, for example, be <tt>alias/MyAlias </tt>. For more
--   examples, see <a>KeyId</a> in the <i>Key Management Service API
--   Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. For more information, see <a>Exactly-once
--   processing</a> in the <i>Amazon SQS Developer Guide</i>. Note the
--   following:<ul><li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>.<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
newSetQueueAttributes :: Text -> SetQueueAttributes

-- | <i>See:</i> <a>newSetQueueAttributesResponse</a> smart constructor.
data SetQueueAttributesResponse
SetQueueAttributesResponse' :: SetQueueAttributesResponse

-- | Create a value of <a>SetQueueAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetQueueAttributesResponse :: SetQueueAttributesResponse

-- | <i>See:</i> <a>newDeleteMessageBatch</a> smart constructor.
data DeleteMessageBatch
DeleteMessageBatch' :: Text -> [DeleteMessageBatchRequestEntry] -> DeleteMessageBatch

-- | Create a value of <a>DeleteMessageBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:DeleteMessageBatch'</a>,
--   <a>deleteMessageBatch_queueUrl</a> - The URL of the Amazon SQS queue
--   from which messages are deleted.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:entries:DeleteMessageBatch'</a>,
--   <a>deleteMessageBatch_entries</a> - A list of receipt handles for the
--   messages to be deleted.
newDeleteMessageBatch :: Text -> DeleteMessageBatch

-- | For each message in the batch, the response contains a <tt>
--   DeleteMessageBatchResultEntry </tt> tag if the message is deleted or a
--   <tt> BatchResultErrorEntry </tt> tag if the message can't be deleted.
--   
--   <i>See:</i> <a>newDeleteMessageBatchResponse</a> smart constructor.
data DeleteMessageBatchResponse
DeleteMessageBatchResponse' :: Int -> [DeleteMessageBatchResultEntry] -> [BatchResultErrorEntry] -> DeleteMessageBatchResponse

-- | Create a value of <a>DeleteMessageBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMessageBatchResponse'</a>,
--   <a>deleteMessageBatchResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:successful:DeleteMessageBatchResponse'</a>,
--   <a>deleteMessageBatchResponse_successful</a> - A list of <tt>
--   DeleteMessageBatchResultEntry </tt> items.
--   
--   <a>$sel:failed:DeleteMessageBatchResponse'</a>,
--   <a>deleteMessageBatchResponse_failed</a> - A list of <tt>
--   BatchResultErrorEntry </tt> items.
newDeleteMessageBatchResponse :: Int -> DeleteMessageBatchResponse

-- | <i>See:</i> <a>newSendMessageBatch</a> smart constructor.
data SendMessageBatch
SendMessageBatch' :: Text -> [SendMessageBatchRequestEntry] -> SendMessageBatch

-- | Create a value of <a>SendMessageBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:SendMessageBatch'</a>,
--   <a>sendMessageBatch_queueUrl</a> - The URL of the Amazon SQS queue to
--   which batched messages are sent.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:entries:SendMessageBatch'</a>, <a>sendMessageBatch_entries</a>
--   - A list of <tt> SendMessageBatchRequestEntry </tt> items.
newSendMessageBatch :: Text -> SendMessageBatch

-- | For each message in the batch, the response contains a <tt>
--   SendMessageBatchResultEntry </tt> tag if the message succeeds or a
--   <tt> BatchResultErrorEntry </tt> tag if the message fails.
--   
--   <i>See:</i> <a>newSendMessageBatchResponse</a> smart constructor.
data SendMessageBatchResponse
SendMessageBatchResponse' :: Int -> [SendMessageBatchResultEntry] -> [BatchResultErrorEntry] -> SendMessageBatchResponse

-- | Create a value of <a>SendMessageBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendMessageBatchResponse'</a>,
--   <a>sendMessageBatchResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:successful:SendMessageBatchResponse'</a>,
--   <a>sendMessageBatchResponse_successful</a> - A list of <tt>
--   SendMessageBatchResultEntry </tt> items.
--   
--   <a>$sel:failed:SendMessageBatchResponse'</a>,
--   <a>sendMessageBatchResponse_failed</a> - A list of <tt>
--   BatchResultErrorEntry </tt> items with error details about each
--   message that can't be enqueued.
newSendMessageBatchResponse :: Int -> SendMessageBatchResponse

-- | <i>See:</i> <a>newUntagQueue</a> smart constructor.
data UntagQueue
UntagQueue' :: Text -> [Text] -> UntagQueue

-- | Create a value of <a>UntagQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:UntagQueue'</a>, <a>untagQueue_queueUrl</a> - The URL
--   of the queue.
--   
--   <a>$sel:tagKeys:UntagQueue'</a>, <a>untagQueue_tagKeys</a> - The list
--   of tags to be removed from the specified queue.
newUntagQueue :: Text -> UntagQueue

-- | <i>See:</i> <a>newUntagQueueResponse</a> smart constructor.
data UntagQueueResponse
UntagQueueResponse' :: UntagQueueResponse

-- | Create a value of <a>UntagQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagQueueResponse :: UntagQueueResponse

-- | <i>See:</i> <a>newDeleteQueue</a> smart constructor.
data DeleteQueue
DeleteQueue' :: Text -> DeleteQueue

-- | Create a value of <a>DeleteQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:DeleteQueue'</a>, <a>deleteQueue_queueUrl</a> - The
--   URL of the Amazon SQS queue to delete.
--   
--   Queue URLs and names are case-sensitive.
newDeleteQueue :: Text -> DeleteQueue

-- | <i>See:</i> <a>newDeleteQueueResponse</a> smart constructor.
data DeleteQueueResponse
DeleteQueueResponse' :: DeleteQueueResponse

-- | Create a value of <a>DeleteQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteQueueResponse :: DeleteQueueResponse

-- | <i>See:</i> <a>newCreateQueue</a> smart constructor.
data CreateQueue
CreateQueue' :: Maybe (HashMap QueueAttributeName Text) -> Maybe (HashMap Text Text) -> Text -> CreateQueue

-- | Create a value of <a>CreateQueue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:CreateQueue'</a>, <a>createQueue_attributes</a> - A
--   map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateQueue</tt> action uses:
--   
--   <ul>
--   <li><tt>DelaySeconds</tt> – The length of time, in seconds, for which
--   the delivery of all messages in the queue is delayed. Valid values: An
--   integer from 0 to 900 seconds (15 minutes). Default: 0.</li>
--   <li><tt>MaximumMessageSize</tt> – The limit of how many bytes a
--   message can contain before Amazon SQS rejects it. Valid values: An
--   integer from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). Default:
--   262,144 (256 KiB).</li>
--   <li><tt>MessageRetentionPeriod</tt> – The length of time, in seconds,
--   for which Amazon SQS retains a message. Valid values: An integer from
--   60 seconds (1 minute) to 1,209,600 seconds (14 days). Default: 345,600
--   (4 days).</li>
--   <li><tt>Policy</tt> – The queue's policy. A valid Amazon Web Services
--   policy. For more information about policy structure, see <a>Overview
--   of Amazon Web Services IAM Policies</a> in the <i>Amazon IAM User
--   Guide</i>.</li>
--   <li><tt>ReceiveMessageWaitTimeSeconds</tt> – The length of time, in
--   seconds, for which a <tt> ReceiveMessage </tt> action waits for a
--   message to arrive. Valid values: An integer from 0 to 20 (seconds).
--   Default: 0.</li>
--   <li><tt>VisibilityTimeout</tt> – The visibility timeout for the queue,
--   in seconds. Valid values: An integer from 0 to 43,200 (12 hours).
--   Default: 30. For more information about the visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer
--   Guide</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>dead-letter queues:</a>
--   
--   <ul>
--   <li><tt>RedrivePolicy</tt> – The string that includes the parameters
--   for the dead-letter queue functionality of the source queue as a JSON
--   object. The parameters are as
--   follows:<ul><li><tt>deadLetterTargetArn</tt> – The Amazon Resource
--   Name (ARN) of the dead-letter queue to which Amazon SQS moves messages
--   after the value of <tt>maxReceiveCount</tt> is
--   exceeded.</li><li><tt>maxReceiveCount</tt> – The number of times a
--   message is delivered to the source queue before being moved to the
--   dead-letter queue. When the <tt>ReceiveCount</tt> for a message
--   exceeds the <tt>maxReceiveCount</tt> for a queue, Amazon SQS moves the
--   message to the dead-letter-queue.</li></ul></li>
--   <li><tt>RedriveAllowPolicy</tt> – The string that includes the
--   parameters for the permissions for the dead-letter queue redrive
--   permission and which source queues can specify dead-letter queues as a
--   JSON object. The parameters are as
--   follows:<ul><li><tt>redrivePermission</tt> – The permission type that
--   defines which source queues can specify the current queue as the
--   dead-letter queue. Valid values are:<ul><li><tt>allowAll</tt> –
--   (Default) Any source queues in this Amazon Web Services account in the
--   same Region can specify this queue as the dead-letter
--   queue.</li><li><tt>denyAll</tt> – No source queues can specify this
--   queue as the dead-letter queue.</li><li><tt>byQueue</tt> – Only queues
--   specified by the <tt>sourceQueueArns</tt> parameter can specify this
--   queue as the dead-letter
--   queue.</li></ul></li><li><tt>sourceQueueArns</tt> – The Amazon
--   Resource Names (ARN)s of the source queues that can specify this queue
--   as the dead-letter queue and redrive messages. You can specify this
--   parameter only when the <tt>redrivePermission</tt> parameter is set to
--   <tt>byQueue</tt>. You can specify up to 10 source queue ARNs. To allow
--   more than 10 source queues to specify dead-letter queues, set the
--   <tt>redrivePermission</tt> parameter to
--   <tt>allowAll</tt>.</li></ul></li>
--   </ul>
--   
--   The dead-letter queue of a FIFO queue must also be a FIFO queue.
--   Similarly, the dead-letter queue of a standard queue must also be a
--   standard queue.
--   
--   The following attributes apply only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SQS or a custom CMK. For more
--   information, see <a>Key Terms</a>. While the alias of the Amazon Web
--   Services managed CMK for Amazon SQS is always <tt>alias/aws/sqs</tt>,
--   the alias of a custom CMK can, for example, be <tt>alias/MyAlias
--   </tt>. For more examples, see <a>KeyId</a> in the <i>Key Management
--   Service API Reference</i>.</li>
--   <li><tt>KmsDataKeyReusePeriodSeconds</tt> – The length of time, in
--   seconds, for which Amazon SQS can reuse a <a>data key</a> to encrypt
--   or decrypt messages before calling KMS again. An integer representing
--   seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours).
--   Default: 300 (5 minutes). A shorter time period provides better
--   security but results in more calls to KMS which might incur charges
--   after Free Tier. For more information, see <a>How Does the Data Key
--   Reuse Period Work?</a>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO (first-in-first-out)
--   queues</a>:
--   
--   <ul>
--   <li><tt>FifoQueue</tt> – Designates a queue as FIFO. Valid values are
--   <tt>true</tt> and <tt>false</tt>. If you don't specify the
--   <tt>FifoQueue</tt> attribute, Amazon SQS creates a standard queue. You
--   can provide this attribute only during queue creation. You can't
--   change it for an existing queue. When you set this attribute, you must
--   also provide the <tt>MessageGroupId</tt> for your messages
--   explicitly.For more information, see <a>FIFO queue logic</a> in the
--   <i>Amazon SQS Developer Guide</i>.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication. Valid values are <tt>true</tt> and <tt>false</tt>. For
--   more information, see <a>Exactly-once processing</a> in the <i>Amazon
--   SQS Developer Guide</i>. Note the following:<ul><li>Every message must
--   have a unique <tt>MessageDeduplicationId</tt>.<ul><li>You may provide
--   a <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't
--   able to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li><li>When <tt>ContentBasedDeduplication</tt> is in
--   effect, messages with identical content sent within the deduplication
--   interval are treated as duplicates and only one copy of the message is
--   delivered.</li><li>If you send one message with
--   <tt>ContentBasedDeduplication</tt> enabled and then another message
--   with a <tt>MessageDeduplicationId</tt> that is the same as the one
--   generated for the first <tt>MessageDeduplicationId</tt>, the two
--   messages are treated as duplicates and only one copy of the message is
--   delivered.</li></ul></li>
--   </ul>
--   
--   The following attributes apply only to <a>high throughput for FIFO
--   queues</a>:
--   
--   <ul>
--   <li><tt>DeduplicationScope</tt> – Specifies whether message
--   deduplication occurs at the message group or queue level. Valid values
--   are <tt>messageGroup</tt> and <tt>queue</tt>.</li>
--   <li><tt>FifoThroughputLimit</tt> – Specifies whether the FIFO queue
--   throughput quota applies to the entire queue or per message group.
--   Valid values are <tt>perQueue</tt> and <tt>perMessageGroupId</tt>. The
--   <tt>perMessageGroupId</tt> value is allowed only when the value for
--   <tt>DeduplicationScope</tt> is <tt>messageGroup</tt>.</li>
--   </ul>
--   
--   To enable high throughput for FIFO queues, do the following:
--   
--   <ul>
--   <li>Set <tt>DeduplicationScope</tt> to <tt>messageGroup</tt>.</li>
--   <li>Set <tt>FifoThroughputLimit</tt> to
--   <tt>perMessageGroupId</tt>.</li>
--   </ul>
--   
--   If you set these attributes to anything other than the values shown
--   for enabling high throughput, normal throughput is in effect and
--   deduplication occurs as specified.
--   
--   For information on throughput quotas, see <a>Quotas related to
--   messages</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:tags:CreateQueue'</a>, <a>createQueue_tags</a> - Add cost
--   allocation tags to the specified Amazon SQS queue. For an overview,
--   see <a>Tagging Your Amazon SQS Queues</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   When you use queue tags, keep the following guidelines in mind:
--   
--   <ul>
--   <li>Adding more than 50 tags to a queue isn't recommended.</li>
--   <li>Tags don't have any semantic meaning. Amazon SQS interprets tags
--   as character strings.</li>
--   <li>Tags are case-sensitive.</li>
--   <li>A new tag with a key identical to that of an existing tag
--   overwrites the existing tag.</li>
--   </ul>
--   
--   For a full list of tag restrictions, see <a>Quotas related to
--   queues</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   To be able to tag a queue on creation, you must have the
--   <tt>sqs:CreateQueue</tt> and <tt>sqs:TagQueue</tt> permissions.
--   
--   Cross-account permissions don't apply to this action. For more
--   information, see <a>Grant cross-account permissions to a role and a
--   user name</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:queueName:CreateQueue'</a>, <a>createQueue_queueName</a> - The
--   name of the new queue. The following limits apply to this name:
--   
--   <ul>
--   <li>A queue name can have up to 80 characters.</li>
--   <li>Valid values: alphanumeric characters, hyphens (<tt>-</tt>), and
--   underscores (<tt>_</tt>).</li>
--   <li>A FIFO queue name must end with the <tt>.fifo</tt> suffix.</li>
--   </ul>
--   
--   Queue URLs and names are case-sensitive.
newCreateQueue :: Text -> CreateQueue

-- | Returns the <tt>QueueUrl</tt> attribute of the created queue.
--   
--   <i>See:</i> <a>newCreateQueueResponse</a> smart constructor.
data CreateQueueResponse
CreateQueueResponse' :: Maybe Text -> Int -> CreateQueueResponse

-- | Create a value of <a>CreateQueueResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:CreateQueueResponse'</a>,
--   <a>createQueueResponse_queueUrl</a> - The URL of the created Amazon
--   SQS queue.
--   
--   <a>$sel:httpStatus:CreateQueueResponse'</a>,
--   <a>createQueueResponse_httpStatus</a> - The response's http status
--   code.
newCreateQueueResponse :: Int -> CreateQueueResponse

-- | <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Text -> Text -> RemovePermission

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queueUrl:RemovePermission'</a>,
--   <a>removePermission_queueUrl</a> - The URL of the Amazon SQS queue
--   from which permissions are removed.
--   
--   Queue URLs and names are case-sensitive.
--   
--   <a>$sel:label:RemovePermission'</a>, <a>removePermission_label</a> -
--   The identification of the permission to remove. This is the label
--   added using the <tt> AddPermission </tt> action.
newRemovePermission :: Text -> Text -> RemovePermission

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse
newtype MessageAttribute
MessageAttribute' :: Text -> MessageAttribute
[fromMessageAttribute] :: MessageAttribute -> Text
pattern MessageAttribute_All :: MessageAttribute
pattern MessageAttribute_ApproximateFirstReceiveTimestamp :: MessageAttribute
pattern MessageAttribute_ApproximateReceiveCount :: MessageAttribute
pattern MessageAttribute_SenderId :: MessageAttribute
pattern MessageAttribute_SentTimestamp :: MessageAttribute
newtype MessageSystemAttributeNameForSends
MessageSystemAttributeNameForSends' :: Text -> MessageSystemAttributeNameForSends
[fromMessageSystemAttributeNameForSends] :: MessageSystemAttributeNameForSends -> Text
pattern MessageSystemAttributeNameForSends_AWSTraceHeader :: MessageSystemAttributeNameForSends
newtype QueueAttributeName
QueueAttributeName' :: Text -> QueueAttributeName
[fromQueueAttributeName] :: QueueAttributeName -> Text
pattern QueueAttributeName_All :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessages :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessagesDelayed :: QueueAttributeName
pattern QueueAttributeName_ApproximateNumberOfMessagesNotVisible :: QueueAttributeName
pattern QueueAttributeName_ContentBasedDeduplication :: QueueAttributeName
pattern QueueAttributeName_CreatedTimestamp :: QueueAttributeName
pattern QueueAttributeName_DeduplicationScope :: QueueAttributeName
pattern QueueAttributeName_DelaySeconds :: QueueAttributeName
pattern QueueAttributeName_FifoQueue :: QueueAttributeName
pattern QueueAttributeName_FifoThroughputLimit :: QueueAttributeName
pattern QueueAttributeName_KmsDataKeyReusePeriodSeconds :: QueueAttributeName
pattern QueueAttributeName_KmsMasterKeyId :: QueueAttributeName
pattern QueueAttributeName_LastModifiedTimestamp :: QueueAttributeName
pattern QueueAttributeName_MaximumMessageSize :: QueueAttributeName
pattern QueueAttributeName_MessageRetentionPeriod :: QueueAttributeName
pattern QueueAttributeName_Policy :: QueueAttributeName
pattern QueueAttributeName_QueueArn :: QueueAttributeName
pattern QueueAttributeName_ReceiveMessageWaitTimeSeconds :: QueueAttributeName
pattern QueueAttributeName_RedriveAllowPolicy :: QueueAttributeName
pattern QueueAttributeName_RedrivePolicy :: QueueAttributeName
pattern QueueAttributeName_VisibilityTimeout :: QueueAttributeName

-- | Gives a detailed description of the result of an action on each entry
--   in the request.
--   
--   <i>See:</i> <a>newBatchResultErrorEntry</a> smart constructor.
data BatchResultErrorEntry
BatchResultErrorEntry' :: Maybe Text -> Text -> Bool -> Text -> BatchResultErrorEntry

-- | Create a value of <a>BatchResultErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_message</a> - A message explaining why the
--   action failed on this entry.
--   
--   <a>$sel:id:BatchResultErrorEntry'</a>, <a>batchResultErrorEntry_id</a>
--   - The <tt>Id</tt> of an entry in a batch request.
--   
--   <a>$sel:senderFault:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_senderFault</a> - Specifies whether the error
--   happened due to the caller of the batch API action.
--   
--   <a>$sel:code:BatchResultErrorEntry'</a>,
--   <a>batchResultErrorEntry_code</a> - An error code representing why the
--   action failed on this entry.
newBatchResultErrorEntry :: Text -> Bool -> Text -> BatchResultErrorEntry

-- | Encloses a receipt handle and an entry id for each message in <tt>
--   ChangeMessageVisibilityBatch.</tt>
--   
--   All of the following list parameters must be prefixed with
--   <tt>ChangeMessageVisibilityBatchRequestEntry.n</tt>, where <tt>n</tt>
--   is an integer value starting with <tt>1</tt>. For example, a parameter
--   list for this action might look like this:
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.Id=change_visibility_msg_2
--   </pre>
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle=your_receipt_handle
--   </pre>
--   
--   <pre>
--   &amp;ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout=45
--   </pre>
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchRequestEntry</a> smart
--   constructor.
data ChangeMessageVisibilityBatchRequestEntry
ChangeMessageVisibilityBatchRequestEntry' :: Maybe Int -> Text -> Text -> ChangeMessageVisibilityBatchRequestEntry

-- | Create a value of <a>ChangeMessageVisibilityBatchRequestEntry</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:visibilityTimeout:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_visibilityTimeout</a> -
--   The new value (in seconds) for the message's visibility timeout.
--   
--   <a>$sel:id:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_id</a> - An identifier for
--   this particular receipt handle used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:receiptHandle:ChangeMessageVisibilityBatchRequestEntry'</a>,
--   <a>changeMessageVisibilityBatchRequestEntry_receiptHandle</a> - A
--   receipt handle.
newChangeMessageVisibilityBatchRequestEntry :: Text -> Text -> ChangeMessageVisibilityBatchRequestEntry

-- | Encloses the <tt>Id</tt> of an entry in <tt>
--   ChangeMessageVisibilityBatch.</tt>
--   
--   <i>See:</i> <a>newChangeMessageVisibilityBatchResultEntry</a> smart
--   constructor.
data ChangeMessageVisibilityBatchResultEntry
ChangeMessageVisibilityBatchResultEntry' :: Text -> ChangeMessageVisibilityBatchResultEntry

-- | Create a value of <a>ChangeMessageVisibilityBatchResultEntry</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ChangeMessageVisibilityBatchResultEntry'</a>,
--   <a>changeMessageVisibilityBatchResultEntry_id</a> - Represents a
--   message whose visibility timeout has been changed successfully.
newChangeMessageVisibilityBatchResultEntry :: Text -> ChangeMessageVisibilityBatchResultEntry

-- | Encloses a receipt handle and an identifier for it.
--   
--   <i>See:</i> <a>newDeleteMessageBatchRequestEntry</a> smart
--   constructor.
data DeleteMessageBatchRequestEntry
DeleteMessageBatchRequestEntry' :: Text -> Text -> DeleteMessageBatchRequestEntry

-- | Create a value of <a>DeleteMessageBatchRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteMessageBatchRequestEntry'</a>,
--   <a>deleteMessageBatchRequestEntry_id</a> - An identifier for this
--   particular receipt handle. This is used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:receiptHandle:DeleteMessageBatchRequestEntry'</a>,
--   <a>deleteMessageBatchRequestEntry_receiptHandle</a> - A receipt
--   handle.
newDeleteMessageBatchRequestEntry :: Text -> Text -> DeleteMessageBatchRequestEntry

-- | Encloses the <tt>Id</tt> of an entry in <tt> DeleteMessageBatch.</tt>
--   
--   <i>See:</i> <a>newDeleteMessageBatchResultEntry</a> smart constructor.
data DeleteMessageBatchResultEntry
DeleteMessageBatchResultEntry' :: Text -> DeleteMessageBatchResultEntry

-- | Create a value of <a>DeleteMessageBatchResultEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteMessageBatchResultEntry'</a>,
--   <a>deleteMessageBatchResultEntry_id</a> - Represents a successfully
--   deleted message.
newDeleteMessageBatchResultEntry :: Text -> DeleteMessageBatchResultEntry

-- | An Amazon SQS message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe Text -> Maybe Text -> Maybe (HashMap MessageAttribute Text) -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe Text -> Maybe Text -> Message

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:Message'</a>, <a>message_body</a> - The message's
--   contents (not URL-encoded).
--   
--   <a>$sel:mD5OfBody:Message'</a>, <a>message_mD5OfBody</a> - An MD5
--   digest of the non-URL-encoded message body string.
--   
--   <a>$sel:attributes:Message'</a>, <a>message_attributes</a> - A map of
--   the attributes requested in <tt> ReceiveMessage </tt> to their
--   respective values. Supported attributes:
--   
--   <ul>
--   <li><pre>ApproximateReceiveCount</pre></li>
--   <li><pre>ApproximateFirstReceiveTimestamp</pre></li>
--   <li><pre>MessageDeduplicationId</pre></li>
--   <li><pre>MessageGroupId</pre></li>
--   <li><pre>SenderId</pre></li>
--   <li><pre>SentTimestamp</pre></li>
--   <li><pre>SequenceNumber</pre></li>
--   </ul>
--   
--   <tt>ApproximateFirstReceiveTimestamp</tt> and <tt>SentTimestamp</tt>
--   are each returned as an integer representing the <a>epoch time</a> in
--   milliseconds.
--   
--   <a>$sel:messageAttributes:Message'</a>,
--   <a>message_messageAttributes</a> - Each message attribute consists of
--   a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>. For more
--   information, see <a>Amazon SQS message attributes</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   <a>$sel:mD5OfMessageAttributes:Message'</a>,
--   <a>message_mD5OfMessageAttributes</a> - An MD5 digest of the
--   non-URL-encoded message attribute string. You can use this attribute
--   to verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:receiptHandle:Message'</a>, <a>message_receiptHandle</a> - An
--   identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - A unique
--   identifier for the message. A <tt>MessageId</tt>is considered unique
--   across all accounts for an extended period of time.
newMessage :: Message

-- | The user-specified message attribute value. For string data types, the
--   <tt>Value</tt> attribute has the same restrictions on the content as
--   the message body. For more information, see <tt> SendMessage.</tt>
--   
--   <tt>Name</tt>, <tt>type</tt>, <tt>value</tt> and the message body must
--   not be empty or null. All parts of the message attribute, including
--   <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>, are part of the
--   message size restriction (256 KB or 262,144 bytes).
--   
--   <i>See:</i> <a>newMessageAttributeValue</a> smart constructor.
data MessageAttributeValue
MessageAttributeValue' :: Maybe [Text] -> Maybe Text -> Maybe [Base64] -> Maybe Base64 -> Text -> MessageAttributeValue

-- | Create a value of <a>MessageAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringListValues:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:stringValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringValue</a> - Strings are Unicode with
--   UTF-8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryListValues:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:binaryValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryValue</a> - Binary type attributes can
--   store any binary data, such as compressed data, encrypted data, or
--   images.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and
--   decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:dataType:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_dataType</a> - Amazon SQS supports the
--   following logical data types: <tt>String</tt>, <tt>Number</tt>, and
--   <tt>Binary</tt>. For the <tt>Number</tt> data type, you must use
--   <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
newMessageAttributeValue :: Text -> MessageAttributeValue

-- | The user-specified message system attribute value. For string data
--   types, the <tt>Value</tt> attribute has the same restrictions on the
--   content as the message body. For more information, see <tt>
--   SendMessage.</tt>
--   
--   <tt>Name</tt>, <tt>type</tt>, <tt>value</tt> and the message body must
--   not be empty or null.
--   
--   <i>See:</i> <a>newMessageSystemAttributeValue</a> smart constructor.
data MessageSystemAttributeValue
MessageSystemAttributeValue' :: Maybe [Text] -> Maybe Text -> Maybe [Base64] -> Maybe Base64 -> Text -> MessageSystemAttributeValue

-- | Create a value of <a>MessageSystemAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringListValues:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_stringListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:stringValue:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_stringValue</a> - Strings are Unicode
--   with UTF-8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryListValues:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_binaryListValues</a> - Not implemented.
--   Reserved for future use.
--   
--   <a>$sel:binaryValue:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_binaryValue</a> - Binary type
--   attributes can store any binary data, such as compressed data,
--   encrypted data, or images.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:dataType:MessageSystemAttributeValue'</a>,
--   <a>messageSystemAttributeValue_dataType</a> - Amazon SQS supports the
--   following logical data types: <tt>String</tt>, <tt>Number</tt>, and
--   <tt>Binary</tt>. For the <tt>Number</tt> data type, you must use
--   <tt>StringValue</tt>.
--   
--   You can also append custom labels. For more information, see <a>Amazon
--   SQS Message Attributes</a> in the <i>Amazon SQS Developer Guide</i>.
newMessageSystemAttributeValue :: Text -> MessageSystemAttributeValue

-- | Contains the details of a single Amazon SQS message along with an
--   <tt>Id</tt>.
--   
--   <i>See:</i> <a>newSendMessageBatchRequestEntry</a> smart constructor.
data SendMessageBatchRequestEntry
SendMessageBatchRequestEntry' :: Maybe Text -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe (HashMap MessageSystemAttributeNameForSends MessageSystemAttributeValue) -> Maybe Int -> Text -> Text -> SendMessageBatchRequestEntry

-- | Create a value of <a>SendMessageBatchRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageDeduplicationId:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageDeduplicationId</a> - This
--   parameter applies only to FIFO (first-in-first-out) queues.
--   
--   The token used for deduplication of messages within a 5-minute minimum
--   deduplication interval. If a message with a particular
--   <tt>MessageDeduplicationId</tt> is sent successfully, subsequent
--   messages with the same <tt>MessageDeduplicationId</tt> are accepted
--   successfully but aren't delivered. For more information, see
--   <a>Exactly-once processing</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   <ul>
--   <li>Every message must have a unique
--   <tt>MessageDeduplicationId</tt>,<ul><li>You may provide a
--   <tt>MessageDeduplicationId</tt> explicitly.</li><li>If you aren't able
--   to provide a <tt>MessageDeduplicationId</tt> and you enable
--   <tt>ContentBasedDeduplication</tt> for your queue, Amazon SQS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the
--   message).</li><li>If you don't provide a
--   <tt>MessageDeduplicationId</tt> and the queue doesn't have
--   <tt>ContentBasedDeduplication</tt> set, the action fails with an
--   error.</li><li>If the queue has <tt>ContentBasedDeduplication</tt>
--   set, your <tt>MessageDeduplicationId</tt> overrides the generated
--   one.</li></ul></li>
--   <li>When <tt>ContentBasedDeduplication</tt> is in effect, messages
--   with identical content sent within the deduplication interval are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   <li>If you send one message with <tt>ContentBasedDeduplication</tt>
--   enabled and then another message with a
--   <tt>MessageDeduplicationId</tt> that is the same as the one generated
--   for the first <tt>MessageDeduplicationId</tt>, the two messages are
--   treated as duplicates and only one copy of the message is
--   delivered.</li>
--   </ul>
--   
--   The <tt>MessageDeduplicationId</tt> is available to the consumer of
--   the message (this can be useful for troubleshooting delivery issues).
--   
--   If a message is sent successfully but the acknowledgement is lost and
--   the message is resent with the same <tt>MessageDeduplicationId</tt>
--   after the deduplication interval, Amazon SQS can't detect duplicate
--   messages.
--   
--   Amazon SQS continues to keep track of the message deduplication ID
--   even after the message is received and deleted.
--   
--   The length of <tt>MessageDeduplicationId</tt> is 128 characters.
--   <tt>MessageDeduplicationId</tt> can contain alphanumeric characters
--   (<tt>a-z</tt>, <tt>A-Z</tt>, <tt>0-9</tt>) and punctuation
--   (<tt>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</tt>).
--   
--   For best practices of using <tt>MessageDeduplicationId</tt>, see
--   <a>Using the MessageDeduplicationId Property</a> in the <i>Amazon SQS
--   Developer Guide</i>.
--   
--   <a>$sel:messageAttributes:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageAttributes</a> - Each message
--   attribute consists of a <tt>Name</tt>, <tt>Type</tt>, and
--   <tt>Value</tt>. For more information, see <a>Amazon SQS message
--   attributes</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <a>$sel:messageGroupId:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageGroupId</a> - This parameter
--   applies only to FIFO (first-in-first-out) queues.
--   
--   The tag that specifies that a message belongs to a specific message
--   group. Messages that belong to the same message group are processed in
--   a FIFO manner (however, messages in different message groups might be
--   processed out of order). To interleave multiple ordered streams within
--   a single queue, use <tt>MessageGroupId</tt> values (for example,
--   session data for multiple users). In this scenario, multiple consumers
--   can process the queue, but the session data of each user is processed
--   in a FIFO fashion.
--   
--   <ul>
--   <li>You must associate a non-empty <tt>MessageGroupId</tt> with a
--   message. If you don't provide a <tt>MessageGroupId</tt>, the action
--   fails.</li>
--   <li><tt>ReceiveMessage</tt> might return messages with multiple
--   <tt>MessageGroupId</tt> values. For each <tt>MessageGroupId</tt>, the
--   messages are sorted by time sent. The caller can't specify a
--   <tt>MessageGroupId</tt>.</li>
--   </ul>
--   
--   The length of <tt>MessageGroupId</tt> is 128 characters. Valid values:
--   alphanumeric characters and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   For best practices of using <tt>MessageGroupId</tt>, see <a>Using the
--   MessageGroupId Property</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   <tt>MessageGroupId</tt> is required for FIFO queues. You can't use it
--   for Standard queues.
--   
--   <a>$sel:messageSystemAttributes:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageSystemAttributes</a> - The
--   message system attribute to send Each message system attribute
--   consists of a <tt>Name</tt>, <tt>Type</tt>, and <tt>Value</tt>.
--   
--   <ul>
--   <li>Currently, the only supported message system attribute is
--   <tt>AWSTraceHeader</tt>. Its type must be <tt>String</tt> and its
--   value must be a correctly formatted X-Ray trace header string.</li>
--   <li>The size of a message system attribute doesn't count towards the
--   total size of a message.</li>
--   </ul>
--   
--   <a>$sel:delaySeconds:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_delaySeconds</a> - The length of time,
--   in seconds, for which a specific message is delayed. Valid values: 0
--   to 900. Maximum: 15 minutes. Messages with a positive
--   <tt>DelaySeconds</tt> value become available for processing after the
--   delay period is finished. If you don't specify a value, the default
--   value for the queue is applied.
--   
--   When you set <tt>FifoQueue</tt>, you can't set <tt>DelaySeconds</tt>
--   per message. You can set this parameter only on a queue level.
--   
--   <a>$sel:id:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_id</a> - An identifier for a message
--   in this batch used to communicate the result.
--   
--   The <tt>Id</tt>s of a batch request need to be unique within a
--   request.
--   
--   This identifier can have up to 80 characters. The following characters
--   are accepted: alphanumeric characters, hyphens(-), and underscores
--   (_).
--   
--   <a>$sel:messageBody:SendMessageBatchRequestEntry'</a>,
--   <a>sendMessageBatchRequestEntry_messageBody</a> - The body of the
--   message.
newSendMessageBatchRequestEntry :: Text -> Text -> SendMessageBatchRequestEntry

-- | Encloses a <tt>MessageId</tt> for a successfully-enqueued message in a
--   <tt> SendMessageBatch.</tt>
--   
--   <i>See:</i> <a>newSendMessageBatchResultEntry</a> smart constructor.
data SendMessageBatchResultEntry
SendMessageBatchResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> SendMessageBatchResultEntry

-- | Create a value of <a>SendMessageBatchResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceNumber:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_sequenceNumber</a> - This parameter
--   applies only to FIFO (first-in-first-out) queues.
--   
--   The large, non-consecutive number that Amazon SQS assigns to each
--   message.
--   
--   The length of <tt>SequenceNumber</tt> is 128 bits. As
--   <tt>SequenceNumber</tt> continues to increase for a particular
--   <tt>MessageGroupId</tt>.
--   
--   <a>$sel:mD5OfMessageSystemAttributes:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageSystemAttributes</a> - An
--   MD5 digest of the non-URL-encoded message system attribute string. You
--   can use this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:mD5OfMessageAttributes:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageAttributes</a> - An MD5
--   digest of the non-URL-encoded message attribute string. You can use
--   this attribute to verify that Amazon SQS received the message
--   correctly. Amazon SQS URL-decodes the message before creating the MD5
--   digest. For information about MD5, see <a>RFC1321</a>.
--   
--   <a>$sel:id:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_id</a> - An identifier for the message
--   in this batch.
--   
--   <a>$sel:messageId:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_messageId</a> - An identifier for the
--   message.
--   
--   <a>$sel:mD5OfMessageBody:SendMessageBatchResultEntry'</a>,
--   <a>sendMessageBatchResultEntry_mD5OfMessageBody</a> - An MD5 digest of
--   the non-URL-encoded message body string. You can use this attribute to
--   verify that Amazon SQS received the message correctly. Amazon SQS
--   URL-decodes the message before creating the MD5 digest. For
--   information about MD5, see <a>RFC1321</a>.
newSendMessageBatchResultEntry :: Text -> Text -> Text -> SendMessageBatchResultEntry
