-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-mediaconnectZSamazonka-mediaconnect
@version 2.0


module Amazonka.MediaConnect.Types.Algorithm
newtype Algorithm
Algorithm' :: Text -> Algorithm
[fromAlgorithm] :: Algorithm -> Text
pattern Algorithm_Aes128 :: Algorithm
pattern Algorithm_Aes192 :: Algorithm
pattern Algorithm_Aes256 :: Algorithm
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance GHC.Read.Read Amazonka.MediaConnect.Types.Algorithm.Algorithm
instance GHC.Show.Show Amazonka.MediaConnect.Types.Algorithm.Algorithm


module Amazonka.MediaConnect.Types.Colorimetry
newtype Colorimetry
Colorimetry' :: Text -> Colorimetry
[fromColorimetry] :: Colorimetry -> Text
pattern Colorimetry_BT2020 :: Colorimetry
pattern Colorimetry_BT2100 :: Colorimetry
pattern Colorimetry_BT601 :: Colorimetry
pattern Colorimetry_BT709 :: Colorimetry
pattern Colorimetry_ST2065_1 :: Colorimetry
pattern Colorimetry_ST2065_3 :: Colorimetry
pattern Colorimetry_XYZ :: Colorimetry
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance GHC.Read.Read Amazonka.MediaConnect.Types.Colorimetry.Colorimetry
instance GHC.Show.Show Amazonka.MediaConnect.Types.Colorimetry.Colorimetry


module Amazonka.MediaConnect.Types.DurationUnits
newtype DurationUnits
DurationUnits' :: Text -> DurationUnits
[fromDurationUnits] :: DurationUnits -> Text
pattern DurationUnits_MONTHS :: DurationUnits
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance GHC.Read.Read Amazonka.MediaConnect.Types.DurationUnits.DurationUnits
instance GHC.Show.Show Amazonka.MediaConnect.Types.DurationUnits.DurationUnits


module Amazonka.MediaConnect.Types.EncoderProfile
newtype EncoderProfile
EncoderProfile' :: Text -> EncoderProfile
[fromEncoderProfile] :: EncoderProfile -> Text
pattern EncoderProfile_High :: EncoderProfile
pattern EncoderProfile_Main :: EncoderProfile
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance GHC.Read.Read Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile
instance GHC.Show.Show Amazonka.MediaConnect.Types.EncoderProfile.EncoderProfile


module Amazonka.MediaConnect.Types.EncodingName
newtype EncodingName
EncodingName' :: Text -> EncodingName
[fromEncodingName] :: EncodingName -> Text
pattern EncodingName_Jxsv :: EncodingName
pattern EncodingName_Pcm :: EncodingName
pattern EncodingName_Raw :: EncodingName
pattern EncodingName_Smpte291 :: EncodingName
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance GHC.Read.Read Amazonka.MediaConnect.Types.EncodingName.EncodingName
instance GHC.Show.Show Amazonka.MediaConnect.Types.EncodingName.EncodingName


module Amazonka.MediaConnect.Types.EncodingParameters

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
--   
--   <i>See:</i> <a>newEncodingParameters</a> smart constructor.
data EncodingParameters
EncodingParameters' :: EncoderProfile -> Double -> EncodingParameters

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, with a flow source that uses
--   the CDI protocol.
[$sel:encoderProfile:EncodingParameters'] :: EncodingParameters -> EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
[$sel:compressionFactor:EncodingParameters'] :: EncodingParameters -> Double

-- | Create a value of <a>EncodingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encoderProfile:EncodingParameters'</a>,
--   <a>encodingParameters_encoderProfile</a> - A setting on the encoder
--   that drives compression settings. This property only applies to video
--   media streams associated with outputs that use the ST 2110 JPEG XS
--   protocol, with a flow source that uses the CDI protocol.
--   
--   <a>$sel:compressionFactor:EncodingParameters'</a>,
--   <a>encodingParameters_compressionFactor</a> - A value that is used to
--   calculate compression for an output. The bitrate of the output is
--   calculated as follows: Output bitrate = (1 / compressionFactor) *
--   (source bitrate) This property only applies to outputs that use the ST
--   2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
--   Valid values are floating point numbers in the range of 3.0 to 10.0,
--   inclusive.
newEncodingParameters :: EncoderProfile -> Double -> EncodingParameters

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, with a flow source that uses
--   the CDI protocol.
encodingParameters_encoderProfile :: Lens' EncodingParameters EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
encodingParameters_compressionFactor :: Lens' EncodingParameters Double
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.EncodingParameters.EncodingParameters
instance GHC.Show.Show Amazonka.MediaConnect.Types.EncodingParameters.EncodingParameters
instance GHC.Read.Read Amazonka.MediaConnect.Types.EncodingParameters.EncodingParameters
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.EncodingParameters.EncodingParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.EncodingParameters.EncodingParameters
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.EncodingParameters.EncodingParameters
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.EncodingParameters.EncodingParameters


module Amazonka.MediaConnect.Types.EncodingParametersRequest

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
--   
--   <i>See:</i> <a>newEncodingParametersRequest</a> smart constructor.
data EncodingParametersRequest
EncodingParametersRequest' :: EncoderProfile -> Double -> EncodingParametersRequest

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, if at least one source on the
--   flow uses the CDI protocol.
[$sel:encoderProfile:EncodingParametersRequest'] :: EncodingParametersRequest -> EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
[$sel:compressionFactor:EncodingParametersRequest'] :: EncodingParametersRequest -> Double

-- | Create a value of <a>EncodingParametersRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encoderProfile:EncodingParametersRequest'</a>,
--   <a>encodingParametersRequest_encoderProfile</a> - A setting on the
--   encoder that drives compression settings. This property only applies
--   to video media streams associated with outputs that use the ST 2110
--   JPEG XS protocol, if at least one source on the flow uses the CDI
--   protocol.
--   
--   <a>$sel:compressionFactor:EncodingParametersRequest'</a>,
--   <a>encodingParametersRequest_compressionFactor</a> - A value that is
--   used to calculate compression for an output. The bitrate of the output
--   is calculated as follows: Output bitrate = (1 / compressionFactor) *
--   (source bitrate) This property only applies to outputs that use the ST
--   2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
--   Valid values are floating point numbers in the range of 3.0 to 10.0,
--   inclusive.
newEncodingParametersRequest :: EncoderProfile -> Double -> EncodingParametersRequest

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, if at least one source on the
--   flow uses the CDI protocol.
encodingParametersRequest_encoderProfile :: Lens' EncodingParametersRequest EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
encodingParametersRequest_compressionFactor :: Lens' EncodingParametersRequest Double
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.EncodingParametersRequest.EncodingParametersRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.EncodingParametersRequest.EncodingParametersRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.EncodingParametersRequest.EncodingParametersRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.EncodingParametersRequest.EncodingParametersRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.EncodingParametersRequest.EncodingParametersRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.EncodingParametersRequest.EncodingParametersRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.EncodingParametersRequest.EncodingParametersRequest


module Amazonka.MediaConnect.Types.EntitlementStatus
newtype EntitlementStatus
EntitlementStatus' :: Text -> EntitlementStatus
[fromEntitlementStatus] :: EntitlementStatus -> Text
pattern EntitlementStatus_DISABLED :: EntitlementStatus
pattern EntitlementStatus_ENABLED :: EntitlementStatus
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance GHC.Read.Read Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus
instance GHC.Show.Show Amazonka.MediaConnect.Types.EntitlementStatus.EntitlementStatus


module Amazonka.MediaConnect.Types.FailoverMode
newtype FailoverMode
FailoverMode' :: Text -> FailoverMode
[fromFailoverMode] :: FailoverMode -> Text
pattern FailoverMode_FAILOVER :: FailoverMode
pattern FailoverMode_MERGE :: FailoverMode
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance GHC.Read.Read Amazonka.MediaConnect.Types.FailoverMode.FailoverMode
instance GHC.Show.Show Amazonka.MediaConnect.Types.FailoverMode.FailoverMode


module Amazonka.MediaConnect.Types.Interface

-- | The VPC interface that is used for the media stream associated with
--   the source or output.
--   
--   <i>See:</i> <a>newInterface</a> smart constructor.
data Interface
Interface' :: Text -> Interface

-- | The name of the VPC interface.
[$sel:name:Interface'] :: Interface -> Text

-- | Create a value of <a>Interface</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Interface'</a>, <a>interface_name</a> - The name of the
--   VPC interface.
newInterface :: Text -> Interface

-- | The name of the VPC interface.
interface_name :: Lens' Interface Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Interface.Interface
instance GHC.Show.Show Amazonka.MediaConnect.Types.Interface.Interface
instance GHC.Read.Read Amazonka.MediaConnect.Types.Interface.Interface
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Interface.Interface
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Interface.Interface
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Interface.Interface
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Interface.Interface


module Amazonka.MediaConnect.Types.InputConfiguration

-- | The transport parameters that are associated with an incoming media
--   stream.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Int -> Text -> Interface -> InputConfiguration

-- | The port that the flow listens on for an incoming media stream.
[$sel:inputPort:InputConfiguration'] :: InputConfiguration -> Int

-- | The IP address that the flow listens on for incoming content for a
--   media stream.
[$sel:inputIp:InputConfiguration'] :: InputConfiguration -> Text

-- | The VPC interface where the media stream comes in from.
[$sel:interface:InputConfiguration'] :: InputConfiguration -> Interface

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPort:InputConfiguration'</a>,
--   <a>inputConfiguration_inputPort</a> - The port that the flow listens
--   on for an incoming media stream.
--   
--   <a>$sel:inputIp:InputConfiguration'</a>,
--   <a>inputConfiguration_inputIp</a> - The IP address that the flow
--   listens on for incoming content for a media stream.
--   
--   <a>$sel:interface:InputConfiguration'</a>,
--   <a>inputConfiguration_interface</a> - The VPC interface where the
--   media stream comes in from.
newInputConfiguration :: Int -> Text -> Interface -> InputConfiguration

-- | The port that the flow listens on for an incoming media stream.
inputConfiguration_inputPort :: Lens' InputConfiguration Int

-- | The IP address that the flow listens on for incoming content for a
--   media stream.
inputConfiguration_inputIp :: Lens' InputConfiguration Text

-- | The VPC interface where the media stream comes in from.
inputConfiguration_interface :: Lens' InputConfiguration Interface
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.InputConfiguration.InputConfiguration
instance GHC.Show.Show Amazonka.MediaConnect.Types.InputConfiguration.InputConfiguration
instance GHC.Read.Read Amazonka.MediaConnect.Types.InputConfiguration.InputConfiguration
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.InputConfiguration.InputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.InputConfiguration.InputConfiguration
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.InputConfiguration.InputConfiguration
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.InputConfiguration.InputConfiguration


module Amazonka.MediaConnect.Types.DestinationConfiguration

-- | The transport parameters that are associated with an outbound media
--   stream.
--   
--   <i>See:</i> <a>newDestinationConfiguration</a> smart constructor.
data DestinationConfiguration
DestinationConfiguration' :: Text -> Int -> Interface -> Text -> DestinationConfiguration

-- | The IP address where contents of the media stream will be sent.
[$sel:destinationIp:DestinationConfiguration'] :: DestinationConfiguration -> Text

-- | The port to use when the content of the media stream is distributed to
--   the output.
[$sel:destinationPort:DestinationConfiguration'] :: DestinationConfiguration -> Int

-- | The VPC interface that is used for the media stream associated with
--   the output.
[$sel:interface:DestinationConfiguration'] :: DestinationConfiguration -> Interface

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. This value is represented by the elastic
--   network interface IP address of the VPC. This field applies only to
--   outputs that use the CDI or ST 2110 JPEG XS protocol.
[$sel:outboundIp:DestinationConfiguration'] :: DestinationConfiguration -> Text

-- | Create a value of <a>DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationIp:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_destinationIp</a> - The IP address where
--   contents of the media stream will be sent.
--   
--   <a>$sel:destinationPort:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_destinationPort</a> - The port to use when
--   the content of the media stream is distributed to the output.
--   
--   <a>$sel:interface:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_interface</a> - The VPC interface that is
--   used for the media stream associated with the output.
--   
--   <a>$sel:outboundIp:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_outboundIp</a> - The IP address that the
--   receiver requires in order to establish a connection with the flow.
--   This value is represented by the elastic network interface IP address
--   of the VPC. This field applies only to outputs that use the CDI or ST
--   2110 JPEG XS protocol.
newDestinationConfiguration :: Text -> Int -> Interface -> Text -> DestinationConfiguration

-- | The IP address where contents of the media stream will be sent.
destinationConfiguration_destinationIp :: Lens' DestinationConfiguration Text

-- | The port to use when the content of the media stream is distributed to
--   the output.
destinationConfiguration_destinationPort :: Lens' DestinationConfiguration Int

-- | The VPC interface that is used for the media stream associated with
--   the output.
destinationConfiguration_interface :: Lens' DestinationConfiguration Interface

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. This value is represented by the elastic
--   network interface IP address of the VPC. This field applies only to
--   outputs that use the CDI or ST 2110 JPEG XS protocol.
destinationConfiguration_outboundIp :: Lens' DestinationConfiguration Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.DestinationConfiguration.DestinationConfiguration
instance GHC.Show.Show Amazonka.MediaConnect.Types.DestinationConfiguration.DestinationConfiguration
instance GHC.Read.Read Amazonka.MediaConnect.Types.DestinationConfiguration.DestinationConfiguration
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.DestinationConfiguration.DestinationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.DestinationConfiguration.DestinationConfiguration
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.DestinationConfiguration.DestinationConfiguration
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.DestinationConfiguration.DestinationConfiguration


module Amazonka.MediaConnect.Types.InterfaceRequest

-- | The VPC interface that you want to designate where the media stream is
--   coming from or going to.
--   
--   <i>See:</i> <a>newInterfaceRequest</a> smart constructor.
data InterfaceRequest
InterfaceRequest' :: Text -> InterfaceRequest

-- | The name of the VPC interface.
[$sel:name:InterfaceRequest'] :: InterfaceRequest -> Text

-- | Create a value of <a>InterfaceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InterfaceRequest'</a>, <a>interfaceRequest_name</a> - The
--   name of the VPC interface.
newInterfaceRequest :: Text -> InterfaceRequest

-- | The name of the VPC interface.
interfaceRequest_name :: Lens' InterfaceRequest Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.InterfaceRequest.InterfaceRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.InterfaceRequest.InterfaceRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.InterfaceRequest.InterfaceRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.InterfaceRequest.InterfaceRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.InterfaceRequest.InterfaceRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.InterfaceRequest.InterfaceRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.InterfaceRequest.InterfaceRequest


module Amazonka.MediaConnect.Types.InputConfigurationRequest

-- | The transport parameters that you want to associate with an incoming
--   media stream.
--   
--   <i>See:</i> <a>newInputConfigurationRequest</a> smart constructor.
data InputConfigurationRequest
InputConfigurationRequest' :: Int -> InterfaceRequest -> InputConfigurationRequest

-- | The port that you want the flow to listen on for an incoming media
--   stream.
[$sel:inputPort:InputConfigurationRequest'] :: InputConfigurationRequest -> Int

-- | The VPC interface that you want to use for the incoming media stream.
[$sel:interface:InputConfigurationRequest'] :: InputConfigurationRequest -> InterfaceRequest

-- | Create a value of <a>InputConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPort:InputConfigurationRequest'</a>,
--   <a>inputConfigurationRequest_inputPort</a> - The port that you want
--   the flow to listen on for an incoming media stream.
--   
--   <a>$sel:interface:InputConfigurationRequest'</a>,
--   <a>inputConfigurationRequest_interface</a> - The VPC interface that
--   you want to use for the incoming media stream.
newInputConfigurationRequest :: Int -> InterfaceRequest -> InputConfigurationRequest

-- | The port that you want the flow to listen on for an incoming media
--   stream.
inputConfigurationRequest_inputPort :: Lens' InputConfigurationRequest Int

-- | The VPC interface that you want to use for the incoming media stream.
inputConfigurationRequest_interface :: Lens' InputConfigurationRequest InterfaceRequest
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.InputConfigurationRequest.InputConfigurationRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.InputConfigurationRequest.InputConfigurationRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.InputConfigurationRequest.InputConfigurationRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.InputConfigurationRequest.InputConfigurationRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.InputConfigurationRequest.InputConfigurationRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.InputConfigurationRequest.InputConfigurationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.InputConfigurationRequest.InputConfigurationRequest


module Amazonka.MediaConnect.Types.DestinationConfigurationRequest

-- | The transport parameters that you want to associate with an outbound
--   media stream.
--   
--   <i>See:</i> <a>newDestinationConfigurationRequest</a> smart
--   constructor.
data DestinationConfigurationRequest
DestinationConfigurationRequest' :: Text -> Int -> InterfaceRequest -> DestinationConfigurationRequest

-- | The IP address where you want MediaConnect to send contents of the
--   media stream.
[$sel:destinationIp:DestinationConfigurationRequest'] :: DestinationConfigurationRequest -> Text

-- | The port that you want MediaConnect to use when it distributes the
--   media stream to the output.
[$sel:destinationPort:DestinationConfigurationRequest'] :: DestinationConfigurationRequest -> Int

-- | The VPC interface that you want to use for the media stream associated
--   with the output.
[$sel:interface:DestinationConfigurationRequest'] :: DestinationConfigurationRequest -> InterfaceRequest

-- | Create a value of <a>DestinationConfigurationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationIp:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_destinationIp</a> - The IP address
--   where you want MediaConnect to send contents of the media stream.
--   
--   <a>$sel:destinationPort:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_destinationPort</a> - The port that
--   you want MediaConnect to use when it distributes the media stream to
--   the output.
--   
--   <a>$sel:interface:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_interface</a> - The VPC interface
--   that you want to use for the media stream associated with the output.
newDestinationConfigurationRequest :: Text -> Int -> InterfaceRequest -> DestinationConfigurationRequest

-- | The IP address where you want MediaConnect to send contents of the
--   media stream.
destinationConfigurationRequest_destinationIp :: Lens' DestinationConfigurationRequest Text

-- | The port that you want MediaConnect to use when it distributes the
--   media stream to the output.
destinationConfigurationRequest_destinationPort :: Lens' DestinationConfigurationRequest Int

-- | The VPC interface that you want to use for the media stream associated
--   with the output.
destinationConfigurationRequest_interface :: Lens' DestinationConfigurationRequest InterfaceRequest
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.DestinationConfigurationRequest.DestinationConfigurationRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.DestinationConfigurationRequest.DestinationConfigurationRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.DestinationConfigurationRequest.DestinationConfigurationRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.DestinationConfigurationRequest.DestinationConfigurationRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.DestinationConfigurationRequest.DestinationConfigurationRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.DestinationConfigurationRequest.DestinationConfigurationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.DestinationConfigurationRequest.DestinationConfigurationRequest


module Amazonka.MediaConnect.Types.KeyType
newtype KeyType
KeyType' :: Text -> KeyType
[fromKeyType] :: KeyType -> Text
pattern KeyType_Speke :: KeyType
pattern KeyType_Srt_password :: KeyType
pattern KeyType_Static_key :: KeyType
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.KeyType.KeyType
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.KeyType.KeyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.KeyType.KeyType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.KeyType.KeyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.KeyType.KeyType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.KeyType.KeyType
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.KeyType.KeyType
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.KeyType.KeyType
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.KeyType.KeyType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.KeyType.KeyType
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.KeyType.KeyType
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.KeyType.KeyType
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.KeyType.KeyType
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.KeyType.KeyType
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.KeyType.KeyType
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.KeyType.KeyType
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.KeyType.KeyType
instance GHC.Read.Read Amazonka.MediaConnect.Types.KeyType.KeyType
instance GHC.Show.Show Amazonka.MediaConnect.Types.KeyType.KeyType


module Amazonka.MediaConnect.Types.Encryption

-- | Information about the encryption of the flow.
--   
--   <i>See:</i> <a>newEncryption</a> smart constructor.
data Encryption
Encryption' :: Maybe KeyType -> Maybe Text -> Maybe Text -> Maybe Algorithm -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Encryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
[$sel:keyType:Encryption'] :: Encryption -> Maybe KeyType

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
[$sel:resourceId:Encryption'] :: Encryption -> Maybe Text

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
[$sel:url:Encryption'] :: Encryption -> Maybe Text

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
[$sel:algorithm:Encryption'] :: Encryption -> Maybe Algorithm

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
[$sel:constantInitializationVector:Encryption'] :: Encryption -> Maybe Text

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
[$sel:deviceId:Encryption'] :: Encryption -> Maybe Text

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
[$sel:region:Encryption'] :: Encryption -> Maybe Text

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
[$sel:secretArn:Encryption'] :: Encryption -> Maybe Text

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
[$sel:roleArn:Encryption'] :: Encryption -> Text

-- | Create a value of <a>Encryption</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyType:Encryption'</a>, <a>encryption_keyType</a> - The type
--   of key that is used for the encryption. If no keyType is provided, the
--   service will use the default setting (static-key).
--   
--   <a>$sel:resourceId:Encryption'</a>, <a>encryption_resourceId</a> - An
--   identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
--   
--   <a>$sel:url:Encryption'</a>, <a>encryption_url</a> - The URL from the
--   API Gateway proxy that you set up to talk to your key server. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:algorithm:Encryption'</a>, <a>encryption_algorithm</a> - The
--   type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
--   
--   <a>$sel:constantInitializationVector:Encryption'</a>,
--   <a>encryption_constantInitializationVector</a> - A 128-bit, 16-byte
--   hex value represented by a 32-character string, to be used with the
--   key for encrypting content. This parameter is not valid for static key
--   encryption.
--   
--   <a>$sel:deviceId:Encryption'</a>, <a>encryption_deviceId</a> - The
--   value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
--   
--   <a>$sel:region:Encryption'</a>, <a>encryption_region</a> - The AWS
--   Region that the API Gateway proxy endpoint was created in. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:secretArn:Encryption'</a>, <a>encryption_secretArn</a> - The
--   ARN of the secret that you created in AWS Secrets Manager to store the
--   encryption key. This parameter is required for static key encryption
--   and is not valid for SPEKE encryption.
--   
--   <a>$sel:roleArn:Encryption'</a>, <a>encryption_roleArn</a> - The ARN
--   of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
newEncryption :: Text -> Encryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
encryption_keyType :: Lens' Encryption (Maybe KeyType)

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
encryption_resourceId :: Lens' Encryption (Maybe Text)

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
encryption_url :: Lens' Encryption (Maybe Text)

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
encryption_algorithm :: Lens' Encryption (Maybe Algorithm)

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
encryption_constantInitializationVector :: Lens' Encryption (Maybe Text)

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
encryption_deviceId :: Lens' Encryption (Maybe Text)

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
encryption_region :: Lens' Encryption (Maybe Text)

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
encryption_secretArn :: Lens' Encryption (Maybe Text)

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
encryption_roleArn :: Lens' Encryption Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Encryption.Encryption
instance GHC.Show.Show Amazonka.MediaConnect.Types.Encryption.Encryption
instance GHC.Read.Read Amazonka.MediaConnect.Types.Encryption.Encryption
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Encryption.Encryption
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Encryption.Encryption
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Encryption.Encryption
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Encryption.Encryption
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.Encryption.Encryption


module Amazonka.MediaConnect.Types.GrantEntitlementRequest

-- | The entitlements that you want to grant on a flow.
--   
--   <i>See:</i> <a>newGrantEntitlementRequest</a> smart constructor.
data GrantEntitlementRequest
GrantEntitlementRequest' :: Maybe Int -> Maybe Encryption -> Maybe Text -> Maybe EntitlementStatus -> Maybe Text -> [Text] -> GrantEntitlementRequest

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Int

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
[$sel:encryption:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Encryption

-- | The name of the entitlement. This value must be unique within the
--   current flow.
[$sel:name:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Text

-- | An indication of whether the new entitlement should be enabled or
--   disabled as soon as it is created. If you don’t specify the
--   entitlementStatus field in your request, MediaConnect sets it to
--   ENABLED.
[$sel:entitlementStatus:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe EntitlementStatus

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
[$sel:description:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flows using your content as the source.
[$sel:subscribers:GrantEntitlementRequest'] :: GrantEntitlementRequest -> [Text]

-- | Create a value of <a>GrantEntitlementRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_dataTransferSubscriberFeePercent</a> -
--   Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
--   
--   <a>$sel:encryption:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_encryption</a> - The type of encryption
--   that will be used on the output that is associated with this
--   entitlement.
--   
--   <a>$sel:name:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_name</a> - The name of the entitlement.
--   This value must be unique within the current flow.
--   
--   <a>$sel:entitlementStatus:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_entitlementStatus</a> - An indication of
--   whether the new entitlement should be enabled or disabled as soon as
--   it is created. If you don’t specify the entitlementStatus field in
--   your request, MediaConnect sets it to ENABLED.
--   
--   <a>$sel:description:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_description</a> - A description of the
--   entitlement. This description appears only on the AWS Elemental
--   MediaConnect console and will not be seen by the subscriber or end
--   user.
--   
--   <a>$sel:subscribers:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_subscribers</a> - The AWS account IDs that
--   you want to share your content with. The receiving accounts
--   (subscribers) will be allowed to create their own flows using your
--   content as the source.
newGrantEntitlementRequest :: GrantEntitlementRequest

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
grantEntitlementRequest_dataTransferSubscriberFeePercent :: Lens' GrantEntitlementRequest (Maybe Int)

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
grantEntitlementRequest_encryption :: Lens' GrantEntitlementRequest (Maybe Encryption)

-- | The name of the entitlement. This value must be unique within the
--   current flow.
grantEntitlementRequest_name :: Lens' GrantEntitlementRequest (Maybe Text)

-- | An indication of whether the new entitlement should be enabled or
--   disabled as soon as it is created. If you don’t specify the
--   entitlementStatus field in your request, MediaConnect sets it to
--   ENABLED.
grantEntitlementRequest_entitlementStatus :: Lens' GrantEntitlementRequest (Maybe EntitlementStatus)

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
grantEntitlementRequest_description :: Lens' GrantEntitlementRequest (Maybe Text)

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flows using your content as the source.
grantEntitlementRequest_subscribers :: Lens' GrantEntitlementRequest [Text]
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.GrantEntitlementRequest.GrantEntitlementRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.GrantEntitlementRequest.GrantEntitlementRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.GrantEntitlementRequest.GrantEntitlementRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.GrantEntitlementRequest.GrantEntitlementRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.GrantEntitlementRequest.GrantEntitlementRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.GrantEntitlementRequest.GrantEntitlementRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.GrantEntitlementRequest.GrantEntitlementRequest


module Amazonka.MediaConnect.Types.Entitlement

-- | The settings for a flow entitlement.
--   
--   <i>See:</i> <a>newEntitlement</a> smart constructor.
data Entitlement
Entitlement' :: Maybe Int -> Maybe Encryption -> Maybe EntitlementStatus -> Maybe Text -> Text -> [Text] -> Text -> Entitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:Entitlement'] :: Entitlement -> Maybe Int

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
[$sel:encryption:Entitlement'] :: Entitlement -> Maybe Encryption

-- | An indication of whether the entitlement is enabled.
[$sel:entitlementStatus:Entitlement'] :: Entitlement -> Maybe EntitlementStatus

-- | A description of the entitlement.
[$sel:description:Entitlement'] :: Entitlement -> Maybe Text

-- | The ARN of the entitlement.
[$sel:entitlementArn:Entitlement'] :: Entitlement -> Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
[$sel:subscribers:Entitlement'] :: Entitlement -> [Text]

-- | The name of the entitlement.
[$sel:name:Entitlement'] :: Entitlement -> Text

-- | Create a value of <a>Entitlement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Entitlement'</a>,
--   <a>entitlement_dataTransferSubscriberFeePercent</a> - Percentage from
--   0-100 of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:encryption:Entitlement'</a>, <a>entitlement_encryption</a> -
--   The type of encryption that will be used on the output that is
--   associated with this entitlement.
--   
--   <a>$sel:entitlementStatus:Entitlement'</a>,
--   <a>entitlement_entitlementStatus</a> - An indication of whether the
--   entitlement is enabled.
--   
--   <a>$sel:description:Entitlement'</a>, <a>entitlement_description</a> -
--   A description of the entitlement.
--   
--   <a>$sel:entitlementArn:Entitlement'</a>,
--   <a>entitlement_entitlementArn</a> - The ARN of the entitlement.
--   
--   <a>$sel:subscribers:Entitlement'</a>, <a>entitlement_subscribers</a> -
--   The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
--   
--   <a>$sel:name:Entitlement'</a>, <a>entitlement_name</a> - The name of
--   the entitlement.
newEntitlement :: Text -> Text -> Entitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
entitlement_dataTransferSubscriberFeePercent :: Lens' Entitlement (Maybe Int)

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
entitlement_encryption :: Lens' Entitlement (Maybe Encryption)

-- | An indication of whether the entitlement is enabled.
entitlement_entitlementStatus :: Lens' Entitlement (Maybe EntitlementStatus)

-- | A description of the entitlement.
entitlement_description :: Lens' Entitlement (Maybe Text)

-- | The ARN of the entitlement.
entitlement_entitlementArn :: Lens' Entitlement Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
entitlement_subscribers :: Lens' Entitlement [Text]

-- | The name of the entitlement.
entitlement_name :: Lens' Entitlement Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Entitlement.Entitlement
instance GHC.Show.Show Amazonka.MediaConnect.Types.Entitlement.Entitlement
instance GHC.Read.Read Amazonka.MediaConnect.Types.Entitlement.Entitlement
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Entitlement.Entitlement
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Entitlement.Entitlement
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Entitlement.Entitlement
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Entitlement.Entitlement


module Amazonka.MediaConnect.Types.ListedEntitlement

-- | An entitlement that has been granted to you from other AWS accounts.
--   
--   <i>See:</i> <a>newListedEntitlement</a> smart constructor.
data ListedEntitlement
ListedEntitlement' :: Maybe Int -> Text -> Text -> ListedEntitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:ListedEntitlement'] :: ListedEntitlement -> Maybe Int

-- | The ARN of the entitlement.
[$sel:entitlementArn:ListedEntitlement'] :: ListedEntitlement -> Text

-- | The name of the entitlement.
[$sel:entitlementName:ListedEntitlement'] :: ListedEntitlement -> Text

-- | Create a value of <a>ListedEntitlement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:ListedEntitlement'</a>,
--   <a>listedEntitlement_dataTransferSubscriberFeePercent</a> - Percentage
--   from 0-100 of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:entitlementArn:ListedEntitlement'</a>,
--   <a>listedEntitlement_entitlementArn</a> - The ARN of the entitlement.
--   
--   <a>$sel:entitlementName:ListedEntitlement'</a>,
--   <a>listedEntitlement_entitlementName</a> - The name of the
--   entitlement.
newListedEntitlement :: Text -> Text -> ListedEntitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
listedEntitlement_dataTransferSubscriberFeePercent :: Lens' ListedEntitlement (Maybe Int)

-- | The ARN of the entitlement.
listedEntitlement_entitlementArn :: Lens' ListedEntitlement Text

-- | The name of the entitlement.
listedEntitlement_entitlementName :: Lens' ListedEntitlement Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.ListedEntitlement.ListedEntitlement
instance GHC.Show.Show Amazonka.MediaConnect.Types.ListedEntitlement.ListedEntitlement
instance GHC.Read.Read Amazonka.MediaConnect.Types.ListedEntitlement.ListedEntitlement
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.ListedEntitlement.ListedEntitlement
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.ListedEntitlement.ListedEntitlement
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.ListedEntitlement.ListedEntitlement
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.ListedEntitlement.ListedEntitlement


module Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration

-- | The media stream that is associated with the output, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamOutputConfiguration</a> smart
--   constructor.
data MediaStreamOutputConfiguration
MediaStreamOutputConfiguration' :: Maybe [DestinationConfiguration] -> Maybe EncodingParameters -> Text -> EncodingName -> MediaStreamOutputConfiguration

-- | The transport parameters that are associated with each outbound media
--   stream.
[$sel:destinationConfigurations:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> Maybe [DestinationConfiguration]

-- | Encoding parameters
[$sel:encodingParameters:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> Maybe EncodingParameters

-- | The name of the media stream.
[$sel:mediaStreamName:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> EncodingName

-- | Create a value of <a>MediaStreamOutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationConfigurations:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_destinationConfigurations</a> - The
--   transport parameters that are associated with each outbound media
--   stream.
--   
--   <a>$sel:encodingParameters:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_encodingParameters</a> - Encoding
--   parameters
--   
--   <a>$sel:mediaStreamName:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_mediaStreamName</a> - The name of
--   the media stream.
--   
--   <a>$sel:encodingName:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_encodingName</a> - The format that
--   was used to encode the data. For ancillary data streams, set the
--   encoding name to smpte291. For audio streams, set the encoding name to
--   pcm. For video, 2110 streams, set the encoding name to raw. For video,
--   JPEG XS streams, set the encoding name to jxsv.
newMediaStreamOutputConfiguration :: Text -> EncodingName -> MediaStreamOutputConfiguration

-- | The transport parameters that are associated with each outbound media
--   stream.
mediaStreamOutputConfiguration_destinationConfigurations :: Lens' MediaStreamOutputConfiguration (Maybe [DestinationConfiguration])

-- | Encoding parameters
mediaStreamOutputConfiguration_encodingParameters :: Lens' MediaStreamOutputConfiguration (Maybe EncodingParameters)

-- | The name of the media stream.
mediaStreamOutputConfiguration_mediaStreamName :: Lens' MediaStreamOutputConfiguration Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamOutputConfiguration_encodingName :: Lens' MediaStreamOutputConfiguration EncodingName
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration.MediaStreamOutputConfiguration
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration.MediaStreamOutputConfiguration
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration.MediaStreamOutputConfiguration
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration.MediaStreamOutputConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration.MediaStreamOutputConfiguration
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration.MediaStreamOutputConfiguration
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStreamOutputConfiguration.MediaStreamOutputConfiguration


module Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest

-- | The media stream that you want to associate with the output, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamOutputConfigurationRequest</a> smart
--   constructor.
data MediaStreamOutputConfigurationRequest
MediaStreamOutputConfigurationRequest' :: Maybe [DestinationConfigurationRequest] -> Maybe EncodingParametersRequest -> Text -> EncodingName -> MediaStreamOutputConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
[$sel:destinationConfigurations:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> Maybe [DestinationConfigurationRequest]

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
[$sel:encodingParameters:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> Maybe EncodingParametersRequest

-- | The name of the media stream that is associated with the output.
[$sel:mediaStreamName:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> Text

-- | The format that will be used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> EncodingName

-- | Create a value of <a>MediaStreamOutputConfigurationRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:destinationConfigurations:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_destinationConfigurations</a>
--   - The transport parameters that you want to associate with the media
--   stream.
--   
--   <a>$sel:encodingParameters:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_encodingParameters</a> - A
--   collection of parameters that determine how MediaConnect will convert
--   the content. These fields only apply to outputs on flows that have a
--   CDI source.
--   
--   <a>$sel:mediaStreamName:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_mediaStreamName</a> - The
--   name of the media stream that is associated with the output.
--   
--   <a>$sel:encodingName:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_encodingName</a> - The format
--   that will be used to encode the data. For ancillary data streams, set
--   the encoding name to smpte291. For audio streams, set the encoding
--   name to pcm. For video, 2110 streams, set the encoding name to raw.
--   For video, JPEG XS streams, set the encoding name to jxsv.
newMediaStreamOutputConfigurationRequest :: Text -> EncodingName -> MediaStreamOutputConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
mediaStreamOutputConfigurationRequest_destinationConfigurations :: Lens' MediaStreamOutputConfigurationRequest (Maybe [DestinationConfigurationRequest])

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
mediaStreamOutputConfigurationRequest_encodingParameters :: Lens' MediaStreamOutputConfigurationRequest (Maybe EncodingParametersRequest)

-- | The name of the media stream that is associated with the output.
mediaStreamOutputConfigurationRequest_mediaStreamName :: Lens' MediaStreamOutputConfigurationRequest Text

-- | The format that will be used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamOutputConfigurationRequest_encodingName :: Lens' MediaStreamOutputConfigurationRequest EncodingName
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest.MediaStreamOutputConfigurationRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest.MediaStreamOutputConfigurationRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest.MediaStreamOutputConfigurationRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest.MediaStreamOutputConfigurationRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest.MediaStreamOutputConfigurationRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest.MediaStreamOutputConfigurationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.MediaStreamOutputConfigurationRequest.MediaStreamOutputConfigurationRequest


module Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration

-- | The media stream that is associated with the source, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamSourceConfiguration</a> smart
--   constructor.
data MediaStreamSourceConfiguration
MediaStreamSourceConfiguration' :: Maybe [InputConfiguration] -> Text -> EncodingName -> MediaStreamSourceConfiguration

-- | The transport parameters that are associated with an incoming media
--   stream.
[$sel:inputConfigurations:MediaStreamSourceConfiguration'] :: MediaStreamSourceConfiguration -> Maybe [InputConfiguration]

-- | The name of the media stream.
[$sel:mediaStreamName:MediaStreamSourceConfiguration'] :: MediaStreamSourceConfiguration -> Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamSourceConfiguration'] :: MediaStreamSourceConfiguration -> EncodingName

-- | Create a value of <a>MediaStreamSourceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputConfigurations:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_inputConfigurations</a> - The
--   transport parameters that are associated with an incoming media
--   stream.
--   
--   <a>$sel:mediaStreamName:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_mediaStreamName</a> - The name of
--   the media stream.
--   
--   <a>$sel:encodingName:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_encodingName</a> - The format that
--   was used to encode the data. For ancillary data streams, set the
--   encoding name to smpte291. For audio streams, set the encoding name to
--   pcm. For video, 2110 streams, set the encoding name to raw. For video,
--   JPEG XS streams, set the encoding name to jxsv.
newMediaStreamSourceConfiguration :: Text -> EncodingName -> MediaStreamSourceConfiguration

-- | The transport parameters that are associated with an incoming media
--   stream.
mediaStreamSourceConfiguration_inputConfigurations :: Lens' MediaStreamSourceConfiguration (Maybe [InputConfiguration])

-- | The name of the media stream.
mediaStreamSourceConfiguration_mediaStreamName :: Lens' MediaStreamSourceConfiguration Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamSourceConfiguration_encodingName :: Lens' MediaStreamSourceConfiguration EncodingName
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration.MediaStreamSourceConfiguration
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration.MediaStreamSourceConfiguration
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration.MediaStreamSourceConfiguration
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration.MediaStreamSourceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration.MediaStreamSourceConfiguration
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration.MediaStreamSourceConfiguration
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStreamSourceConfiguration.MediaStreamSourceConfiguration


module Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest

-- | The definition of a media stream that you want to associate with the
--   source.
--   
--   <i>See:</i> <a>newMediaStreamSourceConfigurationRequest</a> smart
--   constructor.
data MediaStreamSourceConfigurationRequest
MediaStreamSourceConfigurationRequest' :: Maybe [InputConfigurationRequest] -> Text -> EncodingName -> MediaStreamSourceConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
[$sel:inputConfigurations:MediaStreamSourceConfigurationRequest'] :: MediaStreamSourceConfigurationRequest -> Maybe [InputConfigurationRequest]

-- | The name of the media stream.
[$sel:mediaStreamName:MediaStreamSourceConfigurationRequest'] :: MediaStreamSourceConfigurationRequest -> Text

-- | The format you want to use to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamSourceConfigurationRequest'] :: MediaStreamSourceConfigurationRequest -> EncodingName

-- | Create a value of <a>MediaStreamSourceConfigurationRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputConfigurations:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_inputConfigurations</a> - The
--   transport parameters that you want to associate with the media stream.
--   
--   <a>$sel:mediaStreamName:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_mediaStreamName</a> - The
--   name of the media stream.
--   
--   <a>$sel:encodingName:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_encodingName</a> - The format
--   you want to use to encode the data. For ancillary data streams, set
--   the encoding name to smpte291. For audio streams, set the encoding
--   name to pcm. For video, 2110 streams, set the encoding name to raw.
--   For video, JPEG XS streams, set the encoding name to jxsv.
newMediaStreamSourceConfigurationRequest :: Text -> EncodingName -> MediaStreamSourceConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
mediaStreamSourceConfigurationRequest_inputConfigurations :: Lens' MediaStreamSourceConfigurationRequest (Maybe [InputConfigurationRequest])

-- | The name of the media stream.
mediaStreamSourceConfigurationRequest_mediaStreamName :: Lens' MediaStreamSourceConfigurationRequest Text

-- | The format you want to use to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamSourceConfigurationRequest_encodingName :: Lens' MediaStreamSourceConfigurationRequest EncodingName
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest.MediaStreamSourceConfigurationRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest.MediaStreamSourceConfigurationRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest.MediaStreamSourceConfigurationRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest.MediaStreamSourceConfigurationRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest.MediaStreamSourceConfigurationRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest.MediaStreamSourceConfigurationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.MediaStreamSourceConfigurationRequest.MediaStreamSourceConfigurationRequest


module Amazonka.MediaConnect.Types.MediaStreamType
newtype MediaStreamType
MediaStreamType' :: Text -> MediaStreamType
[fromMediaStreamType] :: MediaStreamType -> Text
pattern MediaStreamType_Ancillary_data :: MediaStreamType
pattern MediaStreamType_Audio :: MediaStreamType
pattern MediaStreamType_Video :: MediaStreamType
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStreamType.MediaStreamType


module Amazonka.MediaConnect.Types.Messages

-- | Messages that provide the state of the flow.
--   
--   <i>See:</i> <a>newMessages</a> smart constructor.
data Messages
Messages' :: [Text] -> Messages

-- | A list of errors that might have been generated from processes on this
--   flow.
[$sel:errors:Messages'] :: Messages -> [Text]

-- | Create a value of <a>Messages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:Messages'</a>, <a>messages_errors</a> - A list of
--   errors that might have been generated from processes on this flow.
newMessages :: Messages

-- | A list of errors that might have been generated from processes on this
--   flow.
messages_errors :: Lens' Messages [Text]
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Messages.Messages
instance GHC.Show.Show Amazonka.MediaConnect.Types.Messages.Messages
instance GHC.Read.Read Amazonka.MediaConnect.Types.Messages.Messages
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Messages.Messages
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Messages.Messages
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Messages.Messages
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Messages.Messages


module Amazonka.MediaConnect.Types.NetworkInterfaceType
newtype NetworkInterfaceType
NetworkInterfaceType' :: Text -> NetworkInterfaceType
[fromNetworkInterfaceType] :: NetworkInterfaceType -> Text
pattern NetworkInterfaceType_Efa :: NetworkInterfaceType
pattern NetworkInterfaceType_Ena :: NetworkInterfaceType
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance GHC.Read.Read Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType
instance GHC.Show.Show Amazonka.MediaConnect.Types.NetworkInterfaceType.NetworkInterfaceType


module Amazonka.MediaConnect.Types.PriceUnits
newtype PriceUnits
PriceUnits' :: Text -> PriceUnits
[fromPriceUnits] :: PriceUnits -> Text
pattern PriceUnits_HOURLY :: PriceUnits
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance GHC.Read.Read Amazonka.MediaConnect.Types.PriceUnits.PriceUnits
instance GHC.Show.Show Amazonka.MediaConnect.Types.PriceUnits.PriceUnits


module Amazonka.MediaConnect.Types.Protocol
newtype Protocol
Protocol' :: Text -> Protocol
[fromProtocol] :: Protocol -> Text
pattern Protocol_Cdi :: Protocol
pattern Protocol_Rist :: Protocol
pattern Protocol_Rtp :: Protocol
pattern Protocol_Rtp_fec :: Protocol
pattern Protocol_Srt_listener :: Protocol
pattern Protocol_St2110_jpegxs :: Protocol
pattern Protocol_Zixi_pull :: Protocol
pattern Protocol_Zixi_push :: Protocol
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.Protocol.Protocol
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.Protocol.Protocol
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.Protocol.Protocol
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.Protocol.Protocol
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.Protocol.Protocol
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Protocol.Protocol
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.Protocol.Protocol
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.Protocol.Protocol
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.Protocol.Protocol
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.Protocol.Protocol
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.Protocol.Protocol
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.Protocol.Protocol
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Protocol.Protocol
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Protocol.Protocol
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Protocol.Protocol
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.Protocol.Protocol
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Protocol.Protocol
instance GHC.Read.Read Amazonka.MediaConnect.Types.Protocol.Protocol
instance GHC.Show.Show Amazonka.MediaConnect.Types.Protocol.Protocol


module Amazonka.MediaConnect.Types.Range
newtype Range
Range' :: Text -> Range
[fromRange] :: Range -> Text
pattern Range_FULL :: Range
pattern Range_FULLPROTECT :: Range
pattern Range_NARROW :: Range
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.Range.Range
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.Range.Range
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.Range.Range
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.Range.Range
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.Range.Range
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Range.Range
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.Range.Range
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.Range.Range
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.Range.Range
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.Range.Range
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.Range.Range
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.Range.Range
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Range.Range
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Range.Range
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Range.Range
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.Range.Range
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Range.Range
instance GHC.Read.Read Amazonka.MediaConnect.Types.Range.Range
instance GHC.Show.Show Amazonka.MediaConnect.Types.Range.Range


module Amazonka.MediaConnect.Types.ReservationState
newtype ReservationState
ReservationState' :: Text -> ReservationState
[fromReservationState] :: ReservationState -> Text
pattern ReservationState_ACTIVE :: ReservationState
pattern ReservationState_CANCELED :: ReservationState
pattern ReservationState_EXPIRED :: ReservationState
pattern ReservationState_PROCESSING :: ReservationState
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance GHC.Read.Read Amazonka.MediaConnect.Types.ReservationState.ReservationState
instance GHC.Show.Show Amazonka.MediaConnect.Types.ReservationState.ReservationState


module Amazonka.MediaConnect.Types.ResourceType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_Mbps_Outbound_Bandwidth :: ResourceType
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance GHC.Read.Read Amazonka.MediaConnect.Types.ResourceType.ResourceType
instance GHC.Show.Show Amazonka.MediaConnect.Types.ResourceType.ResourceType


module Amazonka.MediaConnect.Types.ResourceSpecification

-- | A definition of what is being billed for, including the type and
--   amount.
--   
--   <i>See:</i> <a>newResourceSpecification</a> smart constructor.
data ResourceSpecification
ResourceSpecification' :: Maybe Int -> ResourceType -> ResourceSpecification

-- | The amount of outbound bandwidth that is discounted in the offering.
[$sel:reservedBitrate:ResourceSpecification'] :: ResourceSpecification -> Maybe Int

-- | The type of resource and the unit that is being billed for.
[$sel:resourceType:ResourceSpecification'] :: ResourceSpecification -> ResourceType

-- | Create a value of <a>ResourceSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedBitrate:ResourceSpecification'</a>,
--   <a>resourceSpecification_reservedBitrate</a> - The amount of outbound
--   bandwidth that is discounted in the offering.
--   
--   <a>$sel:resourceType:ResourceSpecification'</a>,
--   <a>resourceSpecification_resourceType</a> - The type of resource and
--   the unit that is being billed for.
newResourceSpecification :: ResourceType -> ResourceSpecification

-- | The amount of outbound bandwidth that is discounted in the offering.
resourceSpecification_reservedBitrate :: Lens' ResourceSpecification (Maybe Int)

-- | The type of resource and the unit that is being billed for.
resourceSpecification_resourceType :: Lens' ResourceSpecification ResourceType
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.ResourceSpecification.ResourceSpecification
instance GHC.Show.Show Amazonka.MediaConnect.Types.ResourceSpecification.ResourceSpecification
instance GHC.Read.Read Amazonka.MediaConnect.Types.ResourceSpecification.ResourceSpecification
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.ResourceSpecification.ResourceSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.ResourceSpecification.ResourceSpecification
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.ResourceSpecification.ResourceSpecification
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.ResourceSpecification.ResourceSpecification


module Amazonka.MediaConnect.Types.Reservation

-- | A pricing agreement for a discounted rate for a specific outbound
--   bandwidth that your MediaConnect account will use each month over a
--   specific time period. The discounted rate in the reservation applies
--   to outbound bandwidth for all flows from your account until your
--   account reaches the amount of bandwidth in your reservation. If you
--   use more outbound bandwidth than the agreed upon amount in a single
--   month, the overage is charged at the on-demand rate.
--   
--   <i>See:</i> <a>newReservation</a> smart constructor.
data Reservation
Reservation' :: Text -> ReservationState -> Text -> Text -> Text -> Text -> Text -> Text -> Int -> DurationUnits -> Text -> ResourceSpecification -> PriceUnits -> Reservation

-- | The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
[$sel:currencyCode:Reservation'] :: Reservation -> Text

-- | The status of your reservation.
[$sel:reservationState:Reservation'] :: Reservation -> ReservationState

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
[$sel:offeringArn:Reservation'] :: Reservation -> Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   reservation when you purchase an offering.
[$sel:reservationArn:Reservation'] :: Reservation -> Text

-- | The day and time that the reservation becomes active. You set this
--   value when you purchase the offering.
[$sel:start:Reservation'] :: Reservation -> Text

-- | A description of the offering. MediaConnect defines this value in the
--   offering.
[$sel:offeringDescription:Reservation'] :: Reservation -> Text

-- | The name that you assigned to the reservation when you purchased the
--   offering.
[$sel:reservationName:Reservation'] :: Reservation -> Text

-- | The day and time that this reservation expires. This value is
--   calculated based on the start date and time that you set and the
--   offering's duration.
[$sel:end:Reservation'] :: Reservation -> Text

-- | The length of time that this reservation is active. MediaConnect
--   defines this value in the offering.
[$sel:duration:Reservation'] :: Reservation -> Int

-- | The unit of measurement for the duration of the reservation.
--   MediaConnect defines this value in the offering.
[$sel:durationUnits:Reservation'] :: Reservation -> DurationUnits

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate. MediaConnect defines this value in the offering.
[$sel:pricePerUnit:Reservation'] :: Reservation -> Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering. MediaConnect defines the
--   values that make up the resourceSpecification in the offering.
[$sel:resourceSpecification:Reservation'] :: Reservation -> ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
[$sel:priceUnits:Reservation'] :: Reservation -> PriceUnits

-- | Create a value of <a>Reservation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currencyCode:Reservation'</a>, <a>reservation_currencyCode</a>
--   - The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
--   
--   <a>$sel:reservationState:Reservation'</a>,
--   <a>reservation_reservationState</a> - The status of your reservation.
--   
--   <a>$sel:offeringArn:Reservation'</a>, <a>reservation_offeringArn</a> -
--   The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
--   
--   <a>$sel:reservationArn:Reservation'</a>,
--   <a>reservation_reservationArn</a> - The Amazon Resource Name (ARN)
--   that MediaConnect assigns to the reservation when you purchase an
--   offering.
--   
--   <a>$sel:start:Reservation'</a>, <a>reservation_start</a> - The day and
--   time that the reservation becomes active. You set this value when you
--   purchase the offering.
--   
--   <a>$sel:offeringDescription:Reservation'</a>,
--   <a>reservation_offeringDescription</a> - A description of the
--   offering. MediaConnect defines this value in the offering.
--   
--   <a>$sel:reservationName:Reservation'</a>,
--   <a>reservation_reservationName</a> - The name that you assigned to the
--   reservation when you purchased the offering.
--   
--   <a>$sel:end:Reservation'</a>, <a>reservation_end</a> - The day and
--   time that this reservation expires. This value is calculated based on
--   the start date and time that you set and the offering's duration.
--   
--   <a>$sel:duration:Reservation'</a>, <a>reservation_duration</a> - The
--   length of time that this reservation is active. MediaConnect defines
--   this value in the offering.
--   
--   <a>$sel:durationUnits:Reservation'</a>,
--   <a>reservation_durationUnits</a> - The unit of measurement for the
--   duration of the reservation. MediaConnect defines this value in the
--   offering.
--   
--   <a>$sel:pricePerUnit:Reservation'</a>, <a>reservation_pricePerUnit</a>
--   - The cost of a single unit. This value, in combination with
--   priceUnits, makes up the rate. MediaConnect defines this value in the
--   offering.
--   
--   <a>$sel:resourceSpecification:Reservation'</a>,
--   <a>reservation_resourceSpecification</a> - A definition of the amount
--   of outbound bandwidth that you would be reserving if you purchase the
--   offering. MediaConnect defines the values that make up the
--   resourceSpecification in the offering.
--   
--   <a>$sel:priceUnits:Reservation'</a>, <a>reservation_priceUnits</a> -
--   The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
newReservation :: Text -> ReservationState -> Text -> Text -> Text -> Text -> Text -> Text -> Int -> DurationUnits -> Text -> ResourceSpecification -> PriceUnits -> Reservation

-- | The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
reservation_currencyCode :: Lens' Reservation Text

-- | The status of your reservation.
reservation_reservationState :: Lens' Reservation ReservationState

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
reservation_offeringArn :: Lens' Reservation Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   reservation when you purchase an offering.
reservation_reservationArn :: Lens' Reservation Text

-- | The day and time that the reservation becomes active. You set this
--   value when you purchase the offering.
reservation_start :: Lens' Reservation Text

-- | A description of the offering. MediaConnect defines this value in the
--   offering.
reservation_offeringDescription :: Lens' Reservation Text

-- | The name that you assigned to the reservation when you purchased the
--   offering.
reservation_reservationName :: Lens' Reservation Text

-- | The day and time that this reservation expires. This value is
--   calculated based on the start date and time that you set and the
--   offering's duration.
reservation_end :: Lens' Reservation Text

-- | The length of time that this reservation is active. MediaConnect
--   defines this value in the offering.
reservation_duration :: Lens' Reservation Int

-- | The unit of measurement for the duration of the reservation.
--   MediaConnect defines this value in the offering.
reservation_durationUnits :: Lens' Reservation DurationUnits

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate. MediaConnect defines this value in the offering.
reservation_pricePerUnit :: Lens' Reservation Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering. MediaConnect defines the
--   values that make up the resourceSpecification in the offering.
reservation_resourceSpecification :: Lens' Reservation ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
reservation_priceUnits :: Lens' Reservation PriceUnits
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Reservation.Reservation
instance GHC.Show.Show Amazonka.MediaConnect.Types.Reservation.Reservation
instance GHC.Read.Read Amazonka.MediaConnect.Types.Reservation.Reservation
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Reservation.Reservation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Reservation.Reservation
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Reservation.Reservation
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Reservation.Reservation


module Amazonka.MediaConnect.Types.Offering

-- | A savings plan that reserves a certain amount of outbound bandwidth
--   usage at a discounted rate each month over a period of time.
--   
--   <i>See:</i> <a>newOffering</a> smart constructor.
data Offering
Offering' :: Text -> Text -> Text -> DurationUnits -> Int -> Text -> ResourceSpecification -> PriceUnits -> Offering

-- | The type of currency that is used for billing. The currencyCode used
--   for all reservations is US dollars.
[$sel:currencyCode:Offering'] :: Offering -> Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
[$sel:offeringArn:Offering'] :: Offering -> Text

-- | A description of the offering.
[$sel:offeringDescription:Offering'] :: Offering -> Text

-- | The unit of measurement for the duration of the offering.
[$sel:durationUnits:Offering'] :: Offering -> DurationUnits

-- | The length of time that your reservation would be active.
[$sel:duration:Offering'] :: Offering -> Int

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
[$sel:pricePerUnit:Offering'] :: Offering -> Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering.
[$sel:resourceSpecification:Offering'] :: Offering -> ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
[$sel:priceUnits:Offering'] :: Offering -> PriceUnits

-- | Create a value of <a>Offering</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currencyCode:Offering'</a>, <a>offering_currencyCode</a> - The
--   type of currency that is used for billing. The currencyCode used for
--   all reservations is US dollars.
--   
--   <a>$sel:offeringArn:Offering'</a>, <a>offering_offeringArn</a> - The
--   Amazon Resource Name (ARN) that MediaConnect assigns to the offering.
--   
--   <a>$sel:offeringDescription:Offering'</a>,
--   <a>offering_offeringDescription</a> - A description of the offering.
--   
--   <a>$sel:durationUnits:Offering'</a>, <a>offering_durationUnits</a> -
--   The unit of measurement for the duration of the offering.
--   
--   <a>$sel:duration:Offering'</a>, <a>offering_duration</a> - The length
--   of time that your reservation would be active.
--   
--   <a>$sel:pricePerUnit:Offering'</a>, <a>offering_pricePerUnit</a> - The
--   cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
--   
--   <a>$sel:resourceSpecification:Offering'</a>,
--   <a>offering_resourceSpecification</a> - A definition of the amount of
--   outbound bandwidth that you would be reserving if you purchase the
--   offering.
--   
--   <a>$sel:priceUnits:Offering'</a>, <a>offering_priceUnits</a> - The
--   unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
newOffering :: Text -> Text -> Text -> DurationUnits -> Int -> Text -> ResourceSpecification -> PriceUnits -> Offering

-- | The type of currency that is used for billing. The currencyCode used
--   for all reservations is US dollars.
offering_currencyCode :: Lens' Offering Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
offering_offeringArn :: Lens' Offering Text

-- | A description of the offering.
offering_offeringDescription :: Lens' Offering Text

-- | The unit of measurement for the duration of the offering.
offering_durationUnits :: Lens' Offering DurationUnits

-- | The length of time that your reservation would be active.
offering_duration :: Lens' Offering Int

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
offering_pricePerUnit :: Lens' Offering Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering.
offering_resourceSpecification :: Lens' Offering ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
offering_priceUnits :: Lens' Offering PriceUnits
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Offering.Offering
instance GHC.Show.Show Amazonka.MediaConnect.Types.Offering.Offering
instance GHC.Read.Read Amazonka.MediaConnect.Types.Offering.Offering
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Offering.Offering
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Offering.Offering
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Offering.Offering
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Offering.Offering


module Amazonka.MediaConnect.Types.ScanMode
newtype ScanMode
ScanMode' :: Text -> ScanMode
[fromScanMode] :: ScanMode -> Text
pattern ScanMode_Interlace :: ScanMode
pattern ScanMode_Progressive :: ScanMode
pattern ScanMode_Progressive_segmented_frame :: ScanMode
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance GHC.Read.Read Amazonka.MediaConnect.Types.ScanMode.ScanMode
instance GHC.Show.Show Amazonka.MediaConnect.Types.ScanMode.ScanMode


module Amazonka.MediaConnect.Types.SetSourceRequest

-- | The settings for the source of the flow.
--   
--   <i>See:</i> <a>newSetSourceRequest</a> smart constructor.
data SetSourceRequest
SetSourceRequest' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Encryption -> Maybe Int -> Maybe Protocol -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe [MediaStreamSourceConfigurationRequest] -> Maybe Text -> Maybe Int -> Maybe Text -> SetSourceRequest

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
[$sel:entitlementArn:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
[$sel:maxLatency:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The name of the VPC interface to use for this source.
[$sel:vpcInterfaceName:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The type of encryption that is used on the content ingested from this
--   source.
[$sel:decryption:SetSourceRequest'] :: SetSourceRequest -> Maybe Encryption

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
[$sel:maxSyncBuffer:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The protocol that is used by the source.
[$sel:protocol:SetSourceRequest'] :: SetSourceRequest -> Maybe Protocol

-- | The name of the source.
[$sel:name:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The port that the flow will be listening on for incoming content.
[$sel:ingestPort:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
[$sel:description:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
[$sel:mediaStreamSourceConfigurations:SetSourceRequest'] :: SetSourceRequest -> Maybe [MediaStreamSourceConfigurationRequest]

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:whitelistCidr:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
[$sel:maxBitrate:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | Create a value of <a>SetSourceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:SetSourceRequest'</a>,
--   <a>setSourceRequest_entitlementArn</a> - The ARN of the entitlement
--   that allows you to subscribe to this flow. The entitlement is set by
--   the flow originator, and the ARN is generated as part of the
--   originator's flow.
--   
--   <a>$sel:maxLatency:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxLatency</a> - The maximum latency in
--   milliseconds. This parameter applies only to RIST-based and Zixi-based
--   streams.
--   
--   <a>$sel:vpcInterfaceName:SetSourceRequest'</a>,
--   <a>setSourceRequest_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this source.
--   
--   <a>$sel:decryption:SetSourceRequest'</a>,
--   <a>setSourceRequest_decryption</a> - The type of encryption that is
--   used on the content ingested from this source.
--   
--   <a>$sel:maxSyncBuffer:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxSyncBuffer</a> - The size of the buffer (in
--   milliseconds) to use to sync incoming source data.
--   
--   <a>$sel:protocol:SetSourceRequest'</a>,
--   <a>setSourceRequest_protocol</a> - The protocol that is used by the
--   source.
--   
--   <a>$sel:name:SetSourceRequest'</a>, <a>setSourceRequest_name</a> - The
--   name of the source.
--   
--   <a>$sel:minLatency:SetSourceRequest'</a>,
--   <a>setSourceRequest_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:ingestPort:SetSourceRequest'</a>,
--   <a>setSourceRequest_ingestPort</a> - The port that the flow will be
--   listening on for incoming content.
--   
--   <a>$sel:description:SetSourceRequest'</a>,
--   <a>setSourceRequest_description</a> - A description for the source.
--   This value is not used or seen outside of the current AWS Elemental
--   MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:SetSourceRequest'</a>,
--   <a>setSourceRequest_mediaStreamSourceConfigurations</a> - The media
--   streams that are associated with the source, and the parameters for
--   those associations.
--   
--   <a>$sel:whitelistCidr:SetSourceRequest'</a>,
--   <a>setSourceRequest_whitelistCidr</a> - The range of IP addresses that
--   should be allowed to contribute content to your source. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:maxBitrate:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxBitrate</a> - The smoothing max bitrate for
--   RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:SetSourceRequest'</a>,
--   <a>setSourceRequest_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
newSetSourceRequest :: SetSourceRequest

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
setSourceRequest_entitlementArn :: Lens' SetSourceRequest (Maybe Text)

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
setSourceRequest_maxLatency :: Lens' SetSourceRequest (Maybe Int)

-- | The name of the VPC interface to use for this source.
setSourceRequest_vpcInterfaceName :: Lens' SetSourceRequest (Maybe Text)

-- | The type of encryption that is used on the content ingested from this
--   source.
setSourceRequest_decryption :: Lens' SetSourceRequest (Maybe Encryption)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
setSourceRequest_maxSyncBuffer :: Lens' SetSourceRequest (Maybe Int)

-- | The protocol that is used by the source.
setSourceRequest_protocol :: Lens' SetSourceRequest (Maybe Protocol)

-- | The name of the source.
setSourceRequest_name :: Lens' SetSourceRequest (Maybe Text)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
setSourceRequest_minLatency :: Lens' SetSourceRequest (Maybe Int)

-- | The port that the flow will be listening on for incoming content.
setSourceRequest_ingestPort :: Lens' SetSourceRequest (Maybe Int)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
setSourceRequest_description :: Lens' SetSourceRequest (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
setSourceRequest_mediaStreamSourceConfigurations :: Lens' SetSourceRequest (Maybe [MediaStreamSourceConfigurationRequest])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
setSourceRequest_whitelistCidr :: Lens' SetSourceRequest (Maybe Text)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
setSourceRequest_maxBitrate :: Lens' SetSourceRequest (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
setSourceRequest_streamId :: Lens' SetSourceRequest (Maybe Text)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.SetSourceRequest.SetSourceRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.SetSourceRequest.SetSourceRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.SetSourceRequest.SetSourceRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.SetSourceRequest.SetSourceRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.SetSourceRequest.SetSourceRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.SetSourceRequest.SetSourceRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.SetSourceRequest.SetSourceRequest


module Amazonka.MediaConnect.Types.SourcePriority

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
--   
--   <i>See:</i> <a>newSourcePriority</a> smart constructor.
data SourcePriority
SourcePriority' :: Maybe Text -> SourcePriority

-- | The name of the source you choose as the primary source for this flow.
[$sel:primarySource:SourcePriority'] :: SourcePriority -> Maybe Text

-- | Create a value of <a>SourcePriority</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:primarySource:SourcePriority'</a>,
--   <a>sourcePriority_primarySource</a> - The name of the source you
--   choose as the primary source for this flow.
newSourcePriority :: SourcePriority

-- | The name of the source you choose as the primary source for this flow.
sourcePriority_primarySource :: Lens' SourcePriority (Maybe Text)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.SourcePriority.SourcePriority
instance GHC.Show.Show Amazonka.MediaConnect.Types.SourcePriority.SourcePriority
instance GHC.Read.Read Amazonka.MediaConnect.Types.SourcePriority.SourcePriority
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.SourcePriority.SourcePriority
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.SourcePriority.SourcePriority
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.SourcePriority.SourcePriority
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.SourcePriority.SourcePriority
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.SourcePriority.SourcePriority


module Amazonka.MediaConnect.Types.SourceType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_ENTITLED :: SourceType
pattern SourceType_OWNED :: SourceType
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.SourceType.SourceType
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.SourceType.SourceType
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.SourceType.SourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.SourceType.SourceType
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.SourceType.SourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.SourceType.SourceType
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.SourceType.SourceType
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.SourceType.SourceType
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.SourceType.SourceType
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.SourceType.SourceType
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.SourceType.SourceType
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.SourceType.SourceType
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.SourceType.SourceType
instance GHC.Read.Read Amazonka.MediaConnect.Types.SourceType.SourceType
instance GHC.Show.Show Amazonka.MediaConnect.Types.SourceType.SourceType


module Amazonka.MediaConnect.Types.State
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_DISABLED :: State
pattern State_ENABLED :: State
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.State.State
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.State.State
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.State.State
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.State.State
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.State.State
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.State.State
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.State.State
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.State.State
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.State.State
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.State.State
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.State.State
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.State.State
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.State.State
instance GHC.Read.Read Amazonka.MediaConnect.Types.State.State
instance GHC.Show.Show Amazonka.MediaConnect.Types.State.State


module Amazonka.MediaConnect.Types.FailoverConfig

-- | The settings for source failover
--   
--   <i>See:</i> <a>newFailoverConfig</a> smart constructor.
data FailoverConfig
FailoverConfig' :: Maybe State -> Maybe Int -> Maybe SourcePriority -> Maybe FailoverMode -> FailoverConfig
[$sel:state:FailoverConfig'] :: FailoverConfig -> Maybe State

-- | Search window time to look for dash-7 packets
[$sel:recoveryWindow:FailoverConfig'] :: FailoverConfig -> Maybe Int

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
[$sel:sourcePriority:FailoverConfig'] :: FailoverConfig -> Maybe SourcePriority

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
[$sel:failoverMode:FailoverConfig'] :: FailoverConfig -> Maybe FailoverMode

-- | Create a value of <a>FailoverConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:FailoverConfig'</a>, <a>failoverConfig_state</a> -
--   Undocumented member.
--   
--   <a>$sel:recoveryWindow:FailoverConfig'</a>,
--   <a>failoverConfig_recoveryWindow</a> - Search window time to look for
--   dash-7 packets
--   
--   <a>$sel:sourcePriority:FailoverConfig'</a>,
--   <a>failoverConfig_sourcePriority</a> - The priority you want to assign
--   to a source. You can have a primary stream and a backup stream or two
--   equally prioritized streams.
--   
--   <a>$sel:failoverMode:FailoverConfig'</a>,
--   <a>failoverConfig_failoverMode</a> - The type of failover you choose
--   for this flow. MERGE combines the source streams into a single stream,
--   allowing graceful recovery from any single-source loss. FAILOVER
--   allows switching between different streams.
newFailoverConfig :: FailoverConfig

-- | Undocumented member.
failoverConfig_state :: Lens' FailoverConfig (Maybe State)

-- | Search window time to look for dash-7 packets
failoverConfig_recoveryWindow :: Lens' FailoverConfig (Maybe Int)

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
failoverConfig_sourcePriority :: Lens' FailoverConfig (Maybe SourcePriority)

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
failoverConfig_failoverMode :: Lens' FailoverConfig (Maybe FailoverMode)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig
instance GHC.Show.Show Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig
instance GHC.Read.Read Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.FailoverConfig.FailoverConfig


module Amazonka.MediaConnect.Types.Status
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_ACTIVE :: Status
pattern Status_DELETING :: Status
pattern Status_ERROR :: Status
pattern Status_STANDBY :: Status
pattern Status_STARTING :: Status
pattern Status_STOPPING :: Status
pattern Status_UPDATING :: Status
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.Status.Status
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Status.Status
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.Status.Status
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.Status.Status
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.Status.Status
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.Status.Status
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.Status.Status
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.Status.Status
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Status.Status
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Status.Status
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Status.Status
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.Status.Status
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Status.Status
instance GHC.Read.Read Amazonka.MediaConnect.Types.Status.Status
instance GHC.Show.Show Amazonka.MediaConnect.Types.Status.Status


module Amazonka.MediaConnect.Types.ListedFlow

-- | Provides a summary of a flow, including its ARN, Availability Zone,
--   and source type.
--   
--   <i>See:</i> <a>newListedFlow</a> smart constructor.
data ListedFlow
ListedFlow' :: Status -> Text -> SourceType -> Text -> Text -> Text -> ListedFlow

-- | The current status of the flow.
[$sel:status:ListedFlow'] :: ListedFlow -> Status

-- | A description of the flow.
[$sel:description:ListedFlow'] :: ListedFlow -> Text

-- | The type of source. This value is either owned (originated somewhere
--   other than an AWS Elemental MediaConnect flow owned by another AWS
--   account) or entitled (originated at an AWS Elemental MediaConnect flow
--   owned by another AWS account).
[$sel:sourceType:ListedFlow'] :: ListedFlow -> SourceType

-- | The Availability Zone that the flow was created in.
[$sel:availabilityZone:ListedFlow'] :: ListedFlow -> Text

-- | The ARN of the flow.
[$sel:flowArn:ListedFlow'] :: ListedFlow -> Text

-- | The name of the flow.
[$sel:name:ListedFlow'] :: ListedFlow -> Text

-- | Create a value of <a>ListedFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListedFlow'</a>, <a>listedFlow_status</a> - The current
--   status of the flow.
--   
--   <a>$sel:description:ListedFlow'</a>, <a>listedFlow_description</a> - A
--   description of the flow.
--   
--   <a>$sel:sourceType:ListedFlow'</a>, <a>listedFlow_sourceType</a> - The
--   type of source. This value is either owned (originated somewhere other
--   than an AWS Elemental MediaConnect flow owned by another AWS account)
--   or entitled (originated at an AWS Elemental MediaConnect flow owned by
--   another AWS account).
--   
--   <a>$sel:availabilityZone:ListedFlow'</a>,
--   <a>listedFlow_availabilityZone</a> - The Availability Zone that the
--   flow was created in.
--   
--   <a>$sel:flowArn:ListedFlow'</a>, <a>listedFlow_flowArn</a> - The ARN
--   of the flow.
--   
--   <a>$sel:name:ListedFlow'</a>, <a>listedFlow_name</a> - The name of the
--   flow.
newListedFlow :: Status -> Text -> SourceType -> Text -> Text -> Text -> ListedFlow

-- | The current status of the flow.
listedFlow_status :: Lens' ListedFlow Status

-- | A description of the flow.
listedFlow_description :: Lens' ListedFlow Text

-- | The type of source. This value is either owned (originated somewhere
--   other than an AWS Elemental MediaConnect flow owned by another AWS
--   account) or entitled (originated at an AWS Elemental MediaConnect flow
--   owned by another AWS account).
listedFlow_sourceType :: Lens' ListedFlow SourceType

-- | The Availability Zone that the flow was created in.
listedFlow_availabilityZone :: Lens' ListedFlow Text

-- | The ARN of the flow.
listedFlow_flowArn :: Lens' ListedFlow Text

-- | The name of the flow.
listedFlow_name :: Lens' ListedFlow Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.ListedFlow.ListedFlow
instance GHC.Show.Show Amazonka.MediaConnect.Types.ListedFlow.ListedFlow
instance GHC.Read.Read Amazonka.MediaConnect.Types.ListedFlow.ListedFlow
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.ListedFlow.ListedFlow
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.ListedFlow.ListedFlow
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.ListedFlow.ListedFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.ListedFlow.ListedFlow


module Amazonka.MediaConnect.Types.Tcs
newtype Tcs
Tcs' :: Text -> Tcs
[fromTcs] :: Tcs -> Text
pattern Tcs_BT2100LINHLG :: Tcs
pattern Tcs_BT2100LINPQ :: Tcs
pattern Tcs_DENSITY :: Tcs
pattern Tcs_HLG :: Tcs
pattern Tcs_LINEAR :: Tcs
pattern Tcs_PQ :: Tcs
pattern Tcs_SDR :: Tcs
pattern Tcs_ST2065_1 :: Tcs
pattern Tcs_ST428_1 :: Tcs
instance Amazonka.Data.XML.ToXML Amazonka.MediaConnect.Types.Tcs.Tcs
instance Amazonka.Data.XML.FromXML Amazonka.MediaConnect.Types.Tcs.Tcs
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MediaConnect.Types.Tcs.Tcs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.Tcs.Tcs
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MediaConnect.Types.Tcs.Tcs
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Tcs.Tcs
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.Types.Tcs.Tcs
instance Amazonka.Data.Headers.ToHeader Amazonka.MediaConnect.Types.Tcs.Tcs
instance Amazonka.Data.Log.ToLog Amazonka.MediaConnect.Types.Tcs.Tcs
instance Amazonka.Data.ByteString.ToByteString Amazonka.MediaConnect.Types.Tcs.Tcs
instance Amazonka.Data.Text.ToText Amazonka.MediaConnect.Types.Tcs.Tcs
instance Amazonka.Data.Text.FromText Amazonka.MediaConnect.Types.Tcs.Tcs
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Tcs.Tcs
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Tcs.Tcs
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Tcs.Tcs
instance GHC.Classes.Ord Amazonka.MediaConnect.Types.Tcs.Tcs
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Tcs.Tcs
instance GHC.Read.Read Amazonka.MediaConnect.Types.Tcs.Tcs
instance GHC.Show.Show Amazonka.MediaConnect.Types.Tcs.Tcs


module Amazonka.MediaConnect.Types.FmtpRequest

-- | The settings that you want to use to define the media stream.
--   
--   <i>See:</i> <a>newFmtpRequest</a> smart constructor.
data FmtpRequest
FmtpRequest' :: Maybe Tcs -> Maybe Text -> Maybe Text -> Maybe ScanMode -> Maybe Range -> Maybe Text -> Maybe Colorimetry -> FmtpRequest

-- | The transfer characteristic system (TCS) that is used in the video.
[$sel:tcs:FmtpRequest'] :: FmtpRequest -> Maybe Tcs

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
[$sel:exactFramerate:FmtpRequest'] :: FmtpRequest -> Maybe Text

-- | The pixel aspect ratio (PAR) of the video.
[$sel:par:FmtpRequest'] :: FmtpRequest -> Maybe Text

-- | The type of compression that was used to smooth the video’s
--   appearance.
[$sel:scanMode:FmtpRequest'] :: FmtpRequest -> Maybe ScanMode

-- | The encoding range of the video.
[$sel:range:FmtpRequest'] :: FmtpRequest -> Maybe Range

-- | The format of the audio channel.
[$sel:channelOrder:FmtpRequest'] :: FmtpRequest -> Maybe Text

-- | The format that is used for the representation of color.
[$sel:colorimetry:FmtpRequest'] :: FmtpRequest -> Maybe Colorimetry

-- | Create a value of <a>FmtpRequest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tcs:FmtpRequest'</a>, <a>fmtpRequest_tcs</a> - The transfer
--   characteristic system (TCS) that is used in the video.
--   
--   <a>$sel:exactFramerate:FmtpRequest'</a>,
--   <a>fmtpRequest_exactFramerate</a> - The frame rate for the video
--   stream, in frames/second. For example: 60000/1001. If you specify a
--   whole number, MediaConnect uses a ratio of N/1. For example, if you
--   specify 60, MediaConnect uses 60/1 as the exactFramerate.
--   
--   <a>$sel:par:FmtpRequest'</a>, <a>fmtpRequest_par</a> - The pixel
--   aspect ratio (PAR) of the video.
--   
--   <a>$sel:scanMode:FmtpRequest'</a>, <a>fmtpRequest_scanMode</a> - The
--   type of compression that was used to smooth the video’s appearance.
--   
--   <a>$sel:range:FmtpRequest'</a>, <a>fmtpRequest_range</a> - The
--   encoding range of the video.
--   
--   <a>$sel:channelOrder:FmtpRequest'</a>, <a>fmtpRequest_channelOrder</a>
--   - The format of the audio channel.
--   
--   <a>$sel:colorimetry:FmtpRequest'</a>, <a>fmtpRequest_colorimetry</a> -
--   The format that is used for the representation of color.
newFmtpRequest :: FmtpRequest

-- | The transfer characteristic system (TCS) that is used in the video.
fmtpRequest_tcs :: Lens' FmtpRequest (Maybe Tcs)

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
fmtpRequest_exactFramerate :: Lens' FmtpRequest (Maybe Text)

-- | The pixel aspect ratio (PAR) of the video.
fmtpRequest_par :: Lens' FmtpRequest (Maybe Text)

-- | The type of compression that was used to smooth the video’s
--   appearance.
fmtpRequest_scanMode :: Lens' FmtpRequest (Maybe ScanMode)

-- | The encoding range of the video.
fmtpRequest_range :: Lens' FmtpRequest (Maybe Range)

-- | The format of the audio channel.
fmtpRequest_channelOrder :: Lens' FmtpRequest (Maybe Text)

-- | The format that is used for the representation of color.
fmtpRequest_colorimetry :: Lens' FmtpRequest (Maybe Colorimetry)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.FmtpRequest.FmtpRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.FmtpRequest.FmtpRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.FmtpRequest.FmtpRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.FmtpRequest.FmtpRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.FmtpRequest.FmtpRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.FmtpRequest.FmtpRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.FmtpRequest.FmtpRequest


module Amazonka.MediaConnect.Types.MediaStreamAttributesRequest

-- | Attributes that are related to the media stream.
--   
--   <i>See:</i> <a>newMediaStreamAttributesRequest</a> smart constructor.
data MediaStreamAttributesRequest
MediaStreamAttributesRequest' :: Maybe Text -> Maybe FmtpRequest -> MediaStreamAttributesRequest

-- | The audio language, in a format that is recognized by the receiver.
[$sel:lang:MediaStreamAttributesRequest'] :: MediaStreamAttributesRequest -> Maybe Text

-- | The settings that you want to use to define the media stream.
[$sel:fmtp:MediaStreamAttributesRequest'] :: MediaStreamAttributesRequest -> Maybe FmtpRequest

-- | Create a value of <a>MediaStreamAttributesRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lang:MediaStreamAttributesRequest'</a>,
--   <a>mediaStreamAttributesRequest_lang</a> - The audio language, in a
--   format that is recognized by the receiver.
--   
--   <a>$sel:fmtp:MediaStreamAttributesRequest'</a>,
--   <a>mediaStreamAttributesRequest_fmtp</a> - The settings that you want
--   to use to define the media stream.
newMediaStreamAttributesRequest :: MediaStreamAttributesRequest

-- | The audio language, in a format that is recognized by the receiver.
mediaStreamAttributesRequest_lang :: Lens' MediaStreamAttributesRequest (Maybe Text)

-- | The settings that you want to use to define the media stream.
mediaStreamAttributesRequest_fmtp :: Lens' MediaStreamAttributesRequest (Maybe FmtpRequest)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStreamAttributesRequest.MediaStreamAttributesRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStreamAttributesRequest.MediaStreamAttributesRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStreamAttributesRequest.MediaStreamAttributesRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStreamAttributesRequest.MediaStreamAttributesRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStreamAttributesRequest.MediaStreamAttributesRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStreamAttributesRequest.MediaStreamAttributesRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.MediaStreamAttributesRequest.MediaStreamAttributesRequest


module Amazonka.MediaConnect.Types.AddMediaStreamRequest

-- | The media stream that you want to add to the flow.
--   
--   <i>See:</i> <a>newAddMediaStreamRequest</a> smart constructor.
data AddMediaStreamRequest
AddMediaStreamRequest' :: Maybe Text -> Maybe MediaStreamAttributesRequest -> Maybe Int -> Maybe Text -> MediaStreamType -> Int -> Text -> AddMediaStreamRequest

-- | The resolution of the video.
[$sel:videoFormat:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe Text

-- | The attributes that you want to assign to the new media stream.
[$sel:attributes:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe MediaStreamAttributesRequest

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
[$sel:clockRate:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe Int

-- | A description that can help you quickly identify what your media
--   stream is used for.
[$sel:description:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe Text

-- | The type of media stream.
[$sel:mediaStreamType:AddMediaStreamRequest'] :: AddMediaStreamRequest -> MediaStreamType

-- | A unique identifier for the media stream.
[$sel:mediaStreamId:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Int

-- | A name that helps you distinguish one media stream from another.
[$sel:mediaStreamName:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Text

-- | Create a value of <a>AddMediaStreamRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_videoFormat</a> - The resolution of the
--   video.
--   
--   <a>$sel:attributes:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_attributes</a> - The attributes that you want
--   to assign to the new media stream.
--   
--   <a>$sel:clockRate:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_clockRate</a> - The sample rate (in Hz) for
--   the stream. If the media stream type is video or ancillary data, set
--   this value to 90000. If the media stream type is audio, set this value
--   to either 48000 or 96000.
--   
--   <a>$sel:description:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_description</a> - A description that can help
--   you quickly identify what your media stream is used for.
--   
--   <a>$sel:mediaStreamType:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamType</a> - The type of media
--   stream.
--   
--   <a>$sel:mediaStreamId:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamId</a> - A unique identifier for
--   the media stream.
--   
--   <a>$sel:mediaStreamName:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamName</a> - A name that helps you
--   distinguish one media stream from another.
newAddMediaStreamRequest :: MediaStreamType -> Int -> Text -> AddMediaStreamRequest

-- | The resolution of the video.
addMediaStreamRequest_videoFormat :: Lens' AddMediaStreamRequest (Maybe Text)

-- | The attributes that you want to assign to the new media stream.
addMediaStreamRequest_attributes :: Lens' AddMediaStreamRequest (Maybe MediaStreamAttributesRequest)

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
addMediaStreamRequest_clockRate :: Lens' AddMediaStreamRequest (Maybe Int)

-- | A description that can help you quickly identify what your media
--   stream is used for.
addMediaStreamRequest_description :: Lens' AddMediaStreamRequest (Maybe Text)

-- | The type of media stream.
addMediaStreamRequest_mediaStreamType :: Lens' AddMediaStreamRequest MediaStreamType

-- | A unique identifier for the media stream.
addMediaStreamRequest_mediaStreamId :: Lens' AddMediaStreamRequest Int

-- | A name that helps you distinguish one media stream from another.
addMediaStreamRequest_mediaStreamName :: Lens' AddMediaStreamRequest Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.AddMediaStreamRequest.AddMediaStreamRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.AddMediaStreamRequest.AddMediaStreamRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.AddMediaStreamRequest.AddMediaStreamRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.AddMediaStreamRequest.AddMediaStreamRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.AddMediaStreamRequest.AddMediaStreamRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.AddMediaStreamRequest.AddMediaStreamRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.AddMediaStreamRequest.AddMediaStreamRequest


module Amazonka.MediaConnect.Types.Fmtp

-- | FMTP
--   
--   <i>See:</i> <a>newFmtp</a> smart constructor.
data Fmtp
Fmtp' :: Maybe Tcs -> Maybe Text -> Maybe Text -> Maybe ScanMode -> Maybe Range -> Maybe Text -> Maybe Colorimetry -> Fmtp

-- | The transfer characteristic system (TCS) that is used in the video.
[$sel:tcs:Fmtp'] :: Fmtp -> Maybe Tcs

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
[$sel:exactFramerate:Fmtp'] :: Fmtp -> Maybe Text

-- | The pixel aspect ratio (PAR) of the video.
[$sel:par:Fmtp'] :: Fmtp -> Maybe Text

-- | The type of compression that was used to smooth the video’s appearance
[$sel:scanMode:Fmtp'] :: Fmtp -> Maybe ScanMode

-- | The encoding range of the video.
[$sel:range:Fmtp'] :: Fmtp -> Maybe Range

-- | The format of the audio channel.
[$sel:channelOrder:Fmtp'] :: Fmtp -> Maybe Text

-- | The format that is used for the representation of color.
[$sel:colorimetry:Fmtp'] :: Fmtp -> Maybe Colorimetry

-- | Create a value of <a>Fmtp</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tcs:Fmtp'</a>, <a>fmtp_tcs</a> - The transfer characteristic
--   system (TCS) that is used in the video.
--   
--   <a>$sel:exactFramerate:Fmtp'</a>, <a>fmtp_exactFramerate</a> - The
--   frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
--   
--   <a>$sel:par:Fmtp'</a>, <a>fmtp_par</a> - The pixel aspect ratio (PAR)
--   of the video.
--   
--   <a>$sel:scanMode:Fmtp'</a>, <a>fmtp_scanMode</a> - The type of
--   compression that was used to smooth the video’s appearance
--   
--   <a>$sel:range:Fmtp'</a>, <a>fmtp_range</a> - The encoding range of the
--   video.
--   
--   <a>$sel:channelOrder:Fmtp'</a>, <a>fmtp_channelOrder</a> - The format
--   of the audio channel.
--   
--   <a>$sel:colorimetry:Fmtp'</a>, <a>fmtp_colorimetry</a> - The format
--   that is used for the representation of color.
newFmtp :: Fmtp

-- | The transfer characteristic system (TCS) that is used in the video.
fmtp_tcs :: Lens' Fmtp (Maybe Tcs)

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
fmtp_exactFramerate :: Lens' Fmtp (Maybe Text)

-- | The pixel aspect ratio (PAR) of the video.
fmtp_par :: Lens' Fmtp (Maybe Text)

-- | The type of compression that was used to smooth the video’s appearance
fmtp_scanMode :: Lens' Fmtp (Maybe ScanMode)

-- | The encoding range of the video.
fmtp_range :: Lens' Fmtp (Maybe Range)

-- | The format of the audio channel.
fmtp_channelOrder :: Lens' Fmtp (Maybe Text)

-- | The format that is used for the representation of color.
fmtp_colorimetry :: Lens' Fmtp (Maybe Colorimetry)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Fmtp.Fmtp
instance GHC.Show.Show Amazonka.MediaConnect.Types.Fmtp.Fmtp
instance GHC.Read.Read Amazonka.MediaConnect.Types.Fmtp.Fmtp
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Fmtp.Fmtp
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Fmtp.Fmtp
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Fmtp.Fmtp
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Fmtp.Fmtp


module Amazonka.MediaConnect.Types.MediaStreamAttributes

-- | Attributes that are related to the media stream.
--   
--   <i>See:</i> <a>newMediaStreamAttributes</a> smart constructor.
data MediaStreamAttributes
MediaStreamAttributes' :: Maybe Text -> Fmtp -> MediaStreamAttributes

-- | The audio language, in a format that is recognized by the receiver.
[$sel:lang:MediaStreamAttributes'] :: MediaStreamAttributes -> Maybe Text

-- | A set of parameters that define the media stream.
[$sel:fmtp:MediaStreamAttributes'] :: MediaStreamAttributes -> Fmtp

-- | Create a value of <a>MediaStreamAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lang:MediaStreamAttributes'</a>,
--   <a>mediaStreamAttributes_lang</a> - The audio language, in a format
--   that is recognized by the receiver.
--   
--   <a>$sel:fmtp:MediaStreamAttributes'</a>,
--   <a>mediaStreamAttributes_fmtp</a> - A set of parameters that define
--   the media stream.
newMediaStreamAttributes :: Fmtp -> MediaStreamAttributes

-- | The audio language, in a format that is recognized by the receiver.
mediaStreamAttributes_lang :: Lens' MediaStreamAttributes (Maybe Text)

-- | A set of parameters that define the media stream.
mediaStreamAttributes_fmtp :: Lens' MediaStreamAttributes Fmtp
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStreamAttributes.MediaStreamAttributes
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStreamAttributes.MediaStreamAttributes
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStreamAttributes.MediaStreamAttributes
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStreamAttributes.MediaStreamAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.MediaStreamAttributes.MediaStreamAttributes
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStreamAttributes.MediaStreamAttributes
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStreamAttributes.MediaStreamAttributes


module Amazonka.MediaConnect.Types.MediaStream

-- | A single track or stream of media that contains video, audio, or
--   ancillary data. After you add a media stream to a flow, you can
--   associate it with sources and outputs on that flow, as long as they
--   use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or
--   output can consist of one or many media streams.
--   
--   <i>See:</i> <a>newMediaStream</a> smart constructor.
data MediaStream
MediaStream' :: Maybe Text -> Maybe MediaStreamAttributes -> Maybe Int -> Maybe Text -> MediaStreamType -> Int -> Text -> Int -> MediaStream

-- | The resolution of the video.
[$sel:videoFormat:MediaStream'] :: MediaStream -> Maybe Text

-- | Attributes that are related to the media stream.
[$sel:attributes:MediaStream'] :: MediaStream -> Maybe MediaStreamAttributes

-- | The sample rate for the stream. This value is measured in Hz.
[$sel:clockRate:MediaStream'] :: MediaStream -> Maybe Int

-- | A description that can help you quickly identify what your media
--   stream is used for.
[$sel:description:MediaStream'] :: MediaStream -> Maybe Text

-- | The type of media stream.
[$sel:mediaStreamType:MediaStream'] :: MediaStream -> MediaStreamType

-- | A unique identifier for the media stream.
[$sel:mediaStreamId:MediaStream'] :: MediaStream -> Int

-- | A name that helps you distinguish one media stream from another.
[$sel:mediaStreamName:MediaStream'] :: MediaStream -> Text

-- | The format type number (sometimes referred to as RTP payload type) of
--   the media stream. MediaConnect assigns this value to the media stream.
--   For ST 2110 JPEG XS outputs, you need to provide this value to the
--   receiver.
[$sel:fmt:MediaStream'] :: MediaStream -> Int

-- | Create a value of <a>MediaStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:MediaStream'</a>, <a>mediaStream_videoFormat</a> -
--   The resolution of the video.
--   
--   <a>$sel:attributes:MediaStream'</a>, <a>mediaStream_attributes</a> -
--   Attributes that are related to the media stream.
--   
--   <a>$sel:clockRate:MediaStream'</a>, <a>mediaStream_clockRate</a> - The
--   sample rate for the stream. This value is measured in Hz.
--   
--   <a>$sel:description:MediaStream'</a>, <a>mediaStream_description</a> -
--   A description that can help you quickly identify what your media
--   stream is used for.
--   
--   <a>$sel:mediaStreamType:MediaStream'</a>,
--   <a>mediaStream_mediaStreamType</a> - The type of media stream.
--   
--   <a>$sel:mediaStreamId:MediaStream'</a>,
--   <a>mediaStream_mediaStreamId</a> - A unique identifier for the media
--   stream.
--   
--   <a>$sel:mediaStreamName:MediaStream'</a>,
--   <a>mediaStream_mediaStreamName</a> - A name that helps you distinguish
--   one media stream from another.
--   
--   <a>$sel:fmt:MediaStream'</a>, <a>mediaStream_fmt</a> - The format type
--   number (sometimes referred to as RTP payload type) of the media
--   stream. MediaConnect assigns this value to the media stream. For ST
--   2110 JPEG XS outputs, you need to provide this value to the receiver.
newMediaStream :: MediaStreamType -> Int -> Text -> Int -> MediaStream

-- | The resolution of the video.
mediaStream_videoFormat :: Lens' MediaStream (Maybe Text)

-- | Attributes that are related to the media stream.
mediaStream_attributes :: Lens' MediaStream (Maybe MediaStreamAttributes)

-- | The sample rate for the stream. This value is measured in Hz.
mediaStream_clockRate :: Lens' MediaStream (Maybe Int)

-- | A description that can help you quickly identify what your media
--   stream is used for.
mediaStream_description :: Lens' MediaStream (Maybe Text)

-- | The type of media stream.
mediaStream_mediaStreamType :: Lens' MediaStream MediaStreamType

-- | A unique identifier for the media stream.
mediaStream_mediaStreamId :: Lens' MediaStream Int

-- | A name that helps you distinguish one media stream from another.
mediaStream_mediaStreamName :: Lens' MediaStream Text

-- | The format type number (sometimes referred to as RTP payload type) of
--   the media stream. MediaConnect assigns this value to the media stream.
--   For ST 2110 JPEG XS outputs, you need to provide this value to the
--   receiver.
mediaStream_fmt :: Lens' MediaStream Int
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.MediaStream.MediaStream
instance GHC.Show.Show Amazonka.MediaConnect.Types.MediaStream.MediaStream
instance GHC.Read.Read Amazonka.MediaConnect.Types.MediaStream.MediaStream
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.MediaStream.MediaStream
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.MediaStream.MediaStream
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.MediaStream.MediaStream
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.MediaStream.MediaStream


module Amazonka.MediaConnect.Types.Transport

-- | Attributes related to the transport stream that are used in a source
--   or output.
--   
--   <i>See:</i> <a>newTransport</a> smart constructor.
data Transport
Transport' :: Maybe Int -> Maybe Int -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Protocol -> Transport

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
[$sel:maxLatency:Transport'] :: Transport -> Maybe Int

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
[$sel:maxSyncBuffer:Transport'] :: Transport -> Maybe Int

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:cidrAllowList:Transport'] :: Transport -> Maybe [Text]

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
[$sel:smoothingLatency:Transport'] :: Transport -> Maybe Int

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:Transport'] :: Transport -> Maybe Int

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
[$sel:maxBitrate:Transport'] :: Transport -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:Transport'] :: Transport -> Maybe Text

-- | The remote ID for the Zixi-pull stream.
[$sel:remoteId:Transport'] :: Transport -> Maybe Text

-- | The protocol that is used by the source or output.
[$sel:protocol:Transport'] :: Transport -> Protocol

-- | Create a value of <a>Transport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxLatency:Transport'</a>, <a>transport_maxLatency</a> - The
--   maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
--   
--   <a>$sel:maxSyncBuffer:Transport'</a>, <a>transport_maxSyncBuffer</a> -
--   The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
--   
--   <a>$sel:cidrAllowList:Transport'</a>, <a>transport_cidrAllowList</a> -
--   The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:Transport'</a>,
--   <a>transport_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:Transport'</a>, <a>transport_minLatency</a> - The
--   minimum latency in milliseconds for SRT-based streams. In streams that
--   use the SRT protocol, this value that you set on your MediaConnect
--   source or output represents the minimal potential latency of that
--   connection. The latency of the stream is set to the highest number
--   between the sender’s minimum latency and the receiver’s minimum
--   latency.
--   
--   <a>$sel:maxBitrate:Transport'</a>, <a>transport_maxBitrate</a> - The
--   smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:Transport'</a>, <a>transport_streamId</a> - The
--   stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:Transport'</a>, <a>transport_remoteId</a> - The
--   remote ID for the Zixi-pull stream.
--   
--   <a>$sel:protocol:Transport'</a>, <a>transport_protocol</a> - The
--   protocol that is used by the source or output.
newTransport :: Protocol -> Transport

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
transport_maxLatency :: Lens' Transport (Maybe Int)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
transport_maxSyncBuffer :: Lens' Transport (Maybe Int)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
transport_cidrAllowList :: Lens' Transport (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
transport_smoothingLatency :: Lens' Transport (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
transport_minLatency :: Lens' Transport (Maybe Int)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
transport_maxBitrate :: Lens' Transport (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
transport_streamId :: Lens' Transport (Maybe Text)

-- | The remote ID for the Zixi-pull stream.
transport_remoteId :: Lens' Transport (Maybe Text)

-- | The protocol that is used by the source or output.
transport_protocol :: Lens' Transport Protocol
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Transport.Transport
instance GHC.Show.Show Amazonka.MediaConnect.Types.Transport.Transport
instance GHC.Read.Read Amazonka.MediaConnect.Types.Transport.Transport
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Transport.Transport
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Transport.Transport
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Transport.Transport
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Transport.Transport


module Amazonka.MediaConnect.Types.Source

-- | The settings for the source of the flow.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Encryption -> Maybe Text -> Maybe Int -> Maybe Transport -> Maybe Text -> Maybe [MediaStreamSourceConfiguration] -> Maybe Text -> Text -> Text -> Source

-- | The ARN of the entitlement that allows you to subscribe to content
--   that comes from another AWS account. The entitlement is set by the
--   content originator and the ARN is generated as part of the
--   originator's flow.
[$sel:entitlementArn:Source'] :: Source -> Maybe Text

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:Source'] :: Source -> Maybe Int

-- | The name of the VPC interface that is used for this source.
[$sel:vpcInterfaceName:Source'] :: Source -> Maybe Text

-- | The type of encryption that is used on the content ingested from this
--   source.
[$sel:decryption:Source'] :: Source -> Maybe Encryption

-- | The IP address that the flow will be listening on for incoming
--   content.
[$sel:ingestIp:Source'] :: Source -> Maybe Text

-- | The port that the flow will be listening on for incoming content.
[$sel:ingestPort:Source'] :: Source -> Maybe Int

-- | Attributes related to the transport stream that are used in the
--   source.
[$sel:transport:Source'] :: Source -> Maybe Transport

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
[$sel:description:Source'] :: Source -> Maybe Text

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
[$sel:mediaStreamSourceConfigurations:Source'] :: Source -> Maybe [MediaStreamSourceConfiguration]

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:whitelistCidr:Source'] :: Source -> Maybe Text

-- | The ARN of the source.
[$sel:sourceArn:Source'] :: Source -> Text

-- | The name of the source.
[$sel:name:Source'] :: Source -> Text

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:Source'</a>, <a>source_entitlementArn</a> - The
--   ARN of the entitlement that allows you to subscribe to content that
--   comes from another AWS account. The entitlement is set by the content
--   originator and the ARN is generated as part of the originator's flow.
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Source'</a>,
--   <a>source_dataTransferSubscriberFeePercent</a> - Percentage from 0-100
--   of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:vpcInterfaceName:Source'</a>, <a>source_vpcInterfaceName</a> -
--   The name of the VPC interface that is used for this source.
--   
--   <a>$sel:decryption:Source'</a>, <a>source_decryption</a> - The type of
--   encryption that is used on the content ingested from this source.
--   
--   <a>$sel:ingestIp:Source'</a>, <a>source_ingestIp</a> - The IP address
--   that the flow will be listening on for incoming content.
--   
--   <a>$sel:ingestPort:Source'</a>, <a>source_ingestPort</a> - The port
--   that the flow will be listening on for incoming content.
--   
--   <a>$sel:transport:Source'</a>, <a>source_transport</a> - Attributes
--   related to the transport stream that are used in the source.
--   
--   <a>$sel:description:Source'</a>, <a>source_description</a> - A
--   description for the source. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:Source'</a>,
--   <a>source_mediaStreamSourceConfigurations</a> - The media streams that
--   are associated with the source, and the parameters for those
--   associations.
--   
--   <a>$sel:whitelistCidr:Source'</a>, <a>source_whitelistCidr</a> - The
--   range of IP addresses that should be allowed to contribute content to
--   your source. These IP addresses should be in the form of a Classless
--   Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:sourceArn:Source'</a>, <a>source_sourceArn</a> - The ARN of
--   the source.
--   
--   <a>$sel:name:Source'</a>, <a>source_name</a> - The name of the source.
newSource :: Text -> Text -> Source

-- | The ARN of the entitlement that allows you to subscribe to content
--   that comes from another AWS account. The entitlement is set by the
--   content originator and the ARN is generated as part of the
--   originator's flow.
source_entitlementArn :: Lens' Source (Maybe Text)

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
source_dataTransferSubscriberFeePercent :: Lens' Source (Maybe Int)

-- | The name of the VPC interface that is used for this source.
source_vpcInterfaceName :: Lens' Source (Maybe Text)

-- | The type of encryption that is used on the content ingested from this
--   source.
source_decryption :: Lens' Source (Maybe Encryption)

-- | The IP address that the flow will be listening on for incoming
--   content.
source_ingestIp :: Lens' Source (Maybe Text)

-- | The port that the flow will be listening on for incoming content.
source_ingestPort :: Lens' Source (Maybe Int)

-- | Attributes related to the transport stream that are used in the
--   source.
source_transport :: Lens' Source (Maybe Transport)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
source_description :: Lens' Source (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
source_mediaStreamSourceConfigurations :: Lens' Source (Maybe [MediaStreamSourceConfiguration])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
source_whitelistCidr :: Lens' Source (Maybe Text)

-- | The ARN of the source.
source_sourceArn :: Lens' Source Text

-- | The name of the source.
source_name :: Lens' Source Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Source.Source
instance GHC.Show.Show Amazonka.MediaConnect.Types.Source.Source
instance GHC.Read.Read Amazonka.MediaConnect.Types.Source.Source
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Source.Source
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Source.Source
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Source.Source
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Source.Source


module Amazonka.MediaConnect.Types.UpdateEncryption

-- | Information about the encryption of the flow.
--   
--   <i>See:</i> <a>newUpdateEncryption</a> smart constructor.
data UpdateEncryption
UpdateEncryption' :: Maybe KeyType -> Maybe Text -> Maybe Text -> Maybe Algorithm -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UpdateEncryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
[$sel:keyType:UpdateEncryption'] :: UpdateEncryption -> Maybe KeyType

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
[$sel:resourceId:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
[$sel:url:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
[$sel:algorithm:UpdateEncryption'] :: UpdateEncryption -> Maybe Algorithm

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
[$sel:constantInitializationVector:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
[$sel:deviceId:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
[$sel:region:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
[$sel:secretArn:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
[$sel:roleArn:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | Create a value of <a>UpdateEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyType:UpdateEncryption'</a>, <a>updateEncryption_keyType</a>
--   - The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
--   
--   <a>$sel:resourceId:UpdateEncryption'</a>,
--   <a>updateEncryption_resourceId</a> - An identifier for the content.
--   The service sends this value to the key server to identify the current
--   endpoint. The resource ID is also known as the content ID. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:url:UpdateEncryption'</a>, <a>updateEncryption_url</a> - The
--   URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
--   
--   <a>$sel:algorithm:UpdateEncryption'</a>,
--   <a>updateEncryption_algorithm</a> - The type of algorithm that is used
--   for the encryption (such as aes128, aes192, or aes256).
--   
--   <a>$sel:constantInitializationVector:UpdateEncryption'</a>,
--   <a>updateEncryption_constantInitializationVector</a> - A 128-bit,
--   16-byte hex value represented by a 32-character string, to be used
--   with the key for encrypting content. This parameter is not valid for
--   static key encryption.
--   
--   <a>$sel:deviceId:UpdateEncryption'</a>,
--   <a>updateEncryption_deviceId</a> - The value of one of the devices
--   that you configured with your digital rights management (DRM) platform
--   key provider. This parameter is required for SPEKE encryption and is
--   not valid for static key encryption.
--   
--   <a>$sel:region:UpdateEncryption'</a>, <a>updateEncryption_region</a> -
--   The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
--   
--   <a>$sel:secretArn:UpdateEncryption'</a>,
--   <a>updateEncryption_secretArn</a> - The ARN of the secret that you
--   created in AWS Secrets Manager to store the encryption key. This
--   parameter is required for static key encryption and is not valid for
--   SPEKE encryption.
--   
--   <a>$sel:roleArn:UpdateEncryption'</a>, <a>updateEncryption_roleArn</a>
--   - The ARN of the role that you created during setup (when you set up
--   AWS Elemental MediaConnect as a trusted entity).
newUpdateEncryption :: UpdateEncryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
updateEncryption_keyType :: Lens' UpdateEncryption (Maybe KeyType)

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
updateEncryption_resourceId :: Lens' UpdateEncryption (Maybe Text)

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
updateEncryption_url :: Lens' UpdateEncryption (Maybe Text)

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
updateEncryption_algorithm :: Lens' UpdateEncryption (Maybe Algorithm)

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
updateEncryption_constantInitializationVector :: Lens' UpdateEncryption (Maybe Text)

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
updateEncryption_deviceId :: Lens' UpdateEncryption (Maybe Text)

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
updateEncryption_region :: Lens' UpdateEncryption (Maybe Text)

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
updateEncryption_secretArn :: Lens' UpdateEncryption (Maybe Text)

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
updateEncryption_roleArn :: Lens' UpdateEncryption (Maybe Text)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.UpdateEncryption.UpdateEncryption
instance GHC.Show.Show Amazonka.MediaConnect.Types.UpdateEncryption.UpdateEncryption
instance GHC.Read.Read Amazonka.MediaConnect.Types.UpdateEncryption.UpdateEncryption
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.UpdateEncryption.UpdateEncryption
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.UpdateEncryption.UpdateEncryption
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.UpdateEncryption.UpdateEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.UpdateEncryption.UpdateEncryption


module Amazonka.MediaConnect.Types.UpdateFailoverConfig

-- | The settings for source failover
--   
--   <i>See:</i> <a>newUpdateFailoverConfig</a> smart constructor.
data UpdateFailoverConfig
UpdateFailoverConfig' :: Maybe State -> Maybe Int -> Maybe SourcePriority -> Maybe FailoverMode -> UpdateFailoverConfig
[$sel:state:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe State

-- | Recovery window time to look for dash-7 packets
[$sel:recoveryWindow:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe Int

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
[$sel:sourcePriority:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe SourcePriority

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
[$sel:failoverMode:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe FailoverMode

-- | Create a value of <a>UpdateFailoverConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_state</a> - Undocumented member.
--   
--   <a>$sel:recoveryWindow:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_recoveryWindow</a> - Recovery window time to
--   look for dash-7 packets
--   
--   <a>$sel:sourcePriority:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_sourcePriority</a> - The priority you want to
--   assign to a source. You can have a primary stream and a backup stream
--   or two equally prioritized streams.
--   
--   <a>$sel:failoverMode:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_failoverMode</a> - The type of failover you
--   choose for this flow. MERGE combines the source streams into a single
--   stream, allowing graceful recovery from any single-source loss.
--   FAILOVER allows switching between different streams.
newUpdateFailoverConfig :: UpdateFailoverConfig

-- | Undocumented member.
updateFailoverConfig_state :: Lens' UpdateFailoverConfig (Maybe State)

-- | Recovery window time to look for dash-7 packets
updateFailoverConfig_recoveryWindow :: Lens' UpdateFailoverConfig (Maybe Int)

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
updateFailoverConfig_sourcePriority :: Lens' UpdateFailoverConfig (Maybe SourcePriority)

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
updateFailoverConfig_failoverMode :: Lens' UpdateFailoverConfig (Maybe FailoverMode)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.UpdateFailoverConfig.UpdateFailoverConfig
instance GHC.Show.Show Amazonka.MediaConnect.Types.UpdateFailoverConfig.UpdateFailoverConfig
instance GHC.Read.Read Amazonka.MediaConnect.Types.UpdateFailoverConfig.UpdateFailoverConfig
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.UpdateFailoverConfig.UpdateFailoverConfig
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.UpdateFailoverConfig.UpdateFailoverConfig
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.UpdateFailoverConfig.UpdateFailoverConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.UpdateFailoverConfig.UpdateFailoverConfig


module Amazonka.MediaConnect.Types.VpcInterface

-- | The settings for a VPC Source.
--   
--   <i>See:</i> <a>newVpcInterface</a> smart constructor.
data VpcInterface
VpcInterface' :: NetworkInterfaceType -> [Text] -> Text -> [Text] -> Text -> Text -> VpcInterface

-- | The type of network interface.
[$sel:networkInterfaceType:VpcInterface'] :: VpcInterface -> NetworkInterfaceType

-- | IDs of the network interfaces created in customer's account by
--   MediaConnect.
[$sel:networkInterfaceIds:VpcInterface'] :: VpcInterface -> [Text]

-- | Subnet must be in the AZ of the Flow
[$sel:subnetId:VpcInterface'] :: VpcInterface -> Text

-- | Security Group IDs to be used on ENI.
[$sel:securityGroupIds:VpcInterface'] :: VpcInterface -> [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
[$sel:roleArn:VpcInterface'] :: VpcInterface -> Text

-- | Immutable and has to be a unique against other VpcInterfaces in this
--   Flow
[$sel:name:VpcInterface'] :: VpcInterface -> Text

-- | Create a value of <a>VpcInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceType:VpcInterface'</a>,
--   <a>vpcInterface_networkInterfaceType</a> - The type of network
--   interface.
--   
--   <a>$sel:networkInterfaceIds:VpcInterface'</a>,
--   <a>vpcInterface_networkInterfaceIds</a> - IDs of the network
--   interfaces created in customer's account by MediaConnect.
--   
--   <a>$sel:subnetId:VpcInterface'</a>, <a>vpcInterface_subnetId</a> -
--   Subnet must be in the AZ of the Flow
--   
--   <a>$sel:securityGroupIds:VpcInterface'</a>,
--   <a>vpcInterface_securityGroupIds</a> - Security Group IDs to be used
--   on ENI.
--   
--   <a>$sel:roleArn:VpcInterface'</a>, <a>vpcInterface_roleArn</a> - Role
--   Arn MediaConnect can assumes to create ENIs in customer's account
--   
--   <a>$sel:name:VpcInterface'</a>, <a>vpcInterface_name</a> - Immutable
--   and has to be a unique against other VpcInterfaces in this Flow
newVpcInterface :: NetworkInterfaceType -> Text -> Text -> Text -> VpcInterface

-- | The type of network interface.
vpcInterface_networkInterfaceType :: Lens' VpcInterface NetworkInterfaceType

-- | IDs of the network interfaces created in customer's account by
--   MediaConnect.
vpcInterface_networkInterfaceIds :: Lens' VpcInterface [Text]

-- | Subnet must be in the AZ of the Flow
vpcInterface_subnetId :: Lens' VpcInterface Text

-- | Security Group IDs to be used on ENI.
vpcInterface_securityGroupIds :: Lens' VpcInterface [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
vpcInterface_roleArn :: Lens' VpcInterface Text

-- | Immutable and has to be a unique against other VpcInterfaces in this
--   Flow
vpcInterface_name :: Lens' VpcInterface Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.VpcInterface.VpcInterface
instance GHC.Show.Show Amazonka.MediaConnect.Types.VpcInterface.VpcInterface
instance GHC.Read.Read Amazonka.MediaConnect.Types.VpcInterface.VpcInterface
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.VpcInterface.VpcInterface
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.VpcInterface.VpcInterface
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.VpcInterface.VpcInterface
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.VpcInterface.VpcInterface


module Amazonka.MediaConnect.Types.VpcInterfaceAttachment

-- | The settings for attaching a VPC interface to an output.
--   
--   <i>See:</i> <a>newVpcInterfaceAttachment</a> smart constructor.
data VpcInterfaceAttachment
VpcInterfaceAttachment' :: Maybe Text -> VpcInterfaceAttachment

-- | The name of the VPC interface to use for this output.
[$sel:vpcInterfaceName:VpcInterfaceAttachment'] :: VpcInterfaceAttachment -> Maybe Text

-- | Create a value of <a>VpcInterfaceAttachment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcInterfaceName:VpcInterfaceAttachment'</a>,
--   <a>vpcInterfaceAttachment_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this output.
newVpcInterfaceAttachment :: VpcInterfaceAttachment

-- | The name of the VPC interface to use for this output.
vpcInterfaceAttachment_vpcInterfaceName :: Lens' VpcInterfaceAttachment (Maybe Text)
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment
instance GHC.Show.Show Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment
instance GHC.Read.Read Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.VpcInterfaceAttachment.VpcInterfaceAttachment


module Amazonka.MediaConnect.Types.Output

-- | The settings for an output.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [MediaStreamOutputConfiguration] -> Maybe Text -> Maybe Encryption -> Maybe Text -> Maybe Transport -> Maybe Text -> Maybe Int -> Maybe VpcInterfaceAttachment -> Text -> Text -> Output

-- | The ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
[$sel:entitlementArn:Output'] :: Output -> Maybe Text

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:Output'] :: Output -> Maybe Int

-- | The address where you want to send the output.
[$sel:destination:Output'] :: Output -> Maybe Text

-- | The configuration for each media stream that is associated with the
--   output.
[$sel:mediaStreamOutputConfigurations:Output'] :: Output -> Maybe [MediaStreamOutputConfiguration]

-- | The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
[$sel:mediaLiveInputArn:Output'] :: Output -> Maybe Text

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
[$sel:encryption:Output'] :: Output -> Maybe Encryption

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
[$sel:listenerAddress:Output'] :: Output -> Maybe Text

-- | Attributes related to the transport stream that are used in the
--   output.
[$sel:transport:Output'] :: Output -> Maybe Transport

-- | A description of the output.
[$sel:description:Output'] :: Output -> Maybe Text

-- | The port to use when content is distributed to this output.
[$sel:port:Output'] :: Output -> Maybe Int

-- | The name of the VPC interface attachment to use for this output.
[$sel:vpcInterfaceAttachment:Output'] :: Output -> Maybe VpcInterfaceAttachment

-- | The ARN of the output.
[$sel:outputArn:Output'] :: Output -> Text

-- | The name of the output. This value must be unique within the current
--   flow.
[$sel:name:Output'] :: Output -> Text

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:Output'</a>, <a>output_entitlementArn</a> - The
--   ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Output'</a>,
--   <a>output_dataTransferSubscriberFeePercent</a> - Percentage from 0-100
--   of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:destination:Output'</a>, <a>output_destination</a> - The
--   address where you want to send the output.
--   
--   <a>$sel:mediaStreamOutputConfigurations:Output'</a>,
--   <a>output_mediaStreamOutputConfigurations</a> - The configuration for
--   each media stream that is associated with the output.
--   
--   <a>$sel:mediaLiveInputArn:Output'</a>, <a>output_mediaLiveInputArn</a>
--   - The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
--   
--   <a>$sel:encryption:Output'</a>, <a>output_encryption</a> - The type of
--   key used for the encryption. If no keyType is provided, the service
--   will use the default setting (static-key).
--   
--   <a>$sel:listenerAddress:Output'</a>, <a>output_listenerAddress</a> -
--   The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
--   
--   <a>$sel:transport:Output'</a>, <a>output_transport</a> - Attributes
--   related to the transport stream that are used in the output.
--   
--   <a>$sel:description:Output'</a>, <a>output_description</a> - A
--   description of the output.
--   
--   <a>$sel:port:Output'</a>, <a>output_port</a> - The port to use when
--   content is distributed to this output.
--   
--   <a>$sel:vpcInterfaceAttachment:Output'</a>,
--   <a>output_vpcInterfaceAttachment</a> - The name of the VPC interface
--   attachment to use for this output.
--   
--   <a>$sel:outputArn:Output'</a>, <a>output_outputArn</a> - The ARN of
--   the output.
--   
--   <a>$sel:name:Output'</a>, <a>output_name</a> - The name of the output.
--   This value must be unique within the current flow.
newOutput :: Text -> Text -> Output

-- | The ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
output_entitlementArn :: Lens' Output (Maybe Text)

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
output_dataTransferSubscriberFeePercent :: Lens' Output (Maybe Int)

-- | The address where you want to send the output.
output_destination :: Lens' Output (Maybe Text)

-- | The configuration for each media stream that is associated with the
--   output.
output_mediaStreamOutputConfigurations :: Lens' Output (Maybe [MediaStreamOutputConfiguration])

-- | The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
output_mediaLiveInputArn :: Lens' Output (Maybe Text)

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
output_encryption :: Lens' Output (Maybe Encryption)

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
output_listenerAddress :: Lens' Output (Maybe Text)

-- | Attributes related to the transport stream that are used in the
--   output.
output_transport :: Lens' Output (Maybe Transport)

-- | A description of the output.
output_description :: Lens' Output (Maybe Text)

-- | The port to use when content is distributed to this output.
output_port :: Lens' Output (Maybe Int)

-- | The name of the VPC interface attachment to use for this output.
output_vpcInterfaceAttachment :: Lens' Output (Maybe VpcInterfaceAttachment)

-- | The ARN of the output.
output_outputArn :: Lens' Output Text

-- | The name of the output. This value must be unique within the current
--   flow.
output_name :: Lens' Output Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Output.Output
instance GHC.Show.Show Amazonka.MediaConnect.Types.Output.Output
instance GHC.Read.Read Amazonka.MediaConnect.Types.Output.Output
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Output.Output
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Output.Output
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Output.Output
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Output.Output


module Amazonka.MediaConnect.Types.Flow

-- | The settings for a flow, including its source, outputs, and
--   entitlements.
--   
--   <i>See:</i> <a>newFlow</a> smart constructor.
data Flow
Flow' :: Maybe [MediaStream] -> Maybe FailoverConfig -> Maybe [VpcInterface] -> Maybe [Source] -> Maybe Text -> Maybe Text -> Status -> [Entitlement] -> [Output] -> Text -> Text -> Source -> Text -> Flow

-- | The media streams that are associated with the flow. After you
--   associate a media stream with a source, you can also associate it with
--   outputs on the flow.
[$sel:mediaStreams:Flow'] :: Flow -> Maybe [MediaStream]
[$sel:sourceFailoverConfig:Flow'] :: Flow -> Maybe FailoverConfig

-- | The VPC Interfaces for this flow.
[$sel:vpcInterfaces:Flow'] :: Flow -> Maybe [VpcInterface]
[$sel:sources:Flow'] :: Flow -> Maybe [Source]

-- | The IP address from which video will be sent to output destinations.
[$sel:egressIp:Flow'] :: Flow -> Maybe Text

-- | A description of the flow. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
[$sel:description:Flow'] :: Flow -> Maybe Text

-- | The current status of the flow.
[$sel:status:Flow'] :: Flow -> Status

-- | The entitlements in this flow.
[$sel:entitlements:Flow'] :: Flow -> [Entitlement]

-- | The outputs in this flow.
[$sel:outputs:Flow'] :: Flow -> [Output]

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS.
[$sel:availabilityZone:Flow'] :: Flow -> Text

-- | The Amazon Resource Name (ARN), a unique identifier for any AWS
--   resource, of the flow.
[$sel:flowArn:Flow'] :: Flow -> Text
[$sel:source:Flow'] :: Flow -> Source

-- | The name of the flow.
[$sel:name:Flow'] :: Flow -> Text

-- | Create a value of <a>Flow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mediaStreams:Flow'</a>, <a>flow_mediaStreams</a> - The media
--   streams that are associated with the flow. After you associate a media
--   stream with a source, you can also associate it with outputs on the
--   flow.
--   
--   <a>$sel:sourceFailoverConfig:Flow'</a>,
--   <a>flow_sourceFailoverConfig</a> - Undocumented member.
--   
--   <a>$sel:vpcInterfaces:Flow'</a>, <a>flow_vpcInterfaces</a> - The VPC
--   Interfaces for this flow.
--   
--   <a>$sel:sources:Flow'</a>, <a>flow_sources</a> - Undocumented member.
--   
--   <a>$sel:egressIp:Flow'</a>, <a>flow_egressIp</a> - The IP address from
--   which video will be sent to output destinations.
--   
--   <a>$sel:description:Flow'</a>, <a>flow_description</a> - A description
--   of the flow. This value is not used or seen outside of the current AWS
--   Elemental MediaConnect account.
--   
--   <a>$sel:status:Flow'</a>, <a>flow_status</a> - The current status of
--   the flow.
--   
--   <a>$sel:entitlements:Flow'</a>, <a>flow_entitlements</a> - The
--   entitlements in this flow.
--   
--   <a>$sel:outputs:Flow'</a>, <a>flow_outputs</a> - The outputs in this
--   flow.
--   
--   <a>$sel:availabilityZone:Flow'</a>, <a>flow_availabilityZone</a> - The
--   Availability Zone that you want to create the flow in. These options
--   are limited to the Availability Zones within the current AWS.
--   
--   <a>$sel:flowArn:Flow'</a>, <a>flow_flowArn</a> - The Amazon Resource
--   Name (ARN), a unique identifier for any AWS resource, of the flow.
--   
--   <a>$sel:source:Flow'</a>, <a>flow_source</a> - Undocumented member.
--   
--   <a>$sel:name:Flow'</a>, <a>flow_name</a> - The name of the flow.
newFlow :: Status -> Text -> Text -> Source -> Text -> Flow

-- | The media streams that are associated with the flow. After you
--   associate a media stream with a source, you can also associate it with
--   outputs on the flow.
flow_mediaStreams :: Lens' Flow (Maybe [MediaStream])

-- | Undocumented member.
flow_sourceFailoverConfig :: Lens' Flow (Maybe FailoverConfig)

-- | The VPC Interfaces for this flow.
flow_vpcInterfaces :: Lens' Flow (Maybe [VpcInterface])

-- | Undocumented member.
flow_sources :: Lens' Flow (Maybe [Source])

-- | The IP address from which video will be sent to output destinations.
flow_egressIp :: Lens' Flow (Maybe Text)

-- | A description of the flow. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
flow_description :: Lens' Flow (Maybe Text)

-- | The current status of the flow.
flow_status :: Lens' Flow Status

-- | The entitlements in this flow.
flow_entitlements :: Lens' Flow [Entitlement]

-- | The outputs in this flow.
flow_outputs :: Lens' Flow [Output]

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS.
flow_availabilityZone :: Lens' Flow Text

-- | The Amazon Resource Name (ARN), a unique identifier for any AWS
--   resource, of the flow.
flow_flowArn :: Lens' Flow Text

-- | Undocumented member.
flow_source :: Lens' Flow Source

-- | The name of the flow.
flow_name :: Lens' Flow Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.Flow.Flow
instance GHC.Show.Show Amazonka.MediaConnect.Types.Flow.Flow
instance GHC.Read.Read Amazonka.MediaConnect.Types.Flow.Flow
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.Flow.Flow
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MediaConnect.Types.Flow.Flow
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.Flow.Flow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.Flow.Flow


module Amazonka.MediaConnect.Types.AddOutputRequest

-- | The output that you want to add to this flow.
--   
--   <i>See:</i> <a>newAddOutputRequest</a> smart constructor.
data AddOutputRequest
AddOutputRequest' :: Maybe Text -> Maybe Int -> Maybe [MediaStreamOutputConfigurationRequest] -> Maybe Encryption -> Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe VpcInterfaceAttachment -> Protocol -> AddOutputRequest

-- | The IP address from which video will be sent to output destinations.
[$sel:destination:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The maximum latency in milliseconds for Zixi-based streams.
[$sel:maxLatency:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
[$sel:mediaStreamOutputConfigurations:AddOutputRequest'] :: AddOutputRequest -> Maybe [MediaStreamOutputConfigurationRequest]

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
[$sel:encryption:AddOutputRequest'] :: AddOutputRequest -> Maybe Encryption

-- | The name of the output. This value must be unique within the current
--   flow.
[$sel:name:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:cidrAllowList:AddOutputRequest'] :: AddOutputRequest -> Maybe [Text]

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
[$sel:smoothingLatency:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
[$sel:description:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The port to use when content is distributed to this output.
[$sel:port:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The remote ID for the Zixi-pull output stream.
[$sel:remoteId:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The name of the VPC interface attachment to use for this output.
[$sel:vpcInterfaceAttachment:AddOutputRequest'] :: AddOutputRequest -> Maybe VpcInterfaceAttachment

-- | The protocol to use for the output.
[$sel:protocol:AddOutputRequest'] :: AddOutputRequest -> Protocol

-- | Create a value of <a>AddOutputRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:AddOutputRequest'</a>,
--   <a>addOutputRequest_destination</a> - The IP address from which video
--   will be sent to output destinations.
--   
--   <a>$sel:maxLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_maxLatency</a> - The maximum latency in
--   milliseconds for Zixi-based streams.
--   
--   <a>$sel:mediaStreamOutputConfigurations:AddOutputRequest'</a>,
--   <a>addOutputRequest_mediaStreamOutputConfigurations</a> - The media
--   streams that are associated with the output, and the parameters for
--   those associations.
--   
--   <a>$sel:encryption:AddOutputRequest'</a>,
--   <a>addOutputRequest_encryption</a> - The type of key used for the
--   encryption. If no keyType is provided, the service will use the
--   default setting (static-key).
--   
--   <a>$sel:name:AddOutputRequest'</a>, <a>addOutputRequest_name</a> - The
--   name of the output. This value must be unique within the current flow.
--   
--   <a>$sel:cidrAllowList:AddOutputRequest'</a>,
--   <a>addOutputRequest_cidrAllowList</a> - The range of IP addresses that
--   should be allowed to initiate output requests to this flow. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:description:AddOutputRequest'</a>,
--   <a>addOutputRequest_description</a> - A description of the output.
--   This description appears only on the AWS Elemental MediaConnect
--   console and will not be seen by the end user.
--   
--   <a>$sel:port:AddOutputRequest'</a>, <a>addOutputRequest_port</a> - The
--   port to use when content is distributed to this output.
--   
--   <a>$sel:streamId:AddOutputRequest'</a>,
--   <a>addOutputRequest_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:AddOutputRequest'</a>,
--   <a>addOutputRequest_remoteId</a> - The remote ID for the Zixi-pull
--   output stream.
--   
--   <a>$sel:vpcInterfaceAttachment:AddOutputRequest'</a>,
--   <a>addOutputRequest_vpcInterfaceAttachment</a> - The name of the VPC
--   interface attachment to use for this output.
--   
--   <a>$sel:protocol:AddOutputRequest'</a>,
--   <a>addOutputRequest_protocol</a> - The protocol to use for the output.
newAddOutputRequest :: Protocol -> AddOutputRequest

-- | The IP address from which video will be sent to output destinations.
addOutputRequest_destination :: Lens' AddOutputRequest (Maybe Text)

-- | The maximum latency in milliseconds for Zixi-based streams.
addOutputRequest_maxLatency :: Lens' AddOutputRequest (Maybe Int)

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
addOutputRequest_mediaStreamOutputConfigurations :: Lens' AddOutputRequest (Maybe [MediaStreamOutputConfigurationRequest])

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
addOutputRequest_encryption :: Lens' AddOutputRequest (Maybe Encryption)

-- | The name of the output. This value must be unique within the current
--   flow.
addOutputRequest_name :: Lens' AddOutputRequest (Maybe Text)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
addOutputRequest_cidrAllowList :: Lens' AddOutputRequest (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
addOutputRequest_smoothingLatency :: Lens' AddOutputRequest (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
addOutputRequest_minLatency :: Lens' AddOutputRequest (Maybe Int)

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
addOutputRequest_description :: Lens' AddOutputRequest (Maybe Text)

-- | The port to use when content is distributed to this output.
addOutputRequest_port :: Lens' AddOutputRequest (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
addOutputRequest_streamId :: Lens' AddOutputRequest (Maybe Text)

-- | The remote ID for the Zixi-pull output stream.
addOutputRequest_remoteId :: Lens' AddOutputRequest (Maybe Text)

-- | The name of the VPC interface attachment to use for this output.
addOutputRequest_vpcInterfaceAttachment :: Lens' AddOutputRequest (Maybe VpcInterfaceAttachment)

-- | The protocol to use for the output.
addOutputRequest_protocol :: Lens' AddOutputRequest Protocol
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.AddOutputRequest.AddOutputRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.AddOutputRequest.AddOutputRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.AddOutputRequest.AddOutputRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.AddOutputRequest.AddOutputRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.AddOutputRequest.AddOutputRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.AddOutputRequest.AddOutputRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.AddOutputRequest.AddOutputRequest


module Amazonka.MediaConnect.Types.VpcInterfaceRequest

-- | Desired VPC Interface for a Flow
--   
--   <i>See:</i> <a>newVpcInterfaceRequest</a> smart constructor.
data VpcInterfaceRequest
VpcInterfaceRequest' :: Maybe NetworkInterfaceType -> Text -> [Text] -> Text -> Text -> VpcInterfaceRequest

-- | The type of network interface. If this value is not included in the
--   request, MediaConnect uses ENA as the networkInterfaceType.
[$sel:networkInterfaceType:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Maybe NetworkInterfaceType

-- | Subnet must be in the AZ of the Flow
[$sel:subnetId:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Text

-- | Security Group IDs to be used on ENI.
[$sel:securityGroupIds:VpcInterfaceRequest'] :: VpcInterfaceRequest -> [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
[$sel:roleArn:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Text

-- | The name of the VPC Interface. This value must be unique within the
--   current flow.
[$sel:name:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Text

-- | Create a value of <a>VpcInterfaceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceType:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_networkInterfaceType</a> - The type of network
--   interface. If this value is not included in the request, MediaConnect
--   uses ENA as the networkInterfaceType.
--   
--   <a>$sel:subnetId:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_subnetId</a> - Subnet must be in the AZ of the
--   Flow
--   
--   <a>$sel:securityGroupIds:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_securityGroupIds</a> - Security Group IDs to be
--   used on ENI.
--   
--   <a>$sel:roleArn:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_roleArn</a> - Role Arn MediaConnect can assumes
--   to create ENIs in customer's account
--   
--   <a>$sel:name:VpcInterfaceRequest'</a>, <a>vpcInterfaceRequest_name</a>
--   - The name of the VPC Interface. This value must be unique within the
--   current flow.
newVpcInterfaceRequest :: Text -> Text -> Text -> VpcInterfaceRequest

-- | The type of network interface. If this value is not included in the
--   request, MediaConnect uses ENA as the networkInterfaceType.
vpcInterfaceRequest_networkInterfaceType :: Lens' VpcInterfaceRequest (Maybe NetworkInterfaceType)

-- | Subnet must be in the AZ of the Flow
vpcInterfaceRequest_subnetId :: Lens' VpcInterfaceRequest Text

-- | Security Group IDs to be used on ENI.
vpcInterfaceRequest_securityGroupIds :: Lens' VpcInterfaceRequest [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
vpcInterfaceRequest_roleArn :: Lens' VpcInterfaceRequest Text

-- | The name of the VPC Interface. This value must be unique within the
--   current flow.
vpcInterfaceRequest_name :: Lens' VpcInterfaceRequest Text
instance GHC.Generics.Generic Amazonka.MediaConnect.Types.VpcInterfaceRequest.VpcInterfaceRequest
instance GHC.Show.Show Amazonka.MediaConnect.Types.VpcInterfaceRequest.VpcInterfaceRequest
instance GHC.Read.Read Amazonka.MediaConnect.Types.VpcInterfaceRequest.VpcInterfaceRequest
instance GHC.Classes.Eq Amazonka.MediaConnect.Types.VpcInterfaceRequest.VpcInterfaceRequest
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.Types.VpcInterfaceRequest.VpcInterfaceRequest
instance Control.DeepSeq.NFData Amazonka.MediaConnect.Types.VpcInterfaceRequest.VpcInterfaceRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.Types.VpcInterfaceRequest.VpcInterfaceRequest


module Amazonka.MediaConnect.Types

-- | API version <tt>2018-11-14</tt> of the Amazon MediaConnect SDK
--   configuration.
defaultService :: Service

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_GrantFlowEntitlements420Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_CreateFlow420Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_AddFlowOutputs420Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError
newtype Algorithm
Algorithm' :: Text -> Algorithm
[fromAlgorithm] :: Algorithm -> Text
pattern Algorithm_Aes128 :: Algorithm
pattern Algorithm_Aes192 :: Algorithm
pattern Algorithm_Aes256 :: Algorithm
newtype Colorimetry
Colorimetry' :: Text -> Colorimetry
[fromColorimetry] :: Colorimetry -> Text
pattern Colorimetry_BT2020 :: Colorimetry
pattern Colorimetry_BT2100 :: Colorimetry
pattern Colorimetry_BT601 :: Colorimetry
pattern Colorimetry_BT709 :: Colorimetry
pattern Colorimetry_ST2065_1 :: Colorimetry
pattern Colorimetry_ST2065_3 :: Colorimetry
pattern Colorimetry_XYZ :: Colorimetry
newtype DurationUnits
DurationUnits' :: Text -> DurationUnits
[fromDurationUnits] :: DurationUnits -> Text
pattern DurationUnits_MONTHS :: DurationUnits
newtype EncoderProfile
EncoderProfile' :: Text -> EncoderProfile
[fromEncoderProfile] :: EncoderProfile -> Text
pattern EncoderProfile_High :: EncoderProfile
pattern EncoderProfile_Main :: EncoderProfile
newtype EncodingName
EncodingName' :: Text -> EncodingName
[fromEncodingName] :: EncodingName -> Text
pattern EncodingName_Jxsv :: EncodingName
pattern EncodingName_Pcm :: EncodingName
pattern EncodingName_Raw :: EncodingName
pattern EncodingName_Smpte291 :: EncodingName
newtype EntitlementStatus
EntitlementStatus' :: Text -> EntitlementStatus
[fromEntitlementStatus] :: EntitlementStatus -> Text
pattern EntitlementStatus_DISABLED :: EntitlementStatus
pattern EntitlementStatus_ENABLED :: EntitlementStatus
newtype FailoverMode
FailoverMode' :: Text -> FailoverMode
[fromFailoverMode] :: FailoverMode -> Text
pattern FailoverMode_FAILOVER :: FailoverMode
pattern FailoverMode_MERGE :: FailoverMode
newtype KeyType
KeyType' :: Text -> KeyType
[fromKeyType] :: KeyType -> Text
pattern KeyType_Speke :: KeyType
pattern KeyType_Srt_password :: KeyType
pattern KeyType_Static_key :: KeyType
newtype MediaStreamType
MediaStreamType' :: Text -> MediaStreamType
[fromMediaStreamType] :: MediaStreamType -> Text
pattern MediaStreamType_Ancillary_data :: MediaStreamType
pattern MediaStreamType_Audio :: MediaStreamType
pattern MediaStreamType_Video :: MediaStreamType
newtype NetworkInterfaceType
NetworkInterfaceType' :: Text -> NetworkInterfaceType
[fromNetworkInterfaceType] :: NetworkInterfaceType -> Text
pattern NetworkInterfaceType_Efa :: NetworkInterfaceType
pattern NetworkInterfaceType_Ena :: NetworkInterfaceType
newtype PriceUnits
PriceUnits' :: Text -> PriceUnits
[fromPriceUnits] :: PriceUnits -> Text
pattern PriceUnits_HOURLY :: PriceUnits
newtype Protocol
Protocol' :: Text -> Protocol
[fromProtocol] :: Protocol -> Text
pattern Protocol_Cdi :: Protocol
pattern Protocol_Rist :: Protocol
pattern Protocol_Rtp :: Protocol
pattern Protocol_Rtp_fec :: Protocol
pattern Protocol_Srt_listener :: Protocol
pattern Protocol_St2110_jpegxs :: Protocol
pattern Protocol_Zixi_pull :: Protocol
pattern Protocol_Zixi_push :: Protocol
newtype Range
Range' :: Text -> Range
[fromRange] :: Range -> Text
pattern Range_FULL :: Range
pattern Range_FULLPROTECT :: Range
pattern Range_NARROW :: Range
newtype ReservationState
ReservationState' :: Text -> ReservationState
[fromReservationState] :: ReservationState -> Text
pattern ReservationState_ACTIVE :: ReservationState
pattern ReservationState_CANCELED :: ReservationState
pattern ReservationState_EXPIRED :: ReservationState
pattern ReservationState_PROCESSING :: ReservationState
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_Mbps_Outbound_Bandwidth :: ResourceType
newtype ScanMode
ScanMode' :: Text -> ScanMode
[fromScanMode] :: ScanMode -> Text
pattern ScanMode_Interlace :: ScanMode
pattern ScanMode_Progressive :: ScanMode
pattern ScanMode_Progressive_segmented_frame :: ScanMode
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_ENTITLED :: SourceType
pattern SourceType_OWNED :: SourceType
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_DISABLED :: State
pattern State_ENABLED :: State
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_ACTIVE :: Status
pattern Status_DELETING :: Status
pattern Status_ERROR :: Status
pattern Status_STANDBY :: Status
pattern Status_STARTING :: Status
pattern Status_STOPPING :: Status
pattern Status_UPDATING :: Status
newtype Tcs
Tcs' :: Text -> Tcs
[fromTcs] :: Tcs -> Text
pattern Tcs_BT2100LINHLG :: Tcs
pattern Tcs_BT2100LINPQ :: Tcs
pattern Tcs_DENSITY :: Tcs
pattern Tcs_HLG :: Tcs
pattern Tcs_LINEAR :: Tcs
pattern Tcs_PQ :: Tcs
pattern Tcs_SDR :: Tcs
pattern Tcs_ST2065_1 :: Tcs
pattern Tcs_ST428_1 :: Tcs

-- | The media stream that you want to add to the flow.
--   
--   <i>See:</i> <a>newAddMediaStreamRequest</a> smart constructor.
data AddMediaStreamRequest
AddMediaStreamRequest' :: Maybe Text -> Maybe MediaStreamAttributesRequest -> Maybe Int -> Maybe Text -> MediaStreamType -> Int -> Text -> AddMediaStreamRequest

-- | The resolution of the video.
[$sel:videoFormat:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe Text

-- | The attributes that you want to assign to the new media stream.
[$sel:attributes:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe MediaStreamAttributesRequest

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
[$sel:clockRate:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe Int

-- | A description that can help you quickly identify what your media
--   stream is used for.
[$sel:description:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Maybe Text

-- | The type of media stream.
[$sel:mediaStreamType:AddMediaStreamRequest'] :: AddMediaStreamRequest -> MediaStreamType

-- | A unique identifier for the media stream.
[$sel:mediaStreamId:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Int

-- | A name that helps you distinguish one media stream from another.
[$sel:mediaStreamName:AddMediaStreamRequest'] :: AddMediaStreamRequest -> Text

-- | Create a value of <a>AddMediaStreamRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_videoFormat</a> - The resolution of the
--   video.
--   
--   <a>$sel:attributes:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_attributes</a> - The attributes that you want
--   to assign to the new media stream.
--   
--   <a>$sel:clockRate:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_clockRate</a> - The sample rate (in Hz) for
--   the stream. If the media stream type is video or ancillary data, set
--   this value to 90000. If the media stream type is audio, set this value
--   to either 48000 or 96000.
--   
--   <a>$sel:description:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_description</a> - A description that can help
--   you quickly identify what your media stream is used for.
--   
--   <a>$sel:mediaStreamType:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamType</a> - The type of media
--   stream.
--   
--   <a>$sel:mediaStreamId:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamId</a> - A unique identifier for
--   the media stream.
--   
--   <a>$sel:mediaStreamName:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamName</a> - A name that helps you
--   distinguish one media stream from another.
newAddMediaStreamRequest :: MediaStreamType -> Int -> Text -> AddMediaStreamRequest

-- | The resolution of the video.
addMediaStreamRequest_videoFormat :: Lens' AddMediaStreamRequest (Maybe Text)

-- | The attributes that you want to assign to the new media stream.
addMediaStreamRequest_attributes :: Lens' AddMediaStreamRequest (Maybe MediaStreamAttributesRequest)

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
addMediaStreamRequest_clockRate :: Lens' AddMediaStreamRequest (Maybe Int)

-- | A description that can help you quickly identify what your media
--   stream is used for.
addMediaStreamRequest_description :: Lens' AddMediaStreamRequest (Maybe Text)

-- | The type of media stream.
addMediaStreamRequest_mediaStreamType :: Lens' AddMediaStreamRequest MediaStreamType

-- | A unique identifier for the media stream.
addMediaStreamRequest_mediaStreamId :: Lens' AddMediaStreamRequest Int

-- | A name that helps you distinguish one media stream from another.
addMediaStreamRequest_mediaStreamName :: Lens' AddMediaStreamRequest Text

-- | The output that you want to add to this flow.
--   
--   <i>See:</i> <a>newAddOutputRequest</a> smart constructor.
data AddOutputRequest
AddOutputRequest' :: Maybe Text -> Maybe Int -> Maybe [MediaStreamOutputConfigurationRequest] -> Maybe Encryption -> Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe VpcInterfaceAttachment -> Protocol -> AddOutputRequest

-- | The IP address from which video will be sent to output destinations.
[$sel:destination:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The maximum latency in milliseconds for Zixi-based streams.
[$sel:maxLatency:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
[$sel:mediaStreamOutputConfigurations:AddOutputRequest'] :: AddOutputRequest -> Maybe [MediaStreamOutputConfigurationRequest]

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
[$sel:encryption:AddOutputRequest'] :: AddOutputRequest -> Maybe Encryption

-- | The name of the output. This value must be unique within the current
--   flow.
[$sel:name:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:cidrAllowList:AddOutputRequest'] :: AddOutputRequest -> Maybe [Text]

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
[$sel:smoothingLatency:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
[$sel:description:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The port to use when content is distributed to this output.
[$sel:port:AddOutputRequest'] :: AddOutputRequest -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The remote ID for the Zixi-pull output stream.
[$sel:remoteId:AddOutputRequest'] :: AddOutputRequest -> Maybe Text

-- | The name of the VPC interface attachment to use for this output.
[$sel:vpcInterfaceAttachment:AddOutputRequest'] :: AddOutputRequest -> Maybe VpcInterfaceAttachment

-- | The protocol to use for the output.
[$sel:protocol:AddOutputRequest'] :: AddOutputRequest -> Protocol

-- | Create a value of <a>AddOutputRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:AddOutputRequest'</a>,
--   <a>addOutputRequest_destination</a> - The IP address from which video
--   will be sent to output destinations.
--   
--   <a>$sel:maxLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_maxLatency</a> - The maximum latency in
--   milliseconds for Zixi-based streams.
--   
--   <a>$sel:mediaStreamOutputConfigurations:AddOutputRequest'</a>,
--   <a>addOutputRequest_mediaStreamOutputConfigurations</a> - The media
--   streams that are associated with the output, and the parameters for
--   those associations.
--   
--   <a>$sel:encryption:AddOutputRequest'</a>,
--   <a>addOutputRequest_encryption</a> - The type of key used for the
--   encryption. If no keyType is provided, the service will use the
--   default setting (static-key).
--   
--   <a>$sel:name:AddOutputRequest'</a>, <a>addOutputRequest_name</a> - The
--   name of the output. This value must be unique within the current flow.
--   
--   <a>$sel:cidrAllowList:AddOutputRequest'</a>,
--   <a>addOutputRequest_cidrAllowList</a> - The range of IP addresses that
--   should be allowed to initiate output requests to this flow. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:description:AddOutputRequest'</a>,
--   <a>addOutputRequest_description</a> - A description of the output.
--   This description appears only on the AWS Elemental MediaConnect
--   console and will not be seen by the end user.
--   
--   <a>$sel:port:AddOutputRequest'</a>, <a>addOutputRequest_port</a> - The
--   port to use when content is distributed to this output.
--   
--   <a>$sel:streamId:AddOutputRequest'</a>,
--   <a>addOutputRequest_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:AddOutputRequest'</a>,
--   <a>addOutputRequest_remoteId</a> - The remote ID for the Zixi-pull
--   output stream.
--   
--   <a>$sel:vpcInterfaceAttachment:AddOutputRequest'</a>,
--   <a>addOutputRequest_vpcInterfaceAttachment</a> - The name of the VPC
--   interface attachment to use for this output.
--   
--   <a>$sel:protocol:AddOutputRequest'</a>,
--   <a>addOutputRequest_protocol</a> - The protocol to use for the output.
newAddOutputRequest :: Protocol -> AddOutputRequest

-- | The IP address from which video will be sent to output destinations.
addOutputRequest_destination :: Lens' AddOutputRequest (Maybe Text)

-- | The maximum latency in milliseconds for Zixi-based streams.
addOutputRequest_maxLatency :: Lens' AddOutputRequest (Maybe Int)

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
addOutputRequest_mediaStreamOutputConfigurations :: Lens' AddOutputRequest (Maybe [MediaStreamOutputConfigurationRequest])

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
addOutputRequest_encryption :: Lens' AddOutputRequest (Maybe Encryption)

-- | The name of the output. This value must be unique within the current
--   flow.
addOutputRequest_name :: Lens' AddOutputRequest (Maybe Text)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
addOutputRequest_cidrAllowList :: Lens' AddOutputRequest (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
addOutputRequest_smoothingLatency :: Lens' AddOutputRequest (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
addOutputRequest_minLatency :: Lens' AddOutputRequest (Maybe Int)

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
addOutputRequest_description :: Lens' AddOutputRequest (Maybe Text)

-- | The port to use when content is distributed to this output.
addOutputRequest_port :: Lens' AddOutputRequest (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
addOutputRequest_streamId :: Lens' AddOutputRequest (Maybe Text)

-- | The remote ID for the Zixi-pull output stream.
addOutputRequest_remoteId :: Lens' AddOutputRequest (Maybe Text)

-- | The name of the VPC interface attachment to use for this output.
addOutputRequest_vpcInterfaceAttachment :: Lens' AddOutputRequest (Maybe VpcInterfaceAttachment)

-- | The protocol to use for the output.
addOutputRequest_protocol :: Lens' AddOutputRequest Protocol

-- | The transport parameters that are associated with an outbound media
--   stream.
--   
--   <i>See:</i> <a>newDestinationConfiguration</a> smart constructor.
data DestinationConfiguration
DestinationConfiguration' :: Text -> Int -> Interface -> Text -> DestinationConfiguration

-- | The IP address where contents of the media stream will be sent.
[$sel:destinationIp:DestinationConfiguration'] :: DestinationConfiguration -> Text

-- | The port to use when the content of the media stream is distributed to
--   the output.
[$sel:destinationPort:DestinationConfiguration'] :: DestinationConfiguration -> Int

-- | The VPC interface that is used for the media stream associated with
--   the output.
[$sel:interface:DestinationConfiguration'] :: DestinationConfiguration -> Interface

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. This value is represented by the elastic
--   network interface IP address of the VPC. This field applies only to
--   outputs that use the CDI or ST 2110 JPEG XS protocol.
[$sel:outboundIp:DestinationConfiguration'] :: DestinationConfiguration -> Text

-- | Create a value of <a>DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationIp:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_destinationIp</a> - The IP address where
--   contents of the media stream will be sent.
--   
--   <a>$sel:destinationPort:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_destinationPort</a> - The port to use when
--   the content of the media stream is distributed to the output.
--   
--   <a>$sel:interface:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_interface</a> - The VPC interface that is
--   used for the media stream associated with the output.
--   
--   <a>$sel:outboundIp:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_outboundIp</a> - The IP address that the
--   receiver requires in order to establish a connection with the flow.
--   This value is represented by the elastic network interface IP address
--   of the VPC. This field applies only to outputs that use the CDI or ST
--   2110 JPEG XS protocol.
newDestinationConfiguration :: Text -> Int -> Interface -> Text -> DestinationConfiguration

-- | The IP address where contents of the media stream will be sent.
destinationConfiguration_destinationIp :: Lens' DestinationConfiguration Text

-- | The port to use when the content of the media stream is distributed to
--   the output.
destinationConfiguration_destinationPort :: Lens' DestinationConfiguration Int

-- | The VPC interface that is used for the media stream associated with
--   the output.
destinationConfiguration_interface :: Lens' DestinationConfiguration Interface

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. This value is represented by the elastic
--   network interface IP address of the VPC. This field applies only to
--   outputs that use the CDI or ST 2110 JPEG XS protocol.
destinationConfiguration_outboundIp :: Lens' DestinationConfiguration Text

-- | The transport parameters that you want to associate with an outbound
--   media stream.
--   
--   <i>See:</i> <a>newDestinationConfigurationRequest</a> smart
--   constructor.
data DestinationConfigurationRequest
DestinationConfigurationRequest' :: Text -> Int -> InterfaceRequest -> DestinationConfigurationRequest

-- | The IP address where you want MediaConnect to send contents of the
--   media stream.
[$sel:destinationIp:DestinationConfigurationRequest'] :: DestinationConfigurationRequest -> Text

-- | The port that you want MediaConnect to use when it distributes the
--   media stream to the output.
[$sel:destinationPort:DestinationConfigurationRequest'] :: DestinationConfigurationRequest -> Int

-- | The VPC interface that you want to use for the media stream associated
--   with the output.
[$sel:interface:DestinationConfigurationRequest'] :: DestinationConfigurationRequest -> InterfaceRequest

-- | Create a value of <a>DestinationConfigurationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationIp:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_destinationIp</a> - The IP address
--   where you want MediaConnect to send contents of the media stream.
--   
--   <a>$sel:destinationPort:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_destinationPort</a> - The port that
--   you want MediaConnect to use when it distributes the media stream to
--   the output.
--   
--   <a>$sel:interface:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_interface</a> - The VPC interface
--   that you want to use for the media stream associated with the output.
newDestinationConfigurationRequest :: Text -> Int -> InterfaceRequest -> DestinationConfigurationRequest

-- | The IP address where you want MediaConnect to send contents of the
--   media stream.
destinationConfigurationRequest_destinationIp :: Lens' DestinationConfigurationRequest Text

-- | The port that you want MediaConnect to use when it distributes the
--   media stream to the output.
destinationConfigurationRequest_destinationPort :: Lens' DestinationConfigurationRequest Int

-- | The VPC interface that you want to use for the media stream associated
--   with the output.
destinationConfigurationRequest_interface :: Lens' DestinationConfigurationRequest InterfaceRequest

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
--   
--   <i>See:</i> <a>newEncodingParameters</a> smart constructor.
data EncodingParameters
EncodingParameters' :: EncoderProfile -> Double -> EncodingParameters

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, with a flow source that uses
--   the CDI protocol.
[$sel:encoderProfile:EncodingParameters'] :: EncodingParameters -> EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
[$sel:compressionFactor:EncodingParameters'] :: EncodingParameters -> Double

-- | Create a value of <a>EncodingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encoderProfile:EncodingParameters'</a>,
--   <a>encodingParameters_encoderProfile</a> - A setting on the encoder
--   that drives compression settings. This property only applies to video
--   media streams associated with outputs that use the ST 2110 JPEG XS
--   protocol, with a flow source that uses the CDI protocol.
--   
--   <a>$sel:compressionFactor:EncodingParameters'</a>,
--   <a>encodingParameters_compressionFactor</a> - A value that is used to
--   calculate compression for an output. The bitrate of the output is
--   calculated as follows: Output bitrate = (1 / compressionFactor) *
--   (source bitrate) This property only applies to outputs that use the ST
--   2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
--   Valid values are floating point numbers in the range of 3.0 to 10.0,
--   inclusive.
newEncodingParameters :: EncoderProfile -> Double -> EncodingParameters

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, with a flow source that uses
--   the CDI protocol.
encodingParameters_encoderProfile :: Lens' EncodingParameters EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
encodingParameters_compressionFactor :: Lens' EncodingParameters Double

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
--   
--   <i>See:</i> <a>newEncodingParametersRequest</a> smart constructor.
data EncodingParametersRequest
EncodingParametersRequest' :: EncoderProfile -> Double -> EncodingParametersRequest

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, if at least one source on the
--   flow uses the CDI protocol.
[$sel:encoderProfile:EncodingParametersRequest'] :: EncodingParametersRequest -> EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
[$sel:compressionFactor:EncodingParametersRequest'] :: EncodingParametersRequest -> Double

-- | Create a value of <a>EncodingParametersRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encoderProfile:EncodingParametersRequest'</a>,
--   <a>encodingParametersRequest_encoderProfile</a> - A setting on the
--   encoder that drives compression settings. This property only applies
--   to video media streams associated with outputs that use the ST 2110
--   JPEG XS protocol, if at least one source on the flow uses the CDI
--   protocol.
--   
--   <a>$sel:compressionFactor:EncodingParametersRequest'</a>,
--   <a>encodingParametersRequest_compressionFactor</a> - A value that is
--   used to calculate compression for an output. The bitrate of the output
--   is calculated as follows: Output bitrate = (1 / compressionFactor) *
--   (source bitrate) This property only applies to outputs that use the ST
--   2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
--   Valid values are floating point numbers in the range of 3.0 to 10.0,
--   inclusive.
newEncodingParametersRequest :: EncoderProfile -> Double -> EncodingParametersRequest

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, if at least one source on the
--   flow uses the CDI protocol.
encodingParametersRequest_encoderProfile :: Lens' EncodingParametersRequest EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
encodingParametersRequest_compressionFactor :: Lens' EncodingParametersRequest Double

-- | Information about the encryption of the flow.
--   
--   <i>See:</i> <a>newEncryption</a> smart constructor.
data Encryption
Encryption' :: Maybe KeyType -> Maybe Text -> Maybe Text -> Maybe Algorithm -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Encryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
[$sel:keyType:Encryption'] :: Encryption -> Maybe KeyType

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
[$sel:resourceId:Encryption'] :: Encryption -> Maybe Text

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
[$sel:url:Encryption'] :: Encryption -> Maybe Text

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
[$sel:algorithm:Encryption'] :: Encryption -> Maybe Algorithm

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
[$sel:constantInitializationVector:Encryption'] :: Encryption -> Maybe Text

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
[$sel:deviceId:Encryption'] :: Encryption -> Maybe Text

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
[$sel:region:Encryption'] :: Encryption -> Maybe Text

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
[$sel:secretArn:Encryption'] :: Encryption -> Maybe Text

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
[$sel:roleArn:Encryption'] :: Encryption -> Text

-- | Create a value of <a>Encryption</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyType:Encryption'</a>, <a>encryption_keyType</a> - The type
--   of key that is used for the encryption. If no keyType is provided, the
--   service will use the default setting (static-key).
--   
--   <a>$sel:resourceId:Encryption'</a>, <a>encryption_resourceId</a> - An
--   identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
--   
--   <a>$sel:url:Encryption'</a>, <a>encryption_url</a> - The URL from the
--   API Gateway proxy that you set up to talk to your key server. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:algorithm:Encryption'</a>, <a>encryption_algorithm</a> - The
--   type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
--   
--   <a>$sel:constantInitializationVector:Encryption'</a>,
--   <a>encryption_constantInitializationVector</a> - A 128-bit, 16-byte
--   hex value represented by a 32-character string, to be used with the
--   key for encrypting content. This parameter is not valid for static key
--   encryption.
--   
--   <a>$sel:deviceId:Encryption'</a>, <a>encryption_deviceId</a> - The
--   value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
--   
--   <a>$sel:region:Encryption'</a>, <a>encryption_region</a> - The AWS
--   Region that the API Gateway proxy endpoint was created in. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:secretArn:Encryption'</a>, <a>encryption_secretArn</a> - The
--   ARN of the secret that you created in AWS Secrets Manager to store the
--   encryption key. This parameter is required for static key encryption
--   and is not valid for SPEKE encryption.
--   
--   <a>$sel:roleArn:Encryption'</a>, <a>encryption_roleArn</a> - The ARN
--   of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
newEncryption :: Text -> Encryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
encryption_keyType :: Lens' Encryption (Maybe KeyType)

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
encryption_resourceId :: Lens' Encryption (Maybe Text)

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
encryption_url :: Lens' Encryption (Maybe Text)

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
encryption_algorithm :: Lens' Encryption (Maybe Algorithm)

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
encryption_constantInitializationVector :: Lens' Encryption (Maybe Text)

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
encryption_deviceId :: Lens' Encryption (Maybe Text)

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
encryption_region :: Lens' Encryption (Maybe Text)

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
encryption_secretArn :: Lens' Encryption (Maybe Text)

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
encryption_roleArn :: Lens' Encryption Text

-- | The settings for a flow entitlement.
--   
--   <i>See:</i> <a>newEntitlement</a> smart constructor.
data Entitlement
Entitlement' :: Maybe Int -> Maybe Encryption -> Maybe EntitlementStatus -> Maybe Text -> Text -> [Text] -> Text -> Entitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:Entitlement'] :: Entitlement -> Maybe Int

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
[$sel:encryption:Entitlement'] :: Entitlement -> Maybe Encryption

-- | An indication of whether the entitlement is enabled.
[$sel:entitlementStatus:Entitlement'] :: Entitlement -> Maybe EntitlementStatus

-- | A description of the entitlement.
[$sel:description:Entitlement'] :: Entitlement -> Maybe Text

-- | The ARN of the entitlement.
[$sel:entitlementArn:Entitlement'] :: Entitlement -> Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
[$sel:subscribers:Entitlement'] :: Entitlement -> [Text]

-- | The name of the entitlement.
[$sel:name:Entitlement'] :: Entitlement -> Text

-- | Create a value of <a>Entitlement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Entitlement'</a>,
--   <a>entitlement_dataTransferSubscriberFeePercent</a> - Percentage from
--   0-100 of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:encryption:Entitlement'</a>, <a>entitlement_encryption</a> -
--   The type of encryption that will be used on the output that is
--   associated with this entitlement.
--   
--   <a>$sel:entitlementStatus:Entitlement'</a>,
--   <a>entitlement_entitlementStatus</a> - An indication of whether the
--   entitlement is enabled.
--   
--   <a>$sel:description:Entitlement'</a>, <a>entitlement_description</a> -
--   A description of the entitlement.
--   
--   <a>$sel:entitlementArn:Entitlement'</a>,
--   <a>entitlement_entitlementArn</a> - The ARN of the entitlement.
--   
--   <a>$sel:subscribers:Entitlement'</a>, <a>entitlement_subscribers</a> -
--   The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
--   
--   <a>$sel:name:Entitlement'</a>, <a>entitlement_name</a> - The name of
--   the entitlement.
newEntitlement :: Text -> Text -> Entitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
entitlement_dataTransferSubscriberFeePercent :: Lens' Entitlement (Maybe Int)

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
entitlement_encryption :: Lens' Entitlement (Maybe Encryption)

-- | An indication of whether the entitlement is enabled.
entitlement_entitlementStatus :: Lens' Entitlement (Maybe EntitlementStatus)

-- | A description of the entitlement.
entitlement_description :: Lens' Entitlement (Maybe Text)

-- | The ARN of the entitlement.
entitlement_entitlementArn :: Lens' Entitlement Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
entitlement_subscribers :: Lens' Entitlement [Text]

-- | The name of the entitlement.
entitlement_name :: Lens' Entitlement Text

-- | The settings for source failover
--   
--   <i>See:</i> <a>newFailoverConfig</a> smart constructor.
data FailoverConfig
FailoverConfig' :: Maybe State -> Maybe Int -> Maybe SourcePriority -> Maybe FailoverMode -> FailoverConfig
[$sel:state:FailoverConfig'] :: FailoverConfig -> Maybe State

-- | Search window time to look for dash-7 packets
[$sel:recoveryWindow:FailoverConfig'] :: FailoverConfig -> Maybe Int

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
[$sel:sourcePriority:FailoverConfig'] :: FailoverConfig -> Maybe SourcePriority

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
[$sel:failoverMode:FailoverConfig'] :: FailoverConfig -> Maybe FailoverMode

-- | Create a value of <a>FailoverConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:FailoverConfig'</a>, <a>failoverConfig_state</a> -
--   Undocumented member.
--   
--   <a>$sel:recoveryWindow:FailoverConfig'</a>,
--   <a>failoverConfig_recoveryWindow</a> - Search window time to look for
--   dash-7 packets
--   
--   <a>$sel:sourcePriority:FailoverConfig'</a>,
--   <a>failoverConfig_sourcePriority</a> - The priority you want to assign
--   to a source. You can have a primary stream and a backup stream or two
--   equally prioritized streams.
--   
--   <a>$sel:failoverMode:FailoverConfig'</a>,
--   <a>failoverConfig_failoverMode</a> - The type of failover you choose
--   for this flow. MERGE combines the source streams into a single stream,
--   allowing graceful recovery from any single-source loss. FAILOVER
--   allows switching between different streams.
newFailoverConfig :: FailoverConfig

-- | Undocumented member.
failoverConfig_state :: Lens' FailoverConfig (Maybe State)

-- | Search window time to look for dash-7 packets
failoverConfig_recoveryWindow :: Lens' FailoverConfig (Maybe Int)

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
failoverConfig_sourcePriority :: Lens' FailoverConfig (Maybe SourcePriority)

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
failoverConfig_failoverMode :: Lens' FailoverConfig (Maybe FailoverMode)

-- | The settings for a flow, including its source, outputs, and
--   entitlements.
--   
--   <i>See:</i> <a>newFlow</a> smart constructor.
data Flow
Flow' :: Maybe [MediaStream] -> Maybe FailoverConfig -> Maybe [VpcInterface] -> Maybe [Source] -> Maybe Text -> Maybe Text -> Status -> [Entitlement] -> [Output] -> Text -> Text -> Source -> Text -> Flow

-- | The media streams that are associated with the flow. After you
--   associate a media stream with a source, you can also associate it with
--   outputs on the flow.
[$sel:mediaStreams:Flow'] :: Flow -> Maybe [MediaStream]
[$sel:sourceFailoverConfig:Flow'] :: Flow -> Maybe FailoverConfig

-- | The VPC Interfaces for this flow.
[$sel:vpcInterfaces:Flow'] :: Flow -> Maybe [VpcInterface]
[$sel:sources:Flow'] :: Flow -> Maybe [Source]

-- | The IP address from which video will be sent to output destinations.
[$sel:egressIp:Flow'] :: Flow -> Maybe Text

-- | A description of the flow. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
[$sel:description:Flow'] :: Flow -> Maybe Text

-- | The current status of the flow.
[$sel:status:Flow'] :: Flow -> Status

-- | The entitlements in this flow.
[$sel:entitlements:Flow'] :: Flow -> [Entitlement]

-- | The outputs in this flow.
[$sel:outputs:Flow'] :: Flow -> [Output]

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS.
[$sel:availabilityZone:Flow'] :: Flow -> Text

-- | The Amazon Resource Name (ARN), a unique identifier for any AWS
--   resource, of the flow.
[$sel:flowArn:Flow'] :: Flow -> Text
[$sel:source:Flow'] :: Flow -> Source

-- | The name of the flow.
[$sel:name:Flow'] :: Flow -> Text

-- | Create a value of <a>Flow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mediaStreams:Flow'</a>, <a>flow_mediaStreams</a> - The media
--   streams that are associated with the flow. After you associate a media
--   stream with a source, you can also associate it with outputs on the
--   flow.
--   
--   <a>$sel:sourceFailoverConfig:Flow'</a>,
--   <a>flow_sourceFailoverConfig</a> - Undocumented member.
--   
--   <a>$sel:vpcInterfaces:Flow'</a>, <a>flow_vpcInterfaces</a> - The VPC
--   Interfaces for this flow.
--   
--   <a>$sel:sources:Flow'</a>, <a>flow_sources</a> - Undocumented member.
--   
--   <a>$sel:egressIp:Flow'</a>, <a>flow_egressIp</a> - The IP address from
--   which video will be sent to output destinations.
--   
--   <a>$sel:description:Flow'</a>, <a>flow_description</a> - A description
--   of the flow. This value is not used or seen outside of the current AWS
--   Elemental MediaConnect account.
--   
--   <a>$sel:status:Flow'</a>, <a>flow_status</a> - The current status of
--   the flow.
--   
--   <a>$sel:entitlements:Flow'</a>, <a>flow_entitlements</a> - The
--   entitlements in this flow.
--   
--   <a>$sel:outputs:Flow'</a>, <a>flow_outputs</a> - The outputs in this
--   flow.
--   
--   <a>$sel:availabilityZone:Flow'</a>, <a>flow_availabilityZone</a> - The
--   Availability Zone that you want to create the flow in. These options
--   are limited to the Availability Zones within the current AWS.
--   
--   <a>$sel:flowArn:Flow'</a>, <a>flow_flowArn</a> - The Amazon Resource
--   Name (ARN), a unique identifier for any AWS resource, of the flow.
--   
--   <a>$sel:source:Flow'</a>, <a>flow_source</a> - Undocumented member.
--   
--   <a>$sel:name:Flow'</a>, <a>flow_name</a> - The name of the flow.
newFlow :: Status -> Text -> Text -> Source -> Text -> Flow

-- | The media streams that are associated with the flow. After you
--   associate a media stream with a source, you can also associate it with
--   outputs on the flow.
flow_mediaStreams :: Lens' Flow (Maybe [MediaStream])

-- | Undocumented member.
flow_sourceFailoverConfig :: Lens' Flow (Maybe FailoverConfig)

-- | The VPC Interfaces for this flow.
flow_vpcInterfaces :: Lens' Flow (Maybe [VpcInterface])

-- | Undocumented member.
flow_sources :: Lens' Flow (Maybe [Source])

-- | The IP address from which video will be sent to output destinations.
flow_egressIp :: Lens' Flow (Maybe Text)

-- | A description of the flow. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
flow_description :: Lens' Flow (Maybe Text)

-- | The current status of the flow.
flow_status :: Lens' Flow Status

-- | The entitlements in this flow.
flow_entitlements :: Lens' Flow [Entitlement]

-- | The outputs in this flow.
flow_outputs :: Lens' Flow [Output]

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS.
flow_availabilityZone :: Lens' Flow Text

-- | The Amazon Resource Name (ARN), a unique identifier for any AWS
--   resource, of the flow.
flow_flowArn :: Lens' Flow Text

-- | Undocumented member.
flow_source :: Lens' Flow Source

-- | The name of the flow.
flow_name :: Lens' Flow Text

-- | FMTP
--   
--   <i>See:</i> <a>newFmtp</a> smart constructor.
data Fmtp
Fmtp' :: Maybe Tcs -> Maybe Text -> Maybe Text -> Maybe ScanMode -> Maybe Range -> Maybe Text -> Maybe Colorimetry -> Fmtp

-- | The transfer characteristic system (TCS) that is used in the video.
[$sel:tcs:Fmtp'] :: Fmtp -> Maybe Tcs

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
[$sel:exactFramerate:Fmtp'] :: Fmtp -> Maybe Text

-- | The pixel aspect ratio (PAR) of the video.
[$sel:par:Fmtp'] :: Fmtp -> Maybe Text

-- | The type of compression that was used to smooth the video’s appearance
[$sel:scanMode:Fmtp'] :: Fmtp -> Maybe ScanMode

-- | The encoding range of the video.
[$sel:range:Fmtp'] :: Fmtp -> Maybe Range

-- | The format of the audio channel.
[$sel:channelOrder:Fmtp'] :: Fmtp -> Maybe Text

-- | The format that is used for the representation of color.
[$sel:colorimetry:Fmtp'] :: Fmtp -> Maybe Colorimetry

-- | Create a value of <a>Fmtp</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tcs:Fmtp'</a>, <a>fmtp_tcs</a> - The transfer characteristic
--   system (TCS) that is used in the video.
--   
--   <a>$sel:exactFramerate:Fmtp'</a>, <a>fmtp_exactFramerate</a> - The
--   frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
--   
--   <a>$sel:par:Fmtp'</a>, <a>fmtp_par</a> - The pixel aspect ratio (PAR)
--   of the video.
--   
--   <a>$sel:scanMode:Fmtp'</a>, <a>fmtp_scanMode</a> - The type of
--   compression that was used to smooth the video’s appearance
--   
--   <a>$sel:range:Fmtp'</a>, <a>fmtp_range</a> - The encoding range of the
--   video.
--   
--   <a>$sel:channelOrder:Fmtp'</a>, <a>fmtp_channelOrder</a> - The format
--   of the audio channel.
--   
--   <a>$sel:colorimetry:Fmtp'</a>, <a>fmtp_colorimetry</a> - The format
--   that is used for the representation of color.
newFmtp :: Fmtp

-- | The transfer characteristic system (TCS) that is used in the video.
fmtp_tcs :: Lens' Fmtp (Maybe Tcs)

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
fmtp_exactFramerate :: Lens' Fmtp (Maybe Text)

-- | The pixel aspect ratio (PAR) of the video.
fmtp_par :: Lens' Fmtp (Maybe Text)

-- | The type of compression that was used to smooth the video’s appearance
fmtp_scanMode :: Lens' Fmtp (Maybe ScanMode)

-- | The encoding range of the video.
fmtp_range :: Lens' Fmtp (Maybe Range)

-- | The format of the audio channel.
fmtp_channelOrder :: Lens' Fmtp (Maybe Text)

-- | The format that is used for the representation of color.
fmtp_colorimetry :: Lens' Fmtp (Maybe Colorimetry)

-- | The settings that you want to use to define the media stream.
--   
--   <i>See:</i> <a>newFmtpRequest</a> smart constructor.
data FmtpRequest
FmtpRequest' :: Maybe Tcs -> Maybe Text -> Maybe Text -> Maybe ScanMode -> Maybe Range -> Maybe Text -> Maybe Colorimetry -> FmtpRequest

-- | The transfer characteristic system (TCS) that is used in the video.
[$sel:tcs:FmtpRequest'] :: FmtpRequest -> Maybe Tcs

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
[$sel:exactFramerate:FmtpRequest'] :: FmtpRequest -> Maybe Text

-- | The pixel aspect ratio (PAR) of the video.
[$sel:par:FmtpRequest'] :: FmtpRequest -> Maybe Text

-- | The type of compression that was used to smooth the video’s
--   appearance.
[$sel:scanMode:FmtpRequest'] :: FmtpRequest -> Maybe ScanMode

-- | The encoding range of the video.
[$sel:range:FmtpRequest'] :: FmtpRequest -> Maybe Range

-- | The format of the audio channel.
[$sel:channelOrder:FmtpRequest'] :: FmtpRequest -> Maybe Text

-- | The format that is used for the representation of color.
[$sel:colorimetry:FmtpRequest'] :: FmtpRequest -> Maybe Colorimetry

-- | Create a value of <a>FmtpRequest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tcs:FmtpRequest'</a>, <a>fmtpRequest_tcs</a> - The transfer
--   characteristic system (TCS) that is used in the video.
--   
--   <a>$sel:exactFramerate:FmtpRequest'</a>,
--   <a>fmtpRequest_exactFramerate</a> - The frame rate for the video
--   stream, in frames/second. For example: 60000/1001. If you specify a
--   whole number, MediaConnect uses a ratio of N/1. For example, if you
--   specify 60, MediaConnect uses 60/1 as the exactFramerate.
--   
--   <a>$sel:par:FmtpRequest'</a>, <a>fmtpRequest_par</a> - The pixel
--   aspect ratio (PAR) of the video.
--   
--   <a>$sel:scanMode:FmtpRequest'</a>, <a>fmtpRequest_scanMode</a> - The
--   type of compression that was used to smooth the video’s appearance.
--   
--   <a>$sel:range:FmtpRequest'</a>, <a>fmtpRequest_range</a> - The
--   encoding range of the video.
--   
--   <a>$sel:channelOrder:FmtpRequest'</a>, <a>fmtpRequest_channelOrder</a>
--   - The format of the audio channel.
--   
--   <a>$sel:colorimetry:FmtpRequest'</a>, <a>fmtpRequest_colorimetry</a> -
--   The format that is used for the representation of color.
newFmtpRequest :: FmtpRequest

-- | The transfer characteristic system (TCS) that is used in the video.
fmtpRequest_tcs :: Lens' FmtpRequest (Maybe Tcs)

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
fmtpRequest_exactFramerate :: Lens' FmtpRequest (Maybe Text)

-- | The pixel aspect ratio (PAR) of the video.
fmtpRequest_par :: Lens' FmtpRequest (Maybe Text)

-- | The type of compression that was used to smooth the video’s
--   appearance.
fmtpRequest_scanMode :: Lens' FmtpRequest (Maybe ScanMode)

-- | The encoding range of the video.
fmtpRequest_range :: Lens' FmtpRequest (Maybe Range)

-- | The format of the audio channel.
fmtpRequest_channelOrder :: Lens' FmtpRequest (Maybe Text)

-- | The format that is used for the representation of color.
fmtpRequest_colorimetry :: Lens' FmtpRequest (Maybe Colorimetry)

-- | The entitlements that you want to grant on a flow.
--   
--   <i>See:</i> <a>newGrantEntitlementRequest</a> smart constructor.
data GrantEntitlementRequest
GrantEntitlementRequest' :: Maybe Int -> Maybe Encryption -> Maybe Text -> Maybe EntitlementStatus -> Maybe Text -> [Text] -> GrantEntitlementRequest

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Int

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
[$sel:encryption:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Encryption

-- | The name of the entitlement. This value must be unique within the
--   current flow.
[$sel:name:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Text

-- | An indication of whether the new entitlement should be enabled or
--   disabled as soon as it is created. If you don’t specify the
--   entitlementStatus field in your request, MediaConnect sets it to
--   ENABLED.
[$sel:entitlementStatus:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe EntitlementStatus

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
[$sel:description:GrantEntitlementRequest'] :: GrantEntitlementRequest -> Maybe Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flows using your content as the source.
[$sel:subscribers:GrantEntitlementRequest'] :: GrantEntitlementRequest -> [Text]

-- | Create a value of <a>GrantEntitlementRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_dataTransferSubscriberFeePercent</a> -
--   Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
--   
--   <a>$sel:encryption:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_encryption</a> - The type of encryption
--   that will be used on the output that is associated with this
--   entitlement.
--   
--   <a>$sel:name:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_name</a> - The name of the entitlement.
--   This value must be unique within the current flow.
--   
--   <a>$sel:entitlementStatus:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_entitlementStatus</a> - An indication of
--   whether the new entitlement should be enabled or disabled as soon as
--   it is created. If you don’t specify the entitlementStatus field in
--   your request, MediaConnect sets it to ENABLED.
--   
--   <a>$sel:description:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_description</a> - A description of the
--   entitlement. This description appears only on the AWS Elemental
--   MediaConnect console and will not be seen by the subscriber or end
--   user.
--   
--   <a>$sel:subscribers:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_subscribers</a> - The AWS account IDs that
--   you want to share your content with. The receiving accounts
--   (subscribers) will be allowed to create their own flows using your
--   content as the source.
newGrantEntitlementRequest :: GrantEntitlementRequest

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
grantEntitlementRequest_dataTransferSubscriberFeePercent :: Lens' GrantEntitlementRequest (Maybe Int)

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
grantEntitlementRequest_encryption :: Lens' GrantEntitlementRequest (Maybe Encryption)

-- | The name of the entitlement. This value must be unique within the
--   current flow.
grantEntitlementRequest_name :: Lens' GrantEntitlementRequest (Maybe Text)

-- | An indication of whether the new entitlement should be enabled or
--   disabled as soon as it is created. If you don’t specify the
--   entitlementStatus field in your request, MediaConnect sets it to
--   ENABLED.
grantEntitlementRequest_entitlementStatus :: Lens' GrantEntitlementRequest (Maybe EntitlementStatus)

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
grantEntitlementRequest_description :: Lens' GrantEntitlementRequest (Maybe Text)

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flows using your content as the source.
grantEntitlementRequest_subscribers :: Lens' GrantEntitlementRequest [Text]

-- | The transport parameters that are associated with an incoming media
--   stream.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Int -> Text -> Interface -> InputConfiguration

-- | The port that the flow listens on for an incoming media stream.
[$sel:inputPort:InputConfiguration'] :: InputConfiguration -> Int

-- | The IP address that the flow listens on for incoming content for a
--   media stream.
[$sel:inputIp:InputConfiguration'] :: InputConfiguration -> Text

-- | The VPC interface where the media stream comes in from.
[$sel:interface:InputConfiguration'] :: InputConfiguration -> Interface

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPort:InputConfiguration'</a>,
--   <a>inputConfiguration_inputPort</a> - The port that the flow listens
--   on for an incoming media stream.
--   
--   <a>$sel:inputIp:InputConfiguration'</a>,
--   <a>inputConfiguration_inputIp</a> - The IP address that the flow
--   listens on for incoming content for a media stream.
--   
--   <a>$sel:interface:InputConfiguration'</a>,
--   <a>inputConfiguration_interface</a> - The VPC interface where the
--   media stream comes in from.
newInputConfiguration :: Int -> Text -> Interface -> InputConfiguration

-- | The port that the flow listens on for an incoming media stream.
inputConfiguration_inputPort :: Lens' InputConfiguration Int

-- | The IP address that the flow listens on for incoming content for a
--   media stream.
inputConfiguration_inputIp :: Lens' InputConfiguration Text

-- | The VPC interface where the media stream comes in from.
inputConfiguration_interface :: Lens' InputConfiguration Interface

-- | The transport parameters that you want to associate with an incoming
--   media stream.
--   
--   <i>See:</i> <a>newInputConfigurationRequest</a> smart constructor.
data InputConfigurationRequest
InputConfigurationRequest' :: Int -> InterfaceRequest -> InputConfigurationRequest

-- | The port that you want the flow to listen on for an incoming media
--   stream.
[$sel:inputPort:InputConfigurationRequest'] :: InputConfigurationRequest -> Int

-- | The VPC interface that you want to use for the incoming media stream.
[$sel:interface:InputConfigurationRequest'] :: InputConfigurationRequest -> InterfaceRequest

-- | Create a value of <a>InputConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPort:InputConfigurationRequest'</a>,
--   <a>inputConfigurationRequest_inputPort</a> - The port that you want
--   the flow to listen on for an incoming media stream.
--   
--   <a>$sel:interface:InputConfigurationRequest'</a>,
--   <a>inputConfigurationRequest_interface</a> - The VPC interface that
--   you want to use for the incoming media stream.
newInputConfigurationRequest :: Int -> InterfaceRequest -> InputConfigurationRequest

-- | The port that you want the flow to listen on for an incoming media
--   stream.
inputConfigurationRequest_inputPort :: Lens' InputConfigurationRequest Int

-- | The VPC interface that you want to use for the incoming media stream.
inputConfigurationRequest_interface :: Lens' InputConfigurationRequest InterfaceRequest

-- | The VPC interface that is used for the media stream associated with
--   the source or output.
--   
--   <i>See:</i> <a>newInterface</a> smart constructor.
data Interface
Interface' :: Text -> Interface

-- | The name of the VPC interface.
[$sel:name:Interface'] :: Interface -> Text

-- | Create a value of <a>Interface</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Interface'</a>, <a>interface_name</a> - The name of the
--   VPC interface.
newInterface :: Text -> Interface

-- | The name of the VPC interface.
interface_name :: Lens' Interface Text

-- | The VPC interface that you want to designate where the media stream is
--   coming from or going to.
--   
--   <i>See:</i> <a>newInterfaceRequest</a> smart constructor.
data InterfaceRequest
InterfaceRequest' :: Text -> InterfaceRequest

-- | The name of the VPC interface.
[$sel:name:InterfaceRequest'] :: InterfaceRequest -> Text

-- | Create a value of <a>InterfaceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InterfaceRequest'</a>, <a>interfaceRequest_name</a> - The
--   name of the VPC interface.
newInterfaceRequest :: Text -> InterfaceRequest

-- | The name of the VPC interface.
interfaceRequest_name :: Lens' InterfaceRequest Text

-- | An entitlement that has been granted to you from other AWS accounts.
--   
--   <i>See:</i> <a>newListedEntitlement</a> smart constructor.
data ListedEntitlement
ListedEntitlement' :: Maybe Int -> Text -> Text -> ListedEntitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:ListedEntitlement'] :: ListedEntitlement -> Maybe Int

-- | The ARN of the entitlement.
[$sel:entitlementArn:ListedEntitlement'] :: ListedEntitlement -> Text

-- | The name of the entitlement.
[$sel:entitlementName:ListedEntitlement'] :: ListedEntitlement -> Text

-- | Create a value of <a>ListedEntitlement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:ListedEntitlement'</a>,
--   <a>listedEntitlement_dataTransferSubscriberFeePercent</a> - Percentage
--   from 0-100 of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:entitlementArn:ListedEntitlement'</a>,
--   <a>listedEntitlement_entitlementArn</a> - The ARN of the entitlement.
--   
--   <a>$sel:entitlementName:ListedEntitlement'</a>,
--   <a>listedEntitlement_entitlementName</a> - The name of the
--   entitlement.
newListedEntitlement :: Text -> Text -> ListedEntitlement

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
listedEntitlement_dataTransferSubscriberFeePercent :: Lens' ListedEntitlement (Maybe Int)

-- | The ARN of the entitlement.
listedEntitlement_entitlementArn :: Lens' ListedEntitlement Text

-- | The name of the entitlement.
listedEntitlement_entitlementName :: Lens' ListedEntitlement Text

-- | Provides a summary of a flow, including its ARN, Availability Zone,
--   and source type.
--   
--   <i>See:</i> <a>newListedFlow</a> smart constructor.
data ListedFlow
ListedFlow' :: Status -> Text -> SourceType -> Text -> Text -> Text -> ListedFlow

-- | The current status of the flow.
[$sel:status:ListedFlow'] :: ListedFlow -> Status

-- | A description of the flow.
[$sel:description:ListedFlow'] :: ListedFlow -> Text

-- | The type of source. This value is either owned (originated somewhere
--   other than an AWS Elemental MediaConnect flow owned by another AWS
--   account) or entitled (originated at an AWS Elemental MediaConnect flow
--   owned by another AWS account).
[$sel:sourceType:ListedFlow'] :: ListedFlow -> SourceType

-- | The Availability Zone that the flow was created in.
[$sel:availabilityZone:ListedFlow'] :: ListedFlow -> Text

-- | The ARN of the flow.
[$sel:flowArn:ListedFlow'] :: ListedFlow -> Text

-- | The name of the flow.
[$sel:name:ListedFlow'] :: ListedFlow -> Text

-- | Create a value of <a>ListedFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListedFlow'</a>, <a>listedFlow_status</a> - The current
--   status of the flow.
--   
--   <a>$sel:description:ListedFlow'</a>, <a>listedFlow_description</a> - A
--   description of the flow.
--   
--   <a>$sel:sourceType:ListedFlow'</a>, <a>listedFlow_sourceType</a> - The
--   type of source. This value is either owned (originated somewhere other
--   than an AWS Elemental MediaConnect flow owned by another AWS account)
--   or entitled (originated at an AWS Elemental MediaConnect flow owned by
--   another AWS account).
--   
--   <a>$sel:availabilityZone:ListedFlow'</a>,
--   <a>listedFlow_availabilityZone</a> - The Availability Zone that the
--   flow was created in.
--   
--   <a>$sel:flowArn:ListedFlow'</a>, <a>listedFlow_flowArn</a> - The ARN
--   of the flow.
--   
--   <a>$sel:name:ListedFlow'</a>, <a>listedFlow_name</a> - The name of the
--   flow.
newListedFlow :: Status -> Text -> SourceType -> Text -> Text -> Text -> ListedFlow

-- | The current status of the flow.
listedFlow_status :: Lens' ListedFlow Status

-- | A description of the flow.
listedFlow_description :: Lens' ListedFlow Text

-- | The type of source. This value is either owned (originated somewhere
--   other than an AWS Elemental MediaConnect flow owned by another AWS
--   account) or entitled (originated at an AWS Elemental MediaConnect flow
--   owned by another AWS account).
listedFlow_sourceType :: Lens' ListedFlow SourceType

-- | The Availability Zone that the flow was created in.
listedFlow_availabilityZone :: Lens' ListedFlow Text

-- | The ARN of the flow.
listedFlow_flowArn :: Lens' ListedFlow Text

-- | The name of the flow.
listedFlow_name :: Lens' ListedFlow Text

-- | A single track or stream of media that contains video, audio, or
--   ancillary data. After you add a media stream to a flow, you can
--   associate it with sources and outputs on that flow, as long as they
--   use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or
--   output can consist of one or many media streams.
--   
--   <i>See:</i> <a>newMediaStream</a> smart constructor.
data MediaStream
MediaStream' :: Maybe Text -> Maybe MediaStreamAttributes -> Maybe Int -> Maybe Text -> MediaStreamType -> Int -> Text -> Int -> MediaStream

-- | The resolution of the video.
[$sel:videoFormat:MediaStream'] :: MediaStream -> Maybe Text

-- | Attributes that are related to the media stream.
[$sel:attributes:MediaStream'] :: MediaStream -> Maybe MediaStreamAttributes

-- | The sample rate for the stream. This value is measured in Hz.
[$sel:clockRate:MediaStream'] :: MediaStream -> Maybe Int

-- | A description that can help you quickly identify what your media
--   stream is used for.
[$sel:description:MediaStream'] :: MediaStream -> Maybe Text

-- | The type of media stream.
[$sel:mediaStreamType:MediaStream'] :: MediaStream -> MediaStreamType

-- | A unique identifier for the media stream.
[$sel:mediaStreamId:MediaStream'] :: MediaStream -> Int

-- | A name that helps you distinguish one media stream from another.
[$sel:mediaStreamName:MediaStream'] :: MediaStream -> Text

-- | The format type number (sometimes referred to as RTP payload type) of
--   the media stream. MediaConnect assigns this value to the media stream.
--   For ST 2110 JPEG XS outputs, you need to provide this value to the
--   receiver.
[$sel:fmt:MediaStream'] :: MediaStream -> Int

-- | Create a value of <a>MediaStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:MediaStream'</a>, <a>mediaStream_videoFormat</a> -
--   The resolution of the video.
--   
--   <a>$sel:attributes:MediaStream'</a>, <a>mediaStream_attributes</a> -
--   Attributes that are related to the media stream.
--   
--   <a>$sel:clockRate:MediaStream'</a>, <a>mediaStream_clockRate</a> - The
--   sample rate for the stream. This value is measured in Hz.
--   
--   <a>$sel:description:MediaStream'</a>, <a>mediaStream_description</a> -
--   A description that can help you quickly identify what your media
--   stream is used for.
--   
--   <a>$sel:mediaStreamType:MediaStream'</a>,
--   <a>mediaStream_mediaStreamType</a> - The type of media stream.
--   
--   <a>$sel:mediaStreamId:MediaStream'</a>,
--   <a>mediaStream_mediaStreamId</a> - A unique identifier for the media
--   stream.
--   
--   <a>$sel:mediaStreamName:MediaStream'</a>,
--   <a>mediaStream_mediaStreamName</a> - A name that helps you distinguish
--   one media stream from another.
--   
--   <a>$sel:fmt:MediaStream'</a>, <a>mediaStream_fmt</a> - The format type
--   number (sometimes referred to as RTP payload type) of the media
--   stream. MediaConnect assigns this value to the media stream. For ST
--   2110 JPEG XS outputs, you need to provide this value to the receiver.
newMediaStream :: MediaStreamType -> Int -> Text -> Int -> MediaStream

-- | The resolution of the video.
mediaStream_videoFormat :: Lens' MediaStream (Maybe Text)

-- | Attributes that are related to the media stream.
mediaStream_attributes :: Lens' MediaStream (Maybe MediaStreamAttributes)

-- | The sample rate for the stream. This value is measured in Hz.
mediaStream_clockRate :: Lens' MediaStream (Maybe Int)

-- | A description that can help you quickly identify what your media
--   stream is used for.
mediaStream_description :: Lens' MediaStream (Maybe Text)

-- | The type of media stream.
mediaStream_mediaStreamType :: Lens' MediaStream MediaStreamType

-- | A unique identifier for the media stream.
mediaStream_mediaStreamId :: Lens' MediaStream Int

-- | A name that helps you distinguish one media stream from another.
mediaStream_mediaStreamName :: Lens' MediaStream Text

-- | The format type number (sometimes referred to as RTP payload type) of
--   the media stream. MediaConnect assigns this value to the media stream.
--   For ST 2110 JPEG XS outputs, you need to provide this value to the
--   receiver.
mediaStream_fmt :: Lens' MediaStream Int

-- | Attributes that are related to the media stream.
--   
--   <i>See:</i> <a>newMediaStreamAttributes</a> smart constructor.
data MediaStreamAttributes
MediaStreamAttributes' :: Maybe Text -> Fmtp -> MediaStreamAttributes

-- | The audio language, in a format that is recognized by the receiver.
[$sel:lang:MediaStreamAttributes'] :: MediaStreamAttributes -> Maybe Text

-- | A set of parameters that define the media stream.
[$sel:fmtp:MediaStreamAttributes'] :: MediaStreamAttributes -> Fmtp

-- | Create a value of <a>MediaStreamAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lang:MediaStreamAttributes'</a>,
--   <a>mediaStreamAttributes_lang</a> - The audio language, in a format
--   that is recognized by the receiver.
--   
--   <a>$sel:fmtp:MediaStreamAttributes'</a>,
--   <a>mediaStreamAttributes_fmtp</a> - A set of parameters that define
--   the media stream.
newMediaStreamAttributes :: Fmtp -> MediaStreamAttributes

-- | The audio language, in a format that is recognized by the receiver.
mediaStreamAttributes_lang :: Lens' MediaStreamAttributes (Maybe Text)

-- | A set of parameters that define the media stream.
mediaStreamAttributes_fmtp :: Lens' MediaStreamAttributes Fmtp

-- | Attributes that are related to the media stream.
--   
--   <i>See:</i> <a>newMediaStreamAttributesRequest</a> smart constructor.
data MediaStreamAttributesRequest
MediaStreamAttributesRequest' :: Maybe Text -> Maybe FmtpRequest -> MediaStreamAttributesRequest

-- | The audio language, in a format that is recognized by the receiver.
[$sel:lang:MediaStreamAttributesRequest'] :: MediaStreamAttributesRequest -> Maybe Text

-- | The settings that you want to use to define the media stream.
[$sel:fmtp:MediaStreamAttributesRequest'] :: MediaStreamAttributesRequest -> Maybe FmtpRequest

-- | Create a value of <a>MediaStreamAttributesRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lang:MediaStreamAttributesRequest'</a>,
--   <a>mediaStreamAttributesRequest_lang</a> - The audio language, in a
--   format that is recognized by the receiver.
--   
--   <a>$sel:fmtp:MediaStreamAttributesRequest'</a>,
--   <a>mediaStreamAttributesRequest_fmtp</a> - The settings that you want
--   to use to define the media stream.
newMediaStreamAttributesRequest :: MediaStreamAttributesRequest

-- | The audio language, in a format that is recognized by the receiver.
mediaStreamAttributesRequest_lang :: Lens' MediaStreamAttributesRequest (Maybe Text)

-- | The settings that you want to use to define the media stream.
mediaStreamAttributesRequest_fmtp :: Lens' MediaStreamAttributesRequest (Maybe FmtpRequest)

-- | The media stream that is associated with the output, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamOutputConfiguration</a> smart
--   constructor.
data MediaStreamOutputConfiguration
MediaStreamOutputConfiguration' :: Maybe [DestinationConfiguration] -> Maybe EncodingParameters -> Text -> EncodingName -> MediaStreamOutputConfiguration

-- | The transport parameters that are associated with each outbound media
--   stream.
[$sel:destinationConfigurations:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> Maybe [DestinationConfiguration]

-- | Encoding parameters
[$sel:encodingParameters:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> Maybe EncodingParameters

-- | The name of the media stream.
[$sel:mediaStreamName:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamOutputConfiguration'] :: MediaStreamOutputConfiguration -> EncodingName

-- | Create a value of <a>MediaStreamOutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationConfigurations:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_destinationConfigurations</a> - The
--   transport parameters that are associated with each outbound media
--   stream.
--   
--   <a>$sel:encodingParameters:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_encodingParameters</a> - Encoding
--   parameters
--   
--   <a>$sel:mediaStreamName:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_mediaStreamName</a> - The name of
--   the media stream.
--   
--   <a>$sel:encodingName:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_encodingName</a> - The format that
--   was used to encode the data. For ancillary data streams, set the
--   encoding name to smpte291. For audio streams, set the encoding name to
--   pcm. For video, 2110 streams, set the encoding name to raw. For video,
--   JPEG XS streams, set the encoding name to jxsv.
newMediaStreamOutputConfiguration :: Text -> EncodingName -> MediaStreamOutputConfiguration

-- | The transport parameters that are associated with each outbound media
--   stream.
mediaStreamOutputConfiguration_destinationConfigurations :: Lens' MediaStreamOutputConfiguration (Maybe [DestinationConfiguration])

-- | Encoding parameters
mediaStreamOutputConfiguration_encodingParameters :: Lens' MediaStreamOutputConfiguration (Maybe EncodingParameters)

-- | The name of the media stream.
mediaStreamOutputConfiguration_mediaStreamName :: Lens' MediaStreamOutputConfiguration Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamOutputConfiguration_encodingName :: Lens' MediaStreamOutputConfiguration EncodingName

-- | The media stream that you want to associate with the output, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamOutputConfigurationRequest</a> smart
--   constructor.
data MediaStreamOutputConfigurationRequest
MediaStreamOutputConfigurationRequest' :: Maybe [DestinationConfigurationRequest] -> Maybe EncodingParametersRequest -> Text -> EncodingName -> MediaStreamOutputConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
[$sel:destinationConfigurations:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> Maybe [DestinationConfigurationRequest]

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
[$sel:encodingParameters:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> Maybe EncodingParametersRequest

-- | The name of the media stream that is associated with the output.
[$sel:mediaStreamName:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> Text

-- | The format that will be used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamOutputConfigurationRequest'] :: MediaStreamOutputConfigurationRequest -> EncodingName

-- | Create a value of <a>MediaStreamOutputConfigurationRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:destinationConfigurations:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_destinationConfigurations</a>
--   - The transport parameters that you want to associate with the media
--   stream.
--   
--   <a>$sel:encodingParameters:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_encodingParameters</a> - A
--   collection of parameters that determine how MediaConnect will convert
--   the content. These fields only apply to outputs on flows that have a
--   CDI source.
--   
--   <a>$sel:mediaStreamName:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_mediaStreamName</a> - The
--   name of the media stream that is associated with the output.
--   
--   <a>$sel:encodingName:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_encodingName</a> - The format
--   that will be used to encode the data. For ancillary data streams, set
--   the encoding name to smpte291. For audio streams, set the encoding
--   name to pcm. For video, 2110 streams, set the encoding name to raw.
--   For video, JPEG XS streams, set the encoding name to jxsv.
newMediaStreamOutputConfigurationRequest :: Text -> EncodingName -> MediaStreamOutputConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
mediaStreamOutputConfigurationRequest_destinationConfigurations :: Lens' MediaStreamOutputConfigurationRequest (Maybe [DestinationConfigurationRequest])

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
mediaStreamOutputConfigurationRequest_encodingParameters :: Lens' MediaStreamOutputConfigurationRequest (Maybe EncodingParametersRequest)

-- | The name of the media stream that is associated with the output.
mediaStreamOutputConfigurationRequest_mediaStreamName :: Lens' MediaStreamOutputConfigurationRequest Text

-- | The format that will be used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamOutputConfigurationRequest_encodingName :: Lens' MediaStreamOutputConfigurationRequest EncodingName

-- | The media stream that is associated with the source, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamSourceConfiguration</a> smart
--   constructor.
data MediaStreamSourceConfiguration
MediaStreamSourceConfiguration' :: Maybe [InputConfiguration] -> Text -> EncodingName -> MediaStreamSourceConfiguration

-- | The transport parameters that are associated with an incoming media
--   stream.
[$sel:inputConfigurations:MediaStreamSourceConfiguration'] :: MediaStreamSourceConfiguration -> Maybe [InputConfiguration]

-- | The name of the media stream.
[$sel:mediaStreamName:MediaStreamSourceConfiguration'] :: MediaStreamSourceConfiguration -> Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamSourceConfiguration'] :: MediaStreamSourceConfiguration -> EncodingName

-- | Create a value of <a>MediaStreamSourceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputConfigurations:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_inputConfigurations</a> - The
--   transport parameters that are associated with an incoming media
--   stream.
--   
--   <a>$sel:mediaStreamName:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_mediaStreamName</a> - The name of
--   the media stream.
--   
--   <a>$sel:encodingName:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_encodingName</a> - The format that
--   was used to encode the data. For ancillary data streams, set the
--   encoding name to smpte291. For audio streams, set the encoding name to
--   pcm. For video, 2110 streams, set the encoding name to raw. For video,
--   JPEG XS streams, set the encoding name to jxsv.
newMediaStreamSourceConfiguration :: Text -> EncodingName -> MediaStreamSourceConfiguration

-- | The transport parameters that are associated with an incoming media
--   stream.
mediaStreamSourceConfiguration_inputConfigurations :: Lens' MediaStreamSourceConfiguration (Maybe [InputConfiguration])

-- | The name of the media stream.
mediaStreamSourceConfiguration_mediaStreamName :: Lens' MediaStreamSourceConfiguration Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamSourceConfiguration_encodingName :: Lens' MediaStreamSourceConfiguration EncodingName

-- | The definition of a media stream that you want to associate with the
--   source.
--   
--   <i>See:</i> <a>newMediaStreamSourceConfigurationRequest</a> smart
--   constructor.
data MediaStreamSourceConfigurationRequest
MediaStreamSourceConfigurationRequest' :: Maybe [InputConfigurationRequest] -> Text -> EncodingName -> MediaStreamSourceConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
[$sel:inputConfigurations:MediaStreamSourceConfigurationRequest'] :: MediaStreamSourceConfigurationRequest -> Maybe [InputConfigurationRequest]

-- | The name of the media stream.
[$sel:mediaStreamName:MediaStreamSourceConfigurationRequest'] :: MediaStreamSourceConfigurationRequest -> Text

-- | The format you want to use to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
[$sel:encodingName:MediaStreamSourceConfigurationRequest'] :: MediaStreamSourceConfigurationRequest -> EncodingName

-- | Create a value of <a>MediaStreamSourceConfigurationRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputConfigurations:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_inputConfigurations</a> - The
--   transport parameters that you want to associate with the media stream.
--   
--   <a>$sel:mediaStreamName:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_mediaStreamName</a> - The
--   name of the media stream.
--   
--   <a>$sel:encodingName:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_encodingName</a> - The format
--   you want to use to encode the data. For ancillary data streams, set
--   the encoding name to smpte291. For audio streams, set the encoding
--   name to pcm. For video, 2110 streams, set the encoding name to raw.
--   For video, JPEG XS streams, set the encoding name to jxsv.
newMediaStreamSourceConfigurationRequest :: Text -> EncodingName -> MediaStreamSourceConfigurationRequest

-- | The transport parameters that you want to associate with the media
--   stream.
mediaStreamSourceConfigurationRequest_inputConfigurations :: Lens' MediaStreamSourceConfigurationRequest (Maybe [InputConfigurationRequest])

-- | The name of the media stream.
mediaStreamSourceConfigurationRequest_mediaStreamName :: Lens' MediaStreamSourceConfigurationRequest Text

-- | The format you want to use to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamSourceConfigurationRequest_encodingName :: Lens' MediaStreamSourceConfigurationRequest EncodingName

-- | Messages that provide the state of the flow.
--   
--   <i>See:</i> <a>newMessages</a> smart constructor.
data Messages
Messages' :: [Text] -> Messages

-- | A list of errors that might have been generated from processes on this
--   flow.
[$sel:errors:Messages'] :: Messages -> [Text]

-- | Create a value of <a>Messages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:Messages'</a>, <a>messages_errors</a> - A list of
--   errors that might have been generated from processes on this flow.
newMessages :: Messages

-- | A list of errors that might have been generated from processes on this
--   flow.
messages_errors :: Lens' Messages [Text]

-- | A savings plan that reserves a certain amount of outbound bandwidth
--   usage at a discounted rate each month over a period of time.
--   
--   <i>See:</i> <a>newOffering</a> smart constructor.
data Offering
Offering' :: Text -> Text -> Text -> DurationUnits -> Int -> Text -> ResourceSpecification -> PriceUnits -> Offering

-- | The type of currency that is used for billing. The currencyCode used
--   for all reservations is US dollars.
[$sel:currencyCode:Offering'] :: Offering -> Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
[$sel:offeringArn:Offering'] :: Offering -> Text

-- | A description of the offering.
[$sel:offeringDescription:Offering'] :: Offering -> Text

-- | The unit of measurement for the duration of the offering.
[$sel:durationUnits:Offering'] :: Offering -> DurationUnits

-- | The length of time that your reservation would be active.
[$sel:duration:Offering'] :: Offering -> Int

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
[$sel:pricePerUnit:Offering'] :: Offering -> Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering.
[$sel:resourceSpecification:Offering'] :: Offering -> ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
[$sel:priceUnits:Offering'] :: Offering -> PriceUnits

-- | Create a value of <a>Offering</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currencyCode:Offering'</a>, <a>offering_currencyCode</a> - The
--   type of currency that is used for billing. The currencyCode used for
--   all reservations is US dollars.
--   
--   <a>$sel:offeringArn:Offering'</a>, <a>offering_offeringArn</a> - The
--   Amazon Resource Name (ARN) that MediaConnect assigns to the offering.
--   
--   <a>$sel:offeringDescription:Offering'</a>,
--   <a>offering_offeringDescription</a> - A description of the offering.
--   
--   <a>$sel:durationUnits:Offering'</a>, <a>offering_durationUnits</a> -
--   The unit of measurement for the duration of the offering.
--   
--   <a>$sel:duration:Offering'</a>, <a>offering_duration</a> - The length
--   of time that your reservation would be active.
--   
--   <a>$sel:pricePerUnit:Offering'</a>, <a>offering_pricePerUnit</a> - The
--   cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
--   
--   <a>$sel:resourceSpecification:Offering'</a>,
--   <a>offering_resourceSpecification</a> - A definition of the amount of
--   outbound bandwidth that you would be reserving if you purchase the
--   offering.
--   
--   <a>$sel:priceUnits:Offering'</a>, <a>offering_priceUnits</a> - The
--   unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
newOffering :: Text -> Text -> Text -> DurationUnits -> Int -> Text -> ResourceSpecification -> PriceUnits -> Offering

-- | The type of currency that is used for billing. The currencyCode used
--   for all reservations is US dollars.
offering_currencyCode :: Lens' Offering Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
offering_offeringArn :: Lens' Offering Text

-- | A description of the offering.
offering_offeringDescription :: Lens' Offering Text

-- | The unit of measurement for the duration of the offering.
offering_durationUnits :: Lens' Offering DurationUnits

-- | The length of time that your reservation would be active.
offering_duration :: Lens' Offering Int

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
offering_pricePerUnit :: Lens' Offering Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering.
offering_resourceSpecification :: Lens' Offering ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
offering_priceUnits :: Lens' Offering PriceUnits

-- | The settings for an output.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [MediaStreamOutputConfiguration] -> Maybe Text -> Maybe Encryption -> Maybe Text -> Maybe Transport -> Maybe Text -> Maybe Int -> Maybe VpcInterfaceAttachment -> Text -> Text -> Output

-- | The ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
[$sel:entitlementArn:Output'] :: Output -> Maybe Text

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:Output'] :: Output -> Maybe Int

-- | The address where you want to send the output.
[$sel:destination:Output'] :: Output -> Maybe Text

-- | The configuration for each media stream that is associated with the
--   output.
[$sel:mediaStreamOutputConfigurations:Output'] :: Output -> Maybe [MediaStreamOutputConfiguration]

-- | The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
[$sel:mediaLiveInputArn:Output'] :: Output -> Maybe Text

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
[$sel:encryption:Output'] :: Output -> Maybe Encryption

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
[$sel:listenerAddress:Output'] :: Output -> Maybe Text

-- | Attributes related to the transport stream that are used in the
--   output.
[$sel:transport:Output'] :: Output -> Maybe Transport

-- | A description of the output.
[$sel:description:Output'] :: Output -> Maybe Text

-- | The port to use when content is distributed to this output.
[$sel:port:Output'] :: Output -> Maybe Int

-- | The name of the VPC interface attachment to use for this output.
[$sel:vpcInterfaceAttachment:Output'] :: Output -> Maybe VpcInterfaceAttachment

-- | The ARN of the output.
[$sel:outputArn:Output'] :: Output -> Text

-- | The name of the output. This value must be unique within the current
--   flow.
[$sel:name:Output'] :: Output -> Text

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:Output'</a>, <a>output_entitlementArn</a> - The
--   ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Output'</a>,
--   <a>output_dataTransferSubscriberFeePercent</a> - Percentage from 0-100
--   of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:destination:Output'</a>, <a>output_destination</a> - The
--   address where you want to send the output.
--   
--   <a>$sel:mediaStreamOutputConfigurations:Output'</a>,
--   <a>output_mediaStreamOutputConfigurations</a> - The configuration for
--   each media stream that is associated with the output.
--   
--   <a>$sel:mediaLiveInputArn:Output'</a>, <a>output_mediaLiveInputArn</a>
--   - The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
--   
--   <a>$sel:encryption:Output'</a>, <a>output_encryption</a> - The type of
--   key used for the encryption. If no keyType is provided, the service
--   will use the default setting (static-key).
--   
--   <a>$sel:listenerAddress:Output'</a>, <a>output_listenerAddress</a> -
--   The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
--   
--   <a>$sel:transport:Output'</a>, <a>output_transport</a> - Attributes
--   related to the transport stream that are used in the output.
--   
--   <a>$sel:description:Output'</a>, <a>output_description</a> - A
--   description of the output.
--   
--   <a>$sel:port:Output'</a>, <a>output_port</a> - The port to use when
--   content is distributed to this output.
--   
--   <a>$sel:vpcInterfaceAttachment:Output'</a>,
--   <a>output_vpcInterfaceAttachment</a> - The name of the VPC interface
--   attachment to use for this output.
--   
--   <a>$sel:outputArn:Output'</a>, <a>output_outputArn</a> - The ARN of
--   the output.
--   
--   <a>$sel:name:Output'</a>, <a>output_name</a> - The name of the output.
--   This value must be unique within the current flow.
newOutput :: Text -> Text -> Output

-- | The ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
output_entitlementArn :: Lens' Output (Maybe Text)

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
output_dataTransferSubscriberFeePercent :: Lens' Output (Maybe Int)

-- | The address where you want to send the output.
output_destination :: Lens' Output (Maybe Text)

-- | The configuration for each media stream that is associated with the
--   output.
output_mediaStreamOutputConfigurations :: Lens' Output (Maybe [MediaStreamOutputConfiguration])

-- | The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
output_mediaLiveInputArn :: Lens' Output (Maybe Text)

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
output_encryption :: Lens' Output (Maybe Encryption)

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
output_listenerAddress :: Lens' Output (Maybe Text)

-- | Attributes related to the transport stream that are used in the
--   output.
output_transport :: Lens' Output (Maybe Transport)

-- | A description of the output.
output_description :: Lens' Output (Maybe Text)

-- | The port to use when content is distributed to this output.
output_port :: Lens' Output (Maybe Int)

-- | The name of the VPC interface attachment to use for this output.
output_vpcInterfaceAttachment :: Lens' Output (Maybe VpcInterfaceAttachment)

-- | The ARN of the output.
output_outputArn :: Lens' Output Text

-- | The name of the output. This value must be unique within the current
--   flow.
output_name :: Lens' Output Text

-- | A pricing agreement for a discounted rate for a specific outbound
--   bandwidth that your MediaConnect account will use each month over a
--   specific time period. The discounted rate in the reservation applies
--   to outbound bandwidth for all flows from your account until your
--   account reaches the amount of bandwidth in your reservation. If you
--   use more outbound bandwidth than the agreed upon amount in a single
--   month, the overage is charged at the on-demand rate.
--   
--   <i>See:</i> <a>newReservation</a> smart constructor.
data Reservation
Reservation' :: Text -> ReservationState -> Text -> Text -> Text -> Text -> Text -> Text -> Int -> DurationUnits -> Text -> ResourceSpecification -> PriceUnits -> Reservation

-- | The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
[$sel:currencyCode:Reservation'] :: Reservation -> Text

-- | The status of your reservation.
[$sel:reservationState:Reservation'] :: Reservation -> ReservationState

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
[$sel:offeringArn:Reservation'] :: Reservation -> Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   reservation when you purchase an offering.
[$sel:reservationArn:Reservation'] :: Reservation -> Text

-- | The day and time that the reservation becomes active. You set this
--   value when you purchase the offering.
[$sel:start:Reservation'] :: Reservation -> Text

-- | A description of the offering. MediaConnect defines this value in the
--   offering.
[$sel:offeringDescription:Reservation'] :: Reservation -> Text

-- | The name that you assigned to the reservation when you purchased the
--   offering.
[$sel:reservationName:Reservation'] :: Reservation -> Text

-- | The day and time that this reservation expires. This value is
--   calculated based on the start date and time that you set and the
--   offering's duration.
[$sel:end:Reservation'] :: Reservation -> Text

-- | The length of time that this reservation is active. MediaConnect
--   defines this value in the offering.
[$sel:duration:Reservation'] :: Reservation -> Int

-- | The unit of measurement for the duration of the reservation.
--   MediaConnect defines this value in the offering.
[$sel:durationUnits:Reservation'] :: Reservation -> DurationUnits

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate. MediaConnect defines this value in the offering.
[$sel:pricePerUnit:Reservation'] :: Reservation -> Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering. MediaConnect defines the
--   values that make up the resourceSpecification in the offering.
[$sel:resourceSpecification:Reservation'] :: Reservation -> ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
[$sel:priceUnits:Reservation'] :: Reservation -> PriceUnits

-- | Create a value of <a>Reservation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currencyCode:Reservation'</a>, <a>reservation_currencyCode</a>
--   - The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
--   
--   <a>$sel:reservationState:Reservation'</a>,
--   <a>reservation_reservationState</a> - The status of your reservation.
--   
--   <a>$sel:offeringArn:Reservation'</a>, <a>reservation_offeringArn</a> -
--   The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
--   
--   <a>$sel:reservationArn:Reservation'</a>,
--   <a>reservation_reservationArn</a> - The Amazon Resource Name (ARN)
--   that MediaConnect assigns to the reservation when you purchase an
--   offering.
--   
--   <a>$sel:start:Reservation'</a>, <a>reservation_start</a> - The day and
--   time that the reservation becomes active. You set this value when you
--   purchase the offering.
--   
--   <a>$sel:offeringDescription:Reservation'</a>,
--   <a>reservation_offeringDescription</a> - A description of the
--   offering. MediaConnect defines this value in the offering.
--   
--   <a>$sel:reservationName:Reservation'</a>,
--   <a>reservation_reservationName</a> - The name that you assigned to the
--   reservation when you purchased the offering.
--   
--   <a>$sel:end:Reservation'</a>, <a>reservation_end</a> - The day and
--   time that this reservation expires. This value is calculated based on
--   the start date and time that you set and the offering's duration.
--   
--   <a>$sel:duration:Reservation'</a>, <a>reservation_duration</a> - The
--   length of time that this reservation is active. MediaConnect defines
--   this value in the offering.
--   
--   <a>$sel:durationUnits:Reservation'</a>,
--   <a>reservation_durationUnits</a> - The unit of measurement for the
--   duration of the reservation. MediaConnect defines this value in the
--   offering.
--   
--   <a>$sel:pricePerUnit:Reservation'</a>, <a>reservation_pricePerUnit</a>
--   - The cost of a single unit. This value, in combination with
--   priceUnits, makes up the rate. MediaConnect defines this value in the
--   offering.
--   
--   <a>$sel:resourceSpecification:Reservation'</a>,
--   <a>reservation_resourceSpecification</a> - A definition of the amount
--   of outbound bandwidth that you would be reserving if you purchase the
--   offering. MediaConnect defines the values that make up the
--   resourceSpecification in the offering.
--   
--   <a>$sel:priceUnits:Reservation'</a>, <a>reservation_priceUnits</a> -
--   The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
newReservation :: Text -> ReservationState -> Text -> Text -> Text -> Text -> Text -> Text -> Int -> DurationUnits -> Text -> ResourceSpecification -> PriceUnits -> Reservation

-- | The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
reservation_currencyCode :: Lens' Reservation Text

-- | The status of your reservation.
reservation_reservationState :: Lens' Reservation ReservationState

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
reservation_offeringArn :: Lens' Reservation Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   reservation when you purchase an offering.
reservation_reservationArn :: Lens' Reservation Text

-- | The day and time that the reservation becomes active. You set this
--   value when you purchase the offering.
reservation_start :: Lens' Reservation Text

-- | A description of the offering. MediaConnect defines this value in the
--   offering.
reservation_offeringDescription :: Lens' Reservation Text

-- | The name that you assigned to the reservation when you purchased the
--   offering.
reservation_reservationName :: Lens' Reservation Text

-- | The day and time that this reservation expires. This value is
--   calculated based on the start date and time that you set and the
--   offering's duration.
reservation_end :: Lens' Reservation Text

-- | The length of time that this reservation is active. MediaConnect
--   defines this value in the offering.
reservation_duration :: Lens' Reservation Int

-- | The unit of measurement for the duration of the reservation.
--   MediaConnect defines this value in the offering.
reservation_durationUnits :: Lens' Reservation DurationUnits

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate. MediaConnect defines this value in the offering.
reservation_pricePerUnit :: Lens' Reservation Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering. MediaConnect defines the
--   values that make up the resourceSpecification in the offering.
reservation_resourceSpecification :: Lens' Reservation ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
reservation_priceUnits :: Lens' Reservation PriceUnits

-- | A definition of what is being billed for, including the type and
--   amount.
--   
--   <i>See:</i> <a>newResourceSpecification</a> smart constructor.
data ResourceSpecification
ResourceSpecification' :: Maybe Int -> ResourceType -> ResourceSpecification

-- | The amount of outbound bandwidth that is discounted in the offering.
[$sel:reservedBitrate:ResourceSpecification'] :: ResourceSpecification -> Maybe Int

-- | The type of resource and the unit that is being billed for.
[$sel:resourceType:ResourceSpecification'] :: ResourceSpecification -> ResourceType

-- | Create a value of <a>ResourceSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedBitrate:ResourceSpecification'</a>,
--   <a>resourceSpecification_reservedBitrate</a> - The amount of outbound
--   bandwidth that is discounted in the offering.
--   
--   <a>$sel:resourceType:ResourceSpecification'</a>,
--   <a>resourceSpecification_resourceType</a> - The type of resource and
--   the unit that is being billed for.
newResourceSpecification :: ResourceType -> ResourceSpecification

-- | The amount of outbound bandwidth that is discounted in the offering.
resourceSpecification_reservedBitrate :: Lens' ResourceSpecification (Maybe Int)

-- | The type of resource and the unit that is being billed for.
resourceSpecification_resourceType :: Lens' ResourceSpecification ResourceType

-- | The settings for the source of the flow.
--   
--   <i>See:</i> <a>newSetSourceRequest</a> smart constructor.
data SetSourceRequest
SetSourceRequest' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Encryption -> Maybe Int -> Maybe Protocol -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe [MediaStreamSourceConfigurationRequest] -> Maybe Text -> Maybe Int -> Maybe Text -> SetSourceRequest

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
[$sel:entitlementArn:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
[$sel:maxLatency:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The name of the VPC interface to use for this source.
[$sel:vpcInterfaceName:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The type of encryption that is used on the content ingested from this
--   source.
[$sel:decryption:SetSourceRequest'] :: SetSourceRequest -> Maybe Encryption

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
[$sel:maxSyncBuffer:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The protocol that is used by the source.
[$sel:protocol:SetSourceRequest'] :: SetSourceRequest -> Maybe Protocol

-- | The name of the source.
[$sel:name:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The port that the flow will be listening on for incoming content.
[$sel:ingestPort:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
[$sel:description:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
[$sel:mediaStreamSourceConfigurations:SetSourceRequest'] :: SetSourceRequest -> Maybe [MediaStreamSourceConfigurationRequest]

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:whitelistCidr:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
[$sel:maxBitrate:SetSourceRequest'] :: SetSourceRequest -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:SetSourceRequest'] :: SetSourceRequest -> Maybe Text

-- | Create a value of <a>SetSourceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:SetSourceRequest'</a>,
--   <a>setSourceRequest_entitlementArn</a> - The ARN of the entitlement
--   that allows you to subscribe to this flow. The entitlement is set by
--   the flow originator, and the ARN is generated as part of the
--   originator's flow.
--   
--   <a>$sel:maxLatency:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxLatency</a> - The maximum latency in
--   milliseconds. This parameter applies only to RIST-based and Zixi-based
--   streams.
--   
--   <a>$sel:vpcInterfaceName:SetSourceRequest'</a>,
--   <a>setSourceRequest_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this source.
--   
--   <a>$sel:decryption:SetSourceRequest'</a>,
--   <a>setSourceRequest_decryption</a> - The type of encryption that is
--   used on the content ingested from this source.
--   
--   <a>$sel:maxSyncBuffer:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxSyncBuffer</a> - The size of the buffer (in
--   milliseconds) to use to sync incoming source data.
--   
--   <a>$sel:protocol:SetSourceRequest'</a>,
--   <a>setSourceRequest_protocol</a> - The protocol that is used by the
--   source.
--   
--   <a>$sel:name:SetSourceRequest'</a>, <a>setSourceRequest_name</a> - The
--   name of the source.
--   
--   <a>$sel:minLatency:SetSourceRequest'</a>,
--   <a>setSourceRequest_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:ingestPort:SetSourceRequest'</a>,
--   <a>setSourceRequest_ingestPort</a> - The port that the flow will be
--   listening on for incoming content.
--   
--   <a>$sel:description:SetSourceRequest'</a>,
--   <a>setSourceRequest_description</a> - A description for the source.
--   This value is not used or seen outside of the current AWS Elemental
--   MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:SetSourceRequest'</a>,
--   <a>setSourceRequest_mediaStreamSourceConfigurations</a> - The media
--   streams that are associated with the source, and the parameters for
--   those associations.
--   
--   <a>$sel:whitelistCidr:SetSourceRequest'</a>,
--   <a>setSourceRequest_whitelistCidr</a> - The range of IP addresses that
--   should be allowed to contribute content to your source. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:maxBitrate:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxBitrate</a> - The smoothing max bitrate for
--   RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:SetSourceRequest'</a>,
--   <a>setSourceRequest_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
newSetSourceRequest :: SetSourceRequest

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
setSourceRequest_entitlementArn :: Lens' SetSourceRequest (Maybe Text)

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
setSourceRequest_maxLatency :: Lens' SetSourceRequest (Maybe Int)

-- | The name of the VPC interface to use for this source.
setSourceRequest_vpcInterfaceName :: Lens' SetSourceRequest (Maybe Text)

-- | The type of encryption that is used on the content ingested from this
--   source.
setSourceRequest_decryption :: Lens' SetSourceRequest (Maybe Encryption)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
setSourceRequest_maxSyncBuffer :: Lens' SetSourceRequest (Maybe Int)

-- | The protocol that is used by the source.
setSourceRequest_protocol :: Lens' SetSourceRequest (Maybe Protocol)

-- | The name of the source.
setSourceRequest_name :: Lens' SetSourceRequest (Maybe Text)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
setSourceRequest_minLatency :: Lens' SetSourceRequest (Maybe Int)

-- | The port that the flow will be listening on for incoming content.
setSourceRequest_ingestPort :: Lens' SetSourceRequest (Maybe Int)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
setSourceRequest_description :: Lens' SetSourceRequest (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
setSourceRequest_mediaStreamSourceConfigurations :: Lens' SetSourceRequest (Maybe [MediaStreamSourceConfigurationRequest])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
setSourceRequest_whitelistCidr :: Lens' SetSourceRequest (Maybe Text)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
setSourceRequest_maxBitrate :: Lens' SetSourceRequest (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
setSourceRequest_streamId :: Lens' SetSourceRequest (Maybe Text)

-- | The settings for the source of the flow.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Encryption -> Maybe Text -> Maybe Int -> Maybe Transport -> Maybe Text -> Maybe [MediaStreamSourceConfiguration] -> Maybe Text -> Text -> Text -> Source

-- | The ARN of the entitlement that allows you to subscribe to content
--   that comes from another AWS account. The entitlement is set by the
--   content originator and the ARN is generated as part of the
--   originator's flow.
[$sel:entitlementArn:Source'] :: Source -> Maybe Text

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
[$sel:dataTransferSubscriberFeePercent:Source'] :: Source -> Maybe Int

-- | The name of the VPC interface that is used for this source.
[$sel:vpcInterfaceName:Source'] :: Source -> Maybe Text

-- | The type of encryption that is used on the content ingested from this
--   source.
[$sel:decryption:Source'] :: Source -> Maybe Encryption

-- | The IP address that the flow will be listening on for incoming
--   content.
[$sel:ingestIp:Source'] :: Source -> Maybe Text

-- | The port that the flow will be listening on for incoming content.
[$sel:ingestPort:Source'] :: Source -> Maybe Int

-- | Attributes related to the transport stream that are used in the
--   source.
[$sel:transport:Source'] :: Source -> Maybe Transport

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
[$sel:description:Source'] :: Source -> Maybe Text

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
[$sel:mediaStreamSourceConfigurations:Source'] :: Source -> Maybe [MediaStreamSourceConfiguration]

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:whitelistCidr:Source'] :: Source -> Maybe Text

-- | The ARN of the source.
[$sel:sourceArn:Source'] :: Source -> Text

-- | The name of the source.
[$sel:name:Source'] :: Source -> Text

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:Source'</a>, <a>source_entitlementArn</a> - The
--   ARN of the entitlement that allows you to subscribe to content that
--   comes from another AWS account. The entitlement is set by the content
--   originator and the ARN is generated as part of the originator's flow.
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Source'</a>,
--   <a>source_dataTransferSubscriberFeePercent</a> - Percentage from 0-100
--   of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:vpcInterfaceName:Source'</a>, <a>source_vpcInterfaceName</a> -
--   The name of the VPC interface that is used for this source.
--   
--   <a>$sel:decryption:Source'</a>, <a>source_decryption</a> - The type of
--   encryption that is used on the content ingested from this source.
--   
--   <a>$sel:ingestIp:Source'</a>, <a>source_ingestIp</a> - The IP address
--   that the flow will be listening on for incoming content.
--   
--   <a>$sel:ingestPort:Source'</a>, <a>source_ingestPort</a> - The port
--   that the flow will be listening on for incoming content.
--   
--   <a>$sel:transport:Source'</a>, <a>source_transport</a> - Attributes
--   related to the transport stream that are used in the source.
--   
--   <a>$sel:description:Source'</a>, <a>source_description</a> - A
--   description for the source. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:Source'</a>,
--   <a>source_mediaStreamSourceConfigurations</a> - The media streams that
--   are associated with the source, and the parameters for those
--   associations.
--   
--   <a>$sel:whitelistCidr:Source'</a>, <a>source_whitelistCidr</a> - The
--   range of IP addresses that should be allowed to contribute content to
--   your source. These IP addresses should be in the form of a Classless
--   Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:sourceArn:Source'</a>, <a>source_sourceArn</a> - The ARN of
--   the source.
--   
--   <a>$sel:name:Source'</a>, <a>source_name</a> - The name of the source.
newSource :: Text -> Text -> Source

-- | The ARN of the entitlement that allows you to subscribe to content
--   that comes from another AWS account. The entitlement is set by the
--   content originator and the ARN is generated as part of the
--   originator's flow.
source_entitlementArn :: Lens' Source (Maybe Text)

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
source_dataTransferSubscriberFeePercent :: Lens' Source (Maybe Int)

-- | The name of the VPC interface that is used for this source.
source_vpcInterfaceName :: Lens' Source (Maybe Text)

-- | The type of encryption that is used on the content ingested from this
--   source.
source_decryption :: Lens' Source (Maybe Encryption)

-- | The IP address that the flow will be listening on for incoming
--   content.
source_ingestIp :: Lens' Source (Maybe Text)

-- | The port that the flow will be listening on for incoming content.
source_ingestPort :: Lens' Source (Maybe Int)

-- | Attributes related to the transport stream that are used in the
--   source.
source_transport :: Lens' Source (Maybe Transport)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
source_description :: Lens' Source (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
source_mediaStreamSourceConfigurations :: Lens' Source (Maybe [MediaStreamSourceConfiguration])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
source_whitelistCidr :: Lens' Source (Maybe Text)

-- | The ARN of the source.
source_sourceArn :: Lens' Source Text

-- | The name of the source.
source_name :: Lens' Source Text

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
--   
--   <i>See:</i> <a>newSourcePriority</a> smart constructor.
data SourcePriority
SourcePriority' :: Maybe Text -> SourcePriority

-- | The name of the source you choose as the primary source for this flow.
[$sel:primarySource:SourcePriority'] :: SourcePriority -> Maybe Text

-- | Create a value of <a>SourcePriority</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:primarySource:SourcePriority'</a>,
--   <a>sourcePriority_primarySource</a> - The name of the source you
--   choose as the primary source for this flow.
newSourcePriority :: SourcePriority

-- | The name of the source you choose as the primary source for this flow.
sourcePriority_primarySource :: Lens' SourcePriority (Maybe Text)

-- | Attributes related to the transport stream that are used in a source
--   or output.
--   
--   <i>See:</i> <a>newTransport</a> smart constructor.
data Transport
Transport' :: Maybe Int -> Maybe Int -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Protocol -> Transport

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
[$sel:maxLatency:Transport'] :: Transport -> Maybe Int

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
[$sel:maxSyncBuffer:Transport'] :: Transport -> Maybe Int

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:cidrAllowList:Transport'] :: Transport -> Maybe [Text]

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
[$sel:smoothingLatency:Transport'] :: Transport -> Maybe Int

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:Transport'] :: Transport -> Maybe Int

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
[$sel:maxBitrate:Transport'] :: Transport -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:Transport'] :: Transport -> Maybe Text

-- | The remote ID for the Zixi-pull stream.
[$sel:remoteId:Transport'] :: Transport -> Maybe Text

-- | The protocol that is used by the source or output.
[$sel:protocol:Transport'] :: Transport -> Protocol

-- | Create a value of <a>Transport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxLatency:Transport'</a>, <a>transport_maxLatency</a> - The
--   maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
--   
--   <a>$sel:maxSyncBuffer:Transport'</a>, <a>transport_maxSyncBuffer</a> -
--   The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
--   
--   <a>$sel:cidrAllowList:Transport'</a>, <a>transport_cidrAllowList</a> -
--   The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:Transport'</a>,
--   <a>transport_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:Transport'</a>, <a>transport_minLatency</a> - The
--   minimum latency in milliseconds for SRT-based streams. In streams that
--   use the SRT protocol, this value that you set on your MediaConnect
--   source or output represents the minimal potential latency of that
--   connection. The latency of the stream is set to the highest number
--   between the sender’s minimum latency and the receiver’s minimum
--   latency.
--   
--   <a>$sel:maxBitrate:Transport'</a>, <a>transport_maxBitrate</a> - The
--   smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:Transport'</a>, <a>transport_streamId</a> - The
--   stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:Transport'</a>, <a>transport_remoteId</a> - The
--   remote ID for the Zixi-pull stream.
--   
--   <a>$sel:protocol:Transport'</a>, <a>transport_protocol</a> - The
--   protocol that is used by the source or output.
newTransport :: Protocol -> Transport

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
transport_maxLatency :: Lens' Transport (Maybe Int)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
transport_maxSyncBuffer :: Lens' Transport (Maybe Int)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
transport_cidrAllowList :: Lens' Transport (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
transport_smoothingLatency :: Lens' Transport (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
transport_minLatency :: Lens' Transport (Maybe Int)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
transport_maxBitrate :: Lens' Transport (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
transport_streamId :: Lens' Transport (Maybe Text)

-- | The remote ID for the Zixi-pull stream.
transport_remoteId :: Lens' Transport (Maybe Text)

-- | The protocol that is used by the source or output.
transport_protocol :: Lens' Transport Protocol

-- | Information about the encryption of the flow.
--   
--   <i>See:</i> <a>newUpdateEncryption</a> smart constructor.
data UpdateEncryption
UpdateEncryption' :: Maybe KeyType -> Maybe Text -> Maybe Text -> Maybe Algorithm -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UpdateEncryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
[$sel:keyType:UpdateEncryption'] :: UpdateEncryption -> Maybe KeyType

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
[$sel:resourceId:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
[$sel:url:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
[$sel:algorithm:UpdateEncryption'] :: UpdateEncryption -> Maybe Algorithm

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
[$sel:constantInitializationVector:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
[$sel:deviceId:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
[$sel:region:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
[$sel:secretArn:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
[$sel:roleArn:UpdateEncryption'] :: UpdateEncryption -> Maybe Text

-- | Create a value of <a>UpdateEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyType:UpdateEncryption'</a>, <a>updateEncryption_keyType</a>
--   - The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
--   
--   <a>$sel:resourceId:UpdateEncryption'</a>,
--   <a>updateEncryption_resourceId</a> - An identifier for the content.
--   The service sends this value to the key server to identify the current
--   endpoint. The resource ID is also known as the content ID. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:url:UpdateEncryption'</a>, <a>updateEncryption_url</a> - The
--   URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
--   
--   <a>$sel:algorithm:UpdateEncryption'</a>,
--   <a>updateEncryption_algorithm</a> - The type of algorithm that is used
--   for the encryption (such as aes128, aes192, or aes256).
--   
--   <a>$sel:constantInitializationVector:UpdateEncryption'</a>,
--   <a>updateEncryption_constantInitializationVector</a> - A 128-bit,
--   16-byte hex value represented by a 32-character string, to be used
--   with the key for encrypting content. This parameter is not valid for
--   static key encryption.
--   
--   <a>$sel:deviceId:UpdateEncryption'</a>,
--   <a>updateEncryption_deviceId</a> - The value of one of the devices
--   that you configured with your digital rights management (DRM) platform
--   key provider. This parameter is required for SPEKE encryption and is
--   not valid for static key encryption.
--   
--   <a>$sel:region:UpdateEncryption'</a>, <a>updateEncryption_region</a> -
--   The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
--   
--   <a>$sel:secretArn:UpdateEncryption'</a>,
--   <a>updateEncryption_secretArn</a> - The ARN of the secret that you
--   created in AWS Secrets Manager to store the encryption key. This
--   parameter is required for static key encryption and is not valid for
--   SPEKE encryption.
--   
--   <a>$sel:roleArn:UpdateEncryption'</a>, <a>updateEncryption_roleArn</a>
--   - The ARN of the role that you created during setup (when you set up
--   AWS Elemental MediaConnect as a trusted entity).
newUpdateEncryption :: UpdateEncryption

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
updateEncryption_keyType :: Lens' UpdateEncryption (Maybe KeyType)

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
updateEncryption_resourceId :: Lens' UpdateEncryption (Maybe Text)

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
updateEncryption_url :: Lens' UpdateEncryption (Maybe Text)

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
updateEncryption_algorithm :: Lens' UpdateEncryption (Maybe Algorithm)

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
updateEncryption_constantInitializationVector :: Lens' UpdateEncryption (Maybe Text)

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
updateEncryption_deviceId :: Lens' UpdateEncryption (Maybe Text)

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
updateEncryption_region :: Lens' UpdateEncryption (Maybe Text)

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
updateEncryption_secretArn :: Lens' UpdateEncryption (Maybe Text)

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
updateEncryption_roleArn :: Lens' UpdateEncryption (Maybe Text)

-- | The settings for source failover
--   
--   <i>See:</i> <a>newUpdateFailoverConfig</a> smart constructor.
data UpdateFailoverConfig
UpdateFailoverConfig' :: Maybe State -> Maybe Int -> Maybe SourcePriority -> Maybe FailoverMode -> UpdateFailoverConfig
[$sel:state:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe State

-- | Recovery window time to look for dash-7 packets
[$sel:recoveryWindow:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe Int

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
[$sel:sourcePriority:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe SourcePriority

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
[$sel:failoverMode:UpdateFailoverConfig'] :: UpdateFailoverConfig -> Maybe FailoverMode

-- | Create a value of <a>UpdateFailoverConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_state</a> - Undocumented member.
--   
--   <a>$sel:recoveryWindow:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_recoveryWindow</a> - Recovery window time to
--   look for dash-7 packets
--   
--   <a>$sel:sourcePriority:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_sourcePriority</a> - The priority you want to
--   assign to a source. You can have a primary stream and a backup stream
--   or two equally prioritized streams.
--   
--   <a>$sel:failoverMode:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_failoverMode</a> - The type of failover you
--   choose for this flow. MERGE combines the source streams into a single
--   stream, allowing graceful recovery from any single-source loss.
--   FAILOVER allows switching between different streams.
newUpdateFailoverConfig :: UpdateFailoverConfig

-- | Undocumented member.
updateFailoverConfig_state :: Lens' UpdateFailoverConfig (Maybe State)

-- | Recovery window time to look for dash-7 packets
updateFailoverConfig_recoveryWindow :: Lens' UpdateFailoverConfig (Maybe Int)

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
updateFailoverConfig_sourcePriority :: Lens' UpdateFailoverConfig (Maybe SourcePriority)

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
updateFailoverConfig_failoverMode :: Lens' UpdateFailoverConfig (Maybe FailoverMode)

-- | The settings for a VPC Source.
--   
--   <i>See:</i> <a>newVpcInterface</a> smart constructor.
data VpcInterface
VpcInterface' :: NetworkInterfaceType -> [Text] -> Text -> [Text] -> Text -> Text -> VpcInterface

-- | The type of network interface.
[$sel:networkInterfaceType:VpcInterface'] :: VpcInterface -> NetworkInterfaceType

-- | IDs of the network interfaces created in customer's account by
--   MediaConnect.
[$sel:networkInterfaceIds:VpcInterface'] :: VpcInterface -> [Text]

-- | Subnet must be in the AZ of the Flow
[$sel:subnetId:VpcInterface'] :: VpcInterface -> Text

-- | Security Group IDs to be used on ENI.
[$sel:securityGroupIds:VpcInterface'] :: VpcInterface -> [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
[$sel:roleArn:VpcInterface'] :: VpcInterface -> Text

-- | Immutable and has to be a unique against other VpcInterfaces in this
--   Flow
[$sel:name:VpcInterface'] :: VpcInterface -> Text

-- | Create a value of <a>VpcInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceType:VpcInterface'</a>,
--   <a>vpcInterface_networkInterfaceType</a> - The type of network
--   interface.
--   
--   <a>$sel:networkInterfaceIds:VpcInterface'</a>,
--   <a>vpcInterface_networkInterfaceIds</a> - IDs of the network
--   interfaces created in customer's account by MediaConnect.
--   
--   <a>$sel:subnetId:VpcInterface'</a>, <a>vpcInterface_subnetId</a> -
--   Subnet must be in the AZ of the Flow
--   
--   <a>$sel:securityGroupIds:VpcInterface'</a>,
--   <a>vpcInterface_securityGroupIds</a> - Security Group IDs to be used
--   on ENI.
--   
--   <a>$sel:roleArn:VpcInterface'</a>, <a>vpcInterface_roleArn</a> - Role
--   Arn MediaConnect can assumes to create ENIs in customer's account
--   
--   <a>$sel:name:VpcInterface'</a>, <a>vpcInterface_name</a> - Immutable
--   and has to be a unique against other VpcInterfaces in this Flow
newVpcInterface :: NetworkInterfaceType -> Text -> Text -> Text -> VpcInterface

-- | The type of network interface.
vpcInterface_networkInterfaceType :: Lens' VpcInterface NetworkInterfaceType

-- | IDs of the network interfaces created in customer's account by
--   MediaConnect.
vpcInterface_networkInterfaceIds :: Lens' VpcInterface [Text]

-- | Subnet must be in the AZ of the Flow
vpcInterface_subnetId :: Lens' VpcInterface Text

-- | Security Group IDs to be used on ENI.
vpcInterface_securityGroupIds :: Lens' VpcInterface [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
vpcInterface_roleArn :: Lens' VpcInterface Text

-- | Immutable and has to be a unique against other VpcInterfaces in this
--   Flow
vpcInterface_name :: Lens' VpcInterface Text

-- | The settings for attaching a VPC interface to an output.
--   
--   <i>See:</i> <a>newVpcInterfaceAttachment</a> smart constructor.
data VpcInterfaceAttachment
VpcInterfaceAttachment' :: Maybe Text -> VpcInterfaceAttachment

-- | The name of the VPC interface to use for this output.
[$sel:vpcInterfaceName:VpcInterfaceAttachment'] :: VpcInterfaceAttachment -> Maybe Text

-- | Create a value of <a>VpcInterfaceAttachment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcInterfaceName:VpcInterfaceAttachment'</a>,
--   <a>vpcInterfaceAttachment_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this output.
newVpcInterfaceAttachment :: VpcInterfaceAttachment

-- | The name of the VPC interface to use for this output.
vpcInterfaceAttachment_vpcInterfaceName :: Lens' VpcInterfaceAttachment (Maybe Text)

-- | Desired VPC Interface for a Flow
--   
--   <i>See:</i> <a>newVpcInterfaceRequest</a> smart constructor.
data VpcInterfaceRequest
VpcInterfaceRequest' :: Maybe NetworkInterfaceType -> Text -> [Text] -> Text -> Text -> VpcInterfaceRequest

-- | The type of network interface. If this value is not included in the
--   request, MediaConnect uses ENA as the networkInterfaceType.
[$sel:networkInterfaceType:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Maybe NetworkInterfaceType

-- | Subnet must be in the AZ of the Flow
[$sel:subnetId:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Text

-- | Security Group IDs to be used on ENI.
[$sel:securityGroupIds:VpcInterfaceRequest'] :: VpcInterfaceRequest -> [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
[$sel:roleArn:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Text

-- | The name of the VPC Interface. This value must be unique within the
--   current flow.
[$sel:name:VpcInterfaceRequest'] :: VpcInterfaceRequest -> Text

-- | Create a value of <a>VpcInterfaceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceType:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_networkInterfaceType</a> - The type of network
--   interface. If this value is not included in the request, MediaConnect
--   uses ENA as the networkInterfaceType.
--   
--   <a>$sel:subnetId:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_subnetId</a> - Subnet must be in the AZ of the
--   Flow
--   
--   <a>$sel:securityGroupIds:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_securityGroupIds</a> - Security Group IDs to be
--   used on ENI.
--   
--   <a>$sel:roleArn:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_roleArn</a> - Role Arn MediaConnect can assumes
--   to create ENIs in customer's account
--   
--   <a>$sel:name:VpcInterfaceRequest'</a>, <a>vpcInterfaceRequest_name</a>
--   - The name of the VPC Interface. This value must be unique within the
--   current flow.
newVpcInterfaceRequest :: Text -> Text -> Text -> VpcInterfaceRequest

-- | The type of network interface. If this value is not included in the
--   request, MediaConnect uses ENA as the networkInterfaceType.
vpcInterfaceRequest_networkInterfaceType :: Lens' VpcInterfaceRequest (Maybe NetworkInterfaceType)

-- | Subnet must be in the AZ of the Flow
vpcInterfaceRequest_subnetId :: Lens' VpcInterfaceRequest Text

-- | Security Group IDs to be used on ENI.
vpcInterfaceRequest_securityGroupIds :: Lens' VpcInterfaceRequest [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
vpcInterfaceRequest_roleArn :: Lens' VpcInterfaceRequest Text

-- | The name of the VPC Interface. This value must be unique within the
--   current flow.
vpcInterfaceRequest_name :: Lens' VpcInterfaceRequest Text


-- | Associates the specified tags to a resource with the specified
--   resourceArn. If existing tags on a resource are not specified in the
--   request parameters, they are not changed. When a resource is deleted,
--   the tags associated with that resource are deleted as well.
module Amazonka.MediaConnect.TagResource

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters, and
--   tag values can have a maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource to which to add tags.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A map from tag keys to values. Tag keys can have a maximum character
--   length of 128 characters, and tag values can have a maximum length of
--   256 characters.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource to which to add tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map from
--   tag keys to values. Tag keys can have a maximum character length of
--   128 characters, and tag values can have a maximum length of 256
--   characters.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource to which to add tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | A map from tag keys to values. Tag keys can have a maximum character
--   length of 128 characters, and tag values can have a maximum length of
--   256 characters.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.MediaConnect.TagResource.TagResource
instance GHC.Show.Show Amazonka.MediaConnect.TagResource.TagResource
instance GHC.Read.Read Amazonka.MediaConnect.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.MediaConnect.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.MediaConnect.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.MediaConnect.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.MediaConnect.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.TagResource.TagResource


-- | Stops a flow.
module Amazonka.MediaConnect.StopFlow

-- | <i>See:</i> <a>newStopFlow</a> smart constructor.
data StopFlow
StopFlow' :: Text -> StopFlow

-- | The ARN of the flow that you want to stop.
[$sel:flowArn:StopFlow'] :: StopFlow -> Text

-- | Create a value of <a>StopFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:StopFlow'</a>, <a>stopFlow_flowArn</a> - The ARN of
--   the flow that you want to stop.
newStopFlow :: Text -> StopFlow

-- | The ARN of the flow that you want to stop.
stopFlow_flowArn :: Lens' StopFlow Text

-- | <i>See:</i> <a>newStopFlowResponse</a> smart constructor.
data StopFlowResponse
StopFlowResponse' :: Maybe Status -> Maybe Text -> Int -> StopFlowResponse

-- | The status of the flow when the StopFlow process begins.
[$sel:status:StopFlowResponse'] :: StopFlowResponse -> Maybe Status

-- | The ARN of the flow that you stopped.
[$sel:flowArn:StopFlowResponse'] :: StopFlowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StopFlowResponse'] :: StopFlowResponse -> Int

-- | Create a value of <a>StopFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StopFlowResponse'</a>, <a>stopFlowResponse_status</a> -
--   The status of the flow when the StopFlow process begins.
--   
--   <a>$sel:flowArn:StopFlow'</a>, <a>stopFlowResponse_flowArn</a> - The
--   ARN of the flow that you stopped.
--   
--   <a>$sel:httpStatus:StopFlowResponse'</a>,
--   <a>stopFlowResponse_httpStatus</a> - The response's http status code.
newStopFlowResponse :: Int -> StopFlowResponse

-- | The status of the flow when the StopFlow process begins.
stopFlowResponse_status :: Lens' StopFlowResponse (Maybe Status)

-- | The ARN of the flow that you stopped.
stopFlowResponse_flowArn :: Lens' StopFlowResponse (Maybe Text)

-- | The response's http status code.
stopFlowResponse_httpStatus :: Lens' StopFlowResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.StopFlow.StopFlow
instance GHC.Show.Show Amazonka.MediaConnect.StopFlow.StopFlow
instance GHC.Read.Read Amazonka.MediaConnect.StopFlow.StopFlow
instance GHC.Classes.Eq Amazonka.MediaConnect.StopFlow.StopFlow
instance GHC.Generics.Generic Amazonka.MediaConnect.StopFlow.StopFlowResponse
instance GHC.Show.Show Amazonka.MediaConnect.StopFlow.StopFlowResponse
instance GHC.Read.Read Amazonka.MediaConnect.StopFlow.StopFlowResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.StopFlow.StopFlowResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.StopFlow.StopFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.StopFlow.StopFlowResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.StopFlow.StopFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.StopFlow.StopFlow
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.StopFlow.StopFlow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.StopFlow.StopFlow
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.StopFlow.StopFlow
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.StopFlow.StopFlow


-- | Starts a flow.
module Amazonka.MediaConnect.StartFlow

-- | <i>See:</i> <a>newStartFlow</a> smart constructor.
data StartFlow
StartFlow' :: Text -> StartFlow

-- | The ARN of the flow that you want to start.
[$sel:flowArn:StartFlow'] :: StartFlow -> Text

-- | Create a value of <a>StartFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:StartFlow'</a>, <a>startFlow_flowArn</a> - The ARN of
--   the flow that you want to start.
newStartFlow :: Text -> StartFlow

-- | The ARN of the flow that you want to start.
startFlow_flowArn :: Lens' StartFlow Text

-- | <i>See:</i> <a>newStartFlowResponse</a> smart constructor.
data StartFlowResponse
StartFlowResponse' :: Maybe Status -> Maybe Text -> Int -> StartFlowResponse

-- | The status of the flow when the StartFlow process begins.
[$sel:status:StartFlowResponse'] :: StartFlowResponse -> Maybe Status

-- | The ARN of the flow that you started.
[$sel:flowArn:StartFlowResponse'] :: StartFlowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartFlowResponse'] :: StartFlowResponse -> Int

-- | Create a value of <a>StartFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StartFlowResponse'</a>, <a>startFlowResponse_status</a>
--   - The status of the flow when the StartFlow process begins.
--   
--   <a>$sel:flowArn:StartFlow'</a>, <a>startFlowResponse_flowArn</a> - The
--   ARN of the flow that you started.
--   
--   <a>$sel:httpStatus:StartFlowResponse'</a>,
--   <a>startFlowResponse_httpStatus</a> - The response's http status code.
newStartFlowResponse :: Int -> StartFlowResponse

-- | The status of the flow when the StartFlow process begins.
startFlowResponse_status :: Lens' StartFlowResponse (Maybe Status)

-- | The ARN of the flow that you started.
startFlowResponse_flowArn :: Lens' StartFlowResponse (Maybe Text)

-- | The response's http status code.
startFlowResponse_httpStatus :: Lens' StartFlowResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.StartFlow.StartFlow
instance GHC.Show.Show Amazonka.MediaConnect.StartFlow.StartFlow
instance GHC.Read.Read Amazonka.MediaConnect.StartFlow.StartFlow
instance GHC.Classes.Eq Amazonka.MediaConnect.StartFlow.StartFlow
instance GHC.Generics.Generic Amazonka.MediaConnect.StartFlow.StartFlowResponse
instance GHC.Show.Show Amazonka.MediaConnect.StartFlow.StartFlowResponse
instance GHC.Read.Read Amazonka.MediaConnect.StartFlow.StartFlowResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.StartFlow.StartFlowResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.StartFlow.StartFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.StartFlow.StartFlowResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.StartFlow.StartFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.StartFlow.StartFlow
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.StartFlow.StartFlow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.StartFlow.StartFlow
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.StartFlow.StartFlow
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.StartFlow.StartFlow


-- | Revokes an entitlement from a flow. Once an entitlement is revoked,
--   the content becomes unavailable to the subscriber and the associated
--   output is removed.
module Amazonka.MediaConnect.RevokeFlowEntitlement

-- | <i>See:</i> <a>newRevokeFlowEntitlement</a> smart constructor.
data RevokeFlowEntitlement
RevokeFlowEntitlement' :: Text -> Text -> RevokeFlowEntitlement

-- | The flow that you want to revoke an entitlement from.
[$sel:flowArn:RevokeFlowEntitlement'] :: RevokeFlowEntitlement -> Text

-- | The ARN of the entitlement that you want to revoke.
[$sel:entitlementArn:RevokeFlowEntitlement'] :: RevokeFlowEntitlement -> Text

-- | Create a value of <a>RevokeFlowEntitlement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlement_flowArn</a> - The flow that you want to
--   revoke an entitlement from.
--   
--   <a>$sel:entitlementArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlement_entitlementArn</a> - The ARN of the
--   entitlement that you want to revoke.
newRevokeFlowEntitlement :: Text -> Text -> RevokeFlowEntitlement

-- | The flow that you want to revoke an entitlement from.
revokeFlowEntitlement_flowArn :: Lens' RevokeFlowEntitlement Text

-- | The ARN of the entitlement that you want to revoke.
revokeFlowEntitlement_entitlementArn :: Lens' RevokeFlowEntitlement Text

-- | <i>See:</i> <a>newRevokeFlowEntitlementResponse</a> smart constructor.
data RevokeFlowEntitlementResponse
RevokeFlowEntitlementResponse' :: Maybe Text -> Maybe Text -> Int -> RevokeFlowEntitlementResponse

-- | The ARN of the entitlement that was revoked.
[$sel:entitlementArn:RevokeFlowEntitlementResponse'] :: RevokeFlowEntitlementResponse -> Maybe Text

-- | The ARN of the flow that the entitlement was revoked from.
[$sel:flowArn:RevokeFlowEntitlementResponse'] :: RevokeFlowEntitlementResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RevokeFlowEntitlementResponse'] :: RevokeFlowEntitlementResponse -> Int

-- | Create a value of <a>RevokeFlowEntitlementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlementResponse_entitlementArn</a> - The ARN of the
--   entitlement that was revoked.
--   
--   <a>$sel:flowArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlementResponse_flowArn</a> - The ARN of the flow
--   that the entitlement was revoked from.
--   
--   <a>$sel:httpStatus:RevokeFlowEntitlementResponse'</a>,
--   <a>revokeFlowEntitlementResponse_httpStatus</a> - The response's http
--   status code.
newRevokeFlowEntitlementResponse :: Int -> RevokeFlowEntitlementResponse

-- | The ARN of the entitlement that was revoked.
revokeFlowEntitlementResponse_entitlementArn :: Lens' RevokeFlowEntitlementResponse (Maybe Text)

-- | The ARN of the flow that the entitlement was revoked from.
revokeFlowEntitlementResponse_flowArn :: Lens' RevokeFlowEntitlementResponse (Maybe Text)

-- | The response's http status code.
revokeFlowEntitlementResponse_httpStatus :: Lens' RevokeFlowEntitlementResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance GHC.Show.Show Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance GHC.Read.Read Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance GHC.Classes.Eq Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance GHC.Generics.Generic Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlementResponse
instance GHC.Show.Show Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlementResponse
instance GHC.Read.Read Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlementResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlementResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlementResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.RevokeFlowEntitlement.RevokeFlowEntitlement


-- | Removes a VPC Interface from an existing flow. This request can be
--   made only on a VPC interface that does not have a Source or Output
--   associated with it. If the VPC interface is referenced by a Source or
--   Output, you must first delete or update the Source or Output to no
--   longer reference the VPC interface.
module Amazonka.MediaConnect.RemoveFlowVpcInterface

-- | <i>See:</i> <a>newRemoveFlowVpcInterface</a> smart constructor.
data RemoveFlowVpcInterface
RemoveFlowVpcInterface' :: Text -> Text -> RemoveFlowVpcInterface

-- | The flow that you want to remove a VPC interface from.
[$sel:flowArn:RemoveFlowVpcInterface'] :: RemoveFlowVpcInterface -> Text

-- | The name of the VPC interface that you want to remove.
[$sel:vpcInterfaceName:RemoveFlowVpcInterface'] :: RemoveFlowVpcInterface -> Text

-- | Create a value of <a>RemoveFlowVpcInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterface_flowArn</a> - The flow that you want to
--   remove a VPC interface from.
--   
--   <a>$sel:vpcInterfaceName:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterface_vpcInterfaceName</a> - The name of the VPC
--   interface that you want to remove.
newRemoveFlowVpcInterface :: Text -> Text -> RemoveFlowVpcInterface

-- | The flow that you want to remove a VPC interface from.
removeFlowVpcInterface_flowArn :: Lens' RemoveFlowVpcInterface Text

-- | The name of the VPC interface that you want to remove.
removeFlowVpcInterface_vpcInterfaceName :: Lens' RemoveFlowVpcInterface Text

-- | <i>See:</i> <a>newRemoveFlowVpcInterfaceResponse</a> smart
--   constructor.
data RemoveFlowVpcInterfaceResponse
RemoveFlowVpcInterfaceResponse' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> RemoveFlowVpcInterfaceResponse

-- | The ARN of the flow that is associated with the VPC interface you
--   removed.
[$sel:flowArn:RemoveFlowVpcInterfaceResponse'] :: RemoveFlowVpcInterfaceResponse -> Maybe Text

-- | IDs of network interfaces associated with the removed VPC interface
--   that Media Connect was unable to remove.
[$sel:nonDeletedNetworkInterfaceIds:RemoveFlowVpcInterfaceResponse'] :: RemoveFlowVpcInterfaceResponse -> Maybe [Text]

-- | The name of the VPC interface that was removed.
[$sel:vpcInterfaceName:RemoveFlowVpcInterfaceResponse'] :: RemoveFlowVpcInterfaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RemoveFlowVpcInterfaceResponse'] :: RemoveFlowVpcInterfaceResponse -> Int

-- | Create a value of <a>RemoveFlowVpcInterfaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterfaceResponse_flowArn</a> - The ARN of the flow
--   that is associated with the VPC interface you removed.
--   
--   
--   <a>$sel:nonDeletedNetworkInterfaceIds:RemoveFlowVpcInterfaceResponse'</a>,
--   <a>removeFlowVpcInterfaceResponse_nonDeletedNetworkInterfaceIds</a> -
--   IDs of network interfaces associated with the removed VPC interface
--   that Media Connect was unable to remove.
--   
--   <a>$sel:vpcInterfaceName:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterfaceResponse_vpcInterfaceName</a> - The name of
--   the VPC interface that was removed.
--   
--   <a>$sel:httpStatus:RemoveFlowVpcInterfaceResponse'</a>,
--   <a>removeFlowVpcInterfaceResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowVpcInterfaceResponse :: Int -> RemoveFlowVpcInterfaceResponse

-- | The ARN of the flow that is associated with the VPC interface you
--   removed.
removeFlowVpcInterfaceResponse_flowArn :: Lens' RemoveFlowVpcInterfaceResponse (Maybe Text)

-- | IDs of network interfaces associated with the removed VPC interface
--   that Media Connect was unable to remove.
removeFlowVpcInterfaceResponse_nonDeletedNetworkInterfaceIds :: Lens' RemoveFlowVpcInterfaceResponse (Maybe [Text])

-- | The name of the VPC interface that was removed.
removeFlowVpcInterfaceResponse_vpcInterfaceName :: Lens' RemoveFlowVpcInterfaceResponse (Maybe Text)

-- | The response's http status code.
removeFlowVpcInterfaceResponse_httpStatus :: Lens' RemoveFlowVpcInterfaceResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterfaceResponse
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterfaceResponse
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterfaceResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterfaceResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterfaceResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.RemoveFlowVpcInterface.RemoveFlowVpcInterface


-- | Removes a source from an existing flow. This request can be made only
--   if there is more than one source on the flow.
module Amazonka.MediaConnect.RemoveFlowSource

-- | <i>See:</i> <a>newRemoveFlowSource</a> smart constructor.
data RemoveFlowSource
RemoveFlowSource' :: Text -> Text -> RemoveFlowSource

-- | The flow that you want to remove a source from.
[$sel:flowArn:RemoveFlowSource'] :: RemoveFlowSource -> Text

-- | The ARN of the source that you want to remove.
[$sel:sourceArn:RemoveFlowSource'] :: RemoveFlowSource -> Text

-- | Create a value of <a>RemoveFlowSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowSource'</a>, <a>removeFlowSource_flowArn</a>
--   - The flow that you want to remove a source from.
--   
--   <a>$sel:sourceArn:RemoveFlowSource'</a>,
--   <a>removeFlowSource_sourceArn</a> - The ARN of the source that you
--   want to remove.
newRemoveFlowSource :: Text -> Text -> RemoveFlowSource

-- | The flow that you want to remove a source from.
removeFlowSource_flowArn :: Lens' RemoveFlowSource Text

-- | The ARN of the source that you want to remove.
removeFlowSource_sourceArn :: Lens' RemoveFlowSource Text

-- | <i>See:</i> <a>newRemoveFlowSourceResponse</a> smart constructor.
data RemoveFlowSourceResponse
RemoveFlowSourceResponse' :: Maybe Text -> Maybe Text -> Int -> RemoveFlowSourceResponse

-- | The ARN of the flow that is associated with the source you removed.
[$sel:flowArn:RemoveFlowSourceResponse'] :: RemoveFlowSourceResponse -> Maybe Text

-- | The ARN of the source that was removed.
[$sel:sourceArn:RemoveFlowSourceResponse'] :: RemoveFlowSourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RemoveFlowSourceResponse'] :: RemoveFlowSourceResponse -> Int

-- | Create a value of <a>RemoveFlowSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowSource'</a>,
--   <a>removeFlowSourceResponse_flowArn</a> - The ARN of the flow that is
--   associated with the source you removed.
--   
--   <a>$sel:sourceArn:RemoveFlowSource'</a>,
--   <a>removeFlowSourceResponse_sourceArn</a> - The ARN of the source that
--   was removed.
--   
--   <a>$sel:httpStatus:RemoveFlowSourceResponse'</a>,
--   <a>removeFlowSourceResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowSourceResponse :: Int -> RemoveFlowSourceResponse

-- | The ARN of the flow that is associated with the source you removed.
removeFlowSourceResponse_flowArn :: Lens' RemoveFlowSourceResponse (Maybe Text)

-- | The ARN of the source that was removed.
removeFlowSourceResponse_sourceArn :: Lens' RemoveFlowSourceResponse (Maybe Text)

-- | The response's http status code.
removeFlowSourceResponse_httpStatus :: Lens' RemoveFlowSourceResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSourceResponse
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSourceResponse
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSourceResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.RemoveFlowSource.RemoveFlowSource


-- | Removes an output from an existing flow. This request can be made only
--   on an output that does not have an entitlement associated with it. If
--   the output has an entitlement, you must revoke the entitlement
--   instead. When an entitlement is revoked from a flow, the service
--   automatically removes the associated output.
module Amazonka.MediaConnect.RemoveFlowOutput

-- | <i>See:</i> <a>newRemoveFlowOutput</a> smart constructor.
data RemoveFlowOutput
RemoveFlowOutput' :: Text -> Text -> RemoveFlowOutput

-- | The flow that you want to remove an output from.
[$sel:flowArn:RemoveFlowOutput'] :: RemoveFlowOutput -> Text

-- | The ARN of the output that you want to remove.
[$sel:outputArn:RemoveFlowOutput'] :: RemoveFlowOutput -> Text

-- | Create a value of <a>RemoveFlowOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowOutput'</a>, <a>removeFlowOutput_flowArn</a>
--   - The flow that you want to remove an output from.
--   
--   <a>$sel:outputArn:RemoveFlowOutput'</a>,
--   <a>removeFlowOutput_outputArn</a> - The ARN of the output that you
--   want to remove.
newRemoveFlowOutput :: Text -> Text -> RemoveFlowOutput

-- | The flow that you want to remove an output from.
removeFlowOutput_flowArn :: Lens' RemoveFlowOutput Text

-- | The ARN of the output that you want to remove.
removeFlowOutput_outputArn :: Lens' RemoveFlowOutput Text

-- | <i>See:</i> <a>newRemoveFlowOutputResponse</a> smart constructor.
data RemoveFlowOutputResponse
RemoveFlowOutputResponse' :: Maybe Text -> Maybe Text -> Int -> RemoveFlowOutputResponse

-- | The ARN of the flow that is associated with the output you removed.
[$sel:flowArn:RemoveFlowOutputResponse'] :: RemoveFlowOutputResponse -> Maybe Text

-- | The ARN of the output that was removed.
[$sel:outputArn:RemoveFlowOutputResponse'] :: RemoveFlowOutputResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RemoveFlowOutputResponse'] :: RemoveFlowOutputResponse -> Int

-- | Create a value of <a>RemoveFlowOutputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowOutput'</a>,
--   <a>removeFlowOutputResponse_flowArn</a> - The ARN of the flow that is
--   associated with the output you removed.
--   
--   <a>$sel:outputArn:RemoveFlowOutput'</a>,
--   <a>removeFlowOutputResponse_outputArn</a> - The ARN of the output that
--   was removed.
--   
--   <a>$sel:httpStatus:RemoveFlowOutputResponse'</a>,
--   <a>removeFlowOutputResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowOutputResponse :: Int -> RemoveFlowOutputResponse

-- | The ARN of the flow that is associated with the output you removed.
removeFlowOutputResponse_flowArn :: Lens' RemoveFlowOutputResponse (Maybe Text)

-- | The ARN of the output that was removed.
removeFlowOutputResponse_outputArn :: Lens' RemoveFlowOutputResponse (Maybe Text)

-- | The response's http status code.
removeFlowOutputResponse_httpStatus :: Lens' RemoveFlowOutputResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutputResponse
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutputResponse
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutputResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutputResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutputResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.RemoveFlowOutput.RemoveFlowOutput


-- | Removes a media stream from a flow. This action is only available if
--   the media stream is not associated with a source or output.
module Amazonka.MediaConnect.RemoveFlowMediaStream

-- | <i>See:</i> <a>newRemoveFlowMediaStream</a> smart constructor.
data RemoveFlowMediaStream
RemoveFlowMediaStream' :: Text -> Text -> RemoveFlowMediaStream

-- | The Amazon Resource Name (ARN) of the flow.
[$sel:flowArn:RemoveFlowMediaStream'] :: RemoveFlowMediaStream -> Text

-- | The name of the media stream that you want to remove.
[$sel:mediaStreamName:RemoveFlowMediaStream'] :: RemoveFlowMediaStream -> Text

-- | Create a value of <a>RemoveFlowMediaStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStream_flowArn</a> - The Amazon Resource Name (ARN)
--   of the flow.
--   
--   <a>$sel:mediaStreamName:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStream_mediaStreamName</a> - The name of the media
--   stream that you want to remove.
newRemoveFlowMediaStream :: Text -> Text -> RemoveFlowMediaStream

-- | The Amazon Resource Name (ARN) of the flow.
removeFlowMediaStream_flowArn :: Lens' RemoveFlowMediaStream Text

-- | The name of the media stream that you want to remove.
removeFlowMediaStream_mediaStreamName :: Lens' RemoveFlowMediaStream Text

-- | <i>See:</i> <a>newRemoveFlowMediaStreamResponse</a> smart constructor.
data RemoveFlowMediaStreamResponse
RemoveFlowMediaStreamResponse' :: Maybe Text -> Maybe Text -> Int -> RemoveFlowMediaStreamResponse

-- | The name of the media stream that was removed.
[$sel:mediaStreamName:RemoveFlowMediaStreamResponse'] :: RemoveFlowMediaStreamResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the flow.
[$sel:flowArn:RemoveFlowMediaStreamResponse'] :: RemoveFlowMediaStreamResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RemoveFlowMediaStreamResponse'] :: RemoveFlowMediaStreamResponse -> Int

-- | Create a value of <a>RemoveFlowMediaStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mediaStreamName:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStreamResponse_mediaStreamName</a> - The name of the
--   media stream that was removed.
--   
--   <a>$sel:flowArn:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStreamResponse_flowArn</a> - The Amazon Resource
--   Name (ARN) of the flow.
--   
--   <a>$sel:httpStatus:RemoveFlowMediaStreamResponse'</a>,
--   <a>removeFlowMediaStreamResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowMediaStreamResponse :: Int -> RemoveFlowMediaStreamResponse

-- | The name of the media stream that was removed.
removeFlowMediaStreamResponse_mediaStreamName :: Lens' RemoveFlowMediaStreamResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the flow.
removeFlowMediaStreamResponse_flowArn :: Lens' RemoveFlowMediaStreamResponse (Maybe Text)

-- | The response's http status code.
removeFlowMediaStreamResponse_httpStatus :: Lens' RemoveFlowMediaStreamResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance GHC.Generics.Generic Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStreamResponse
instance GHC.Show.Show Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStreamResponse
instance GHC.Read.Read Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStreamResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStreamResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStreamResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance Control.DeepSeq.NFData Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.RemoveFlowMediaStream.RemoveFlowMediaStream


-- | Submits a request to purchase an offering. If you already have an
--   active reservation, you can't purchase another offering.
module Amazonka.MediaConnect.PurchaseOffering

-- | A request to purchase a offering.
--   
--   <i>See:</i> <a>newPurchaseOffering</a> smart constructor.
data PurchaseOffering
PurchaseOffering' :: Text -> Text -> Text -> PurchaseOffering

-- | The Amazon Resource Name (ARN) of the offering.
[$sel:offeringArn:PurchaseOffering'] :: PurchaseOffering -> Text

-- | The date and time that you want the reservation to begin, in
--   Coordinated Universal Time (UTC). You can specify any date and time
--   between 12:00am on the first day of the current month to the current
--   time on today's date, inclusive. Specify the start in a 24-hour
--   notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and
--   Z are literal characters. For example, to specify 11:30pm on March 5,
--   2020, enter 2020-03-05T23:30:00Z.
[$sel:start:PurchaseOffering'] :: PurchaseOffering -> Text

-- | The name that you want to use for the reservation.
[$sel:reservationName:PurchaseOffering'] :: PurchaseOffering -> Text

-- | Create a value of <a>PurchaseOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringArn:PurchaseOffering'</a>,
--   <a>purchaseOffering_offeringArn</a> - The Amazon Resource Name (ARN)
--   of the offering.
--   
--   <a>$sel:start:PurchaseOffering'</a>, <a>purchaseOffering_start</a> -
--   The date and time that you want the reservation to begin, in
--   Coordinated Universal Time (UTC). You can specify any date and time
--   between 12:00am on the first day of the current month to the current
--   time on today's date, inclusive. Specify the start in a 24-hour
--   notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and
--   Z are literal characters. For example, to specify 11:30pm on March 5,
--   2020, enter 2020-03-05T23:30:00Z.
--   
--   <a>$sel:reservationName:PurchaseOffering'</a>,
--   <a>purchaseOffering_reservationName</a> - The name that you want to
--   use for the reservation.
newPurchaseOffering :: Text -> Text -> Text -> PurchaseOffering

-- | The Amazon Resource Name (ARN) of the offering.
purchaseOffering_offeringArn :: Lens' PurchaseOffering Text

-- | The date and time that you want the reservation to begin, in
--   Coordinated Universal Time (UTC). You can specify any date and time
--   between 12:00am on the first day of the current month to the current
--   time on today's date, inclusive. Specify the start in a 24-hour
--   notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and
--   Z are literal characters. For example, to specify 11:30pm on March 5,
--   2020, enter 2020-03-05T23:30:00Z.
purchaseOffering_start :: Lens' PurchaseOffering Text

-- | The name that you want to use for the reservation.
purchaseOffering_reservationName :: Lens' PurchaseOffering Text

-- | <i>See:</i> <a>newPurchaseOfferingResponse</a> smart constructor.
data PurchaseOfferingResponse
PurchaseOfferingResponse' :: Maybe Reservation -> Int -> PurchaseOfferingResponse
[$sel:reservation:PurchaseOfferingResponse'] :: PurchaseOfferingResponse -> Maybe Reservation

-- | The response's http status code.
[$sel:httpStatus:PurchaseOfferingResponse'] :: PurchaseOfferingResponse -> Int

-- | Create a value of <a>PurchaseOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservation:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_reservation</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_httpStatus</a> - The response's http
--   status code.
newPurchaseOfferingResponse :: Int -> PurchaseOfferingResponse

-- | Undocumented member.
purchaseOfferingResponse_reservation :: Lens' PurchaseOfferingResponse (Maybe Reservation)

-- | The response's http status code.
purchaseOfferingResponse_httpStatus :: Lens' PurchaseOfferingResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance GHC.Show.Show Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance GHC.Read.Read Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance GHC.Classes.Eq Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance GHC.Generics.Generic Amazonka.MediaConnect.PurchaseOffering.PurchaseOfferingResponse
instance GHC.Show.Show Amazonka.MediaConnect.PurchaseOffering.PurchaseOfferingResponse
instance GHC.Read.Read Amazonka.MediaConnect.PurchaseOffering.PurchaseOfferingResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.PurchaseOffering.PurchaseOfferingResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance Control.DeepSeq.NFData Amazonka.MediaConnect.PurchaseOffering.PurchaseOfferingResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance Control.DeepSeq.NFData Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.PurchaseOffering.PurchaseOffering


-- | List all tags on an AWS Elemental MediaConnect resource
module Amazonka.MediaConnect.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource for which to list the tags.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the AWS Elemental MediaConnect resource for
--   which to list the tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource for which to list the tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | A map from tag keys to values. Tag keys can have a maximum character
--   length of 128 characters, and tag values can have a maximum length of
--   256 characters.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A map from tag keys to
--   values. Tag keys can have a maximum character length of 128
--   characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A map from tag keys to values. Tag keys can have a maximum character
--   length of 128 characters, and tag values can have a maximum length of
--   256 characters.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.MediaConnect.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.MediaConnect.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.MediaConnect.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.ListTagsForResource.ListTagsForResource


-- | Displays a list of all reservations that have been purchased by this
--   account in the current AWS Region. This list includes all reservations
--   in all states (such as active and expired).
--   
--   This operation returns paginated results.
module Amazonka.MediaConnect.ListReservations

-- | <i>See:</i> <a>newListReservations</a> smart constructor.
data ListReservations
ListReservations' :: Maybe Text -> Maybe Natural -> ListReservations

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListReservations request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
[$sel:nextToken:ListReservations'] :: ListReservations -> Maybe Text

-- | The maximum number of results to return per API request. For example,
--   you submit a ListReservations request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 10 results per page.
[$sel:maxResults:ListReservations'] :: ListReservations -> Maybe Natural

-- | Create a value of <a>ListReservations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReservations'</a>,
--   <a>listReservations_nextToken</a> - The token that identifies which
--   batch of results that you want to see. For example, you submit a
--   ListReservations request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListOfferings request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListReservations'</a>,
--   <a>listReservations_maxResults</a> - The maximum number of results to
--   return per API request. For example, you submit a ListReservations
--   request with MaxResults set at 5. Although 20 items match your
--   request, the service returns no more than the first 5 items. (The
--   service also returns a NextToken value that you can use to fetch the
--   next batch of results.) The service might return fewer results than
--   the MaxResults value. If MaxResults is not included in the request,
--   the service defaults to pagination with a maximum of 10 results per
--   page.
newListReservations :: ListReservations

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListReservations request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
listReservations_nextToken :: Lens' ListReservations (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListReservations request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 10 results per page.
listReservations_maxResults :: Lens' ListReservations (Maybe Natural)

-- | <i>See:</i> <a>newListReservationsResponse</a> smart constructor.
data ListReservationsResponse
ListReservationsResponse' :: Maybe Text -> Maybe [Reservation] -> Int -> ListReservationsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListReservations request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListReservations request a second time and specify the NextToken
--   value.
[$sel:nextToken:ListReservationsResponse'] :: ListReservationsResponse -> Maybe Text

-- | A list of all reservations that have been purchased by this account in
--   the current AWS Region.
[$sel:reservations:ListReservationsResponse'] :: ListReservationsResponse -> Maybe [Reservation]

-- | The response's http status code.
[$sel:httpStatus:ListReservationsResponse'] :: ListReservationsResponse -> Int

-- | Create a value of <a>ListReservationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReservations'</a>,
--   <a>listReservationsResponse_nextToken</a> - The token that identifies
--   which batch of results that you want to see. For example, you submit a
--   ListReservations request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListReservations request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:reservations:ListReservationsResponse'</a>,
--   <a>listReservationsResponse_reservations</a> - A list of all
--   reservations that have been purchased by this account in the current
--   AWS Region.
--   
--   <a>$sel:httpStatus:ListReservationsResponse'</a>,
--   <a>listReservationsResponse_httpStatus</a> - The response's http
--   status code.
newListReservationsResponse :: Int -> ListReservationsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListReservations request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListReservations request a second time and specify the NextToken
--   value.
listReservationsResponse_nextToken :: Lens' ListReservationsResponse (Maybe Text)

-- | A list of all reservations that have been purchased by this account in
--   the current AWS Region.
listReservationsResponse_reservations :: Lens' ListReservationsResponse (Maybe [Reservation])

-- | The response's http status code.
listReservationsResponse_httpStatus :: Lens' ListReservationsResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.ListReservations.ListReservations
instance GHC.Show.Show Amazonka.MediaConnect.ListReservations.ListReservations
instance GHC.Read.Read Amazonka.MediaConnect.ListReservations.ListReservations
instance GHC.Classes.Eq Amazonka.MediaConnect.ListReservations.ListReservations
instance GHC.Generics.Generic Amazonka.MediaConnect.ListReservations.ListReservationsResponse
instance GHC.Show.Show Amazonka.MediaConnect.ListReservations.ListReservationsResponse
instance GHC.Read.Read Amazonka.MediaConnect.ListReservations.ListReservationsResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.ListReservations.ListReservationsResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.ListReservations.ListReservations
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListReservations.ListReservationsResponse
instance Amazonka.Pager.AWSPager Amazonka.MediaConnect.ListReservations.ListReservations
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.ListReservations.ListReservations
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListReservations.ListReservations
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.ListReservations.ListReservations
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.ListReservations.ListReservations
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.ListReservations.ListReservations


-- | Displays a list of all offerings that are available to this account in
--   the current AWS Region. If you have an active reservation (which means
--   you've purchased an offering that has already started and hasn't
--   expired yet), your account isn't eligible for other offerings.
--   
--   This operation returns paginated results.
module Amazonka.MediaConnect.ListOfferings

-- | <i>See:</i> <a>newListOfferings</a> smart constructor.
data ListOfferings
ListOfferings' :: Maybe Text -> Maybe Natural -> ListOfferings

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
[$sel:nextToken:ListOfferings'] :: ListOfferings -> Maybe Text

-- | The maximum number of results to return per API request. For example,
--   you submit a ListOfferings request with MaxResults set at 5. Although
--   20 items match your request, the service returns no more than the
--   first 5 items. (The service also returns a NextToken value that you
--   can use to fetch the next batch of results.) The service might return
--   fewer results than the MaxResults value. If MaxResults is not included
--   in the request, the service defaults to pagination with a maximum of
--   10 results per page.
[$sel:maxResults:ListOfferings'] :: ListOfferings -> Maybe Natural

-- | Create a value of <a>ListOfferings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>, <a>listOfferings_nextToken</a> -
--   The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListOfferings'</a>, <a>listOfferings_maxResults</a>
--   - The maximum number of results to return per API request. For
--   example, you submit a ListOfferings request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 10 results per page.
newListOfferings :: ListOfferings

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
listOfferings_nextToken :: Lens' ListOfferings (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListOfferings request with MaxResults set at 5. Although
--   20 items match your request, the service returns no more than the
--   first 5 items. (The service also returns a NextToken value that you
--   can use to fetch the next batch of results.) The service might return
--   fewer results than the MaxResults value. If MaxResults is not included
--   in the request, the service defaults to pagination with a maximum of
--   10 results per page.
listOfferings_maxResults :: Lens' ListOfferings (Maybe Natural)

-- | <i>See:</i> <a>newListOfferingsResponse</a> smart constructor.
data ListOfferingsResponse
ListOfferingsResponse' :: Maybe Text -> Maybe [Offering] -> Int -> ListOfferingsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
[$sel:nextToken:ListOfferingsResponse'] :: ListOfferingsResponse -> Maybe Text

-- | A list of offerings that are available to this account in the current
--   AWS Region.
[$sel:offerings:ListOfferingsResponse'] :: ListOfferingsResponse -> Maybe [Offering]

-- | The response's http status code.
[$sel:httpStatus:ListOfferingsResponse'] :: ListOfferingsResponse -> Int

-- | Create a value of <a>ListOfferingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>,
--   <a>listOfferingsResponse_nextToken</a> - The token that identifies
--   which batch of results that you want to see. For example, you submit a
--   ListOfferings request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListOfferings request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:offerings:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_offerings</a> - A list of offerings that are
--   available to this account in the current AWS Region.
--   
--   <a>$sel:httpStatus:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_httpStatus</a> - The response's http status
--   code.
newListOfferingsResponse :: Int -> ListOfferingsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
listOfferingsResponse_nextToken :: Lens' ListOfferingsResponse (Maybe Text)

-- | A list of offerings that are available to this account in the current
--   AWS Region.
listOfferingsResponse_offerings :: Lens' ListOfferingsResponse (Maybe [Offering])

-- | The response's http status code.
listOfferingsResponse_httpStatus :: Lens' ListOfferingsResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.ListOfferings.ListOfferings
instance GHC.Show.Show Amazonka.MediaConnect.ListOfferings.ListOfferings
instance GHC.Read.Read Amazonka.MediaConnect.ListOfferings.ListOfferings
instance GHC.Classes.Eq Amazonka.MediaConnect.ListOfferings.ListOfferings
instance GHC.Generics.Generic Amazonka.MediaConnect.ListOfferings.ListOfferingsResponse
instance GHC.Show.Show Amazonka.MediaConnect.ListOfferings.ListOfferingsResponse
instance GHC.Read.Read Amazonka.MediaConnect.ListOfferings.ListOfferingsResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.ListOfferings.ListOfferingsResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.ListOfferings.ListOfferings
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListOfferings.ListOfferingsResponse
instance Amazonka.Pager.AWSPager Amazonka.MediaConnect.ListOfferings.ListOfferings
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.ListOfferings.ListOfferings
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListOfferings.ListOfferings
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.ListOfferings.ListOfferings
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.ListOfferings.ListOfferings
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.ListOfferings.ListOfferings


-- | Displays a list of flows that are associated with this account. This
--   request returns a paginated result.
--   
--   This operation returns paginated results.
module Amazonka.MediaConnect.ListFlows

-- | <i>See:</i> <a>newListFlows</a> smart constructor.
data ListFlows
ListFlows' :: Maybe Text -> Maybe Natural -> ListFlows

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
[$sel:nextToken:ListFlows'] :: ListFlows -> Maybe Text

-- | The maximum number of results to return per API request. For example,
--   you submit a ListFlows request with MaxResults set at 5. Although 20
--   items match your request, the service returns no more than the first 5
--   items. (The service also returns a NextToken value that you can use to
--   fetch the next batch of results.) The service might return fewer
--   results than the MaxResults value. If MaxResults is not included in
--   the request, the service defaults to pagination with a maximum of 10
--   results per page.
[$sel:maxResults:ListFlows'] :: ListFlows -> Maybe Natural

-- | Create a value of <a>ListFlows</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFlows'</a>, <a>listFlows_nextToken</a> - The
--   token that identifies which batch of results that you want to see. For
--   example, you submit a ListFlows request with MaxResults set at 5. The
--   service returns the first batch of results (up to 5) and a NextToken
--   value. To see the next batch of results, you can submit the ListFlows
--   request a second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListFlows'</a>, <a>listFlows_maxResults</a> - The
--   maximum number of results to return per API request. For example, you
--   submit a ListFlows request with MaxResults set at 5. Although 20 items
--   match your request, the service returns no more than the first 5
--   items. (The service also returns a NextToken value that you can use to
--   fetch the next batch of results.) The service might return fewer
--   results than the MaxResults value. If MaxResults is not included in
--   the request, the service defaults to pagination with a maximum of 10
--   results per page.
newListFlows :: ListFlows

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
listFlows_nextToken :: Lens' ListFlows (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListFlows request with MaxResults set at 5. Although 20
--   items match your request, the service returns no more than the first 5
--   items. (The service also returns a NextToken value that you can use to
--   fetch the next batch of results.) The service might return fewer
--   results than the MaxResults value. If MaxResults is not included in
--   the request, the service defaults to pagination with a maximum of 10
--   results per page.
listFlows_maxResults :: Lens' ListFlows (Maybe Natural)

-- | <i>See:</i> <a>newListFlowsResponse</a> smart constructor.
data ListFlowsResponse
ListFlowsResponse' :: Maybe Text -> Maybe [ListedFlow] -> Int -> ListFlowsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
[$sel:nextToken:ListFlowsResponse'] :: ListFlowsResponse -> Maybe Text

-- | A list of flow summaries.
[$sel:flows:ListFlowsResponse'] :: ListFlowsResponse -> Maybe [ListedFlow]

-- | The response's http status code.
[$sel:httpStatus:ListFlowsResponse'] :: ListFlowsResponse -> Int

-- | Create a value of <a>ListFlowsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFlows'</a>, <a>listFlowsResponse_nextToken</a> -
--   The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
--   
--   <a>$sel:flows:ListFlowsResponse'</a>, <a>listFlowsResponse_flows</a> -
--   A list of flow summaries.
--   
--   <a>$sel:httpStatus:ListFlowsResponse'</a>,
--   <a>listFlowsResponse_httpStatus</a> - The response's http status code.
newListFlowsResponse :: Int -> ListFlowsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
listFlowsResponse_nextToken :: Lens' ListFlowsResponse (Maybe Text)

-- | A list of flow summaries.
listFlowsResponse_flows :: Lens' ListFlowsResponse (Maybe [ListedFlow])

-- | The response's http status code.
listFlowsResponse_httpStatus :: Lens' ListFlowsResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.ListFlows.ListFlows
instance GHC.Show.Show Amazonka.MediaConnect.ListFlows.ListFlows
instance GHC.Read.Read Amazonka.MediaConnect.ListFlows.ListFlows
instance GHC.Classes.Eq Amazonka.MediaConnect.ListFlows.ListFlows
instance GHC.Generics.Generic Amazonka.MediaConnect.ListFlows.ListFlowsResponse
instance GHC.Show.Show Amazonka.MediaConnect.ListFlows.ListFlowsResponse
instance GHC.Read.Read Amazonka.MediaConnect.ListFlows.ListFlowsResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.ListFlows.ListFlowsResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.ListFlows.ListFlows
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListFlows.ListFlowsResponse
instance Amazonka.Pager.AWSPager Amazonka.MediaConnect.ListFlows.ListFlows
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.ListFlows.ListFlows
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListFlows.ListFlows
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.ListFlows.ListFlows
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.ListFlows.ListFlows
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.ListFlows.ListFlows


-- | Displays a list of all entitlements that have been granted to this
--   account. This request returns 20 results per page.
--   
--   This operation returns paginated results.
module Amazonka.MediaConnect.ListEntitlements

-- | <i>See:</i> <a>newListEntitlements</a> smart constructor.
data ListEntitlements
ListEntitlements' :: Maybe Text -> Maybe Natural -> ListEntitlements

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListEntitlements request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListEntitlements request a second time and specify the NextToken
--   value.
[$sel:nextToken:ListEntitlements'] :: ListEntitlements -> Maybe Text

-- | The maximum number of results to return per API request. For example,
--   you submit a ListEntitlements request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 20 results per page.
[$sel:maxResults:ListEntitlements'] :: ListEntitlements -> Maybe Natural

-- | Create a value of <a>ListEntitlements</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEntitlements'</a>,
--   <a>listEntitlements_nextToken</a> - The token that identifies which
--   batch of results that you want to see. For example, you submit a
--   ListEntitlements request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListEntitlements request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListEntitlements'</a>,
--   <a>listEntitlements_maxResults</a> - The maximum number of results to
--   return per API request. For example, you submit a ListEntitlements
--   request with MaxResults set at 5. Although 20 items match your
--   request, the service returns no more than the first 5 items. (The
--   service also returns a NextToken value that you can use to fetch the
--   next batch of results.) The service might return fewer results than
--   the MaxResults value. If MaxResults is not included in the request,
--   the service defaults to pagination with a maximum of 20 results per
--   page.
newListEntitlements :: ListEntitlements

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListEntitlements request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListEntitlements request a second time and specify the NextToken
--   value.
listEntitlements_nextToken :: Lens' ListEntitlements (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListEntitlements request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 20 results per page.
listEntitlements_maxResults :: Lens' ListEntitlements (Maybe Natural)

-- | <i>See:</i> <a>newListEntitlementsResponse</a> smart constructor.
data ListEntitlementsResponse
ListEntitlementsResponse' :: Maybe Text -> Maybe [ListedEntitlement] -> Int -> ListEntitlementsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListEntitlements request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListEntitlements request a second time and specify the NextToken
--   value.
[$sel:nextToken:ListEntitlementsResponse'] :: ListEntitlementsResponse -> Maybe Text

-- | A list of entitlements that have been granted to you from other AWS
--   accounts.
[$sel:entitlements:ListEntitlementsResponse'] :: ListEntitlementsResponse -> Maybe [ListedEntitlement]

-- | The response's http status code.
[$sel:httpStatus:ListEntitlementsResponse'] :: ListEntitlementsResponse -> Int

-- | Create a value of <a>ListEntitlementsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEntitlements'</a>,
--   <a>listEntitlementsResponse_nextToken</a> - The token that identifies
--   which batch of results that you want to see. For example, you submit a
--   ListEntitlements request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListEntitlements request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:entitlements:ListEntitlementsResponse'</a>,
--   <a>listEntitlementsResponse_entitlements</a> - A list of entitlements
--   that have been granted to you from other AWS accounts.
--   
--   <a>$sel:httpStatus:ListEntitlementsResponse'</a>,
--   <a>listEntitlementsResponse_httpStatus</a> - The response's http
--   status code.
newListEntitlementsResponse :: Int -> ListEntitlementsResponse

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListEntitlements request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListEntitlements request a second time and specify the NextToken
--   value.
listEntitlementsResponse_nextToken :: Lens' ListEntitlementsResponse (Maybe Text)

-- | A list of entitlements that have been granted to you from other AWS
--   accounts.
listEntitlementsResponse_entitlements :: Lens' ListEntitlementsResponse (Maybe [ListedEntitlement])

-- | The response's http status code.
listEntitlementsResponse_httpStatus :: Lens' ListEntitlementsResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance GHC.Show.Show Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance GHC.Read.Read Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance GHC.Classes.Eq Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance GHC.Generics.Generic Amazonka.MediaConnect.ListEntitlements.ListEntitlementsResponse
instance GHC.Show.Show Amazonka.MediaConnect.ListEntitlements.ListEntitlementsResponse
instance GHC.Read.Read Amazonka.MediaConnect.ListEntitlements.ListEntitlementsResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.ListEntitlements.ListEntitlementsResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListEntitlements.ListEntitlementsResponse
instance Amazonka.Pager.AWSPager Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance Control.DeepSeq.NFData Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.ListEntitlements.ListEntitlements
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.ListEntitlements.ListEntitlements


-- | Grants entitlements to an existing flow.
module Amazonka.MediaConnect.GrantFlowEntitlements

-- | A request to grant entitlements on a flow.
--   
--   <i>See:</i> <a>newGrantFlowEntitlements</a> smart constructor.
data GrantFlowEntitlements
GrantFlowEntitlements' :: Text -> [GrantEntitlementRequest] -> GrantFlowEntitlements

-- | The flow that you want to grant entitlements on.
[$sel:flowArn:GrantFlowEntitlements'] :: GrantFlowEntitlements -> Text

-- | The list of entitlements that you want to grant.
[$sel:entitlements:GrantFlowEntitlements'] :: GrantFlowEntitlements -> [GrantEntitlementRequest]

-- | Create a value of <a>GrantFlowEntitlements</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlements_flowArn</a> - The flow that you want to grant
--   entitlements on.
--   
--   <a>$sel:entitlements:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlements_entitlements</a> - The list of entitlements
--   that you want to grant.
newGrantFlowEntitlements :: Text -> GrantFlowEntitlements

-- | The flow that you want to grant entitlements on.
grantFlowEntitlements_flowArn :: Lens' GrantFlowEntitlements Text

-- | The list of entitlements that you want to grant.
grantFlowEntitlements_entitlements :: Lens' GrantFlowEntitlements [GrantEntitlementRequest]

-- | <i>See:</i> <a>newGrantFlowEntitlementsResponse</a> smart constructor.
data GrantFlowEntitlementsResponse
GrantFlowEntitlementsResponse' :: Maybe Text -> Maybe [Entitlement] -> Int -> GrantFlowEntitlementsResponse

-- | The ARN of the flow that these entitlements were granted to.
[$sel:flowArn:GrantFlowEntitlementsResponse'] :: GrantFlowEntitlementsResponse -> Maybe Text

-- | The entitlements that were just granted.
[$sel:entitlements:GrantFlowEntitlementsResponse'] :: GrantFlowEntitlementsResponse -> Maybe [Entitlement]

-- | The response's http status code.
[$sel:httpStatus:GrantFlowEntitlementsResponse'] :: GrantFlowEntitlementsResponse -> Int

-- | Create a value of <a>GrantFlowEntitlementsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlementsResponse_flowArn</a> - The ARN of the flow
--   that these entitlements were granted to.
--   
--   <a>$sel:entitlements:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlementsResponse_entitlements</a> - The entitlements
--   that were just granted.
--   
--   <a>$sel:httpStatus:GrantFlowEntitlementsResponse'</a>,
--   <a>grantFlowEntitlementsResponse_httpStatus</a> - The response's http
--   status code.
newGrantFlowEntitlementsResponse :: Int -> GrantFlowEntitlementsResponse

-- | The ARN of the flow that these entitlements were granted to.
grantFlowEntitlementsResponse_flowArn :: Lens' GrantFlowEntitlementsResponse (Maybe Text)

-- | The entitlements that were just granted.
grantFlowEntitlementsResponse_entitlements :: Lens' GrantFlowEntitlementsResponse (Maybe [Entitlement])

-- | The response's http status code.
grantFlowEntitlementsResponse_httpStatus :: Lens' GrantFlowEntitlementsResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance GHC.Show.Show Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance GHC.Read.Read Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance GHC.Classes.Eq Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance GHC.Generics.Generic Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlementsResponse
instance GHC.Show.Show Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlementsResponse
instance GHC.Read.Read Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlementsResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlementsResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance Control.DeepSeq.NFData Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlementsResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance Control.DeepSeq.NFData Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.GrantFlowEntitlements.GrantFlowEntitlements


-- | Displays the details of a reservation. The response includes the
--   reservation name, state, start date and time, and the details of the
--   offering that make up the rest of the reservation (such as price,
--   duration, and outbound bandwidth).
module Amazonka.MediaConnect.DescribeReservation

-- | <i>See:</i> <a>newDescribeReservation</a> smart constructor.
data DescribeReservation
DescribeReservation' :: Text -> DescribeReservation

-- | The Amazon Resource Name (ARN) of the reservation.
[$sel:reservationArn:DescribeReservation'] :: DescribeReservation -> Text

-- | Create a value of <a>DescribeReservation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservationArn:DescribeReservation'</a>,
--   <a>describeReservation_reservationArn</a> - The Amazon Resource Name
--   (ARN) of the reservation.
newDescribeReservation :: Text -> DescribeReservation

-- | The Amazon Resource Name (ARN) of the reservation.
describeReservation_reservationArn :: Lens' DescribeReservation Text

-- | <i>See:</i> <a>newDescribeReservationResponse</a> smart constructor.
data DescribeReservationResponse
DescribeReservationResponse' :: Maybe Reservation -> Int -> DescribeReservationResponse
[$sel:reservation:DescribeReservationResponse'] :: DescribeReservationResponse -> Maybe Reservation

-- | The response's http status code.
[$sel:httpStatus:DescribeReservationResponse'] :: DescribeReservationResponse -> Int

-- | Create a value of <a>DescribeReservationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservation:DescribeReservationResponse'</a>,
--   <a>describeReservationResponse_reservation</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeReservationResponse'</a>,
--   <a>describeReservationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeReservationResponse :: Int -> DescribeReservationResponse

-- | Undocumented member.
describeReservationResponse_reservation :: Lens' DescribeReservationResponse (Maybe Reservation)

-- | The response's http status code.
describeReservationResponse_httpStatus :: Lens' DescribeReservationResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance GHC.Show.Show Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance GHC.Read.Read Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance GHC.Classes.Eq Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance GHC.Generics.Generic Amazonka.MediaConnect.DescribeReservation.DescribeReservationResponse
instance GHC.Show.Show Amazonka.MediaConnect.DescribeReservation.DescribeReservationResponse
instance GHC.Read.Read Amazonka.MediaConnect.DescribeReservation.DescribeReservationResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.DescribeReservation.DescribeReservationResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DescribeReservation.DescribeReservationResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.DescribeReservation.DescribeReservation
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.DescribeReservation.DescribeReservation


-- | Displays the details of an offering. The response includes the
--   offering description, duration, outbound bandwidth, price, and Amazon
--   Resource Name (ARN).
module Amazonka.MediaConnect.DescribeOffering

-- | <i>See:</i> <a>newDescribeOffering</a> smart constructor.
data DescribeOffering
DescribeOffering' :: Text -> DescribeOffering

-- | The Amazon Resource Name (ARN) of the offering.
[$sel:offeringArn:DescribeOffering'] :: DescribeOffering -> Text

-- | Create a value of <a>DescribeOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringArn:DescribeOffering'</a>,
--   <a>describeOffering_offeringArn</a> - The Amazon Resource Name (ARN)
--   of the offering.
newDescribeOffering :: Text -> DescribeOffering

-- | The Amazon Resource Name (ARN) of the offering.
describeOffering_offeringArn :: Lens' DescribeOffering Text

-- | <i>See:</i> <a>newDescribeOfferingResponse</a> smart constructor.
data DescribeOfferingResponse
DescribeOfferingResponse' :: Maybe Offering -> Int -> DescribeOfferingResponse
[$sel:offering:DescribeOfferingResponse'] :: DescribeOfferingResponse -> Maybe Offering

-- | The response's http status code.
[$sel:httpStatus:DescribeOfferingResponse'] :: DescribeOfferingResponse -> Int

-- | Create a value of <a>DescribeOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offering:DescribeOfferingResponse'</a>,
--   <a>describeOfferingResponse_offering</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeOfferingResponse'</a>,
--   <a>describeOfferingResponse_httpStatus</a> - The response's http
--   status code.
newDescribeOfferingResponse :: Int -> DescribeOfferingResponse

-- | Undocumented member.
describeOfferingResponse_offering :: Lens' DescribeOfferingResponse (Maybe Offering)

-- | The response's http status code.
describeOfferingResponse_httpStatus :: Lens' DescribeOfferingResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance GHC.Show.Show Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance GHC.Read.Read Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance GHC.Classes.Eq Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance GHC.Generics.Generic Amazonka.MediaConnect.DescribeOffering.DescribeOfferingResponse
instance GHC.Show.Show Amazonka.MediaConnect.DescribeOffering.DescribeOfferingResponse
instance GHC.Read.Read Amazonka.MediaConnect.DescribeOffering.DescribeOfferingResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.DescribeOffering.DescribeOfferingResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DescribeOffering.DescribeOfferingResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.DescribeOffering.DescribeOffering
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.DescribeOffering.DescribeOffering


-- | Displays the details of a flow. The response includes the flow ARN,
--   name, and Availability Zone, as well as details about the source,
--   outputs, and entitlements.
module Amazonka.MediaConnect.DescribeFlow

-- | <i>See:</i> <a>newDescribeFlow</a> smart constructor.
data DescribeFlow
DescribeFlow' :: Text -> DescribeFlow

-- | The ARN of the flow that you want to describe.
[$sel:flowArn:DescribeFlow'] :: DescribeFlow -> Text

-- | Create a value of <a>DescribeFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:DescribeFlow'</a>, <a>describeFlow_flowArn</a> - The
--   ARN of the flow that you want to describe.
newDescribeFlow :: Text -> DescribeFlow

-- | The ARN of the flow that you want to describe.
describeFlow_flowArn :: Lens' DescribeFlow Text

-- | <i>See:</i> <a>newDescribeFlowResponse</a> smart constructor.
data DescribeFlowResponse
DescribeFlowResponse' :: Maybe Flow -> Maybe Messages -> Int -> DescribeFlowResponse
[$sel:flow:DescribeFlowResponse'] :: DescribeFlowResponse -> Maybe Flow
[$sel:messages:DescribeFlowResponse'] :: DescribeFlowResponse -> Maybe Messages

-- | The response's http status code.
[$sel:httpStatus:DescribeFlowResponse'] :: DescribeFlowResponse -> Int

-- | Create a value of <a>DescribeFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flow:DescribeFlowResponse'</a>,
--   <a>describeFlowResponse_flow</a> - Undocumented member.
--   
--   <a>$sel:messages:DescribeFlowResponse'</a>,
--   <a>describeFlowResponse_messages</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeFlowResponse'</a>,
--   <a>describeFlowResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFlowResponse :: Int -> DescribeFlowResponse

-- | Undocumented member.
describeFlowResponse_flow :: Lens' DescribeFlowResponse (Maybe Flow)

-- | Undocumented member.
describeFlowResponse_messages :: Lens' DescribeFlowResponse (Maybe Messages)

-- | The response's http status code.
describeFlowResponse_httpStatus :: Lens' DescribeFlowResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance GHC.Show.Show Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance GHC.Read.Read Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance GHC.Classes.Eq Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance GHC.Generics.Generic Amazonka.MediaConnect.DescribeFlow.DescribeFlowResponse
instance GHC.Show.Show Amazonka.MediaConnect.DescribeFlow.DescribeFlowResponse
instance GHC.Read.Read Amazonka.MediaConnect.DescribeFlow.DescribeFlowResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.DescribeFlow.DescribeFlowResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DescribeFlow.DescribeFlowResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.DescribeFlow.DescribeFlow
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.DescribeFlow.DescribeFlow


-- | Deletes a flow. Before you can delete a flow, you must stop the flow.
module Amazonka.MediaConnect.DeleteFlow

-- | <i>See:</i> <a>newDeleteFlow</a> smart constructor.
data DeleteFlow
DeleteFlow' :: Text -> DeleteFlow

-- | The ARN of the flow that you want to delete.
[$sel:flowArn:DeleteFlow'] :: DeleteFlow -> Text

-- | Create a value of <a>DeleteFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:DeleteFlow'</a>, <a>deleteFlow_flowArn</a> - The ARN
--   of the flow that you want to delete.
newDeleteFlow :: Text -> DeleteFlow

-- | The ARN of the flow that you want to delete.
deleteFlow_flowArn :: Lens' DeleteFlow Text

-- | <i>See:</i> <a>newDeleteFlowResponse</a> smart constructor.
data DeleteFlowResponse
DeleteFlowResponse' :: Maybe Status -> Maybe Text -> Int -> DeleteFlowResponse

-- | The status of the flow when the DeleteFlow process begins.
[$sel:status:DeleteFlowResponse'] :: DeleteFlowResponse -> Maybe Status

-- | The ARN of the flow that was deleted.
[$sel:flowArn:DeleteFlowResponse'] :: DeleteFlowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteFlowResponse'] :: DeleteFlowResponse -> Int

-- | Create a value of <a>DeleteFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteFlowResponse'</a>,
--   <a>deleteFlowResponse_status</a> - The status of the flow when the
--   DeleteFlow process begins.
--   
--   <a>$sel:flowArn:DeleteFlow'</a>, <a>deleteFlowResponse_flowArn</a> -
--   The ARN of the flow that was deleted.
--   
--   <a>$sel:httpStatus:DeleteFlowResponse'</a>,
--   <a>deleteFlowResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFlowResponse :: Int -> DeleteFlowResponse

-- | The status of the flow when the DeleteFlow process begins.
deleteFlowResponse_status :: Lens' DeleteFlowResponse (Maybe Status)

-- | The ARN of the flow that was deleted.
deleteFlowResponse_flowArn :: Lens' DeleteFlowResponse (Maybe Text)

-- | The response's http status code.
deleteFlowResponse_httpStatus :: Lens' DeleteFlowResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance GHC.Show.Show Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance GHC.Read.Read Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance GHC.Classes.Eq Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance GHC.Generics.Generic Amazonka.MediaConnect.DeleteFlow.DeleteFlowResponse
instance GHC.Show.Show Amazonka.MediaConnect.DeleteFlow.DeleteFlowResponse
instance GHC.Read.Read Amazonka.MediaConnect.DeleteFlow.DeleteFlowResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.DeleteFlow.DeleteFlowResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DeleteFlow.DeleteFlowResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.DeleteFlow.DeleteFlow
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.DeleteFlow.DeleteFlow


-- | Creates a new flow. The request must include one source. The request
--   optionally can include outputs (up to 50) and entitlements (up to 50).
module Amazonka.MediaConnect.CreateFlow

-- | Creates a new flow. The request must include one source. The request
--   optionally can include outputs (up to 50) and entitlements (up to 50).
--   
--   <i>See:</i> <a>newCreateFlow</a> smart constructor.
data CreateFlow
CreateFlow' :: Maybe [AddMediaStreamRequest] -> Maybe FailoverConfig -> Maybe [VpcInterfaceRequest] -> Maybe [SetSourceRequest] -> Maybe [AddOutputRequest] -> Maybe Text -> Maybe [GrantEntitlementRequest] -> Maybe SetSourceRequest -> Text -> CreateFlow

-- | The media streams that you want to add to the flow. You can associate
--   these media streams with sources and outputs on the flow.
[$sel:mediaStreams:CreateFlow'] :: CreateFlow -> Maybe [AddMediaStreamRequest]
[$sel:sourceFailoverConfig:CreateFlow'] :: CreateFlow -> Maybe FailoverConfig

-- | The VPC interfaces you want on the flow.
[$sel:vpcInterfaces:CreateFlow'] :: CreateFlow -> Maybe [VpcInterfaceRequest]
[$sel:sources:CreateFlow'] :: CreateFlow -> Maybe [SetSourceRequest]

-- | The outputs that you want to add to this flow.
[$sel:outputs:CreateFlow'] :: CreateFlow -> Maybe [AddOutputRequest]

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS
--   Region.
[$sel:availabilityZone:CreateFlow'] :: CreateFlow -> Maybe Text

-- | The entitlements that you want to grant on a flow.
[$sel:entitlements:CreateFlow'] :: CreateFlow -> Maybe [GrantEntitlementRequest]
[$sel:source:CreateFlow'] :: CreateFlow -> Maybe SetSourceRequest

-- | The name of the flow.
[$sel:name:CreateFlow'] :: CreateFlow -> Text

-- | Create a value of <a>CreateFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mediaStreams:CreateFlow'</a>, <a>createFlow_mediaStreams</a> -
--   The media streams that you want to add to the flow. You can associate
--   these media streams with sources and outputs on the flow.
--   
--   <a>$sel:sourceFailoverConfig:CreateFlow'</a>,
--   <a>createFlow_sourceFailoverConfig</a> - Undocumented member.
--   
--   <a>$sel:vpcInterfaces:CreateFlow'</a>, <a>createFlow_vpcInterfaces</a>
--   - The VPC interfaces you want on the flow.
--   
--   <a>$sel:sources:CreateFlow'</a>, <a>createFlow_sources</a> -
--   Undocumented member.
--   
--   <a>$sel:outputs:CreateFlow'</a>, <a>createFlow_outputs</a> - The
--   outputs that you want to add to this flow.
--   
--   <a>$sel:availabilityZone:CreateFlow'</a>,
--   <a>createFlow_availabilityZone</a> - The Availability Zone that you
--   want to create the flow in. These options are limited to the
--   Availability Zones within the current AWS Region.
--   
--   <a>$sel:entitlements:CreateFlow'</a>, <a>createFlow_entitlements</a> -
--   The entitlements that you want to grant on a flow.
--   
--   <a>$sel:source:CreateFlow'</a>, <a>createFlow_source</a> -
--   Undocumented member.
--   
--   <a>$sel:name:CreateFlow'</a>, <a>createFlow_name</a> - The name of the
--   flow.
newCreateFlow :: Text -> CreateFlow

-- | The media streams that you want to add to the flow. You can associate
--   these media streams with sources and outputs on the flow.
createFlow_mediaStreams :: Lens' CreateFlow (Maybe [AddMediaStreamRequest])

-- | Undocumented member.
createFlow_sourceFailoverConfig :: Lens' CreateFlow (Maybe FailoverConfig)

-- | The VPC interfaces you want on the flow.
createFlow_vpcInterfaces :: Lens' CreateFlow (Maybe [VpcInterfaceRequest])

-- | Undocumented member.
createFlow_sources :: Lens' CreateFlow (Maybe [SetSourceRequest])

-- | The outputs that you want to add to this flow.
createFlow_outputs :: Lens' CreateFlow (Maybe [AddOutputRequest])

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS
--   Region.
createFlow_availabilityZone :: Lens' CreateFlow (Maybe Text)

-- | The entitlements that you want to grant on a flow.
createFlow_entitlements :: Lens' CreateFlow (Maybe [GrantEntitlementRequest])

-- | Undocumented member.
createFlow_source :: Lens' CreateFlow (Maybe SetSourceRequest)

-- | The name of the flow.
createFlow_name :: Lens' CreateFlow Text

-- | <i>See:</i> <a>newCreateFlowResponse</a> smart constructor.
data CreateFlowResponse
CreateFlowResponse' :: Maybe Flow -> Int -> CreateFlowResponse
[$sel:flow:CreateFlowResponse'] :: CreateFlowResponse -> Maybe Flow

-- | The response's http status code.
[$sel:httpStatus:CreateFlowResponse'] :: CreateFlowResponse -> Int

-- | Create a value of <a>CreateFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flow:CreateFlowResponse'</a>, <a>createFlowResponse_flow</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateFlowResponse'</a>,
--   <a>createFlowResponse_httpStatus</a> - The response's http status
--   code.
newCreateFlowResponse :: Int -> CreateFlowResponse

-- | Undocumented member.
createFlowResponse_flow :: Lens' CreateFlowResponse (Maybe Flow)

-- | The response's http status code.
createFlowResponse_httpStatus :: Lens' CreateFlowResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.CreateFlow.CreateFlow
instance GHC.Show.Show Amazonka.MediaConnect.CreateFlow.CreateFlow
instance GHC.Read.Read Amazonka.MediaConnect.CreateFlow.CreateFlow
instance GHC.Classes.Eq Amazonka.MediaConnect.CreateFlow.CreateFlow
instance GHC.Generics.Generic Amazonka.MediaConnect.CreateFlow.CreateFlowResponse
instance GHC.Show.Show Amazonka.MediaConnect.CreateFlow.CreateFlowResponse
instance GHC.Read.Read Amazonka.MediaConnect.CreateFlow.CreateFlowResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.CreateFlow.CreateFlowResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.CreateFlow.CreateFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.CreateFlow.CreateFlowResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.CreateFlow.CreateFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.CreateFlow.CreateFlow
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.CreateFlow.CreateFlow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.CreateFlow.CreateFlow
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.CreateFlow.CreateFlow
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.CreateFlow.CreateFlow


-- | Adds VPC interfaces to flow
module Amazonka.MediaConnect.AddFlowVpcInterfaces

-- | A request to add VPC interfaces to the flow.
--   
--   <i>See:</i> <a>newAddFlowVpcInterfaces</a> smart constructor.
data AddFlowVpcInterfaces
AddFlowVpcInterfaces' :: Text -> [VpcInterfaceRequest] -> AddFlowVpcInterfaces

-- | The flow that you want to mutate.
[$sel:flowArn:AddFlowVpcInterfaces'] :: AddFlowVpcInterfaces -> Text

-- | A list of VPC interfaces that you want to add.
[$sel:vpcInterfaces:AddFlowVpcInterfaces'] :: AddFlowVpcInterfaces -> [VpcInterfaceRequest]

-- | Create a value of <a>AddFlowVpcInterfaces</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfaces_flowArn</a> - The flow that you want to
--   mutate.
--   
--   <a>$sel:vpcInterfaces:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfaces_vpcInterfaces</a> - A list of VPC interfaces
--   that you want to add.
newAddFlowVpcInterfaces :: Text -> AddFlowVpcInterfaces

-- | The flow that you want to mutate.
addFlowVpcInterfaces_flowArn :: Lens' AddFlowVpcInterfaces Text

-- | A list of VPC interfaces that you want to add.
addFlowVpcInterfaces_vpcInterfaces :: Lens' AddFlowVpcInterfaces [VpcInterfaceRequest]

-- | <i>See:</i> <a>newAddFlowVpcInterfacesResponse</a> smart constructor.
data AddFlowVpcInterfacesResponse
AddFlowVpcInterfacesResponse' :: Maybe Text -> Maybe [VpcInterface] -> Int -> AddFlowVpcInterfacesResponse

-- | The ARN of the flow that these VPC interfaces were added to.
[$sel:flowArn:AddFlowVpcInterfacesResponse'] :: AddFlowVpcInterfacesResponse -> Maybe Text

-- | The details of the newly added VPC interfaces.
[$sel:vpcInterfaces:AddFlowVpcInterfacesResponse'] :: AddFlowVpcInterfacesResponse -> Maybe [VpcInterface]

-- | The response's http status code.
[$sel:httpStatus:AddFlowVpcInterfacesResponse'] :: AddFlowVpcInterfacesResponse -> Int

-- | Create a value of <a>AddFlowVpcInterfacesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfacesResponse_flowArn</a> - The ARN of the flow that
--   these VPC interfaces were added to.
--   
--   <a>$sel:vpcInterfaces:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfacesResponse_vpcInterfaces</a> - The details of the
--   newly added VPC interfaces.
--   
--   <a>$sel:httpStatus:AddFlowVpcInterfacesResponse'</a>,
--   <a>addFlowVpcInterfacesResponse_httpStatus</a> - The response's http
--   status code.
newAddFlowVpcInterfacesResponse :: Int -> AddFlowVpcInterfacesResponse

-- | The ARN of the flow that these VPC interfaces were added to.
addFlowVpcInterfacesResponse_flowArn :: Lens' AddFlowVpcInterfacesResponse (Maybe Text)

-- | The details of the newly added VPC interfaces.
addFlowVpcInterfacesResponse_vpcInterfaces :: Lens' AddFlowVpcInterfacesResponse (Maybe [VpcInterface])

-- | The response's http status code.
addFlowVpcInterfacesResponse_httpStatus :: Lens' AddFlowVpcInterfacesResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfacesResponse
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfacesResponse
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfacesResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfacesResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfacesResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.AddFlowVpcInterfaces.AddFlowVpcInterfaces


-- | Adds Sources to flow
module Amazonka.MediaConnect.AddFlowSources

-- | A request to add sources to the flow.
--   
--   <i>See:</i> <a>newAddFlowSources</a> smart constructor.
data AddFlowSources
AddFlowSources' :: Text -> [SetSourceRequest] -> AddFlowSources

-- | The flow that you want to mutate.
[$sel:flowArn:AddFlowSources'] :: AddFlowSources -> Text

-- | A list of sources that you want to add.
[$sel:sources:AddFlowSources'] :: AddFlowSources -> [SetSourceRequest]

-- | Create a value of <a>AddFlowSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowSources'</a>, <a>addFlowSources_flowArn</a> -
--   The flow that you want to mutate.
--   
--   <a>$sel:sources:AddFlowSources'</a>, <a>addFlowSources_sources</a> - A
--   list of sources that you want to add.
newAddFlowSources :: Text -> AddFlowSources

-- | The flow that you want to mutate.
addFlowSources_flowArn :: Lens' AddFlowSources Text

-- | A list of sources that you want to add.
addFlowSources_sources :: Lens' AddFlowSources [SetSourceRequest]

-- | <i>See:</i> <a>newAddFlowSourcesResponse</a> smart constructor.
data AddFlowSourcesResponse
AddFlowSourcesResponse' :: Maybe Text -> Maybe [Source] -> Int -> AddFlowSourcesResponse

-- | The ARN of the flow that these sources were added to.
[$sel:flowArn:AddFlowSourcesResponse'] :: AddFlowSourcesResponse -> Maybe Text

-- | The details of the newly added sources.
[$sel:sources:AddFlowSourcesResponse'] :: AddFlowSourcesResponse -> Maybe [Source]

-- | The response's http status code.
[$sel:httpStatus:AddFlowSourcesResponse'] :: AddFlowSourcesResponse -> Int

-- | Create a value of <a>AddFlowSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowSources'</a>,
--   <a>addFlowSourcesResponse_flowArn</a> - The ARN of the flow that these
--   sources were added to.
--   
--   <a>$sel:sources:AddFlowSources'</a>,
--   <a>addFlowSourcesResponse_sources</a> - The details of the newly added
--   sources.
--   
--   <a>$sel:httpStatus:AddFlowSourcesResponse'</a>,
--   <a>addFlowSourcesResponse_httpStatus</a> - The response's http status
--   code.
newAddFlowSourcesResponse :: Int -> AddFlowSourcesResponse

-- | The ARN of the flow that these sources were added to.
addFlowSourcesResponse_flowArn :: Lens' AddFlowSourcesResponse (Maybe Text)

-- | The details of the newly added sources.
addFlowSourcesResponse_sources :: Lens' AddFlowSourcesResponse (Maybe [Source])

-- | The response's http status code.
addFlowSourcesResponse_httpStatus :: Lens' AddFlowSourcesResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowSources.AddFlowSourcesResponse
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowSources.AddFlowSourcesResponse
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowSources.AddFlowSourcesResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowSources.AddFlowSourcesResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowSources.AddFlowSourcesResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.AddFlowSources.AddFlowSources
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.AddFlowSources.AddFlowSources


-- | Adds outputs to an existing flow. You can create up to 50 outputs per
--   flow.
module Amazonka.MediaConnect.AddFlowOutputs

-- | A request to add outputs to the specified flow.
--   
--   <i>See:</i> <a>newAddFlowOutputs</a> smart constructor.
data AddFlowOutputs
AddFlowOutputs' :: Text -> [AddOutputRequest] -> AddFlowOutputs

-- | The flow that you want to add outputs to.
[$sel:flowArn:AddFlowOutputs'] :: AddFlowOutputs -> Text

-- | A list of outputs that you want to add.
[$sel:outputs:AddFlowOutputs'] :: AddFlowOutputs -> [AddOutputRequest]

-- | Create a value of <a>AddFlowOutputs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowOutputs'</a>, <a>addFlowOutputs_flowArn</a> -
--   The flow that you want to add outputs to.
--   
--   <a>$sel:outputs:AddFlowOutputs'</a>, <a>addFlowOutputs_outputs</a> - A
--   list of outputs that you want to add.
newAddFlowOutputs :: Text -> AddFlowOutputs

-- | The flow that you want to add outputs to.
addFlowOutputs_flowArn :: Lens' AddFlowOutputs Text

-- | A list of outputs that you want to add.
addFlowOutputs_outputs :: Lens' AddFlowOutputs [AddOutputRequest]

-- | <i>See:</i> <a>newAddFlowOutputsResponse</a> smart constructor.
data AddFlowOutputsResponse
AddFlowOutputsResponse' :: Maybe Text -> Maybe [Output] -> Int -> AddFlowOutputsResponse

-- | The ARN of the flow that these outputs were added to.
[$sel:flowArn:AddFlowOutputsResponse'] :: AddFlowOutputsResponse -> Maybe Text

-- | The details of the newly added outputs.
[$sel:outputs:AddFlowOutputsResponse'] :: AddFlowOutputsResponse -> Maybe [Output]

-- | The response's http status code.
[$sel:httpStatus:AddFlowOutputsResponse'] :: AddFlowOutputsResponse -> Int

-- | Create a value of <a>AddFlowOutputsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowOutputs'</a>,
--   <a>addFlowOutputsResponse_flowArn</a> - The ARN of the flow that these
--   outputs were added to.
--   
--   <a>$sel:outputs:AddFlowOutputs'</a>,
--   <a>addFlowOutputsResponse_outputs</a> - The details of the newly added
--   outputs.
--   
--   <a>$sel:httpStatus:AddFlowOutputsResponse'</a>,
--   <a>addFlowOutputsResponse_httpStatus</a> - The response's http status
--   code.
newAddFlowOutputsResponse :: Int -> AddFlowOutputsResponse

-- | The ARN of the flow that these outputs were added to.
addFlowOutputsResponse_flowArn :: Lens' AddFlowOutputsResponse (Maybe Text)

-- | The details of the newly added outputs.
addFlowOutputsResponse_outputs :: Lens' AddFlowOutputsResponse (Maybe [Output])

-- | The response's http status code.
addFlowOutputsResponse_httpStatus :: Lens' AddFlowOutputsResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputsResponse
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputsResponse
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputsResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputsResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputsResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.AddFlowOutputs.AddFlowOutputs


-- | Adds media streams to an existing flow. After you add a media stream
--   to a flow, you can associate it with a source and/or an output that
--   uses the ST 2110 JPEG XS or CDI protocol.
module Amazonka.MediaConnect.AddFlowMediaStreams

-- | A request to add media streams to the flow.
--   
--   <i>See:</i> <a>newAddFlowMediaStreams</a> smart constructor.
data AddFlowMediaStreams
AddFlowMediaStreams' :: Text -> [AddMediaStreamRequest] -> AddFlowMediaStreams

-- | The Amazon Resource Name (ARN) of the flow.
[$sel:flowArn:AddFlowMediaStreams'] :: AddFlowMediaStreams -> Text

-- | The media streams that you want to add to the flow.
[$sel:mediaStreams:AddFlowMediaStreams'] :: AddFlowMediaStreams -> [AddMediaStreamRequest]

-- | Create a value of <a>AddFlowMediaStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreams_flowArn</a> - The Amazon Resource Name (ARN) of
--   the flow.
--   
--   <a>$sel:mediaStreams:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreams_mediaStreams</a> - The media streams that you
--   want to add to the flow.
newAddFlowMediaStreams :: Text -> AddFlowMediaStreams

-- | The Amazon Resource Name (ARN) of the flow.
addFlowMediaStreams_flowArn :: Lens' AddFlowMediaStreams Text

-- | The media streams that you want to add to the flow.
addFlowMediaStreams_mediaStreams :: Lens' AddFlowMediaStreams [AddMediaStreamRequest]

-- | <i>See:</i> <a>newAddFlowMediaStreamsResponse</a> smart constructor.
data AddFlowMediaStreamsResponse
AddFlowMediaStreamsResponse' :: Maybe Text -> Maybe [MediaStream] -> Int -> AddFlowMediaStreamsResponse

-- | The ARN of the flow that you added media streams to.
[$sel:flowArn:AddFlowMediaStreamsResponse'] :: AddFlowMediaStreamsResponse -> Maybe Text

-- | The media streams that you added to the flow.
[$sel:mediaStreams:AddFlowMediaStreamsResponse'] :: AddFlowMediaStreamsResponse -> Maybe [MediaStream]

-- | The response's http status code.
[$sel:httpStatus:AddFlowMediaStreamsResponse'] :: AddFlowMediaStreamsResponse -> Int

-- | Create a value of <a>AddFlowMediaStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreamsResponse_flowArn</a> - The ARN of the flow that
--   you added media streams to.
--   
--   <a>$sel:mediaStreams:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreamsResponse_mediaStreams</a> - The media streams
--   that you added to the flow.
--   
--   <a>$sel:httpStatus:AddFlowMediaStreamsResponse'</a>,
--   <a>addFlowMediaStreamsResponse_httpStatus</a> - The response's http
--   status code.
newAddFlowMediaStreamsResponse :: Int -> AddFlowMediaStreamsResponse

-- | The ARN of the flow that you added media streams to.
addFlowMediaStreamsResponse_flowArn :: Lens' AddFlowMediaStreamsResponse (Maybe Text)

-- | The media streams that you added to the flow.
addFlowMediaStreamsResponse_mediaStreams :: Lens' AddFlowMediaStreamsResponse (Maybe [MediaStream])

-- | The response's http status code.
addFlowMediaStreamsResponse_httpStatus :: Lens' AddFlowMediaStreamsResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance GHC.Generics.Generic Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreamsResponse
instance GHC.Show.Show Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreamsResponse
instance GHC.Read.Read Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreamsResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreamsResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreamsResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance Control.DeepSeq.NFData Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.AddFlowMediaStreams.AddFlowMediaStreams


-- | Deletes specified tags from a resource.
module Amazonka.MediaConnect.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | The keys of the tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource from which to delete tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   identifies the AWS Elemental MediaConnect resource from which to
--   delete tags.
newUntagResource :: Text -> UntagResource

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource from which to delete tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.MediaConnect.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.MediaConnect.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.MediaConnect.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.MediaConnect.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.MediaConnect.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.MediaConnect.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.MediaConnect.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.UntagResource.UntagResource


-- | Updates flow
module Amazonka.MediaConnect.UpdateFlow

-- | A request to update flow.
--   
--   <i>See:</i> <a>newUpdateFlow</a> smart constructor.
data UpdateFlow
UpdateFlow' :: Maybe UpdateFailoverConfig -> Text -> UpdateFlow
[$sel:sourceFailoverConfig:UpdateFlow'] :: UpdateFlow -> Maybe UpdateFailoverConfig

-- | The flow that you want to update.
[$sel:flowArn:UpdateFlow'] :: UpdateFlow -> Text

-- | Create a value of <a>UpdateFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceFailoverConfig:UpdateFlow'</a>,
--   <a>updateFlow_sourceFailoverConfig</a> - Undocumented member.
--   
--   <a>$sel:flowArn:UpdateFlow'</a>, <a>updateFlow_flowArn</a> - The flow
--   that you want to update.
newUpdateFlow :: Text -> UpdateFlow

-- | Undocumented member.
updateFlow_sourceFailoverConfig :: Lens' UpdateFlow (Maybe UpdateFailoverConfig)

-- | The flow that you want to update.
updateFlow_flowArn :: Lens' UpdateFlow Text

-- | <i>See:</i> <a>newUpdateFlowResponse</a> smart constructor.
data UpdateFlowResponse
UpdateFlowResponse' :: Maybe Flow -> Int -> UpdateFlowResponse
[$sel:flow:UpdateFlowResponse'] :: UpdateFlowResponse -> Maybe Flow

-- | The response's http status code.
[$sel:httpStatus:UpdateFlowResponse'] :: UpdateFlowResponse -> Int

-- | Create a value of <a>UpdateFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flow:UpdateFlowResponse'</a>, <a>updateFlowResponse_flow</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateFlowResponse'</a>,
--   <a>updateFlowResponse_httpStatus</a> - The response's http status
--   code.
newUpdateFlowResponse :: Int -> UpdateFlowResponse

-- | Undocumented member.
updateFlowResponse_flow :: Lens' UpdateFlowResponse (Maybe Flow)

-- | The response's http status code.
updateFlowResponse_httpStatus :: Lens' UpdateFlowResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlow.UpdateFlowResponse
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlow.UpdateFlowResponse
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlow.UpdateFlowResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlow.UpdateFlowResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlow.UpdateFlowResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.UpdateFlow.UpdateFlow
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.UpdateFlow.UpdateFlow


-- | You can change an entitlement's description, subscribers, and
--   encryption. If you change the subscribers, the service will remove the
--   outputs that are are used by the subscribers that are removed.
module Amazonka.MediaConnect.UpdateFlowEntitlement

-- | The entitlement fields that you want to update.
--   
--   <i>See:</i> <a>newUpdateFlowEntitlement</a> smart constructor.
data UpdateFlowEntitlement
UpdateFlowEntitlement' :: Maybe UpdateEncryption -> Maybe EntitlementStatus -> Maybe Text -> Maybe [Text] -> Text -> Text -> UpdateFlowEntitlement

-- | The type of encryption that will be used on the output associated with
--   this entitlement.
[$sel:encryption:UpdateFlowEntitlement'] :: UpdateFlowEntitlement -> Maybe UpdateEncryption

-- | An indication of whether you want to enable the entitlement to allow
--   access, or disable it to stop streaming content to the subscriber’s
--   flow temporarily. If you don’t specify the entitlementStatus field in
--   your request, MediaConnect leaves the value unchanged.
[$sel:entitlementStatus:UpdateFlowEntitlement'] :: UpdateFlowEntitlement -> Maybe EntitlementStatus

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
[$sel:description:UpdateFlowEntitlement'] :: UpdateFlowEntitlement -> Maybe Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
[$sel:subscribers:UpdateFlowEntitlement'] :: UpdateFlowEntitlement -> Maybe [Text]

-- | The flow that is associated with the entitlement that you want to
--   update.
[$sel:flowArn:UpdateFlowEntitlement'] :: UpdateFlowEntitlement -> Text

-- | The ARN of the entitlement that you want to update.
[$sel:entitlementArn:UpdateFlowEntitlement'] :: UpdateFlowEntitlement -> Text

-- | Create a value of <a>UpdateFlowEntitlement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_encryption</a> - The type of encryption that
--   will be used on the output associated with this entitlement.
--   
--   <a>$sel:entitlementStatus:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_entitlementStatus</a> - An indication of
--   whether you want to enable the entitlement to allow access, or disable
--   it to stop streaming content to the subscriber’s flow temporarily. If
--   you don’t specify the entitlementStatus field in your request,
--   MediaConnect leaves the value unchanged.
--   
--   <a>$sel:description:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_description</a> - A description of the
--   entitlement. This description appears only on the AWS Elemental
--   MediaConnect console and will not be seen by the subscriber or end
--   user.
--   
--   <a>$sel:subscribers:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_subscribers</a> - The AWS account IDs that
--   you want to share your content with. The receiving accounts
--   (subscribers) will be allowed to create their own flow using your
--   content as the source.
--   
--   <a>$sel:flowArn:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_flowArn</a> - The flow that is associated
--   with the entitlement that you want to update.
--   
--   <a>$sel:entitlementArn:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_entitlementArn</a> - The ARN of the
--   entitlement that you want to update.
newUpdateFlowEntitlement :: Text -> Text -> UpdateFlowEntitlement

-- | The type of encryption that will be used on the output associated with
--   this entitlement.
updateFlowEntitlement_encryption :: Lens' UpdateFlowEntitlement (Maybe UpdateEncryption)

-- | An indication of whether you want to enable the entitlement to allow
--   access, or disable it to stop streaming content to the subscriber’s
--   flow temporarily. If you don’t specify the entitlementStatus field in
--   your request, MediaConnect leaves the value unchanged.
updateFlowEntitlement_entitlementStatus :: Lens' UpdateFlowEntitlement (Maybe EntitlementStatus)

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
updateFlowEntitlement_description :: Lens' UpdateFlowEntitlement (Maybe Text)

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
updateFlowEntitlement_subscribers :: Lens' UpdateFlowEntitlement (Maybe [Text])

-- | The flow that is associated with the entitlement that you want to
--   update.
updateFlowEntitlement_flowArn :: Lens' UpdateFlowEntitlement Text

-- | The ARN of the entitlement that you want to update.
updateFlowEntitlement_entitlementArn :: Lens' UpdateFlowEntitlement Text

-- | <i>See:</i> <a>newUpdateFlowEntitlementResponse</a> smart constructor.
data UpdateFlowEntitlementResponse
UpdateFlowEntitlementResponse' :: Maybe Text -> Maybe Entitlement -> Int -> UpdateFlowEntitlementResponse

-- | The ARN of the flow that this entitlement was granted on.
[$sel:flowArn:UpdateFlowEntitlementResponse'] :: UpdateFlowEntitlementResponse -> Maybe Text

-- | The new configuration of the entitlement that you updated.
[$sel:entitlement:UpdateFlowEntitlementResponse'] :: UpdateFlowEntitlementResponse -> Maybe Entitlement

-- | The response's http status code.
[$sel:httpStatus:UpdateFlowEntitlementResponse'] :: UpdateFlowEntitlementResponse -> Int

-- | Create a value of <a>UpdateFlowEntitlementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlementResponse_flowArn</a> - The ARN of the flow
--   that this entitlement was granted on.
--   
--   <a>$sel:entitlement:UpdateFlowEntitlementResponse'</a>,
--   <a>updateFlowEntitlementResponse_entitlement</a> - The new
--   configuration of the entitlement that you updated.
--   
--   <a>$sel:httpStatus:UpdateFlowEntitlementResponse'</a>,
--   <a>updateFlowEntitlementResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowEntitlementResponse :: Int -> UpdateFlowEntitlementResponse

-- | The ARN of the flow that this entitlement was granted on.
updateFlowEntitlementResponse_flowArn :: Lens' UpdateFlowEntitlementResponse (Maybe Text)

-- | The new configuration of the entitlement that you updated.
updateFlowEntitlementResponse_entitlement :: Lens' UpdateFlowEntitlementResponse (Maybe Entitlement)

-- | The response's http status code.
updateFlowEntitlementResponse_httpStatus :: Lens' UpdateFlowEntitlementResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlementResponse
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlementResponse
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlementResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlementResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlementResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.UpdateFlowEntitlement.UpdateFlowEntitlement


-- | Updates an existing media stream.
module Amazonka.MediaConnect.UpdateFlowMediaStream

-- | The fields that you want to update in the media stream.
--   
--   <i>See:</i> <a>newUpdateFlowMediaStream</a> smart constructor.
data UpdateFlowMediaStream
UpdateFlowMediaStream' :: Maybe Text -> Maybe MediaStreamType -> Maybe MediaStreamAttributesRequest -> Maybe Int -> Maybe Text -> Text -> Text -> UpdateFlowMediaStream

-- | The resolution of the video.
[$sel:videoFormat:UpdateFlowMediaStream'] :: UpdateFlowMediaStream -> Maybe Text

-- | The type of media stream.
[$sel:mediaStreamType:UpdateFlowMediaStream'] :: UpdateFlowMediaStream -> Maybe MediaStreamType

-- | The attributes that you want to assign to the media stream.
[$sel:attributes:UpdateFlowMediaStream'] :: UpdateFlowMediaStream -> Maybe MediaStreamAttributesRequest

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
[$sel:clockRate:UpdateFlowMediaStream'] :: UpdateFlowMediaStream -> Maybe Int

-- | Description
[$sel:description:UpdateFlowMediaStream'] :: UpdateFlowMediaStream -> Maybe Text

-- | The Amazon Resource Name (ARN) of the flow.
[$sel:flowArn:UpdateFlowMediaStream'] :: UpdateFlowMediaStream -> Text

-- | The name of the media stream that you want to update.
[$sel:mediaStreamName:UpdateFlowMediaStream'] :: UpdateFlowMediaStream -> Text

-- | Create a value of <a>UpdateFlowMediaStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_videoFormat</a> - The resolution of the
--   video.
--   
--   <a>$sel:mediaStreamType:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_mediaStreamType</a> - The type of media
--   stream.
--   
--   <a>$sel:attributes:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_attributes</a> - The attributes that you want
--   to assign to the media stream.
--   
--   <a>$sel:clockRate:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_clockRate</a> - The sample rate (in Hz) for
--   the stream. If the media stream type is video or ancillary data, set
--   this value to 90000. If the media stream type is audio, set this value
--   to either 48000 or 96000.
--   
--   <a>$sel:description:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_description</a> - Description
--   
--   <a>$sel:flowArn:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_flowArn</a> - The Amazon Resource Name (ARN)
--   of the flow.
--   
--   <a>$sel:mediaStreamName:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_mediaStreamName</a> - The name of the media
--   stream that you want to update.
newUpdateFlowMediaStream :: Text -> Text -> UpdateFlowMediaStream

-- | The resolution of the video.
updateFlowMediaStream_videoFormat :: Lens' UpdateFlowMediaStream (Maybe Text)

-- | The type of media stream.
updateFlowMediaStream_mediaStreamType :: Lens' UpdateFlowMediaStream (Maybe MediaStreamType)

-- | The attributes that you want to assign to the media stream.
updateFlowMediaStream_attributes :: Lens' UpdateFlowMediaStream (Maybe MediaStreamAttributesRequest)

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
updateFlowMediaStream_clockRate :: Lens' UpdateFlowMediaStream (Maybe Int)

-- | Description
updateFlowMediaStream_description :: Lens' UpdateFlowMediaStream (Maybe Text)

-- | The Amazon Resource Name (ARN) of the flow.
updateFlowMediaStream_flowArn :: Lens' UpdateFlowMediaStream Text

-- | The name of the media stream that you want to update.
updateFlowMediaStream_mediaStreamName :: Lens' UpdateFlowMediaStream Text

-- | <i>See:</i> <a>newUpdateFlowMediaStreamResponse</a> smart constructor.
data UpdateFlowMediaStreamResponse
UpdateFlowMediaStreamResponse' :: Maybe Text -> Maybe MediaStream -> Int -> UpdateFlowMediaStreamResponse

-- | The ARN of the flow that is associated with the media stream that you
--   updated.
[$sel:flowArn:UpdateFlowMediaStreamResponse'] :: UpdateFlowMediaStreamResponse -> Maybe Text

-- | The media stream that you updated.
[$sel:mediaStream:UpdateFlowMediaStreamResponse'] :: UpdateFlowMediaStreamResponse -> Maybe MediaStream

-- | The response's http status code.
[$sel:httpStatus:UpdateFlowMediaStreamResponse'] :: UpdateFlowMediaStreamResponse -> Int

-- | Create a value of <a>UpdateFlowMediaStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStreamResponse_flowArn</a> - The ARN of the flow
--   that is associated with the media stream that you updated.
--   
--   <a>$sel:mediaStream:UpdateFlowMediaStreamResponse'</a>,
--   <a>updateFlowMediaStreamResponse_mediaStream</a> - The media stream
--   that you updated.
--   
--   <a>$sel:httpStatus:UpdateFlowMediaStreamResponse'</a>,
--   <a>updateFlowMediaStreamResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowMediaStreamResponse :: Int -> UpdateFlowMediaStreamResponse

-- | The ARN of the flow that is associated with the media stream that you
--   updated.
updateFlowMediaStreamResponse_flowArn :: Lens' UpdateFlowMediaStreamResponse (Maybe Text)

-- | The media stream that you updated.
updateFlowMediaStreamResponse_mediaStream :: Lens' UpdateFlowMediaStreamResponse (Maybe MediaStream)

-- | The response's http status code.
updateFlowMediaStreamResponse_httpStatus :: Lens' UpdateFlowMediaStreamResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStreamResponse
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStreamResponse
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStreamResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStreamResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStreamResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.UpdateFlowMediaStream.UpdateFlowMediaStream


-- | Updates an existing flow output.
module Amazonka.MediaConnect.UpdateFlowOutput

-- | The fields that you want to update in the output.
--   
--   <i>See:</i> <a>newUpdateFlowOutput</a> smart constructor.
data UpdateFlowOutput
UpdateFlowOutput' :: Maybe Text -> Maybe Int -> Maybe [MediaStreamOutputConfigurationRequest] -> Maybe Protocol -> Maybe UpdateEncryption -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe VpcInterfaceAttachment -> Text -> Text -> UpdateFlowOutput

-- | The IP address where you want to send the output.
[$sel:destination:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Text

-- | The maximum latency in milliseconds for Zixi-based streams.
[$sel:maxLatency:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Int

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
[$sel:mediaStreamOutputConfigurations:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe [MediaStreamOutputConfigurationRequest]

-- | The protocol to use for the output.
[$sel:protocol:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Protocol

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
[$sel:encryption:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe UpdateEncryption

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:cidrAllowList:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe [Text]

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
[$sel:smoothingLatency:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Int

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Int

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
[$sel:description:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Text

-- | The port to use when content is distributed to this output.
[$sel:port:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Text

-- | The remote ID for the Zixi-pull stream.
[$sel:remoteId:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe Text

-- | The name of the VPC interface attachment to use for this output.
[$sel:vpcInterfaceAttachment:UpdateFlowOutput'] :: UpdateFlowOutput -> Maybe VpcInterfaceAttachment

-- | The flow that is associated with the output that you want to update.
[$sel:flowArn:UpdateFlowOutput'] :: UpdateFlowOutput -> Text

-- | The ARN of the output that you want to update.
[$sel:outputArn:UpdateFlowOutput'] :: UpdateFlowOutput -> Text

-- | Create a value of <a>UpdateFlowOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_destination</a> - The IP address where you want to
--   send the output.
--   
--   <a>$sel:maxLatency:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_maxLatency</a> - The maximum latency in
--   milliseconds for Zixi-based streams.
--   
--   <a>$sel:mediaStreamOutputConfigurations:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_mediaStreamOutputConfigurations</a> - The media
--   streams that are associated with the output, and the parameters for
--   those associations.
--   
--   <a>$sel:protocol:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_protocol</a> - The protocol to use for the output.
--   
--   <a>$sel:encryption:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_encryption</a> - The type of key used for the
--   encryption. If no keyType is provided, the service will use the
--   default setting (static-key).
--   
--   <a>$sel:cidrAllowList:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_cidrAllowList</a> - The range of IP addresses that
--   should be allowed to initiate output requests to this flow. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:description:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_description</a> - A description of the output.
--   This description appears only on the AWS Elemental MediaConnect
--   console and will not be seen by the end user.
--   
--   <a>$sel:port:UpdateFlowOutput'</a>, <a>updateFlowOutput_port</a> - The
--   port to use when content is distributed to this output.
--   
--   <a>$sel:streamId:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_remoteId</a> - The remote ID for the Zixi-pull
--   stream.
--   
--   <a>$sel:vpcInterfaceAttachment:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_vpcInterfaceAttachment</a> - The name of the VPC
--   interface attachment to use for this output.
--   
--   <a>$sel:flowArn:UpdateFlowOutput'</a>, <a>updateFlowOutput_flowArn</a>
--   - The flow that is associated with the output that you want to update.
--   
--   <a>$sel:outputArn:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_outputArn</a> - The ARN of the output that you
--   want to update.
newUpdateFlowOutput :: Text -> Text -> UpdateFlowOutput

-- | The IP address where you want to send the output.
updateFlowOutput_destination :: Lens' UpdateFlowOutput (Maybe Text)

-- | The maximum latency in milliseconds for Zixi-based streams.
updateFlowOutput_maxLatency :: Lens' UpdateFlowOutput (Maybe Int)

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
updateFlowOutput_mediaStreamOutputConfigurations :: Lens' UpdateFlowOutput (Maybe [MediaStreamOutputConfigurationRequest])

-- | The protocol to use for the output.
updateFlowOutput_protocol :: Lens' UpdateFlowOutput (Maybe Protocol)

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
updateFlowOutput_encryption :: Lens' UpdateFlowOutput (Maybe UpdateEncryption)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
updateFlowOutput_cidrAllowList :: Lens' UpdateFlowOutput (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
updateFlowOutput_smoothingLatency :: Lens' UpdateFlowOutput (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
updateFlowOutput_minLatency :: Lens' UpdateFlowOutput (Maybe Int)

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
updateFlowOutput_description :: Lens' UpdateFlowOutput (Maybe Text)

-- | The port to use when content is distributed to this output.
updateFlowOutput_port :: Lens' UpdateFlowOutput (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
updateFlowOutput_streamId :: Lens' UpdateFlowOutput (Maybe Text)

-- | The remote ID for the Zixi-pull stream.
updateFlowOutput_remoteId :: Lens' UpdateFlowOutput (Maybe Text)

-- | The name of the VPC interface attachment to use for this output.
updateFlowOutput_vpcInterfaceAttachment :: Lens' UpdateFlowOutput (Maybe VpcInterfaceAttachment)

-- | The flow that is associated with the output that you want to update.
updateFlowOutput_flowArn :: Lens' UpdateFlowOutput Text

-- | The ARN of the output that you want to update.
updateFlowOutput_outputArn :: Lens' UpdateFlowOutput Text

-- | <i>See:</i> <a>newUpdateFlowOutputResponse</a> smart constructor.
data UpdateFlowOutputResponse
UpdateFlowOutputResponse' :: Maybe Text -> Maybe Output -> Int -> UpdateFlowOutputResponse

-- | The ARN of the flow that is associated with the updated output.
[$sel:flowArn:UpdateFlowOutputResponse'] :: UpdateFlowOutputResponse -> Maybe Text

-- | The new settings of the output that you updated.
[$sel:output:UpdateFlowOutputResponse'] :: UpdateFlowOutputResponse -> Maybe Output

-- | The response's http status code.
[$sel:httpStatus:UpdateFlowOutputResponse'] :: UpdateFlowOutputResponse -> Int

-- | Create a value of <a>UpdateFlowOutputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowOutput'</a>,
--   <a>updateFlowOutputResponse_flowArn</a> - The ARN of the flow that is
--   associated with the updated output.
--   
--   <a>$sel:output:UpdateFlowOutputResponse'</a>,
--   <a>updateFlowOutputResponse_output</a> - The new settings of the
--   output that you updated.
--   
--   <a>$sel:httpStatus:UpdateFlowOutputResponse'</a>,
--   <a>updateFlowOutputResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowOutputResponse :: Int -> UpdateFlowOutputResponse

-- | The ARN of the flow that is associated with the updated output.
updateFlowOutputResponse_flowArn :: Lens' UpdateFlowOutputResponse (Maybe Text)

-- | The new settings of the output that you updated.
updateFlowOutputResponse_output :: Lens' UpdateFlowOutputResponse (Maybe Output)

-- | The response's http status code.
updateFlowOutputResponse_httpStatus :: Lens' UpdateFlowOutputResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutputResponse
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutputResponse
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutputResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutputResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutputResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.UpdateFlowOutput.UpdateFlowOutput


-- | Updates the source of a flow.
module Amazonka.MediaConnect.UpdateFlowSource

-- | A request to update the source of a flow.
--   
--   <i>See:</i> <a>newUpdateFlowSource</a> smart constructor.
data UpdateFlowSource
UpdateFlowSource' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe UpdateEncryption -> Maybe Int -> Maybe Protocol -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe [MediaStreamSourceConfigurationRequest] -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> Text -> UpdateFlowSource

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
[$sel:entitlementArn:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Text

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
[$sel:maxLatency:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Int

-- | The name of the VPC interface to use for this source.
[$sel:vpcInterfaceName:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Text

-- | The type of encryption used on the content ingested from this source.
[$sel:decryption:UpdateFlowSource'] :: UpdateFlowSource -> Maybe UpdateEncryption

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
[$sel:maxSyncBuffer:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Int

-- | The protocol that is used by the source.
[$sel:protocol:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Protocol

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
[$sel:minLatency:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Int

-- | The port that the flow will be listening on for incoming content.
[$sel:ingestPort:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Int

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
[$sel:description:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Text

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
[$sel:mediaStreamSourceConfigurations:UpdateFlowSource'] :: UpdateFlowSource -> Maybe [MediaStreamSourceConfigurationRequest]

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
[$sel:whitelistCidr:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Text

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
[$sel:maxBitrate:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Int

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
[$sel:streamId:UpdateFlowSource'] :: UpdateFlowSource -> Maybe Text

-- | The flow that is associated with the source that you want to update.
[$sel:flowArn:UpdateFlowSource'] :: UpdateFlowSource -> Text

-- | The ARN of the source that you want to update.
[$sel:sourceArn:UpdateFlowSource'] :: UpdateFlowSource -> Text

-- | Create a value of <a>UpdateFlowSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:UpdateFlowSource'</a>,
--   <a>updateFlowSource_entitlementArn</a> - The ARN of the entitlement
--   that allows you to subscribe to this flow. The entitlement is set by
--   the flow originator, and the ARN is generated as part of the
--   originator's flow.
--   
--   <a>$sel:maxLatency:UpdateFlowSource'</a>,
--   <a>updateFlowSource_maxLatency</a> - The maximum latency in
--   milliseconds. This parameter applies only to RIST-based and Zixi-based
--   streams.
--   
--   <a>$sel:vpcInterfaceName:UpdateFlowSource'</a>,
--   <a>updateFlowSource_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this source.
--   
--   <a>$sel:decryption:UpdateFlowSource'</a>,
--   <a>updateFlowSource_decryption</a> - The type of encryption used on
--   the content ingested from this source.
--   
--   <a>$sel:maxSyncBuffer:UpdateFlowSource'</a>,
--   <a>updateFlowSource_maxSyncBuffer</a> - The size of the buffer (in
--   milliseconds) to use to sync incoming source data.
--   
--   <a>$sel:protocol:UpdateFlowSource'</a>,
--   <a>updateFlowSource_protocol</a> - The protocol that is used by the
--   source.
--   
--   <a>$sel:minLatency:UpdateFlowSource'</a>,
--   <a>updateFlowSource_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:ingestPort:UpdateFlowSource'</a>,
--   <a>updateFlowSource_ingestPort</a> - The port that the flow will be
--   listening on for incoming content.
--   
--   <a>$sel:description:UpdateFlowSource'</a>,
--   <a>updateFlowSource_description</a> - A description for the source.
--   This value is not used or seen outside of the current AWS Elemental
--   MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:UpdateFlowSource'</a>,
--   <a>updateFlowSource_mediaStreamSourceConfigurations</a> - The media
--   streams that are associated with the source, and the parameters for
--   those associations.
--   
--   <a>$sel:whitelistCidr:UpdateFlowSource'</a>,
--   <a>updateFlowSource_whitelistCidr</a> - The range of IP addresses that
--   should be allowed to contribute content to your source. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:maxBitrate:UpdateFlowSource'</a>,
--   <a>updateFlowSource_maxBitrate</a> - The smoothing max bitrate for
--   RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:UpdateFlowSource'</a>,
--   <a>updateFlowSource_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
--   
--   <a>$sel:flowArn:UpdateFlowSource'</a>, <a>updateFlowSource_flowArn</a>
--   - The flow that is associated with the source that you want to update.
--   
--   <a>$sel:sourceArn:UpdateFlowSource'</a>,
--   <a>updateFlowSource_sourceArn</a> - The ARN of the source that you
--   want to update.
newUpdateFlowSource :: Text -> Text -> UpdateFlowSource

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
updateFlowSource_entitlementArn :: Lens' UpdateFlowSource (Maybe Text)

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
updateFlowSource_maxLatency :: Lens' UpdateFlowSource (Maybe Int)

-- | The name of the VPC interface to use for this source.
updateFlowSource_vpcInterfaceName :: Lens' UpdateFlowSource (Maybe Text)

-- | The type of encryption used on the content ingested from this source.
updateFlowSource_decryption :: Lens' UpdateFlowSource (Maybe UpdateEncryption)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
updateFlowSource_maxSyncBuffer :: Lens' UpdateFlowSource (Maybe Int)

-- | The protocol that is used by the source.
updateFlowSource_protocol :: Lens' UpdateFlowSource (Maybe Protocol)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
updateFlowSource_minLatency :: Lens' UpdateFlowSource (Maybe Int)

-- | The port that the flow will be listening on for incoming content.
updateFlowSource_ingestPort :: Lens' UpdateFlowSource (Maybe Int)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
updateFlowSource_description :: Lens' UpdateFlowSource (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
updateFlowSource_mediaStreamSourceConfigurations :: Lens' UpdateFlowSource (Maybe [MediaStreamSourceConfigurationRequest])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
updateFlowSource_whitelistCidr :: Lens' UpdateFlowSource (Maybe Text)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
updateFlowSource_maxBitrate :: Lens' UpdateFlowSource (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
updateFlowSource_streamId :: Lens' UpdateFlowSource (Maybe Text)

-- | The flow that is associated with the source that you want to update.
updateFlowSource_flowArn :: Lens' UpdateFlowSource Text

-- | The ARN of the source that you want to update.
updateFlowSource_sourceArn :: Lens' UpdateFlowSource Text

-- | <i>See:</i> <a>newUpdateFlowSourceResponse</a> smart constructor.
data UpdateFlowSourceResponse
UpdateFlowSourceResponse' :: Maybe Text -> Maybe Source -> Int -> UpdateFlowSourceResponse

-- | The ARN of the flow that you want to update.
[$sel:flowArn:UpdateFlowSourceResponse'] :: UpdateFlowSourceResponse -> Maybe Text

-- | The settings for the source of the flow.
[$sel:source:UpdateFlowSourceResponse'] :: UpdateFlowSourceResponse -> Maybe Source

-- | The response's http status code.
[$sel:httpStatus:UpdateFlowSourceResponse'] :: UpdateFlowSourceResponse -> Int

-- | Create a value of <a>UpdateFlowSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowSource'</a>,
--   <a>updateFlowSourceResponse_flowArn</a> - The ARN of the flow that you
--   want to update.
--   
--   <a>$sel:source:UpdateFlowSourceResponse'</a>,
--   <a>updateFlowSourceResponse_source</a> - The settings for the source
--   of the flow.
--   
--   <a>$sel:httpStatus:UpdateFlowSourceResponse'</a>,
--   <a>updateFlowSourceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowSourceResponse :: Int -> UpdateFlowSourceResponse

-- | The ARN of the flow that you want to update.
updateFlowSourceResponse_flowArn :: Lens' UpdateFlowSourceResponse (Maybe Text)

-- | The settings for the source of the flow.
updateFlowSourceResponse_source :: Lens' UpdateFlowSourceResponse (Maybe Source)

-- | The response's http status code.
updateFlowSourceResponse_httpStatus :: Lens' UpdateFlowSourceResponse Int
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance GHC.Generics.Generic Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSourceResponse
instance GHC.Show.Show Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSourceResponse
instance GHC.Read.Read Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSourceResponse
instance GHC.Classes.Eq Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance Control.DeepSeq.NFData Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance Amazonka.Data.Path.ToPath Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource
instance Amazonka.Data.Query.ToQuery Amazonka.MediaConnect.UpdateFlowSource.UpdateFlowSource


module Amazonka.MediaConnect.Lens

-- | The flow that you want to remove a VPC interface from.
removeFlowVpcInterface_flowArn :: Lens' RemoveFlowVpcInterface Text

-- | The name of the VPC interface that you want to remove.
removeFlowVpcInterface_vpcInterfaceName :: Lens' RemoveFlowVpcInterface Text

-- | The ARN of the flow that is associated with the VPC interface you
--   removed.
removeFlowVpcInterfaceResponse_flowArn :: Lens' RemoveFlowVpcInterfaceResponse (Maybe Text)

-- | IDs of network interfaces associated with the removed VPC interface
--   that Media Connect was unable to remove.
removeFlowVpcInterfaceResponse_nonDeletedNetworkInterfaceIds :: Lens' RemoveFlowVpcInterfaceResponse (Maybe [Text])

-- | The name of the VPC interface that was removed.
removeFlowVpcInterfaceResponse_vpcInterfaceName :: Lens' RemoveFlowVpcInterfaceResponse (Maybe Text)

-- | The response's http status code.
removeFlowVpcInterfaceResponse_httpStatus :: Lens' RemoveFlowVpcInterfaceResponse Int

-- | The Amazon Resource Name (ARN) of the flow.
removeFlowMediaStream_flowArn :: Lens' RemoveFlowMediaStream Text

-- | The name of the media stream that you want to remove.
removeFlowMediaStream_mediaStreamName :: Lens' RemoveFlowMediaStream Text

-- | The name of the media stream that was removed.
removeFlowMediaStreamResponse_mediaStreamName :: Lens' RemoveFlowMediaStreamResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the flow.
removeFlowMediaStreamResponse_flowArn :: Lens' RemoveFlowMediaStreamResponse (Maybe Text)

-- | The response's http status code.
removeFlowMediaStreamResponse_httpStatus :: Lens' RemoveFlowMediaStreamResponse Int

-- | The IP address where you want to send the output.
updateFlowOutput_destination :: Lens' UpdateFlowOutput (Maybe Text)

-- | The maximum latency in milliseconds for Zixi-based streams.
updateFlowOutput_maxLatency :: Lens' UpdateFlowOutput (Maybe Int)

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
updateFlowOutput_mediaStreamOutputConfigurations :: Lens' UpdateFlowOutput (Maybe [MediaStreamOutputConfigurationRequest])

-- | The protocol to use for the output.
updateFlowOutput_protocol :: Lens' UpdateFlowOutput (Maybe Protocol)

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
updateFlowOutput_encryption :: Lens' UpdateFlowOutput (Maybe UpdateEncryption)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
updateFlowOutput_cidrAllowList :: Lens' UpdateFlowOutput (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
updateFlowOutput_smoothingLatency :: Lens' UpdateFlowOutput (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
updateFlowOutput_minLatency :: Lens' UpdateFlowOutput (Maybe Int)

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
updateFlowOutput_description :: Lens' UpdateFlowOutput (Maybe Text)

-- | The port to use when content is distributed to this output.
updateFlowOutput_port :: Lens' UpdateFlowOutput (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
updateFlowOutput_streamId :: Lens' UpdateFlowOutput (Maybe Text)

-- | The remote ID for the Zixi-pull stream.
updateFlowOutput_remoteId :: Lens' UpdateFlowOutput (Maybe Text)

-- | The name of the VPC interface attachment to use for this output.
updateFlowOutput_vpcInterfaceAttachment :: Lens' UpdateFlowOutput (Maybe VpcInterfaceAttachment)

-- | The flow that is associated with the output that you want to update.
updateFlowOutput_flowArn :: Lens' UpdateFlowOutput Text

-- | The ARN of the output that you want to update.
updateFlowOutput_outputArn :: Lens' UpdateFlowOutput Text

-- | The ARN of the flow that is associated with the updated output.
updateFlowOutputResponse_flowArn :: Lens' UpdateFlowOutputResponse (Maybe Text)

-- | The new settings of the output that you updated.
updateFlowOutputResponse_output :: Lens' UpdateFlowOutputResponse (Maybe Output)

-- | The response's http status code.
updateFlowOutputResponse_httpStatus :: Lens' UpdateFlowOutputResponse Int

-- | The flow that you want to add outputs to.
addFlowOutputs_flowArn :: Lens' AddFlowOutputs Text

-- | A list of outputs that you want to add.
addFlowOutputs_outputs :: Lens' AddFlowOutputs [AddOutputRequest]

-- | The ARN of the flow that these outputs were added to.
addFlowOutputsResponse_flowArn :: Lens' AddFlowOutputsResponse (Maybe Text)

-- | The details of the newly added outputs.
addFlowOutputsResponse_outputs :: Lens' AddFlowOutputsResponse (Maybe [Output])

-- | The response's http status code.
addFlowOutputsResponse_httpStatus :: Lens' AddFlowOutputsResponse Int

-- | The ARN of the flow that you want to start.
startFlow_flowArn :: Lens' StartFlow Text

-- | The status of the flow when the StartFlow process begins.
startFlowResponse_status :: Lens' StartFlowResponse (Maybe Status)

-- | The ARN of the flow that you started.
startFlowResponse_flowArn :: Lens' StartFlowResponse (Maybe Text)

-- | The response's http status code.
startFlowResponse_httpStatus :: Lens' StartFlowResponse Int

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource for which to list the tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A map from tag keys to values. Tag keys can have a maximum character
--   length of 128 characters, and tag values can have a maximum length of
--   256 characters.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The flow that you want to mutate.
addFlowSources_flowArn :: Lens' AddFlowSources Text

-- | A list of sources that you want to add.
addFlowSources_sources :: Lens' AddFlowSources [SetSourceRequest]

-- | The ARN of the flow that these sources were added to.
addFlowSourcesResponse_flowArn :: Lens' AddFlowSourcesResponse (Maybe Text)

-- | The details of the newly added sources.
addFlowSourcesResponse_sources :: Lens' AddFlowSourcesResponse (Maybe [Source])

-- | The response's http status code.
addFlowSourcesResponse_httpStatus :: Lens' AddFlowSourcesResponse Int

-- | The Amazon Resource Name (ARN) of the reservation.
describeReservation_reservationArn :: Lens' DescribeReservation Text

-- | Undocumented member.
describeReservationResponse_reservation :: Lens' DescribeReservationResponse (Maybe Reservation)

-- | The response's http status code.
describeReservationResponse_httpStatus :: Lens' DescribeReservationResponse Int

-- | The Amazon Resource Name (ARN) of the flow.
addFlowMediaStreams_flowArn :: Lens' AddFlowMediaStreams Text

-- | The media streams that you want to add to the flow.
addFlowMediaStreams_mediaStreams :: Lens' AddFlowMediaStreams [AddMediaStreamRequest]

-- | The ARN of the flow that you added media streams to.
addFlowMediaStreamsResponse_flowArn :: Lens' AddFlowMediaStreamsResponse (Maybe Text)

-- | The media streams that you added to the flow.
addFlowMediaStreamsResponse_mediaStreams :: Lens' AddFlowMediaStreamsResponse (Maybe [MediaStream])

-- | The response's http status code.
addFlowMediaStreamsResponse_httpStatus :: Lens' AddFlowMediaStreamsResponse Int

-- | The flow that you want to remove an output from.
removeFlowOutput_flowArn :: Lens' RemoveFlowOutput Text

-- | The ARN of the output that you want to remove.
removeFlowOutput_outputArn :: Lens' RemoveFlowOutput Text

-- | The ARN of the flow that is associated with the output you removed.
removeFlowOutputResponse_flowArn :: Lens' RemoveFlowOutputResponse (Maybe Text)

-- | The ARN of the output that was removed.
removeFlowOutputResponse_outputArn :: Lens' RemoveFlowOutputResponse (Maybe Text)

-- | The response's http status code.
removeFlowOutputResponse_httpStatus :: Lens' RemoveFlowOutputResponse Int

-- | The flow that you want to revoke an entitlement from.
revokeFlowEntitlement_flowArn :: Lens' RevokeFlowEntitlement Text

-- | The ARN of the entitlement that you want to revoke.
revokeFlowEntitlement_entitlementArn :: Lens' RevokeFlowEntitlement Text

-- | The ARN of the entitlement that was revoked.
revokeFlowEntitlementResponse_entitlementArn :: Lens' RevokeFlowEntitlementResponse (Maybe Text)

-- | The ARN of the flow that the entitlement was revoked from.
revokeFlowEntitlementResponse_flowArn :: Lens' RevokeFlowEntitlementResponse (Maybe Text)

-- | The response's http status code.
revokeFlowEntitlementResponse_httpStatus :: Lens' RevokeFlowEntitlementResponse Int

-- | The media streams that you want to add to the flow. You can associate
--   these media streams with sources and outputs on the flow.
createFlow_mediaStreams :: Lens' CreateFlow (Maybe [AddMediaStreamRequest])

-- | Undocumented member.
createFlow_sourceFailoverConfig :: Lens' CreateFlow (Maybe FailoverConfig)

-- | The VPC interfaces you want on the flow.
createFlow_vpcInterfaces :: Lens' CreateFlow (Maybe [VpcInterfaceRequest])

-- | Undocumented member.
createFlow_sources :: Lens' CreateFlow (Maybe [SetSourceRequest])

-- | The outputs that you want to add to this flow.
createFlow_outputs :: Lens' CreateFlow (Maybe [AddOutputRequest])

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS
--   Region.
createFlow_availabilityZone :: Lens' CreateFlow (Maybe Text)

-- | The entitlements that you want to grant on a flow.
createFlow_entitlements :: Lens' CreateFlow (Maybe [GrantEntitlementRequest])

-- | Undocumented member.
createFlow_source :: Lens' CreateFlow (Maybe SetSourceRequest)

-- | The name of the flow.
createFlow_name :: Lens' CreateFlow Text

-- | Undocumented member.
createFlowResponse_flow :: Lens' CreateFlowResponse (Maybe Flow)

-- | The response's http status code.
createFlowResponse_httpStatus :: Lens' CreateFlowResponse Int

-- | The flow that you want to remove a source from.
removeFlowSource_flowArn :: Lens' RemoveFlowSource Text

-- | The ARN of the source that you want to remove.
removeFlowSource_sourceArn :: Lens' RemoveFlowSource Text

-- | The ARN of the flow that is associated with the source you removed.
removeFlowSourceResponse_flowArn :: Lens' RemoveFlowSourceResponse (Maybe Text)

-- | The ARN of the source that was removed.
removeFlowSourceResponse_sourceArn :: Lens' RemoveFlowSourceResponse (Maybe Text)

-- | The response's http status code.
removeFlowSourceResponse_httpStatus :: Lens' RemoveFlowSourceResponse Int

-- | The ARN of the flow that you want to describe.
describeFlow_flowArn :: Lens' DescribeFlow Text

-- | Undocumented member.
describeFlowResponse_flow :: Lens' DescribeFlowResponse (Maybe Flow)

-- | Undocumented member.
describeFlowResponse_messages :: Lens' DescribeFlowResponse (Maybe Messages)

-- | The response's http status code.
describeFlowResponse_httpStatus :: Lens' DescribeFlowResponse Int

-- | The type of encryption that will be used on the output associated with
--   this entitlement.
updateFlowEntitlement_encryption :: Lens' UpdateFlowEntitlement (Maybe UpdateEncryption)

-- | An indication of whether you want to enable the entitlement to allow
--   access, or disable it to stop streaming content to the subscriber’s
--   flow temporarily. If you don’t specify the entitlementStatus field in
--   your request, MediaConnect leaves the value unchanged.
updateFlowEntitlement_entitlementStatus :: Lens' UpdateFlowEntitlement (Maybe EntitlementStatus)

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
updateFlowEntitlement_description :: Lens' UpdateFlowEntitlement (Maybe Text)

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
updateFlowEntitlement_subscribers :: Lens' UpdateFlowEntitlement (Maybe [Text])

-- | The flow that is associated with the entitlement that you want to
--   update.
updateFlowEntitlement_flowArn :: Lens' UpdateFlowEntitlement Text

-- | The ARN of the entitlement that you want to update.
updateFlowEntitlement_entitlementArn :: Lens' UpdateFlowEntitlement Text

-- | The ARN of the flow that this entitlement was granted on.
updateFlowEntitlementResponse_flowArn :: Lens' UpdateFlowEntitlementResponse (Maybe Text)

-- | The new configuration of the entitlement that you updated.
updateFlowEntitlementResponse_entitlement :: Lens' UpdateFlowEntitlementResponse (Maybe Entitlement)

-- | The response's http status code.
updateFlowEntitlementResponse_httpStatus :: Lens' UpdateFlowEntitlementResponse Int

-- | The ARN of the flow that you want to stop.
stopFlow_flowArn :: Lens' StopFlow Text

-- | The status of the flow when the StopFlow process begins.
stopFlowResponse_status :: Lens' StopFlowResponse (Maybe Status)

-- | The ARN of the flow that you stopped.
stopFlowResponse_flowArn :: Lens' StopFlowResponse (Maybe Text)

-- | The response's http status code.
stopFlowResponse_httpStatus :: Lens' StopFlowResponse Int

-- | The Amazon Resource Name (ARN) of the offering.
describeOffering_offeringArn :: Lens' DescribeOffering Text

-- | Undocumented member.
describeOfferingResponse_offering :: Lens' DescribeOfferingResponse (Maybe Offering)

-- | The response's http status code.
describeOfferingResponse_httpStatus :: Lens' DescribeOfferingResponse Int

-- | The flow that you want to mutate.
addFlowVpcInterfaces_flowArn :: Lens' AddFlowVpcInterfaces Text

-- | A list of VPC interfaces that you want to add.
addFlowVpcInterfaces_vpcInterfaces :: Lens' AddFlowVpcInterfaces [VpcInterfaceRequest]

-- | The ARN of the flow that these VPC interfaces were added to.
addFlowVpcInterfacesResponse_flowArn :: Lens' AddFlowVpcInterfacesResponse (Maybe Text)

-- | The details of the newly added VPC interfaces.
addFlowVpcInterfacesResponse_vpcInterfaces :: Lens' AddFlowVpcInterfacesResponse (Maybe [VpcInterface])

-- | The response's http status code.
addFlowVpcInterfacesResponse_httpStatus :: Lens' AddFlowVpcInterfacesResponse Int

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListEntitlements request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListEntitlements request a second time and specify the NextToken
--   value.
listEntitlements_nextToken :: Lens' ListEntitlements (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListEntitlements request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 20 results per page.
listEntitlements_maxResults :: Lens' ListEntitlements (Maybe Natural)

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListEntitlements request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListEntitlements request a second time and specify the NextToken
--   value.
listEntitlementsResponse_nextToken :: Lens' ListEntitlementsResponse (Maybe Text)

-- | A list of entitlements that have been granted to you from other AWS
--   accounts.
listEntitlementsResponse_entitlements :: Lens' ListEntitlementsResponse (Maybe [ListedEntitlement])

-- | The response's http status code.
listEntitlementsResponse_httpStatus :: Lens' ListEntitlementsResponse Int

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource to which to add tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | A map from tag keys to values. Tag keys can have a maximum character
--   length of 128 characters, and tag values can have a maximum length of
--   256 characters.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
listFlows_nextToken :: Lens' ListFlows (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListFlows request with MaxResults set at 5. Although 20
--   items match your request, the service returns no more than the first 5
--   items. (The service also returns a NextToken value that you can use to
--   fetch the next batch of results.) The service might return fewer
--   results than the MaxResults value. If MaxResults is not included in
--   the request, the service defaults to pagination with a maximum of 10
--   results per page.
listFlows_maxResults :: Lens' ListFlows (Maybe Natural)

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
listFlowsResponse_nextToken :: Lens' ListFlowsResponse (Maybe Text)

-- | A list of flow summaries.
listFlowsResponse_flows :: Lens' ListFlowsResponse (Maybe [ListedFlow])

-- | The response's http status code.
listFlowsResponse_httpStatus :: Lens' ListFlowsResponse Int

-- | The Amazon Resource Name (ARN) of the offering.
purchaseOffering_offeringArn :: Lens' PurchaseOffering Text

-- | The date and time that you want the reservation to begin, in
--   Coordinated Universal Time (UTC). You can specify any date and time
--   between 12:00am on the first day of the current month to the current
--   time on today's date, inclusive. Specify the start in a 24-hour
--   notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and
--   Z are literal characters. For example, to specify 11:30pm on March 5,
--   2020, enter 2020-03-05T23:30:00Z.
purchaseOffering_start :: Lens' PurchaseOffering Text

-- | The name that you want to use for the reservation.
purchaseOffering_reservationName :: Lens' PurchaseOffering Text

-- | Undocumented member.
purchaseOfferingResponse_reservation :: Lens' PurchaseOfferingResponse (Maybe Reservation)

-- | The response's http status code.
purchaseOfferingResponse_httpStatus :: Lens' PurchaseOfferingResponse Int

-- | The resolution of the video.
updateFlowMediaStream_videoFormat :: Lens' UpdateFlowMediaStream (Maybe Text)

-- | The type of media stream.
updateFlowMediaStream_mediaStreamType :: Lens' UpdateFlowMediaStream (Maybe MediaStreamType)

-- | The attributes that you want to assign to the media stream.
updateFlowMediaStream_attributes :: Lens' UpdateFlowMediaStream (Maybe MediaStreamAttributesRequest)

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
updateFlowMediaStream_clockRate :: Lens' UpdateFlowMediaStream (Maybe Int)

-- | Description
updateFlowMediaStream_description :: Lens' UpdateFlowMediaStream (Maybe Text)

-- | The Amazon Resource Name (ARN) of the flow.
updateFlowMediaStream_flowArn :: Lens' UpdateFlowMediaStream Text

-- | The name of the media stream that you want to update.
updateFlowMediaStream_mediaStreamName :: Lens' UpdateFlowMediaStream Text

-- | The ARN of the flow that is associated with the media stream that you
--   updated.
updateFlowMediaStreamResponse_flowArn :: Lens' UpdateFlowMediaStreamResponse (Maybe Text)

-- | The media stream that you updated.
updateFlowMediaStreamResponse_mediaStream :: Lens' UpdateFlowMediaStreamResponse (Maybe MediaStream)

-- | The response's http status code.
updateFlowMediaStreamResponse_httpStatus :: Lens' UpdateFlowMediaStreamResponse Int

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource from which to delete tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Undocumented member.
updateFlow_sourceFailoverConfig :: Lens' UpdateFlow (Maybe UpdateFailoverConfig)

-- | The flow that you want to update.
updateFlow_flowArn :: Lens' UpdateFlow Text

-- | Undocumented member.
updateFlowResponse_flow :: Lens' UpdateFlowResponse (Maybe Flow)

-- | The response's http status code.
updateFlowResponse_httpStatus :: Lens' UpdateFlowResponse Int

-- | The ARN of the flow that you want to delete.
deleteFlow_flowArn :: Lens' DeleteFlow Text

-- | The status of the flow when the DeleteFlow process begins.
deleteFlowResponse_status :: Lens' DeleteFlowResponse (Maybe Status)

-- | The ARN of the flow that was deleted.
deleteFlowResponse_flowArn :: Lens' DeleteFlowResponse (Maybe Text)

-- | The response's http status code.
deleteFlowResponse_httpStatus :: Lens' DeleteFlowResponse Int

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
updateFlowSource_entitlementArn :: Lens' UpdateFlowSource (Maybe Text)

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
updateFlowSource_maxLatency :: Lens' UpdateFlowSource (Maybe Int)

-- | The name of the VPC interface to use for this source.
updateFlowSource_vpcInterfaceName :: Lens' UpdateFlowSource (Maybe Text)

-- | The type of encryption used on the content ingested from this source.
updateFlowSource_decryption :: Lens' UpdateFlowSource (Maybe UpdateEncryption)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
updateFlowSource_maxSyncBuffer :: Lens' UpdateFlowSource (Maybe Int)

-- | The protocol that is used by the source.
updateFlowSource_protocol :: Lens' UpdateFlowSource (Maybe Protocol)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
updateFlowSource_minLatency :: Lens' UpdateFlowSource (Maybe Int)

-- | The port that the flow will be listening on for incoming content.
updateFlowSource_ingestPort :: Lens' UpdateFlowSource (Maybe Int)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
updateFlowSource_description :: Lens' UpdateFlowSource (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
updateFlowSource_mediaStreamSourceConfigurations :: Lens' UpdateFlowSource (Maybe [MediaStreamSourceConfigurationRequest])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
updateFlowSource_whitelistCidr :: Lens' UpdateFlowSource (Maybe Text)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
updateFlowSource_maxBitrate :: Lens' UpdateFlowSource (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
updateFlowSource_streamId :: Lens' UpdateFlowSource (Maybe Text)

-- | The flow that is associated with the source that you want to update.
updateFlowSource_flowArn :: Lens' UpdateFlowSource Text

-- | The ARN of the source that you want to update.
updateFlowSource_sourceArn :: Lens' UpdateFlowSource Text

-- | The ARN of the flow that you want to update.
updateFlowSourceResponse_flowArn :: Lens' UpdateFlowSourceResponse (Maybe Text)

-- | The settings for the source of the flow.
updateFlowSourceResponse_source :: Lens' UpdateFlowSourceResponse (Maybe Source)

-- | The response's http status code.
updateFlowSourceResponse_httpStatus :: Lens' UpdateFlowSourceResponse Int

-- | The flow that you want to grant entitlements on.
grantFlowEntitlements_flowArn :: Lens' GrantFlowEntitlements Text

-- | The list of entitlements that you want to grant.
grantFlowEntitlements_entitlements :: Lens' GrantFlowEntitlements [GrantEntitlementRequest]

-- | The ARN of the flow that these entitlements were granted to.
grantFlowEntitlementsResponse_flowArn :: Lens' GrantFlowEntitlementsResponse (Maybe Text)

-- | The entitlements that were just granted.
grantFlowEntitlementsResponse_entitlements :: Lens' GrantFlowEntitlementsResponse (Maybe [Entitlement])

-- | The response's http status code.
grantFlowEntitlementsResponse_httpStatus :: Lens' GrantFlowEntitlementsResponse Int

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListReservations request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
listReservations_nextToken :: Lens' ListReservations (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListReservations request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 10 results per page.
listReservations_maxResults :: Lens' ListReservations (Maybe Natural)

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListReservations request with MaxResults set
--   at 5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListReservations request a second time and specify the NextToken
--   value.
listReservationsResponse_nextToken :: Lens' ListReservationsResponse (Maybe Text)

-- | A list of all reservations that have been purchased by this account in
--   the current AWS Region.
listReservationsResponse_reservations :: Lens' ListReservationsResponse (Maybe [Reservation])

-- | The response's http status code.
listReservationsResponse_httpStatus :: Lens' ListReservationsResponse Int

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
listOfferings_nextToken :: Lens' ListOfferings (Maybe Text)

-- | The maximum number of results to return per API request. For example,
--   you submit a ListOfferings request with MaxResults set at 5. Although
--   20 items match your request, the service returns no more than the
--   first 5 items. (The service also returns a NextToken value that you
--   can use to fetch the next batch of results.) The service might return
--   fewer results than the MaxResults value. If MaxResults is not included
--   in the request, the service defaults to pagination with a maximum of
--   10 results per page.
listOfferings_maxResults :: Lens' ListOfferings (Maybe Natural)

-- | The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
listOfferingsResponse_nextToken :: Lens' ListOfferingsResponse (Maybe Text)

-- | A list of offerings that are available to this account in the current
--   AWS Region.
listOfferingsResponse_offerings :: Lens' ListOfferingsResponse (Maybe [Offering])

-- | The response's http status code.
listOfferingsResponse_httpStatus :: Lens' ListOfferingsResponse Int

-- | The resolution of the video.
addMediaStreamRequest_videoFormat :: Lens' AddMediaStreamRequest (Maybe Text)

-- | The attributes that you want to assign to the new media stream.
addMediaStreamRequest_attributes :: Lens' AddMediaStreamRequest (Maybe MediaStreamAttributesRequest)

-- | The sample rate (in Hz) for the stream. If the media stream type is
--   video or ancillary data, set this value to 90000. If the media stream
--   type is audio, set this value to either 48000 or 96000.
addMediaStreamRequest_clockRate :: Lens' AddMediaStreamRequest (Maybe Int)

-- | A description that can help you quickly identify what your media
--   stream is used for.
addMediaStreamRequest_description :: Lens' AddMediaStreamRequest (Maybe Text)

-- | The type of media stream.
addMediaStreamRequest_mediaStreamType :: Lens' AddMediaStreamRequest MediaStreamType

-- | A unique identifier for the media stream.
addMediaStreamRequest_mediaStreamId :: Lens' AddMediaStreamRequest Int

-- | A name that helps you distinguish one media stream from another.
addMediaStreamRequest_mediaStreamName :: Lens' AddMediaStreamRequest Text

-- | The IP address from which video will be sent to output destinations.
addOutputRequest_destination :: Lens' AddOutputRequest (Maybe Text)

-- | The maximum latency in milliseconds for Zixi-based streams.
addOutputRequest_maxLatency :: Lens' AddOutputRequest (Maybe Int)

-- | The media streams that are associated with the output, and the
--   parameters for those associations.
addOutputRequest_mediaStreamOutputConfigurations :: Lens' AddOutputRequest (Maybe [MediaStreamOutputConfigurationRequest])

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
addOutputRequest_encryption :: Lens' AddOutputRequest (Maybe Encryption)

-- | The name of the output. This value must be unique within the current
--   flow.
addOutputRequest_name :: Lens' AddOutputRequest (Maybe Text)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
addOutputRequest_cidrAllowList :: Lens' AddOutputRequest (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
addOutputRequest_smoothingLatency :: Lens' AddOutputRequest (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
addOutputRequest_minLatency :: Lens' AddOutputRequest (Maybe Int)

-- | A description of the output. This description appears only on the AWS
--   Elemental MediaConnect console and will not be seen by the end user.
addOutputRequest_description :: Lens' AddOutputRequest (Maybe Text)

-- | The port to use when content is distributed to this output.
addOutputRequest_port :: Lens' AddOutputRequest (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
addOutputRequest_streamId :: Lens' AddOutputRequest (Maybe Text)

-- | The remote ID for the Zixi-pull output stream.
addOutputRequest_remoteId :: Lens' AddOutputRequest (Maybe Text)

-- | The name of the VPC interface attachment to use for this output.
addOutputRequest_vpcInterfaceAttachment :: Lens' AddOutputRequest (Maybe VpcInterfaceAttachment)

-- | The protocol to use for the output.
addOutputRequest_protocol :: Lens' AddOutputRequest Protocol

-- | The IP address where contents of the media stream will be sent.
destinationConfiguration_destinationIp :: Lens' DestinationConfiguration Text

-- | The port to use when the content of the media stream is distributed to
--   the output.
destinationConfiguration_destinationPort :: Lens' DestinationConfiguration Int

-- | The VPC interface that is used for the media stream associated with
--   the output.
destinationConfiguration_interface :: Lens' DestinationConfiguration Interface

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. This value is represented by the elastic
--   network interface IP address of the VPC. This field applies only to
--   outputs that use the CDI or ST 2110 JPEG XS protocol.
destinationConfiguration_outboundIp :: Lens' DestinationConfiguration Text

-- | The IP address where you want MediaConnect to send contents of the
--   media stream.
destinationConfigurationRequest_destinationIp :: Lens' DestinationConfigurationRequest Text

-- | The port that you want MediaConnect to use when it distributes the
--   media stream to the output.
destinationConfigurationRequest_destinationPort :: Lens' DestinationConfigurationRequest Int

-- | The VPC interface that you want to use for the media stream associated
--   with the output.
destinationConfigurationRequest_interface :: Lens' DestinationConfigurationRequest InterfaceRequest

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, with a flow source that uses
--   the CDI protocol.
encodingParameters_encoderProfile :: Lens' EncodingParameters EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
encodingParameters_compressionFactor :: Lens' EncodingParameters Double

-- | A setting on the encoder that drives compression settings. This
--   property only applies to video media streams associated with outputs
--   that use the ST 2110 JPEG XS protocol, if at least one source on the
--   flow uses the CDI protocol.
encodingParametersRequest_encoderProfile :: Lens' EncodingParametersRequest EncoderProfile

-- | A value that is used to calculate compression for an output. The
--   bitrate of the output is calculated as follows: Output bitrate = (1 /
--   compressionFactor) * (source bitrate) This property only applies to
--   outputs that use the ST 2110 JPEG XS protocol, with a flow source that
--   uses the CDI protocol. Valid values are floating point numbers in the
--   range of 3.0 to 10.0, inclusive.
encodingParametersRequest_compressionFactor :: Lens' EncodingParametersRequest Double

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
encryption_keyType :: Lens' Encryption (Maybe KeyType)

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
encryption_resourceId :: Lens' Encryption (Maybe Text)

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
encryption_url :: Lens' Encryption (Maybe Text)

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
encryption_algorithm :: Lens' Encryption (Maybe Algorithm)

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
encryption_constantInitializationVector :: Lens' Encryption (Maybe Text)

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
encryption_deviceId :: Lens' Encryption (Maybe Text)

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
encryption_region :: Lens' Encryption (Maybe Text)

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
encryption_secretArn :: Lens' Encryption (Maybe Text)

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
encryption_roleArn :: Lens' Encryption Text

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
entitlement_dataTransferSubscriberFeePercent :: Lens' Entitlement (Maybe Int)

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
entitlement_encryption :: Lens' Entitlement (Maybe Encryption)

-- | An indication of whether the entitlement is enabled.
entitlement_entitlementStatus :: Lens' Entitlement (Maybe EntitlementStatus)

-- | A description of the entitlement.
entitlement_description :: Lens' Entitlement (Maybe Text)

-- | The ARN of the entitlement.
entitlement_entitlementArn :: Lens' Entitlement Text

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
entitlement_subscribers :: Lens' Entitlement [Text]

-- | The name of the entitlement.
entitlement_name :: Lens' Entitlement Text

-- | Undocumented member.
failoverConfig_state :: Lens' FailoverConfig (Maybe State)

-- | Search window time to look for dash-7 packets
failoverConfig_recoveryWindow :: Lens' FailoverConfig (Maybe Int)

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
failoverConfig_sourcePriority :: Lens' FailoverConfig (Maybe SourcePriority)

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
failoverConfig_failoverMode :: Lens' FailoverConfig (Maybe FailoverMode)

-- | The media streams that are associated with the flow. After you
--   associate a media stream with a source, you can also associate it with
--   outputs on the flow.
flow_mediaStreams :: Lens' Flow (Maybe [MediaStream])

-- | Undocumented member.
flow_sourceFailoverConfig :: Lens' Flow (Maybe FailoverConfig)

-- | The VPC Interfaces for this flow.
flow_vpcInterfaces :: Lens' Flow (Maybe [VpcInterface])

-- | Undocumented member.
flow_sources :: Lens' Flow (Maybe [Source])

-- | The IP address from which video will be sent to output destinations.
flow_egressIp :: Lens' Flow (Maybe Text)

-- | A description of the flow. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
flow_description :: Lens' Flow (Maybe Text)

-- | The current status of the flow.
flow_status :: Lens' Flow Status

-- | The entitlements in this flow.
flow_entitlements :: Lens' Flow [Entitlement]

-- | The outputs in this flow.
flow_outputs :: Lens' Flow [Output]

-- | The Availability Zone that you want to create the flow in. These
--   options are limited to the Availability Zones within the current AWS.
flow_availabilityZone :: Lens' Flow Text

-- | The Amazon Resource Name (ARN), a unique identifier for any AWS
--   resource, of the flow.
flow_flowArn :: Lens' Flow Text

-- | Undocumented member.
flow_source :: Lens' Flow Source

-- | The name of the flow.
flow_name :: Lens' Flow Text

-- | The transfer characteristic system (TCS) that is used in the video.
fmtp_tcs :: Lens' Fmtp (Maybe Tcs)

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
fmtp_exactFramerate :: Lens' Fmtp (Maybe Text)

-- | The pixel aspect ratio (PAR) of the video.
fmtp_par :: Lens' Fmtp (Maybe Text)

-- | The type of compression that was used to smooth the video’s appearance
fmtp_scanMode :: Lens' Fmtp (Maybe ScanMode)

-- | The encoding range of the video.
fmtp_range :: Lens' Fmtp (Maybe Range)

-- | The format of the audio channel.
fmtp_channelOrder :: Lens' Fmtp (Maybe Text)

-- | The format that is used for the representation of color.
fmtp_colorimetry :: Lens' Fmtp (Maybe Colorimetry)

-- | The transfer characteristic system (TCS) that is used in the video.
fmtpRequest_tcs :: Lens' FmtpRequest (Maybe Tcs)

-- | The frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
fmtpRequest_exactFramerate :: Lens' FmtpRequest (Maybe Text)

-- | The pixel aspect ratio (PAR) of the video.
fmtpRequest_par :: Lens' FmtpRequest (Maybe Text)

-- | The type of compression that was used to smooth the video’s
--   appearance.
fmtpRequest_scanMode :: Lens' FmtpRequest (Maybe ScanMode)

-- | The encoding range of the video.
fmtpRequest_range :: Lens' FmtpRequest (Maybe Range)

-- | The format of the audio channel.
fmtpRequest_channelOrder :: Lens' FmtpRequest (Maybe Text)

-- | The format that is used for the representation of color.
fmtpRequest_colorimetry :: Lens' FmtpRequest (Maybe Colorimetry)

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
grantEntitlementRequest_dataTransferSubscriberFeePercent :: Lens' GrantEntitlementRequest (Maybe Int)

-- | The type of encryption that will be used on the output that is
--   associated with this entitlement.
grantEntitlementRequest_encryption :: Lens' GrantEntitlementRequest (Maybe Encryption)

-- | The name of the entitlement. This value must be unique within the
--   current flow.
grantEntitlementRequest_name :: Lens' GrantEntitlementRequest (Maybe Text)

-- | An indication of whether the new entitlement should be enabled or
--   disabled as soon as it is created. If you don’t specify the
--   entitlementStatus field in your request, MediaConnect sets it to
--   ENABLED.
grantEntitlementRequest_entitlementStatus :: Lens' GrantEntitlementRequest (Maybe EntitlementStatus)

-- | A description of the entitlement. This description appears only on the
--   AWS Elemental MediaConnect console and will not be seen by the
--   subscriber or end user.
grantEntitlementRequest_description :: Lens' GrantEntitlementRequest (Maybe Text)

-- | The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flows using your content as the source.
grantEntitlementRequest_subscribers :: Lens' GrantEntitlementRequest [Text]

-- | The port that the flow listens on for an incoming media stream.
inputConfiguration_inputPort :: Lens' InputConfiguration Int

-- | The IP address that the flow listens on for incoming content for a
--   media stream.
inputConfiguration_inputIp :: Lens' InputConfiguration Text

-- | The VPC interface where the media stream comes in from.
inputConfiguration_interface :: Lens' InputConfiguration Interface

-- | The port that you want the flow to listen on for an incoming media
--   stream.
inputConfigurationRequest_inputPort :: Lens' InputConfigurationRequest Int

-- | The VPC interface that you want to use for the incoming media stream.
inputConfigurationRequest_interface :: Lens' InputConfigurationRequest InterfaceRequest

-- | The name of the VPC interface.
interface_name :: Lens' Interface Text

-- | The name of the VPC interface.
interfaceRequest_name :: Lens' InterfaceRequest Text

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
listedEntitlement_dataTransferSubscriberFeePercent :: Lens' ListedEntitlement (Maybe Int)

-- | The ARN of the entitlement.
listedEntitlement_entitlementArn :: Lens' ListedEntitlement Text

-- | The name of the entitlement.
listedEntitlement_entitlementName :: Lens' ListedEntitlement Text

-- | The current status of the flow.
listedFlow_status :: Lens' ListedFlow Status

-- | A description of the flow.
listedFlow_description :: Lens' ListedFlow Text

-- | The type of source. This value is either owned (originated somewhere
--   other than an AWS Elemental MediaConnect flow owned by another AWS
--   account) or entitled (originated at an AWS Elemental MediaConnect flow
--   owned by another AWS account).
listedFlow_sourceType :: Lens' ListedFlow SourceType

-- | The Availability Zone that the flow was created in.
listedFlow_availabilityZone :: Lens' ListedFlow Text

-- | The ARN of the flow.
listedFlow_flowArn :: Lens' ListedFlow Text

-- | The name of the flow.
listedFlow_name :: Lens' ListedFlow Text

-- | The resolution of the video.
mediaStream_videoFormat :: Lens' MediaStream (Maybe Text)

-- | Attributes that are related to the media stream.
mediaStream_attributes :: Lens' MediaStream (Maybe MediaStreamAttributes)

-- | The sample rate for the stream. This value is measured in Hz.
mediaStream_clockRate :: Lens' MediaStream (Maybe Int)

-- | A description that can help you quickly identify what your media
--   stream is used for.
mediaStream_description :: Lens' MediaStream (Maybe Text)

-- | The type of media stream.
mediaStream_mediaStreamType :: Lens' MediaStream MediaStreamType

-- | A unique identifier for the media stream.
mediaStream_mediaStreamId :: Lens' MediaStream Int

-- | A name that helps you distinguish one media stream from another.
mediaStream_mediaStreamName :: Lens' MediaStream Text

-- | The format type number (sometimes referred to as RTP payload type) of
--   the media stream. MediaConnect assigns this value to the media stream.
--   For ST 2110 JPEG XS outputs, you need to provide this value to the
--   receiver.
mediaStream_fmt :: Lens' MediaStream Int

-- | The audio language, in a format that is recognized by the receiver.
mediaStreamAttributes_lang :: Lens' MediaStreamAttributes (Maybe Text)

-- | A set of parameters that define the media stream.
mediaStreamAttributes_fmtp :: Lens' MediaStreamAttributes Fmtp

-- | The audio language, in a format that is recognized by the receiver.
mediaStreamAttributesRequest_lang :: Lens' MediaStreamAttributesRequest (Maybe Text)

-- | The settings that you want to use to define the media stream.
mediaStreamAttributesRequest_fmtp :: Lens' MediaStreamAttributesRequest (Maybe FmtpRequest)

-- | The transport parameters that are associated with each outbound media
--   stream.
mediaStreamOutputConfiguration_destinationConfigurations :: Lens' MediaStreamOutputConfiguration (Maybe [DestinationConfiguration])

-- | Encoding parameters
mediaStreamOutputConfiguration_encodingParameters :: Lens' MediaStreamOutputConfiguration (Maybe EncodingParameters)

-- | The name of the media stream.
mediaStreamOutputConfiguration_mediaStreamName :: Lens' MediaStreamOutputConfiguration Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamOutputConfiguration_encodingName :: Lens' MediaStreamOutputConfiguration EncodingName

-- | The transport parameters that you want to associate with the media
--   stream.
mediaStreamOutputConfigurationRequest_destinationConfigurations :: Lens' MediaStreamOutputConfigurationRequest (Maybe [DestinationConfigurationRequest])

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
mediaStreamOutputConfigurationRequest_encodingParameters :: Lens' MediaStreamOutputConfigurationRequest (Maybe EncodingParametersRequest)

-- | The name of the media stream that is associated with the output.
mediaStreamOutputConfigurationRequest_mediaStreamName :: Lens' MediaStreamOutputConfigurationRequest Text

-- | The format that will be used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamOutputConfigurationRequest_encodingName :: Lens' MediaStreamOutputConfigurationRequest EncodingName

-- | The transport parameters that are associated with an incoming media
--   stream.
mediaStreamSourceConfiguration_inputConfigurations :: Lens' MediaStreamSourceConfiguration (Maybe [InputConfiguration])

-- | The name of the media stream.
mediaStreamSourceConfiguration_mediaStreamName :: Lens' MediaStreamSourceConfiguration Text

-- | The format that was used to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamSourceConfiguration_encodingName :: Lens' MediaStreamSourceConfiguration EncodingName

-- | The transport parameters that you want to associate with the media
--   stream.
mediaStreamSourceConfigurationRequest_inputConfigurations :: Lens' MediaStreamSourceConfigurationRequest (Maybe [InputConfigurationRequest])

-- | The name of the media stream.
mediaStreamSourceConfigurationRequest_mediaStreamName :: Lens' MediaStreamSourceConfigurationRequest Text

-- | The format you want to use to encode the data. For ancillary data
--   streams, set the encoding name to smpte291. For audio streams, set the
--   encoding name to pcm. For video, 2110 streams, set the encoding name
--   to raw. For video, JPEG XS streams, set the encoding name to jxsv.
mediaStreamSourceConfigurationRequest_encodingName :: Lens' MediaStreamSourceConfigurationRequest EncodingName

-- | A list of errors that might have been generated from processes on this
--   flow.
messages_errors :: Lens' Messages [Text]

-- | The type of currency that is used for billing. The currencyCode used
--   for all reservations is US dollars.
offering_currencyCode :: Lens' Offering Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
offering_offeringArn :: Lens' Offering Text

-- | A description of the offering.
offering_offeringDescription :: Lens' Offering Text

-- | The unit of measurement for the duration of the offering.
offering_durationUnits :: Lens' Offering DurationUnits

-- | The length of time that your reservation would be active.
offering_duration :: Lens' Offering Int

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
offering_pricePerUnit :: Lens' Offering Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering.
offering_resourceSpecification :: Lens' Offering ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
offering_priceUnits :: Lens' Offering PriceUnits

-- | The ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
output_entitlementArn :: Lens' Output (Maybe Text)

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
output_dataTransferSubscriberFeePercent :: Lens' Output (Maybe Int)

-- | The address where you want to send the output.
output_destination :: Lens' Output (Maybe Text)

-- | The configuration for each media stream that is associated with the
--   output.
output_mediaStreamOutputConfigurations :: Lens' Output (Maybe [MediaStreamOutputConfiguration])

-- | The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
output_mediaLiveInputArn :: Lens' Output (Maybe Text)

-- | The type of key used for the encryption. If no keyType is provided,
--   the service will use the default setting (static-key).
output_encryption :: Lens' Output (Maybe Encryption)

-- | The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
output_listenerAddress :: Lens' Output (Maybe Text)

-- | Attributes related to the transport stream that are used in the
--   output.
output_transport :: Lens' Output (Maybe Transport)

-- | A description of the output.
output_description :: Lens' Output (Maybe Text)

-- | The port to use when content is distributed to this output.
output_port :: Lens' Output (Maybe Int)

-- | The name of the VPC interface attachment to use for this output.
output_vpcInterfaceAttachment :: Lens' Output (Maybe VpcInterfaceAttachment)

-- | The ARN of the output.
output_outputArn :: Lens' Output Text

-- | The name of the output. This value must be unique within the current
--   flow.
output_name :: Lens' Output Text

-- | The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
reservation_currencyCode :: Lens' Reservation Text

-- | The status of your reservation.
reservation_reservationState :: Lens' Reservation ReservationState

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
reservation_offeringArn :: Lens' Reservation Text

-- | The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   reservation when you purchase an offering.
reservation_reservationArn :: Lens' Reservation Text

-- | The day and time that the reservation becomes active. You set this
--   value when you purchase the offering.
reservation_start :: Lens' Reservation Text

-- | A description of the offering. MediaConnect defines this value in the
--   offering.
reservation_offeringDescription :: Lens' Reservation Text

-- | The name that you assigned to the reservation when you purchased the
--   offering.
reservation_reservationName :: Lens' Reservation Text

-- | The day and time that this reservation expires. This value is
--   calculated based on the start date and time that you set and the
--   offering's duration.
reservation_end :: Lens' Reservation Text

-- | The length of time that this reservation is active. MediaConnect
--   defines this value in the offering.
reservation_duration :: Lens' Reservation Int

-- | The unit of measurement for the duration of the reservation.
--   MediaConnect defines this value in the offering.
reservation_durationUnits :: Lens' Reservation DurationUnits

-- | The cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate. MediaConnect defines this value in the offering.
reservation_pricePerUnit :: Lens' Reservation Text

-- | A definition of the amount of outbound bandwidth that you would be
--   reserving if you purchase the offering. MediaConnect defines the
--   values that make up the resourceSpecification in the offering.
reservation_resourceSpecification :: Lens' Reservation ResourceSpecification

-- | The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
reservation_priceUnits :: Lens' Reservation PriceUnits

-- | The amount of outbound bandwidth that is discounted in the offering.
resourceSpecification_reservedBitrate :: Lens' ResourceSpecification (Maybe Int)

-- | The type of resource and the unit that is being billed for.
resourceSpecification_resourceType :: Lens' ResourceSpecification ResourceType

-- | The ARN of the entitlement that allows you to subscribe to this flow.
--   The entitlement is set by the flow originator, and the ARN is
--   generated as part of the originator's flow.
setSourceRequest_entitlementArn :: Lens' SetSourceRequest (Maybe Text)

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
setSourceRequest_maxLatency :: Lens' SetSourceRequest (Maybe Int)

-- | The name of the VPC interface to use for this source.
setSourceRequest_vpcInterfaceName :: Lens' SetSourceRequest (Maybe Text)

-- | The type of encryption that is used on the content ingested from this
--   source.
setSourceRequest_decryption :: Lens' SetSourceRequest (Maybe Encryption)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
setSourceRequest_maxSyncBuffer :: Lens' SetSourceRequest (Maybe Int)

-- | The protocol that is used by the source.
setSourceRequest_protocol :: Lens' SetSourceRequest (Maybe Protocol)

-- | The name of the source.
setSourceRequest_name :: Lens' SetSourceRequest (Maybe Text)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
setSourceRequest_minLatency :: Lens' SetSourceRequest (Maybe Int)

-- | The port that the flow will be listening on for incoming content.
setSourceRequest_ingestPort :: Lens' SetSourceRequest (Maybe Int)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
setSourceRequest_description :: Lens' SetSourceRequest (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
setSourceRequest_mediaStreamSourceConfigurations :: Lens' SetSourceRequest (Maybe [MediaStreamSourceConfigurationRequest])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
setSourceRequest_whitelistCidr :: Lens' SetSourceRequest (Maybe Text)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
setSourceRequest_maxBitrate :: Lens' SetSourceRequest (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
setSourceRequest_streamId :: Lens' SetSourceRequest (Maybe Text)

-- | The ARN of the entitlement that allows you to subscribe to content
--   that comes from another AWS account. The entitlement is set by the
--   content originator and the ARN is generated as part of the
--   originator's flow.
source_entitlementArn :: Lens' Source (Maybe Text)

-- | Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
source_dataTransferSubscriberFeePercent :: Lens' Source (Maybe Int)

-- | The name of the VPC interface that is used for this source.
source_vpcInterfaceName :: Lens' Source (Maybe Text)

-- | The type of encryption that is used on the content ingested from this
--   source.
source_decryption :: Lens' Source (Maybe Encryption)

-- | The IP address that the flow will be listening on for incoming
--   content.
source_ingestIp :: Lens' Source (Maybe Text)

-- | The port that the flow will be listening on for incoming content.
source_ingestPort :: Lens' Source (Maybe Int)

-- | Attributes related to the transport stream that are used in the
--   source.
source_transport :: Lens' Source (Maybe Transport)

-- | A description for the source. This value is not used or seen outside
--   of the current AWS Elemental MediaConnect account.
source_description :: Lens' Source (Maybe Text)

-- | The media streams that are associated with the source, and the
--   parameters for those associations.
source_mediaStreamSourceConfigurations :: Lens' Source (Maybe [MediaStreamSourceConfiguration])

-- | The range of IP addresses that should be allowed to contribute content
--   to your source. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
source_whitelistCidr :: Lens' Source (Maybe Text)

-- | The ARN of the source.
source_sourceArn :: Lens' Source Text

-- | The name of the source.
source_name :: Lens' Source Text

-- | The name of the source you choose as the primary source for this flow.
sourcePriority_primarySource :: Lens' SourcePriority (Maybe Text)

-- | The maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
transport_maxLatency :: Lens' Transport (Maybe Int)

-- | The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
transport_maxSyncBuffer :: Lens' Transport (Maybe Int)

-- | The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
transport_cidrAllowList :: Lens' Transport (Maybe [Text])

-- | The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
--   streams.
transport_smoothingLatency :: Lens' Transport (Maybe Int)

-- | The minimum latency in milliseconds for SRT-based streams. In streams
--   that use the SRT protocol, this value that you set on your
--   MediaConnect source or output represents the minimal potential latency
--   of that connection. The latency of the stream is set to the highest
--   number between the sender’s minimum latency and the receiver’s minimum
--   latency.
transport_minLatency :: Lens' Transport (Maybe Int)

-- | The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
transport_maxBitrate :: Lens' Transport (Maybe Int)

-- | The stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
transport_streamId :: Lens' Transport (Maybe Text)

-- | The remote ID for the Zixi-pull stream.
transport_remoteId :: Lens' Transport (Maybe Text)

-- | The protocol that is used by the source or output.
transport_protocol :: Lens' Transport Protocol

-- | The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
updateEncryption_keyType :: Lens' UpdateEncryption (Maybe KeyType)

-- | An identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
updateEncryption_resourceId :: Lens' UpdateEncryption (Maybe Text)

-- | The URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
updateEncryption_url :: Lens' UpdateEncryption (Maybe Text)

-- | The type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
updateEncryption_algorithm :: Lens' UpdateEncryption (Maybe Algorithm)

-- | A 128-bit, 16-byte hex value represented by a 32-character string, to
--   be used with the key for encrypting content. This parameter is not
--   valid for static key encryption.
updateEncryption_constantInitializationVector :: Lens' UpdateEncryption (Maybe Text)

-- | The value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
updateEncryption_deviceId :: Lens' UpdateEncryption (Maybe Text)

-- | The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
updateEncryption_region :: Lens' UpdateEncryption (Maybe Text)

-- | The ARN of the secret that you created in AWS Secrets Manager to store
--   the encryption key. This parameter is required for static key
--   encryption and is not valid for SPEKE encryption.
updateEncryption_secretArn :: Lens' UpdateEncryption (Maybe Text)

-- | The ARN of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
updateEncryption_roleArn :: Lens' UpdateEncryption (Maybe Text)

-- | Undocumented member.
updateFailoverConfig_state :: Lens' UpdateFailoverConfig (Maybe State)

-- | Recovery window time to look for dash-7 packets
updateFailoverConfig_recoveryWindow :: Lens' UpdateFailoverConfig (Maybe Int)

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
updateFailoverConfig_sourcePriority :: Lens' UpdateFailoverConfig (Maybe SourcePriority)

-- | The type of failover you choose for this flow. MERGE combines the
--   source streams into a single stream, allowing graceful recovery from
--   any single-source loss. FAILOVER allows switching between different
--   streams.
updateFailoverConfig_failoverMode :: Lens' UpdateFailoverConfig (Maybe FailoverMode)

-- | The type of network interface.
vpcInterface_networkInterfaceType :: Lens' VpcInterface NetworkInterfaceType

-- | IDs of the network interfaces created in customer's account by
--   MediaConnect.
vpcInterface_networkInterfaceIds :: Lens' VpcInterface [Text]

-- | Subnet must be in the AZ of the Flow
vpcInterface_subnetId :: Lens' VpcInterface Text

-- | Security Group IDs to be used on ENI.
vpcInterface_securityGroupIds :: Lens' VpcInterface [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
vpcInterface_roleArn :: Lens' VpcInterface Text

-- | Immutable and has to be a unique against other VpcInterfaces in this
--   Flow
vpcInterface_name :: Lens' VpcInterface Text

-- | The name of the VPC interface to use for this output.
vpcInterfaceAttachment_vpcInterfaceName :: Lens' VpcInterfaceAttachment (Maybe Text)

-- | The type of network interface. If this value is not included in the
--   request, MediaConnect uses ENA as the networkInterfaceType.
vpcInterfaceRequest_networkInterfaceType :: Lens' VpcInterfaceRequest (Maybe NetworkInterfaceType)

-- | Subnet must be in the AZ of the Flow
vpcInterfaceRequest_subnetId :: Lens' VpcInterfaceRequest Text

-- | Security Group IDs to be used on ENI.
vpcInterfaceRequest_securityGroupIds :: Lens' VpcInterfaceRequest [Text]

-- | Role Arn MediaConnect can assumes to create ENIs in customer's account
vpcInterfaceRequest_roleArn :: Lens' VpcInterfaceRequest Text

-- | The name of the VPC Interface. This value must be unique within the
--   current flow.
vpcInterfaceRequest_name :: Lens' VpcInterfaceRequest Text


module Amazonka.MediaConnect.Waiters

-- | Polls <a>DescribeFlow</a> every 3 seconds until a successful state is
--   reached. An error is returned after 40 failed checks.
newFlowStandby :: Wait DescribeFlow

-- | Polls <a>DescribeFlow</a> every 3 seconds until a successful state is
--   reached. An error is returned after 40 failed checks.
newFlowActive :: Wait DescribeFlow

-- | Polls <a>DescribeFlow</a> every 3 seconds until a successful state is
--   reached. An error is returned after 40 failed checks.
newFlowDeleted :: Wait DescribeFlow


-- | Derived from API version <tt>2018-11-14</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   API for AWS Elemental MediaConnect
module Amazonka.MediaConnect

-- | API version <tt>2018-11-14</tt> of the Amazon MediaConnect SDK
--   configuration.
defaultService :: Service

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_GrantFlowEntitlements420Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_CreateFlow420Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_AddFlowOutputs420Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised by AWS Elemental MediaConnect. See the error message
--   and documentation for the operation for more information on the cause
--   of this exception.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeFlow</a> every 3 seconds until a successful state is
--   reached. An error is returned after 40 failed checks.
newFlowStandby :: Wait DescribeFlow

-- | Polls <a>DescribeFlow</a> every 3 seconds until a successful state is
--   reached. An error is returned after 40 failed checks.
newFlowActive :: Wait DescribeFlow

-- | Polls <a>DescribeFlow</a> every 3 seconds until a successful state is
--   reached. An error is returned after 40 failed checks.
newFlowDeleted :: Wait DescribeFlow

-- | <i>See:</i> <a>newRemoveFlowVpcInterface</a> smart constructor.
data RemoveFlowVpcInterface
RemoveFlowVpcInterface' :: Text -> Text -> RemoveFlowVpcInterface

-- | Create a value of <a>RemoveFlowVpcInterface</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterface_flowArn</a> - The flow that you want to
--   remove a VPC interface from.
--   
--   <a>$sel:vpcInterfaceName:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterface_vpcInterfaceName</a> - The name of the VPC
--   interface that you want to remove.
newRemoveFlowVpcInterface :: Text -> Text -> RemoveFlowVpcInterface

-- | <i>See:</i> <a>newRemoveFlowVpcInterfaceResponse</a> smart
--   constructor.
data RemoveFlowVpcInterfaceResponse
RemoveFlowVpcInterfaceResponse' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> RemoveFlowVpcInterfaceResponse

-- | Create a value of <a>RemoveFlowVpcInterfaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterfaceResponse_flowArn</a> - The ARN of the flow
--   that is associated with the VPC interface you removed.
--   
--   
--   <a>$sel:nonDeletedNetworkInterfaceIds:RemoveFlowVpcInterfaceResponse'</a>,
--   <a>removeFlowVpcInterfaceResponse_nonDeletedNetworkInterfaceIds</a> -
--   IDs of network interfaces associated with the removed VPC interface
--   that Media Connect was unable to remove.
--   
--   <a>$sel:vpcInterfaceName:RemoveFlowVpcInterface'</a>,
--   <a>removeFlowVpcInterfaceResponse_vpcInterfaceName</a> - The name of
--   the VPC interface that was removed.
--   
--   <a>$sel:httpStatus:RemoveFlowVpcInterfaceResponse'</a>,
--   <a>removeFlowVpcInterfaceResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowVpcInterfaceResponse :: Int -> RemoveFlowVpcInterfaceResponse

-- | <i>See:</i> <a>newRemoveFlowMediaStream</a> smart constructor.
data RemoveFlowMediaStream
RemoveFlowMediaStream' :: Text -> Text -> RemoveFlowMediaStream

-- | Create a value of <a>RemoveFlowMediaStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStream_flowArn</a> - The Amazon Resource Name (ARN)
--   of the flow.
--   
--   <a>$sel:mediaStreamName:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStream_mediaStreamName</a> - The name of the media
--   stream that you want to remove.
newRemoveFlowMediaStream :: Text -> Text -> RemoveFlowMediaStream

-- | <i>See:</i> <a>newRemoveFlowMediaStreamResponse</a> smart constructor.
data RemoveFlowMediaStreamResponse
RemoveFlowMediaStreamResponse' :: Maybe Text -> Maybe Text -> Int -> RemoveFlowMediaStreamResponse

-- | Create a value of <a>RemoveFlowMediaStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mediaStreamName:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStreamResponse_mediaStreamName</a> - The name of the
--   media stream that was removed.
--   
--   <a>$sel:flowArn:RemoveFlowMediaStream'</a>,
--   <a>removeFlowMediaStreamResponse_flowArn</a> - The Amazon Resource
--   Name (ARN) of the flow.
--   
--   <a>$sel:httpStatus:RemoveFlowMediaStreamResponse'</a>,
--   <a>removeFlowMediaStreamResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowMediaStreamResponse :: Int -> RemoveFlowMediaStreamResponse

-- | The fields that you want to update in the output.
--   
--   <i>See:</i> <a>newUpdateFlowOutput</a> smart constructor.
data UpdateFlowOutput
UpdateFlowOutput' :: Maybe Text -> Maybe Int -> Maybe [MediaStreamOutputConfigurationRequest] -> Maybe Protocol -> Maybe UpdateEncryption -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe VpcInterfaceAttachment -> Text -> Text -> UpdateFlowOutput

-- | Create a value of <a>UpdateFlowOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_destination</a> - The IP address where you want to
--   send the output.
--   
--   <a>$sel:maxLatency:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_maxLatency</a> - The maximum latency in
--   milliseconds for Zixi-based streams.
--   
--   <a>$sel:mediaStreamOutputConfigurations:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_mediaStreamOutputConfigurations</a> - The media
--   streams that are associated with the output, and the parameters for
--   those associations.
--   
--   <a>$sel:protocol:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_protocol</a> - The protocol to use for the output.
--   
--   <a>$sel:encryption:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_encryption</a> - The type of key used for the
--   encryption. If no keyType is provided, the service will use the
--   default setting (static-key).
--   
--   <a>$sel:cidrAllowList:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_cidrAllowList</a> - The range of IP addresses that
--   should be allowed to initiate output requests to this flow. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:description:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_description</a> - A description of the output.
--   This description appears only on the AWS Elemental MediaConnect
--   console and will not be seen by the end user.
--   
--   <a>$sel:port:UpdateFlowOutput'</a>, <a>updateFlowOutput_port</a> - The
--   port to use when content is distributed to this output.
--   
--   <a>$sel:streamId:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_remoteId</a> - The remote ID for the Zixi-pull
--   stream.
--   
--   <a>$sel:vpcInterfaceAttachment:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_vpcInterfaceAttachment</a> - The name of the VPC
--   interface attachment to use for this output.
--   
--   <a>$sel:flowArn:UpdateFlowOutput'</a>, <a>updateFlowOutput_flowArn</a>
--   - The flow that is associated with the output that you want to update.
--   
--   <a>$sel:outputArn:UpdateFlowOutput'</a>,
--   <a>updateFlowOutput_outputArn</a> - The ARN of the output that you
--   want to update.
newUpdateFlowOutput :: Text -> Text -> UpdateFlowOutput

-- | <i>See:</i> <a>newUpdateFlowOutputResponse</a> smart constructor.
data UpdateFlowOutputResponse
UpdateFlowOutputResponse' :: Maybe Text -> Maybe Output -> Int -> UpdateFlowOutputResponse

-- | Create a value of <a>UpdateFlowOutputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowOutput'</a>,
--   <a>updateFlowOutputResponse_flowArn</a> - The ARN of the flow that is
--   associated with the updated output.
--   
--   <a>$sel:output:UpdateFlowOutputResponse'</a>,
--   <a>updateFlowOutputResponse_output</a> - The new settings of the
--   output that you updated.
--   
--   <a>$sel:httpStatus:UpdateFlowOutputResponse'</a>,
--   <a>updateFlowOutputResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowOutputResponse :: Int -> UpdateFlowOutputResponse

-- | A request to add outputs to the specified flow.
--   
--   <i>See:</i> <a>newAddFlowOutputs</a> smart constructor.
data AddFlowOutputs
AddFlowOutputs' :: Text -> [AddOutputRequest] -> AddFlowOutputs

-- | Create a value of <a>AddFlowOutputs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowOutputs'</a>, <a>addFlowOutputs_flowArn</a> -
--   The flow that you want to add outputs to.
--   
--   <a>$sel:outputs:AddFlowOutputs'</a>, <a>addFlowOutputs_outputs</a> - A
--   list of outputs that you want to add.
newAddFlowOutputs :: Text -> AddFlowOutputs

-- | <i>See:</i> <a>newAddFlowOutputsResponse</a> smart constructor.
data AddFlowOutputsResponse
AddFlowOutputsResponse' :: Maybe Text -> Maybe [Output] -> Int -> AddFlowOutputsResponse

-- | Create a value of <a>AddFlowOutputsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowOutputs'</a>,
--   <a>addFlowOutputsResponse_flowArn</a> - The ARN of the flow that these
--   outputs were added to.
--   
--   <a>$sel:outputs:AddFlowOutputs'</a>,
--   <a>addFlowOutputsResponse_outputs</a> - The details of the newly added
--   outputs.
--   
--   <a>$sel:httpStatus:AddFlowOutputsResponse'</a>,
--   <a>addFlowOutputsResponse_httpStatus</a> - The response's http status
--   code.
newAddFlowOutputsResponse :: Int -> AddFlowOutputsResponse

-- | <i>See:</i> <a>newStartFlow</a> smart constructor.
data StartFlow
StartFlow' :: Text -> StartFlow

-- | Create a value of <a>StartFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:StartFlow'</a>, <a>startFlow_flowArn</a> - The ARN of
--   the flow that you want to start.
newStartFlow :: Text -> StartFlow

-- | <i>See:</i> <a>newStartFlowResponse</a> smart constructor.
data StartFlowResponse
StartFlowResponse' :: Maybe Status -> Maybe Text -> Int -> StartFlowResponse

-- | Create a value of <a>StartFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StartFlowResponse'</a>, <a>startFlowResponse_status</a>
--   - The status of the flow when the StartFlow process begins.
--   
--   <a>$sel:flowArn:StartFlow'</a>, <a>startFlowResponse_flowArn</a> - The
--   ARN of the flow that you started.
--   
--   <a>$sel:httpStatus:StartFlowResponse'</a>,
--   <a>startFlowResponse_httpStatus</a> - The response's http status code.
newStartFlowResponse :: Int -> StartFlowResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the AWS Elemental MediaConnect resource for
--   which to list the tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A map from tag keys to
--   values. Tag keys can have a maximum character length of 128
--   characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A request to add sources to the flow.
--   
--   <i>See:</i> <a>newAddFlowSources</a> smart constructor.
data AddFlowSources
AddFlowSources' :: Text -> [SetSourceRequest] -> AddFlowSources

-- | Create a value of <a>AddFlowSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowSources'</a>, <a>addFlowSources_flowArn</a> -
--   The flow that you want to mutate.
--   
--   <a>$sel:sources:AddFlowSources'</a>, <a>addFlowSources_sources</a> - A
--   list of sources that you want to add.
newAddFlowSources :: Text -> AddFlowSources

-- | <i>See:</i> <a>newAddFlowSourcesResponse</a> smart constructor.
data AddFlowSourcesResponse
AddFlowSourcesResponse' :: Maybe Text -> Maybe [Source] -> Int -> AddFlowSourcesResponse

-- | Create a value of <a>AddFlowSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowSources'</a>,
--   <a>addFlowSourcesResponse_flowArn</a> - The ARN of the flow that these
--   sources were added to.
--   
--   <a>$sel:sources:AddFlowSources'</a>,
--   <a>addFlowSourcesResponse_sources</a> - The details of the newly added
--   sources.
--   
--   <a>$sel:httpStatus:AddFlowSourcesResponse'</a>,
--   <a>addFlowSourcesResponse_httpStatus</a> - The response's http status
--   code.
newAddFlowSourcesResponse :: Int -> AddFlowSourcesResponse

-- | <i>See:</i> <a>newDescribeReservation</a> smart constructor.
data DescribeReservation
DescribeReservation' :: Text -> DescribeReservation

-- | Create a value of <a>DescribeReservation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservationArn:DescribeReservation'</a>,
--   <a>describeReservation_reservationArn</a> - The Amazon Resource Name
--   (ARN) of the reservation.
newDescribeReservation :: Text -> DescribeReservation

-- | <i>See:</i> <a>newDescribeReservationResponse</a> smart constructor.
data DescribeReservationResponse
DescribeReservationResponse' :: Maybe Reservation -> Int -> DescribeReservationResponse

-- | Create a value of <a>DescribeReservationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservation:DescribeReservationResponse'</a>,
--   <a>describeReservationResponse_reservation</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeReservationResponse'</a>,
--   <a>describeReservationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeReservationResponse :: Int -> DescribeReservationResponse

-- | A request to add media streams to the flow.
--   
--   <i>See:</i> <a>newAddFlowMediaStreams</a> smart constructor.
data AddFlowMediaStreams
AddFlowMediaStreams' :: Text -> [AddMediaStreamRequest] -> AddFlowMediaStreams

-- | Create a value of <a>AddFlowMediaStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreams_flowArn</a> - The Amazon Resource Name (ARN) of
--   the flow.
--   
--   <a>$sel:mediaStreams:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreams_mediaStreams</a> - The media streams that you
--   want to add to the flow.
newAddFlowMediaStreams :: Text -> AddFlowMediaStreams

-- | <i>See:</i> <a>newAddFlowMediaStreamsResponse</a> smart constructor.
data AddFlowMediaStreamsResponse
AddFlowMediaStreamsResponse' :: Maybe Text -> Maybe [MediaStream] -> Int -> AddFlowMediaStreamsResponse

-- | Create a value of <a>AddFlowMediaStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreamsResponse_flowArn</a> - The ARN of the flow that
--   you added media streams to.
--   
--   <a>$sel:mediaStreams:AddFlowMediaStreams'</a>,
--   <a>addFlowMediaStreamsResponse_mediaStreams</a> - The media streams
--   that you added to the flow.
--   
--   <a>$sel:httpStatus:AddFlowMediaStreamsResponse'</a>,
--   <a>addFlowMediaStreamsResponse_httpStatus</a> - The response's http
--   status code.
newAddFlowMediaStreamsResponse :: Int -> AddFlowMediaStreamsResponse

-- | <i>See:</i> <a>newRemoveFlowOutput</a> smart constructor.
data RemoveFlowOutput
RemoveFlowOutput' :: Text -> Text -> RemoveFlowOutput

-- | Create a value of <a>RemoveFlowOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowOutput'</a>, <a>removeFlowOutput_flowArn</a>
--   - The flow that you want to remove an output from.
--   
--   <a>$sel:outputArn:RemoveFlowOutput'</a>,
--   <a>removeFlowOutput_outputArn</a> - The ARN of the output that you
--   want to remove.
newRemoveFlowOutput :: Text -> Text -> RemoveFlowOutput

-- | <i>See:</i> <a>newRemoveFlowOutputResponse</a> smart constructor.
data RemoveFlowOutputResponse
RemoveFlowOutputResponse' :: Maybe Text -> Maybe Text -> Int -> RemoveFlowOutputResponse

-- | Create a value of <a>RemoveFlowOutputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowOutput'</a>,
--   <a>removeFlowOutputResponse_flowArn</a> - The ARN of the flow that is
--   associated with the output you removed.
--   
--   <a>$sel:outputArn:RemoveFlowOutput'</a>,
--   <a>removeFlowOutputResponse_outputArn</a> - The ARN of the output that
--   was removed.
--   
--   <a>$sel:httpStatus:RemoveFlowOutputResponse'</a>,
--   <a>removeFlowOutputResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowOutputResponse :: Int -> RemoveFlowOutputResponse

-- | <i>See:</i> <a>newRevokeFlowEntitlement</a> smart constructor.
data RevokeFlowEntitlement
RevokeFlowEntitlement' :: Text -> Text -> RevokeFlowEntitlement

-- | Create a value of <a>RevokeFlowEntitlement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlement_flowArn</a> - The flow that you want to
--   revoke an entitlement from.
--   
--   <a>$sel:entitlementArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlement_entitlementArn</a> - The ARN of the
--   entitlement that you want to revoke.
newRevokeFlowEntitlement :: Text -> Text -> RevokeFlowEntitlement

-- | <i>See:</i> <a>newRevokeFlowEntitlementResponse</a> smart constructor.
data RevokeFlowEntitlementResponse
RevokeFlowEntitlementResponse' :: Maybe Text -> Maybe Text -> Int -> RevokeFlowEntitlementResponse

-- | Create a value of <a>RevokeFlowEntitlementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlementResponse_entitlementArn</a> - The ARN of the
--   entitlement that was revoked.
--   
--   <a>$sel:flowArn:RevokeFlowEntitlement'</a>,
--   <a>revokeFlowEntitlementResponse_flowArn</a> - The ARN of the flow
--   that the entitlement was revoked from.
--   
--   <a>$sel:httpStatus:RevokeFlowEntitlementResponse'</a>,
--   <a>revokeFlowEntitlementResponse_httpStatus</a> - The response's http
--   status code.
newRevokeFlowEntitlementResponse :: Int -> RevokeFlowEntitlementResponse

-- | Creates a new flow. The request must include one source. The request
--   optionally can include outputs (up to 50) and entitlements (up to 50).
--   
--   <i>See:</i> <a>newCreateFlow</a> smart constructor.
data CreateFlow
CreateFlow' :: Maybe [AddMediaStreamRequest] -> Maybe FailoverConfig -> Maybe [VpcInterfaceRequest] -> Maybe [SetSourceRequest] -> Maybe [AddOutputRequest] -> Maybe Text -> Maybe [GrantEntitlementRequest] -> Maybe SetSourceRequest -> Text -> CreateFlow

-- | Create a value of <a>CreateFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mediaStreams:CreateFlow'</a>, <a>createFlow_mediaStreams</a> -
--   The media streams that you want to add to the flow. You can associate
--   these media streams with sources and outputs on the flow.
--   
--   <a>$sel:sourceFailoverConfig:CreateFlow'</a>,
--   <a>createFlow_sourceFailoverConfig</a> - Undocumented member.
--   
--   <a>$sel:vpcInterfaces:CreateFlow'</a>, <a>createFlow_vpcInterfaces</a>
--   - The VPC interfaces you want on the flow.
--   
--   <a>$sel:sources:CreateFlow'</a>, <a>createFlow_sources</a> -
--   Undocumented member.
--   
--   <a>$sel:outputs:CreateFlow'</a>, <a>createFlow_outputs</a> - The
--   outputs that you want to add to this flow.
--   
--   <a>$sel:availabilityZone:CreateFlow'</a>,
--   <a>createFlow_availabilityZone</a> - The Availability Zone that you
--   want to create the flow in. These options are limited to the
--   Availability Zones within the current AWS Region.
--   
--   <a>$sel:entitlements:CreateFlow'</a>, <a>createFlow_entitlements</a> -
--   The entitlements that you want to grant on a flow.
--   
--   <a>$sel:source:CreateFlow'</a>, <a>createFlow_source</a> -
--   Undocumented member.
--   
--   <a>$sel:name:CreateFlow'</a>, <a>createFlow_name</a> - The name of the
--   flow.
newCreateFlow :: Text -> CreateFlow

-- | <i>See:</i> <a>newCreateFlowResponse</a> smart constructor.
data CreateFlowResponse
CreateFlowResponse' :: Maybe Flow -> Int -> CreateFlowResponse

-- | Create a value of <a>CreateFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flow:CreateFlowResponse'</a>, <a>createFlowResponse_flow</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateFlowResponse'</a>,
--   <a>createFlowResponse_httpStatus</a> - The response's http status
--   code.
newCreateFlowResponse :: Int -> CreateFlowResponse

-- | <i>See:</i> <a>newRemoveFlowSource</a> smart constructor.
data RemoveFlowSource
RemoveFlowSource' :: Text -> Text -> RemoveFlowSource

-- | Create a value of <a>RemoveFlowSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowSource'</a>, <a>removeFlowSource_flowArn</a>
--   - The flow that you want to remove a source from.
--   
--   <a>$sel:sourceArn:RemoveFlowSource'</a>,
--   <a>removeFlowSource_sourceArn</a> - The ARN of the source that you
--   want to remove.
newRemoveFlowSource :: Text -> Text -> RemoveFlowSource

-- | <i>See:</i> <a>newRemoveFlowSourceResponse</a> smart constructor.
data RemoveFlowSourceResponse
RemoveFlowSourceResponse' :: Maybe Text -> Maybe Text -> Int -> RemoveFlowSourceResponse

-- | Create a value of <a>RemoveFlowSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:RemoveFlowSource'</a>,
--   <a>removeFlowSourceResponse_flowArn</a> - The ARN of the flow that is
--   associated with the source you removed.
--   
--   <a>$sel:sourceArn:RemoveFlowSource'</a>,
--   <a>removeFlowSourceResponse_sourceArn</a> - The ARN of the source that
--   was removed.
--   
--   <a>$sel:httpStatus:RemoveFlowSourceResponse'</a>,
--   <a>removeFlowSourceResponse_httpStatus</a> - The response's http
--   status code.
newRemoveFlowSourceResponse :: Int -> RemoveFlowSourceResponse

-- | <i>See:</i> <a>newDescribeFlow</a> smart constructor.
data DescribeFlow
DescribeFlow' :: Text -> DescribeFlow

-- | Create a value of <a>DescribeFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:DescribeFlow'</a>, <a>describeFlow_flowArn</a> - The
--   ARN of the flow that you want to describe.
newDescribeFlow :: Text -> DescribeFlow

-- | <i>See:</i> <a>newDescribeFlowResponse</a> smart constructor.
data DescribeFlowResponse
DescribeFlowResponse' :: Maybe Flow -> Maybe Messages -> Int -> DescribeFlowResponse

-- | Create a value of <a>DescribeFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flow:DescribeFlowResponse'</a>,
--   <a>describeFlowResponse_flow</a> - Undocumented member.
--   
--   <a>$sel:messages:DescribeFlowResponse'</a>,
--   <a>describeFlowResponse_messages</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeFlowResponse'</a>,
--   <a>describeFlowResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFlowResponse :: Int -> DescribeFlowResponse

-- | The entitlement fields that you want to update.
--   
--   <i>See:</i> <a>newUpdateFlowEntitlement</a> smart constructor.
data UpdateFlowEntitlement
UpdateFlowEntitlement' :: Maybe UpdateEncryption -> Maybe EntitlementStatus -> Maybe Text -> Maybe [Text] -> Text -> Text -> UpdateFlowEntitlement

-- | Create a value of <a>UpdateFlowEntitlement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryption:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_encryption</a> - The type of encryption that
--   will be used on the output associated with this entitlement.
--   
--   <a>$sel:entitlementStatus:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_entitlementStatus</a> - An indication of
--   whether you want to enable the entitlement to allow access, or disable
--   it to stop streaming content to the subscriber’s flow temporarily. If
--   you don’t specify the entitlementStatus field in your request,
--   MediaConnect leaves the value unchanged.
--   
--   <a>$sel:description:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_description</a> - A description of the
--   entitlement. This description appears only on the AWS Elemental
--   MediaConnect console and will not be seen by the subscriber or end
--   user.
--   
--   <a>$sel:subscribers:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_subscribers</a> - The AWS account IDs that
--   you want to share your content with. The receiving accounts
--   (subscribers) will be allowed to create their own flow using your
--   content as the source.
--   
--   <a>$sel:flowArn:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_flowArn</a> - The flow that is associated
--   with the entitlement that you want to update.
--   
--   <a>$sel:entitlementArn:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlement_entitlementArn</a> - The ARN of the
--   entitlement that you want to update.
newUpdateFlowEntitlement :: Text -> Text -> UpdateFlowEntitlement

-- | <i>See:</i> <a>newUpdateFlowEntitlementResponse</a> smart constructor.
data UpdateFlowEntitlementResponse
UpdateFlowEntitlementResponse' :: Maybe Text -> Maybe Entitlement -> Int -> UpdateFlowEntitlementResponse

-- | Create a value of <a>UpdateFlowEntitlementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowEntitlement'</a>,
--   <a>updateFlowEntitlementResponse_flowArn</a> - The ARN of the flow
--   that this entitlement was granted on.
--   
--   <a>$sel:entitlement:UpdateFlowEntitlementResponse'</a>,
--   <a>updateFlowEntitlementResponse_entitlement</a> - The new
--   configuration of the entitlement that you updated.
--   
--   <a>$sel:httpStatus:UpdateFlowEntitlementResponse'</a>,
--   <a>updateFlowEntitlementResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowEntitlementResponse :: Int -> UpdateFlowEntitlementResponse

-- | <i>See:</i> <a>newStopFlow</a> smart constructor.
data StopFlow
StopFlow' :: Text -> StopFlow

-- | Create a value of <a>StopFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:StopFlow'</a>, <a>stopFlow_flowArn</a> - The ARN of
--   the flow that you want to stop.
newStopFlow :: Text -> StopFlow

-- | <i>See:</i> <a>newStopFlowResponse</a> smart constructor.
data StopFlowResponse
StopFlowResponse' :: Maybe Status -> Maybe Text -> Int -> StopFlowResponse

-- | Create a value of <a>StopFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StopFlowResponse'</a>, <a>stopFlowResponse_status</a> -
--   The status of the flow when the StopFlow process begins.
--   
--   <a>$sel:flowArn:StopFlow'</a>, <a>stopFlowResponse_flowArn</a> - The
--   ARN of the flow that you stopped.
--   
--   <a>$sel:httpStatus:StopFlowResponse'</a>,
--   <a>stopFlowResponse_httpStatus</a> - The response's http status code.
newStopFlowResponse :: Int -> StopFlowResponse

-- | <i>See:</i> <a>newDescribeOffering</a> smart constructor.
data DescribeOffering
DescribeOffering' :: Text -> DescribeOffering

-- | Create a value of <a>DescribeOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringArn:DescribeOffering'</a>,
--   <a>describeOffering_offeringArn</a> - The Amazon Resource Name (ARN)
--   of the offering.
newDescribeOffering :: Text -> DescribeOffering

-- | <i>See:</i> <a>newDescribeOfferingResponse</a> smart constructor.
data DescribeOfferingResponse
DescribeOfferingResponse' :: Maybe Offering -> Int -> DescribeOfferingResponse

-- | Create a value of <a>DescribeOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offering:DescribeOfferingResponse'</a>,
--   <a>describeOfferingResponse_offering</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeOfferingResponse'</a>,
--   <a>describeOfferingResponse_httpStatus</a> - The response's http
--   status code.
newDescribeOfferingResponse :: Int -> DescribeOfferingResponse

-- | A request to add VPC interfaces to the flow.
--   
--   <i>See:</i> <a>newAddFlowVpcInterfaces</a> smart constructor.
data AddFlowVpcInterfaces
AddFlowVpcInterfaces' :: Text -> [VpcInterfaceRequest] -> AddFlowVpcInterfaces

-- | Create a value of <a>AddFlowVpcInterfaces</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfaces_flowArn</a> - The flow that you want to
--   mutate.
--   
--   <a>$sel:vpcInterfaces:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfaces_vpcInterfaces</a> - A list of VPC interfaces
--   that you want to add.
newAddFlowVpcInterfaces :: Text -> AddFlowVpcInterfaces

-- | <i>See:</i> <a>newAddFlowVpcInterfacesResponse</a> smart constructor.
data AddFlowVpcInterfacesResponse
AddFlowVpcInterfacesResponse' :: Maybe Text -> Maybe [VpcInterface] -> Int -> AddFlowVpcInterfacesResponse

-- | Create a value of <a>AddFlowVpcInterfacesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfacesResponse_flowArn</a> - The ARN of the flow that
--   these VPC interfaces were added to.
--   
--   <a>$sel:vpcInterfaces:AddFlowVpcInterfaces'</a>,
--   <a>addFlowVpcInterfacesResponse_vpcInterfaces</a> - The details of the
--   newly added VPC interfaces.
--   
--   <a>$sel:httpStatus:AddFlowVpcInterfacesResponse'</a>,
--   <a>addFlowVpcInterfacesResponse_httpStatus</a> - The response's http
--   status code.
newAddFlowVpcInterfacesResponse :: Int -> AddFlowVpcInterfacesResponse

-- | <i>See:</i> <a>newListEntitlements</a> smart constructor.
data ListEntitlements
ListEntitlements' :: Maybe Text -> Maybe Natural -> ListEntitlements

-- | Create a value of <a>ListEntitlements</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEntitlements'</a>,
--   <a>listEntitlements_nextToken</a> - The token that identifies which
--   batch of results that you want to see. For example, you submit a
--   ListEntitlements request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListEntitlements request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListEntitlements'</a>,
--   <a>listEntitlements_maxResults</a> - The maximum number of results to
--   return per API request. For example, you submit a ListEntitlements
--   request with MaxResults set at 5. Although 20 items match your
--   request, the service returns no more than the first 5 items. (The
--   service also returns a NextToken value that you can use to fetch the
--   next batch of results.) The service might return fewer results than
--   the MaxResults value. If MaxResults is not included in the request,
--   the service defaults to pagination with a maximum of 20 results per
--   page.
newListEntitlements :: ListEntitlements

-- | <i>See:</i> <a>newListEntitlementsResponse</a> smart constructor.
data ListEntitlementsResponse
ListEntitlementsResponse' :: Maybe Text -> Maybe [ListedEntitlement] -> Int -> ListEntitlementsResponse

-- | Create a value of <a>ListEntitlementsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEntitlements'</a>,
--   <a>listEntitlementsResponse_nextToken</a> - The token that identifies
--   which batch of results that you want to see. For example, you submit a
--   ListEntitlements request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListEntitlements request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:entitlements:ListEntitlementsResponse'</a>,
--   <a>listEntitlementsResponse_entitlements</a> - A list of entitlements
--   that have been granted to you from other AWS accounts.
--   
--   <a>$sel:httpStatus:ListEntitlementsResponse'</a>,
--   <a>listEntitlementsResponse_httpStatus</a> - The response's http
--   status code.
newListEntitlementsResponse :: Int -> ListEntitlementsResponse

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters, and
--   tag values can have a maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) that identifies the AWS Elemental
--   MediaConnect resource to which to add tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map from
--   tag keys to values. Tag keys can have a maximum character length of
--   128 characters, and tag values can have a maximum length of 256
--   characters.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newListFlows</a> smart constructor.
data ListFlows
ListFlows' :: Maybe Text -> Maybe Natural -> ListFlows

-- | Create a value of <a>ListFlows</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFlows'</a>, <a>listFlows_nextToken</a> - The
--   token that identifies which batch of results that you want to see. For
--   example, you submit a ListFlows request with MaxResults set at 5. The
--   service returns the first batch of results (up to 5) and a NextToken
--   value. To see the next batch of results, you can submit the ListFlows
--   request a second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListFlows'</a>, <a>listFlows_maxResults</a> - The
--   maximum number of results to return per API request. For example, you
--   submit a ListFlows request with MaxResults set at 5. Although 20 items
--   match your request, the service returns no more than the first 5
--   items. (The service also returns a NextToken value that you can use to
--   fetch the next batch of results.) The service might return fewer
--   results than the MaxResults value. If MaxResults is not included in
--   the request, the service defaults to pagination with a maximum of 10
--   results per page.
newListFlows :: ListFlows

-- | <i>See:</i> <a>newListFlowsResponse</a> smart constructor.
data ListFlowsResponse
ListFlowsResponse' :: Maybe Text -> Maybe [ListedFlow] -> Int -> ListFlowsResponse

-- | Create a value of <a>ListFlowsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFlows'</a>, <a>listFlowsResponse_nextToken</a> -
--   The token that identifies which batch of results that you want to see.
--   For example, you submit a ListFlows request with MaxResults set at 5.
--   The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListFlows request a second time and specify the NextToken value.
--   
--   <a>$sel:flows:ListFlowsResponse'</a>, <a>listFlowsResponse_flows</a> -
--   A list of flow summaries.
--   
--   <a>$sel:httpStatus:ListFlowsResponse'</a>,
--   <a>listFlowsResponse_httpStatus</a> - The response's http status code.
newListFlowsResponse :: Int -> ListFlowsResponse

-- | A request to purchase a offering.
--   
--   <i>See:</i> <a>newPurchaseOffering</a> smart constructor.
data PurchaseOffering
PurchaseOffering' :: Text -> Text -> Text -> PurchaseOffering

-- | Create a value of <a>PurchaseOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringArn:PurchaseOffering'</a>,
--   <a>purchaseOffering_offeringArn</a> - The Amazon Resource Name (ARN)
--   of the offering.
--   
--   <a>$sel:start:PurchaseOffering'</a>, <a>purchaseOffering_start</a> -
--   The date and time that you want the reservation to begin, in
--   Coordinated Universal Time (UTC). You can specify any date and time
--   between 12:00am on the first day of the current month to the current
--   time on today's date, inclusive. Specify the start in a 24-hour
--   notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and
--   Z are literal characters. For example, to specify 11:30pm on March 5,
--   2020, enter 2020-03-05T23:30:00Z.
--   
--   <a>$sel:reservationName:PurchaseOffering'</a>,
--   <a>purchaseOffering_reservationName</a> - The name that you want to
--   use for the reservation.
newPurchaseOffering :: Text -> Text -> Text -> PurchaseOffering

-- | <i>See:</i> <a>newPurchaseOfferingResponse</a> smart constructor.
data PurchaseOfferingResponse
PurchaseOfferingResponse' :: Maybe Reservation -> Int -> PurchaseOfferingResponse

-- | Create a value of <a>PurchaseOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservation:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_reservation</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_httpStatus</a> - The response's http
--   status code.
newPurchaseOfferingResponse :: Int -> PurchaseOfferingResponse

-- | The fields that you want to update in the media stream.
--   
--   <i>See:</i> <a>newUpdateFlowMediaStream</a> smart constructor.
data UpdateFlowMediaStream
UpdateFlowMediaStream' :: Maybe Text -> Maybe MediaStreamType -> Maybe MediaStreamAttributesRequest -> Maybe Int -> Maybe Text -> Text -> Text -> UpdateFlowMediaStream

-- | Create a value of <a>UpdateFlowMediaStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_videoFormat</a> - The resolution of the
--   video.
--   
--   <a>$sel:mediaStreamType:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_mediaStreamType</a> - The type of media
--   stream.
--   
--   <a>$sel:attributes:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_attributes</a> - The attributes that you want
--   to assign to the media stream.
--   
--   <a>$sel:clockRate:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_clockRate</a> - The sample rate (in Hz) for
--   the stream. If the media stream type is video or ancillary data, set
--   this value to 90000. If the media stream type is audio, set this value
--   to either 48000 or 96000.
--   
--   <a>$sel:description:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_description</a> - Description
--   
--   <a>$sel:flowArn:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_flowArn</a> - The Amazon Resource Name (ARN)
--   of the flow.
--   
--   <a>$sel:mediaStreamName:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStream_mediaStreamName</a> - The name of the media
--   stream that you want to update.
newUpdateFlowMediaStream :: Text -> Text -> UpdateFlowMediaStream

-- | <i>See:</i> <a>newUpdateFlowMediaStreamResponse</a> smart constructor.
data UpdateFlowMediaStreamResponse
UpdateFlowMediaStreamResponse' :: Maybe Text -> Maybe MediaStream -> Int -> UpdateFlowMediaStreamResponse

-- | Create a value of <a>UpdateFlowMediaStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowMediaStream'</a>,
--   <a>updateFlowMediaStreamResponse_flowArn</a> - The ARN of the flow
--   that is associated with the media stream that you updated.
--   
--   <a>$sel:mediaStream:UpdateFlowMediaStreamResponse'</a>,
--   <a>updateFlowMediaStreamResponse_mediaStream</a> - The media stream
--   that you updated.
--   
--   <a>$sel:httpStatus:UpdateFlowMediaStreamResponse'</a>,
--   <a>updateFlowMediaStreamResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowMediaStreamResponse :: Int -> UpdateFlowMediaStreamResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   identifies the AWS Elemental MediaConnect resource from which to
--   delete tags.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | A request to update flow.
--   
--   <i>See:</i> <a>newUpdateFlow</a> smart constructor.
data UpdateFlow
UpdateFlow' :: Maybe UpdateFailoverConfig -> Text -> UpdateFlow

-- | Create a value of <a>UpdateFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceFailoverConfig:UpdateFlow'</a>,
--   <a>updateFlow_sourceFailoverConfig</a> - Undocumented member.
--   
--   <a>$sel:flowArn:UpdateFlow'</a>, <a>updateFlow_flowArn</a> - The flow
--   that you want to update.
newUpdateFlow :: Text -> UpdateFlow

-- | <i>See:</i> <a>newUpdateFlowResponse</a> smart constructor.
data UpdateFlowResponse
UpdateFlowResponse' :: Maybe Flow -> Int -> UpdateFlowResponse

-- | Create a value of <a>UpdateFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flow:UpdateFlowResponse'</a>, <a>updateFlowResponse_flow</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateFlowResponse'</a>,
--   <a>updateFlowResponse_httpStatus</a> - The response's http status
--   code.
newUpdateFlowResponse :: Int -> UpdateFlowResponse

-- | <i>See:</i> <a>newDeleteFlow</a> smart constructor.
data DeleteFlow
DeleteFlow' :: Text -> DeleteFlow

-- | Create a value of <a>DeleteFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:DeleteFlow'</a>, <a>deleteFlow_flowArn</a> - The ARN
--   of the flow that you want to delete.
newDeleteFlow :: Text -> DeleteFlow

-- | <i>See:</i> <a>newDeleteFlowResponse</a> smart constructor.
data DeleteFlowResponse
DeleteFlowResponse' :: Maybe Status -> Maybe Text -> Int -> DeleteFlowResponse

-- | Create a value of <a>DeleteFlowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteFlowResponse'</a>,
--   <a>deleteFlowResponse_status</a> - The status of the flow when the
--   DeleteFlow process begins.
--   
--   <a>$sel:flowArn:DeleteFlow'</a>, <a>deleteFlowResponse_flowArn</a> -
--   The ARN of the flow that was deleted.
--   
--   <a>$sel:httpStatus:DeleteFlowResponse'</a>,
--   <a>deleteFlowResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFlowResponse :: Int -> DeleteFlowResponse

-- | A request to update the source of a flow.
--   
--   <i>See:</i> <a>newUpdateFlowSource</a> smart constructor.
data UpdateFlowSource
UpdateFlowSource' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe UpdateEncryption -> Maybe Int -> Maybe Protocol -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe [MediaStreamSourceConfigurationRequest] -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> Text -> UpdateFlowSource

-- | Create a value of <a>UpdateFlowSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:UpdateFlowSource'</a>,
--   <a>updateFlowSource_entitlementArn</a> - The ARN of the entitlement
--   that allows you to subscribe to this flow. The entitlement is set by
--   the flow originator, and the ARN is generated as part of the
--   originator's flow.
--   
--   <a>$sel:maxLatency:UpdateFlowSource'</a>,
--   <a>updateFlowSource_maxLatency</a> - The maximum latency in
--   milliseconds. This parameter applies only to RIST-based and Zixi-based
--   streams.
--   
--   <a>$sel:vpcInterfaceName:UpdateFlowSource'</a>,
--   <a>updateFlowSource_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this source.
--   
--   <a>$sel:decryption:UpdateFlowSource'</a>,
--   <a>updateFlowSource_decryption</a> - The type of encryption used on
--   the content ingested from this source.
--   
--   <a>$sel:maxSyncBuffer:UpdateFlowSource'</a>,
--   <a>updateFlowSource_maxSyncBuffer</a> - The size of the buffer (in
--   milliseconds) to use to sync incoming source data.
--   
--   <a>$sel:protocol:UpdateFlowSource'</a>,
--   <a>updateFlowSource_protocol</a> - The protocol that is used by the
--   source.
--   
--   <a>$sel:minLatency:UpdateFlowSource'</a>,
--   <a>updateFlowSource_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:ingestPort:UpdateFlowSource'</a>,
--   <a>updateFlowSource_ingestPort</a> - The port that the flow will be
--   listening on for incoming content.
--   
--   <a>$sel:description:UpdateFlowSource'</a>,
--   <a>updateFlowSource_description</a> - A description for the source.
--   This value is not used or seen outside of the current AWS Elemental
--   MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:UpdateFlowSource'</a>,
--   <a>updateFlowSource_mediaStreamSourceConfigurations</a> - The media
--   streams that are associated with the source, and the parameters for
--   those associations.
--   
--   <a>$sel:whitelistCidr:UpdateFlowSource'</a>,
--   <a>updateFlowSource_whitelistCidr</a> - The range of IP addresses that
--   should be allowed to contribute content to your source. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:maxBitrate:UpdateFlowSource'</a>,
--   <a>updateFlowSource_maxBitrate</a> - The smoothing max bitrate for
--   RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:UpdateFlowSource'</a>,
--   <a>updateFlowSource_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
--   
--   <a>$sel:flowArn:UpdateFlowSource'</a>, <a>updateFlowSource_flowArn</a>
--   - The flow that is associated with the source that you want to update.
--   
--   <a>$sel:sourceArn:UpdateFlowSource'</a>,
--   <a>updateFlowSource_sourceArn</a> - The ARN of the source that you
--   want to update.
newUpdateFlowSource :: Text -> Text -> UpdateFlowSource

-- | <i>See:</i> <a>newUpdateFlowSourceResponse</a> smart constructor.
data UpdateFlowSourceResponse
UpdateFlowSourceResponse' :: Maybe Text -> Maybe Source -> Int -> UpdateFlowSourceResponse

-- | Create a value of <a>UpdateFlowSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:UpdateFlowSource'</a>,
--   <a>updateFlowSourceResponse_flowArn</a> - The ARN of the flow that you
--   want to update.
--   
--   <a>$sel:source:UpdateFlowSourceResponse'</a>,
--   <a>updateFlowSourceResponse_source</a> - The settings for the source
--   of the flow.
--   
--   <a>$sel:httpStatus:UpdateFlowSourceResponse'</a>,
--   <a>updateFlowSourceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFlowSourceResponse :: Int -> UpdateFlowSourceResponse

-- | A request to grant entitlements on a flow.
--   
--   <i>See:</i> <a>newGrantFlowEntitlements</a> smart constructor.
data GrantFlowEntitlements
GrantFlowEntitlements' :: Text -> [GrantEntitlementRequest] -> GrantFlowEntitlements

-- | Create a value of <a>GrantFlowEntitlements</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlements_flowArn</a> - The flow that you want to grant
--   entitlements on.
--   
--   <a>$sel:entitlements:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlements_entitlements</a> - The list of entitlements
--   that you want to grant.
newGrantFlowEntitlements :: Text -> GrantFlowEntitlements

-- | <i>See:</i> <a>newGrantFlowEntitlementsResponse</a> smart constructor.
data GrantFlowEntitlementsResponse
GrantFlowEntitlementsResponse' :: Maybe Text -> Maybe [Entitlement] -> Int -> GrantFlowEntitlementsResponse

-- | Create a value of <a>GrantFlowEntitlementsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flowArn:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlementsResponse_flowArn</a> - The ARN of the flow
--   that these entitlements were granted to.
--   
--   <a>$sel:entitlements:GrantFlowEntitlements'</a>,
--   <a>grantFlowEntitlementsResponse_entitlements</a> - The entitlements
--   that were just granted.
--   
--   <a>$sel:httpStatus:GrantFlowEntitlementsResponse'</a>,
--   <a>grantFlowEntitlementsResponse_httpStatus</a> - The response's http
--   status code.
newGrantFlowEntitlementsResponse :: Int -> GrantFlowEntitlementsResponse

-- | <i>See:</i> <a>newListReservations</a> smart constructor.
data ListReservations
ListReservations' :: Maybe Text -> Maybe Natural -> ListReservations

-- | Create a value of <a>ListReservations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReservations'</a>,
--   <a>listReservations_nextToken</a> - The token that identifies which
--   batch of results that you want to see. For example, you submit a
--   ListReservations request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListOfferings request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListReservations'</a>,
--   <a>listReservations_maxResults</a> - The maximum number of results to
--   return per API request. For example, you submit a ListReservations
--   request with MaxResults set at 5. Although 20 items match your
--   request, the service returns no more than the first 5 items. (The
--   service also returns a NextToken value that you can use to fetch the
--   next batch of results.) The service might return fewer results than
--   the MaxResults value. If MaxResults is not included in the request,
--   the service defaults to pagination with a maximum of 10 results per
--   page.
newListReservations :: ListReservations

-- | <i>See:</i> <a>newListReservationsResponse</a> smart constructor.
data ListReservationsResponse
ListReservationsResponse' :: Maybe Text -> Maybe [Reservation] -> Int -> ListReservationsResponse

-- | Create a value of <a>ListReservationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReservations'</a>,
--   <a>listReservationsResponse_nextToken</a> - The token that identifies
--   which batch of results that you want to see. For example, you submit a
--   ListReservations request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListReservations request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:reservations:ListReservationsResponse'</a>,
--   <a>listReservationsResponse_reservations</a> - A list of all
--   reservations that have been purchased by this account in the current
--   AWS Region.
--   
--   <a>$sel:httpStatus:ListReservationsResponse'</a>,
--   <a>listReservationsResponse_httpStatus</a> - The response's http
--   status code.
newListReservationsResponse :: Int -> ListReservationsResponse

-- | <i>See:</i> <a>newListOfferings</a> smart constructor.
data ListOfferings
ListOfferings' :: Maybe Text -> Maybe Natural -> ListOfferings

-- | Create a value of <a>ListOfferings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>, <a>listOfferings_nextToken</a> -
--   The token that identifies which batch of results that you want to see.
--   For example, you submit a ListOfferings request with MaxResults set at
--   5. The service returns the first batch of results (up to 5) and a
--   NextToken value. To see the next batch of results, you can submit the
--   ListOfferings request a second time and specify the NextToken value.
--   
--   <a>$sel:maxResults:ListOfferings'</a>, <a>listOfferings_maxResults</a>
--   - The maximum number of results to return per API request. For
--   example, you submit a ListOfferings request with MaxResults set at 5.
--   Although 20 items match your request, the service returns no more than
--   the first 5 items. (The service also returns a NextToken value that
--   you can use to fetch the next batch of results.) The service might
--   return fewer results than the MaxResults value. If MaxResults is not
--   included in the request, the service defaults to pagination with a
--   maximum of 10 results per page.
newListOfferings :: ListOfferings

-- | <i>See:</i> <a>newListOfferingsResponse</a> smart constructor.
data ListOfferingsResponse
ListOfferingsResponse' :: Maybe Text -> Maybe [Offering] -> Int -> ListOfferingsResponse

-- | Create a value of <a>ListOfferingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>,
--   <a>listOfferingsResponse_nextToken</a> - The token that identifies
--   which batch of results that you want to see. For example, you submit a
--   ListOfferings request with MaxResults set at 5. The service returns
--   the first batch of results (up to 5) and a NextToken value. To see the
--   next batch of results, you can submit the ListOfferings request a
--   second time and specify the NextToken value.
--   
--   <a>$sel:offerings:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_offerings</a> - A list of offerings that are
--   available to this account in the current AWS Region.
--   
--   <a>$sel:httpStatus:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_httpStatus</a> - The response's http status
--   code.
newListOfferingsResponse :: Int -> ListOfferingsResponse
newtype Algorithm
Algorithm' :: Text -> Algorithm
[fromAlgorithm] :: Algorithm -> Text
pattern Algorithm_Aes128 :: Algorithm
pattern Algorithm_Aes192 :: Algorithm
pattern Algorithm_Aes256 :: Algorithm
newtype Colorimetry
Colorimetry' :: Text -> Colorimetry
[fromColorimetry] :: Colorimetry -> Text
pattern Colorimetry_BT2020 :: Colorimetry
pattern Colorimetry_BT2100 :: Colorimetry
pattern Colorimetry_BT601 :: Colorimetry
pattern Colorimetry_BT709 :: Colorimetry
pattern Colorimetry_ST2065_1 :: Colorimetry
pattern Colorimetry_ST2065_3 :: Colorimetry
pattern Colorimetry_XYZ :: Colorimetry
newtype DurationUnits
DurationUnits' :: Text -> DurationUnits
[fromDurationUnits] :: DurationUnits -> Text
pattern DurationUnits_MONTHS :: DurationUnits
newtype EncoderProfile
EncoderProfile' :: Text -> EncoderProfile
[fromEncoderProfile] :: EncoderProfile -> Text
pattern EncoderProfile_High :: EncoderProfile
pattern EncoderProfile_Main :: EncoderProfile
newtype EncodingName
EncodingName' :: Text -> EncodingName
[fromEncodingName] :: EncodingName -> Text
pattern EncodingName_Jxsv :: EncodingName
pattern EncodingName_Pcm :: EncodingName
pattern EncodingName_Raw :: EncodingName
pattern EncodingName_Smpte291 :: EncodingName
newtype EntitlementStatus
EntitlementStatus' :: Text -> EntitlementStatus
[fromEntitlementStatus] :: EntitlementStatus -> Text
pattern EntitlementStatus_DISABLED :: EntitlementStatus
pattern EntitlementStatus_ENABLED :: EntitlementStatus
newtype FailoverMode
FailoverMode' :: Text -> FailoverMode
[fromFailoverMode] :: FailoverMode -> Text
pattern FailoverMode_FAILOVER :: FailoverMode
pattern FailoverMode_MERGE :: FailoverMode
newtype KeyType
KeyType' :: Text -> KeyType
[fromKeyType] :: KeyType -> Text
pattern KeyType_Speke :: KeyType
pattern KeyType_Srt_password :: KeyType
pattern KeyType_Static_key :: KeyType
newtype MediaStreamType
MediaStreamType' :: Text -> MediaStreamType
[fromMediaStreamType] :: MediaStreamType -> Text
pattern MediaStreamType_Ancillary_data :: MediaStreamType
pattern MediaStreamType_Audio :: MediaStreamType
pattern MediaStreamType_Video :: MediaStreamType
newtype NetworkInterfaceType
NetworkInterfaceType' :: Text -> NetworkInterfaceType
[fromNetworkInterfaceType] :: NetworkInterfaceType -> Text
pattern NetworkInterfaceType_Efa :: NetworkInterfaceType
pattern NetworkInterfaceType_Ena :: NetworkInterfaceType
newtype PriceUnits
PriceUnits' :: Text -> PriceUnits
[fromPriceUnits] :: PriceUnits -> Text
pattern PriceUnits_HOURLY :: PriceUnits
newtype Protocol
Protocol' :: Text -> Protocol
[fromProtocol] :: Protocol -> Text
pattern Protocol_Cdi :: Protocol
pattern Protocol_Rist :: Protocol
pattern Protocol_Rtp :: Protocol
pattern Protocol_Rtp_fec :: Protocol
pattern Protocol_Srt_listener :: Protocol
pattern Protocol_St2110_jpegxs :: Protocol
pattern Protocol_Zixi_pull :: Protocol
pattern Protocol_Zixi_push :: Protocol
newtype Range
Range' :: Text -> Range
[fromRange] :: Range -> Text
pattern Range_FULL :: Range
pattern Range_FULLPROTECT :: Range
pattern Range_NARROW :: Range
newtype ReservationState
ReservationState' :: Text -> ReservationState
[fromReservationState] :: ReservationState -> Text
pattern ReservationState_ACTIVE :: ReservationState
pattern ReservationState_CANCELED :: ReservationState
pattern ReservationState_EXPIRED :: ReservationState
pattern ReservationState_PROCESSING :: ReservationState
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_Mbps_Outbound_Bandwidth :: ResourceType
newtype ScanMode
ScanMode' :: Text -> ScanMode
[fromScanMode] :: ScanMode -> Text
pattern ScanMode_Interlace :: ScanMode
pattern ScanMode_Progressive :: ScanMode
pattern ScanMode_Progressive_segmented_frame :: ScanMode
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_ENTITLED :: SourceType
pattern SourceType_OWNED :: SourceType
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_DISABLED :: State
pattern State_ENABLED :: State
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_ACTIVE :: Status
pattern Status_DELETING :: Status
pattern Status_ERROR :: Status
pattern Status_STANDBY :: Status
pattern Status_STARTING :: Status
pattern Status_STOPPING :: Status
pattern Status_UPDATING :: Status
newtype Tcs
Tcs' :: Text -> Tcs
[fromTcs] :: Tcs -> Text
pattern Tcs_BT2100LINHLG :: Tcs
pattern Tcs_BT2100LINPQ :: Tcs
pattern Tcs_DENSITY :: Tcs
pattern Tcs_HLG :: Tcs
pattern Tcs_LINEAR :: Tcs
pattern Tcs_PQ :: Tcs
pattern Tcs_SDR :: Tcs
pattern Tcs_ST2065_1 :: Tcs
pattern Tcs_ST428_1 :: Tcs

-- | The media stream that you want to add to the flow.
--   
--   <i>See:</i> <a>newAddMediaStreamRequest</a> smart constructor.
data AddMediaStreamRequest
AddMediaStreamRequest' :: Maybe Text -> Maybe MediaStreamAttributesRequest -> Maybe Int -> Maybe Text -> MediaStreamType -> Int -> Text -> AddMediaStreamRequest

-- | Create a value of <a>AddMediaStreamRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_videoFormat</a> - The resolution of the
--   video.
--   
--   <a>$sel:attributes:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_attributes</a> - The attributes that you want
--   to assign to the new media stream.
--   
--   <a>$sel:clockRate:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_clockRate</a> - The sample rate (in Hz) for
--   the stream. If the media stream type is video or ancillary data, set
--   this value to 90000. If the media stream type is audio, set this value
--   to either 48000 or 96000.
--   
--   <a>$sel:description:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_description</a> - A description that can help
--   you quickly identify what your media stream is used for.
--   
--   <a>$sel:mediaStreamType:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamType</a> - The type of media
--   stream.
--   
--   <a>$sel:mediaStreamId:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamId</a> - A unique identifier for
--   the media stream.
--   
--   <a>$sel:mediaStreamName:AddMediaStreamRequest'</a>,
--   <a>addMediaStreamRequest_mediaStreamName</a> - A name that helps you
--   distinguish one media stream from another.
newAddMediaStreamRequest :: MediaStreamType -> Int -> Text -> AddMediaStreamRequest

-- | The output that you want to add to this flow.
--   
--   <i>See:</i> <a>newAddOutputRequest</a> smart constructor.
data AddOutputRequest
AddOutputRequest' :: Maybe Text -> Maybe Int -> Maybe [MediaStreamOutputConfigurationRequest] -> Maybe Encryption -> Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe VpcInterfaceAttachment -> Protocol -> AddOutputRequest

-- | Create a value of <a>AddOutputRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:AddOutputRequest'</a>,
--   <a>addOutputRequest_destination</a> - The IP address from which video
--   will be sent to output destinations.
--   
--   <a>$sel:maxLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_maxLatency</a> - The maximum latency in
--   milliseconds for Zixi-based streams.
--   
--   <a>$sel:mediaStreamOutputConfigurations:AddOutputRequest'</a>,
--   <a>addOutputRequest_mediaStreamOutputConfigurations</a> - The media
--   streams that are associated with the output, and the parameters for
--   those associations.
--   
--   <a>$sel:encryption:AddOutputRequest'</a>,
--   <a>addOutputRequest_encryption</a> - The type of key used for the
--   encryption. If no keyType is provided, the service will use the
--   default setting (static-key).
--   
--   <a>$sel:name:AddOutputRequest'</a>, <a>addOutputRequest_name</a> - The
--   name of the output. This value must be unique within the current flow.
--   
--   <a>$sel:cidrAllowList:AddOutputRequest'</a>,
--   <a>addOutputRequest_cidrAllowList</a> - The range of IP addresses that
--   should be allowed to initiate output requests to this flow. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:AddOutputRequest'</a>,
--   <a>addOutputRequest_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:description:AddOutputRequest'</a>,
--   <a>addOutputRequest_description</a> - A description of the output.
--   This description appears only on the AWS Elemental MediaConnect
--   console and will not be seen by the end user.
--   
--   <a>$sel:port:AddOutputRequest'</a>, <a>addOutputRequest_port</a> - The
--   port to use when content is distributed to this output.
--   
--   <a>$sel:streamId:AddOutputRequest'</a>,
--   <a>addOutputRequest_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:AddOutputRequest'</a>,
--   <a>addOutputRequest_remoteId</a> - The remote ID for the Zixi-pull
--   output stream.
--   
--   <a>$sel:vpcInterfaceAttachment:AddOutputRequest'</a>,
--   <a>addOutputRequest_vpcInterfaceAttachment</a> - The name of the VPC
--   interface attachment to use for this output.
--   
--   <a>$sel:protocol:AddOutputRequest'</a>,
--   <a>addOutputRequest_protocol</a> - The protocol to use for the output.
newAddOutputRequest :: Protocol -> AddOutputRequest

-- | The transport parameters that are associated with an outbound media
--   stream.
--   
--   <i>See:</i> <a>newDestinationConfiguration</a> smart constructor.
data DestinationConfiguration
DestinationConfiguration' :: Text -> Int -> Interface -> Text -> DestinationConfiguration

-- | Create a value of <a>DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationIp:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_destinationIp</a> - The IP address where
--   contents of the media stream will be sent.
--   
--   <a>$sel:destinationPort:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_destinationPort</a> - The port to use when
--   the content of the media stream is distributed to the output.
--   
--   <a>$sel:interface:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_interface</a> - The VPC interface that is
--   used for the media stream associated with the output.
--   
--   <a>$sel:outboundIp:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_outboundIp</a> - The IP address that the
--   receiver requires in order to establish a connection with the flow.
--   This value is represented by the elastic network interface IP address
--   of the VPC. This field applies only to outputs that use the CDI or ST
--   2110 JPEG XS protocol.
newDestinationConfiguration :: Text -> Int -> Interface -> Text -> DestinationConfiguration

-- | The transport parameters that you want to associate with an outbound
--   media stream.
--   
--   <i>See:</i> <a>newDestinationConfigurationRequest</a> smart
--   constructor.
data DestinationConfigurationRequest
DestinationConfigurationRequest' :: Text -> Int -> InterfaceRequest -> DestinationConfigurationRequest

-- | Create a value of <a>DestinationConfigurationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationIp:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_destinationIp</a> - The IP address
--   where you want MediaConnect to send contents of the media stream.
--   
--   <a>$sel:destinationPort:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_destinationPort</a> - The port that
--   you want MediaConnect to use when it distributes the media stream to
--   the output.
--   
--   <a>$sel:interface:DestinationConfigurationRequest'</a>,
--   <a>destinationConfigurationRequest_interface</a> - The VPC interface
--   that you want to use for the media stream associated with the output.
newDestinationConfigurationRequest :: Text -> Int -> InterfaceRequest -> DestinationConfigurationRequest

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
--   
--   <i>See:</i> <a>newEncodingParameters</a> smart constructor.
data EncodingParameters
EncodingParameters' :: EncoderProfile -> Double -> EncodingParameters

-- | Create a value of <a>EncodingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encoderProfile:EncodingParameters'</a>,
--   <a>encodingParameters_encoderProfile</a> - A setting on the encoder
--   that drives compression settings. This property only applies to video
--   media streams associated with outputs that use the ST 2110 JPEG XS
--   protocol, with a flow source that uses the CDI protocol.
--   
--   <a>$sel:compressionFactor:EncodingParameters'</a>,
--   <a>encodingParameters_compressionFactor</a> - A value that is used to
--   calculate compression for an output. The bitrate of the output is
--   calculated as follows: Output bitrate = (1 / compressionFactor) *
--   (source bitrate) This property only applies to outputs that use the ST
--   2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
--   Valid values are floating point numbers in the range of 3.0 to 10.0,
--   inclusive.
newEncodingParameters :: EncoderProfile -> Double -> EncodingParameters

-- | A collection of parameters that determine how MediaConnect will
--   convert the content. These fields only apply to outputs on flows that
--   have a CDI source.
--   
--   <i>See:</i> <a>newEncodingParametersRequest</a> smart constructor.
data EncodingParametersRequest
EncodingParametersRequest' :: EncoderProfile -> Double -> EncodingParametersRequest

-- | Create a value of <a>EncodingParametersRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encoderProfile:EncodingParametersRequest'</a>,
--   <a>encodingParametersRequest_encoderProfile</a> - A setting on the
--   encoder that drives compression settings. This property only applies
--   to video media streams associated with outputs that use the ST 2110
--   JPEG XS protocol, if at least one source on the flow uses the CDI
--   protocol.
--   
--   <a>$sel:compressionFactor:EncodingParametersRequest'</a>,
--   <a>encodingParametersRequest_compressionFactor</a> - A value that is
--   used to calculate compression for an output. The bitrate of the output
--   is calculated as follows: Output bitrate = (1 / compressionFactor) *
--   (source bitrate) This property only applies to outputs that use the ST
--   2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
--   Valid values are floating point numbers in the range of 3.0 to 10.0,
--   inclusive.
newEncodingParametersRequest :: EncoderProfile -> Double -> EncodingParametersRequest

-- | Information about the encryption of the flow.
--   
--   <i>See:</i> <a>newEncryption</a> smart constructor.
data Encryption
Encryption' :: Maybe KeyType -> Maybe Text -> Maybe Text -> Maybe Algorithm -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Encryption

-- | Create a value of <a>Encryption</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyType:Encryption'</a>, <a>encryption_keyType</a> - The type
--   of key that is used for the encryption. If no keyType is provided, the
--   service will use the default setting (static-key).
--   
--   <a>$sel:resourceId:Encryption'</a>, <a>encryption_resourceId</a> - An
--   identifier for the content. The service sends this value to the key
--   server to identify the current endpoint. The resource ID is also known
--   as the content ID. This parameter is required for SPEKE encryption and
--   is not valid for static key encryption.
--   
--   <a>$sel:url:Encryption'</a>, <a>encryption_url</a> - The URL from the
--   API Gateway proxy that you set up to talk to your key server. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:algorithm:Encryption'</a>, <a>encryption_algorithm</a> - The
--   type of algorithm that is used for the encryption (such as aes128,
--   aes192, or aes256).
--   
--   <a>$sel:constantInitializationVector:Encryption'</a>,
--   <a>encryption_constantInitializationVector</a> - A 128-bit, 16-byte
--   hex value represented by a 32-character string, to be used with the
--   key for encrypting content. This parameter is not valid for static key
--   encryption.
--   
--   <a>$sel:deviceId:Encryption'</a>, <a>encryption_deviceId</a> - The
--   value of one of the devices that you configured with your digital
--   rights management (DRM) platform key provider. This parameter is
--   required for SPEKE encryption and is not valid for static key
--   encryption.
--   
--   <a>$sel:region:Encryption'</a>, <a>encryption_region</a> - The AWS
--   Region that the API Gateway proxy endpoint was created in. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:secretArn:Encryption'</a>, <a>encryption_secretArn</a> - The
--   ARN of the secret that you created in AWS Secrets Manager to store the
--   encryption key. This parameter is required for static key encryption
--   and is not valid for SPEKE encryption.
--   
--   <a>$sel:roleArn:Encryption'</a>, <a>encryption_roleArn</a> - The ARN
--   of the role that you created during setup (when you set up AWS
--   Elemental MediaConnect as a trusted entity).
newEncryption :: Text -> Encryption

-- | The settings for a flow entitlement.
--   
--   <i>See:</i> <a>newEntitlement</a> smart constructor.
data Entitlement
Entitlement' :: Maybe Int -> Maybe Encryption -> Maybe EntitlementStatus -> Maybe Text -> Text -> [Text] -> Text -> Entitlement

-- | Create a value of <a>Entitlement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Entitlement'</a>,
--   <a>entitlement_dataTransferSubscriberFeePercent</a> - Percentage from
--   0-100 of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:encryption:Entitlement'</a>, <a>entitlement_encryption</a> -
--   The type of encryption that will be used on the output that is
--   associated with this entitlement.
--   
--   <a>$sel:entitlementStatus:Entitlement'</a>,
--   <a>entitlement_entitlementStatus</a> - An indication of whether the
--   entitlement is enabled.
--   
--   <a>$sel:description:Entitlement'</a>, <a>entitlement_description</a> -
--   A description of the entitlement.
--   
--   <a>$sel:entitlementArn:Entitlement'</a>,
--   <a>entitlement_entitlementArn</a> - The ARN of the entitlement.
--   
--   <a>$sel:subscribers:Entitlement'</a>, <a>entitlement_subscribers</a> -
--   The AWS account IDs that you want to share your content with. The
--   receiving accounts (subscribers) will be allowed to create their own
--   flow using your content as the source.
--   
--   <a>$sel:name:Entitlement'</a>, <a>entitlement_name</a> - The name of
--   the entitlement.
newEntitlement :: Text -> Text -> Entitlement

-- | The settings for source failover
--   
--   <i>See:</i> <a>newFailoverConfig</a> smart constructor.
data FailoverConfig
FailoverConfig' :: Maybe State -> Maybe Int -> Maybe SourcePriority -> Maybe FailoverMode -> FailoverConfig

-- | Create a value of <a>FailoverConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:FailoverConfig'</a>, <a>failoverConfig_state</a> -
--   Undocumented member.
--   
--   <a>$sel:recoveryWindow:FailoverConfig'</a>,
--   <a>failoverConfig_recoveryWindow</a> - Search window time to look for
--   dash-7 packets
--   
--   <a>$sel:sourcePriority:FailoverConfig'</a>,
--   <a>failoverConfig_sourcePriority</a> - The priority you want to assign
--   to a source. You can have a primary stream and a backup stream or two
--   equally prioritized streams.
--   
--   <a>$sel:failoverMode:FailoverConfig'</a>,
--   <a>failoverConfig_failoverMode</a> - The type of failover you choose
--   for this flow. MERGE combines the source streams into a single stream,
--   allowing graceful recovery from any single-source loss. FAILOVER
--   allows switching between different streams.
newFailoverConfig :: FailoverConfig

-- | The settings for a flow, including its source, outputs, and
--   entitlements.
--   
--   <i>See:</i> <a>newFlow</a> smart constructor.
data Flow
Flow' :: Maybe [MediaStream] -> Maybe FailoverConfig -> Maybe [VpcInterface] -> Maybe [Source] -> Maybe Text -> Maybe Text -> Status -> [Entitlement] -> [Output] -> Text -> Text -> Source -> Text -> Flow

-- | Create a value of <a>Flow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mediaStreams:Flow'</a>, <a>flow_mediaStreams</a> - The media
--   streams that are associated with the flow. After you associate a media
--   stream with a source, you can also associate it with outputs on the
--   flow.
--   
--   <a>$sel:sourceFailoverConfig:Flow'</a>,
--   <a>flow_sourceFailoverConfig</a> - Undocumented member.
--   
--   <a>$sel:vpcInterfaces:Flow'</a>, <a>flow_vpcInterfaces</a> - The VPC
--   Interfaces for this flow.
--   
--   <a>$sel:sources:Flow'</a>, <a>flow_sources</a> - Undocumented member.
--   
--   <a>$sel:egressIp:Flow'</a>, <a>flow_egressIp</a> - The IP address from
--   which video will be sent to output destinations.
--   
--   <a>$sel:description:Flow'</a>, <a>flow_description</a> - A description
--   of the flow. This value is not used or seen outside of the current AWS
--   Elemental MediaConnect account.
--   
--   <a>$sel:status:Flow'</a>, <a>flow_status</a> - The current status of
--   the flow.
--   
--   <a>$sel:entitlements:Flow'</a>, <a>flow_entitlements</a> - The
--   entitlements in this flow.
--   
--   <a>$sel:outputs:Flow'</a>, <a>flow_outputs</a> - The outputs in this
--   flow.
--   
--   <a>$sel:availabilityZone:Flow'</a>, <a>flow_availabilityZone</a> - The
--   Availability Zone that you want to create the flow in. These options
--   are limited to the Availability Zones within the current AWS.
--   
--   <a>$sel:flowArn:Flow'</a>, <a>flow_flowArn</a> - The Amazon Resource
--   Name (ARN), a unique identifier for any AWS resource, of the flow.
--   
--   <a>$sel:source:Flow'</a>, <a>flow_source</a> - Undocumented member.
--   
--   <a>$sel:name:Flow'</a>, <a>flow_name</a> - The name of the flow.
newFlow :: Status -> Text -> Text -> Source -> Text -> Flow

-- | FMTP
--   
--   <i>See:</i> <a>newFmtp</a> smart constructor.
data Fmtp
Fmtp' :: Maybe Tcs -> Maybe Text -> Maybe Text -> Maybe ScanMode -> Maybe Range -> Maybe Text -> Maybe Colorimetry -> Fmtp

-- | Create a value of <a>Fmtp</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tcs:Fmtp'</a>, <a>fmtp_tcs</a> - The transfer characteristic
--   system (TCS) that is used in the video.
--   
--   <a>$sel:exactFramerate:Fmtp'</a>, <a>fmtp_exactFramerate</a> - The
--   frame rate for the video stream, in frames/second. For example:
--   60000/1001. If you specify a whole number, MediaConnect uses a ratio
--   of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the
--   exactFramerate.
--   
--   <a>$sel:par:Fmtp'</a>, <a>fmtp_par</a> - The pixel aspect ratio (PAR)
--   of the video.
--   
--   <a>$sel:scanMode:Fmtp'</a>, <a>fmtp_scanMode</a> - The type of
--   compression that was used to smooth the video’s appearance
--   
--   <a>$sel:range:Fmtp'</a>, <a>fmtp_range</a> - The encoding range of the
--   video.
--   
--   <a>$sel:channelOrder:Fmtp'</a>, <a>fmtp_channelOrder</a> - The format
--   of the audio channel.
--   
--   <a>$sel:colorimetry:Fmtp'</a>, <a>fmtp_colorimetry</a> - The format
--   that is used for the representation of color.
newFmtp :: Fmtp

-- | The settings that you want to use to define the media stream.
--   
--   <i>See:</i> <a>newFmtpRequest</a> smart constructor.
data FmtpRequest
FmtpRequest' :: Maybe Tcs -> Maybe Text -> Maybe Text -> Maybe ScanMode -> Maybe Range -> Maybe Text -> Maybe Colorimetry -> FmtpRequest

-- | Create a value of <a>FmtpRequest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tcs:FmtpRequest'</a>, <a>fmtpRequest_tcs</a> - The transfer
--   characteristic system (TCS) that is used in the video.
--   
--   <a>$sel:exactFramerate:FmtpRequest'</a>,
--   <a>fmtpRequest_exactFramerate</a> - The frame rate for the video
--   stream, in frames/second. For example: 60000/1001. If you specify a
--   whole number, MediaConnect uses a ratio of N/1. For example, if you
--   specify 60, MediaConnect uses 60/1 as the exactFramerate.
--   
--   <a>$sel:par:FmtpRequest'</a>, <a>fmtpRequest_par</a> - The pixel
--   aspect ratio (PAR) of the video.
--   
--   <a>$sel:scanMode:FmtpRequest'</a>, <a>fmtpRequest_scanMode</a> - The
--   type of compression that was used to smooth the video’s appearance.
--   
--   <a>$sel:range:FmtpRequest'</a>, <a>fmtpRequest_range</a> - The
--   encoding range of the video.
--   
--   <a>$sel:channelOrder:FmtpRequest'</a>, <a>fmtpRequest_channelOrder</a>
--   - The format of the audio channel.
--   
--   <a>$sel:colorimetry:FmtpRequest'</a>, <a>fmtpRequest_colorimetry</a> -
--   The format that is used for the representation of color.
newFmtpRequest :: FmtpRequest

-- | The entitlements that you want to grant on a flow.
--   
--   <i>See:</i> <a>newGrantEntitlementRequest</a> smart constructor.
data GrantEntitlementRequest
GrantEntitlementRequest' :: Maybe Int -> Maybe Encryption -> Maybe Text -> Maybe EntitlementStatus -> Maybe Text -> [Text] -> GrantEntitlementRequest

-- | Create a value of <a>GrantEntitlementRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_dataTransferSubscriberFeePercent</a> -
--   Percentage from 0-100 of the data transfer cost to be billed to the
--   subscriber.
--   
--   <a>$sel:encryption:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_encryption</a> - The type of encryption
--   that will be used on the output that is associated with this
--   entitlement.
--   
--   <a>$sel:name:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_name</a> - The name of the entitlement.
--   This value must be unique within the current flow.
--   
--   <a>$sel:entitlementStatus:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_entitlementStatus</a> - An indication of
--   whether the new entitlement should be enabled or disabled as soon as
--   it is created. If you don’t specify the entitlementStatus field in
--   your request, MediaConnect sets it to ENABLED.
--   
--   <a>$sel:description:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_description</a> - A description of the
--   entitlement. This description appears only on the AWS Elemental
--   MediaConnect console and will not be seen by the subscriber or end
--   user.
--   
--   <a>$sel:subscribers:GrantEntitlementRequest'</a>,
--   <a>grantEntitlementRequest_subscribers</a> - The AWS account IDs that
--   you want to share your content with. The receiving accounts
--   (subscribers) will be allowed to create their own flows using your
--   content as the source.
newGrantEntitlementRequest :: GrantEntitlementRequest

-- | The transport parameters that are associated with an incoming media
--   stream.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Int -> Text -> Interface -> InputConfiguration

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPort:InputConfiguration'</a>,
--   <a>inputConfiguration_inputPort</a> - The port that the flow listens
--   on for an incoming media stream.
--   
--   <a>$sel:inputIp:InputConfiguration'</a>,
--   <a>inputConfiguration_inputIp</a> - The IP address that the flow
--   listens on for incoming content for a media stream.
--   
--   <a>$sel:interface:InputConfiguration'</a>,
--   <a>inputConfiguration_interface</a> - The VPC interface where the
--   media stream comes in from.
newInputConfiguration :: Int -> Text -> Interface -> InputConfiguration

-- | The transport parameters that you want to associate with an incoming
--   media stream.
--   
--   <i>See:</i> <a>newInputConfigurationRequest</a> smart constructor.
data InputConfigurationRequest
InputConfigurationRequest' :: Int -> InterfaceRequest -> InputConfigurationRequest

-- | Create a value of <a>InputConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPort:InputConfigurationRequest'</a>,
--   <a>inputConfigurationRequest_inputPort</a> - The port that you want
--   the flow to listen on for an incoming media stream.
--   
--   <a>$sel:interface:InputConfigurationRequest'</a>,
--   <a>inputConfigurationRequest_interface</a> - The VPC interface that
--   you want to use for the incoming media stream.
newInputConfigurationRequest :: Int -> InterfaceRequest -> InputConfigurationRequest

-- | The VPC interface that is used for the media stream associated with
--   the source or output.
--   
--   <i>See:</i> <a>newInterface</a> smart constructor.
data Interface
Interface' :: Text -> Interface

-- | Create a value of <a>Interface</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Interface'</a>, <a>interface_name</a> - The name of the
--   VPC interface.
newInterface :: Text -> Interface

-- | The VPC interface that you want to designate where the media stream is
--   coming from or going to.
--   
--   <i>See:</i> <a>newInterfaceRequest</a> smart constructor.
data InterfaceRequest
InterfaceRequest' :: Text -> InterfaceRequest

-- | Create a value of <a>InterfaceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InterfaceRequest'</a>, <a>interfaceRequest_name</a> - The
--   name of the VPC interface.
newInterfaceRequest :: Text -> InterfaceRequest

-- | An entitlement that has been granted to you from other AWS accounts.
--   
--   <i>See:</i> <a>newListedEntitlement</a> smart constructor.
data ListedEntitlement
ListedEntitlement' :: Maybe Int -> Text -> Text -> ListedEntitlement

-- | Create a value of <a>ListedEntitlement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTransferSubscriberFeePercent:ListedEntitlement'</a>,
--   <a>listedEntitlement_dataTransferSubscriberFeePercent</a> - Percentage
--   from 0-100 of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:entitlementArn:ListedEntitlement'</a>,
--   <a>listedEntitlement_entitlementArn</a> - The ARN of the entitlement.
--   
--   <a>$sel:entitlementName:ListedEntitlement'</a>,
--   <a>listedEntitlement_entitlementName</a> - The name of the
--   entitlement.
newListedEntitlement :: Text -> Text -> ListedEntitlement

-- | Provides a summary of a flow, including its ARN, Availability Zone,
--   and source type.
--   
--   <i>See:</i> <a>newListedFlow</a> smart constructor.
data ListedFlow
ListedFlow' :: Status -> Text -> SourceType -> Text -> Text -> Text -> ListedFlow

-- | Create a value of <a>ListedFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListedFlow'</a>, <a>listedFlow_status</a> - The current
--   status of the flow.
--   
--   <a>$sel:description:ListedFlow'</a>, <a>listedFlow_description</a> - A
--   description of the flow.
--   
--   <a>$sel:sourceType:ListedFlow'</a>, <a>listedFlow_sourceType</a> - The
--   type of source. This value is either owned (originated somewhere other
--   than an AWS Elemental MediaConnect flow owned by another AWS account)
--   or entitled (originated at an AWS Elemental MediaConnect flow owned by
--   another AWS account).
--   
--   <a>$sel:availabilityZone:ListedFlow'</a>,
--   <a>listedFlow_availabilityZone</a> - The Availability Zone that the
--   flow was created in.
--   
--   <a>$sel:flowArn:ListedFlow'</a>, <a>listedFlow_flowArn</a> - The ARN
--   of the flow.
--   
--   <a>$sel:name:ListedFlow'</a>, <a>listedFlow_name</a> - The name of the
--   flow.
newListedFlow :: Status -> Text -> SourceType -> Text -> Text -> Text -> ListedFlow

-- | A single track or stream of media that contains video, audio, or
--   ancillary data. After you add a media stream to a flow, you can
--   associate it with sources and outputs on that flow, as long as they
--   use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or
--   output can consist of one or many media streams.
--   
--   <i>See:</i> <a>newMediaStream</a> smart constructor.
data MediaStream
MediaStream' :: Maybe Text -> Maybe MediaStreamAttributes -> Maybe Int -> Maybe Text -> MediaStreamType -> Int -> Text -> Int -> MediaStream

-- | Create a value of <a>MediaStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:videoFormat:MediaStream'</a>, <a>mediaStream_videoFormat</a> -
--   The resolution of the video.
--   
--   <a>$sel:attributes:MediaStream'</a>, <a>mediaStream_attributes</a> -
--   Attributes that are related to the media stream.
--   
--   <a>$sel:clockRate:MediaStream'</a>, <a>mediaStream_clockRate</a> - The
--   sample rate for the stream. This value is measured in Hz.
--   
--   <a>$sel:description:MediaStream'</a>, <a>mediaStream_description</a> -
--   A description that can help you quickly identify what your media
--   stream is used for.
--   
--   <a>$sel:mediaStreamType:MediaStream'</a>,
--   <a>mediaStream_mediaStreamType</a> - The type of media stream.
--   
--   <a>$sel:mediaStreamId:MediaStream'</a>,
--   <a>mediaStream_mediaStreamId</a> - A unique identifier for the media
--   stream.
--   
--   <a>$sel:mediaStreamName:MediaStream'</a>,
--   <a>mediaStream_mediaStreamName</a> - A name that helps you distinguish
--   one media stream from another.
--   
--   <a>$sel:fmt:MediaStream'</a>, <a>mediaStream_fmt</a> - The format type
--   number (sometimes referred to as RTP payload type) of the media
--   stream. MediaConnect assigns this value to the media stream. For ST
--   2110 JPEG XS outputs, you need to provide this value to the receiver.
newMediaStream :: MediaStreamType -> Int -> Text -> Int -> MediaStream

-- | Attributes that are related to the media stream.
--   
--   <i>See:</i> <a>newMediaStreamAttributes</a> smart constructor.
data MediaStreamAttributes
MediaStreamAttributes' :: Maybe Text -> Fmtp -> MediaStreamAttributes

-- | Create a value of <a>MediaStreamAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lang:MediaStreamAttributes'</a>,
--   <a>mediaStreamAttributes_lang</a> - The audio language, in a format
--   that is recognized by the receiver.
--   
--   <a>$sel:fmtp:MediaStreamAttributes'</a>,
--   <a>mediaStreamAttributes_fmtp</a> - A set of parameters that define
--   the media stream.
newMediaStreamAttributes :: Fmtp -> MediaStreamAttributes

-- | Attributes that are related to the media stream.
--   
--   <i>See:</i> <a>newMediaStreamAttributesRequest</a> smart constructor.
data MediaStreamAttributesRequest
MediaStreamAttributesRequest' :: Maybe Text -> Maybe FmtpRequest -> MediaStreamAttributesRequest

-- | Create a value of <a>MediaStreamAttributesRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lang:MediaStreamAttributesRequest'</a>,
--   <a>mediaStreamAttributesRequest_lang</a> - The audio language, in a
--   format that is recognized by the receiver.
--   
--   <a>$sel:fmtp:MediaStreamAttributesRequest'</a>,
--   <a>mediaStreamAttributesRequest_fmtp</a> - The settings that you want
--   to use to define the media stream.
newMediaStreamAttributesRequest :: MediaStreamAttributesRequest

-- | The media stream that is associated with the output, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamOutputConfiguration</a> smart
--   constructor.
data MediaStreamOutputConfiguration
MediaStreamOutputConfiguration' :: Maybe [DestinationConfiguration] -> Maybe EncodingParameters -> Text -> EncodingName -> MediaStreamOutputConfiguration

-- | Create a value of <a>MediaStreamOutputConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationConfigurations:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_destinationConfigurations</a> - The
--   transport parameters that are associated with each outbound media
--   stream.
--   
--   <a>$sel:encodingParameters:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_encodingParameters</a> - Encoding
--   parameters
--   
--   <a>$sel:mediaStreamName:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_mediaStreamName</a> - The name of
--   the media stream.
--   
--   <a>$sel:encodingName:MediaStreamOutputConfiguration'</a>,
--   <a>mediaStreamOutputConfiguration_encodingName</a> - The format that
--   was used to encode the data. For ancillary data streams, set the
--   encoding name to smpte291. For audio streams, set the encoding name to
--   pcm. For video, 2110 streams, set the encoding name to raw. For video,
--   JPEG XS streams, set the encoding name to jxsv.
newMediaStreamOutputConfiguration :: Text -> EncodingName -> MediaStreamOutputConfiguration

-- | The media stream that you want to associate with the output, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamOutputConfigurationRequest</a> smart
--   constructor.
data MediaStreamOutputConfigurationRequest
MediaStreamOutputConfigurationRequest' :: Maybe [DestinationConfigurationRequest] -> Maybe EncodingParametersRequest -> Text -> EncodingName -> MediaStreamOutputConfigurationRequest

-- | Create a value of <a>MediaStreamOutputConfigurationRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:destinationConfigurations:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_destinationConfigurations</a>
--   - The transport parameters that you want to associate with the media
--   stream.
--   
--   <a>$sel:encodingParameters:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_encodingParameters</a> - A
--   collection of parameters that determine how MediaConnect will convert
--   the content. These fields only apply to outputs on flows that have a
--   CDI source.
--   
--   <a>$sel:mediaStreamName:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_mediaStreamName</a> - The
--   name of the media stream that is associated with the output.
--   
--   <a>$sel:encodingName:MediaStreamOutputConfigurationRequest'</a>,
--   <a>mediaStreamOutputConfigurationRequest_encodingName</a> - The format
--   that will be used to encode the data. For ancillary data streams, set
--   the encoding name to smpte291. For audio streams, set the encoding
--   name to pcm. For video, 2110 streams, set the encoding name to raw.
--   For video, JPEG XS streams, set the encoding name to jxsv.
newMediaStreamOutputConfigurationRequest :: Text -> EncodingName -> MediaStreamOutputConfigurationRequest

-- | The media stream that is associated with the source, and the
--   parameters for that association.
--   
--   <i>See:</i> <a>newMediaStreamSourceConfiguration</a> smart
--   constructor.
data MediaStreamSourceConfiguration
MediaStreamSourceConfiguration' :: Maybe [InputConfiguration] -> Text -> EncodingName -> MediaStreamSourceConfiguration

-- | Create a value of <a>MediaStreamSourceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputConfigurations:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_inputConfigurations</a> - The
--   transport parameters that are associated with an incoming media
--   stream.
--   
--   <a>$sel:mediaStreamName:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_mediaStreamName</a> - The name of
--   the media stream.
--   
--   <a>$sel:encodingName:MediaStreamSourceConfiguration'</a>,
--   <a>mediaStreamSourceConfiguration_encodingName</a> - The format that
--   was used to encode the data. For ancillary data streams, set the
--   encoding name to smpte291. For audio streams, set the encoding name to
--   pcm. For video, 2110 streams, set the encoding name to raw. For video,
--   JPEG XS streams, set the encoding name to jxsv.
newMediaStreamSourceConfiguration :: Text -> EncodingName -> MediaStreamSourceConfiguration

-- | The definition of a media stream that you want to associate with the
--   source.
--   
--   <i>See:</i> <a>newMediaStreamSourceConfigurationRequest</a> smart
--   constructor.
data MediaStreamSourceConfigurationRequest
MediaStreamSourceConfigurationRequest' :: Maybe [InputConfigurationRequest] -> Text -> EncodingName -> MediaStreamSourceConfigurationRequest

-- | Create a value of <a>MediaStreamSourceConfigurationRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputConfigurations:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_inputConfigurations</a> - The
--   transport parameters that you want to associate with the media stream.
--   
--   <a>$sel:mediaStreamName:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_mediaStreamName</a> - The
--   name of the media stream.
--   
--   <a>$sel:encodingName:MediaStreamSourceConfigurationRequest'</a>,
--   <a>mediaStreamSourceConfigurationRequest_encodingName</a> - The format
--   you want to use to encode the data. For ancillary data streams, set
--   the encoding name to smpte291. For audio streams, set the encoding
--   name to pcm. For video, 2110 streams, set the encoding name to raw.
--   For video, JPEG XS streams, set the encoding name to jxsv.
newMediaStreamSourceConfigurationRequest :: Text -> EncodingName -> MediaStreamSourceConfigurationRequest

-- | Messages that provide the state of the flow.
--   
--   <i>See:</i> <a>newMessages</a> smart constructor.
data Messages
Messages' :: [Text] -> Messages

-- | Create a value of <a>Messages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:Messages'</a>, <a>messages_errors</a> - A list of
--   errors that might have been generated from processes on this flow.
newMessages :: Messages

-- | A savings plan that reserves a certain amount of outbound bandwidth
--   usage at a discounted rate each month over a period of time.
--   
--   <i>See:</i> <a>newOffering</a> smart constructor.
data Offering
Offering' :: Text -> Text -> Text -> DurationUnits -> Int -> Text -> ResourceSpecification -> PriceUnits -> Offering

-- | Create a value of <a>Offering</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currencyCode:Offering'</a>, <a>offering_currencyCode</a> - The
--   type of currency that is used for billing. The currencyCode used for
--   all reservations is US dollars.
--   
--   <a>$sel:offeringArn:Offering'</a>, <a>offering_offeringArn</a> - The
--   Amazon Resource Name (ARN) that MediaConnect assigns to the offering.
--   
--   <a>$sel:offeringDescription:Offering'</a>,
--   <a>offering_offeringDescription</a> - A description of the offering.
--   
--   <a>$sel:durationUnits:Offering'</a>, <a>offering_durationUnits</a> -
--   The unit of measurement for the duration of the offering.
--   
--   <a>$sel:duration:Offering'</a>, <a>offering_duration</a> - The length
--   of time that your reservation would be active.
--   
--   <a>$sel:pricePerUnit:Offering'</a>, <a>offering_pricePerUnit</a> - The
--   cost of a single unit. This value, in combination with priceUnits,
--   makes up the rate.
--   
--   <a>$sel:resourceSpecification:Offering'</a>,
--   <a>offering_resourceSpecification</a> - A definition of the amount of
--   outbound bandwidth that you would be reserving if you purchase the
--   offering.
--   
--   <a>$sel:priceUnits:Offering'</a>, <a>offering_priceUnits</a> - The
--   unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate.
newOffering :: Text -> Text -> Text -> DurationUnits -> Int -> Text -> ResourceSpecification -> PriceUnits -> Offering

-- | The settings for an output.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [MediaStreamOutputConfiguration] -> Maybe Text -> Maybe Encryption -> Maybe Text -> Maybe Transport -> Maybe Text -> Maybe Int -> Maybe VpcInterfaceAttachment -> Text -> Text -> Output

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:Output'</a>, <a>output_entitlementArn</a> - The
--   ARN of the entitlement on the originator''s flow. This value is
--   relevant only on entitled flows.
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Output'</a>,
--   <a>output_dataTransferSubscriberFeePercent</a> - Percentage from 0-100
--   of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:destination:Output'</a>, <a>output_destination</a> - The
--   address where you want to send the output.
--   
--   <a>$sel:mediaStreamOutputConfigurations:Output'</a>,
--   <a>output_mediaStreamOutputConfigurations</a> - The configuration for
--   each media stream that is associated with the output.
--   
--   <a>$sel:mediaLiveInputArn:Output'</a>, <a>output_mediaLiveInputArn</a>
--   - The input ARN of the AWS Elemental MediaLive channel. This parameter
--   is relevant only for outputs that were added by creating a MediaLive
--   input.
--   
--   <a>$sel:encryption:Output'</a>, <a>output_encryption</a> - The type of
--   key used for the encryption. If no keyType is provided, the service
--   will use the default setting (static-key).
--   
--   <a>$sel:listenerAddress:Output'</a>, <a>output_listenerAddress</a> -
--   The IP address that the receiver requires in order to establish a
--   connection with the flow. For public networking, the ListenerAddress
--   is represented by the elastic IP address of the flow. For private
--   networking, the ListenerAddress is represented by the elastic network
--   interface IP address of the VPC. This field applies only to outputs
--   that use the Zixi pull or SRT listener protocol.
--   
--   <a>$sel:transport:Output'</a>, <a>output_transport</a> - Attributes
--   related to the transport stream that are used in the output.
--   
--   <a>$sel:description:Output'</a>, <a>output_description</a> - A
--   description of the output.
--   
--   <a>$sel:port:Output'</a>, <a>output_port</a> - The port to use when
--   content is distributed to this output.
--   
--   <a>$sel:vpcInterfaceAttachment:Output'</a>,
--   <a>output_vpcInterfaceAttachment</a> - The name of the VPC interface
--   attachment to use for this output.
--   
--   <a>$sel:outputArn:Output'</a>, <a>output_outputArn</a> - The ARN of
--   the output.
--   
--   <a>$sel:name:Output'</a>, <a>output_name</a> - The name of the output.
--   This value must be unique within the current flow.
newOutput :: Text -> Text -> Output

-- | A pricing agreement for a discounted rate for a specific outbound
--   bandwidth that your MediaConnect account will use each month over a
--   specific time period. The discounted rate in the reservation applies
--   to outbound bandwidth for all flows from your account until your
--   account reaches the amount of bandwidth in your reservation. If you
--   use more outbound bandwidth than the agreed upon amount in a single
--   month, the overage is charged at the on-demand rate.
--   
--   <i>See:</i> <a>newReservation</a> smart constructor.
data Reservation
Reservation' :: Text -> ReservationState -> Text -> Text -> Text -> Text -> Text -> Text -> Int -> DurationUnits -> Text -> ResourceSpecification -> PriceUnits -> Reservation

-- | Create a value of <a>Reservation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currencyCode:Reservation'</a>, <a>reservation_currencyCode</a>
--   - The type of currency that is used for billing. The currencyCode used
--   for your reservation is US dollars.
--   
--   <a>$sel:reservationState:Reservation'</a>,
--   <a>reservation_reservationState</a> - The status of your reservation.
--   
--   <a>$sel:offeringArn:Reservation'</a>, <a>reservation_offeringArn</a> -
--   The Amazon Resource Name (ARN) that MediaConnect assigns to the
--   offering.
--   
--   <a>$sel:reservationArn:Reservation'</a>,
--   <a>reservation_reservationArn</a> - The Amazon Resource Name (ARN)
--   that MediaConnect assigns to the reservation when you purchase an
--   offering.
--   
--   <a>$sel:start:Reservation'</a>, <a>reservation_start</a> - The day and
--   time that the reservation becomes active. You set this value when you
--   purchase the offering.
--   
--   <a>$sel:offeringDescription:Reservation'</a>,
--   <a>reservation_offeringDescription</a> - A description of the
--   offering. MediaConnect defines this value in the offering.
--   
--   <a>$sel:reservationName:Reservation'</a>,
--   <a>reservation_reservationName</a> - The name that you assigned to the
--   reservation when you purchased the offering.
--   
--   <a>$sel:end:Reservation'</a>, <a>reservation_end</a> - The day and
--   time that this reservation expires. This value is calculated based on
--   the start date and time that you set and the offering's duration.
--   
--   <a>$sel:duration:Reservation'</a>, <a>reservation_duration</a> - The
--   length of time that this reservation is active. MediaConnect defines
--   this value in the offering.
--   
--   <a>$sel:durationUnits:Reservation'</a>,
--   <a>reservation_durationUnits</a> - The unit of measurement for the
--   duration of the reservation. MediaConnect defines this value in the
--   offering.
--   
--   <a>$sel:pricePerUnit:Reservation'</a>, <a>reservation_pricePerUnit</a>
--   - The cost of a single unit. This value, in combination with
--   priceUnits, makes up the rate. MediaConnect defines this value in the
--   offering.
--   
--   <a>$sel:resourceSpecification:Reservation'</a>,
--   <a>reservation_resourceSpecification</a> - A definition of the amount
--   of outbound bandwidth that you would be reserving if you purchase the
--   offering. MediaConnect defines the values that make up the
--   resourceSpecification in the offering.
--   
--   <a>$sel:priceUnits:Reservation'</a>, <a>reservation_priceUnits</a> -
--   The unit of measurement that is used for billing. This value, in
--   combination with pricePerUnit, makes up the rate. MediaConnect defines
--   this value in the offering.
newReservation :: Text -> ReservationState -> Text -> Text -> Text -> Text -> Text -> Text -> Int -> DurationUnits -> Text -> ResourceSpecification -> PriceUnits -> Reservation

-- | A definition of what is being billed for, including the type and
--   amount.
--   
--   <i>See:</i> <a>newResourceSpecification</a> smart constructor.
data ResourceSpecification
ResourceSpecification' :: Maybe Int -> ResourceType -> ResourceSpecification

-- | Create a value of <a>ResourceSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedBitrate:ResourceSpecification'</a>,
--   <a>resourceSpecification_reservedBitrate</a> - The amount of outbound
--   bandwidth that is discounted in the offering.
--   
--   <a>$sel:resourceType:ResourceSpecification'</a>,
--   <a>resourceSpecification_resourceType</a> - The type of resource and
--   the unit that is being billed for.
newResourceSpecification :: ResourceType -> ResourceSpecification

-- | The settings for the source of the flow.
--   
--   <i>See:</i> <a>newSetSourceRequest</a> smart constructor.
data SetSourceRequest
SetSourceRequest' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Encryption -> Maybe Int -> Maybe Protocol -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe [MediaStreamSourceConfigurationRequest] -> Maybe Text -> Maybe Int -> Maybe Text -> SetSourceRequest

-- | Create a value of <a>SetSourceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:SetSourceRequest'</a>,
--   <a>setSourceRequest_entitlementArn</a> - The ARN of the entitlement
--   that allows you to subscribe to this flow. The entitlement is set by
--   the flow originator, and the ARN is generated as part of the
--   originator's flow.
--   
--   <a>$sel:maxLatency:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxLatency</a> - The maximum latency in
--   milliseconds. This parameter applies only to RIST-based and Zixi-based
--   streams.
--   
--   <a>$sel:vpcInterfaceName:SetSourceRequest'</a>,
--   <a>setSourceRequest_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this source.
--   
--   <a>$sel:decryption:SetSourceRequest'</a>,
--   <a>setSourceRequest_decryption</a> - The type of encryption that is
--   used on the content ingested from this source.
--   
--   <a>$sel:maxSyncBuffer:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxSyncBuffer</a> - The size of the buffer (in
--   milliseconds) to use to sync incoming source data.
--   
--   <a>$sel:protocol:SetSourceRequest'</a>,
--   <a>setSourceRequest_protocol</a> - The protocol that is used by the
--   source.
--   
--   <a>$sel:name:SetSourceRequest'</a>, <a>setSourceRequest_name</a> - The
--   name of the source.
--   
--   <a>$sel:minLatency:SetSourceRequest'</a>,
--   <a>setSourceRequest_minLatency</a> - The minimum latency in
--   milliseconds for SRT-based streams. In streams that use the SRT
--   protocol, this value that you set on your MediaConnect source or
--   output represents the minimal potential latency of that connection.
--   The latency of the stream is set to the highest number between the
--   sender’s minimum latency and the receiver’s minimum latency.
--   
--   <a>$sel:ingestPort:SetSourceRequest'</a>,
--   <a>setSourceRequest_ingestPort</a> - The port that the flow will be
--   listening on for incoming content.
--   
--   <a>$sel:description:SetSourceRequest'</a>,
--   <a>setSourceRequest_description</a> - A description for the source.
--   This value is not used or seen outside of the current AWS Elemental
--   MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:SetSourceRequest'</a>,
--   <a>setSourceRequest_mediaStreamSourceConfigurations</a> - The media
--   streams that are associated with the source, and the parameters for
--   those associations.
--   
--   <a>$sel:whitelistCidr:SetSourceRequest'</a>,
--   <a>setSourceRequest_whitelistCidr</a> - The range of IP addresses that
--   should be allowed to contribute content to your source. These IP
--   addresses should be in the form of a Classless Inter-Domain Routing
--   (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:maxBitrate:SetSourceRequest'</a>,
--   <a>setSourceRequest_maxBitrate</a> - The smoothing max bitrate for
--   RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:SetSourceRequest'</a>,
--   <a>setSourceRequest_streamId</a> - The stream ID that you want to use
--   for this transport. This parameter applies only to Zixi-based streams.
newSetSourceRequest :: SetSourceRequest

-- | The settings for the source of the flow.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Encryption -> Maybe Text -> Maybe Int -> Maybe Transport -> Maybe Text -> Maybe [MediaStreamSourceConfiguration] -> Maybe Text -> Text -> Text -> Source

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitlementArn:Source'</a>, <a>source_entitlementArn</a> - The
--   ARN of the entitlement that allows you to subscribe to content that
--   comes from another AWS account. The entitlement is set by the content
--   originator and the ARN is generated as part of the originator's flow.
--   
--   <a>$sel:dataTransferSubscriberFeePercent:Source'</a>,
--   <a>source_dataTransferSubscriberFeePercent</a> - Percentage from 0-100
--   of the data transfer cost to be billed to the subscriber.
--   
--   <a>$sel:vpcInterfaceName:Source'</a>, <a>source_vpcInterfaceName</a> -
--   The name of the VPC interface that is used for this source.
--   
--   <a>$sel:decryption:Source'</a>, <a>source_decryption</a> - The type of
--   encryption that is used on the content ingested from this source.
--   
--   <a>$sel:ingestIp:Source'</a>, <a>source_ingestIp</a> - The IP address
--   that the flow will be listening on for incoming content.
--   
--   <a>$sel:ingestPort:Source'</a>, <a>source_ingestPort</a> - The port
--   that the flow will be listening on for incoming content.
--   
--   <a>$sel:transport:Source'</a>, <a>source_transport</a> - Attributes
--   related to the transport stream that are used in the source.
--   
--   <a>$sel:description:Source'</a>, <a>source_description</a> - A
--   description for the source. This value is not used or seen outside of
--   the current AWS Elemental MediaConnect account.
--   
--   <a>$sel:mediaStreamSourceConfigurations:Source'</a>,
--   <a>source_mediaStreamSourceConfigurations</a> - The media streams that
--   are associated with the source, and the parameters for those
--   associations.
--   
--   <a>$sel:whitelistCidr:Source'</a>, <a>source_whitelistCidr</a> - The
--   range of IP addresses that should be allowed to contribute content to
--   your source. These IP addresses should be in the form of a Classless
--   Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:sourceArn:Source'</a>, <a>source_sourceArn</a> - The ARN of
--   the source.
--   
--   <a>$sel:name:Source'</a>, <a>source_name</a> - The name of the source.
newSource :: Text -> Text -> Source

-- | The priority you want to assign to a source. You can have a primary
--   stream and a backup stream or two equally prioritized streams.
--   
--   <i>See:</i> <a>newSourcePriority</a> smart constructor.
data SourcePriority
SourcePriority' :: Maybe Text -> SourcePriority

-- | Create a value of <a>SourcePriority</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:primarySource:SourcePriority'</a>,
--   <a>sourcePriority_primarySource</a> - The name of the source you
--   choose as the primary source for this flow.
newSourcePriority :: SourcePriority

-- | Attributes related to the transport stream that are used in a source
--   or output.
--   
--   <i>See:</i> <a>newTransport</a> smart constructor.
data Transport
Transport' :: Maybe Int -> Maybe Int -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Protocol -> Transport

-- | Create a value of <a>Transport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxLatency:Transport'</a>, <a>transport_maxLatency</a> - The
--   maximum latency in milliseconds. This parameter applies only to
--   RIST-based and Zixi-based streams.
--   
--   <a>$sel:maxSyncBuffer:Transport'</a>, <a>transport_maxSyncBuffer</a> -
--   The size of the buffer (in milliseconds) to use to sync incoming
--   source data.
--   
--   <a>$sel:cidrAllowList:Transport'</a>, <a>transport_cidrAllowList</a> -
--   The range of IP addresses that should be allowed to initiate output
--   requests to this flow. These IP addresses should be in the form of a
--   Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
--   
--   <a>$sel:smoothingLatency:Transport'</a>,
--   <a>transport_smoothingLatency</a> - The smoothing latency in
--   milliseconds for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:minLatency:Transport'</a>, <a>transport_minLatency</a> - The
--   minimum latency in milliseconds for SRT-based streams. In streams that
--   use the SRT protocol, this value that you set on your MediaConnect
--   source or output represents the minimal potential latency of that
--   connection. The latency of the stream is set to the highest number
--   between the sender’s minimum latency and the receiver’s minimum
--   latency.
--   
--   <a>$sel:maxBitrate:Transport'</a>, <a>transport_maxBitrate</a> - The
--   smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
--   
--   <a>$sel:streamId:Transport'</a>, <a>transport_streamId</a> - The
--   stream ID that you want to use for this transport. This parameter
--   applies only to Zixi-based streams.
--   
--   <a>$sel:remoteId:Transport'</a>, <a>transport_remoteId</a> - The
--   remote ID for the Zixi-pull stream.
--   
--   <a>$sel:protocol:Transport'</a>, <a>transport_protocol</a> - The
--   protocol that is used by the source or output.
newTransport :: Protocol -> Transport

-- | Information about the encryption of the flow.
--   
--   <i>See:</i> <a>newUpdateEncryption</a> smart constructor.
data UpdateEncryption
UpdateEncryption' :: Maybe KeyType -> Maybe Text -> Maybe Text -> Maybe Algorithm -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UpdateEncryption

-- | Create a value of <a>UpdateEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyType:UpdateEncryption'</a>, <a>updateEncryption_keyType</a>
--   - The type of key that is used for the encryption. If no keyType is
--   provided, the service will use the default setting (static-key).
--   
--   <a>$sel:resourceId:UpdateEncryption'</a>,
--   <a>updateEncryption_resourceId</a> - An identifier for the content.
--   The service sends this value to the key server to identify the current
--   endpoint. The resource ID is also known as the content ID. This
--   parameter is required for SPEKE encryption and is not valid for static
--   key encryption.
--   
--   <a>$sel:url:UpdateEncryption'</a>, <a>updateEncryption_url</a> - The
--   URL from the API Gateway proxy that you set up to talk to your key
--   server. This parameter is required for SPEKE encryption and is not
--   valid for static key encryption.
--   
--   <a>$sel:algorithm:UpdateEncryption'</a>,
--   <a>updateEncryption_algorithm</a> - The type of algorithm that is used
--   for the encryption (such as aes128, aes192, or aes256).
--   
--   <a>$sel:constantInitializationVector:UpdateEncryption'</a>,
--   <a>updateEncryption_constantInitializationVector</a> - A 128-bit,
--   16-byte hex value represented by a 32-character string, to be used
--   with the key for encrypting content. This parameter is not valid for
--   static key encryption.
--   
--   <a>$sel:deviceId:UpdateEncryption'</a>,
--   <a>updateEncryption_deviceId</a> - The value of one of the devices
--   that you configured with your digital rights management (DRM) platform
--   key provider. This parameter is required for SPEKE encryption and is
--   not valid for static key encryption.
--   
--   <a>$sel:region:UpdateEncryption'</a>, <a>updateEncryption_region</a> -
--   The AWS Region that the API Gateway proxy endpoint was created in.
--   This parameter is required for SPEKE encryption and is not valid for
--   static key encryption.
--   
--   <a>$sel:secretArn:UpdateEncryption'</a>,
--   <a>updateEncryption_secretArn</a> - The ARN of the secret that you
--   created in AWS Secrets Manager to store the encryption key. This
--   parameter is required for static key encryption and is not valid for
--   SPEKE encryption.
--   
--   <a>$sel:roleArn:UpdateEncryption'</a>, <a>updateEncryption_roleArn</a>
--   - The ARN of the role that you created during setup (when you set up
--   AWS Elemental MediaConnect as a trusted entity).
newUpdateEncryption :: UpdateEncryption

-- | The settings for source failover
--   
--   <i>See:</i> <a>newUpdateFailoverConfig</a> smart constructor.
data UpdateFailoverConfig
UpdateFailoverConfig' :: Maybe State -> Maybe Int -> Maybe SourcePriority -> Maybe FailoverMode -> UpdateFailoverConfig

-- | Create a value of <a>UpdateFailoverConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_state</a> - Undocumented member.
--   
--   <a>$sel:recoveryWindow:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_recoveryWindow</a> - Recovery window time to
--   look for dash-7 packets
--   
--   <a>$sel:sourcePriority:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_sourcePriority</a> - The priority you want to
--   assign to a source. You can have a primary stream and a backup stream
--   or two equally prioritized streams.
--   
--   <a>$sel:failoverMode:UpdateFailoverConfig'</a>,
--   <a>updateFailoverConfig_failoverMode</a> - The type of failover you
--   choose for this flow. MERGE combines the source streams into a single
--   stream, allowing graceful recovery from any single-source loss.
--   FAILOVER allows switching between different streams.
newUpdateFailoverConfig :: UpdateFailoverConfig

-- | The settings for a VPC Source.
--   
--   <i>See:</i> <a>newVpcInterface</a> smart constructor.
data VpcInterface
VpcInterface' :: NetworkInterfaceType -> [Text] -> Text -> [Text] -> Text -> Text -> VpcInterface

-- | Create a value of <a>VpcInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceType:VpcInterface'</a>,
--   <a>vpcInterface_networkInterfaceType</a> - The type of network
--   interface.
--   
--   <a>$sel:networkInterfaceIds:VpcInterface'</a>,
--   <a>vpcInterface_networkInterfaceIds</a> - IDs of the network
--   interfaces created in customer's account by MediaConnect.
--   
--   <a>$sel:subnetId:VpcInterface'</a>, <a>vpcInterface_subnetId</a> -
--   Subnet must be in the AZ of the Flow
--   
--   <a>$sel:securityGroupIds:VpcInterface'</a>,
--   <a>vpcInterface_securityGroupIds</a> - Security Group IDs to be used
--   on ENI.
--   
--   <a>$sel:roleArn:VpcInterface'</a>, <a>vpcInterface_roleArn</a> - Role
--   Arn MediaConnect can assumes to create ENIs in customer's account
--   
--   <a>$sel:name:VpcInterface'</a>, <a>vpcInterface_name</a> - Immutable
--   and has to be a unique against other VpcInterfaces in this Flow
newVpcInterface :: NetworkInterfaceType -> Text -> Text -> Text -> VpcInterface

-- | The settings for attaching a VPC interface to an output.
--   
--   <i>See:</i> <a>newVpcInterfaceAttachment</a> smart constructor.
data VpcInterfaceAttachment
VpcInterfaceAttachment' :: Maybe Text -> VpcInterfaceAttachment

-- | Create a value of <a>VpcInterfaceAttachment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcInterfaceName:VpcInterfaceAttachment'</a>,
--   <a>vpcInterfaceAttachment_vpcInterfaceName</a> - The name of the VPC
--   interface to use for this output.
newVpcInterfaceAttachment :: VpcInterfaceAttachment

-- | Desired VPC Interface for a Flow
--   
--   <i>See:</i> <a>newVpcInterfaceRequest</a> smart constructor.
data VpcInterfaceRequest
VpcInterfaceRequest' :: Maybe NetworkInterfaceType -> Text -> [Text] -> Text -> Text -> VpcInterfaceRequest

-- | Create a value of <a>VpcInterfaceRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceType:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_networkInterfaceType</a> - The type of network
--   interface. If this value is not included in the request, MediaConnect
--   uses ENA as the networkInterfaceType.
--   
--   <a>$sel:subnetId:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_subnetId</a> - Subnet must be in the AZ of the
--   Flow
--   
--   <a>$sel:securityGroupIds:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_securityGroupIds</a> - Security Group IDs to be
--   used on ENI.
--   
--   <a>$sel:roleArn:VpcInterfaceRequest'</a>,
--   <a>vpcInterfaceRequest_roleArn</a> - Role Arn MediaConnect can assumes
--   to create ENIs in customer's account
--   
--   <a>$sel:name:VpcInterfaceRequest'</a>, <a>vpcInterfaceRequest_name</a>
--   - The name of the VPC Interface. This value must be unique within the
--   current flow.
newVpcInterfaceRequest :: Text -> Text -> Text -> VpcInterfaceRequest
