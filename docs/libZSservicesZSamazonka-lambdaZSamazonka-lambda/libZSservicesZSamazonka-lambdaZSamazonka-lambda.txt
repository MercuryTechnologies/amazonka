-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-lambdaZSamazonka-lambda
@version 2.0


module Amazonka.Lambda.Types.AccountLimit

-- | Limits that are related to concurrency and storage. All file and
--   storage sizes are in bytes.
--   
--   <i>See:</i> <a>newAccountLimit</a> smart constructor.
data AccountLimit
AccountLimit' :: Maybe Int -> Maybe Integer -> Maybe Natural -> Maybe Integer -> Maybe Integer -> AccountLimit

-- | The maximum number of simultaneous function executions.
[$sel:concurrentExecutions:AccountLimit'] :: AccountLimit -> Maybe Int

-- | The amount of storage space that you can use for all deployment
--   packages and layer archives.
[$sel:totalCodeSize:AccountLimit'] :: AccountLimit -> Maybe Integer

-- | The maximum number of simultaneous function executions, minus the
--   capacity that's reserved for individual functions with
--   PutFunctionConcurrency.
[$sel:unreservedConcurrentExecutions:AccountLimit'] :: AccountLimit -> Maybe Natural

-- | The maximum size of a function's deployment package and layers when
--   they're extracted.
[$sel:codeSizeUnzipped:AccountLimit'] :: AccountLimit -> Maybe Integer

-- | The maximum size of a deployment package when it's uploaded directly
--   to Lambda. Use Amazon S3 for larger files.
[$sel:codeSizeZipped:AccountLimit'] :: AccountLimit -> Maybe Integer

-- | Create a value of <a>AccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentExecutions:AccountLimit'</a>,
--   <a>accountLimit_concurrentExecutions</a> - The maximum number of
--   simultaneous function executions.
--   
--   <a>$sel:totalCodeSize:AccountLimit'</a>,
--   <a>accountLimit_totalCodeSize</a> - The amount of storage space that
--   you can use for all deployment packages and layer archives.
--   
--   <a>$sel:unreservedConcurrentExecutions:AccountLimit'</a>,
--   <a>accountLimit_unreservedConcurrentExecutions</a> - The maximum
--   number of simultaneous function executions, minus the capacity that's
--   reserved for individual functions with PutFunctionConcurrency.
--   
--   <a>$sel:codeSizeUnzipped:AccountLimit'</a>,
--   <a>accountLimit_codeSizeUnzipped</a> - The maximum size of a
--   function's deployment package and layers when they're extracted.
--   
--   <a>$sel:codeSizeZipped:AccountLimit'</a>,
--   <a>accountLimit_codeSizeZipped</a> - The maximum size of a deployment
--   package when it's uploaded directly to Lambda. Use Amazon S3 for
--   larger files.
newAccountLimit :: AccountLimit

-- | The maximum number of simultaneous function executions.
accountLimit_concurrentExecutions :: Lens' AccountLimit (Maybe Int)

-- | The amount of storage space that you can use for all deployment
--   packages and layer archives.
accountLimit_totalCodeSize :: Lens' AccountLimit (Maybe Integer)

-- | The maximum number of simultaneous function executions, minus the
--   capacity that's reserved for individual functions with
--   PutFunctionConcurrency.
accountLimit_unreservedConcurrentExecutions :: Lens' AccountLimit (Maybe Natural)

-- | The maximum size of a function's deployment package and layers when
--   they're extracted.
accountLimit_codeSizeUnzipped :: Lens' AccountLimit (Maybe Integer)

-- | The maximum size of a deployment package when it's uploaded directly
--   to Lambda. Use Amazon S3 for larger files.
accountLimit_codeSizeZipped :: Lens' AccountLimit (Maybe Integer)
instance GHC.Generics.Generic Amazonka.Lambda.Types.AccountLimit.AccountLimit
instance GHC.Show.Show Amazonka.Lambda.Types.AccountLimit.AccountLimit
instance GHC.Read.Read Amazonka.Lambda.Types.AccountLimit.AccountLimit
instance GHC.Classes.Eq Amazonka.Lambda.Types.AccountLimit.AccountLimit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.AccountLimit.AccountLimit
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.AccountLimit.AccountLimit
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.AccountLimit.AccountLimit


module Amazonka.Lambda.Types.AccountUsage

-- | The number of functions and amount of storage in use.
--   
--   <i>See:</i> <a>newAccountUsage</a> smart constructor.
data AccountUsage
AccountUsage' :: Maybe Integer -> Maybe Integer -> AccountUsage

-- | The amount of storage space, in bytes, that's being used by deployment
--   packages and layer archives.
[$sel:totalCodeSize:AccountUsage'] :: AccountUsage -> Maybe Integer

-- | The number of Lambda functions.
[$sel:functionCount:AccountUsage'] :: AccountUsage -> Maybe Integer

-- | Create a value of <a>AccountUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalCodeSize:AccountUsage'</a>,
--   <a>accountUsage_totalCodeSize</a> - The amount of storage space, in
--   bytes, that's being used by deployment packages and layer archives.
--   
--   <a>$sel:functionCount:AccountUsage'</a>,
--   <a>accountUsage_functionCount</a> - The number of Lambda functions.
newAccountUsage :: AccountUsage

-- | The amount of storage space, in bytes, that's being used by deployment
--   packages and layer archives.
accountUsage_totalCodeSize :: Lens' AccountUsage (Maybe Integer)

-- | The number of Lambda functions.
accountUsage_functionCount :: Lens' AccountUsage (Maybe Integer)
instance GHC.Generics.Generic Amazonka.Lambda.Types.AccountUsage.AccountUsage
instance GHC.Show.Show Amazonka.Lambda.Types.AccountUsage.AccountUsage
instance GHC.Read.Read Amazonka.Lambda.Types.AccountUsage.AccountUsage
instance GHC.Classes.Eq Amazonka.Lambda.Types.AccountUsage.AccountUsage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.AccountUsage.AccountUsage
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.AccountUsage.AccountUsage
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.AccountUsage.AccountUsage


module Amazonka.Lambda.Types.AliasRoutingConfiguration

-- | The <a>traffic-shifting</a> configuration of a Lambda function alias.
--   
--   <i>See:</i> <a>newAliasRoutingConfiguration</a> smart constructor.
data AliasRoutingConfiguration
AliasRoutingConfiguration' :: Maybe (HashMap Text Double) -> AliasRoutingConfiguration

-- | The second version, and the percentage of traffic that's routed to it.
[$sel:additionalVersionWeights:AliasRoutingConfiguration'] :: AliasRoutingConfiguration -> Maybe (HashMap Text Double)

-- | Create a value of <a>AliasRoutingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalVersionWeights:AliasRoutingConfiguration'</a>,
--   <a>aliasRoutingConfiguration_additionalVersionWeights</a> - The second
--   version, and the percentage of traffic that's routed to it.
newAliasRoutingConfiguration :: AliasRoutingConfiguration

-- | The second version, and the percentage of traffic that's routed to it.
aliasRoutingConfiguration_additionalVersionWeights :: Lens' AliasRoutingConfiguration (Maybe (HashMap Text Double))
instance GHC.Generics.Generic Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration
instance GHC.Show.Show Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration
instance GHC.Read.Read Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration
instance GHC.Classes.Eq Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.AliasRoutingConfiguration.AliasRoutingConfiguration


module Amazonka.Lambda.Types.AliasConfiguration

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
[$sel:routingConfig:AliasConfiguration'] :: AliasConfiguration -> Maybe AliasRoutingConfiguration

-- | The name of the alias.
[$sel:name:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The function version that the alias invokes.
[$sel:functionVersion:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the alias.
[$sel:aliasArn:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A description of the alias.
[$sel:description:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A unique identifier that changes when you update the alias.
[$sel:revisionId:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.AliasConfiguration.AliasConfiguration
instance GHC.Show.Show Amazonka.Lambda.Types.AliasConfiguration.AliasConfiguration
instance GHC.Read.Read Amazonka.Lambda.Types.AliasConfiguration.AliasConfiguration
instance GHC.Classes.Eq Amazonka.Lambda.Types.AliasConfiguration.AliasConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.AliasConfiguration.AliasConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.AliasConfiguration.AliasConfiguration
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.AliasConfiguration.AliasConfiguration


module Amazonka.Lambda.Types.AllowedPublishers

-- | List of signing profiles that can sign a code package.
--   
--   <i>See:</i> <a>newAllowedPublishers</a> smart constructor.
data AllowedPublishers
AllowedPublishers' :: NonEmpty Text -> AllowedPublishers

-- | The Amazon Resource Name (ARN) for each of the signing profiles. A
--   signing profile defines a trusted user who can sign a code package.
[$sel:signingProfileVersionArns:AllowedPublishers'] :: AllowedPublishers -> NonEmpty Text

-- | Create a value of <a>AllowedPublishers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArns:AllowedPublishers'</a>,
--   <a>allowedPublishers_signingProfileVersionArns</a> - The Amazon
--   Resource Name (ARN) for each of the signing profiles. A signing
--   profile defines a trusted user who can sign a code package.
newAllowedPublishers :: NonEmpty Text -> AllowedPublishers

-- | The Amazon Resource Name (ARN) for each of the signing profiles. A
--   signing profile defines a trusted user who can sign a code package.
allowedPublishers_signingProfileVersionArns :: Lens' AllowedPublishers (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers
instance GHC.Show.Show Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers
instance GHC.Read.Read Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers
instance GHC.Classes.Eq Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.AllowedPublishers.AllowedPublishers


module Amazonka.Lambda.Types.Architecture
newtype Architecture
Architecture' :: Text -> Architecture
[fromArchitecture] :: Architecture -> Text
pattern Architecture_Arm64 :: Architecture
pattern Architecture_X86_64 :: Architecture
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.Architecture.Architecture
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.Architecture.Architecture
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.Architecture.Architecture
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.Architecture.Architecture
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.Architecture.Architecture
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.Architecture.Architecture
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.Architecture.Architecture
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.Architecture.Architecture
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.Architecture.Architecture
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.Architecture.Architecture
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.Architecture.Architecture
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.Architecture.Architecture
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.Architecture.Architecture
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.Architecture.Architecture
instance GHC.Generics.Generic Amazonka.Lambda.Types.Architecture.Architecture
instance GHC.Classes.Ord Amazonka.Lambda.Types.Architecture.Architecture
instance GHC.Classes.Eq Amazonka.Lambda.Types.Architecture.Architecture
instance GHC.Read.Read Amazonka.Lambda.Types.Architecture.Architecture
instance GHC.Show.Show Amazonka.Lambda.Types.Architecture.Architecture


module Amazonka.Lambda.Types.CodeSigningPolicy
newtype CodeSigningPolicy
CodeSigningPolicy' :: Text -> CodeSigningPolicy
[fromCodeSigningPolicy] :: CodeSigningPolicy -> Text
pattern CodeSigningPolicy_Enforce :: CodeSigningPolicy
pattern CodeSigningPolicy_Warn :: CodeSigningPolicy
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance GHC.Generics.Generic Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance GHC.Classes.Ord Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance GHC.Classes.Eq Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance GHC.Read.Read Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy
instance GHC.Show.Show Amazonka.Lambda.Types.CodeSigningPolicy.CodeSigningPolicy


module Amazonka.Lambda.Types.CodeSigningPolicies

-- | Code signing configuration <a>policies</a> specify the validation
--   failure action for signature mismatch or expiry.
--   
--   <i>See:</i> <a>newCodeSigningPolicies</a> smart constructor.
data CodeSigningPolicies
CodeSigningPolicies' :: Maybe CodeSigningPolicy -> CodeSigningPolicies

-- | Code signing configuration policy for deployment validation failure.
--   If you set the policy to <tt>Enforce</tt>, Lambda blocks the
--   deployment request if signature validation checks fail. If you set the
--   policy to <tt>Warn</tt>, Lambda allows the deployment and creates a
--   CloudWatch log.
--   
--   Default value: <tt>Warn</tt>
[$sel:untrustedArtifactOnDeployment:CodeSigningPolicies'] :: CodeSigningPolicies -> Maybe CodeSigningPolicy

-- | Create a value of <a>CodeSigningPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:untrustedArtifactOnDeployment:CodeSigningPolicies'</a>,
--   <a>codeSigningPolicies_untrustedArtifactOnDeployment</a> - Code
--   signing configuration policy for deployment validation failure. If you
--   set the policy to <tt>Enforce</tt>, Lambda blocks the deployment
--   request if signature validation checks fail. If you set the policy to
--   <tt>Warn</tt>, Lambda allows the deployment and creates a CloudWatch
--   log.
--   
--   Default value: <tt>Warn</tt>
newCodeSigningPolicies :: CodeSigningPolicies

-- | Code signing configuration policy for deployment validation failure.
--   If you set the policy to <tt>Enforce</tt>, Lambda blocks the
--   deployment request if signature validation checks fail. If you set the
--   policy to <tt>Warn</tt>, Lambda allows the deployment and creates a
--   CloudWatch log.
--   
--   Default value: <tt>Warn</tt>
codeSigningPolicies_untrustedArtifactOnDeployment :: Lens' CodeSigningPolicies (Maybe CodeSigningPolicy)
instance GHC.Generics.Generic Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies
instance GHC.Show.Show Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies
instance GHC.Read.Read Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies
instance GHC.Classes.Eq Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.CodeSigningPolicies.CodeSigningPolicies


module Amazonka.Lambda.Types.CodeSigningConfig

-- | Details about a <a>Code signing configuration</a>.
--   
--   <i>See:</i> <a>newCodeSigningConfig</a> smart constructor.
data CodeSigningConfig
CodeSigningConfig' :: Maybe Text -> Text -> Text -> AllowedPublishers -> CodeSigningPolicies -> Text -> CodeSigningConfig

-- | Code signing configuration description.
[$sel:description:CodeSigningConfig'] :: CodeSigningConfig -> Maybe Text

-- | Unique identifer for the Code signing configuration.
[$sel:codeSigningConfigId:CodeSigningConfig'] :: CodeSigningConfig -> Text

-- | The Amazon Resource Name (ARN) of the Code signing configuration.
[$sel:codeSigningConfigArn:CodeSigningConfig'] :: CodeSigningConfig -> Text

-- | List of allowed publishers.
[$sel:allowedPublishers:CodeSigningConfig'] :: CodeSigningConfig -> AllowedPublishers

-- | The code signing policy controls the validation failure action for
--   signature mismatch or expiry.
[$sel:codeSigningPolicies:CodeSigningConfig'] :: CodeSigningConfig -> CodeSigningPolicies

-- | The date and time that the Code signing configuration was last
--   modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:CodeSigningConfig'] :: CodeSigningConfig -> Text

-- | Create a value of <a>CodeSigningConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_description</a> - Code signing configuration
--   description.
--   
--   <a>$sel:codeSigningConfigId:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningConfigId</a> - Unique identifer for
--   the Code signing configuration.
--   
--   <a>$sel:codeSigningConfigArn:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningConfigArn</a> - The Amazon Resource
--   Name (ARN) of the Code signing configuration.
--   
--   <a>$sel:allowedPublishers:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_allowedPublishers</a> - List of allowed
--   publishers.
--   
--   <a>$sel:codeSigningPolicies:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningPolicies</a> - The code signing policy
--   controls the validation failure action for signature mismatch or
--   expiry.
--   
--   <a>$sel:lastModified:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_lastModified</a> - The date and time that the
--   Code signing configuration was last modified, in ISO-8601 format
--   (YYYY-MM-DDThh:mm:ss.sTZD).
newCodeSigningConfig :: Text -> Text -> AllowedPublishers -> CodeSigningPolicies -> Text -> CodeSigningConfig

-- | Code signing configuration description.
codeSigningConfig_description :: Lens' CodeSigningConfig (Maybe Text)

-- | Unique identifer for the Code signing configuration.
codeSigningConfig_codeSigningConfigId :: Lens' CodeSigningConfig Text

-- | The Amazon Resource Name (ARN) of the Code signing configuration.
codeSigningConfig_codeSigningConfigArn :: Lens' CodeSigningConfig Text

-- | List of allowed publishers.
codeSigningConfig_allowedPublishers :: Lens' CodeSigningConfig AllowedPublishers

-- | The code signing policy controls the validation failure action for
--   signature mismatch or expiry.
codeSigningConfig_codeSigningPolicies :: Lens' CodeSigningConfig CodeSigningPolicies

-- | The date and time that the Code signing configuration was last
--   modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).
codeSigningConfig_lastModified :: Lens' CodeSigningConfig Text
instance GHC.Generics.Generic Amazonka.Lambda.Types.CodeSigningConfig.CodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.Types.CodeSigningConfig.CodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.Types.CodeSigningConfig.CodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.CodeSigningConfig.CodeSigningConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.CodeSigningConfig.CodeSigningConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.CodeSigningConfig.CodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.CodeSigningConfig.CodeSigningConfig


module Amazonka.Lambda.Types.Concurrency

-- | <i>See:</i> <a>newConcurrency</a> smart constructor.
data Concurrency
Concurrency' :: Maybe Natural -> Concurrency

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
[$sel:reservedConcurrentExecutions:Concurrency'] :: Concurrency -> Maybe Natural

-- | Create a value of <a>Concurrency</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedConcurrentExecutions:Concurrency'</a>,
--   <a>concurrency_reservedConcurrentExecutions</a> - The number of
--   concurrent executions that are reserved for this function. For more
--   information, see <a>Managing Concurrency</a>.
newConcurrency :: Concurrency

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
concurrency_reservedConcurrentExecutions :: Lens' Concurrency (Maybe Natural)
instance GHC.Generics.Generic Amazonka.Lambda.Types.Concurrency.Concurrency
instance GHC.Show.Show Amazonka.Lambda.Types.Concurrency.Concurrency
instance GHC.Read.Read Amazonka.Lambda.Types.Concurrency.Concurrency
instance GHC.Classes.Eq Amazonka.Lambda.Types.Concurrency.Concurrency
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.Concurrency.Concurrency
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.Concurrency.Concurrency
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.Concurrency.Concurrency


module Amazonka.Lambda.Types.DeadLetterConfig

-- | The <a>dead-letter queue</a> for failed asynchronous invocations.
--   
--   <i>See:</i> <a>newDeadLetterConfig</a> smart constructor.
data DeadLetterConfig
DeadLetterConfig' :: Maybe Text -> DeadLetterConfig

-- | The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS
--   topic.
[$sel:targetArn:DeadLetterConfig'] :: DeadLetterConfig -> Maybe Text

-- | Create a value of <a>DeadLetterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetArn:DeadLetterConfig'</a>,
--   <a>deadLetterConfig_targetArn</a> - The Amazon Resource Name (ARN) of
--   an Amazon SQS queue or Amazon SNS topic.
newDeadLetterConfig :: DeadLetterConfig

-- | The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS
--   topic.
deadLetterConfig_targetArn :: Lens' DeadLetterConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig
instance GHC.Show.Show Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig
instance GHC.Read.Read Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.DeadLetterConfig.DeadLetterConfig


module Amazonka.Lambda.Types.EndPointType
newtype EndPointType
EndPointType' :: Text -> EndPointType
[fromEndPointType] :: EndPointType -> Text
pattern EndPointType_KAFKA_BOOTSTRAP_SERVERS :: EndPointType
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.EndPointType.EndPointType
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.EndPointType.EndPointType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.EndPointType.EndPointType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.EndPointType.EndPointType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.EndPointType.EndPointType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.EndPointType.EndPointType
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.EndPointType.EndPointType
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.EndPointType.EndPointType
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.EndPointType.EndPointType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.EndPointType.EndPointType
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.EndPointType.EndPointType
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.EndPointType.EndPointType
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.EndPointType.EndPointType
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.EndPointType.EndPointType
instance GHC.Generics.Generic Amazonka.Lambda.Types.EndPointType.EndPointType
instance GHC.Classes.Ord Amazonka.Lambda.Types.EndPointType.EndPointType
instance GHC.Classes.Eq Amazonka.Lambda.Types.EndPointType.EndPointType
instance GHC.Read.Read Amazonka.Lambda.Types.EndPointType.EndPointType
instance GHC.Show.Show Amazonka.Lambda.Types.EndPointType.EndPointType


module Amazonka.Lambda.Types.Environment

-- | A function's environment variable settings. You can use environment
--   variables to adjust your function's behavior without updating code. An
--   environment variable is a pair of strings that are stored in a
--   function's version-specific configuration.
--   
--   <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe (Sensitive (HashMap Text (Sensitive Text))) -> Environment

-- | Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
[$sel:variables:Environment'] :: Environment -> Maybe (Sensitive (HashMap Text (Sensitive Text)))

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:Environment'</a>, <a>environment_variables</a> -
--   Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
newEnvironment :: Environment

-- | Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
environment_variables :: Lens' Environment (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.Lambda.Types.Environment.Environment
instance GHC.Show.Show Amazonka.Lambda.Types.Environment.Environment
instance GHC.Classes.Eq Amazonka.Lambda.Types.Environment.Environment
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.Environment.Environment
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.Environment.Environment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.Environment.Environment


module Amazonka.Lambda.Types.EnvironmentError

-- | Error messages for environment variables that couldn't be applied.
--   
--   <i>See:</i> <a>newEnvironmentError</a> smart constructor.
data EnvironmentError
EnvironmentError' :: Maybe Text -> Maybe (Sensitive Text) -> EnvironmentError

-- | The error code.
[$sel:errorCode:EnvironmentError'] :: EnvironmentError -> Maybe Text

-- | The error message.
[$sel:message:EnvironmentError'] :: EnvironmentError -> Maybe (Sensitive Text)

-- | Create a value of <a>EnvironmentError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:EnvironmentError'</a>,
--   <a>environmentError_errorCode</a> - The error code.
--   
--   <a>$sel:message:EnvironmentError'</a>, <a>environmentError_message</a>
--   - The error message.
newEnvironmentError :: EnvironmentError

-- | The error code.
environmentError_errorCode :: Lens' EnvironmentError (Maybe Text)

-- | The error message.
environmentError_message :: Lens' EnvironmentError (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.EnvironmentError.EnvironmentError
instance GHC.Show.Show Amazonka.Lambda.Types.EnvironmentError.EnvironmentError
instance GHC.Classes.Eq Amazonka.Lambda.Types.EnvironmentError.EnvironmentError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.EnvironmentError.EnvironmentError
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.EnvironmentError.EnvironmentError
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.EnvironmentError.EnvironmentError


module Amazonka.Lambda.Types.EnvironmentResponse

-- | The results of an operation to update or read environment variables.
--   If the operation is successful, the response contains the environment
--   variables. If it failed, the response contains details about the
--   error.
--   
--   <i>See:</i> <a>newEnvironmentResponse</a> smart constructor.
data EnvironmentResponse
EnvironmentResponse' :: Maybe (Sensitive (HashMap Text (Sensitive Text))) -> Maybe EnvironmentError -> EnvironmentResponse

-- | Environment variable key-value pairs.
[$sel:variables:EnvironmentResponse'] :: EnvironmentResponse -> Maybe (Sensitive (HashMap Text (Sensitive Text)))

-- | Error messages for environment variables that couldn't be applied.
[$sel:error:EnvironmentResponse'] :: EnvironmentResponse -> Maybe EnvironmentError

-- | Create a value of <a>EnvironmentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:EnvironmentResponse'</a>,
--   <a>environmentResponse_variables</a> - Environment variable key-value
--   pairs.
--   
--   <a>$sel:error:EnvironmentResponse'</a>,
--   <a>environmentResponse_error</a> - Error messages for environment
--   variables that couldn't be applied.
newEnvironmentResponse :: EnvironmentResponse

-- | Environment variable key-value pairs.
environmentResponse_variables :: Lens' EnvironmentResponse (Maybe (HashMap Text Text))

-- | Error messages for environment variables that couldn't be applied.
environmentResponse_error :: Lens' EnvironmentResponse (Maybe EnvironmentError)
instance GHC.Generics.Generic Amazonka.Lambda.Types.EnvironmentResponse.EnvironmentResponse
instance GHC.Show.Show Amazonka.Lambda.Types.EnvironmentResponse.EnvironmentResponse
instance GHC.Classes.Eq Amazonka.Lambda.Types.EnvironmentResponse.EnvironmentResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.EnvironmentResponse.EnvironmentResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.EnvironmentResponse.EnvironmentResponse
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.EnvironmentResponse.EnvironmentResponse


module Amazonka.Lambda.Types.EventSourcePosition
newtype EventSourcePosition
EventSourcePosition' :: Text -> EventSourcePosition
[fromEventSourcePosition] :: EventSourcePosition -> Text
pattern EventSourcePosition_AT_TIMESTAMP :: EventSourcePosition
pattern EventSourcePosition_LATEST :: EventSourcePosition
pattern EventSourcePosition_TRIM_HORIZON :: EventSourcePosition
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance GHC.Generics.Generic Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance GHC.Classes.Ord Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance GHC.Classes.Eq Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance GHC.Read.Read Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition
instance GHC.Show.Show Amazonka.Lambda.Types.EventSourcePosition.EventSourcePosition


module Amazonka.Lambda.Types.FileSystemConfig

-- | Details about the connection between a Lambda function and an
--   <a>Amazon EFS file system</a>.
--   
--   <i>See:</i> <a>newFileSystemConfig</a> smart constructor.
data FileSystemConfig
FileSystemConfig' :: Text -> Text -> FileSystemConfig

-- | The Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
[$sel:arn:FileSystemConfig'] :: FileSystemConfig -> Text

-- | The path where the function can access the file system, starting with
--   <tt>/mnt/</tt>.
[$sel:localMountPath:FileSystemConfig'] :: FileSystemConfig -> Text

-- | Create a value of <a>FileSystemConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FileSystemConfig'</a>, <a>fileSystemConfig_arn</a> - The
--   Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
--   
--   <a>$sel:localMountPath:FileSystemConfig'</a>,
--   <a>fileSystemConfig_localMountPath</a> - The path where the function
--   can access the file system, starting with <tt>/mnt/</tt>.
newFileSystemConfig :: Text -> Text -> FileSystemConfig

-- | The Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
fileSystemConfig_arn :: Lens' FileSystemConfig Text

-- | The path where the function can access the file system, starting with
--   <tt>/mnt/</tt>.
fileSystemConfig_localMountPath :: Lens' FileSystemConfig Text
instance GHC.Generics.Generic Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig
instance GHC.Show.Show Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig
instance GHC.Read.Read Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.FileSystemConfig.FileSystemConfig


module Amazonka.Lambda.Types.FunctionCode

-- | The code for the Lambda function. You can specify either an object in
--   Amazon S3, upload a .zip file archive deployment package directly, or
--   specify the URI of a container image.
--   
--   <i>See:</i> <a>newFunctionCode</a> smart constructor.
data FunctionCode
FunctionCode' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe Text -> Maybe Text -> FunctionCode

-- | For versioned objects, the version of the deployment package object to
--   use.
[$sel:s3ObjectVersion:FunctionCode'] :: FunctionCode -> Maybe Text

-- | The Amazon S3 key of the deployment package.
[$sel:s3Key:FunctionCode'] :: FunctionCode -> Maybe Text

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.
[$sel:zipFile:FunctionCode'] :: FunctionCode -> Maybe (Sensitive Base64)

-- | URI of a <a>container image</a> in the Amazon ECR registry.
[$sel:imageUri:FunctionCode'] :: FunctionCode -> Maybe Text

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
[$sel:s3Bucket:FunctionCode'] :: FunctionCode -> Maybe Text

-- | Create a value of <a>FunctionCode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:FunctionCode'</a>,
--   <a>functionCode_s3ObjectVersion</a> - For versioned objects, the
--   version of the deployment package object to use.
--   
--   <a>$sel:s3Key:FunctionCode'</a>, <a>functionCode_s3Key</a> - The
--   Amazon S3 key of the deployment package.
--   
--   <a>$sel:zipFile:FunctionCode'</a>, <a>functionCode_zipFile</a> - The
--   base64-encoded contents of the deployment package. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:imageUri:FunctionCode'</a>, <a>functionCode_imageUri</a> - URI
--   of a <a>container image</a> in the Amazon ECR registry.
--   
--   <a>$sel:s3Bucket:FunctionCode'</a>, <a>functionCode_s3Bucket</a> - An
--   Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
newFunctionCode :: FunctionCode

-- | For versioned objects, the version of the deployment package object to
--   use.
functionCode_s3ObjectVersion :: Lens' FunctionCode (Maybe Text)

-- | The Amazon S3 key of the deployment package.
functionCode_s3Key :: Lens' FunctionCode (Maybe Text)

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
functionCode_zipFile :: Lens' FunctionCode (Maybe ByteString)

-- | URI of a <a>container image</a> in the Amazon ECR registry.
functionCode_imageUri :: Lens' FunctionCode (Maybe Text)

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
functionCode_s3Bucket :: Lens' FunctionCode (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.FunctionCode.FunctionCode
instance GHC.Show.Show Amazonka.Lambda.Types.FunctionCode.FunctionCode
instance GHC.Classes.Eq Amazonka.Lambda.Types.FunctionCode.FunctionCode
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.FunctionCode.FunctionCode
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.FunctionCode.FunctionCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.FunctionCode.FunctionCode


module Amazonka.Lambda.Types.FunctionCodeLocation

-- | Details about a function's deployment package.
--   
--   <i>See:</i> <a>newFunctionCodeLocation</a> smart constructor.
data FunctionCodeLocation
FunctionCodeLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FunctionCodeLocation

-- | A presigned URL that you can use to download the deployment package.
[$sel:location:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | The resolved URI for the image.
[$sel:resolvedImageUri:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | URI of a container image in the Amazon ECR registry.
[$sel:imageUri:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | The service that's hosting the file.
[$sel:repositoryType:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | Create a value of <a>FunctionCodeLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_location</a> - A presigned URL that you can
--   use to download the deployment package.
--   
--   <a>$sel:resolvedImageUri:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_resolvedImageUri</a> - The resolved URI for
--   the image.
--   
--   <a>$sel:imageUri:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_imageUri</a> - URI of a container image in the
--   Amazon ECR registry.
--   
--   <a>$sel:repositoryType:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_repositoryType</a> - The service that's
--   hosting the file.
newFunctionCodeLocation :: FunctionCodeLocation

-- | A presigned URL that you can use to download the deployment package.
functionCodeLocation_location :: Lens' FunctionCodeLocation (Maybe Text)

-- | The resolved URI for the image.
functionCodeLocation_resolvedImageUri :: Lens' FunctionCodeLocation (Maybe Text)

-- | URI of a container image in the Amazon ECR registry.
functionCodeLocation_imageUri :: Lens' FunctionCodeLocation (Maybe Text)

-- | The service that's hosting the file.
functionCodeLocation_repositoryType :: Lens' FunctionCodeLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.FunctionCodeLocation.FunctionCodeLocation
instance GHC.Show.Show Amazonka.Lambda.Types.FunctionCodeLocation.FunctionCodeLocation
instance GHC.Read.Read Amazonka.Lambda.Types.FunctionCodeLocation.FunctionCodeLocation
instance GHC.Classes.Eq Amazonka.Lambda.Types.FunctionCodeLocation.FunctionCodeLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.FunctionCodeLocation.FunctionCodeLocation
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.FunctionCodeLocation.FunctionCodeLocation
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.FunctionCodeLocation.FunctionCodeLocation


module Amazonka.Lambda.Types.FunctionResponseType
newtype FunctionResponseType
FunctionResponseType' :: Text -> FunctionResponseType
[fromFunctionResponseType] :: FunctionResponseType -> Text
pattern FunctionResponseType_ReportBatchItemFailures :: FunctionResponseType
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance GHC.Generics.Generic Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance GHC.Classes.Ord Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance GHC.Classes.Eq Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance GHC.Read.Read Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType
instance GHC.Show.Show Amazonka.Lambda.Types.FunctionResponseType.FunctionResponseType


module Amazonka.Lambda.Types.FunctionVersion
newtype FunctionVersion
FunctionVersion' :: Text -> FunctionVersion
[fromFunctionVersion] :: FunctionVersion -> Text
pattern FunctionVersion_ALL :: FunctionVersion
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance GHC.Generics.Generic Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance GHC.Classes.Ord Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance GHC.Classes.Eq Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance GHC.Read.Read Amazonka.Lambda.Types.FunctionVersion.FunctionVersion
instance GHC.Show.Show Amazonka.Lambda.Types.FunctionVersion.FunctionVersion


module Amazonka.Lambda.Types.ImageConfig

-- | Configuration values that override the container image Dockerfile
--   settings. See <a>Container settings</a>.
--   
--   <i>See:</i> <a>newImageConfig</a> smart constructor.
data ImageConfig
ImageConfig' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> ImageConfig

-- | Specifies parameters that you want to pass in with ENTRYPOINT.
[$sel:command:ImageConfig'] :: ImageConfig -> Maybe [Text]

-- | Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
[$sel:entryPoint:ImageConfig'] :: ImageConfig -> Maybe [Text]

-- | Specifies the working directory.
[$sel:workingDirectory:ImageConfig'] :: ImageConfig -> Maybe Text

-- | Create a value of <a>ImageConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:ImageConfig'</a>, <a>imageConfig_command</a> -
--   Specifies parameters that you want to pass in with ENTRYPOINT.
--   
--   <a>$sel:entryPoint:ImageConfig'</a>, <a>imageConfig_entryPoint</a> -
--   Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
--   
--   <a>$sel:workingDirectory:ImageConfig'</a>,
--   <a>imageConfig_workingDirectory</a> - Specifies the working directory.
newImageConfig :: ImageConfig

-- | Specifies parameters that you want to pass in with ENTRYPOINT.
imageConfig_command :: Lens' ImageConfig (Maybe [Text])

-- | Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
imageConfig_entryPoint :: Lens' ImageConfig (Maybe [Text])

-- | Specifies the working directory.
imageConfig_workingDirectory :: Lens' ImageConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.ImageConfig.ImageConfig
instance GHC.Show.Show Amazonka.Lambda.Types.ImageConfig.ImageConfig
instance GHC.Read.Read Amazonka.Lambda.Types.ImageConfig.ImageConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.ImageConfig.ImageConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.ImageConfig.ImageConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.ImageConfig.ImageConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.ImageConfig.ImageConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.ImageConfig.ImageConfig


module Amazonka.Lambda.Types.ImageConfigError

-- | Error response to GetFunctionConfiguration.
--   
--   <i>See:</i> <a>newImageConfigError</a> smart constructor.
data ImageConfigError
ImageConfigError' :: Maybe Text -> Maybe (Sensitive Text) -> ImageConfigError

-- | Error code.
[$sel:errorCode:ImageConfigError'] :: ImageConfigError -> Maybe Text

-- | Error message.
[$sel:message:ImageConfigError'] :: ImageConfigError -> Maybe (Sensitive Text)

-- | Create a value of <a>ImageConfigError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ImageConfigError'</a>,
--   <a>imageConfigError_errorCode</a> - Error code.
--   
--   <a>$sel:message:ImageConfigError'</a>, <a>imageConfigError_message</a>
--   - Error message.
newImageConfigError :: ImageConfigError

-- | Error code.
imageConfigError_errorCode :: Lens' ImageConfigError (Maybe Text)

-- | Error message.
imageConfigError_message :: Lens' ImageConfigError (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.ImageConfigError.ImageConfigError
instance GHC.Show.Show Amazonka.Lambda.Types.ImageConfigError.ImageConfigError
instance GHC.Classes.Eq Amazonka.Lambda.Types.ImageConfigError.ImageConfigError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.ImageConfigError.ImageConfigError
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.ImageConfigError.ImageConfigError
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.ImageConfigError.ImageConfigError


module Amazonka.Lambda.Types.ImageConfigResponse

-- | Response to GetFunctionConfiguration request.
--   
--   <i>See:</i> <a>newImageConfigResponse</a> smart constructor.
data ImageConfigResponse
ImageConfigResponse' :: Maybe ImageConfig -> Maybe ImageConfigError -> ImageConfigResponse

-- | Configuration values that override the container image Dockerfile.
[$sel:imageConfig:ImageConfigResponse'] :: ImageConfigResponse -> Maybe ImageConfig

-- | Error response to GetFunctionConfiguration.
[$sel:error:ImageConfigResponse'] :: ImageConfigResponse -> Maybe ImageConfigError

-- | Create a value of <a>ImageConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageConfig:ImageConfigResponse'</a>,
--   <a>imageConfigResponse_imageConfig</a> - Configuration values that
--   override the container image Dockerfile.
--   
--   <a>$sel:error:ImageConfigResponse'</a>,
--   <a>imageConfigResponse_error</a> - Error response to
--   GetFunctionConfiguration.
newImageConfigResponse :: ImageConfigResponse

-- | Configuration values that override the container image Dockerfile.
imageConfigResponse_imageConfig :: Lens' ImageConfigResponse (Maybe ImageConfig)

-- | Error response to GetFunctionConfiguration.
imageConfigResponse_error :: Lens' ImageConfigResponse (Maybe ImageConfigError)
instance GHC.Generics.Generic Amazonka.Lambda.Types.ImageConfigResponse.ImageConfigResponse
instance GHC.Show.Show Amazonka.Lambda.Types.ImageConfigResponse.ImageConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.Types.ImageConfigResponse.ImageConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.ImageConfigResponse.ImageConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.ImageConfigResponse.ImageConfigResponse
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.ImageConfigResponse.ImageConfigResponse


module Amazonka.Lambda.Types.InvocationType
newtype InvocationType
InvocationType' :: Text -> InvocationType
[fromInvocationType] :: InvocationType -> Text
pattern InvocationType_DryRun :: InvocationType
pattern InvocationType_Event :: InvocationType
pattern InvocationType_RequestResponse :: InvocationType
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.InvocationType.InvocationType
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.InvocationType.InvocationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.InvocationType.InvocationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.InvocationType.InvocationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.InvocationType.InvocationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.InvocationType.InvocationType
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.InvocationType.InvocationType
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.InvocationType.InvocationType
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.InvocationType.InvocationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.InvocationType.InvocationType
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.InvocationType.InvocationType
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.InvocationType.InvocationType
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.InvocationType.InvocationType
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.InvocationType.InvocationType
instance GHC.Generics.Generic Amazonka.Lambda.Types.InvocationType.InvocationType
instance GHC.Classes.Ord Amazonka.Lambda.Types.InvocationType.InvocationType
instance GHC.Classes.Eq Amazonka.Lambda.Types.InvocationType.InvocationType
instance GHC.Read.Read Amazonka.Lambda.Types.InvocationType.InvocationType
instance GHC.Show.Show Amazonka.Lambda.Types.InvocationType.InvocationType


module Amazonka.Lambda.Types.LastUpdateStatus
newtype LastUpdateStatus
LastUpdateStatus' :: Text -> LastUpdateStatus
[fromLastUpdateStatus] :: LastUpdateStatus -> Text
pattern LastUpdateStatus_Failed :: LastUpdateStatus
pattern LastUpdateStatus_InProgress :: LastUpdateStatus
pattern LastUpdateStatus_Successful :: LastUpdateStatus
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance GHC.Generics.Generic Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance GHC.Classes.Ord Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance GHC.Classes.Eq Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance GHC.Read.Read Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus
instance GHC.Show.Show Amazonka.Lambda.Types.LastUpdateStatus.LastUpdateStatus


module Amazonka.Lambda.Types.LastUpdateStatusReasonCode
newtype LastUpdateStatusReasonCode
LastUpdateStatusReasonCode' :: Text -> LastUpdateStatusReasonCode
[fromLastUpdateStatusReasonCode] :: LastUpdateStatusReasonCode -> Text
pattern LastUpdateStatusReasonCode_EniLimitExceeded :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_ImageAccessDenied :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_ImageDeleted :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InsufficientRolePermissions :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InternalError :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidConfiguration :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidImage :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidSecurityGroup :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidSubnet :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_SubnetOutOfIPAddresses :: LastUpdateStatusReasonCode
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance GHC.Generics.Generic Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance GHC.Classes.Ord Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance GHC.Classes.Eq Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance GHC.Read.Read Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode
instance GHC.Show.Show Amazonka.Lambda.Types.LastUpdateStatusReasonCode.LastUpdateStatusReasonCode


module Amazonka.Lambda.Types.Layer

-- | An <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayer</a> smart constructor.
data Layer
Layer' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Layer

-- | The Amazon Resource Name (ARN) for a signing profile version.
[$sel:signingProfileVersionArn:Layer'] :: Layer -> Maybe Text

-- | The Amazon Resource Name (ARN) of the function layer.
[$sel:arn:Layer'] :: Layer -> Maybe Text

-- | The Amazon Resource Name (ARN) of a signing job.
[$sel:signingJobArn:Layer'] :: Layer -> Maybe Text

-- | The size of the layer archive in bytes.
[$sel:codeSize:Layer'] :: Layer -> Maybe Integer

-- | Create a value of <a>Layer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArn:Layer'</a>,
--   <a>layer_signingProfileVersionArn</a> - The Amazon Resource Name (ARN)
--   for a signing profile version.
--   
--   <a>$sel:arn:Layer'</a>, <a>layer_arn</a> - The Amazon Resource Name
--   (ARN) of the function layer.
--   
--   <a>$sel:signingJobArn:Layer'</a>, <a>layer_signingJobArn</a> - The
--   Amazon Resource Name (ARN) of a signing job.
--   
--   <a>$sel:codeSize:Layer'</a>, <a>layer_codeSize</a> - The size of the
--   layer archive in bytes.
newLayer :: Layer

-- | The Amazon Resource Name (ARN) for a signing profile version.
layer_signingProfileVersionArn :: Lens' Layer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the function layer.
layer_arn :: Lens' Layer (Maybe Text)

-- | The Amazon Resource Name (ARN) of a signing job.
layer_signingJobArn :: Lens' Layer (Maybe Text)

-- | The size of the layer archive in bytes.
layer_codeSize :: Lens' Layer (Maybe Integer)
instance GHC.Generics.Generic Amazonka.Lambda.Types.Layer.Layer
instance GHC.Show.Show Amazonka.Lambda.Types.Layer.Layer
instance GHC.Read.Read Amazonka.Lambda.Types.Layer.Layer
instance GHC.Classes.Eq Amazonka.Lambda.Types.Layer.Layer
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.Layer.Layer
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.Layer.Layer
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.Layer.Layer


module Amazonka.Lambda.Types.LayerVersionContentInput

-- | A ZIP archive that contains the contents of an <a>Lambda layer</a>.
--   You can specify either an Amazon S3 location, or upload a layer
--   archive directly.
--   
--   <i>See:</i> <a>newLayerVersionContentInput</a> smart constructor.
data LayerVersionContentInput
LayerVersionContentInput' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe Text -> LayerVersionContentInput

-- | For versioned objects, the version of the layer archive object to use.
[$sel:s3ObjectVersion:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe Text

-- | The Amazon S3 key of the layer archive.
[$sel:s3Key:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe Text

-- | The base64-encoded contents of the layer archive. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.
[$sel:zipFile:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe (Sensitive Base64)

-- | The Amazon S3 bucket of the layer archive.
[$sel:s3Bucket:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe Text

-- | Create a value of <a>LayerVersionContentInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3ObjectVersion</a> - For versioned
--   objects, the version of the layer archive object to use.
--   
--   <a>$sel:s3Key:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3Key</a> - The Amazon S3 key of the layer
--   archive.
--   
--   <a>$sel:zipFile:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_zipFile</a> - The base64-encoded contents
--   of the layer archive. Amazon Web Services SDK and Amazon Web Services
--   CLI clients handle the encoding for you.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:s3Bucket:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3Bucket</a> - The Amazon S3 bucket of the
--   layer archive.
newLayerVersionContentInput :: LayerVersionContentInput

-- | For versioned objects, the version of the layer archive object to use.
layerVersionContentInput_s3ObjectVersion :: Lens' LayerVersionContentInput (Maybe Text)

-- | The Amazon S3 key of the layer archive.
layerVersionContentInput_s3Key :: Lens' LayerVersionContentInput (Maybe Text)

-- | The base64-encoded contents of the layer archive. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
layerVersionContentInput_zipFile :: Lens' LayerVersionContentInput (Maybe ByteString)

-- | The Amazon S3 bucket of the layer archive.
layerVersionContentInput_s3Bucket :: Lens' LayerVersionContentInput (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.LayerVersionContentInput.LayerVersionContentInput
instance GHC.Show.Show Amazonka.Lambda.Types.LayerVersionContentInput.LayerVersionContentInput
instance GHC.Classes.Eq Amazonka.Lambda.Types.LayerVersionContentInput.LayerVersionContentInput
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.LayerVersionContentInput.LayerVersionContentInput
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.LayerVersionContentInput.LayerVersionContentInput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.LayerVersionContentInput.LayerVersionContentInput


module Amazonka.Lambda.Types.LayerVersionContentOutput

-- | Details about a version of an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayerVersionContentOutput</a> smart constructor.
data LayerVersionContentOutput
LayerVersionContentOutput' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> LayerVersionContentOutput

-- | The Amazon Resource Name (ARN) for a signing profile version.
[$sel:signingProfileVersionArn:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | A link to the layer archive in Amazon S3 that is valid for 10 minutes.
[$sel:location:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | The Amazon Resource Name (ARN) of a signing job.
[$sel:signingJobArn:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | The size of the layer archive in bytes.
[$sel:codeSize:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Integer

-- | The SHA-256 hash of the layer archive.
[$sel:codeSha256:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | Create a value of <a>LayerVersionContentOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArn:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_signingProfileVersionArn</a> - The Amazon
--   Resource Name (ARN) for a signing profile version.
--   
--   <a>$sel:location:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_location</a> - A link to the layer
--   archive in Amazon S3 that is valid for 10 minutes.
--   
--   <a>$sel:signingJobArn:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_signingJobArn</a> - The Amazon Resource
--   Name (ARN) of a signing job.
--   
--   <a>$sel:codeSize:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_codeSize</a> - The size of the layer
--   archive in bytes.
--   
--   <a>$sel:codeSha256:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_codeSha256</a> - The SHA-256 hash of the
--   layer archive.
newLayerVersionContentOutput :: LayerVersionContentOutput

-- | The Amazon Resource Name (ARN) for a signing profile version.
layerVersionContentOutput_signingProfileVersionArn :: Lens' LayerVersionContentOutput (Maybe Text)

-- | A link to the layer archive in Amazon S3 that is valid for 10 minutes.
layerVersionContentOutput_location :: Lens' LayerVersionContentOutput (Maybe Text)

-- | The Amazon Resource Name (ARN) of a signing job.
layerVersionContentOutput_signingJobArn :: Lens' LayerVersionContentOutput (Maybe Text)

-- | The size of the layer archive in bytes.
layerVersionContentOutput_codeSize :: Lens' LayerVersionContentOutput (Maybe Integer)

-- | The SHA-256 hash of the layer archive.
layerVersionContentOutput_codeSha256 :: Lens' LayerVersionContentOutput (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.LayerVersionContentOutput.LayerVersionContentOutput
instance GHC.Show.Show Amazonka.Lambda.Types.LayerVersionContentOutput.LayerVersionContentOutput
instance GHC.Read.Read Amazonka.Lambda.Types.LayerVersionContentOutput.LayerVersionContentOutput
instance GHC.Classes.Eq Amazonka.Lambda.Types.LayerVersionContentOutput.LayerVersionContentOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.LayerVersionContentOutput.LayerVersionContentOutput
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.LayerVersionContentOutput.LayerVersionContentOutput
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.LayerVersionContentOutput.LayerVersionContentOutput


module Amazonka.Lambda.Types.LogType
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_None :: LogType
pattern LogType_Tail :: LogType
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.LogType.LogType
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.LogType.LogType
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.LogType.LogType
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.LogType.LogType
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.LogType.LogType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.LogType.LogType
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.LogType.LogType
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.LogType.LogType
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.LogType.LogType
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.LogType.LogType
instance GHC.Generics.Generic Amazonka.Lambda.Types.LogType.LogType
instance GHC.Classes.Ord Amazonka.Lambda.Types.LogType.LogType
instance GHC.Classes.Eq Amazonka.Lambda.Types.LogType.LogType
instance GHC.Read.Read Amazonka.Lambda.Types.LogType.LogType
instance GHC.Show.Show Amazonka.Lambda.Types.LogType.LogType


module Amazonka.Lambda.Types.OnFailure

-- | A destination for events that failed processing.
--   
--   <i>See:</i> <a>newOnFailure</a> smart constructor.
data OnFailure
OnFailure' :: Maybe Text -> OnFailure

-- | The Amazon Resource Name (ARN) of the destination resource.
[$sel:destination:OnFailure'] :: OnFailure -> Maybe Text

-- | Create a value of <a>OnFailure</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:OnFailure'</a>, <a>onFailure_destination</a> - The
--   Amazon Resource Name (ARN) of the destination resource.
newOnFailure :: OnFailure

-- | The Amazon Resource Name (ARN) of the destination resource.
onFailure_destination :: Lens' OnFailure (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.OnFailure.OnFailure
instance GHC.Show.Show Amazonka.Lambda.Types.OnFailure.OnFailure
instance GHC.Read.Read Amazonka.Lambda.Types.OnFailure.OnFailure
instance GHC.Classes.Eq Amazonka.Lambda.Types.OnFailure.OnFailure
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.OnFailure.OnFailure
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.OnFailure.OnFailure
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.OnFailure.OnFailure
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.OnFailure.OnFailure


module Amazonka.Lambda.Types.OnSuccess

-- | A destination for events that were processed successfully.
--   
--   <i>See:</i> <a>newOnSuccess</a> smart constructor.
data OnSuccess
OnSuccess' :: Maybe Text -> OnSuccess

-- | The Amazon Resource Name (ARN) of the destination resource.
[$sel:destination:OnSuccess'] :: OnSuccess -> Maybe Text

-- | Create a value of <a>OnSuccess</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:OnSuccess'</a>, <a>onSuccess_destination</a> - The
--   Amazon Resource Name (ARN) of the destination resource.
newOnSuccess :: OnSuccess

-- | The Amazon Resource Name (ARN) of the destination resource.
onSuccess_destination :: Lens' OnSuccess (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.OnSuccess.OnSuccess
instance GHC.Show.Show Amazonka.Lambda.Types.OnSuccess.OnSuccess
instance GHC.Read.Read Amazonka.Lambda.Types.OnSuccess.OnSuccess
instance GHC.Classes.Eq Amazonka.Lambda.Types.OnSuccess.OnSuccess
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.OnSuccess.OnSuccess
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.OnSuccess.OnSuccess
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.OnSuccess.OnSuccess
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.OnSuccess.OnSuccess


module Amazonka.Lambda.Types.DestinationConfig

-- | A configuration object that specifies the destination of an event
--   after Lambda processes it.
--   
--   <i>See:</i> <a>newDestinationConfig</a> smart constructor.
data DestinationConfig
DestinationConfig' :: Maybe OnSuccess -> Maybe OnFailure -> DestinationConfig

-- | The destination configuration for successful invocations.
[$sel:onSuccess:DestinationConfig'] :: DestinationConfig -> Maybe OnSuccess

-- | The destination configuration for failed invocations.
[$sel:onFailure:DestinationConfig'] :: DestinationConfig -> Maybe OnFailure

-- | Create a value of <a>DestinationConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onSuccess:DestinationConfig'</a>,
--   <a>destinationConfig_onSuccess</a> - The destination configuration for
--   successful invocations.
--   
--   <a>$sel:onFailure:DestinationConfig'</a>,
--   <a>destinationConfig_onFailure</a> - The destination configuration for
--   failed invocations.
newDestinationConfig :: DestinationConfig

-- | The destination configuration for successful invocations.
destinationConfig_onSuccess :: Lens' DestinationConfig (Maybe OnSuccess)

-- | The destination configuration for failed invocations.
destinationConfig_onFailure :: Lens' DestinationConfig (Maybe OnFailure)
instance GHC.Generics.Generic Amazonka.Lambda.Types.DestinationConfig.DestinationConfig
instance GHC.Show.Show Amazonka.Lambda.Types.DestinationConfig.DestinationConfig
instance GHC.Read.Read Amazonka.Lambda.Types.DestinationConfig.DestinationConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.DestinationConfig.DestinationConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.DestinationConfig.DestinationConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.DestinationConfig.DestinationConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.DestinationConfig.DestinationConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.DestinationConfig.DestinationConfig


module Amazonka.Lambda.Types.FunctionEventInvokeConfig

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
[$sel:functionArn:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Text

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
[$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The maximum number of times to retry when the function returns an
--   error.
[$sel:maximumRetryAttempts:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The date and time that the configuration was last updated.
[$sel:lastModified:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe POSIX

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
[$sel:destinationConfig:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe DestinationConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)
instance GHC.Generics.Generic Amazonka.Lambda.Types.FunctionEventInvokeConfig.FunctionEventInvokeConfig
instance GHC.Show.Show Amazonka.Lambda.Types.FunctionEventInvokeConfig.FunctionEventInvokeConfig
instance GHC.Read.Read Amazonka.Lambda.Types.FunctionEventInvokeConfig.FunctionEventInvokeConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.FunctionEventInvokeConfig.FunctionEventInvokeConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.FunctionEventInvokeConfig.FunctionEventInvokeConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.FunctionEventInvokeConfig.FunctionEventInvokeConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.FunctionEventInvokeConfig.FunctionEventInvokeConfig


module Amazonka.Lambda.Types.PackageType
newtype PackageType
PackageType' :: Text -> PackageType
[fromPackageType] :: PackageType -> Text
pattern PackageType_Image :: PackageType
pattern PackageType_Zip :: PackageType
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.PackageType.PackageType
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.PackageType.PackageType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.PackageType.PackageType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.PackageType.PackageType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.PackageType.PackageType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.PackageType.PackageType
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.PackageType.PackageType
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.PackageType.PackageType
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.PackageType.PackageType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.PackageType.PackageType
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.PackageType.PackageType
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.PackageType.PackageType
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.PackageType.PackageType
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.PackageType.PackageType
instance GHC.Generics.Generic Amazonka.Lambda.Types.PackageType.PackageType
instance GHC.Classes.Ord Amazonka.Lambda.Types.PackageType.PackageType
instance GHC.Classes.Eq Amazonka.Lambda.Types.PackageType.PackageType
instance GHC.Read.Read Amazonka.Lambda.Types.PackageType.PackageType
instance GHC.Show.Show Amazonka.Lambda.Types.PackageType.PackageType


module Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum
newtype ProvisionedConcurrencyStatusEnum
ProvisionedConcurrencyStatusEnum' :: Text -> ProvisionedConcurrencyStatusEnum
[fromProvisionedConcurrencyStatusEnum] :: ProvisionedConcurrencyStatusEnum -> Text
pattern ProvisionedConcurrencyStatusEnum_FAILED :: ProvisionedConcurrencyStatusEnum
pattern ProvisionedConcurrencyStatusEnum_IN_PROGRESS :: ProvisionedConcurrencyStatusEnum
pattern ProvisionedConcurrencyStatusEnum_READY :: ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance GHC.Generics.Generic Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance GHC.Classes.Ord Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance GHC.Classes.Eq Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance GHC.Read.Read Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum
instance GHC.Show.Show Amazonka.Lambda.Types.ProvisionedConcurrencyStatusEnum.ProvisionedConcurrencyStatusEnum


module Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem

-- | Details about the provisioned concurrency configuration for a function
--   alias or version.
--   
--   <i>See:</i> <a>newProvisionedConcurrencyConfigListItem</a> smart
--   constructor.
data ProvisionedConcurrencyConfigListItem
ProvisionedConcurrencyConfigListItem' :: Maybe ProvisionedConcurrencyStatusEnum -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> ProvisionedConcurrencyConfigListItem

-- | The status of the allocation process.
[$sel:status:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe ProvisionedConcurrencyStatusEnum

-- | The Amazon Resource Name (ARN) of the alias or version.
[$sel:functionArn:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Text

-- | The amount of provisioned concurrency requested.
[$sel:requestedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Natural

-- | The amount of provisioned concurrency available.
[$sel:availableProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Natural

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
[$sel:statusReason:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Text

-- | The amount of provisioned concurrency allocated.
[$sel:allocatedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Natural

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
[$sel:lastModified:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Text

-- | Create a value of <a>ProvisionedConcurrencyConfigListItem</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_status</a> - The status of the
--   allocation process.
--   
--   <a>$sel:functionArn:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_functionArn</a> - The Amazon
--   Resource Name (ARN) of the alias or version.
--   
--   
--   <a>$sel:requestedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_requestedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency requested.
--   
--   
--   <a>$sel:availableProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_availableProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency available.
--   
--   <a>$sel:statusReason:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_statusReason</a> - For failed
--   allocations, the reason that provisioned concurrency could not be
--   allocated.
--   
--   
--   <a>$sel:allocatedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_allocatedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency allocated.
--   
--   <a>$sel:lastModified:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_lastModified</a> - The date
--   and time that a user last updated the configuration, in <a>ISO 8601
--   format</a>.
newProvisionedConcurrencyConfigListItem :: ProvisionedConcurrencyConfigListItem

-- | The status of the allocation process.
provisionedConcurrencyConfigListItem_status :: Lens' ProvisionedConcurrencyConfigListItem (Maybe ProvisionedConcurrencyStatusEnum)

-- | The Amazon Resource Name (ARN) of the alias or version.
provisionedConcurrencyConfigListItem_functionArn :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The amount of provisioned concurrency requested.
provisionedConcurrencyConfigListItem_requestedProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | The amount of provisioned concurrency available.
provisionedConcurrencyConfigListItem_availableProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
provisionedConcurrencyConfigListItem_statusReason :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The amount of provisioned concurrency allocated.
provisionedConcurrencyConfigListItem_allocatedProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
provisionedConcurrencyConfigListItem_lastModified :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem.ProvisionedConcurrencyConfigListItem
instance GHC.Show.Show Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem.ProvisionedConcurrencyConfigListItem
instance GHC.Read.Read Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem.ProvisionedConcurrencyConfigListItem
instance GHC.Classes.Eq Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem.ProvisionedConcurrencyConfigListItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem.ProvisionedConcurrencyConfigListItem
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem.ProvisionedConcurrencyConfigListItem
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.ProvisionedConcurrencyConfigListItem.ProvisionedConcurrencyConfigListItem


module Amazonka.Lambda.Types.Runtime
newtype Runtime
Runtime' :: Text -> Runtime
[fromRuntime] :: Runtime -> Text
pattern Runtime_Dotnetcore1_0 :: Runtime
pattern Runtime_Dotnetcore2_0 :: Runtime
pattern Runtime_Dotnetcore2_1 :: Runtime
pattern Runtime_Dotnetcore3_1 :: Runtime
pattern Runtime_Go1_x :: Runtime
pattern Runtime_Java11 :: Runtime
pattern Runtime_Java8 :: Runtime
pattern Runtime_Java8_al2 :: Runtime
pattern Runtime_Nodejs :: Runtime
pattern Runtime_Nodejs10_x :: Runtime
pattern Runtime_Nodejs12_x :: Runtime
pattern Runtime_Nodejs14_x :: Runtime
pattern Runtime_Nodejs4_3 :: Runtime
pattern Runtime_Nodejs4_3_edge :: Runtime
pattern Runtime_Nodejs6_10 :: Runtime
pattern Runtime_Nodejs8_10 :: Runtime
pattern Runtime_Provided :: Runtime
pattern Runtime_Provided_al2 :: Runtime
pattern Runtime_Python2_7 :: Runtime
pattern Runtime_Python3_6 :: Runtime
pattern Runtime_Python3_7 :: Runtime
pattern Runtime_Python3_8 :: Runtime
pattern Runtime_Python3_9 :: Runtime
pattern Runtime_Ruby2_5 :: Runtime
pattern Runtime_Ruby2_7 :: Runtime
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.Runtime.Runtime
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.Runtime.Runtime
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.Runtime.Runtime
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.Runtime.Runtime
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.Runtime.Runtime
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.Runtime.Runtime
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.Runtime.Runtime
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.Runtime.Runtime
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.Runtime.Runtime
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.Runtime.Runtime
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.Runtime.Runtime
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.Runtime.Runtime
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.Runtime.Runtime
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.Runtime.Runtime
instance GHC.Generics.Generic Amazonka.Lambda.Types.Runtime.Runtime
instance GHC.Classes.Ord Amazonka.Lambda.Types.Runtime.Runtime
instance GHC.Classes.Eq Amazonka.Lambda.Types.Runtime.Runtime
instance GHC.Read.Read Amazonka.Lambda.Types.Runtime.Runtime
instance GHC.Show.Show Amazonka.Lambda.Types.Runtime.Runtime


module Amazonka.Lambda.Types.LayerVersionsListItem

-- | Details about a version of an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayerVersionsListItem</a> smart constructor.
data LayerVersionsListItem
LayerVersionsListItem' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe [Runtime] -> LayerVersionsListItem

-- | The ARN of the layer version.
[$sel:layerVersionArn:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | The date that the version was created, in ISO 8601 format. For
--   example, <tt>2018-11-27T15:10:45.123+0000</tt>.
[$sel:createdDate:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | The version number.
[$sel:version:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Integer

-- | The layer's open-source license.
[$sel:licenseInfo:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe [Architecture]

-- | The description of the version.
[$sel:description:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | The layer's compatible runtimes.
[$sel:compatibleRuntimes:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe [Runtime]

-- | Create a value of <a>LayerVersionsListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:createdDate:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_createdDate</a> - The date that the version
--   was created, in ISO 8601 format. For example,
--   <tt>2018-11-27T15:10:45.123+0000</tt>.
--   
--   <a>$sel:version:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_licenseInfo</a> - The layer's open-source
--   license.
--   
--   <a>$sel:compatibleArchitectures:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:description:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newLayerVersionsListItem :: LayerVersionsListItem

-- | The ARN of the layer version.
layerVersionsListItem_layerVersionArn :: Lens' LayerVersionsListItem (Maybe Text)

-- | The date that the version was created, in ISO 8601 format. For
--   example, <tt>2018-11-27T15:10:45.123+0000</tt>.
layerVersionsListItem_createdDate :: Lens' LayerVersionsListItem (Maybe Text)

-- | The version number.
layerVersionsListItem_version :: Lens' LayerVersionsListItem (Maybe Integer)

-- | The layer's open-source license.
layerVersionsListItem_licenseInfo :: Lens' LayerVersionsListItem (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
layerVersionsListItem_compatibleArchitectures :: Lens' LayerVersionsListItem (Maybe [Architecture])

-- | The description of the version.
layerVersionsListItem_description :: Lens' LayerVersionsListItem (Maybe Text)

-- | The layer's compatible runtimes.
layerVersionsListItem_compatibleRuntimes :: Lens' LayerVersionsListItem (Maybe [Runtime])
instance GHC.Generics.Generic Amazonka.Lambda.Types.LayerVersionsListItem.LayerVersionsListItem
instance GHC.Show.Show Amazonka.Lambda.Types.LayerVersionsListItem.LayerVersionsListItem
instance GHC.Read.Read Amazonka.Lambda.Types.LayerVersionsListItem.LayerVersionsListItem
instance GHC.Classes.Eq Amazonka.Lambda.Types.LayerVersionsListItem.LayerVersionsListItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.LayerVersionsListItem.LayerVersionsListItem
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.LayerVersionsListItem.LayerVersionsListItem
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.LayerVersionsListItem.LayerVersionsListItem


module Amazonka.Lambda.Types.LayersListItem

-- | Details about an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayersListItem</a> smart constructor.
data LayersListItem
LayersListItem' :: Maybe Text -> Maybe LayerVersionsListItem -> Maybe Text -> LayersListItem

-- | The name of the layer.
[$sel:layerName:LayersListItem'] :: LayersListItem -> Maybe Text

-- | The newest version of the layer.
[$sel:latestMatchingVersion:LayersListItem'] :: LayersListItem -> Maybe LayerVersionsListItem

-- | The Amazon Resource Name (ARN) of the function layer.
[$sel:layerArn:LayersListItem'] :: LayersListItem -> Maybe Text

-- | Create a value of <a>LayersListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:LayersListItem'</a>, <a>layersListItem_layerName</a>
--   - The name of the layer.
--   
--   <a>$sel:latestMatchingVersion:LayersListItem'</a>,
--   <a>layersListItem_latestMatchingVersion</a> - The newest version of
--   the layer.
--   
--   <a>$sel:layerArn:LayersListItem'</a>, <a>layersListItem_layerArn</a> -
--   The Amazon Resource Name (ARN) of the function layer.
newLayersListItem :: LayersListItem

-- | The name of the layer.
layersListItem_layerName :: Lens' LayersListItem (Maybe Text)

-- | The newest version of the layer.
layersListItem_latestMatchingVersion :: Lens' LayersListItem (Maybe LayerVersionsListItem)

-- | The Amazon Resource Name (ARN) of the function layer.
layersListItem_layerArn :: Lens' LayersListItem (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.LayersListItem.LayersListItem
instance GHC.Show.Show Amazonka.Lambda.Types.LayersListItem.LayersListItem
instance GHC.Read.Read Amazonka.Lambda.Types.LayersListItem.LayersListItem
instance GHC.Classes.Eq Amazonka.Lambda.Types.LayersListItem.LayersListItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.LayersListItem.LayersListItem
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.LayersListItem.LayersListItem
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.LayersListItem.LayersListItem


module Amazonka.Lambda.Types.GetLayerVersionResponse

-- | <i>See:</i> <a>newGetLayerVersionResponse</a> smart constructor.
data GetLayerVersionResponse
GetLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> GetLayerVersionResponse

-- | The ARN of the layer version.
[$sel:layerVersionArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | Details about the layer version.
[$sel:content:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe LayerVersionContentOutput

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:createdDate:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The version number.
[$sel:version:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Integer

-- | The layer's software license.
[$sel:licenseInfo:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Architecture]

-- | The ARN of the layer.
[$sel:layerArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The description of the version.
[$sel:description:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The layer's compatible runtimes.
[$sel:compatibleRuntimes:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Runtime]

-- | Create a value of <a>GetLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:content:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_createdDate</a> - The date that the layer
--   version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newGetLayerVersionResponse :: GetLayerVersionResponse

-- | The ARN of the layer version.
getLayerVersionResponse_layerVersionArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
getLayerVersionResponse_content :: Lens' GetLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
getLayerVersionResponse_createdDate :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The version number.
getLayerVersionResponse_version :: Lens' GetLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
getLayerVersionResponse_licenseInfo :: Lens' GetLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
getLayerVersionResponse_compatibleArchitectures :: Lens' GetLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
getLayerVersionResponse_layerArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The description of the version.
getLayerVersionResponse_description :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
getLayerVersionResponse_compatibleRuntimes :: Lens' GetLayerVersionResponse (Maybe [Runtime])
instance GHC.Generics.Generic Amazonka.Lambda.Types.GetLayerVersionResponse.GetLayerVersionResponse
instance GHC.Show.Show Amazonka.Lambda.Types.GetLayerVersionResponse.GetLayerVersionResponse
instance GHC.Read.Read Amazonka.Lambda.Types.GetLayerVersionResponse.GetLayerVersionResponse
instance GHC.Classes.Eq Amazonka.Lambda.Types.GetLayerVersionResponse.GetLayerVersionResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.GetLayerVersionResponse.GetLayerVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.GetLayerVersionResponse.GetLayerVersionResponse
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.GetLayerVersionResponse.GetLayerVersionResponse


module Amazonka.Lambda.Types.SelfManagedEventSource

-- | The self-managed Apache Kafka cluster for your event source.
--   
--   <i>See:</i> <a>newSelfManagedEventSource</a> smart constructor.
data SelfManagedEventSource
SelfManagedEventSource' :: Maybe (HashMap EndPointType (NonEmpty Text)) -> SelfManagedEventSource

-- | The list of bootstrap servers for your Kafka brokers in the following
--   format: <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
[$sel:endpoints:SelfManagedEventSource'] :: SelfManagedEventSource -> Maybe (HashMap EndPointType (NonEmpty Text))

-- | Create a value of <a>SelfManagedEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoints:SelfManagedEventSource'</a>,
--   <a>selfManagedEventSource_endpoints</a> - The list of bootstrap
--   servers for your Kafka brokers in the following format:
--   <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
newSelfManagedEventSource :: SelfManagedEventSource

-- | The list of bootstrap servers for your Kafka brokers in the following
--   format: <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
selfManagedEventSource_endpoints :: Lens' SelfManagedEventSource (Maybe (HashMap EndPointType (NonEmpty Text)))
instance GHC.Generics.Generic Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource
instance GHC.Show.Show Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource
instance GHC.Read.Read Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource
instance GHC.Classes.Eq Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.SelfManagedEventSource.SelfManagedEventSource


module Amazonka.Lambda.Types.SourceAccessType
newtype SourceAccessType
SourceAccessType' :: Text -> SourceAccessType
[fromSourceAccessType] :: SourceAccessType -> Text
pattern SourceAccessType_BASIC_AUTH :: SourceAccessType
pattern SourceAccessType_SASL_SCRAM_256_AUTH :: SourceAccessType
pattern SourceAccessType_SASL_SCRAM_512_AUTH :: SourceAccessType
pattern SourceAccessType_VIRTUAL_HOST :: SourceAccessType
pattern SourceAccessType_VPC_SECURITY_GROUP :: SourceAccessType
pattern SourceAccessType_VPC_SUBNET :: SourceAccessType
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance GHC.Generics.Generic Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance GHC.Classes.Ord Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance GHC.Classes.Eq Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance GHC.Read.Read Amazonka.Lambda.Types.SourceAccessType.SourceAccessType
instance GHC.Show.Show Amazonka.Lambda.Types.SourceAccessType.SourceAccessType


module Amazonka.Lambda.Types.SourceAccessConfiguration

-- | To secure and define access to your event source, you can specify the
--   authentication protocol, VPC components, or virtual host.
--   
--   <i>See:</i> <a>newSourceAccessConfiguration</a> smart constructor.
data SourceAccessConfiguration
SourceAccessConfiguration' :: Maybe Text -> Maybe SourceAccessType -> SourceAccessConfiguration

-- | The value for your chosen configuration in <tt>Type</tt>. For example:
--   <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
[$sel:uri:SourceAccessConfiguration'] :: SourceAccessConfiguration -> Maybe Text

-- | The type of authentication protocol, VPC components, or virtual host
--   for your event source. For example:
--   <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
[$sel:type':SourceAccessConfiguration'] :: SourceAccessConfiguration -> Maybe SourceAccessType

-- | Create a value of <a>SourceAccessConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:SourceAccessConfiguration'</a>,
--   <a>sourceAccessConfiguration_uri</a> - The value for your chosen
--   configuration in <tt>Type</tt>. For example: <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
--   
--   <a>$sel:type':SourceAccessConfiguration'</a>,
--   <a>sourceAccessConfiguration_type</a> - The type of authentication
--   protocol, VPC components, or virtual host for your event source. For
--   example: <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
newSourceAccessConfiguration :: SourceAccessConfiguration

-- | The value for your chosen configuration in <tt>Type</tt>. For example:
--   <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
sourceAccessConfiguration_uri :: Lens' SourceAccessConfiguration (Maybe Text)

-- | The type of authentication protocol, VPC components, or virtual host
--   for your event source. For example:
--   <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
sourceAccessConfiguration_type :: Lens' SourceAccessConfiguration (Maybe SourceAccessType)
instance GHC.Generics.Generic Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration
instance GHC.Show.Show Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration
instance GHC.Read.Read Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration
instance GHC.Classes.Eq Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.SourceAccessConfiguration.SourceAccessConfiguration


module Amazonka.Lambda.Types.EventSourceMappingConfiguration

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
[$sel:eventSourceArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
[$sel:state:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
[$sel:startingPositionTimestamp:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | The ARN of the Lambda function.
[$sel:functionArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The name of the Kafka topic.
[$sel:topics:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
[$sel:queues:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
[$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Bool

-- | The identifier of the event source mapping.
[$sel:uuid:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
[$sel:parallelizationFactor:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The result of the last Lambda invocation of your function.
[$sel:lastProcessingResult:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
[$sel:maximumRetryAttempts:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:batchSize:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
[$sel:stateTransitionReason:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
[$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
[$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
[$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The self-managed Apache Kafka cluster for your event source.
[$sel:selfManagedEventSource:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe SelfManagedEventSource

-- | The date that the event source mapping was last updated or that its
--   state changed.
[$sel:lastModified:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe DestinationConfig

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
[$sel:startingPosition:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe EventSourcePosition

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)
instance GHC.Generics.Generic Amazonka.Lambda.Types.EventSourceMappingConfiguration.EventSourceMappingConfiguration
instance GHC.Show.Show Amazonka.Lambda.Types.EventSourceMappingConfiguration.EventSourceMappingConfiguration
instance GHC.Read.Read Amazonka.Lambda.Types.EventSourceMappingConfiguration.EventSourceMappingConfiguration
instance GHC.Classes.Eq Amazonka.Lambda.Types.EventSourceMappingConfiguration.EventSourceMappingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.EventSourceMappingConfiguration.EventSourceMappingConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.EventSourceMappingConfiguration.EventSourceMappingConfiguration
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.EventSourceMappingConfiguration.EventSourceMappingConfiguration


module Amazonka.Lambda.Types.State
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_Active :: State
pattern State_Failed :: State
pattern State_Inactive :: State
pattern State_Pending :: State
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.State.State
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.State.State
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.State.State
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.State.State
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.State.State
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.State.State
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.State.State
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.State.State
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.State.State
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.State.State
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.State.State
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.State.State
instance GHC.Generics.Generic Amazonka.Lambda.Types.State.State
instance GHC.Classes.Ord Amazonka.Lambda.Types.State.State
instance GHC.Classes.Eq Amazonka.Lambda.Types.State.State
instance GHC.Read.Read Amazonka.Lambda.Types.State.State
instance GHC.Show.Show Amazonka.Lambda.Types.State.State


module Amazonka.Lambda.Types.StateReasonCode
newtype StateReasonCode
StateReasonCode' :: Text -> StateReasonCode
[fromStateReasonCode] :: StateReasonCode -> Text
pattern StateReasonCode_Creating :: StateReasonCode
pattern StateReasonCode_EniLimitExceeded :: StateReasonCode
pattern StateReasonCode_Idle :: StateReasonCode
pattern StateReasonCode_ImageAccessDenied :: StateReasonCode
pattern StateReasonCode_ImageDeleted :: StateReasonCode
pattern StateReasonCode_InsufficientRolePermissions :: StateReasonCode
pattern StateReasonCode_InternalError :: StateReasonCode
pattern StateReasonCode_InvalidConfiguration :: StateReasonCode
pattern StateReasonCode_InvalidImage :: StateReasonCode
pattern StateReasonCode_InvalidSecurityGroup :: StateReasonCode
pattern StateReasonCode_InvalidSubnet :: StateReasonCode
pattern StateReasonCode_Restoring :: StateReasonCode
pattern StateReasonCode_SubnetOutOfIPAddresses :: StateReasonCode
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance GHC.Generics.Generic Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance GHC.Classes.Ord Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance GHC.Classes.Eq Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance GHC.Read.Read Amazonka.Lambda.Types.StateReasonCode.StateReasonCode
instance GHC.Show.Show Amazonka.Lambda.Types.StateReasonCode.StateReasonCode


module Amazonka.Lambda.Types.TracingMode
newtype TracingMode
TracingMode' :: Text -> TracingMode
[fromTracingMode] :: TracingMode -> Text
pattern TracingMode_Active :: TracingMode
pattern TracingMode_PassThrough :: TracingMode
instance Amazonka.Data.XML.ToXML Amazonka.Lambda.Types.TracingMode.TracingMode
instance Amazonka.Data.XML.FromXML Amazonka.Lambda.Types.TracingMode.TracingMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Lambda.Types.TracingMode.TracingMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.TracingMode.TracingMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Lambda.Types.TracingMode.TracingMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.TracingMode.TracingMode
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Types.TracingMode.TracingMode
instance Amazonka.Data.Headers.ToHeader Amazonka.Lambda.Types.TracingMode.TracingMode
instance Amazonka.Data.Log.ToLog Amazonka.Lambda.Types.TracingMode.TracingMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.Lambda.Types.TracingMode.TracingMode
instance Amazonka.Data.Text.ToText Amazonka.Lambda.Types.TracingMode.TracingMode
instance Amazonka.Data.Text.FromText Amazonka.Lambda.Types.TracingMode.TracingMode
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.TracingMode.TracingMode
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.TracingMode.TracingMode
instance GHC.Generics.Generic Amazonka.Lambda.Types.TracingMode.TracingMode
instance GHC.Classes.Ord Amazonka.Lambda.Types.TracingMode.TracingMode
instance GHC.Classes.Eq Amazonka.Lambda.Types.TracingMode.TracingMode
instance GHC.Read.Read Amazonka.Lambda.Types.TracingMode.TracingMode
instance GHC.Show.Show Amazonka.Lambda.Types.TracingMode.TracingMode


module Amazonka.Lambda.Types.TracingConfigResponse

-- | The function's X-Ray tracing configuration.
--   
--   <i>See:</i> <a>newTracingConfigResponse</a> smart constructor.
data TracingConfigResponse
TracingConfigResponse' :: Maybe TracingMode -> TracingConfigResponse

-- | The tracing mode.
[$sel:mode:TracingConfigResponse'] :: TracingConfigResponse -> Maybe TracingMode

-- | Create a value of <a>TracingConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:TracingConfigResponse'</a>,
--   <a>tracingConfigResponse_mode</a> - The tracing mode.
newTracingConfigResponse :: TracingConfigResponse

-- | The tracing mode.
tracingConfigResponse_mode :: Lens' TracingConfigResponse (Maybe TracingMode)
instance GHC.Generics.Generic Amazonka.Lambda.Types.TracingConfigResponse.TracingConfigResponse
instance GHC.Show.Show Amazonka.Lambda.Types.TracingConfigResponse.TracingConfigResponse
instance GHC.Read.Read Amazonka.Lambda.Types.TracingConfigResponse.TracingConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.Types.TracingConfigResponse.TracingConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.TracingConfigResponse.TracingConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.TracingConfigResponse.TracingConfigResponse
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.TracingConfigResponse.TracingConfigResponse


module Amazonka.Lambda.Types.TracingConfig

-- | The function's <a>X-Ray</a> tracing configuration. To sample and
--   record incoming requests, set <tt>Mode</tt> to <tt>Active</tt>.
--   
--   <i>See:</i> <a>newTracingConfig</a> smart constructor.
data TracingConfig
TracingConfig' :: Maybe TracingMode -> TracingConfig

-- | The tracing mode.
[$sel:mode:TracingConfig'] :: TracingConfig -> Maybe TracingMode

-- | Create a value of <a>TracingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:TracingConfig'</a>, <a>tracingConfig_mode</a> - The
--   tracing mode.
newTracingConfig :: TracingConfig

-- | The tracing mode.
tracingConfig_mode :: Lens' TracingConfig (Maybe TracingMode)
instance GHC.Generics.Generic Amazonka.Lambda.Types.TracingConfig.TracingConfig
instance GHC.Show.Show Amazonka.Lambda.Types.TracingConfig.TracingConfig
instance GHC.Read.Read Amazonka.Lambda.Types.TracingConfig.TracingConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.TracingConfig.TracingConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.TracingConfig.TracingConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.TracingConfig.TracingConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.TracingConfig.TracingConfig


module Amazonka.Lambda.Types.VpcConfig

-- | The VPC security groups and subnets that are attached to a Lambda
--   function. For more information, see <a>VPC Settings</a>.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe [Text] -> VpcConfig

-- | A list of VPC security groups IDs.
[$sel:securityGroupIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | A list of VPC subnet IDs.
[$sel:subnetIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - A list of VPC security groups IDs.
--   
--   <a>$sel:subnetIds:VpcConfig'</a>, <a>vpcConfig_subnetIds</a> - A list
--   of VPC subnet IDs.
newVpcConfig :: VpcConfig

-- | A list of VPC security groups IDs.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | A list of VPC subnet IDs.
vpcConfig_subnetIds :: Lens' VpcConfig (Maybe [Text])
instance GHC.Generics.Generic Amazonka.Lambda.Types.VpcConfig.VpcConfig
instance GHC.Show.Show Amazonka.Lambda.Types.VpcConfig.VpcConfig
instance GHC.Read.Read Amazonka.Lambda.Types.VpcConfig.VpcConfig
instance GHC.Classes.Eq Amazonka.Lambda.Types.VpcConfig.VpcConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.VpcConfig.VpcConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.VpcConfig.VpcConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.Types.VpcConfig.VpcConfig


module Amazonka.Lambda.Types.VpcConfigResponse

-- | The VPC security groups and subnets that are attached to a Lambda
--   function.
--   
--   <i>See:</i> <a>newVpcConfigResponse</a> smart constructor.
data VpcConfigResponse
VpcConfigResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> VpcConfigResponse

-- | A list of VPC security groups IDs.
[$sel:securityGroupIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | A list of VPC subnet IDs.
[$sel:subnetIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | The ID of the VPC.
[$sel:vpcId:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Text

-- | Create a value of <a>VpcConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_securityGroupIds</a> - A list of VPC security
--   groups IDs.
--   
--   <a>$sel:subnetIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_subnetIds</a> - A list of VPC subnet IDs.
--   
--   <a>$sel:vpcId:VpcConfigResponse'</a>, <a>vpcConfigResponse_vpcId</a> -
--   The ID of the VPC.
newVpcConfigResponse :: VpcConfigResponse

-- | A list of VPC security groups IDs.
vpcConfigResponse_securityGroupIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | A list of VPC subnet IDs.
vpcConfigResponse_subnetIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | The ID of the VPC.
vpcConfigResponse_vpcId :: Lens' VpcConfigResponse (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.VpcConfigResponse.VpcConfigResponse
instance GHC.Show.Show Amazonka.Lambda.Types.VpcConfigResponse.VpcConfigResponse
instance GHC.Read.Read Amazonka.Lambda.Types.VpcConfigResponse.VpcConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.Types.VpcConfigResponse.VpcConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.VpcConfigResponse.VpcConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.VpcConfigResponse.VpcConfigResponse
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.VpcConfigResponse.VpcConfigResponse


module Amazonka.Lambda.Types.FunctionConfiguration

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | The amount of memory available to the function at runtime.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The runtime environment for the Lambda function.
[$sel:runtime:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Runtime

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
[$sel:state:FunctionConfiguration'] :: FunctionConfiguration -> Maybe State

-- | The ARN of the signing profile version.
[$sel:signingProfileVersionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
[$sel:lastUpdateStatus:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatus

-- | The function's Amazon Resource Name (ARN).
[$sel:functionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
[$sel:kmsKeyArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
[$sel:packageType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe PackageType

-- | Connection settings for an <a>Amazon EFS file system</a>.
[$sel:fileSystemConfigs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [FileSystemConfig]

-- | The function's <a>environment variables</a>.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EnvironmentResponse

-- | The function's dead letter queue.
[$sel:deadLetterConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
[$sel:architectures:FunctionConfiguration'] :: FunctionConfiguration -> Maybe (NonEmpty Architecture)

-- | The ARN of the signing job.
[$sel:signingJobArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's execution role.
[$sel:role':FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's networking configuration.
[$sel:vpcConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe VpcConfigResponse

-- | The version of the Lambda function.
[$sel:version:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The name of the function.
[$sel:functionName:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's <a>layers</a>.
[$sel:layers:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [Layer]

-- | The size of the function's deployment package, in bytes.
[$sel:codeSize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Integer

-- | The function that Lambda calls to begin executing your function.
[$sel:handler:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The reason for the last update that was performed on the function.
[$sel:lastUpdateStatusReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason for the function's current state.
[$sel:stateReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The SHA256 hash of the function's deployment package.
[$sel:codeSha256:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's X-Ray tracing configuration.
[$sel:tracingConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe TracingConfigResponse

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
[$sel:stateReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe StateReasonCode

-- | The function's image configuration values.
[$sel:imageConfigResponse:FunctionConfiguration'] :: FunctionConfiguration -> Maybe ImageConfigResponse

-- | The function's description.
[$sel:description:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason code for the last update that was performed on the
--   function.
[$sel:lastUpdateStatusReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatusReasonCode

-- | The latest updated revision of the function or alias.
[$sel:revisionId:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | For Lambda@Edge functions, the ARN of the master function.
[$sel:masterArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.Types.FunctionConfiguration.FunctionConfiguration
instance GHC.Show.Show Amazonka.Lambda.Types.FunctionConfiguration.FunctionConfiguration
instance GHC.Classes.Eq Amazonka.Lambda.Types.FunctionConfiguration.FunctionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Lambda.Types.FunctionConfiguration.FunctionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Types.FunctionConfiguration.FunctionConfiguration
instance Control.DeepSeq.NFData Amazonka.Lambda.Types.FunctionConfiguration.FunctionConfiguration


module Amazonka.Lambda.Types

-- | API version <tt>2015-03-31</tt> of the Amazon Lambda SDK
--   configuration.
defaultService :: Service

-- | Lambda was unable to decrypt the environment variables because the KMS
--   key used is in an invalid state for Decrypt. Check the function's KMS
--   key settings.
_KMSInvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was throttled by Amazon EC2 during Lambda function
--   initialization using the execution role provided for the Lambda
--   function.
_EC2ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function couldn't make a network connection to the configured file
--   system.
_EFSMountConnectivityException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The runtime or runtime version specified is not supported.
_InvalidRuntimeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function couldn't mount the configured file system due to a
--   permission or configuration issue.
_EFSMountFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The permissions policy for the resource is too large. <a>Learn
--   more</a>
_PolicyLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The RevisionId provided does not match the latest RevisionId for the
--   Lambda function or alias. Call the <tt>GetFunction</tt> or the
--   <tt>GetAlias</tt> API to retrieve the latest RevisionId for your
--   resource.
_PreconditionFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Need additional permissions to configure VPC settings.
_EC2AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Subnet ID provided in the Lambda function VPC configuration is
--   invalid.
_InvalidSubnetIDException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The code signature failed one or more of the validation checks for
--   signature mismatch or expiry, and the code signing policy is set to
--   ENFORCE. Lambda blocks the deployment.
_CodeVerificationFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content type of the <tt>Invoke</tt> request body is not JSON.
_UnsupportedMediaTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request body could not be parsed as JSON.
_InvalidRequestContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was unable to decrypt the environment variables because the KMS
--   key was not found. Check the function's KMS key settings.
_KMSNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was not able to create an elastic network interface in the VPC,
--   specified as part of Lambda function configuration, because the limit
--   for network interfaces has been reached.
_ENILimitReachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One of the parameters in the request is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request payload exceeded the <tt>Invoke</tt> request body JSON
--   input limit. For more information, see <a>Limits</a>.
_RequestTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The code signature failed the integrity check. Lambda always blocks
--   deployment if the integrity check fails, even if code signing policy
--   is set to WARN.
_InvalidCodeSignatureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request throughput limit was exceeded.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Security Group ID provided in the Lambda function VPC
--   configuration is invalid.
_InvalidSecurityGroupIDException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was unable to decrypt the environment variables because the KMS
--   key used is disabled. Check the Lambda function's KMS key settings.
_KMSDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was not able to set up VPC access for the Lambda function
--   because one or more configured subnets has no available IP addresses.
_SubnetIPAddressLimitReachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Lambda service encountered an internal error.
_ServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded your maximum total code size per account. <a>Learn
--   more</a>
_CodeStorageExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified code signing configuration does not exist.
_CodeSigningConfigNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda could not unzip the deployment package.
_InvalidZipFileException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified configuration does not exist.
_ProvisionedConcurrencyConfigNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource already exists, or another operation is in progress.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function is inactive and its VPC connection is no longer
--   available. Wait for the VPC connection to reestablish and try again.
_ResourceNotReadyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda received an unexpected EC2 client exception while setting up
--   for the Lambda function.
_EC2UnexpectedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred when reading from or writing to a connected file
--   system.
_EFSIOException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function was able to make a network connection to the configured
--   file system, but the mount operation timed out.
_EFSMountTimeoutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was unable to decrypt the environment variables because KMS
--   access was denied. Check the Lambda function's KMS permissions.
_KMSAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation conflicts with the resource's availability. For example,
--   you attempted to update an EventSource Mapping in CREATING, or tried
--   to delete a EventSource mapping currently in the UPDATING state.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype Architecture
Architecture' :: Text -> Architecture
[fromArchitecture] :: Architecture -> Text
pattern Architecture_Arm64 :: Architecture
pattern Architecture_X86_64 :: Architecture
newtype CodeSigningPolicy
CodeSigningPolicy' :: Text -> CodeSigningPolicy
[fromCodeSigningPolicy] :: CodeSigningPolicy -> Text
pattern CodeSigningPolicy_Enforce :: CodeSigningPolicy
pattern CodeSigningPolicy_Warn :: CodeSigningPolicy
newtype EndPointType
EndPointType' :: Text -> EndPointType
[fromEndPointType] :: EndPointType -> Text
pattern EndPointType_KAFKA_BOOTSTRAP_SERVERS :: EndPointType
newtype EventSourcePosition
EventSourcePosition' :: Text -> EventSourcePosition
[fromEventSourcePosition] :: EventSourcePosition -> Text
pattern EventSourcePosition_AT_TIMESTAMP :: EventSourcePosition
pattern EventSourcePosition_LATEST :: EventSourcePosition
pattern EventSourcePosition_TRIM_HORIZON :: EventSourcePosition
newtype FunctionResponseType
FunctionResponseType' :: Text -> FunctionResponseType
[fromFunctionResponseType] :: FunctionResponseType -> Text
pattern FunctionResponseType_ReportBatchItemFailures :: FunctionResponseType
newtype FunctionVersion
FunctionVersion' :: Text -> FunctionVersion
[fromFunctionVersion] :: FunctionVersion -> Text
pattern FunctionVersion_ALL :: FunctionVersion
newtype InvocationType
InvocationType' :: Text -> InvocationType
[fromInvocationType] :: InvocationType -> Text
pattern InvocationType_DryRun :: InvocationType
pattern InvocationType_Event :: InvocationType
pattern InvocationType_RequestResponse :: InvocationType
newtype LastUpdateStatus
LastUpdateStatus' :: Text -> LastUpdateStatus
[fromLastUpdateStatus] :: LastUpdateStatus -> Text
pattern LastUpdateStatus_Failed :: LastUpdateStatus
pattern LastUpdateStatus_InProgress :: LastUpdateStatus
pattern LastUpdateStatus_Successful :: LastUpdateStatus
newtype LastUpdateStatusReasonCode
LastUpdateStatusReasonCode' :: Text -> LastUpdateStatusReasonCode
[fromLastUpdateStatusReasonCode] :: LastUpdateStatusReasonCode -> Text
pattern LastUpdateStatusReasonCode_EniLimitExceeded :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_ImageAccessDenied :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_ImageDeleted :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InsufficientRolePermissions :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InternalError :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidConfiguration :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidImage :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidSecurityGroup :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidSubnet :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_SubnetOutOfIPAddresses :: LastUpdateStatusReasonCode
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_None :: LogType
pattern LogType_Tail :: LogType
newtype PackageType
PackageType' :: Text -> PackageType
[fromPackageType] :: PackageType -> Text
pattern PackageType_Image :: PackageType
pattern PackageType_Zip :: PackageType
newtype ProvisionedConcurrencyStatusEnum
ProvisionedConcurrencyStatusEnum' :: Text -> ProvisionedConcurrencyStatusEnum
[fromProvisionedConcurrencyStatusEnum] :: ProvisionedConcurrencyStatusEnum -> Text
pattern ProvisionedConcurrencyStatusEnum_FAILED :: ProvisionedConcurrencyStatusEnum
pattern ProvisionedConcurrencyStatusEnum_IN_PROGRESS :: ProvisionedConcurrencyStatusEnum
pattern ProvisionedConcurrencyStatusEnum_READY :: ProvisionedConcurrencyStatusEnum
newtype Runtime
Runtime' :: Text -> Runtime
[fromRuntime] :: Runtime -> Text
pattern Runtime_Dotnetcore1_0 :: Runtime
pattern Runtime_Dotnetcore2_0 :: Runtime
pattern Runtime_Dotnetcore2_1 :: Runtime
pattern Runtime_Dotnetcore3_1 :: Runtime
pattern Runtime_Go1_x :: Runtime
pattern Runtime_Java11 :: Runtime
pattern Runtime_Java8 :: Runtime
pattern Runtime_Java8_al2 :: Runtime
pattern Runtime_Nodejs :: Runtime
pattern Runtime_Nodejs10_x :: Runtime
pattern Runtime_Nodejs12_x :: Runtime
pattern Runtime_Nodejs14_x :: Runtime
pattern Runtime_Nodejs4_3 :: Runtime
pattern Runtime_Nodejs4_3_edge :: Runtime
pattern Runtime_Nodejs6_10 :: Runtime
pattern Runtime_Nodejs8_10 :: Runtime
pattern Runtime_Provided :: Runtime
pattern Runtime_Provided_al2 :: Runtime
pattern Runtime_Python2_7 :: Runtime
pattern Runtime_Python3_6 :: Runtime
pattern Runtime_Python3_7 :: Runtime
pattern Runtime_Python3_8 :: Runtime
pattern Runtime_Python3_9 :: Runtime
pattern Runtime_Ruby2_5 :: Runtime
pattern Runtime_Ruby2_7 :: Runtime
newtype SourceAccessType
SourceAccessType' :: Text -> SourceAccessType
[fromSourceAccessType] :: SourceAccessType -> Text
pattern SourceAccessType_BASIC_AUTH :: SourceAccessType
pattern SourceAccessType_SASL_SCRAM_256_AUTH :: SourceAccessType
pattern SourceAccessType_SASL_SCRAM_512_AUTH :: SourceAccessType
pattern SourceAccessType_VIRTUAL_HOST :: SourceAccessType
pattern SourceAccessType_VPC_SECURITY_GROUP :: SourceAccessType
pattern SourceAccessType_VPC_SUBNET :: SourceAccessType
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_Active :: State
pattern State_Failed :: State
pattern State_Inactive :: State
pattern State_Pending :: State
newtype StateReasonCode
StateReasonCode' :: Text -> StateReasonCode
[fromStateReasonCode] :: StateReasonCode -> Text
pattern StateReasonCode_Creating :: StateReasonCode
pattern StateReasonCode_EniLimitExceeded :: StateReasonCode
pattern StateReasonCode_Idle :: StateReasonCode
pattern StateReasonCode_ImageAccessDenied :: StateReasonCode
pattern StateReasonCode_ImageDeleted :: StateReasonCode
pattern StateReasonCode_InsufficientRolePermissions :: StateReasonCode
pattern StateReasonCode_InternalError :: StateReasonCode
pattern StateReasonCode_InvalidConfiguration :: StateReasonCode
pattern StateReasonCode_InvalidImage :: StateReasonCode
pattern StateReasonCode_InvalidSecurityGroup :: StateReasonCode
pattern StateReasonCode_InvalidSubnet :: StateReasonCode
pattern StateReasonCode_Restoring :: StateReasonCode
pattern StateReasonCode_SubnetOutOfIPAddresses :: StateReasonCode
newtype TracingMode
TracingMode' :: Text -> TracingMode
[fromTracingMode] :: TracingMode -> Text
pattern TracingMode_Active :: TracingMode
pattern TracingMode_PassThrough :: TracingMode

-- | Limits that are related to concurrency and storage. All file and
--   storage sizes are in bytes.
--   
--   <i>See:</i> <a>newAccountLimit</a> smart constructor.
data AccountLimit
AccountLimit' :: Maybe Int -> Maybe Integer -> Maybe Natural -> Maybe Integer -> Maybe Integer -> AccountLimit

-- | The maximum number of simultaneous function executions.
[$sel:concurrentExecutions:AccountLimit'] :: AccountLimit -> Maybe Int

-- | The amount of storage space that you can use for all deployment
--   packages and layer archives.
[$sel:totalCodeSize:AccountLimit'] :: AccountLimit -> Maybe Integer

-- | The maximum number of simultaneous function executions, minus the
--   capacity that's reserved for individual functions with
--   PutFunctionConcurrency.
[$sel:unreservedConcurrentExecutions:AccountLimit'] :: AccountLimit -> Maybe Natural

-- | The maximum size of a function's deployment package and layers when
--   they're extracted.
[$sel:codeSizeUnzipped:AccountLimit'] :: AccountLimit -> Maybe Integer

-- | The maximum size of a deployment package when it's uploaded directly
--   to Lambda. Use Amazon S3 for larger files.
[$sel:codeSizeZipped:AccountLimit'] :: AccountLimit -> Maybe Integer

-- | Create a value of <a>AccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentExecutions:AccountLimit'</a>,
--   <a>accountLimit_concurrentExecutions</a> - The maximum number of
--   simultaneous function executions.
--   
--   <a>$sel:totalCodeSize:AccountLimit'</a>,
--   <a>accountLimit_totalCodeSize</a> - The amount of storage space that
--   you can use for all deployment packages and layer archives.
--   
--   <a>$sel:unreservedConcurrentExecutions:AccountLimit'</a>,
--   <a>accountLimit_unreservedConcurrentExecutions</a> - The maximum
--   number of simultaneous function executions, minus the capacity that's
--   reserved for individual functions with PutFunctionConcurrency.
--   
--   <a>$sel:codeSizeUnzipped:AccountLimit'</a>,
--   <a>accountLimit_codeSizeUnzipped</a> - The maximum size of a
--   function's deployment package and layers when they're extracted.
--   
--   <a>$sel:codeSizeZipped:AccountLimit'</a>,
--   <a>accountLimit_codeSizeZipped</a> - The maximum size of a deployment
--   package when it's uploaded directly to Lambda. Use Amazon S3 for
--   larger files.
newAccountLimit :: AccountLimit

-- | The maximum number of simultaneous function executions.
accountLimit_concurrentExecutions :: Lens' AccountLimit (Maybe Int)

-- | The amount of storage space that you can use for all deployment
--   packages and layer archives.
accountLimit_totalCodeSize :: Lens' AccountLimit (Maybe Integer)

-- | The maximum number of simultaneous function executions, minus the
--   capacity that's reserved for individual functions with
--   PutFunctionConcurrency.
accountLimit_unreservedConcurrentExecutions :: Lens' AccountLimit (Maybe Natural)

-- | The maximum size of a function's deployment package and layers when
--   they're extracted.
accountLimit_codeSizeUnzipped :: Lens' AccountLimit (Maybe Integer)

-- | The maximum size of a deployment package when it's uploaded directly
--   to Lambda. Use Amazon S3 for larger files.
accountLimit_codeSizeZipped :: Lens' AccountLimit (Maybe Integer)

-- | The number of functions and amount of storage in use.
--   
--   <i>See:</i> <a>newAccountUsage</a> smart constructor.
data AccountUsage
AccountUsage' :: Maybe Integer -> Maybe Integer -> AccountUsage

-- | The amount of storage space, in bytes, that's being used by deployment
--   packages and layer archives.
[$sel:totalCodeSize:AccountUsage'] :: AccountUsage -> Maybe Integer

-- | The number of Lambda functions.
[$sel:functionCount:AccountUsage'] :: AccountUsage -> Maybe Integer

-- | Create a value of <a>AccountUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalCodeSize:AccountUsage'</a>,
--   <a>accountUsage_totalCodeSize</a> - The amount of storage space, in
--   bytes, that's being used by deployment packages and layer archives.
--   
--   <a>$sel:functionCount:AccountUsage'</a>,
--   <a>accountUsage_functionCount</a> - The number of Lambda functions.
newAccountUsage :: AccountUsage

-- | The amount of storage space, in bytes, that's being used by deployment
--   packages and layer archives.
accountUsage_totalCodeSize :: Lens' AccountUsage (Maybe Integer)

-- | The number of Lambda functions.
accountUsage_functionCount :: Lens' AccountUsage (Maybe Integer)

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
[$sel:routingConfig:AliasConfiguration'] :: AliasConfiguration -> Maybe AliasRoutingConfiguration

-- | The name of the alias.
[$sel:name:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The function version that the alias invokes.
[$sel:functionVersion:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the alias.
[$sel:aliasArn:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A description of the alias.
[$sel:description:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A unique identifier that changes when you update the alias.
[$sel:revisionId:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)

-- | The <a>traffic-shifting</a> configuration of a Lambda function alias.
--   
--   <i>See:</i> <a>newAliasRoutingConfiguration</a> smart constructor.
data AliasRoutingConfiguration
AliasRoutingConfiguration' :: Maybe (HashMap Text Double) -> AliasRoutingConfiguration

-- | The second version, and the percentage of traffic that's routed to it.
[$sel:additionalVersionWeights:AliasRoutingConfiguration'] :: AliasRoutingConfiguration -> Maybe (HashMap Text Double)

-- | Create a value of <a>AliasRoutingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalVersionWeights:AliasRoutingConfiguration'</a>,
--   <a>aliasRoutingConfiguration_additionalVersionWeights</a> - The second
--   version, and the percentage of traffic that's routed to it.
newAliasRoutingConfiguration :: AliasRoutingConfiguration

-- | The second version, and the percentage of traffic that's routed to it.
aliasRoutingConfiguration_additionalVersionWeights :: Lens' AliasRoutingConfiguration (Maybe (HashMap Text Double))

-- | List of signing profiles that can sign a code package.
--   
--   <i>See:</i> <a>newAllowedPublishers</a> smart constructor.
data AllowedPublishers
AllowedPublishers' :: NonEmpty Text -> AllowedPublishers

-- | The Amazon Resource Name (ARN) for each of the signing profiles. A
--   signing profile defines a trusted user who can sign a code package.
[$sel:signingProfileVersionArns:AllowedPublishers'] :: AllowedPublishers -> NonEmpty Text

-- | Create a value of <a>AllowedPublishers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArns:AllowedPublishers'</a>,
--   <a>allowedPublishers_signingProfileVersionArns</a> - The Amazon
--   Resource Name (ARN) for each of the signing profiles. A signing
--   profile defines a trusted user who can sign a code package.
newAllowedPublishers :: NonEmpty Text -> AllowedPublishers

-- | The Amazon Resource Name (ARN) for each of the signing profiles. A
--   signing profile defines a trusted user who can sign a code package.
allowedPublishers_signingProfileVersionArns :: Lens' AllowedPublishers (NonEmpty Text)

-- | Details about a <a>Code signing configuration</a>.
--   
--   <i>See:</i> <a>newCodeSigningConfig</a> smart constructor.
data CodeSigningConfig
CodeSigningConfig' :: Maybe Text -> Text -> Text -> AllowedPublishers -> CodeSigningPolicies -> Text -> CodeSigningConfig

-- | Code signing configuration description.
[$sel:description:CodeSigningConfig'] :: CodeSigningConfig -> Maybe Text

-- | Unique identifer for the Code signing configuration.
[$sel:codeSigningConfigId:CodeSigningConfig'] :: CodeSigningConfig -> Text

-- | The Amazon Resource Name (ARN) of the Code signing configuration.
[$sel:codeSigningConfigArn:CodeSigningConfig'] :: CodeSigningConfig -> Text

-- | List of allowed publishers.
[$sel:allowedPublishers:CodeSigningConfig'] :: CodeSigningConfig -> AllowedPublishers

-- | The code signing policy controls the validation failure action for
--   signature mismatch or expiry.
[$sel:codeSigningPolicies:CodeSigningConfig'] :: CodeSigningConfig -> CodeSigningPolicies

-- | The date and time that the Code signing configuration was last
--   modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:CodeSigningConfig'] :: CodeSigningConfig -> Text

-- | Create a value of <a>CodeSigningConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_description</a> - Code signing configuration
--   description.
--   
--   <a>$sel:codeSigningConfigId:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningConfigId</a> - Unique identifer for
--   the Code signing configuration.
--   
--   <a>$sel:codeSigningConfigArn:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningConfigArn</a> - The Amazon Resource
--   Name (ARN) of the Code signing configuration.
--   
--   <a>$sel:allowedPublishers:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_allowedPublishers</a> - List of allowed
--   publishers.
--   
--   <a>$sel:codeSigningPolicies:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningPolicies</a> - The code signing policy
--   controls the validation failure action for signature mismatch or
--   expiry.
--   
--   <a>$sel:lastModified:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_lastModified</a> - The date and time that the
--   Code signing configuration was last modified, in ISO-8601 format
--   (YYYY-MM-DDThh:mm:ss.sTZD).
newCodeSigningConfig :: Text -> Text -> AllowedPublishers -> CodeSigningPolicies -> Text -> CodeSigningConfig

-- | Code signing configuration description.
codeSigningConfig_description :: Lens' CodeSigningConfig (Maybe Text)

-- | Unique identifer for the Code signing configuration.
codeSigningConfig_codeSigningConfigId :: Lens' CodeSigningConfig Text

-- | The Amazon Resource Name (ARN) of the Code signing configuration.
codeSigningConfig_codeSigningConfigArn :: Lens' CodeSigningConfig Text

-- | List of allowed publishers.
codeSigningConfig_allowedPublishers :: Lens' CodeSigningConfig AllowedPublishers

-- | The code signing policy controls the validation failure action for
--   signature mismatch or expiry.
codeSigningConfig_codeSigningPolicies :: Lens' CodeSigningConfig CodeSigningPolicies

-- | The date and time that the Code signing configuration was last
--   modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).
codeSigningConfig_lastModified :: Lens' CodeSigningConfig Text

-- | Code signing configuration <a>policies</a> specify the validation
--   failure action for signature mismatch or expiry.
--   
--   <i>See:</i> <a>newCodeSigningPolicies</a> smart constructor.
data CodeSigningPolicies
CodeSigningPolicies' :: Maybe CodeSigningPolicy -> CodeSigningPolicies

-- | Code signing configuration policy for deployment validation failure.
--   If you set the policy to <tt>Enforce</tt>, Lambda blocks the
--   deployment request if signature validation checks fail. If you set the
--   policy to <tt>Warn</tt>, Lambda allows the deployment and creates a
--   CloudWatch log.
--   
--   Default value: <tt>Warn</tt>
[$sel:untrustedArtifactOnDeployment:CodeSigningPolicies'] :: CodeSigningPolicies -> Maybe CodeSigningPolicy

-- | Create a value of <a>CodeSigningPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:untrustedArtifactOnDeployment:CodeSigningPolicies'</a>,
--   <a>codeSigningPolicies_untrustedArtifactOnDeployment</a> - Code
--   signing configuration policy for deployment validation failure. If you
--   set the policy to <tt>Enforce</tt>, Lambda blocks the deployment
--   request if signature validation checks fail. If you set the policy to
--   <tt>Warn</tt>, Lambda allows the deployment and creates a CloudWatch
--   log.
--   
--   Default value: <tt>Warn</tt>
newCodeSigningPolicies :: CodeSigningPolicies

-- | Code signing configuration policy for deployment validation failure.
--   If you set the policy to <tt>Enforce</tt>, Lambda blocks the
--   deployment request if signature validation checks fail. If you set the
--   policy to <tt>Warn</tt>, Lambda allows the deployment and creates a
--   CloudWatch log.
--   
--   Default value: <tt>Warn</tt>
codeSigningPolicies_untrustedArtifactOnDeployment :: Lens' CodeSigningPolicies (Maybe CodeSigningPolicy)

-- | <i>See:</i> <a>newConcurrency</a> smart constructor.
data Concurrency
Concurrency' :: Maybe Natural -> Concurrency

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
[$sel:reservedConcurrentExecutions:Concurrency'] :: Concurrency -> Maybe Natural

-- | Create a value of <a>Concurrency</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedConcurrentExecutions:Concurrency'</a>,
--   <a>concurrency_reservedConcurrentExecutions</a> - The number of
--   concurrent executions that are reserved for this function. For more
--   information, see <a>Managing Concurrency</a>.
newConcurrency :: Concurrency

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
concurrency_reservedConcurrentExecutions :: Lens' Concurrency (Maybe Natural)

-- | The <a>dead-letter queue</a> for failed asynchronous invocations.
--   
--   <i>See:</i> <a>newDeadLetterConfig</a> smart constructor.
data DeadLetterConfig
DeadLetterConfig' :: Maybe Text -> DeadLetterConfig

-- | The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS
--   topic.
[$sel:targetArn:DeadLetterConfig'] :: DeadLetterConfig -> Maybe Text

-- | Create a value of <a>DeadLetterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetArn:DeadLetterConfig'</a>,
--   <a>deadLetterConfig_targetArn</a> - The Amazon Resource Name (ARN) of
--   an Amazon SQS queue or Amazon SNS topic.
newDeadLetterConfig :: DeadLetterConfig

-- | The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS
--   topic.
deadLetterConfig_targetArn :: Lens' DeadLetterConfig (Maybe Text)

-- | A configuration object that specifies the destination of an event
--   after Lambda processes it.
--   
--   <i>See:</i> <a>newDestinationConfig</a> smart constructor.
data DestinationConfig
DestinationConfig' :: Maybe OnSuccess -> Maybe OnFailure -> DestinationConfig

-- | The destination configuration for successful invocations.
[$sel:onSuccess:DestinationConfig'] :: DestinationConfig -> Maybe OnSuccess

-- | The destination configuration for failed invocations.
[$sel:onFailure:DestinationConfig'] :: DestinationConfig -> Maybe OnFailure

-- | Create a value of <a>DestinationConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onSuccess:DestinationConfig'</a>,
--   <a>destinationConfig_onSuccess</a> - The destination configuration for
--   successful invocations.
--   
--   <a>$sel:onFailure:DestinationConfig'</a>,
--   <a>destinationConfig_onFailure</a> - The destination configuration for
--   failed invocations.
newDestinationConfig :: DestinationConfig

-- | The destination configuration for successful invocations.
destinationConfig_onSuccess :: Lens' DestinationConfig (Maybe OnSuccess)

-- | The destination configuration for failed invocations.
destinationConfig_onFailure :: Lens' DestinationConfig (Maybe OnFailure)

-- | A function's environment variable settings. You can use environment
--   variables to adjust your function's behavior without updating code. An
--   environment variable is a pair of strings that are stored in a
--   function's version-specific configuration.
--   
--   <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe (Sensitive (HashMap Text (Sensitive Text))) -> Environment

-- | Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
[$sel:variables:Environment'] :: Environment -> Maybe (Sensitive (HashMap Text (Sensitive Text)))

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:Environment'</a>, <a>environment_variables</a> -
--   Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
newEnvironment :: Environment

-- | Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
environment_variables :: Lens' Environment (Maybe (HashMap Text Text))

-- | Error messages for environment variables that couldn't be applied.
--   
--   <i>See:</i> <a>newEnvironmentError</a> smart constructor.
data EnvironmentError
EnvironmentError' :: Maybe Text -> Maybe (Sensitive Text) -> EnvironmentError

-- | The error code.
[$sel:errorCode:EnvironmentError'] :: EnvironmentError -> Maybe Text

-- | The error message.
[$sel:message:EnvironmentError'] :: EnvironmentError -> Maybe (Sensitive Text)

-- | Create a value of <a>EnvironmentError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:EnvironmentError'</a>,
--   <a>environmentError_errorCode</a> - The error code.
--   
--   <a>$sel:message:EnvironmentError'</a>, <a>environmentError_message</a>
--   - The error message.
newEnvironmentError :: EnvironmentError

-- | The error code.
environmentError_errorCode :: Lens' EnvironmentError (Maybe Text)

-- | The error message.
environmentError_message :: Lens' EnvironmentError (Maybe Text)

-- | The results of an operation to update or read environment variables.
--   If the operation is successful, the response contains the environment
--   variables. If it failed, the response contains details about the
--   error.
--   
--   <i>See:</i> <a>newEnvironmentResponse</a> smart constructor.
data EnvironmentResponse
EnvironmentResponse' :: Maybe (Sensitive (HashMap Text (Sensitive Text))) -> Maybe EnvironmentError -> EnvironmentResponse

-- | Environment variable key-value pairs.
[$sel:variables:EnvironmentResponse'] :: EnvironmentResponse -> Maybe (Sensitive (HashMap Text (Sensitive Text)))

-- | Error messages for environment variables that couldn't be applied.
[$sel:error:EnvironmentResponse'] :: EnvironmentResponse -> Maybe EnvironmentError

-- | Create a value of <a>EnvironmentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:EnvironmentResponse'</a>,
--   <a>environmentResponse_variables</a> - Environment variable key-value
--   pairs.
--   
--   <a>$sel:error:EnvironmentResponse'</a>,
--   <a>environmentResponse_error</a> - Error messages for environment
--   variables that couldn't be applied.
newEnvironmentResponse :: EnvironmentResponse

-- | Environment variable key-value pairs.
environmentResponse_variables :: Lens' EnvironmentResponse (Maybe (HashMap Text Text))

-- | Error messages for environment variables that couldn't be applied.
environmentResponse_error :: Lens' EnvironmentResponse (Maybe EnvironmentError)

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
[$sel:eventSourceArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
[$sel:state:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
[$sel:startingPositionTimestamp:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | The ARN of the Lambda function.
[$sel:functionArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The name of the Kafka topic.
[$sel:topics:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
[$sel:queues:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
[$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Bool

-- | The identifier of the event source mapping.
[$sel:uuid:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
[$sel:parallelizationFactor:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The result of the last Lambda invocation of your function.
[$sel:lastProcessingResult:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
[$sel:maximumRetryAttempts:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:batchSize:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
[$sel:stateTransitionReason:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
[$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
[$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
[$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The self-managed Apache Kafka cluster for your event source.
[$sel:selfManagedEventSource:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe SelfManagedEventSource

-- | The date that the event source mapping was last updated or that its
--   state changed.
[$sel:lastModified:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe DestinationConfig

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
[$sel:startingPosition:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe EventSourcePosition

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)

-- | Details about the connection between a Lambda function and an
--   <a>Amazon EFS file system</a>.
--   
--   <i>See:</i> <a>newFileSystemConfig</a> smart constructor.
data FileSystemConfig
FileSystemConfig' :: Text -> Text -> FileSystemConfig

-- | The Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
[$sel:arn:FileSystemConfig'] :: FileSystemConfig -> Text

-- | The path where the function can access the file system, starting with
--   <tt>/mnt/</tt>.
[$sel:localMountPath:FileSystemConfig'] :: FileSystemConfig -> Text

-- | Create a value of <a>FileSystemConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FileSystemConfig'</a>, <a>fileSystemConfig_arn</a> - The
--   Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
--   
--   <a>$sel:localMountPath:FileSystemConfig'</a>,
--   <a>fileSystemConfig_localMountPath</a> - The path where the function
--   can access the file system, starting with <tt>/mnt/</tt>.
newFileSystemConfig :: Text -> Text -> FileSystemConfig

-- | The Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
fileSystemConfig_arn :: Lens' FileSystemConfig Text

-- | The path where the function can access the file system, starting with
--   <tt>/mnt/</tt>.
fileSystemConfig_localMountPath :: Lens' FileSystemConfig Text

-- | The code for the Lambda function. You can specify either an object in
--   Amazon S3, upload a .zip file archive deployment package directly, or
--   specify the URI of a container image.
--   
--   <i>See:</i> <a>newFunctionCode</a> smart constructor.
data FunctionCode
FunctionCode' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe Text -> Maybe Text -> FunctionCode

-- | For versioned objects, the version of the deployment package object to
--   use.
[$sel:s3ObjectVersion:FunctionCode'] :: FunctionCode -> Maybe Text

-- | The Amazon S3 key of the deployment package.
[$sel:s3Key:FunctionCode'] :: FunctionCode -> Maybe Text

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.
[$sel:zipFile:FunctionCode'] :: FunctionCode -> Maybe (Sensitive Base64)

-- | URI of a <a>container image</a> in the Amazon ECR registry.
[$sel:imageUri:FunctionCode'] :: FunctionCode -> Maybe Text

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
[$sel:s3Bucket:FunctionCode'] :: FunctionCode -> Maybe Text

-- | Create a value of <a>FunctionCode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:FunctionCode'</a>,
--   <a>functionCode_s3ObjectVersion</a> - For versioned objects, the
--   version of the deployment package object to use.
--   
--   <a>$sel:s3Key:FunctionCode'</a>, <a>functionCode_s3Key</a> - The
--   Amazon S3 key of the deployment package.
--   
--   <a>$sel:zipFile:FunctionCode'</a>, <a>functionCode_zipFile</a> - The
--   base64-encoded contents of the deployment package. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:imageUri:FunctionCode'</a>, <a>functionCode_imageUri</a> - URI
--   of a <a>container image</a> in the Amazon ECR registry.
--   
--   <a>$sel:s3Bucket:FunctionCode'</a>, <a>functionCode_s3Bucket</a> - An
--   Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
newFunctionCode :: FunctionCode

-- | For versioned objects, the version of the deployment package object to
--   use.
functionCode_s3ObjectVersion :: Lens' FunctionCode (Maybe Text)

-- | The Amazon S3 key of the deployment package.
functionCode_s3Key :: Lens' FunctionCode (Maybe Text)

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
functionCode_zipFile :: Lens' FunctionCode (Maybe ByteString)

-- | URI of a <a>container image</a> in the Amazon ECR registry.
functionCode_imageUri :: Lens' FunctionCode (Maybe Text)

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
functionCode_s3Bucket :: Lens' FunctionCode (Maybe Text)

-- | Details about a function's deployment package.
--   
--   <i>See:</i> <a>newFunctionCodeLocation</a> smart constructor.
data FunctionCodeLocation
FunctionCodeLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FunctionCodeLocation

-- | A presigned URL that you can use to download the deployment package.
[$sel:location:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | The resolved URI for the image.
[$sel:resolvedImageUri:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | URI of a container image in the Amazon ECR registry.
[$sel:imageUri:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | The service that's hosting the file.
[$sel:repositoryType:FunctionCodeLocation'] :: FunctionCodeLocation -> Maybe Text

-- | Create a value of <a>FunctionCodeLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_location</a> - A presigned URL that you can
--   use to download the deployment package.
--   
--   <a>$sel:resolvedImageUri:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_resolvedImageUri</a> - The resolved URI for
--   the image.
--   
--   <a>$sel:imageUri:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_imageUri</a> - URI of a container image in the
--   Amazon ECR registry.
--   
--   <a>$sel:repositoryType:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_repositoryType</a> - The service that's
--   hosting the file.
newFunctionCodeLocation :: FunctionCodeLocation

-- | A presigned URL that you can use to download the deployment package.
functionCodeLocation_location :: Lens' FunctionCodeLocation (Maybe Text)

-- | The resolved URI for the image.
functionCodeLocation_resolvedImageUri :: Lens' FunctionCodeLocation (Maybe Text)

-- | URI of a container image in the Amazon ECR registry.
functionCodeLocation_imageUri :: Lens' FunctionCodeLocation (Maybe Text)

-- | The service that's hosting the file.
functionCodeLocation_repositoryType :: Lens' FunctionCodeLocation (Maybe Text)

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | The amount of memory available to the function at runtime.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The runtime environment for the Lambda function.
[$sel:runtime:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Runtime

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
[$sel:state:FunctionConfiguration'] :: FunctionConfiguration -> Maybe State

-- | The ARN of the signing profile version.
[$sel:signingProfileVersionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
[$sel:lastUpdateStatus:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatus

-- | The function's Amazon Resource Name (ARN).
[$sel:functionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
[$sel:kmsKeyArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
[$sel:packageType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe PackageType

-- | Connection settings for an <a>Amazon EFS file system</a>.
[$sel:fileSystemConfigs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [FileSystemConfig]

-- | The function's <a>environment variables</a>.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EnvironmentResponse

-- | The function's dead letter queue.
[$sel:deadLetterConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
[$sel:architectures:FunctionConfiguration'] :: FunctionConfiguration -> Maybe (NonEmpty Architecture)

-- | The ARN of the signing job.
[$sel:signingJobArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's execution role.
[$sel:role':FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's networking configuration.
[$sel:vpcConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe VpcConfigResponse

-- | The version of the Lambda function.
[$sel:version:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The name of the function.
[$sel:functionName:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's <a>layers</a>.
[$sel:layers:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [Layer]

-- | The size of the function's deployment package, in bytes.
[$sel:codeSize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Integer

-- | The function that Lambda calls to begin executing your function.
[$sel:handler:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The reason for the last update that was performed on the function.
[$sel:lastUpdateStatusReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason for the function's current state.
[$sel:stateReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The SHA256 hash of the function's deployment package.
[$sel:codeSha256:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's X-Ray tracing configuration.
[$sel:tracingConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe TracingConfigResponse

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
[$sel:stateReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe StateReasonCode

-- | The function's image configuration values.
[$sel:imageConfigResponse:FunctionConfiguration'] :: FunctionConfiguration -> Maybe ImageConfigResponse

-- | The function's description.
[$sel:description:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason code for the last update that was performed on the
--   function.
[$sel:lastUpdateStatusReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatusReasonCode

-- | The latest updated revision of the function or alias.
[$sel:revisionId:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | For Lambda@Edge functions, the ARN of the master function.
[$sel:masterArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
[$sel:functionArn:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Text

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
[$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The maximum number of times to retry when the function returns an
--   error.
[$sel:maximumRetryAttempts:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The date and time that the configuration was last updated.
[$sel:lastModified:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe POSIX

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
[$sel:destinationConfig:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe DestinationConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)

-- | <i>See:</i> <a>newGetLayerVersionResponse</a> smart constructor.
data GetLayerVersionResponse
GetLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> GetLayerVersionResponse

-- | The ARN of the layer version.
[$sel:layerVersionArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | Details about the layer version.
[$sel:content:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe LayerVersionContentOutput

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:createdDate:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The version number.
[$sel:version:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Integer

-- | The layer's software license.
[$sel:licenseInfo:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Architecture]

-- | The ARN of the layer.
[$sel:layerArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The description of the version.
[$sel:description:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The layer's compatible runtimes.
[$sel:compatibleRuntimes:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Runtime]

-- | Create a value of <a>GetLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:content:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_createdDate</a> - The date that the layer
--   version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newGetLayerVersionResponse :: GetLayerVersionResponse

-- | The ARN of the layer version.
getLayerVersionResponse_layerVersionArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
getLayerVersionResponse_content :: Lens' GetLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
getLayerVersionResponse_createdDate :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The version number.
getLayerVersionResponse_version :: Lens' GetLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
getLayerVersionResponse_licenseInfo :: Lens' GetLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
getLayerVersionResponse_compatibleArchitectures :: Lens' GetLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
getLayerVersionResponse_layerArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The description of the version.
getLayerVersionResponse_description :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
getLayerVersionResponse_compatibleRuntimes :: Lens' GetLayerVersionResponse (Maybe [Runtime])

-- | Configuration values that override the container image Dockerfile
--   settings. See <a>Container settings</a>.
--   
--   <i>See:</i> <a>newImageConfig</a> smart constructor.
data ImageConfig
ImageConfig' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> ImageConfig

-- | Specifies parameters that you want to pass in with ENTRYPOINT.
[$sel:command:ImageConfig'] :: ImageConfig -> Maybe [Text]

-- | Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
[$sel:entryPoint:ImageConfig'] :: ImageConfig -> Maybe [Text]

-- | Specifies the working directory.
[$sel:workingDirectory:ImageConfig'] :: ImageConfig -> Maybe Text

-- | Create a value of <a>ImageConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:ImageConfig'</a>, <a>imageConfig_command</a> -
--   Specifies parameters that you want to pass in with ENTRYPOINT.
--   
--   <a>$sel:entryPoint:ImageConfig'</a>, <a>imageConfig_entryPoint</a> -
--   Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
--   
--   <a>$sel:workingDirectory:ImageConfig'</a>,
--   <a>imageConfig_workingDirectory</a> - Specifies the working directory.
newImageConfig :: ImageConfig

-- | Specifies parameters that you want to pass in with ENTRYPOINT.
imageConfig_command :: Lens' ImageConfig (Maybe [Text])

-- | Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
imageConfig_entryPoint :: Lens' ImageConfig (Maybe [Text])

-- | Specifies the working directory.
imageConfig_workingDirectory :: Lens' ImageConfig (Maybe Text)

-- | Error response to GetFunctionConfiguration.
--   
--   <i>See:</i> <a>newImageConfigError</a> smart constructor.
data ImageConfigError
ImageConfigError' :: Maybe Text -> Maybe (Sensitive Text) -> ImageConfigError

-- | Error code.
[$sel:errorCode:ImageConfigError'] :: ImageConfigError -> Maybe Text

-- | Error message.
[$sel:message:ImageConfigError'] :: ImageConfigError -> Maybe (Sensitive Text)

-- | Create a value of <a>ImageConfigError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ImageConfigError'</a>,
--   <a>imageConfigError_errorCode</a> - Error code.
--   
--   <a>$sel:message:ImageConfigError'</a>, <a>imageConfigError_message</a>
--   - Error message.
newImageConfigError :: ImageConfigError

-- | Error code.
imageConfigError_errorCode :: Lens' ImageConfigError (Maybe Text)

-- | Error message.
imageConfigError_message :: Lens' ImageConfigError (Maybe Text)

-- | Response to GetFunctionConfiguration request.
--   
--   <i>See:</i> <a>newImageConfigResponse</a> smart constructor.
data ImageConfigResponse
ImageConfigResponse' :: Maybe ImageConfig -> Maybe ImageConfigError -> ImageConfigResponse

-- | Configuration values that override the container image Dockerfile.
[$sel:imageConfig:ImageConfigResponse'] :: ImageConfigResponse -> Maybe ImageConfig

-- | Error response to GetFunctionConfiguration.
[$sel:error:ImageConfigResponse'] :: ImageConfigResponse -> Maybe ImageConfigError

-- | Create a value of <a>ImageConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageConfig:ImageConfigResponse'</a>,
--   <a>imageConfigResponse_imageConfig</a> - Configuration values that
--   override the container image Dockerfile.
--   
--   <a>$sel:error:ImageConfigResponse'</a>,
--   <a>imageConfigResponse_error</a> - Error response to
--   GetFunctionConfiguration.
newImageConfigResponse :: ImageConfigResponse

-- | Configuration values that override the container image Dockerfile.
imageConfigResponse_imageConfig :: Lens' ImageConfigResponse (Maybe ImageConfig)

-- | Error response to GetFunctionConfiguration.
imageConfigResponse_error :: Lens' ImageConfigResponse (Maybe ImageConfigError)

-- | An <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayer</a> smart constructor.
data Layer
Layer' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Layer

-- | The Amazon Resource Name (ARN) for a signing profile version.
[$sel:signingProfileVersionArn:Layer'] :: Layer -> Maybe Text

-- | The Amazon Resource Name (ARN) of the function layer.
[$sel:arn:Layer'] :: Layer -> Maybe Text

-- | The Amazon Resource Name (ARN) of a signing job.
[$sel:signingJobArn:Layer'] :: Layer -> Maybe Text

-- | The size of the layer archive in bytes.
[$sel:codeSize:Layer'] :: Layer -> Maybe Integer

-- | Create a value of <a>Layer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArn:Layer'</a>,
--   <a>layer_signingProfileVersionArn</a> - The Amazon Resource Name (ARN)
--   for a signing profile version.
--   
--   <a>$sel:arn:Layer'</a>, <a>layer_arn</a> - The Amazon Resource Name
--   (ARN) of the function layer.
--   
--   <a>$sel:signingJobArn:Layer'</a>, <a>layer_signingJobArn</a> - The
--   Amazon Resource Name (ARN) of a signing job.
--   
--   <a>$sel:codeSize:Layer'</a>, <a>layer_codeSize</a> - The size of the
--   layer archive in bytes.
newLayer :: Layer

-- | The Amazon Resource Name (ARN) for a signing profile version.
layer_signingProfileVersionArn :: Lens' Layer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the function layer.
layer_arn :: Lens' Layer (Maybe Text)

-- | The Amazon Resource Name (ARN) of a signing job.
layer_signingJobArn :: Lens' Layer (Maybe Text)

-- | The size of the layer archive in bytes.
layer_codeSize :: Lens' Layer (Maybe Integer)

-- | A ZIP archive that contains the contents of an <a>Lambda layer</a>.
--   You can specify either an Amazon S3 location, or upload a layer
--   archive directly.
--   
--   <i>See:</i> <a>newLayerVersionContentInput</a> smart constructor.
data LayerVersionContentInput
LayerVersionContentInput' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe Text -> LayerVersionContentInput

-- | For versioned objects, the version of the layer archive object to use.
[$sel:s3ObjectVersion:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe Text

-- | The Amazon S3 key of the layer archive.
[$sel:s3Key:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe Text

-- | The base64-encoded contents of the layer archive. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.
[$sel:zipFile:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe (Sensitive Base64)

-- | The Amazon S3 bucket of the layer archive.
[$sel:s3Bucket:LayerVersionContentInput'] :: LayerVersionContentInput -> Maybe Text

-- | Create a value of <a>LayerVersionContentInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3ObjectVersion</a> - For versioned
--   objects, the version of the layer archive object to use.
--   
--   <a>$sel:s3Key:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3Key</a> - The Amazon S3 key of the layer
--   archive.
--   
--   <a>$sel:zipFile:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_zipFile</a> - The base64-encoded contents
--   of the layer archive. Amazon Web Services SDK and Amazon Web Services
--   CLI clients handle the encoding for you.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:s3Bucket:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3Bucket</a> - The Amazon S3 bucket of the
--   layer archive.
newLayerVersionContentInput :: LayerVersionContentInput

-- | For versioned objects, the version of the layer archive object to use.
layerVersionContentInput_s3ObjectVersion :: Lens' LayerVersionContentInput (Maybe Text)

-- | The Amazon S3 key of the layer archive.
layerVersionContentInput_s3Key :: Lens' LayerVersionContentInput (Maybe Text)

-- | The base64-encoded contents of the layer archive. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
layerVersionContentInput_zipFile :: Lens' LayerVersionContentInput (Maybe ByteString)

-- | The Amazon S3 bucket of the layer archive.
layerVersionContentInput_s3Bucket :: Lens' LayerVersionContentInput (Maybe Text)

-- | Details about a version of an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayerVersionContentOutput</a> smart constructor.
data LayerVersionContentOutput
LayerVersionContentOutput' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> LayerVersionContentOutput

-- | The Amazon Resource Name (ARN) for a signing profile version.
[$sel:signingProfileVersionArn:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | A link to the layer archive in Amazon S3 that is valid for 10 minutes.
[$sel:location:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | The Amazon Resource Name (ARN) of a signing job.
[$sel:signingJobArn:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | The size of the layer archive in bytes.
[$sel:codeSize:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Integer

-- | The SHA-256 hash of the layer archive.
[$sel:codeSha256:LayerVersionContentOutput'] :: LayerVersionContentOutput -> Maybe Text

-- | Create a value of <a>LayerVersionContentOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArn:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_signingProfileVersionArn</a> - The Amazon
--   Resource Name (ARN) for a signing profile version.
--   
--   <a>$sel:location:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_location</a> - A link to the layer
--   archive in Amazon S3 that is valid for 10 minutes.
--   
--   <a>$sel:signingJobArn:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_signingJobArn</a> - The Amazon Resource
--   Name (ARN) of a signing job.
--   
--   <a>$sel:codeSize:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_codeSize</a> - The size of the layer
--   archive in bytes.
--   
--   <a>$sel:codeSha256:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_codeSha256</a> - The SHA-256 hash of the
--   layer archive.
newLayerVersionContentOutput :: LayerVersionContentOutput

-- | The Amazon Resource Name (ARN) for a signing profile version.
layerVersionContentOutput_signingProfileVersionArn :: Lens' LayerVersionContentOutput (Maybe Text)

-- | A link to the layer archive in Amazon S3 that is valid for 10 minutes.
layerVersionContentOutput_location :: Lens' LayerVersionContentOutput (Maybe Text)

-- | The Amazon Resource Name (ARN) of a signing job.
layerVersionContentOutput_signingJobArn :: Lens' LayerVersionContentOutput (Maybe Text)

-- | The size of the layer archive in bytes.
layerVersionContentOutput_codeSize :: Lens' LayerVersionContentOutput (Maybe Integer)

-- | The SHA-256 hash of the layer archive.
layerVersionContentOutput_codeSha256 :: Lens' LayerVersionContentOutput (Maybe Text)

-- | Details about a version of an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayerVersionsListItem</a> smart constructor.
data LayerVersionsListItem
LayerVersionsListItem' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe [Runtime] -> LayerVersionsListItem

-- | The ARN of the layer version.
[$sel:layerVersionArn:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | The date that the version was created, in ISO 8601 format. For
--   example, <tt>2018-11-27T15:10:45.123+0000</tt>.
[$sel:createdDate:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | The version number.
[$sel:version:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Integer

-- | The layer's open-source license.
[$sel:licenseInfo:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe [Architecture]

-- | The description of the version.
[$sel:description:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe Text

-- | The layer's compatible runtimes.
[$sel:compatibleRuntimes:LayerVersionsListItem'] :: LayerVersionsListItem -> Maybe [Runtime]

-- | Create a value of <a>LayerVersionsListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:createdDate:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_createdDate</a> - The date that the version
--   was created, in ISO 8601 format. For example,
--   <tt>2018-11-27T15:10:45.123+0000</tt>.
--   
--   <a>$sel:version:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_licenseInfo</a> - The layer's open-source
--   license.
--   
--   <a>$sel:compatibleArchitectures:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:description:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newLayerVersionsListItem :: LayerVersionsListItem

-- | The ARN of the layer version.
layerVersionsListItem_layerVersionArn :: Lens' LayerVersionsListItem (Maybe Text)

-- | The date that the version was created, in ISO 8601 format. For
--   example, <tt>2018-11-27T15:10:45.123+0000</tt>.
layerVersionsListItem_createdDate :: Lens' LayerVersionsListItem (Maybe Text)

-- | The version number.
layerVersionsListItem_version :: Lens' LayerVersionsListItem (Maybe Integer)

-- | The layer's open-source license.
layerVersionsListItem_licenseInfo :: Lens' LayerVersionsListItem (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
layerVersionsListItem_compatibleArchitectures :: Lens' LayerVersionsListItem (Maybe [Architecture])

-- | The description of the version.
layerVersionsListItem_description :: Lens' LayerVersionsListItem (Maybe Text)

-- | The layer's compatible runtimes.
layerVersionsListItem_compatibleRuntimes :: Lens' LayerVersionsListItem (Maybe [Runtime])

-- | Details about an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayersListItem</a> smart constructor.
data LayersListItem
LayersListItem' :: Maybe Text -> Maybe LayerVersionsListItem -> Maybe Text -> LayersListItem

-- | The name of the layer.
[$sel:layerName:LayersListItem'] :: LayersListItem -> Maybe Text

-- | The newest version of the layer.
[$sel:latestMatchingVersion:LayersListItem'] :: LayersListItem -> Maybe LayerVersionsListItem

-- | The Amazon Resource Name (ARN) of the function layer.
[$sel:layerArn:LayersListItem'] :: LayersListItem -> Maybe Text

-- | Create a value of <a>LayersListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:LayersListItem'</a>, <a>layersListItem_layerName</a>
--   - The name of the layer.
--   
--   <a>$sel:latestMatchingVersion:LayersListItem'</a>,
--   <a>layersListItem_latestMatchingVersion</a> - The newest version of
--   the layer.
--   
--   <a>$sel:layerArn:LayersListItem'</a>, <a>layersListItem_layerArn</a> -
--   The Amazon Resource Name (ARN) of the function layer.
newLayersListItem :: LayersListItem

-- | The name of the layer.
layersListItem_layerName :: Lens' LayersListItem (Maybe Text)

-- | The newest version of the layer.
layersListItem_latestMatchingVersion :: Lens' LayersListItem (Maybe LayerVersionsListItem)

-- | The Amazon Resource Name (ARN) of the function layer.
layersListItem_layerArn :: Lens' LayersListItem (Maybe Text)

-- | A destination for events that failed processing.
--   
--   <i>See:</i> <a>newOnFailure</a> smart constructor.
data OnFailure
OnFailure' :: Maybe Text -> OnFailure

-- | The Amazon Resource Name (ARN) of the destination resource.
[$sel:destination:OnFailure'] :: OnFailure -> Maybe Text

-- | Create a value of <a>OnFailure</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:OnFailure'</a>, <a>onFailure_destination</a> - The
--   Amazon Resource Name (ARN) of the destination resource.
newOnFailure :: OnFailure

-- | The Amazon Resource Name (ARN) of the destination resource.
onFailure_destination :: Lens' OnFailure (Maybe Text)

-- | A destination for events that were processed successfully.
--   
--   <i>See:</i> <a>newOnSuccess</a> smart constructor.
data OnSuccess
OnSuccess' :: Maybe Text -> OnSuccess

-- | The Amazon Resource Name (ARN) of the destination resource.
[$sel:destination:OnSuccess'] :: OnSuccess -> Maybe Text

-- | Create a value of <a>OnSuccess</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:OnSuccess'</a>, <a>onSuccess_destination</a> - The
--   Amazon Resource Name (ARN) of the destination resource.
newOnSuccess :: OnSuccess

-- | The Amazon Resource Name (ARN) of the destination resource.
onSuccess_destination :: Lens' OnSuccess (Maybe Text)

-- | Details about the provisioned concurrency configuration for a function
--   alias or version.
--   
--   <i>See:</i> <a>newProvisionedConcurrencyConfigListItem</a> smart
--   constructor.
data ProvisionedConcurrencyConfigListItem
ProvisionedConcurrencyConfigListItem' :: Maybe ProvisionedConcurrencyStatusEnum -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> ProvisionedConcurrencyConfigListItem

-- | The status of the allocation process.
[$sel:status:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe ProvisionedConcurrencyStatusEnum

-- | The Amazon Resource Name (ARN) of the alias or version.
[$sel:functionArn:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Text

-- | The amount of provisioned concurrency requested.
[$sel:requestedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Natural

-- | The amount of provisioned concurrency available.
[$sel:availableProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Natural

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
[$sel:statusReason:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Text

-- | The amount of provisioned concurrency allocated.
[$sel:allocatedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Natural

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
[$sel:lastModified:ProvisionedConcurrencyConfigListItem'] :: ProvisionedConcurrencyConfigListItem -> Maybe Text

-- | Create a value of <a>ProvisionedConcurrencyConfigListItem</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_status</a> - The status of the
--   allocation process.
--   
--   <a>$sel:functionArn:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_functionArn</a> - The Amazon
--   Resource Name (ARN) of the alias or version.
--   
--   
--   <a>$sel:requestedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_requestedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency requested.
--   
--   
--   <a>$sel:availableProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_availableProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency available.
--   
--   <a>$sel:statusReason:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_statusReason</a> - For failed
--   allocations, the reason that provisioned concurrency could not be
--   allocated.
--   
--   
--   <a>$sel:allocatedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_allocatedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency allocated.
--   
--   <a>$sel:lastModified:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_lastModified</a> - The date
--   and time that a user last updated the configuration, in <a>ISO 8601
--   format</a>.
newProvisionedConcurrencyConfigListItem :: ProvisionedConcurrencyConfigListItem

-- | The status of the allocation process.
provisionedConcurrencyConfigListItem_status :: Lens' ProvisionedConcurrencyConfigListItem (Maybe ProvisionedConcurrencyStatusEnum)

-- | The Amazon Resource Name (ARN) of the alias or version.
provisionedConcurrencyConfigListItem_functionArn :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The amount of provisioned concurrency requested.
provisionedConcurrencyConfigListItem_requestedProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | The amount of provisioned concurrency available.
provisionedConcurrencyConfigListItem_availableProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
provisionedConcurrencyConfigListItem_statusReason :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The amount of provisioned concurrency allocated.
provisionedConcurrencyConfigListItem_allocatedProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
provisionedConcurrencyConfigListItem_lastModified :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The self-managed Apache Kafka cluster for your event source.
--   
--   <i>See:</i> <a>newSelfManagedEventSource</a> smart constructor.
data SelfManagedEventSource
SelfManagedEventSource' :: Maybe (HashMap EndPointType (NonEmpty Text)) -> SelfManagedEventSource

-- | The list of bootstrap servers for your Kafka brokers in the following
--   format: <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
[$sel:endpoints:SelfManagedEventSource'] :: SelfManagedEventSource -> Maybe (HashMap EndPointType (NonEmpty Text))

-- | Create a value of <a>SelfManagedEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoints:SelfManagedEventSource'</a>,
--   <a>selfManagedEventSource_endpoints</a> - The list of bootstrap
--   servers for your Kafka brokers in the following format:
--   <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
newSelfManagedEventSource :: SelfManagedEventSource

-- | The list of bootstrap servers for your Kafka brokers in the following
--   format: <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
selfManagedEventSource_endpoints :: Lens' SelfManagedEventSource (Maybe (HashMap EndPointType (NonEmpty Text)))

-- | To secure and define access to your event source, you can specify the
--   authentication protocol, VPC components, or virtual host.
--   
--   <i>See:</i> <a>newSourceAccessConfiguration</a> smart constructor.
data SourceAccessConfiguration
SourceAccessConfiguration' :: Maybe Text -> Maybe SourceAccessType -> SourceAccessConfiguration

-- | The value for your chosen configuration in <tt>Type</tt>. For example:
--   <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
[$sel:uri:SourceAccessConfiguration'] :: SourceAccessConfiguration -> Maybe Text

-- | The type of authentication protocol, VPC components, or virtual host
--   for your event source. For example:
--   <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
[$sel:type':SourceAccessConfiguration'] :: SourceAccessConfiguration -> Maybe SourceAccessType

-- | Create a value of <a>SourceAccessConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:SourceAccessConfiguration'</a>,
--   <a>sourceAccessConfiguration_uri</a> - The value for your chosen
--   configuration in <tt>Type</tt>. For example: <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
--   
--   <a>$sel:type':SourceAccessConfiguration'</a>,
--   <a>sourceAccessConfiguration_type</a> - The type of authentication
--   protocol, VPC components, or virtual host for your event source. For
--   example: <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
newSourceAccessConfiguration :: SourceAccessConfiguration

-- | The value for your chosen configuration in <tt>Type</tt>. For example:
--   <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
sourceAccessConfiguration_uri :: Lens' SourceAccessConfiguration (Maybe Text)

-- | The type of authentication protocol, VPC components, or virtual host
--   for your event source. For example:
--   <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
sourceAccessConfiguration_type :: Lens' SourceAccessConfiguration (Maybe SourceAccessType)

-- | The function's <a>X-Ray</a> tracing configuration. To sample and
--   record incoming requests, set <tt>Mode</tt> to <tt>Active</tt>.
--   
--   <i>See:</i> <a>newTracingConfig</a> smart constructor.
data TracingConfig
TracingConfig' :: Maybe TracingMode -> TracingConfig

-- | The tracing mode.
[$sel:mode:TracingConfig'] :: TracingConfig -> Maybe TracingMode

-- | Create a value of <a>TracingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:TracingConfig'</a>, <a>tracingConfig_mode</a> - The
--   tracing mode.
newTracingConfig :: TracingConfig

-- | The tracing mode.
tracingConfig_mode :: Lens' TracingConfig (Maybe TracingMode)

-- | The function's X-Ray tracing configuration.
--   
--   <i>See:</i> <a>newTracingConfigResponse</a> smart constructor.
data TracingConfigResponse
TracingConfigResponse' :: Maybe TracingMode -> TracingConfigResponse

-- | The tracing mode.
[$sel:mode:TracingConfigResponse'] :: TracingConfigResponse -> Maybe TracingMode

-- | Create a value of <a>TracingConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:TracingConfigResponse'</a>,
--   <a>tracingConfigResponse_mode</a> - The tracing mode.
newTracingConfigResponse :: TracingConfigResponse

-- | The tracing mode.
tracingConfigResponse_mode :: Lens' TracingConfigResponse (Maybe TracingMode)

-- | The VPC security groups and subnets that are attached to a Lambda
--   function. For more information, see <a>VPC Settings</a>.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe [Text] -> VpcConfig

-- | A list of VPC security groups IDs.
[$sel:securityGroupIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | A list of VPC subnet IDs.
[$sel:subnetIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - A list of VPC security groups IDs.
--   
--   <a>$sel:subnetIds:VpcConfig'</a>, <a>vpcConfig_subnetIds</a> - A list
--   of VPC subnet IDs.
newVpcConfig :: VpcConfig

-- | A list of VPC security groups IDs.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | A list of VPC subnet IDs.
vpcConfig_subnetIds :: Lens' VpcConfig (Maybe [Text])

-- | The VPC security groups and subnets that are attached to a Lambda
--   function.
--   
--   <i>See:</i> <a>newVpcConfigResponse</a> smart constructor.
data VpcConfigResponse
VpcConfigResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> VpcConfigResponse

-- | A list of VPC security groups IDs.
[$sel:securityGroupIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | A list of VPC subnet IDs.
[$sel:subnetIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | The ID of the VPC.
[$sel:vpcId:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Text

-- | Create a value of <a>VpcConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_securityGroupIds</a> - A list of VPC security
--   groups IDs.
--   
--   <a>$sel:subnetIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_subnetIds</a> - A list of VPC subnet IDs.
--   
--   <a>$sel:vpcId:VpcConfigResponse'</a>, <a>vpcConfigResponse_vpcId</a> -
--   The ID of the VPC.
newVpcConfigResponse :: VpcConfigResponse

-- | A list of VPC security groups IDs.
vpcConfigResponse_securityGroupIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | A list of VPC subnet IDs.
vpcConfigResponse_subnetIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | The ID of the VPC.
vpcConfigResponse_vpcId :: Lens' VpcConfigResponse (Maybe Text)


-- | Adds <a>tags</a> to a function.
module Amazonka.Lambda.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The function's Amazon Resource Name (ARN).
[$sel:resource:TagResource'] :: TagResource -> Text

-- | A list of tags to apply to the function.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:TagResource'</a>, <a>tagResource_resource</a> - The
--   function's Amazon Resource Name (ARN).
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags to apply to the function.
newTagResource :: Text -> TagResource

-- | The function's Amazon Resource Name (ARN).
tagResource_resource :: Lens' TagResource Text

-- | A list of tags to apply to the function.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.Lambda.TagResource.TagResource
instance GHC.Show.Show Amazonka.Lambda.TagResource.TagResource
instance GHC.Read.Read Amazonka.Lambda.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.Lambda.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.Lambda.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.Lambda.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.Lambda.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.Lambda.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Lambda.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Lambda.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.TagResource.TagResource


-- | Revokes function-use permission from an Amazon Web Services service or
--   another account. You can get the ID of the statement from the output
--   of GetPolicy.
module Amazonka.Lambda.RemovePermission

-- | <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Maybe Text -> Maybe Text -> Text -> Text -> RemovePermission

-- | Specify a version or alias to remove permissions from a published
--   version of the function.
[$sel:qualifier:RemovePermission'] :: RemovePermission -> Maybe Text

-- | Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
[$sel:revisionId:RemovePermission'] :: RemovePermission -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:RemovePermission'] :: RemovePermission -> Text

-- | Statement ID of the permission to remove.
[$sel:statementId:RemovePermission'] :: RemovePermission -> Text

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:RemovePermission'</a>,
--   <a>removePermission_qualifier</a> - Specify a version or alias to
--   remove permissions from a published version of the function.
--   
--   <a>$sel:revisionId:RemovePermission'</a>,
--   <a>removePermission_revisionId</a> - Only update the policy if the
--   revision ID matches the ID that's specified. Use this option to avoid
--   modifying a policy that has changed since you last read it.
--   
--   <a>$sel:functionName:RemovePermission'</a>,
--   <a>removePermission_functionName</a> - The name of the Lambda
--   function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:statementId:RemovePermission'</a>,
--   <a>removePermission_statementId</a> - Statement ID of the permission
--   to remove.
newRemovePermission :: Text -> Text -> RemovePermission

-- | Specify a version or alias to remove permissions from a published
--   version of the function.
removePermission_qualifier :: Lens' RemovePermission (Maybe Text)

-- | Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
removePermission_revisionId :: Lens' RemovePermission (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
removePermission_functionName :: Lens' RemovePermission Text

-- | Statement ID of the permission to remove.
removePermission_statementId :: Lens' RemovePermission Text

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse
instance GHC.Generics.Generic Amazonka.Lambda.RemovePermission.RemovePermission
instance GHC.Show.Show Amazonka.Lambda.RemovePermission.RemovePermission
instance GHC.Read.Read Amazonka.Lambda.RemovePermission.RemovePermission
instance GHC.Classes.Eq Amazonka.Lambda.RemovePermission.RemovePermission
instance GHC.Generics.Generic Amazonka.Lambda.RemovePermission.RemovePermissionResponse
instance GHC.Show.Show Amazonka.Lambda.RemovePermission.RemovePermissionResponse
instance GHC.Read.Read Amazonka.Lambda.RemovePermission.RemovePermissionResponse
instance GHC.Classes.Eq Amazonka.Lambda.RemovePermission.RemovePermissionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Amazonka.Lambda.RemovePermission.RemovePermissionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Amazonka.Lambda.RemovePermission.RemovePermission
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.RemovePermission.RemovePermission
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.RemovePermission.RemovePermission
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.RemovePermission.RemovePermission


-- | Removes a statement from the permissions policy for a version of an
--   <a>Lambda layer</a>. For more information, see
--   AddLayerVersionPermission.
module Amazonka.Lambda.RemoveLayerVersionPermission

-- | <i>See:</i> <a>newRemoveLayerVersionPermission</a> smart constructor.
data RemoveLayerVersionPermission
RemoveLayerVersionPermission' :: Maybe Text -> Text -> Integer -> Text -> RemoveLayerVersionPermission

-- | Only update the policy if the revision ID matches the ID specified.
--   Use this option to avoid modifying a policy that has changed since you
--   last read it.
[$sel:revisionId:RemoveLayerVersionPermission'] :: RemoveLayerVersionPermission -> Maybe Text

-- | The name or Amazon Resource Name (ARN) of the layer.
[$sel:layerName:RemoveLayerVersionPermission'] :: RemoveLayerVersionPermission -> Text

-- | The version number.
[$sel:versionNumber:RemoveLayerVersionPermission'] :: RemoveLayerVersionPermission -> Integer

-- | The identifier that was specified when the statement was added.
[$sel:statementId:RemoveLayerVersionPermission'] :: RemoveLayerVersionPermission -> Text

-- | Create a value of <a>RemoveLayerVersionPermission</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_revisionId</a> - Only update the
--   policy if the revision ID matches the ID specified. Use this option to
--   avoid modifying a policy that has changed since you last read it.
--   
--   <a>$sel:layerName:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_layerName</a> - The name or Amazon
--   Resource Name (ARN) of the layer.
--   
--   <a>$sel:versionNumber:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_versionNumber</a> - The version
--   number.
--   
--   <a>$sel:statementId:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_statementId</a> - The identifier that
--   was specified when the statement was added.
newRemoveLayerVersionPermission :: Text -> Integer -> Text -> RemoveLayerVersionPermission

-- | Only update the policy if the revision ID matches the ID specified.
--   Use this option to avoid modifying a policy that has changed since you
--   last read it.
removeLayerVersionPermission_revisionId :: Lens' RemoveLayerVersionPermission (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the layer.
removeLayerVersionPermission_layerName :: Lens' RemoveLayerVersionPermission Text

-- | The version number.
removeLayerVersionPermission_versionNumber :: Lens' RemoveLayerVersionPermission Integer

-- | The identifier that was specified when the statement was added.
removeLayerVersionPermission_statementId :: Lens' RemoveLayerVersionPermission Text

-- | <i>See:</i> <a>newRemoveLayerVersionPermissionResponse</a> smart
--   constructor.
data RemoveLayerVersionPermissionResponse
RemoveLayerVersionPermissionResponse' :: RemoveLayerVersionPermissionResponse

-- | Create a value of <a>RemoveLayerVersionPermissionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemoveLayerVersionPermissionResponse :: RemoveLayerVersionPermissionResponse
instance GHC.Generics.Generic Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance GHC.Show.Show Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance GHC.Read.Read Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance GHC.Classes.Eq Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance GHC.Generics.Generic Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermissionResponse
instance GHC.Show.Show Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermissionResponse
instance GHC.Read.Read Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermissionResponse
instance GHC.Classes.Eq Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermissionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance Control.DeepSeq.NFData Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermissionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance Control.DeepSeq.NFData Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.RemoveLayerVersionPermission.RemoveLayerVersionPermission


-- | Adds a provisioned concurrency configuration to a function's alias or
--   version.
module Amazonka.Lambda.PutProvisionedConcurrencyConfig

-- | <i>See:</i> <a>newPutProvisionedConcurrencyConfig</a> smart
--   constructor.
data PutProvisionedConcurrencyConfig
PutProvisionedConcurrencyConfig' :: Text -> Text -> Natural -> PutProvisionedConcurrencyConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:PutProvisionedConcurrencyConfig'] :: PutProvisionedConcurrencyConfig -> Text

-- | The version number or alias name.
[$sel:qualifier:PutProvisionedConcurrencyConfig'] :: PutProvisionedConcurrencyConfig -> Text

-- | The amount of provisioned concurrency to allocate for the version or
--   alias.
[$sel:provisionedConcurrentExecutions:PutProvisionedConcurrencyConfig'] :: PutProvisionedConcurrencyConfig -> Natural

-- | Create a value of <a>PutProvisionedConcurrencyConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:PutProvisionedConcurrencyConfig'</a>,
--   <a>putProvisionedConcurrencyConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:qualifier:PutProvisionedConcurrencyConfig'</a>,
--   <a>putProvisionedConcurrencyConfig_qualifier</a> - The version number
--   or alias name.
--   
--   
--   <a>$sel:provisionedConcurrentExecutions:PutProvisionedConcurrencyConfig'</a>,
--   <a>putProvisionedConcurrencyConfig_provisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency to allocate for the version or
--   alias.
newPutProvisionedConcurrencyConfig :: Text -> Text -> Natural -> PutProvisionedConcurrencyConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putProvisionedConcurrencyConfig_functionName :: Lens' PutProvisionedConcurrencyConfig Text

-- | The version number or alias name.
putProvisionedConcurrencyConfig_qualifier :: Lens' PutProvisionedConcurrencyConfig Text

-- | The amount of provisioned concurrency to allocate for the version or
--   alias.
putProvisionedConcurrencyConfig_provisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfig Natural

-- | <i>See:</i> <a>newPutProvisionedConcurrencyConfigResponse</a> smart
--   constructor.
data PutProvisionedConcurrencyConfigResponse
PutProvisionedConcurrencyConfigResponse' :: Maybe ProvisionedConcurrencyStatusEnum -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> Int -> PutProvisionedConcurrencyConfigResponse

-- | The status of the allocation process.
[$sel:status:PutProvisionedConcurrencyConfigResponse'] :: PutProvisionedConcurrencyConfigResponse -> Maybe ProvisionedConcurrencyStatusEnum

-- | The amount of provisioned concurrency requested.
[$sel:requestedProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'] :: PutProvisionedConcurrencyConfigResponse -> Maybe Natural

-- | The amount of provisioned concurrency available.
[$sel:availableProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'] :: PutProvisionedConcurrencyConfigResponse -> Maybe Natural

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
[$sel:statusReason:PutProvisionedConcurrencyConfigResponse'] :: PutProvisionedConcurrencyConfigResponse -> Maybe Text

-- | The amount of provisioned concurrency allocated.
[$sel:allocatedProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'] :: PutProvisionedConcurrencyConfigResponse -> Maybe Natural

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
[$sel:lastModified:PutProvisionedConcurrencyConfigResponse'] :: PutProvisionedConcurrencyConfigResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutProvisionedConcurrencyConfigResponse'] :: PutProvisionedConcurrencyConfigResponse -> Int

-- | Create a value of <a>PutProvisionedConcurrencyConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_status</a> - The status of
--   the allocation process.
--   
--   
--   <a>$sel:requestedProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency requested.
--   
--   
--   <a>$sel:availableProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency available.
--   
--   <a>$sel:statusReason:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_statusReason</a> - For
--   failed allocations, the reason that provisioned concurrency could not
--   be allocated.
--   
--   
--   <a>$sel:allocatedProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency allocated.
--   
--   <a>$sel:lastModified:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_lastModified</a> - The date
--   and time that a user last updated the configuration, in <a>ISO 8601
--   format</a>.
--   
--   <a>$sel:httpStatus:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_httpStatus</a> - The
--   response's http status code.
newPutProvisionedConcurrencyConfigResponse :: Int -> PutProvisionedConcurrencyConfigResponse

-- | The status of the allocation process.
putProvisionedConcurrencyConfigResponse_status :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe ProvisionedConcurrencyStatusEnum)

-- | The amount of provisioned concurrency requested.
putProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The amount of provisioned concurrency available.
putProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
putProvisionedConcurrencyConfigResponse_statusReason :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The amount of provisioned concurrency allocated.
putProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
putProvisionedConcurrencyConfigResponse_lastModified :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The response's http status code.
putProvisionedConcurrencyConfigResponse_httpStatus :: Lens' PutProvisionedConcurrencyConfigResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance GHC.Show.Show Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance GHC.Read.Read Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance GHC.Classes.Eq Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance GHC.Generics.Generic Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfigResponse
instance GHC.Show.Show Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfigResponse
instance GHC.Read.Read Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.PutProvisionedConcurrencyConfig.PutProvisionedConcurrencyConfig


-- | Configures options for <a>asynchronous invocation</a> on a function,
--   version, or alias. If a configuration already exists for a function,
--   version, or alias, this operation overwrites it. If you exclude any
--   settings, they are removed. To set one option without affecting
--   existing settings for other options, use
--   UpdateFunctionEventInvokeConfig.
--   
--   By default, Lambda retries an asynchronous invocation twice if the
--   function returns an error. It retains events in a queue for up to six
--   hours. When an event fails all processing attempts or stays in the
--   asynchronous invocation queue for too long, Lambda discards it. To
--   retain discarded events, configure a dead-letter queue with
--   UpdateFunctionConfiguration.
--   
--   To send an invocation record to a queue, topic, function, or event
--   bus, specify a <a>destination</a>. You can configure separate
--   destinations for successful invocations (on-success) and events that
--   fail all processing attempts (on-failure). You can configure
--   destinations in addition to or instead of a dead-letter queue.
module Amazonka.Lambda.PutFunctionEventInvokeConfig

-- | <i>See:</i> <a>newPutFunctionEventInvokeConfig</a> smart constructor.
data PutFunctionEventInvokeConfig
PutFunctionEventInvokeConfig' :: Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe DestinationConfig -> Text -> PutFunctionEventInvokeConfig

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
[$sel:maximumEventAgeInSeconds:PutFunctionEventInvokeConfig'] :: PutFunctionEventInvokeConfig -> Maybe Natural

-- | The maximum number of times to retry when the function returns an
--   error.
[$sel:maximumRetryAttempts:PutFunctionEventInvokeConfig'] :: PutFunctionEventInvokeConfig -> Maybe Natural

-- | A version number or alias name.
[$sel:qualifier:PutFunctionEventInvokeConfig'] :: PutFunctionEventInvokeConfig -> Maybe Text

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
[$sel:destinationConfig:PutFunctionEventInvokeConfig'] :: PutFunctionEventInvokeConfig -> Maybe DestinationConfig

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:PutFunctionEventInvokeConfig'] :: PutFunctionEventInvokeConfig -> Text

-- | Create a value of <a>PutFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumEventAgeInSeconds:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:qualifier:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:destinationConfig:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_destinationConfig</a> - A destination
--   for events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
--   
--   <a>$sel:functionName:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newPutFunctionEventInvokeConfig :: Text -> PutFunctionEventInvokeConfig

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
putFunctionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' PutFunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
putFunctionEventInvokeConfig_maximumRetryAttempts :: Lens' PutFunctionEventInvokeConfig (Maybe Natural)

-- | A version number or alias name.
putFunctionEventInvokeConfig_qualifier :: Lens' PutFunctionEventInvokeConfig (Maybe Text)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
putFunctionEventInvokeConfig_destinationConfig :: Lens' PutFunctionEventInvokeConfig (Maybe DestinationConfig)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
putFunctionEventInvokeConfig_functionName :: Lens' PutFunctionEventInvokeConfig Text

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
[$sel:functionArn:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Text

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
[$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The maximum number of times to retry when the function returns an
--   error.
[$sel:maximumRetryAttempts:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The date and time that the configuration was last updated.
[$sel:lastModified:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe POSIX

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
[$sel:destinationConfig:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe DestinationConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)
instance GHC.Generics.Generic Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance GHC.Show.Show Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance GHC.Read.Read Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance GHC.Classes.Eq Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance Amazonka.Types.AWSRequest Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.PutFunctionEventInvokeConfig.PutFunctionEventInvokeConfig


-- | Sets the maximum number of simultaneous executions for a function, and
--   reserves capacity for that concurrency level.
--   
--   Concurrency settings apply to the function as a whole, including all
--   published versions and the unpublished version. Reserving concurrency
--   both ensures that your function has capacity to process the specified
--   number of events simultaneously, and prevents it from scaling beyond
--   that level. Use GetFunction to see the current setting for a function.
--   
--   Use GetAccountSettings to see your Regional concurrency limit. You can
--   reserve concurrency for as many functions as you like, as long as you
--   leave at least 100 simultaneous executions unreserved for functions
--   that aren't configured with a per-function limit. For more
--   information, see <a>Managing Concurrency</a>.
module Amazonka.Lambda.PutFunctionConcurrency

-- | <i>See:</i> <a>newPutFunctionConcurrency</a> smart constructor.
data PutFunctionConcurrency
PutFunctionConcurrency' :: Text -> Natural -> PutFunctionConcurrency

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:PutFunctionConcurrency'] :: PutFunctionConcurrency -> Text

-- | The number of simultaneous executions to reserve for the function.
[$sel:reservedConcurrentExecutions:PutFunctionConcurrency'] :: PutFunctionConcurrency -> Natural

-- | Create a value of <a>PutFunctionConcurrency</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:PutFunctionConcurrency'</a>,
--   <a>putFunctionConcurrency_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:reservedConcurrentExecutions:PutFunctionConcurrency'</a>,
--   <a>putFunctionConcurrency_reservedConcurrentExecutions</a> - The
--   number of simultaneous executions to reserve for the function.
newPutFunctionConcurrency :: Text -> Natural -> PutFunctionConcurrency

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putFunctionConcurrency_functionName :: Lens' PutFunctionConcurrency Text

-- | The number of simultaneous executions to reserve for the function.
putFunctionConcurrency_reservedConcurrentExecutions :: Lens' PutFunctionConcurrency Natural

-- | <i>See:</i> <a>newConcurrency</a> smart constructor.
data Concurrency
Concurrency' :: Maybe Natural -> Concurrency

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
[$sel:reservedConcurrentExecutions:Concurrency'] :: Concurrency -> Maybe Natural

-- | Create a value of <a>Concurrency</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedConcurrentExecutions:Concurrency'</a>,
--   <a>concurrency_reservedConcurrentExecutions</a> - The number of
--   concurrent executions that are reserved for this function. For more
--   information, see <a>Managing Concurrency</a>.
newConcurrency :: Concurrency

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
concurrency_reservedConcurrentExecutions :: Lens' Concurrency (Maybe Natural)
instance GHC.Generics.Generic Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance GHC.Show.Show Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance GHC.Read.Read Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance GHC.Classes.Eq Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance Amazonka.Types.AWSRequest Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance Data.Hashable.Class.Hashable Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance Control.DeepSeq.NFData Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.PutFunctionConcurrency.PutFunctionConcurrency


-- | Update the code signing configuration for the function. Changes to the
--   code signing configuration take effect the next time a user tries to
--   deploy a code package to the function.
module Amazonka.Lambda.PutFunctionCodeSigningConfig

-- | <i>See:</i> <a>newPutFunctionCodeSigningConfig</a> smart constructor.
data PutFunctionCodeSigningConfig
PutFunctionCodeSigningConfig' :: Text -> Text -> PutFunctionCodeSigningConfig

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
[$sel:codeSigningConfigArn:PutFunctionCodeSigningConfig'] :: PutFunctionCodeSigningConfig -> Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:PutFunctionCodeSigningConfig'] :: PutFunctionCodeSigningConfig -> Text

-- | Create a value of <a>PutFunctionCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigArn:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfig_codeSigningConfigArn</a> - The The
--   Amazon Resource Name (ARN) of the code signing configuration.
--   
--   <a>$sel:functionName:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newPutFunctionCodeSigningConfig :: Text -> Text -> PutFunctionCodeSigningConfig

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
putFunctionCodeSigningConfig_codeSigningConfigArn :: Lens' PutFunctionCodeSigningConfig Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putFunctionCodeSigningConfig_functionName :: Lens' PutFunctionCodeSigningConfig Text

-- | <i>See:</i> <a>newPutFunctionCodeSigningConfigResponse</a> smart
--   constructor.
data PutFunctionCodeSigningConfigResponse
PutFunctionCodeSigningConfigResponse' :: Int -> Text -> Text -> PutFunctionCodeSigningConfigResponse

-- | The response's http status code.
[$sel:httpStatus:PutFunctionCodeSigningConfigResponse'] :: PutFunctionCodeSigningConfigResponse -> Int

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
[$sel:codeSigningConfigArn:PutFunctionCodeSigningConfigResponse'] :: PutFunctionCodeSigningConfigResponse -> Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:PutFunctionCodeSigningConfigResponse'] :: PutFunctionCodeSigningConfigResponse -> Text

-- | Create a value of <a>PutFunctionCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutFunctionCodeSigningConfigResponse'</a>,
--   <a>putFunctionCodeSigningConfigResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:codeSigningConfigArn:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfigResponse_codeSigningConfigArn</a> - The
--   The Amazon Resource Name (ARN) of the code signing configuration.
--   
--   <a>$sel:functionName:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfigResponse_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newPutFunctionCodeSigningConfigResponse :: Int -> Text -> Text -> PutFunctionCodeSigningConfigResponse

-- | The response's http status code.
putFunctionCodeSigningConfigResponse_httpStatus :: Lens' PutFunctionCodeSigningConfigResponse Int

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
putFunctionCodeSigningConfigResponse_codeSigningConfigArn :: Lens' PutFunctionCodeSigningConfigResponse Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putFunctionCodeSigningConfigResponse_functionName :: Lens' PutFunctionCodeSigningConfigResponse Text
instance GHC.Generics.Generic Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.PutFunctionCodeSigningConfig.PutFunctionCodeSigningConfig


-- | Creates a <a>version</a> from the current code and configuration of a
--   function. Use versions to create a snapshot of your function code and
--   configuration that doesn't change.
--   
--   Lambda doesn't publish a version if the function's configuration and
--   code haven't changed since the last version. Use UpdateFunctionCode or
--   UpdateFunctionConfiguration to update the function before publishing a
--   version.
--   
--   Clients can invoke versions directly or with an alias. To create an
--   alias, use CreateAlias.
module Amazonka.Lambda.PublishVersion

-- | <i>See:</i> <a>newPublishVersion</a> smart constructor.
data PublishVersion
PublishVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> PublishVersion

-- | Only publish a version if the hash value matches the value that's
--   specified. Use this option to avoid publishing a version if the
--   function code has changed since you last updated it. You can get the
--   hash for the version that you uploaded from the output of
--   UpdateFunctionCode.
[$sel:codeSha256:PublishVersion'] :: PublishVersion -> Maybe Text

-- | A description for the version to override the description in the
--   function configuration.
[$sel:description:PublishVersion'] :: PublishVersion -> Maybe Text

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid publishing a version if the
--   function configuration has changed since you last updated it.
[$sel:revisionId:PublishVersion'] :: PublishVersion -> Maybe Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:PublishVersion'] :: PublishVersion -> Text

-- | Create a value of <a>PublishVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSha256:PublishVersion'</a>,
--   <a>publishVersion_codeSha256</a> - Only publish a version if the hash
--   value matches the value that's specified. Use this option to avoid
--   publishing a version if the function code has changed since you last
--   updated it. You can get the hash for the version that you uploaded
--   from the output of UpdateFunctionCode.
--   
--   <a>$sel:description:PublishVersion'</a>,
--   <a>publishVersion_description</a> - A description for the version to
--   override the description in the function configuration.
--   
--   <a>$sel:revisionId:PublishVersion'</a>,
--   <a>publishVersion_revisionId</a> - Only update the function if the
--   revision ID matches the ID that's specified. Use this option to avoid
--   publishing a version if the function configuration has changed since
--   you last updated it.
--   
--   <a>$sel:functionName:PublishVersion'</a>,
--   <a>publishVersion_functionName</a> - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newPublishVersion :: Text -> PublishVersion

-- | Only publish a version if the hash value matches the value that's
--   specified. Use this option to avoid publishing a version if the
--   function code has changed since you last updated it. You can get the
--   hash for the version that you uploaded from the output of
--   UpdateFunctionCode.
publishVersion_codeSha256 :: Lens' PublishVersion (Maybe Text)

-- | A description for the version to override the description in the
--   function configuration.
publishVersion_description :: Lens' PublishVersion (Maybe Text)

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid publishing a version if the
--   function configuration has changed since you last updated it.
publishVersion_revisionId :: Lens' PublishVersion (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
publishVersion_functionName :: Lens' PublishVersion Text

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | The amount of memory available to the function at runtime.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The runtime environment for the Lambda function.
[$sel:runtime:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Runtime

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
[$sel:state:FunctionConfiguration'] :: FunctionConfiguration -> Maybe State

-- | The ARN of the signing profile version.
[$sel:signingProfileVersionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
[$sel:lastUpdateStatus:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatus

-- | The function's Amazon Resource Name (ARN).
[$sel:functionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
[$sel:kmsKeyArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
[$sel:packageType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe PackageType

-- | Connection settings for an <a>Amazon EFS file system</a>.
[$sel:fileSystemConfigs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [FileSystemConfig]

-- | The function's <a>environment variables</a>.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EnvironmentResponse

-- | The function's dead letter queue.
[$sel:deadLetterConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
[$sel:architectures:FunctionConfiguration'] :: FunctionConfiguration -> Maybe (NonEmpty Architecture)

-- | The ARN of the signing job.
[$sel:signingJobArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's execution role.
[$sel:role':FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's networking configuration.
[$sel:vpcConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe VpcConfigResponse

-- | The version of the Lambda function.
[$sel:version:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The name of the function.
[$sel:functionName:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's <a>layers</a>.
[$sel:layers:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [Layer]

-- | The size of the function's deployment package, in bytes.
[$sel:codeSize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Integer

-- | The function that Lambda calls to begin executing your function.
[$sel:handler:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The reason for the last update that was performed on the function.
[$sel:lastUpdateStatusReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason for the function's current state.
[$sel:stateReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The SHA256 hash of the function's deployment package.
[$sel:codeSha256:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's X-Ray tracing configuration.
[$sel:tracingConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe TracingConfigResponse

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
[$sel:stateReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe StateReasonCode

-- | The function's image configuration values.
[$sel:imageConfigResponse:FunctionConfiguration'] :: FunctionConfiguration -> Maybe ImageConfigResponse

-- | The function's description.
[$sel:description:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason code for the last update that was performed on the
--   function.
[$sel:lastUpdateStatusReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatusReasonCode

-- | The latest updated revision of the function or alias.
[$sel:revisionId:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | For Lambda@Edge functions, the ARN of the master function.
[$sel:masterArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.PublishVersion.PublishVersion
instance GHC.Show.Show Amazonka.Lambda.PublishVersion.PublishVersion
instance GHC.Read.Read Amazonka.Lambda.PublishVersion.PublishVersion
instance GHC.Classes.Eq Amazonka.Lambda.PublishVersion.PublishVersion
instance Amazonka.Types.AWSRequest Amazonka.Lambda.PublishVersion.PublishVersion
instance Data.Hashable.Class.Hashable Amazonka.Lambda.PublishVersion.PublishVersion
instance Control.DeepSeq.NFData Amazonka.Lambda.PublishVersion.PublishVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.PublishVersion.PublishVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.PublishVersion.PublishVersion
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.PublishVersion.PublishVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.PublishVersion.PublishVersion


-- | Creates an <a>Lambda layer</a> from a ZIP archive. Each time you call
--   <tt>PublishLayerVersion</tt> with the same layer name, a new version
--   is created.
--   
--   Add layers to your function with CreateFunction or
--   UpdateFunctionConfiguration.
module Amazonka.Lambda.PublishLayerVersion

-- | <i>See:</i> <a>newPublishLayerVersion</a> smart constructor.
data PublishLayerVersion
PublishLayerVersion' :: Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe [Runtime] -> Text -> LayerVersionContentInput -> PublishLayerVersion

-- | The layer's software license. It can be any of the following:
--   
--   <ul>
--   <li>An <a>SPDX license identifier</a>. For example, <tt>MIT</tt>.</li>
--   <li>The URL of a license hosted on the internet. For example,
--   <tt>https://opensource.org/licenses/MIT</tt>.</li>
--   <li>The full text of the license.</li>
--   </ul>
[$sel:licenseInfo:PublishLayerVersion'] :: PublishLayerVersion -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:PublishLayerVersion'] :: PublishLayerVersion -> Maybe [Architecture]

-- | The description of the version.
[$sel:description:PublishLayerVersion'] :: PublishLayerVersion -> Maybe Text

-- | A list of compatible <a>function runtimes</a>. Used for filtering with
--   ListLayers and ListLayerVersions.
[$sel:compatibleRuntimes:PublishLayerVersion'] :: PublishLayerVersion -> Maybe [Runtime]

-- | The name or Amazon Resource Name (ARN) of the layer.
[$sel:layerName:PublishLayerVersion'] :: PublishLayerVersion -> Text

-- | The function layer archive.
[$sel:content:PublishLayerVersion'] :: PublishLayerVersion -> LayerVersionContentInput

-- | Create a value of <a>PublishLayerVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:licenseInfo:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_licenseInfo</a> - The layer's software license.
--   It can be any of the following:
--   
--   <ul>
--   <li>An <a>SPDX license identifier</a>. For example, <tt>MIT</tt>.</li>
--   <li>The URL of a license hosted on the internet. For example,
--   <tt>https://opensource.org/licenses/MIT</tt>.</li>
--   <li>The full text of the license.</li>
--   </ul>
--   
--   <a>$sel:compatibleArchitectures:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:description:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_compatibleRuntimes</a> - A list of compatible
--   <a>function runtimes</a>. Used for filtering with ListLayers and
--   ListLayerVersions.
--   
--   <a>$sel:layerName:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_layerName</a> - The name or Amazon Resource
--   Name (ARN) of the layer.
--   
--   <a>$sel:content:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_content</a> - The function layer archive.
newPublishLayerVersion :: Text -> LayerVersionContentInput -> PublishLayerVersion

-- | The layer's software license. It can be any of the following:
--   
--   <ul>
--   <li>An <a>SPDX license identifier</a>. For example, <tt>MIT</tt>.</li>
--   <li>The URL of a license hosted on the internet. For example,
--   <tt>https://opensource.org/licenses/MIT</tt>.</li>
--   <li>The full text of the license.</li>
--   </ul>
publishLayerVersion_licenseInfo :: Lens' PublishLayerVersion (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
publishLayerVersion_compatibleArchitectures :: Lens' PublishLayerVersion (Maybe [Architecture])

-- | The description of the version.
publishLayerVersion_description :: Lens' PublishLayerVersion (Maybe Text)

-- | A list of compatible <a>function runtimes</a>. Used for filtering with
--   ListLayers and ListLayerVersions.
publishLayerVersion_compatibleRuntimes :: Lens' PublishLayerVersion (Maybe [Runtime])

-- | The name or Amazon Resource Name (ARN) of the layer.
publishLayerVersion_layerName :: Lens' PublishLayerVersion Text

-- | The function layer archive.
publishLayerVersion_content :: Lens' PublishLayerVersion LayerVersionContentInput

-- | <i>See:</i> <a>newPublishLayerVersionResponse</a> smart constructor.
data PublishLayerVersionResponse
PublishLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> Int -> PublishLayerVersionResponse

-- | The ARN of the layer version.
[$sel:layerVersionArn:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe Text

-- | Details about the layer version.
[$sel:content:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe LayerVersionContentOutput

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:createdDate:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe Text

-- | The version number.
[$sel:version:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe Integer

-- | The layer's software license.
[$sel:licenseInfo:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe [Architecture]

-- | The ARN of the layer.
[$sel:layerArn:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe Text

-- | The description of the version.
[$sel:description:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe Text

-- | The layer's compatible runtimes.
[$sel:compatibleRuntimes:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Maybe [Runtime]

-- | The response's http status code.
[$sel:httpStatus:PublishLayerVersionResponse'] :: PublishLayerVersionResponse -> Int

-- | Create a value of <a>PublishLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_layerVersionArn</a> - The ARN of the
--   layer version.
--   
--   <a>$sel:content:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_createdDate</a> - The date that the
--   layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_description</a> - The description of
--   the version.
--   
--   <a>$sel:compatibleRuntimes:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
--   
--   <a>$sel:httpStatus:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_httpStatus</a> - The response's http
--   status code.
newPublishLayerVersionResponse :: Int -> PublishLayerVersionResponse

-- | The ARN of the layer version.
publishLayerVersionResponse_layerVersionArn :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
publishLayerVersionResponse_content :: Lens' PublishLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
publishLayerVersionResponse_createdDate :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | The version number.
publishLayerVersionResponse_version :: Lens' PublishLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
publishLayerVersionResponse_licenseInfo :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
publishLayerVersionResponse_compatibleArchitectures :: Lens' PublishLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
publishLayerVersionResponse_layerArn :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | The description of the version.
publishLayerVersionResponse_description :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
publishLayerVersionResponse_compatibleRuntimes :: Lens' PublishLayerVersionResponse (Maybe [Runtime])

-- | The response's http status code.
publishLayerVersionResponse_httpStatus :: Lens' PublishLayerVersionResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance GHC.Show.Show Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance GHC.Classes.Eq Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance GHC.Generics.Generic Amazonka.Lambda.PublishLayerVersion.PublishLayerVersionResponse
instance GHC.Show.Show Amazonka.Lambda.PublishLayerVersion.PublishLayerVersionResponse
instance GHC.Read.Read Amazonka.Lambda.PublishLayerVersion.PublishLayerVersionResponse
instance GHC.Classes.Eq Amazonka.Lambda.PublishLayerVersion.PublishLayerVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance Control.DeepSeq.NFData Amazonka.Lambda.PublishLayerVersion.PublishLayerVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance Control.DeepSeq.NFData Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.PublishLayerVersion.PublishLayerVersion


-- | Returns a list of <a>versions</a>, with the version-specific
--   configuration of each. Lambda returns up to 50 versions per call.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListVersionsByFunction

-- | <i>See:</i> <a>newListVersionsByFunction</a> smart constructor.
data ListVersionsByFunction
ListVersionsByFunction' :: Maybe Text -> Maybe Natural -> Text -> ListVersionsByFunction

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
[$sel:marker:ListVersionsByFunction'] :: ListVersionsByFunction -> Maybe Text

-- | The maximum number of versions to return. Note that
--   <tt>ListVersionsByFunction</tt> returns a maximum of 50 items in each
--   response, even if you set the number higher.
[$sel:maxItems:ListVersionsByFunction'] :: ListVersionsByFunction -> Maybe Natural

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:ListVersionsByFunction'] :: ListVersionsByFunction -> Text

-- | Create a value of <a>ListVersionsByFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListVersionsByFunction'</a>,
--   <a>listVersionsByFunction_marker</a> - Specify the pagination token
--   that's returned by a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxItems:ListVersionsByFunction'</a>,
--   <a>listVersionsByFunction_maxItems</a> - The maximum number of
--   versions to return. Note that <tt>ListVersionsByFunction</tt> returns
--   a maximum of 50 items in each response, even if you set the number
--   higher.
--   
--   <a>$sel:functionName:ListVersionsByFunction'</a>,
--   <a>listVersionsByFunction_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListVersionsByFunction :: Text -> ListVersionsByFunction

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listVersionsByFunction_marker :: Lens' ListVersionsByFunction (Maybe Text)

-- | The maximum number of versions to return. Note that
--   <tt>ListVersionsByFunction</tt> returns a maximum of 50 items in each
--   response, even if you set the number higher.
listVersionsByFunction_maxItems :: Lens' ListVersionsByFunction (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listVersionsByFunction_functionName :: Lens' ListVersionsByFunction Text

-- | <i>See:</i> <a>newListVersionsByFunctionResponse</a> smart
--   constructor.
data ListVersionsByFunctionResponse
ListVersionsByFunctionResponse' :: Maybe [FunctionConfiguration] -> Maybe Text -> Int -> ListVersionsByFunctionResponse

-- | A list of Lambda function versions.
[$sel:versions:ListVersionsByFunctionResponse'] :: ListVersionsByFunctionResponse -> Maybe [FunctionConfiguration]

-- | The pagination token that's included if more results are available.
[$sel:nextMarker:ListVersionsByFunctionResponse'] :: ListVersionsByFunctionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListVersionsByFunctionResponse'] :: ListVersionsByFunctionResponse -> Int

-- | Create a value of <a>ListVersionsByFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versions:ListVersionsByFunctionResponse'</a>,
--   <a>listVersionsByFunctionResponse_versions</a> - A list of Lambda
--   function versions.
--   
--   <a>$sel:nextMarker:ListVersionsByFunctionResponse'</a>,
--   <a>listVersionsByFunctionResponse_nextMarker</a> - The pagination
--   token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListVersionsByFunctionResponse'</a>,
--   <a>listVersionsByFunctionResponse_httpStatus</a> - The response's http
--   status code.
newListVersionsByFunctionResponse :: Int -> ListVersionsByFunctionResponse

-- | A list of Lambda function versions.
listVersionsByFunctionResponse_versions :: Lens' ListVersionsByFunctionResponse (Maybe [FunctionConfiguration])

-- | The pagination token that's included if more results are available.
listVersionsByFunctionResponse_nextMarker :: Lens' ListVersionsByFunctionResponse (Maybe Text)

-- | The response's http status code.
listVersionsByFunctionResponse_httpStatus :: Lens' ListVersionsByFunctionResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance GHC.Show.Show Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance GHC.Read.Read Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance GHC.Classes.Eq Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance GHC.Generics.Generic Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunctionResponse
instance GHC.Show.Show Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunctionResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunctionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance Control.DeepSeq.NFData Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunctionResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance Control.DeepSeq.NFData Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListVersionsByFunction.ListVersionsByFunction


-- | Returns a function's <a>tags</a>. You can also view tags with
--   GetFunction.
module Amazonka.Lambda.ListTags

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Text -> ListTags

-- | The function's Amazon Resource Name (ARN). Note: Lambda does not
--   support adding tags to aliases or versions.
[$sel:resource:ListTags'] :: ListTags -> Text

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:ListTags'</a>, <a>listTags_resource</a> - The
--   function's Amazon Resource Name (ARN). Note: Lambda does not support
--   adding tags to aliases or versions.
newListTags :: Text -> ListTags

-- | The function's Amazon Resource Name (ARN). Note: Lambda does not
--   support adding tags to aliases or versions.
listTags_resource :: Lens' ListTags Text

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsResponse

-- | The function's tags.
[$sel:tags:ListTagsResponse'] :: ListTagsResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsResponse'] :: ListTagsResponse -> Int

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsResponse'</a>, <a>listTagsResponse_tags</a> - The
--   function's tags.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | The function's tags.
listTagsResponse_tags :: Lens' ListTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListTags.ListTags
instance GHC.Show.Show Amazonka.Lambda.ListTags.ListTags
instance GHC.Read.Read Amazonka.Lambda.ListTags.ListTags
instance GHC.Classes.Eq Amazonka.Lambda.ListTags.ListTags
instance GHC.Generics.Generic Amazonka.Lambda.ListTags.ListTagsResponse
instance GHC.Show.Show Amazonka.Lambda.ListTags.ListTagsResponse
instance GHC.Read.Read Amazonka.Lambda.ListTags.ListTagsResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListTags.ListTagsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListTags.ListTags
instance Control.DeepSeq.NFData Amazonka.Lambda.ListTags.ListTagsResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListTags.ListTags
instance Control.DeepSeq.NFData Amazonka.Lambda.ListTags.ListTags
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListTags.ListTags
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListTags.ListTags
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListTags.ListTags


-- | Retrieves a list of provisioned concurrency configurations for a
--   function.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListProvisionedConcurrencyConfigs

-- | <i>See:</i> <a>newListProvisionedConcurrencyConfigs</a> smart
--   constructor.
data ListProvisionedConcurrencyConfigs
ListProvisionedConcurrencyConfigs' :: Maybe Text -> Maybe Natural -> Text -> ListProvisionedConcurrencyConfigs

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
[$sel:marker:ListProvisionedConcurrencyConfigs'] :: ListProvisionedConcurrencyConfigs -> Maybe Text

-- | Specify a number to limit the number of configurations returned.
[$sel:maxItems:ListProvisionedConcurrencyConfigs'] :: ListProvisionedConcurrencyConfigs -> Maybe Natural

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:ListProvisionedConcurrencyConfigs'] :: ListProvisionedConcurrencyConfigs -> Text

-- | Create a value of <a>ListProvisionedConcurrencyConfigs</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListProvisionedConcurrencyConfigs'</a>,
--   <a>listProvisionedConcurrencyConfigs_marker</a> - Specify the
--   pagination token that's returned by a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxItems:ListProvisionedConcurrencyConfigs'</a>,
--   <a>listProvisionedConcurrencyConfigs_maxItems</a> - Specify a number
--   to limit the number of configurations returned.
--   
--   <a>$sel:functionName:ListProvisionedConcurrencyConfigs'</a>,
--   <a>listProvisionedConcurrencyConfigs_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListProvisionedConcurrencyConfigs :: Text -> ListProvisionedConcurrencyConfigs

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listProvisionedConcurrencyConfigs_marker :: Lens' ListProvisionedConcurrencyConfigs (Maybe Text)

-- | Specify a number to limit the number of configurations returned.
listProvisionedConcurrencyConfigs_maxItems :: Lens' ListProvisionedConcurrencyConfigs (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listProvisionedConcurrencyConfigs_functionName :: Lens' ListProvisionedConcurrencyConfigs Text

-- | <i>See:</i> <a>newListProvisionedConcurrencyConfigsResponse</a> smart
--   constructor.
data ListProvisionedConcurrencyConfigsResponse
ListProvisionedConcurrencyConfigsResponse' :: Maybe [ProvisionedConcurrencyConfigListItem] -> Maybe Text -> Int -> ListProvisionedConcurrencyConfigsResponse

-- | A list of provisioned concurrency configurations.
[$sel:provisionedConcurrencyConfigs:ListProvisionedConcurrencyConfigsResponse'] :: ListProvisionedConcurrencyConfigsResponse -> Maybe [ProvisionedConcurrencyConfigListItem]

-- | The pagination token that's included if more results are available.
[$sel:nextMarker:ListProvisionedConcurrencyConfigsResponse'] :: ListProvisionedConcurrencyConfigsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListProvisionedConcurrencyConfigsResponse'] :: ListProvisionedConcurrencyConfigsResponse -> Int

-- | Create a value of <a>ListProvisionedConcurrencyConfigsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:provisionedConcurrencyConfigs:ListProvisionedConcurrencyConfigsResponse'</a>,
--   <a>listProvisionedConcurrencyConfigsResponse_provisionedConcurrencyConfigs</a>
--   - A list of provisioned concurrency configurations.
--   
--   <a>$sel:nextMarker:ListProvisionedConcurrencyConfigsResponse'</a>,
--   <a>listProvisionedConcurrencyConfigsResponse_nextMarker</a> - The
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListProvisionedConcurrencyConfigsResponse'</a>,
--   <a>listProvisionedConcurrencyConfigsResponse_httpStatus</a> - The
--   response's http status code.
newListProvisionedConcurrencyConfigsResponse :: Int -> ListProvisionedConcurrencyConfigsResponse

-- | A list of provisioned concurrency configurations.
listProvisionedConcurrencyConfigsResponse_provisionedConcurrencyConfigs :: Lens' ListProvisionedConcurrencyConfigsResponse (Maybe [ProvisionedConcurrencyConfigListItem])

-- | The pagination token that's included if more results are available.
listProvisionedConcurrencyConfigsResponse_nextMarker :: Lens' ListProvisionedConcurrencyConfigsResponse (Maybe Text)

-- | The response's http status code.
listProvisionedConcurrencyConfigsResponse_httpStatus :: Lens' ListProvisionedConcurrencyConfigsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance GHC.Show.Show Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance GHC.Read.Read Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance GHC.Classes.Eq Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance GHC.Generics.Generic Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigsResponse
instance GHC.Show.Show Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigsResponse
instance GHC.Read.Read Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigsResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance Control.DeepSeq.NFData Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigsResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance Control.DeepSeq.NFData Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListProvisionedConcurrencyConfigs.ListProvisionedConcurrencyConfigs


-- | Lists <a>Lambda layers</a> and shows information about the latest
--   version of each. Specify a <a>runtime identifier</a> to list only
--   layers that indicate that they're compatible with that runtime.
--   Specify a compatible architecture to include only layers that are
--   compatible with that <a>instruction set architecture</a>.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListLayers

-- | <i>See:</i> <a>newListLayers</a> smart constructor.
data ListLayers
ListLayers' :: Maybe Runtime -> Maybe Text -> Maybe Natural -> Maybe Architecture -> ListLayers

-- | A runtime identifier. For example, <tt>go1.x</tt>.
[$sel:compatibleRuntime:ListLayers'] :: ListLayers -> Maybe Runtime

-- | A pagination token returned by a previous call.
[$sel:marker:ListLayers'] :: ListLayers -> Maybe Text

-- | The maximum number of layers to return.
[$sel:maxItems:ListLayers'] :: ListLayers -> Maybe Natural

-- | The compatible <a>instruction set architecture</a>.
[$sel:compatibleArchitecture:ListLayers'] :: ListLayers -> Maybe Architecture

-- | Create a value of <a>ListLayers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compatibleRuntime:ListLayers'</a>,
--   <a>listLayers_compatibleRuntime</a> - A runtime identifier. For
--   example, <tt>go1.x</tt>.
--   
--   <a>$sel:marker:ListLayers'</a>, <a>listLayers_marker</a> - A
--   pagination token returned by a previous call.
--   
--   <a>$sel:maxItems:ListLayers'</a>, <a>listLayers_maxItems</a> - The
--   maximum number of layers to return.
--   
--   <a>$sel:compatibleArchitecture:ListLayers'</a>,
--   <a>listLayers_compatibleArchitecture</a> - The compatible
--   <a>instruction set architecture</a>.
newListLayers :: ListLayers

-- | A runtime identifier. For example, <tt>go1.x</tt>.
listLayers_compatibleRuntime :: Lens' ListLayers (Maybe Runtime)

-- | A pagination token returned by a previous call.
listLayers_marker :: Lens' ListLayers (Maybe Text)

-- | The maximum number of layers to return.
listLayers_maxItems :: Lens' ListLayers (Maybe Natural)

-- | The compatible <a>instruction set architecture</a>.
listLayers_compatibleArchitecture :: Lens' ListLayers (Maybe Architecture)

-- | <i>See:</i> <a>newListLayersResponse</a> smart constructor.
data ListLayersResponse
ListLayersResponse' :: Maybe Text -> Maybe [LayersListItem] -> Int -> ListLayersResponse

-- | A pagination token returned when the response doesn't contain all
--   layers.
[$sel:nextMarker:ListLayersResponse'] :: ListLayersResponse -> Maybe Text

-- | A list of function layers.
[$sel:layers:ListLayersResponse'] :: ListLayersResponse -> Maybe [LayersListItem]

-- | The response's http status code.
[$sel:httpStatus:ListLayersResponse'] :: ListLayersResponse -> Int

-- | Create a value of <a>ListLayersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListLayersResponse'</a>,
--   <a>listLayersResponse_nextMarker</a> - A pagination token returned
--   when the response doesn't contain all layers.
--   
--   <a>$sel:layers:ListLayersResponse'</a>,
--   <a>listLayersResponse_layers</a> - A list of function layers.
--   
--   <a>$sel:httpStatus:ListLayersResponse'</a>,
--   <a>listLayersResponse_httpStatus</a> - The response's http status
--   code.
newListLayersResponse :: Int -> ListLayersResponse

-- | A pagination token returned when the response doesn't contain all
--   layers.
listLayersResponse_nextMarker :: Lens' ListLayersResponse (Maybe Text)

-- | A list of function layers.
listLayersResponse_layers :: Lens' ListLayersResponse (Maybe [LayersListItem])

-- | The response's http status code.
listLayersResponse_httpStatus :: Lens' ListLayersResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListLayers.ListLayers
instance GHC.Show.Show Amazonka.Lambda.ListLayers.ListLayers
instance GHC.Read.Read Amazonka.Lambda.ListLayers.ListLayers
instance GHC.Classes.Eq Amazonka.Lambda.ListLayers.ListLayers
instance GHC.Generics.Generic Amazonka.Lambda.ListLayers.ListLayersResponse
instance GHC.Show.Show Amazonka.Lambda.ListLayers.ListLayersResponse
instance GHC.Read.Read Amazonka.Lambda.ListLayers.ListLayersResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListLayers.ListLayersResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListLayers.ListLayers
instance Control.DeepSeq.NFData Amazonka.Lambda.ListLayers.ListLayersResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListLayers.ListLayers
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListLayers.ListLayers
instance Control.DeepSeq.NFData Amazonka.Lambda.ListLayers.ListLayers
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListLayers.ListLayers
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListLayers.ListLayers
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListLayers.ListLayers


-- | Lists the versions of an <a>Lambda layer</a>. Versions that have been
--   deleted aren't listed. Specify a <a>runtime identifier</a> to list
--   only versions that indicate that they're compatible with that runtime.
--   Specify a compatible architecture to include only layer versions that
--   are compatible with that architecture.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListLayerVersions

-- | <i>See:</i> <a>newListLayerVersions</a> smart constructor.
data ListLayerVersions
ListLayerVersions' :: Maybe Runtime -> Maybe Text -> Maybe Natural -> Maybe Architecture -> Text -> ListLayerVersions

-- | A runtime identifier. For example, <tt>go1.x</tt>.
[$sel:compatibleRuntime:ListLayerVersions'] :: ListLayerVersions -> Maybe Runtime

-- | A pagination token returned by a previous call.
[$sel:marker:ListLayerVersions'] :: ListLayerVersions -> Maybe Text

-- | The maximum number of versions to return.
[$sel:maxItems:ListLayerVersions'] :: ListLayerVersions -> Maybe Natural

-- | The compatible <a>instruction set architecture</a>.
[$sel:compatibleArchitecture:ListLayerVersions'] :: ListLayerVersions -> Maybe Architecture

-- | The name or Amazon Resource Name (ARN) of the layer.
[$sel:layerName:ListLayerVersions'] :: ListLayerVersions -> Text

-- | Create a value of <a>ListLayerVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compatibleRuntime:ListLayerVersions'</a>,
--   <a>listLayerVersions_compatibleRuntime</a> - A runtime identifier. For
--   example, <tt>go1.x</tt>.
--   
--   <a>$sel:marker:ListLayerVersions'</a>, <a>listLayerVersions_marker</a>
--   - A pagination token returned by a previous call.
--   
--   <a>$sel:maxItems:ListLayerVersions'</a>,
--   <a>listLayerVersions_maxItems</a> - The maximum number of versions to
--   return.
--   
--   <a>$sel:compatibleArchitecture:ListLayerVersions'</a>,
--   <a>listLayerVersions_compatibleArchitecture</a> - The compatible
--   <a>instruction set architecture</a>.
--   
--   <a>$sel:layerName:ListLayerVersions'</a>,
--   <a>listLayerVersions_layerName</a> - The name or Amazon Resource Name
--   (ARN) of the layer.
newListLayerVersions :: Text -> ListLayerVersions

-- | A runtime identifier. For example, <tt>go1.x</tt>.
listLayerVersions_compatibleRuntime :: Lens' ListLayerVersions (Maybe Runtime)

-- | A pagination token returned by a previous call.
listLayerVersions_marker :: Lens' ListLayerVersions (Maybe Text)

-- | The maximum number of versions to return.
listLayerVersions_maxItems :: Lens' ListLayerVersions (Maybe Natural)

-- | The compatible <a>instruction set architecture</a>.
listLayerVersions_compatibleArchitecture :: Lens' ListLayerVersions (Maybe Architecture)

-- | The name or Amazon Resource Name (ARN) of the layer.
listLayerVersions_layerName :: Lens' ListLayerVersions Text

-- | <i>See:</i> <a>newListLayerVersionsResponse</a> smart constructor.
data ListLayerVersionsResponse
ListLayerVersionsResponse' :: Maybe [LayerVersionsListItem] -> Maybe Text -> Int -> ListLayerVersionsResponse

-- | A list of versions.
[$sel:layerVersions:ListLayerVersionsResponse'] :: ListLayerVersionsResponse -> Maybe [LayerVersionsListItem]

-- | A pagination token returned when the response doesn't contain all
--   versions.
[$sel:nextMarker:ListLayerVersionsResponse'] :: ListLayerVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListLayerVersionsResponse'] :: ListLayerVersionsResponse -> Int

-- | Create a value of <a>ListLayerVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersions:ListLayerVersionsResponse'</a>,
--   <a>listLayerVersionsResponse_layerVersions</a> - A list of versions.
--   
--   <a>$sel:nextMarker:ListLayerVersionsResponse'</a>,
--   <a>listLayerVersionsResponse_nextMarker</a> - A pagination token
--   returned when the response doesn't contain all versions.
--   
--   <a>$sel:httpStatus:ListLayerVersionsResponse'</a>,
--   <a>listLayerVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListLayerVersionsResponse :: Int -> ListLayerVersionsResponse

-- | A list of versions.
listLayerVersionsResponse_layerVersions :: Lens' ListLayerVersionsResponse (Maybe [LayerVersionsListItem])

-- | A pagination token returned when the response doesn't contain all
--   versions.
listLayerVersionsResponse_nextMarker :: Lens' ListLayerVersionsResponse (Maybe Text)

-- | The response's http status code.
listLayerVersionsResponse_httpStatus :: Lens' ListLayerVersionsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance GHC.Show.Show Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance GHC.Read.Read Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance GHC.Classes.Eq Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance GHC.Generics.Generic Amazonka.Lambda.ListLayerVersions.ListLayerVersionsResponse
instance GHC.Show.Show Amazonka.Lambda.ListLayerVersions.ListLayerVersionsResponse
instance GHC.Read.Read Amazonka.Lambda.ListLayerVersions.ListLayerVersionsResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListLayerVersions.ListLayerVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance Control.DeepSeq.NFData Amazonka.Lambda.ListLayerVersions.ListLayerVersionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance Control.DeepSeq.NFData Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListLayerVersions.ListLayerVersions
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListLayerVersions.ListLayerVersions


-- | List the functions that use the specified code signing configuration.
--   You can use this method prior to deleting a code signing
--   configuration, to verify that no functions are using it.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListFunctionsByCodeSigningConfig

-- | <i>See:</i> <a>newListFunctionsByCodeSigningConfig</a> smart
--   constructor.
data ListFunctionsByCodeSigningConfig
ListFunctionsByCodeSigningConfig' :: Maybe Text -> Maybe Natural -> Text -> ListFunctionsByCodeSigningConfig

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
[$sel:marker:ListFunctionsByCodeSigningConfig'] :: ListFunctionsByCodeSigningConfig -> Maybe Text

-- | Maximum number of items to return.
[$sel:maxItems:ListFunctionsByCodeSigningConfig'] :: ListFunctionsByCodeSigningConfig -> Maybe Natural

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
[$sel:codeSigningConfigArn:ListFunctionsByCodeSigningConfig'] :: ListFunctionsByCodeSigningConfig -> Text

-- | Create a value of <a>ListFunctionsByCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListFunctionsByCodeSigningConfig'</a>,
--   <a>listFunctionsByCodeSigningConfig_marker</a> - Specify the
--   pagination token that's returned by a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxItems:ListFunctionsByCodeSigningConfig'</a>,
--   <a>listFunctionsByCodeSigningConfig_maxItems</a> - Maximum number of
--   items to return.
--   
--   <a>$sel:codeSigningConfigArn:ListFunctionsByCodeSigningConfig'</a>,
--   <a>listFunctionsByCodeSigningConfig_codeSigningConfigArn</a> - The The
--   Amazon Resource Name (ARN) of the code signing configuration.
newListFunctionsByCodeSigningConfig :: Text -> ListFunctionsByCodeSigningConfig

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listFunctionsByCodeSigningConfig_marker :: Lens' ListFunctionsByCodeSigningConfig (Maybe Text)

-- | Maximum number of items to return.
listFunctionsByCodeSigningConfig_maxItems :: Lens' ListFunctionsByCodeSigningConfig (Maybe Natural)

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
listFunctionsByCodeSigningConfig_codeSigningConfigArn :: Lens' ListFunctionsByCodeSigningConfig Text

-- | <i>See:</i> <a>newListFunctionsByCodeSigningConfigResponse</a> smart
--   constructor.
data ListFunctionsByCodeSigningConfigResponse
ListFunctionsByCodeSigningConfigResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListFunctionsByCodeSigningConfigResponse

-- | The function ARNs.
[$sel:functionArns:ListFunctionsByCodeSigningConfigResponse'] :: ListFunctionsByCodeSigningConfigResponse -> Maybe [Text]

-- | The pagination token that's included if more results are available.
[$sel:nextMarker:ListFunctionsByCodeSigningConfigResponse'] :: ListFunctionsByCodeSigningConfigResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFunctionsByCodeSigningConfigResponse'] :: ListFunctionsByCodeSigningConfigResponse -> Int

-- | Create a value of <a>ListFunctionsByCodeSigningConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArns:ListFunctionsByCodeSigningConfigResponse'</a>,
--   <a>listFunctionsByCodeSigningConfigResponse_functionArns</a> - The
--   function ARNs.
--   
--   <a>$sel:nextMarker:ListFunctionsByCodeSigningConfigResponse'</a>,
--   <a>listFunctionsByCodeSigningConfigResponse_nextMarker</a> - The
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListFunctionsByCodeSigningConfigResponse'</a>,
--   <a>listFunctionsByCodeSigningConfigResponse_httpStatus</a> - The
--   response's http status code.
newListFunctionsByCodeSigningConfigResponse :: Int -> ListFunctionsByCodeSigningConfigResponse

-- | The function ARNs.
listFunctionsByCodeSigningConfigResponse_functionArns :: Lens' ListFunctionsByCodeSigningConfigResponse (Maybe [Text])

-- | The pagination token that's included if more results are available.
listFunctionsByCodeSigningConfigResponse_nextMarker :: Lens' ListFunctionsByCodeSigningConfigResponse (Maybe Text)

-- | The response's http status code.
listFunctionsByCodeSigningConfigResponse_httpStatus :: Lens' ListFunctionsByCodeSigningConfigResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfigResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListFunctionsByCodeSigningConfig.ListFunctionsByCodeSigningConfig


-- | Returns a list of Lambda functions, with the version-specific
--   configuration of each. Lambda returns up to 50 functions per call.
--   
--   Set <tt>FunctionVersion</tt> to <tt>ALL</tt> to include all published
--   versions of each function in addition to the unpublished version.
--   
--   The <tt>ListFunctions</tt> action returns a subset of the
--   FunctionConfiguration fields. To get the additional fields (State,
--   StateReasonCode, StateReason, LastUpdateStatus,
--   LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or
--   version, use GetFunction.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListFunctions

-- | <i>See:</i> <a>newListFunctions</a> smart constructor.
data ListFunctions
ListFunctions' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe FunctionVersion -> ListFunctions

-- | For Lambda@Edge functions, the Amazon Web Services Region of the
--   master function. For example, <tt>us-east-1</tt> filters the list of
--   functions to only include Lambda@Edge functions replicated from a
--   master function in US East (N. Virginia). If specified, you must set
--   <tt>FunctionVersion</tt> to <tt>ALL</tt>.
[$sel:masterRegion:ListFunctions'] :: ListFunctions -> Maybe Text

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
[$sel:marker:ListFunctions'] :: ListFunctions -> Maybe Text

-- | The maximum number of functions to return in the response. Note that
--   <tt>ListFunctions</tt> returns a maximum of 50 items in each response,
--   even if you set the number higher.
[$sel:maxItems:ListFunctions'] :: ListFunctions -> Maybe Natural

-- | Set to <tt>ALL</tt> to include entries for all published versions of
--   each function.
[$sel:functionVersion:ListFunctions'] :: ListFunctions -> Maybe FunctionVersion

-- | Create a value of <a>ListFunctions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:masterRegion:ListFunctions'</a>,
--   <a>listFunctions_masterRegion</a> - For Lambda@Edge functions, the
--   Amazon Web Services Region of the master function. For example,
--   <tt>us-east-1</tt> filters the list of functions to only include
--   Lambda@Edge functions replicated from a master function in US East (N.
--   Virginia). If specified, you must set <tt>FunctionVersion</tt> to
--   <tt>ALL</tt>.
--   
--   <a>$sel:marker:ListFunctions'</a>, <a>listFunctions_marker</a> -
--   Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
--   
--   <a>$sel:maxItems:ListFunctions'</a>, <a>listFunctions_maxItems</a> -
--   The maximum number of functions to return in the response. Note that
--   <tt>ListFunctions</tt> returns a maximum of 50 items in each response,
--   even if you set the number higher.
--   
--   <a>$sel:functionVersion:ListFunctions'</a>,
--   <a>listFunctions_functionVersion</a> - Set to <tt>ALL</tt> to include
--   entries for all published versions of each function.
newListFunctions :: ListFunctions

-- | For Lambda@Edge functions, the Amazon Web Services Region of the
--   master function. For example, <tt>us-east-1</tt> filters the list of
--   functions to only include Lambda@Edge functions replicated from a
--   master function in US East (N. Virginia). If specified, you must set
--   <tt>FunctionVersion</tt> to <tt>ALL</tt>.
listFunctions_masterRegion :: Lens' ListFunctions (Maybe Text)

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listFunctions_marker :: Lens' ListFunctions (Maybe Text)

-- | The maximum number of functions to return in the response. Note that
--   <tt>ListFunctions</tt> returns a maximum of 50 items in each response,
--   even if you set the number higher.
listFunctions_maxItems :: Lens' ListFunctions (Maybe Natural)

-- | Set to <tt>ALL</tt> to include entries for all published versions of
--   each function.
listFunctions_functionVersion :: Lens' ListFunctions (Maybe FunctionVersion)

-- | A list of Lambda functions.
--   
--   <i>See:</i> <a>newListFunctionsResponse</a> smart constructor.
data ListFunctionsResponse
ListFunctionsResponse' :: Maybe Text -> Maybe [FunctionConfiguration] -> Int -> ListFunctionsResponse

-- | The pagination token that's included if more results are available.
[$sel:nextMarker:ListFunctionsResponse'] :: ListFunctionsResponse -> Maybe Text

-- | A list of Lambda functions.
[$sel:functions:ListFunctionsResponse'] :: ListFunctionsResponse -> Maybe [FunctionConfiguration]

-- | The response's http status code.
[$sel:httpStatus:ListFunctionsResponse'] :: ListFunctionsResponse -> Int

-- | Create a value of <a>ListFunctionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListFunctionsResponse'</a>,
--   <a>listFunctionsResponse_nextMarker</a> - The pagination token that's
--   included if more results are available.
--   
--   <a>$sel:functions:ListFunctionsResponse'</a>,
--   <a>listFunctionsResponse_functions</a> - A list of Lambda functions.
--   
--   <a>$sel:httpStatus:ListFunctionsResponse'</a>,
--   <a>listFunctionsResponse_httpStatus</a> - The response's http status
--   code.
newListFunctionsResponse :: Int -> ListFunctionsResponse

-- | The pagination token that's included if more results are available.
listFunctionsResponse_nextMarker :: Lens' ListFunctionsResponse (Maybe Text)

-- | A list of Lambda functions.
listFunctionsResponse_functions :: Lens' ListFunctionsResponse (Maybe [FunctionConfiguration])

-- | The response's http status code.
listFunctionsResponse_httpStatus :: Lens' ListFunctionsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListFunctions.ListFunctions
instance GHC.Show.Show Amazonka.Lambda.ListFunctions.ListFunctions
instance GHC.Read.Read Amazonka.Lambda.ListFunctions.ListFunctions
instance GHC.Classes.Eq Amazonka.Lambda.ListFunctions.ListFunctions
instance GHC.Generics.Generic Amazonka.Lambda.ListFunctions.ListFunctionsResponse
instance GHC.Show.Show Amazonka.Lambda.ListFunctions.ListFunctionsResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListFunctions.ListFunctionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListFunctions.ListFunctions
instance Control.DeepSeq.NFData Amazonka.Lambda.ListFunctions.ListFunctionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListFunctions.ListFunctions
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListFunctions.ListFunctions
instance Control.DeepSeq.NFData Amazonka.Lambda.ListFunctions.ListFunctions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListFunctions.ListFunctions
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListFunctions.ListFunctions
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListFunctions.ListFunctions


-- | Retrieves a list of configurations for asynchronous invocation for a
--   function.
--   
--   To configure options for asynchronous invocation, use
--   PutFunctionEventInvokeConfig.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListFunctionEventInvokeConfigs

-- | <i>See:</i> <a>newListFunctionEventInvokeConfigs</a> smart
--   constructor.
data ListFunctionEventInvokeConfigs
ListFunctionEventInvokeConfigs' :: Maybe Text -> Maybe Natural -> Text -> ListFunctionEventInvokeConfigs

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
[$sel:marker:ListFunctionEventInvokeConfigs'] :: ListFunctionEventInvokeConfigs -> Maybe Text

-- | The maximum number of configurations to return.
[$sel:maxItems:ListFunctionEventInvokeConfigs'] :: ListFunctionEventInvokeConfigs -> Maybe Natural

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:ListFunctionEventInvokeConfigs'] :: ListFunctionEventInvokeConfigs -> Text

-- | Create a value of <a>ListFunctionEventInvokeConfigs</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListFunctionEventInvokeConfigs'</a>,
--   <a>listFunctionEventInvokeConfigs_marker</a> - Specify the pagination
--   token that's returned by a previous request to retrieve the next page
--   of results.
--   
--   <a>$sel:maxItems:ListFunctionEventInvokeConfigs'</a>,
--   <a>listFunctionEventInvokeConfigs_maxItems</a> - The maximum number of
--   configurations to return.
--   
--   <a>$sel:functionName:ListFunctionEventInvokeConfigs'</a>,
--   <a>listFunctionEventInvokeConfigs_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListFunctionEventInvokeConfigs :: Text -> ListFunctionEventInvokeConfigs

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listFunctionEventInvokeConfigs_marker :: Lens' ListFunctionEventInvokeConfigs (Maybe Text)

-- | The maximum number of configurations to return.
listFunctionEventInvokeConfigs_maxItems :: Lens' ListFunctionEventInvokeConfigs (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listFunctionEventInvokeConfigs_functionName :: Lens' ListFunctionEventInvokeConfigs Text

-- | <i>See:</i> <a>newListFunctionEventInvokeConfigsResponse</a> smart
--   constructor.
data ListFunctionEventInvokeConfigsResponse
ListFunctionEventInvokeConfigsResponse' :: Maybe [FunctionEventInvokeConfig] -> Maybe Text -> Int -> ListFunctionEventInvokeConfigsResponse

-- | A list of configurations.
[$sel:functionEventInvokeConfigs:ListFunctionEventInvokeConfigsResponse'] :: ListFunctionEventInvokeConfigsResponse -> Maybe [FunctionEventInvokeConfig]

-- | The pagination token that's included if more results are available.
[$sel:nextMarker:ListFunctionEventInvokeConfigsResponse'] :: ListFunctionEventInvokeConfigsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFunctionEventInvokeConfigsResponse'] :: ListFunctionEventInvokeConfigsResponse -> Int

-- | Create a value of <a>ListFunctionEventInvokeConfigsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:functionEventInvokeConfigs:ListFunctionEventInvokeConfigsResponse'</a>,
--   <a>listFunctionEventInvokeConfigsResponse_functionEventInvokeConfigs</a>
--   - A list of configurations.
--   
--   <a>$sel:nextMarker:ListFunctionEventInvokeConfigsResponse'</a>,
--   <a>listFunctionEventInvokeConfigsResponse_nextMarker</a> - The
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListFunctionEventInvokeConfigsResponse'</a>,
--   <a>listFunctionEventInvokeConfigsResponse_httpStatus</a> - The
--   response's http status code.
newListFunctionEventInvokeConfigsResponse :: Int -> ListFunctionEventInvokeConfigsResponse

-- | A list of configurations.
listFunctionEventInvokeConfigsResponse_functionEventInvokeConfigs :: Lens' ListFunctionEventInvokeConfigsResponse (Maybe [FunctionEventInvokeConfig])

-- | The pagination token that's included if more results are available.
listFunctionEventInvokeConfigsResponse_nextMarker :: Lens' ListFunctionEventInvokeConfigsResponse (Maybe Text)

-- | The response's http status code.
listFunctionEventInvokeConfigsResponse_httpStatus :: Lens' ListFunctionEventInvokeConfigsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance GHC.Show.Show Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance GHC.Read.Read Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance GHC.Classes.Eq Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance GHC.Generics.Generic Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigsResponse
instance GHC.Show.Show Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigsResponse
instance GHC.Read.Read Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigsResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance Control.DeepSeq.NFData Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigsResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance Control.DeepSeq.NFData Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListFunctionEventInvokeConfigs.ListFunctionEventInvokeConfigs


-- | Lists event source mappings. Specify an <tt>EventSourceArn</tt> to
--   only show event source mappings for a single event source.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListEventSourceMappings

-- | <i>See:</i> <a>newListEventSourceMappings</a> smart constructor.
data ListEventSourceMappings
ListEventSourceMappings' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListEventSourceMappings

-- | The Amazon Resource Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
[$sel:eventSourceArn:ListEventSourceMappings'] :: ListEventSourceMappings -> Maybe Text

-- | A pagination token returned by a previous call.
[$sel:marker:ListEventSourceMappings'] :: ListEventSourceMappings -> Maybe Text

-- | The maximum number of event source mappings to return. Note that
--   ListEventSourceMappings returns a maximum of 100 items in each
--   response, even if you set the number higher.
[$sel:maxItems:ListEventSourceMappings'] :: ListEventSourceMappings -> Maybe Natural

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
[$sel:functionName:ListEventSourceMappings'] :: ListEventSourceMappings -> Maybe Text

-- | Create a value of <a>ListEventSourceMappings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_eventSourceArn</a> - The Amazon Resource
--   Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
--   
--   <a>$sel:marker:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_marker</a> - A pagination token returned by
--   a previous call.
--   
--   <a>$sel:maxItems:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_maxItems</a> - The maximum number of event
--   source mappings to return. Note that ListEventSourceMappings returns a
--   maximum of 100 items in each response, even if you set the number
--   higher.
--   
--   <a>$sel:functionName:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
newListEventSourceMappings :: ListEventSourceMappings

-- | The Amazon Resource Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
listEventSourceMappings_eventSourceArn :: Lens' ListEventSourceMappings (Maybe Text)

-- | A pagination token returned by a previous call.
listEventSourceMappings_marker :: Lens' ListEventSourceMappings (Maybe Text)

-- | The maximum number of event source mappings to return. Note that
--   ListEventSourceMappings returns a maximum of 100 items in each
--   response, even if you set the number higher.
listEventSourceMappings_maxItems :: Lens' ListEventSourceMappings (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
listEventSourceMappings_functionName :: Lens' ListEventSourceMappings (Maybe Text)

-- | <i>See:</i> <a>newListEventSourceMappingsResponse</a> smart
--   constructor.
data ListEventSourceMappingsResponse
ListEventSourceMappingsResponse' :: Maybe [EventSourceMappingConfiguration] -> Maybe Text -> Int -> ListEventSourceMappingsResponse

-- | A list of event source mappings.
[$sel:eventSourceMappings:ListEventSourceMappingsResponse'] :: ListEventSourceMappingsResponse -> Maybe [EventSourceMappingConfiguration]

-- | A pagination token that's returned when the response doesn't contain
--   all event source mappings.
[$sel:nextMarker:ListEventSourceMappingsResponse'] :: ListEventSourceMappingsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListEventSourceMappingsResponse'] :: ListEventSourceMappingsResponse -> Int

-- | Create a value of <a>ListEventSourceMappingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceMappings:ListEventSourceMappingsResponse'</a>,
--   <a>listEventSourceMappingsResponse_eventSourceMappings</a> - A list of
--   event source mappings.
--   
--   <a>$sel:nextMarker:ListEventSourceMappingsResponse'</a>,
--   <a>listEventSourceMappingsResponse_nextMarker</a> - A pagination token
--   that's returned when the response doesn't contain all event source
--   mappings.
--   
--   <a>$sel:httpStatus:ListEventSourceMappingsResponse'</a>,
--   <a>listEventSourceMappingsResponse_httpStatus</a> - The response's
--   http status code.
newListEventSourceMappingsResponse :: Int -> ListEventSourceMappingsResponse

-- | A list of event source mappings.
listEventSourceMappingsResponse_eventSourceMappings :: Lens' ListEventSourceMappingsResponse (Maybe [EventSourceMappingConfiguration])

-- | A pagination token that's returned when the response doesn't contain
--   all event source mappings.
listEventSourceMappingsResponse_nextMarker :: Lens' ListEventSourceMappingsResponse (Maybe Text)

-- | The response's http status code.
listEventSourceMappingsResponse_httpStatus :: Lens' ListEventSourceMappingsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance GHC.Show.Show Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance GHC.Read.Read Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance GHC.Classes.Eq Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance GHC.Generics.Generic Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappingsResponse
instance GHC.Show.Show Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappingsResponse
instance GHC.Read.Read Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappingsResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappingsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance Control.DeepSeq.NFData Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappingsResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance Control.DeepSeq.NFData Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListEventSourceMappings.ListEventSourceMappings


-- | Returns a list of <a>code signing configurations</a>. A request
--   returns up to 10,000 configurations per call. You can use the
--   <tt>MaxItems</tt> parameter to return fewer configurations per call.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListCodeSigningConfigs

-- | <i>See:</i> <a>newListCodeSigningConfigs</a> smart constructor.
data ListCodeSigningConfigs
ListCodeSigningConfigs' :: Maybe Text -> Maybe Natural -> ListCodeSigningConfigs

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
[$sel:marker:ListCodeSigningConfigs'] :: ListCodeSigningConfigs -> Maybe Text

-- | Maximum number of items to return.
[$sel:maxItems:ListCodeSigningConfigs'] :: ListCodeSigningConfigs -> Maybe Natural

-- | Create a value of <a>ListCodeSigningConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListCodeSigningConfigs'</a>,
--   <a>listCodeSigningConfigs_marker</a> - Specify the pagination token
--   that's returned by a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxItems:ListCodeSigningConfigs'</a>,
--   <a>listCodeSigningConfigs_maxItems</a> - Maximum number of items to
--   return.
newListCodeSigningConfigs :: ListCodeSigningConfigs

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listCodeSigningConfigs_marker :: Lens' ListCodeSigningConfigs (Maybe Text)

-- | Maximum number of items to return.
listCodeSigningConfigs_maxItems :: Lens' ListCodeSigningConfigs (Maybe Natural)

-- | <i>See:</i> <a>newListCodeSigningConfigsResponse</a> smart
--   constructor.
data ListCodeSigningConfigsResponse
ListCodeSigningConfigsResponse' :: Maybe [CodeSigningConfig] -> Maybe Text -> Int -> ListCodeSigningConfigsResponse

-- | The code signing configurations
[$sel:codeSigningConfigs:ListCodeSigningConfigsResponse'] :: ListCodeSigningConfigsResponse -> Maybe [CodeSigningConfig]

-- | The pagination token that's included if more results are available.
[$sel:nextMarker:ListCodeSigningConfigsResponse'] :: ListCodeSigningConfigsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListCodeSigningConfigsResponse'] :: ListCodeSigningConfigsResponse -> Int

-- | Create a value of <a>ListCodeSigningConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigs:ListCodeSigningConfigsResponse'</a>,
--   <a>listCodeSigningConfigsResponse_codeSigningConfigs</a> - The code
--   signing configurations
--   
--   <a>$sel:nextMarker:ListCodeSigningConfigsResponse'</a>,
--   <a>listCodeSigningConfigsResponse_nextMarker</a> - The pagination
--   token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListCodeSigningConfigsResponse'</a>,
--   <a>listCodeSigningConfigsResponse_httpStatus</a> - The response's http
--   status code.
newListCodeSigningConfigsResponse :: Int -> ListCodeSigningConfigsResponse

-- | The code signing configurations
listCodeSigningConfigsResponse_codeSigningConfigs :: Lens' ListCodeSigningConfigsResponse (Maybe [CodeSigningConfig])

-- | The pagination token that's included if more results are available.
listCodeSigningConfigsResponse_nextMarker :: Lens' ListCodeSigningConfigsResponse (Maybe Text)

-- | The response's http status code.
listCodeSigningConfigsResponse_httpStatus :: Lens' ListCodeSigningConfigsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance GHC.Show.Show Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance GHC.Read.Read Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance GHC.Classes.Eq Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance GHC.Generics.Generic Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigsResponse
instance GHC.Show.Show Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigsResponse
instance GHC.Read.Read Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigsResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance Control.DeepSeq.NFData Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigsResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance Control.DeepSeq.NFData Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListCodeSigningConfigs.ListCodeSigningConfigs


-- | Returns a list of <a>aliases</a> for a Lambda function.
--   
--   This operation returns paginated results.
module Amazonka.Lambda.ListAliases

-- | <i>See:</i> <a>newListAliases</a> smart constructor.
data ListAliases
ListAliases' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> ListAliases

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
[$sel:marker:ListAliases'] :: ListAliases -> Maybe Text

-- | Limit the number of aliases returned.
[$sel:maxItems:ListAliases'] :: ListAliases -> Maybe Natural

-- | Specify a function version to only list aliases that invoke that
--   version.
[$sel:functionVersion:ListAliases'] :: ListAliases -> Maybe Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:ListAliases'] :: ListAliases -> Text

-- | Create a value of <a>ListAliases</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListAliases'</a>, <a>listAliases_marker</a> - Specify
--   the pagination token that's returned by a previous request to retrieve
--   the next page of results.
--   
--   <a>$sel:maxItems:ListAliases'</a>, <a>listAliases_maxItems</a> - Limit
--   the number of aliases returned.
--   
--   <a>$sel:functionVersion:ListAliases'</a>,
--   <a>listAliases_functionVersion</a> - Specify a function version to
--   only list aliases that invoke that version.
--   
--   <a>$sel:functionName:ListAliases'</a>, <a>listAliases_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListAliases :: Text -> ListAliases

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listAliases_marker :: Lens' ListAliases (Maybe Text)

-- | Limit the number of aliases returned.
listAliases_maxItems :: Lens' ListAliases (Maybe Natural)

-- | Specify a function version to only list aliases that invoke that
--   version.
listAliases_functionVersion :: Lens' ListAliases (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listAliases_functionName :: Lens' ListAliases Text

-- | <i>See:</i> <a>newListAliasesResponse</a> smart constructor.
data ListAliasesResponse
ListAliasesResponse' :: Maybe [AliasConfiguration] -> Maybe Text -> Int -> ListAliasesResponse

-- | A list of aliases.
[$sel:aliases:ListAliasesResponse'] :: ListAliasesResponse -> Maybe [AliasConfiguration]

-- | The pagination token that's included if more results are available.
[$sel:nextMarker:ListAliasesResponse'] :: ListAliasesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAliasesResponse'] :: ListAliasesResponse -> Int

-- | Create a value of <a>ListAliasesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliases:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_aliases</a> - A list of aliases.
--   
--   <a>$sel:nextMarker:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_nextMarker</a> - The pagination token that's
--   included if more results are available.
--   
--   <a>$sel:httpStatus:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_httpStatus</a> - The response's http status
--   code.
newListAliasesResponse :: Int -> ListAliasesResponse

-- | A list of aliases.
listAliasesResponse_aliases :: Lens' ListAliasesResponse (Maybe [AliasConfiguration])

-- | The pagination token that's included if more results are available.
listAliasesResponse_nextMarker :: Lens' ListAliasesResponse (Maybe Text)

-- | The response's http status code.
listAliasesResponse_httpStatus :: Lens' ListAliasesResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.ListAliases.ListAliases
instance GHC.Show.Show Amazonka.Lambda.ListAliases.ListAliases
instance GHC.Read.Read Amazonka.Lambda.ListAliases.ListAliases
instance GHC.Classes.Eq Amazonka.Lambda.ListAliases.ListAliases
instance GHC.Generics.Generic Amazonka.Lambda.ListAliases.ListAliasesResponse
instance GHC.Show.Show Amazonka.Lambda.ListAliases.ListAliasesResponse
instance GHC.Read.Read Amazonka.Lambda.ListAliases.ListAliasesResponse
instance GHC.Classes.Eq Amazonka.Lambda.ListAliases.ListAliasesResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.ListAliases.ListAliases
instance Control.DeepSeq.NFData Amazonka.Lambda.ListAliases.ListAliasesResponse
instance Amazonka.Pager.AWSPager Amazonka.Lambda.ListAliases.ListAliases
instance Data.Hashable.Class.Hashable Amazonka.Lambda.ListAliases.ListAliases
instance Control.DeepSeq.NFData Amazonka.Lambda.ListAliases.ListAliases
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.ListAliases.ListAliases
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.ListAliases.ListAliases
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.ListAliases.ListAliases


-- | Invokes a Lambda function. You can invoke a function synchronously
--   (and wait for the response), or asynchronously. To invoke a function
--   asynchronously, set <tt>InvocationType</tt> to <tt>Event</tt>.
--   
--   For <a>synchronous invocation</a>, details about the function
--   response, including errors, are included in the response body and
--   headers. For either invocation type, you can find more information in
--   the <a>execution log</a> and <a>trace</a>.
--   
--   When an error occurs, your function may be invoked multiple times.
--   Retry behavior varies by error type, client, event source, and
--   invocation type. For example, if you invoke a function asynchronously
--   and it returns an error, Lambda executes the function up to two more
--   times. For more information, see <a>Retry Behavior</a>.
--   
--   For <a>asynchronous invocation</a>, Lambda adds events to a queue
--   before sending them to your function. If your function does not have
--   enough capacity to keep up with the queue, events may be lost.
--   Occasionally, your function may receive the same event multiple times,
--   even if no error occurs. To retain events that were not processed,
--   configure your function with a <a>dead-letter queue</a>.
--   
--   The status code in the API response doesn't reflect function errors.
--   Error codes are reserved for errors that prevent your function from
--   executing, such as permissions errors, <a>limit errors</a>, or issues
--   with your function's code and configuration. For example, Lambda
--   returns <tt>TooManyRequestsException</tt> if executing the function
--   would cause you to exceed a concurrency limit at either the account
--   level (<tt>ConcurrentInvocationLimitExceeded</tt>) or function level
--   (<tt>ReservedFunctionConcurrentInvocationLimitExceeded</tt>).
--   
--   For functions with a long timeout, your client might be disconnected
--   during synchronous invocation while it waits for a response. Configure
--   your HTTP client, SDK, firewall, proxy, or operating system to allow
--   for long connections with timeout or keep-alive settings.
--   
--   This operation requires permission for the
--   <a>lambda:InvokeFunction</a> action.
module Amazonka.Lambda.Invoke

-- | <i>See:</i> <a>newInvoke</a> smart constructor.
data Invoke
Invoke' :: Maybe InvocationType -> Maybe LogType -> Maybe Text -> Maybe Text -> Text -> ByteString -> Invoke

-- | Choose from the following options.
--   
--   <ul>
--   <li><tt>RequestResponse</tt> (default) - Invoke the function
--   synchronously. Keep the connection open until the function returns a
--   response or times out. The API response includes the function response
--   and additional data.</li>
--   <li><tt>Event</tt> - Invoke the function asynchronously. Send events
--   that fail multiple times to the function's dead-letter queue (if it's
--   configured). The API response only includes a status code.</li>
--   <li><tt>DryRun</tt> - Validate parameter values and verify that the
--   user or role has permission to invoke the function.</li>
--   </ul>
[$sel:invocationType:Invoke'] :: Invoke -> Maybe InvocationType

-- | Set to <tt>Tail</tt> to include the execution log in the response.
--   Applies to synchronously invoked functions only.
[$sel:logType:Invoke'] :: Invoke -> Maybe LogType

-- | Specify a version or alias to invoke a published version of the
--   function.
[$sel:qualifier:Invoke'] :: Invoke -> Maybe Text

-- | Up to 3583 bytes of base64-encoded data about the invoking client to
--   pass to the function in the context object.
[$sel:clientContext:Invoke'] :: Invoke -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:Invoke'] :: Invoke -> Text

-- | The JSON that you want to provide to your Lambda function as input.
[$sel:payload:Invoke'] :: Invoke -> ByteString

-- | Create a value of <a>Invoke</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invocationType:Invoke'</a>, <a>invoke_invocationType</a> -
--   Choose from the following options.
--   
--   <ul>
--   <li><tt>RequestResponse</tt> (default) - Invoke the function
--   synchronously. Keep the connection open until the function returns a
--   response or times out. The API response includes the function response
--   and additional data.</li>
--   <li><tt>Event</tt> - Invoke the function asynchronously. Send events
--   that fail multiple times to the function's dead-letter queue (if it's
--   configured). The API response only includes a status code.</li>
--   <li><tt>DryRun</tt> - Validate parameter values and verify that the
--   user or role has permission to invoke the function.</li>
--   </ul>
--   
--   <a>$sel:logType:Invoke'</a>, <a>invoke_logType</a> - Set to
--   <tt>Tail</tt> to include the execution log in the response. Applies to
--   synchronously invoked functions only.
--   
--   <a>$sel:qualifier:Invoke'</a>, <a>invoke_qualifier</a> - Specify a
--   version or alias to invoke a published version of the function.
--   
--   <a>$sel:clientContext:Invoke'</a>, <a>invoke_clientContext</a> - Up to
--   3583 bytes of base64-encoded data about the invoking client to pass to
--   the function in the context object.
--   
--   <a>$sel:functionName:Invoke'</a>, <a>invoke_functionName</a> - The
--   name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:payload:Invoke'</a>, <a>invoke_payload</a> - The JSON that you
--   want to provide to your Lambda function as input.
newInvoke :: Text -> ByteString -> Invoke

-- | Choose from the following options.
--   
--   <ul>
--   <li><tt>RequestResponse</tt> (default) - Invoke the function
--   synchronously. Keep the connection open until the function returns a
--   response or times out. The API response includes the function response
--   and additional data.</li>
--   <li><tt>Event</tt> - Invoke the function asynchronously. Send events
--   that fail multiple times to the function's dead-letter queue (if it's
--   configured). The API response only includes a status code.</li>
--   <li><tt>DryRun</tt> - Validate parameter values and verify that the
--   user or role has permission to invoke the function.</li>
--   </ul>
invoke_invocationType :: Lens' Invoke (Maybe InvocationType)

-- | Set to <tt>Tail</tt> to include the execution log in the response.
--   Applies to synchronously invoked functions only.
invoke_logType :: Lens' Invoke (Maybe LogType)

-- | Specify a version or alias to invoke a published version of the
--   function.
invoke_qualifier :: Lens' Invoke (Maybe Text)

-- | Up to 3583 bytes of base64-encoded data about the invoking client to
--   pass to the function in the context object.
invoke_clientContext :: Lens' Invoke (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
invoke_functionName :: Lens' Invoke Text

-- | The JSON that you want to provide to your Lambda function as input.
invoke_payload :: Lens' Invoke ByteString

-- | <i>See:</i> <a>newInvokeResponse</a> smart constructor.
data InvokeResponse
InvokeResponse' :: Maybe Text -> Maybe Text -> Maybe ByteString -> Maybe Text -> Int -> InvokeResponse

-- | If present, indicates that an error occurred during function
--   execution. Details about the error are included in the response
--   payload.
[$sel:functionError:InvokeResponse'] :: InvokeResponse -> Maybe Text

-- | The last 4 KB of the execution log, which is base64 encoded.
[$sel:logResult:InvokeResponse'] :: InvokeResponse -> Maybe Text

-- | The response from the function, or an error object.
[$sel:payload:InvokeResponse'] :: InvokeResponse -> Maybe ByteString

-- | The version of the function that executed. When you invoke a function
--   with an alias, this indicates which version the alias resolved to.
[$sel:executedVersion:InvokeResponse'] :: InvokeResponse -> Maybe Text

-- | The HTTP status code is in the 200 range for a successful request. For
--   the <tt>RequestResponse</tt> invocation type, this status code is 200.
--   For the <tt>Event</tt> invocation type, this status code is 202. For
--   the <tt>DryRun</tt> invocation type, the status code is 204.
[$sel:statusCode:InvokeResponse'] :: InvokeResponse -> Int

-- | Create a value of <a>InvokeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionError:InvokeResponse'</a>,
--   <a>invokeResponse_functionError</a> - If present, indicates that an
--   error occurred during function execution. Details about the error are
--   included in the response payload.
--   
--   <a>$sel:logResult:InvokeResponse'</a>, <a>invokeResponse_logResult</a>
--   - The last 4 KB of the execution log, which is base64 encoded.
--   
--   <a>$sel:payload:Invoke'</a>, <a>invokeResponse_payload</a> - The
--   response from the function, or an error object.
--   
--   <a>$sel:executedVersion:InvokeResponse'</a>,
--   <a>invokeResponse_executedVersion</a> - The version of the function
--   that executed. When you invoke a function with an alias, this
--   indicates which version the alias resolved to.
--   
--   <a>$sel:statusCode:InvokeResponse'</a>,
--   <a>invokeResponse_statusCode</a> - The HTTP status code is in the 200
--   range for a successful request. For the <tt>RequestResponse</tt>
--   invocation type, this status code is 200. For the <tt>Event</tt>
--   invocation type, this status code is 202. For the <tt>DryRun</tt>
--   invocation type, the status code is 204.
newInvokeResponse :: Int -> InvokeResponse

-- | If present, indicates that an error occurred during function
--   execution. Details about the error are included in the response
--   payload.
invokeResponse_functionError :: Lens' InvokeResponse (Maybe Text)

-- | The last 4 KB of the execution log, which is base64 encoded.
invokeResponse_logResult :: Lens' InvokeResponse (Maybe Text)

-- | The response from the function, or an error object.
invokeResponse_payload :: Lens' InvokeResponse (Maybe ByteString)

-- | The version of the function that executed. When you invoke a function
--   with an alias, this indicates which version the alias resolved to.
invokeResponse_executedVersion :: Lens' InvokeResponse (Maybe Text)

-- | The HTTP status code is in the 200 range for a successful request. For
--   the <tt>RequestResponse</tt> invocation type, this status code is 200.
--   For the <tt>Event</tt> invocation type, this status code is 202. For
--   the <tt>DryRun</tt> invocation type, the status code is 204.
invokeResponse_statusCode :: Lens' InvokeResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.Invoke.Invoke
instance GHC.Show.Show Amazonka.Lambda.Invoke.Invoke
instance GHC.Classes.Eq Amazonka.Lambda.Invoke.Invoke
instance GHC.Generics.Generic Amazonka.Lambda.Invoke.InvokeResponse
instance GHC.Show.Show Amazonka.Lambda.Invoke.InvokeResponse
instance GHC.Classes.Eq Amazonka.Lambda.Invoke.InvokeResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.Invoke.Invoke
instance Control.DeepSeq.NFData Amazonka.Lambda.Invoke.InvokeResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.Invoke.Invoke
instance Control.DeepSeq.NFData Amazonka.Lambda.Invoke.Invoke
instance Amazonka.Data.Body.ToBody Amazonka.Lambda.Invoke.Invoke
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.Invoke.Invoke
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.Invoke.Invoke
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.Invoke.Invoke


-- | Retrieves the provisioned concurrency configuration for a function's
--   alias or version.
module Amazonka.Lambda.GetProvisionedConcurrencyConfig

-- | <i>See:</i> <a>newGetProvisionedConcurrencyConfig</a> smart
--   constructor.
data GetProvisionedConcurrencyConfig
GetProvisionedConcurrencyConfig' :: Text -> Text -> GetProvisionedConcurrencyConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:GetProvisionedConcurrencyConfig'] :: GetProvisionedConcurrencyConfig -> Text

-- | The version number or alias name.
[$sel:qualifier:GetProvisionedConcurrencyConfig'] :: GetProvisionedConcurrencyConfig -> Text

-- | Create a value of <a>GetProvisionedConcurrencyConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetProvisionedConcurrencyConfig'</a>,
--   <a>getProvisionedConcurrencyConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:qualifier:GetProvisionedConcurrencyConfig'</a>,
--   <a>getProvisionedConcurrencyConfig_qualifier</a> - The version number
--   or alias name.
newGetProvisionedConcurrencyConfig :: Text -> Text -> GetProvisionedConcurrencyConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getProvisionedConcurrencyConfig_functionName :: Lens' GetProvisionedConcurrencyConfig Text

-- | The version number or alias name.
getProvisionedConcurrencyConfig_qualifier :: Lens' GetProvisionedConcurrencyConfig Text

-- | <i>See:</i> <a>newGetProvisionedConcurrencyConfigResponse</a> smart
--   constructor.
data GetProvisionedConcurrencyConfigResponse
GetProvisionedConcurrencyConfigResponse' :: Maybe ProvisionedConcurrencyStatusEnum -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> Int -> GetProvisionedConcurrencyConfigResponse

-- | The status of the allocation process.
[$sel:status:GetProvisionedConcurrencyConfigResponse'] :: GetProvisionedConcurrencyConfigResponse -> Maybe ProvisionedConcurrencyStatusEnum

-- | The amount of provisioned concurrency requested.
[$sel:requestedProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'] :: GetProvisionedConcurrencyConfigResponse -> Maybe Natural

-- | The amount of provisioned concurrency available.
[$sel:availableProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'] :: GetProvisionedConcurrencyConfigResponse -> Maybe Natural

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
[$sel:statusReason:GetProvisionedConcurrencyConfigResponse'] :: GetProvisionedConcurrencyConfigResponse -> Maybe Text

-- | The amount of provisioned concurrency allocated.
[$sel:allocatedProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'] :: GetProvisionedConcurrencyConfigResponse -> Maybe Natural

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
[$sel:lastModified:GetProvisionedConcurrencyConfigResponse'] :: GetProvisionedConcurrencyConfigResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetProvisionedConcurrencyConfigResponse'] :: GetProvisionedConcurrencyConfigResponse -> Int

-- | Create a value of <a>GetProvisionedConcurrencyConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_status</a> - The status of
--   the allocation process.
--   
--   
--   <a>$sel:requestedProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency requested.
--   
--   
--   <a>$sel:availableProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency available.
--   
--   <a>$sel:statusReason:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_statusReason</a> - For
--   failed allocations, the reason that provisioned concurrency could not
--   be allocated.
--   
--   
--   <a>$sel:allocatedProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency allocated.
--   
--   <a>$sel:lastModified:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_lastModified</a> - The date
--   and time that a user last updated the configuration, in <a>ISO 8601
--   format</a>.
--   
--   <a>$sel:httpStatus:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_httpStatus</a> - The
--   response's http status code.
newGetProvisionedConcurrencyConfigResponse :: Int -> GetProvisionedConcurrencyConfigResponse

-- | The status of the allocation process.
getProvisionedConcurrencyConfigResponse_status :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe ProvisionedConcurrencyStatusEnum)

-- | The amount of provisioned concurrency requested.
getProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The amount of provisioned concurrency available.
getProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
getProvisionedConcurrencyConfigResponse_statusReason :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The amount of provisioned concurrency allocated.
getProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
getProvisionedConcurrencyConfigResponse_lastModified :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The response's http status code.
getProvisionedConcurrencyConfigResponse_httpStatus :: Lens' GetProvisionedConcurrencyConfigResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance GHC.Show.Show Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance GHC.Read.Read Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance GHC.Classes.Eq Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance GHC.Generics.Generic Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfigResponse
instance GHC.Show.Show Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfigResponse
instance GHC.Read.Read Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetProvisionedConcurrencyConfig.GetProvisionedConcurrencyConfig


-- | Returns the <a>resource-based IAM policy</a> for a function, version,
--   or alias.
module Amazonka.Lambda.GetPolicy

-- | <i>See:</i> <a>newGetPolicy</a> smart constructor.
data GetPolicy
GetPolicy' :: Maybe Text -> Text -> GetPolicy

-- | Specify a version or alias to get the policy for that resource.
[$sel:qualifier:GetPolicy'] :: GetPolicy -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:GetPolicy'] :: GetPolicy -> Text

-- | Create a value of <a>GetPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetPolicy'</a>, <a>getPolicy_qualifier</a> - Specify
--   a version or alias to get the policy for that resource.
--   
--   <a>$sel:functionName:GetPolicy'</a>, <a>getPolicy_functionName</a> -
--   The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetPolicy :: Text -> GetPolicy

-- | Specify a version or alias to get the policy for that resource.
getPolicy_qualifier :: Lens' GetPolicy (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getPolicy_functionName :: Lens' GetPolicy Text

-- | <i>See:</i> <a>newGetPolicyResponse</a> smart constructor.
data GetPolicyResponse
GetPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetPolicyResponse

-- | The resource-based policy.
[$sel:policy:GetPolicyResponse'] :: GetPolicyResponse -> Maybe Text

-- | A unique identifier for the current revision of the policy.
[$sel:revisionId:GetPolicyResponse'] :: GetPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPolicyResponse'] :: GetPolicyResponse -> Int

-- | Create a value of <a>GetPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetPolicyResponse'</a>, <a>getPolicyResponse_policy</a>
--   - The resource-based policy.
--   
--   <a>$sel:revisionId:GetPolicyResponse'</a>,
--   <a>getPolicyResponse_revisionId</a> - A unique identifier for the
--   current revision of the policy.
--   
--   <a>$sel:httpStatus:GetPolicyResponse'</a>,
--   <a>getPolicyResponse_httpStatus</a> - The response's http status code.
newGetPolicyResponse :: Int -> GetPolicyResponse

-- | The resource-based policy.
getPolicyResponse_policy :: Lens' GetPolicyResponse (Maybe Text)

-- | A unique identifier for the current revision of the policy.
getPolicyResponse_revisionId :: Lens' GetPolicyResponse (Maybe Text)

-- | The response's http status code.
getPolicyResponse_httpStatus :: Lens' GetPolicyResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.GetPolicy.GetPolicy
instance GHC.Show.Show Amazonka.Lambda.GetPolicy.GetPolicy
instance GHC.Read.Read Amazonka.Lambda.GetPolicy.GetPolicy
instance GHC.Classes.Eq Amazonka.Lambda.GetPolicy.GetPolicy
instance GHC.Generics.Generic Amazonka.Lambda.GetPolicy.GetPolicyResponse
instance GHC.Show.Show Amazonka.Lambda.GetPolicy.GetPolicyResponse
instance GHC.Read.Read Amazonka.Lambda.GetPolicy.GetPolicyResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetPolicy.GetPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetPolicy.GetPolicy
instance Control.DeepSeq.NFData Amazonka.Lambda.GetPolicy.GetPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetPolicy.GetPolicy
instance Control.DeepSeq.NFData Amazonka.Lambda.GetPolicy.GetPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetPolicy.GetPolicy
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetPolicy.GetPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetPolicy.GetPolicy


-- | Returns the permission policy for a version of an <a>Lambda layer</a>.
--   For more information, see AddLayerVersionPermission.
module Amazonka.Lambda.GetLayerVersionPolicy

-- | <i>See:</i> <a>newGetLayerVersionPolicy</a> smart constructor.
data GetLayerVersionPolicy
GetLayerVersionPolicy' :: Text -> Integer -> GetLayerVersionPolicy

-- | The name or Amazon Resource Name (ARN) of the layer.
[$sel:layerName:GetLayerVersionPolicy'] :: GetLayerVersionPolicy -> Text

-- | The version number.
[$sel:versionNumber:GetLayerVersionPolicy'] :: GetLayerVersionPolicy -> Integer

-- | Create a value of <a>GetLayerVersionPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:GetLayerVersionPolicy'</a>,
--   <a>getLayerVersionPolicy_layerName</a> - The name or Amazon Resource
--   Name (ARN) of the layer.
--   
--   <a>$sel:versionNumber:GetLayerVersionPolicy'</a>,
--   <a>getLayerVersionPolicy_versionNumber</a> - The version number.
newGetLayerVersionPolicy :: Text -> Integer -> GetLayerVersionPolicy

-- | The name or Amazon Resource Name (ARN) of the layer.
getLayerVersionPolicy_layerName :: Lens' GetLayerVersionPolicy Text

-- | The version number.
getLayerVersionPolicy_versionNumber :: Lens' GetLayerVersionPolicy Integer

-- | <i>See:</i> <a>newGetLayerVersionPolicyResponse</a> smart constructor.
data GetLayerVersionPolicyResponse
GetLayerVersionPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetLayerVersionPolicyResponse

-- | The policy document.
[$sel:policy:GetLayerVersionPolicyResponse'] :: GetLayerVersionPolicyResponse -> Maybe Text

-- | A unique identifier for the current revision of the policy.
[$sel:revisionId:GetLayerVersionPolicyResponse'] :: GetLayerVersionPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetLayerVersionPolicyResponse'] :: GetLayerVersionPolicyResponse -> Int

-- | Create a value of <a>GetLayerVersionPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetLayerVersionPolicyResponse'</a>,
--   <a>getLayerVersionPolicyResponse_policy</a> - The policy document.
--   
--   <a>$sel:revisionId:GetLayerVersionPolicyResponse'</a>,
--   <a>getLayerVersionPolicyResponse_revisionId</a> - A unique identifier
--   for the current revision of the policy.
--   
--   <a>$sel:httpStatus:GetLayerVersionPolicyResponse'</a>,
--   <a>getLayerVersionPolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetLayerVersionPolicyResponse :: Int -> GetLayerVersionPolicyResponse

-- | The policy document.
getLayerVersionPolicyResponse_policy :: Lens' GetLayerVersionPolicyResponse (Maybe Text)

-- | A unique identifier for the current revision of the policy.
getLayerVersionPolicyResponse_revisionId :: Lens' GetLayerVersionPolicyResponse (Maybe Text)

-- | The response's http status code.
getLayerVersionPolicyResponse_httpStatus :: Lens' GetLayerVersionPolicyResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance GHC.Show.Show Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance GHC.Read.Read Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance GHC.Classes.Eq Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance GHC.Generics.Generic Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicyResponse
instance GHC.Show.Show Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicyResponse
instance GHC.Read.Read Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicyResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance Control.DeepSeq.NFData Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance Control.DeepSeq.NFData Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetLayerVersionPolicy.GetLayerVersionPolicy


-- | Returns information about a version of an <a>Lambda layer</a>, with a
--   link to download the layer archive that's valid for 10 minutes.
module Amazonka.Lambda.GetLayerVersionByArn

-- | <i>See:</i> <a>newGetLayerVersionByArn</a> smart constructor.
data GetLayerVersionByArn
GetLayerVersionByArn' :: Text -> GetLayerVersionByArn

-- | The ARN of the layer version.
[$sel:arn:GetLayerVersionByArn'] :: GetLayerVersionByArn -> Text

-- | Create a value of <a>GetLayerVersionByArn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetLayerVersionByArn'</a>, <a>getLayerVersionByArn_arn</a>
--   - The ARN of the layer version.
newGetLayerVersionByArn :: Text -> GetLayerVersionByArn

-- | The ARN of the layer version.
getLayerVersionByArn_arn :: Lens' GetLayerVersionByArn Text

-- | <i>See:</i> <a>newGetLayerVersionResponse</a> smart constructor.
data GetLayerVersionResponse
GetLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> GetLayerVersionResponse

-- | The ARN of the layer version.
[$sel:layerVersionArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | Details about the layer version.
[$sel:content:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe LayerVersionContentOutput

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:createdDate:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The version number.
[$sel:version:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Integer

-- | The layer's software license.
[$sel:licenseInfo:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Architecture]

-- | The ARN of the layer.
[$sel:layerArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The description of the version.
[$sel:description:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The layer's compatible runtimes.
[$sel:compatibleRuntimes:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Runtime]

-- | Create a value of <a>GetLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:content:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_createdDate</a> - The date that the layer
--   version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newGetLayerVersionResponse :: GetLayerVersionResponse

-- | The ARN of the layer version.
getLayerVersionResponse_layerVersionArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
getLayerVersionResponse_content :: Lens' GetLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
getLayerVersionResponse_createdDate :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The version number.
getLayerVersionResponse_version :: Lens' GetLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
getLayerVersionResponse_licenseInfo :: Lens' GetLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
getLayerVersionResponse_compatibleArchitectures :: Lens' GetLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
getLayerVersionResponse_layerArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The description of the version.
getLayerVersionResponse_description :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
getLayerVersionResponse_compatibleRuntimes :: Lens' GetLayerVersionResponse (Maybe [Runtime])
instance GHC.Generics.Generic Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance GHC.Show.Show Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance GHC.Read.Read Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance GHC.Classes.Eq Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance Control.DeepSeq.NFData Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetLayerVersionByArn.GetLayerVersionByArn


-- | Returns information about a version of an <a>Lambda layer</a>, with a
--   link to download the layer archive that's valid for 10 minutes.
module Amazonka.Lambda.GetLayerVersion

-- | <i>See:</i> <a>newGetLayerVersion</a> smart constructor.
data GetLayerVersion
GetLayerVersion' :: Text -> Integer -> GetLayerVersion

-- | The name or Amazon Resource Name (ARN) of the layer.
[$sel:layerName:GetLayerVersion'] :: GetLayerVersion -> Text

-- | The version number.
[$sel:versionNumber:GetLayerVersion'] :: GetLayerVersion -> Integer

-- | Create a value of <a>GetLayerVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:GetLayerVersion'</a>,
--   <a>getLayerVersion_layerName</a> - The name or Amazon Resource Name
--   (ARN) of the layer.
--   
--   <a>$sel:versionNumber:GetLayerVersion'</a>,
--   <a>getLayerVersion_versionNumber</a> - The version number.
newGetLayerVersion :: Text -> Integer -> GetLayerVersion

-- | The name or Amazon Resource Name (ARN) of the layer.
getLayerVersion_layerName :: Lens' GetLayerVersion Text

-- | The version number.
getLayerVersion_versionNumber :: Lens' GetLayerVersion Integer

-- | <i>See:</i> <a>newGetLayerVersionResponse</a> smart constructor.
data GetLayerVersionResponse
GetLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> GetLayerVersionResponse

-- | The ARN of the layer version.
[$sel:layerVersionArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | Details about the layer version.
[$sel:content:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe LayerVersionContentOutput

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:createdDate:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The version number.
[$sel:version:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Integer

-- | The layer's software license.
[$sel:licenseInfo:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | A list of compatible <a>instruction set architectures</a>.
[$sel:compatibleArchitectures:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Architecture]

-- | The ARN of the layer.
[$sel:layerArn:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The description of the version.
[$sel:description:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe Text

-- | The layer's compatible runtimes.
[$sel:compatibleRuntimes:GetLayerVersionResponse'] :: GetLayerVersionResponse -> Maybe [Runtime]

-- | Create a value of <a>GetLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:content:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_createdDate</a> - The date that the layer
--   version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newGetLayerVersionResponse :: GetLayerVersionResponse

-- | The ARN of the layer version.
getLayerVersionResponse_layerVersionArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
getLayerVersionResponse_content :: Lens' GetLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
getLayerVersionResponse_createdDate :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The version number.
getLayerVersionResponse_version :: Lens' GetLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
getLayerVersionResponse_licenseInfo :: Lens' GetLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
getLayerVersionResponse_compatibleArchitectures :: Lens' GetLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
getLayerVersionResponse_layerArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The description of the version.
getLayerVersionResponse_description :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
getLayerVersionResponse_compatibleRuntimes :: Lens' GetLayerVersionResponse (Maybe [Runtime])
instance GHC.Generics.Generic Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance GHC.Show.Show Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance GHC.Read.Read Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance GHC.Classes.Eq Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance Control.DeepSeq.NFData Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetLayerVersion.GetLayerVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetLayerVersion.GetLayerVersion


-- | Retrieves the configuration for asynchronous invocation for a
--   function, version, or alias.
--   
--   To configure options for asynchronous invocation, use
--   PutFunctionEventInvokeConfig.
module Amazonka.Lambda.GetFunctionEventInvokeConfig

-- | <i>See:</i> <a>newGetFunctionEventInvokeConfig</a> smart constructor.
data GetFunctionEventInvokeConfig
GetFunctionEventInvokeConfig' :: Maybe Text -> Text -> GetFunctionEventInvokeConfig

-- | A version number or alias name.
[$sel:qualifier:GetFunctionEventInvokeConfig'] :: GetFunctionEventInvokeConfig -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:GetFunctionEventInvokeConfig'] :: GetFunctionEventInvokeConfig -> Text

-- | Create a value of <a>GetFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetFunctionEventInvokeConfig'</a>,
--   <a>getFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:functionName:GetFunctionEventInvokeConfig'</a>,
--   <a>getFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetFunctionEventInvokeConfig :: Text -> GetFunctionEventInvokeConfig

-- | A version number or alias name.
getFunctionEventInvokeConfig_qualifier :: Lens' GetFunctionEventInvokeConfig (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getFunctionEventInvokeConfig_functionName :: Lens' GetFunctionEventInvokeConfig Text

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
[$sel:functionArn:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Text

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
[$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The maximum number of times to retry when the function returns an
--   error.
[$sel:maximumRetryAttempts:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The date and time that the configuration was last updated.
[$sel:lastModified:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe POSIX

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
[$sel:destinationConfig:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe DestinationConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)
instance GHC.Generics.Generic Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance GHC.Show.Show Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance GHC.Read.Read Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance GHC.Classes.Eq Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetFunctionEventInvokeConfig.GetFunctionEventInvokeConfig


-- | Returns the version-specific settings of a Lambda function or version.
--   The output includes only options that can vary between versions of a
--   function. To modify these settings, use UpdateFunctionConfiguration.
--   
--   To get all of a function's details, including function-level settings,
--   use GetFunction.
module Amazonka.Lambda.GetFunctionConfiguration

-- | <i>See:</i> <a>newGetFunctionConfiguration</a> smart constructor.
data GetFunctionConfiguration
GetFunctionConfiguration' :: Maybe Text -> Text -> GetFunctionConfiguration

-- | Specify a version or alias to get details about a published version of
--   the function.
[$sel:qualifier:GetFunctionConfiguration'] :: GetFunctionConfiguration -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:GetFunctionConfiguration'] :: GetFunctionConfiguration -> Text

-- | Create a value of <a>GetFunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetFunctionConfiguration'</a>,
--   <a>getFunctionConfiguration_qualifier</a> - Specify a version or alias
--   to get details about a published version of the function.
--   
--   <a>$sel:functionName:GetFunctionConfiguration'</a>,
--   <a>getFunctionConfiguration_functionName</a> - The name of the Lambda
--   function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetFunctionConfiguration :: Text -> GetFunctionConfiguration

-- | Specify a version or alias to get details about a published version of
--   the function.
getFunctionConfiguration_qualifier :: Lens' GetFunctionConfiguration (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getFunctionConfiguration_functionName :: Lens' GetFunctionConfiguration Text

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | The amount of memory available to the function at runtime.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The runtime environment for the Lambda function.
[$sel:runtime:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Runtime

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
[$sel:state:FunctionConfiguration'] :: FunctionConfiguration -> Maybe State

-- | The ARN of the signing profile version.
[$sel:signingProfileVersionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
[$sel:lastUpdateStatus:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatus

-- | The function's Amazon Resource Name (ARN).
[$sel:functionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
[$sel:kmsKeyArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
[$sel:packageType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe PackageType

-- | Connection settings for an <a>Amazon EFS file system</a>.
[$sel:fileSystemConfigs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [FileSystemConfig]

-- | The function's <a>environment variables</a>.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EnvironmentResponse

-- | The function's dead letter queue.
[$sel:deadLetterConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
[$sel:architectures:FunctionConfiguration'] :: FunctionConfiguration -> Maybe (NonEmpty Architecture)

-- | The ARN of the signing job.
[$sel:signingJobArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's execution role.
[$sel:role':FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's networking configuration.
[$sel:vpcConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe VpcConfigResponse

-- | The version of the Lambda function.
[$sel:version:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The name of the function.
[$sel:functionName:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's <a>layers</a>.
[$sel:layers:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [Layer]

-- | The size of the function's deployment package, in bytes.
[$sel:codeSize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Integer

-- | The function that Lambda calls to begin executing your function.
[$sel:handler:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The reason for the last update that was performed on the function.
[$sel:lastUpdateStatusReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason for the function's current state.
[$sel:stateReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The SHA256 hash of the function's deployment package.
[$sel:codeSha256:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's X-Ray tracing configuration.
[$sel:tracingConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe TracingConfigResponse

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
[$sel:stateReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe StateReasonCode

-- | The function's image configuration values.
[$sel:imageConfigResponse:FunctionConfiguration'] :: FunctionConfiguration -> Maybe ImageConfigResponse

-- | The function's description.
[$sel:description:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason code for the last update that was performed on the
--   function.
[$sel:lastUpdateStatusReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatusReasonCode

-- | The latest updated revision of the function or alias.
[$sel:revisionId:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | For Lambda@Edge functions, the ARN of the master function.
[$sel:masterArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance GHC.Show.Show Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance GHC.Read.Read Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance GHC.Classes.Eq Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetFunctionConfiguration.GetFunctionConfiguration


-- | Returns details about the reserved concurrency configuration for a
--   function. To set a concurrency limit for a function, use
--   PutFunctionConcurrency.
module Amazonka.Lambda.GetFunctionConcurrency

-- | <i>See:</i> <a>newGetFunctionConcurrency</a> smart constructor.
data GetFunctionConcurrency
GetFunctionConcurrency' :: Text -> GetFunctionConcurrency

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:GetFunctionConcurrency'] :: GetFunctionConcurrency -> Text

-- | Create a value of <a>GetFunctionConcurrency</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetFunctionConcurrency'</a>,
--   <a>getFunctionConcurrency_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newGetFunctionConcurrency :: Text -> GetFunctionConcurrency

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getFunctionConcurrency_functionName :: Lens' GetFunctionConcurrency Text

-- | <i>See:</i> <a>newGetFunctionConcurrencyResponse</a> smart
--   constructor.
data GetFunctionConcurrencyResponse
GetFunctionConcurrencyResponse' :: Maybe Natural -> Int -> GetFunctionConcurrencyResponse

-- | The number of simultaneous executions that are reserved for the
--   function.
[$sel:reservedConcurrentExecutions:GetFunctionConcurrencyResponse'] :: GetFunctionConcurrencyResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:GetFunctionConcurrencyResponse'] :: GetFunctionConcurrencyResponse -> Int

-- | Create a value of <a>GetFunctionConcurrencyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:reservedConcurrentExecutions:GetFunctionConcurrencyResponse'</a>,
--   <a>getFunctionConcurrencyResponse_reservedConcurrentExecutions</a> -
--   The number of simultaneous executions that are reserved for the
--   function.
--   
--   <a>$sel:httpStatus:GetFunctionConcurrencyResponse'</a>,
--   <a>getFunctionConcurrencyResponse_httpStatus</a> - The response's http
--   status code.
newGetFunctionConcurrencyResponse :: Int -> GetFunctionConcurrencyResponse

-- | The number of simultaneous executions that are reserved for the
--   function.
getFunctionConcurrencyResponse_reservedConcurrentExecutions :: Lens' GetFunctionConcurrencyResponse (Maybe Natural)

-- | The response's http status code.
getFunctionConcurrencyResponse_httpStatus :: Lens' GetFunctionConcurrencyResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance GHC.Show.Show Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance GHC.Read.Read Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance GHC.Classes.Eq Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance GHC.Generics.Generic Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrencyResponse
instance GHC.Show.Show Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrencyResponse
instance GHC.Read.Read Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrencyResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrencyResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrencyResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetFunctionConcurrency.GetFunctionConcurrency


-- | Returns the code signing configuration for the specified function.
module Amazonka.Lambda.GetFunctionCodeSigningConfig

-- | <i>See:</i> <a>newGetFunctionCodeSigningConfig</a> smart constructor.
data GetFunctionCodeSigningConfig
GetFunctionCodeSigningConfig' :: Text -> GetFunctionCodeSigningConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:GetFunctionCodeSigningConfig'] :: GetFunctionCodeSigningConfig -> Text

-- | Create a value of <a>GetFunctionCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetFunctionCodeSigningConfig'</a>,
--   <a>getFunctionCodeSigningConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newGetFunctionCodeSigningConfig :: Text -> GetFunctionCodeSigningConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getFunctionCodeSigningConfig_functionName :: Lens' GetFunctionCodeSigningConfig Text

-- | <i>See:</i> <a>newGetFunctionCodeSigningConfigResponse</a> smart
--   constructor.
data GetFunctionCodeSigningConfigResponse
GetFunctionCodeSigningConfigResponse' :: Int -> Text -> Text -> GetFunctionCodeSigningConfigResponse

-- | The response's http status code.
[$sel:httpStatus:GetFunctionCodeSigningConfigResponse'] :: GetFunctionCodeSigningConfigResponse -> Int

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
[$sel:codeSigningConfigArn:GetFunctionCodeSigningConfigResponse'] :: GetFunctionCodeSigningConfigResponse -> Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:GetFunctionCodeSigningConfigResponse'] :: GetFunctionCodeSigningConfigResponse -> Text

-- | Create a value of <a>GetFunctionCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetFunctionCodeSigningConfigResponse'</a>,
--   <a>getFunctionCodeSigningConfigResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:codeSigningConfigArn:GetFunctionCodeSigningConfigResponse'</a>,
--   <a>getFunctionCodeSigningConfigResponse_codeSigningConfigArn</a> - The
--   The Amazon Resource Name (ARN) of the code signing configuration.
--   
--   <a>$sel:functionName:GetFunctionCodeSigningConfig'</a>,
--   <a>getFunctionCodeSigningConfigResponse_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newGetFunctionCodeSigningConfigResponse :: Int -> Text -> Text -> GetFunctionCodeSigningConfigResponse

-- | The response's http status code.
getFunctionCodeSigningConfigResponse_httpStatus :: Lens' GetFunctionCodeSigningConfigResponse Int

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
getFunctionCodeSigningConfigResponse_codeSigningConfigArn :: Lens' GetFunctionCodeSigningConfigResponse Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getFunctionCodeSigningConfigResponse_functionName :: Lens' GetFunctionCodeSigningConfigResponse Text
instance GHC.Generics.Generic Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetFunctionCodeSigningConfig.GetFunctionCodeSigningConfig


-- | Returns information about the function or function version, with a
--   link to download the deployment package that's valid for 10 minutes.
--   If you specify a function version, only details that are specific to
--   that version are returned.
module Amazonka.Lambda.GetFunction

-- | <i>See:</i> <a>newGetFunction</a> smart constructor.
data GetFunction
GetFunction' :: Maybe Text -> Text -> GetFunction

-- | Specify a version or alias to get details about a published version of
--   the function.
[$sel:qualifier:GetFunction'] :: GetFunction -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:GetFunction'] :: GetFunction -> Text

-- | Create a value of <a>GetFunction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetFunction'</a>, <a>getFunction_qualifier</a> -
--   Specify a version or alias to get details about a published version of
--   the function.
--   
--   <a>$sel:functionName:GetFunction'</a>, <a>getFunction_functionName</a>
--   - The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetFunction :: Text -> GetFunction

-- | Specify a version or alias to get details about a published version of
--   the function.
getFunction_qualifier :: Lens' GetFunction (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getFunction_functionName :: Lens' GetFunction Text

-- | <i>See:</i> <a>newGetFunctionResponse</a> smart constructor.
data GetFunctionResponse
GetFunctionResponse' :: Maybe Concurrency -> Maybe FunctionCodeLocation -> Maybe FunctionConfiguration -> Maybe (HashMap Text Text) -> Int -> GetFunctionResponse

-- | The function's <a>reserved concurrency</a>.
[$sel:concurrency:GetFunctionResponse'] :: GetFunctionResponse -> Maybe Concurrency

-- | The deployment package of the function or version.
[$sel:code:GetFunctionResponse'] :: GetFunctionResponse -> Maybe FunctionCodeLocation

-- | The configuration of the function or version.
[$sel:configuration:GetFunctionResponse'] :: GetFunctionResponse -> Maybe FunctionConfiguration

-- | The function's <a>tags</a>.
[$sel:tags:GetFunctionResponse'] :: GetFunctionResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetFunctionResponse'] :: GetFunctionResponse -> Int

-- | Create a value of <a>GetFunctionResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrency:GetFunctionResponse'</a>,
--   <a>getFunctionResponse_concurrency</a> - The function's <a>reserved
--   concurrency</a>.
--   
--   <a>$sel:code:GetFunctionResponse'</a>, <a>getFunctionResponse_code</a>
--   - The deployment package of the function or version.
--   
--   <a>$sel:configuration:GetFunctionResponse'</a>,
--   <a>getFunctionResponse_configuration</a> - The configuration of the
--   function or version.
--   
--   <a>$sel:tags:GetFunctionResponse'</a>, <a>getFunctionResponse_tags</a>
--   - The function's <a>tags</a>.
--   
--   <a>$sel:httpStatus:GetFunctionResponse'</a>,
--   <a>getFunctionResponse_httpStatus</a> - The response's http status
--   code.
newGetFunctionResponse :: Int -> GetFunctionResponse

-- | The function's <a>reserved concurrency</a>.
getFunctionResponse_concurrency :: Lens' GetFunctionResponse (Maybe Concurrency)

-- | The deployment package of the function or version.
getFunctionResponse_code :: Lens' GetFunctionResponse (Maybe FunctionCodeLocation)

-- | The configuration of the function or version.
getFunctionResponse_configuration :: Lens' GetFunctionResponse (Maybe FunctionConfiguration)

-- | The function's <a>tags</a>.
getFunctionResponse_tags :: Lens' GetFunctionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getFunctionResponse_httpStatus :: Lens' GetFunctionResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.GetFunction.GetFunction
instance GHC.Show.Show Amazonka.Lambda.GetFunction.GetFunction
instance GHC.Read.Read Amazonka.Lambda.GetFunction.GetFunction
instance GHC.Classes.Eq Amazonka.Lambda.GetFunction.GetFunction
instance GHC.Generics.Generic Amazonka.Lambda.GetFunction.GetFunctionResponse
instance GHC.Show.Show Amazonka.Lambda.GetFunction.GetFunctionResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetFunction.GetFunctionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetFunction.GetFunction
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunction.GetFunctionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetFunction.GetFunction
instance Control.DeepSeq.NFData Amazonka.Lambda.GetFunction.GetFunction
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetFunction.GetFunction
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetFunction.GetFunction
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetFunction.GetFunction


-- | Returns details about an event source mapping. You can get the
--   identifier of a mapping from the output of ListEventSourceMappings.
module Amazonka.Lambda.GetEventSourceMapping

-- | <i>See:</i> <a>newGetEventSourceMapping</a> smart constructor.
data GetEventSourceMapping
GetEventSourceMapping' :: Text -> GetEventSourceMapping

-- | The identifier of the event source mapping.
[$sel:uuid:GetEventSourceMapping'] :: GetEventSourceMapping -> Text

-- | Create a value of <a>GetEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uuid:GetEventSourceMapping'</a>,
--   <a>getEventSourceMapping_uuid</a> - The identifier of the event source
--   mapping.
newGetEventSourceMapping :: Text -> GetEventSourceMapping

-- | The identifier of the event source mapping.
getEventSourceMapping_uuid :: Lens' GetEventSourceMapping Text

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
[$sel:eventSourceArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
[$sel:state:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
[$sel:startingPositionTimestamp:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | The ARN of the Lambda function.
[$sel:functionArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The name of the Kafka topic.
[$sel:topics:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
[$sel:queues:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
[$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Bool

-- | The identifier of the event source mapping.
[$sel:uuid:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
[$sel:parallelizationFactor:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The result of the last Lambda invocation of your function.
[$sel:lastProcessingResult:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
[$sel:maximumRetryAttempts:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:batchSize:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
[$sel:stateTransitionReason:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
[$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
[$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
[$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The self-managed Apache Kafka cluster for your event source.
[$sel:selfManagedEventSource:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe SelfManagedEventSource

-- | The date that the event source mapping was last updated or that its
--   state changed.
[$sel:lastModified:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe DestinationConfig

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
[$sel:startingPosition:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe EventSourcePosition

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)
instance GHC.Generics.Generic Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance GHC.Show.Show Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance GHC.Read.Read Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance GHC.Classes.Eq Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance Control.DeepSeq.NFData Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetEventSourceMapping.GetEventSourceMapping


-- | Returns information about the specified code signing configuration.
module Amazonka.Lambda.GetCodeSigningConfig

-- | <i>See:</i> <a>newGetCodeSigningConfig</a> smart constructor.
data GetCodeSigningConfig
GetCodeSigningConfig' :: Text -> GetCodeSigningConfig

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
[$sel:codeSigningConfigArn:GetCodeSigningConfig'] :: GetCodeSigningConfig -> Text

-- | Create a value of <a>GetCodeSigningConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigArn:GetCodeSigningConfig'</a>,
--   <a>getCodeSigningConfig_codeSigningConfigArn</a> - The The Amazon
--   Resource Name (ARN) of the code signing configuration.
newGetCodeSigningConfig :: Text -> GetCodeSigningConfig

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
getCodeSigningConfig_codeSigningConfigArn :: Lens' GetCodeSigningConfig Text

-- | <i>See:</i> <a>newGetCodeSigningConfigResponse</a> smart constructor.
data GetCodeSigningConfigResponse
GetCodeSigningConfigResponse' :: Int -> CodeSigningConfig -> GetCodeSigningConfigResponse

-- | The response's http status code.
[$sel:httpStatus:GetCodeSigningConfigResponse'] :: GetCodeSigningConfigResponse -> Int

-- | The code signing configuration
[$sel:codeSigningConfig:GetCodeSigningConfigResponse'] :: GetCodeSigningConfigResponse -> CodeSigningConfig

-- | Create a value of <a>GetCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetCodeSigningConfigResponse'</a>,
--   <a>getCodeSigningConfigResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:codeSigningConfig:GetCodeSigningConfigResponse'</a>,
--   <a>getCodeSigningConfigResponse_codeSigningConfig</a> - The code
--   signing configuration
newGetCodeSigningConfigResponse :: Int -> CodeSigningConfig -> GetCodeSigningConfigResponse

-- | The response's http status code.
getCodeSigningConfigResponse_httpStatus :: Lens' GetCodeSigningConfigResponse Int

-- | The code signing configuration
getCodeSigningConfigResponse_codeSigningConfig :: Lens' GetCodeSigningConfigResponse CodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetCodeSigningConfig.GetCodeSigningConfig


-- | Returns details about a Lambda function <a>alias</a>.
module Amazonka.Lambda.GetAlias

-- | <i>See:</i> <a>newGetAlias</a> smart constructor.
data GetAlias
GetAlias' :: Text -> Text -> GetAlias

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:GetAlias'] :: GetAlias -> Text

-- | The name of the alias.
[$sel:name:GetAlias'] :: GetAlias -> Text

-- | Create a value of <a>GetAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetAlias'</a>, <a>getAlias_functionName</a> - The
--   name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:GetAlias'</a>, <a>getAlias_name</a> - The name of the
--   alias.
newGetAlias :: Text -> Text -> GetAlias

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getAlias_functionName :: Lens' GetAlias Text

-- | The name of the alias.
getAlias_name :: Lens' GetAlias Text

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
[$sel:routingConfig:AliasConfiguration'] :: AliasConfiguration -> Maybe AliasRoutingConfiguration

-- | The name of the alias.
[$sel:name:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The function version that the alias invokes.
[$sel:functionVersion:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the alias.
[$sel:aliasArn:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A description of the alias.
[$sel:description:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A unique identifier that changes when you update the alias.
[$sel:revisionId:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.GetAlias.GetAlias
instance GHC.Show.Show Amazonka.Lambda.GetAlias.GetAlias
instance GHC.Read.Read Amazonka.Lambda.GetAlias.GetAlias
instance GHC.Classes.Eq Amazonka.Lambda.GetAlias.GetAlias
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetAlias.GetAlias
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetAlias.GetAlias
instance Control.DeepSeq.NFData Amazonka.Lambda.GetAlias.GetAlias
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetAlias.GetAlias
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetAlias.GetAlias
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetAlias.GetAlias


-- | Retrieves details about your account's <a>limits</a> and usage in an
--   Amazon Web Services Region.
module Amazonka.Lambda.GetAccountSettings

-- | <i>See:</i> <a>newGetAccountSettings</a> smart constructor.
data GetAccountSettings
GetAccountSettings' :: GetAccountSettings

-- | Create a value of <a>GetAccountSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccountSettings :: GetAccountSettings

-- | <i>See:</i> <a>newGetAccountSettingsResponse</a> smart constructor.
data GetAccountSettingsResponse
GetAccountSettingsResponse' :: Maybe AccountLimit -> Maybe AccountUsage -> Int -> GetAccountSettingsResponse

-- | Limits that are related to concurrency and code storage.
[$sel:accountLimit:GetAccountSettingsResponse'] :: GetAccountSettingsResponse -> Maybe AccountLimit

-- | The number of functions and amount of storage in use.
[$sel:accountUsage:GetAccountSettingsResponse'] :: GetAccountSettingsResponse -> Maybe AccountUsage

-- | The response's http status code.
[$sel:httpStatus:GetAccountSettingsResponse'] :: GetAccountSettingsResponse -> Int

-- | Create a value of <a>GetAccountSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountLimit:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_accountLimit</a> - Limits that are
--   related to concurrency and code storage.
--   
--   <a>$sel:accountUsage:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_accountUsage</a> - The number of
--   functions and amount of storage in use.
--   
--   <a>$sel:httpStatus:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_httpStatus</a> - The response's http
--   status code.
newGetAccountSettingsResponse :: Int -> GetAccountSettingsResponse

-- | Limits that are related to concurrency and code storage.
getAccountSettingsResponse_accountLimit :: Lens' GetAccountSettingsResponse (Maybe AccountLimit)

-- | The number of functions and amount of storage in use.
getAccountSettingsResponse_accountUsage :: Lens' GetAccountSettingsResponse (Maybe AccountUsage)

-- | The response's http status code.
getAccountSettingsResponse_httpStatus :: Lens' GetAccountSettingsResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance GHC.Show.Show Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance GHC.Read.Read Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance GHC.Classes.Eq Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance GHC.Generics.Generic Amazonka.Lambda.GetAccountSettings.GetAccountSettingsResponse
instance GHC.Show.Show Amazonka.Lambda.GetAccountSettings.GetAccountSettingsResponse
instance GHC.Read.Read Amazonka.Lambda.GetAccountSettings.GetAccountSettingsResponse
instance GHC.Classes.Eq Amazonka.Lambda.GetAccountSettings.GetAccountSettingsResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance Control.DeepSeq.NFData Amazonka.Lambda.GetAccountSettings.GetAccountSettingsResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance Control.DeepSeq.NFData Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.GetAccountSettings.GetAccountSettings
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.GetAccountSettings.GetAccountSettings


-- | Deletes the provisioned concurrency configuration for a function.
module Amazonka.Lambda.DeleteProvisionedConcurrencyConfig

-- | <i>See:</i> <a>newDeleteProvisionedConcurrencyConfig</a> smart
--   constructor.
data DeleteProvisionedConcurrencyConfig
DeleteProvisionedConcurrencyConfig' :: Text -> Text -> DeleteProvisionedConcurrencyConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:DeleteProvisionedConcurrencyConfig'] :: DeleteProvisionedConcurrencyConfig -> Text

-- | The version number or alias name.
[$sel:qualifier:DeleteProvisionedConcurrencyConfig'] :: DeleteProvisionedConcurrencyConfig -> Text

-- | Create a value of <a>DeleteProvisionedConcurrencyConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteProvisionedConcurrencyConfig'</a>,
--   <a>deleteProvisionedConcurrencyConfig_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:qualifier:DeleteProvisionedConcurrencyConfig'</a>,
--   <a>deleteProvisionedConcurrencyConfig_qualifier</a> - The version
--   number or alias name.
newDeleteProvisionedConcurrencyConfig :: Text -> Text -> DeleteProvisionedConcurrencyConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteProvisionedConcurrencyConfig_functionName :: Lens' DeleteProvisionedConcurrencyConfig Text

-- | The version number or alias name.
deleteProvisionedConcurrencyConfig_qualifier :: Lens' DeleteProvisionedConcurrencyConfig Text

-- | <i>See:</i> <a>newDeleteProvisionedConcurrencyConfigResponse</a> smart
--   constructor.
data DeleteProvisionedConcurrencyConfigResponse
DeleteProvisionedConcurrencyConfigResponse' :: DeleteProvisionedConcurrencyConfigResponse

-- | Create a value of <a>DeleteProvisionedConcurrencyConfigResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteProvisionedConcurrencyConfigResponse :: DeleteProvisionedConcurrencyConfigResponse
instance GHC.Generics.Generic Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance GHC.Show.Show Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance GHC.Read.Read Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance GHC.Classes.Eq Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance GHC.Generics.Generic Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfigResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfigResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteProvisionedConcurrencyConfig.DeleteProvisionedConcurrencyConfig


-- | Deletes a version of an <a>Lambda layer</a>. Deleted versions can no
--   longer be viewed or added to functions. To avoid breaking functions, a
--   copy of the version remains in Lambda until no functions refer to it.
module Amazonka.Lambda.DeleteLayerVersion

-- | <i>See:</i> <a>newDeleteLayerVersion</a> smart constructor.
data DeleteLayerVersion
DeleteLayerVersion' :: Text -> Integer -> DeleteLayerVersion

-- | The name or Amazon Resource Name (ARN) of the layer.
[$sel:layerName:DeleteLayerVersion'] :: DeleteLayerVersion -> Text

-- | The version number.
[$sel:versionNumber:DeleteLayerVersion'] :: DeleteLayerVersion -> Integer

-- | Create a value of <a>DeleteLayerVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:DeleteLayerVersion'</a>,
--   <a>deleteLayerVersion_layerName</a> - The name or Amazon Resource Name
--   (ARN) of the layer.
--   
--   <a>$sel:versionNumber:DeleteLayerVersion'</a>,
--   <a>deleteLayerVersion_versionNumber</a> - The version number.
newDeleteLayerVersion :: Text -> Integer -> DeleteLayerVersion

-- | The name or Amazon Resource Name (ARN) of the layer.
deleteLayerVersion_layerName :: Lens' DeleteLayerVersion Text

-- | The version number.
deleteLayerVersion_versionNumber :: Lens' DeleteLayerVersion Integer

-- | <i>See:</i> <a>newDeleteLayerVersionResponse</a> smart constructor.
data DeleteLayerVersionResponse
DeleteLayerVersionResponse' :: DeleteLayerVersionResponse

-- | Create a value of <a>DeleteLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLayerVersionResponse :: DeleteLayerVersionResponse
instance GHC.Generics.Generic Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance GHC.Show.Show Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance GHC.Read.Read Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance GHC.Classes.Eq Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance GHC.Generics.Generic Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersionResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersionResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersionResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteLayerVersion.DeleteLayerVersion


-- | Deletes the configuration for asynchronous invocation for a function,
--   version, or alias.
--   
--   To configure options for asynchronous invocation, use
--   PutFunctionEventInvokeConfig.
module Amazonka.Lambda.DeleteFunctionEventInvokeConfig

-- | <i>See:</i> <a>newDeleteFunctionEventInvokeConfig</a> smart
--   constructor.
data DeleteFunctionEventInvokeConfig
DeleteFunctionEventInvokeConfig' :: Maybe Text -> Text -> DeleteFunctionEventInvokeConfig

-- | A version number or alias name.
[$sel:qualifier:DeleteFunctionEventInvokeConfig'] :: DeleteFunctionEventInvokeConfig -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:DeleteFunctionEventInvokeConfig'] :: DeleteFunctionEventInvokeConfig -> Text

-- | Create a value of <a>DeleteFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:DeleteFunctionEventInvokeConfig'</a>,
--   <a>deleteFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:functionName:DeleteFunctionEventInvokeConfig'</a>,
--   <a>deleteFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newDeleteFunctionEventInvokeConfig :: Text -> DeleteFunctionEventInvokeConfig

-- | A version number or alias name.
deleteFunctionEventInvokeConfig_qualifier :: Lens' DeleteFunctionEventInvokeConfig (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
deleteFunctionEventInvokeConfig_functionName :: Lens' DeleteFunctionEventInvokeConfig Text

-- | <i>See:</i> <a>newDeleteFunctionEventInvokeConfigResponse</a> smart
--   constructor.
data DeleteFunctionEventInvokeConfigResponse
DeleteFunctionEventInvokeConfigResponse' :: DeleteFunctionEventInvokeConfigResponse

-- | Create a value of <a>DeleteFunctionEventInvokeConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionEventInvokeConfigResponse :: DeleteFunctionEventInvokeConfigResponse
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance GHC.Show.Show Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance GHC.Read.Read Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfigResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfigResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteFunctionEventInvokeConfig.DeleteFunctionEventInvokeConfig


-- | Removes a concurrent execution limit from a function.
module Amazonka.Lambda.DeleteFunctionConcurrency

-- | <i>See:</i> <a>newDeleteFunctionConcurrency</a> smart constructor.
data DeleteFunctionConcurrency
DeleteFunctionConcurrency' :: Text -> DeleteFunctionConcurrency

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:DeleteFunctionConcurrency'] :: DeleteFunctionConcurrency -> Text

-- | Create a value of <a>DeleteFunctionConcurrency</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteFunctionConcurrency'</a>,
--   <a>deleteFunctionConcurrency_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newDeleteFunctionConcurrency :: Text -> DeleteFunctionConcurrency

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteFunctionConcurrency_functionName :: Lens' DeleteFunctionConcurrency Text

-- | <i>See:</i> <a>newDeleteFunctionConcurrencyResponse</a> smart
--   constructor.
data DeleteFunctionConcurrencyResponse
DeleteFunctionConcurrencyResponse' :: DeleteFunctionConcurrencyResponse

-- | Create a value of <a>DeleteFunctionConcurrencyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionConcurrencyResponse :: DeleteFunctionConcurrencyResponse
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance GHC.Show.Show Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance GHC.Read.Read Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrencyResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrencyResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrencyResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrencyResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrencyResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteFunctionConcurrency.DeleteFunctionConcurrency


-- | Removes the code signing configuration from the function.
module Amazonka.Lambda.DeleteFunctionCodeSigningConfig

-- | <i>See:</i> <a>newDeleteFunctionCodeSigningConfig</a> smart
--   constructor.
data DeleteFunctionCodeSigningConfig
DeleteFunctionCodeSigningConfig' :: Text -> DeleteFunctionCodeSigningConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:DeleteFunctionCodeSigningConfig'] :: DeleteFunctionCodeSigningConfig -> Text

-- | Create a value of <a>DeleteFunctionCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteFunctionCodeSigningConfig'</a>,
--   <a>deleteFunctionCodeSigningConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newDeleteFunctionCodeSigningConfig :: Text -> DeleteFunctionCodeSigningConfig

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteFunctionCodeSigningConfig_functionName :: Lens' DeleteFunctionCodeSigningConfig Text

-- | <i>See:</i> <a>newDeleteFunctionCodeSigningConfigResponse</a> smart
--   constructor.
data DeleteFunctionCodeSigningConfigResponse
DeleteFunctionCodeSigningConfigResponse' :: DeleteFunctionCodeSigningConfigResponse

-- | Create a value of <a>DeleteFunctionCodeSigningConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionCodeSigningConfigResponse :: DeleteFunctionCodeSigningConfigResponse
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteFunctionCodeSigningConfig.DeleteFunctionCodeSigningConfig


-- | Deletes a Lambda function. To delete a specific function version, use
--   the <tt>Qualifier</tt> parameter. Otherwise, all versions and aliases
--   are deleted.
--   
--   To delete Lambda event source mappings that invoke a function, use
--   DeleteEventSourceMapping. For Amazon Web Services services and
--   resources that invoke your function directly, delete the trigger in
--   the service where you originally configured it.
module Amazonka.Lambda.DeleteFunction

-- | <i>See:</i> <a>newDeleteFunction</a> smart constructor.
data DeleteFunction
DeleteFunction' :: Maybe Text -> Text -> DeleteFunction

-- | Specify a version to delete. You can't delete a version that's
--   referenced by an alias.
[$sel:qualifier:DeleteFunction'] :: DeleteFunction -> Maybe Text

-- | The name of the Lambda function or version.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:1</tt> (with version).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:DeleteFunction'] :: DeleteFunction -> Text

-- | Create a value of <a>DeleteFunction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:DeleteFunction'</a>, <a>deleteFunction_qualifier</a>
--   - Specify a version to delete. You can't delete a version that's
--   referenced by an alias.
--   
--   <a>$sel:functionName:DeleteFunction'</a>,
--   <a>deleteFunction_functionName</a> - The name of the Lambda function
--   or version.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:1</tt> (with version).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newDeleteFunction :: Text -> DeleteFunction

-- | Specify a version to delete. You can't delete a version that's
--   referenced by an alias.
deleteFunction_qualifier :: Lens' DeleteFunction (Maybe Text)

-- | The name of the Lambda function or version.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:1</tt> (with version).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
deleteFunction_functionName :: Lens' DeleteFunction Text

-- | <i>See:</i> <a>newDeleteFunctionResponse</a> smart constructor.
data DeleteFunctionResponse
DeleteFunctionResponse' :: DeleteFunctionResponse

-- | Create a value of <a>DeleteFunctionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionResponse :: DeleteFunctionResponse
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunction.DeleteFunction
instance GHC.Show.Show Amazonka.Lambda.DeleteFunction.DeleteFunction
instance GHC.Read.Read Amazonka.Lambda.DeleteFunction.DeleteFunction
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunction.DeleteFunction
instance GHC.Generics.Generic Amazonka.Lambda.DeleteFunction.DeleteFunctionResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteFunction.DeleteFunctionResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteFunction.DeleteFunctionResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteFunction.DeleteFunctionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteFunction.DeleteFunction
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunction.DeleteFunctionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteFunction.DeleteFunction
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteFunction.DeleteFunction
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteFunction.DeleteFunction
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteFunction.DeleteFunction
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteFunction.DeleteFunction


-- | Deletes an <a>event source mapping</a>. You can get the identifier of
--   a mapping from the output of ListEventSourceMappings.
--   
--   When you delete an event source mapping, it enters a <tt>Deleting</tt>
--   state and might not be completely deleted for several seconds.
module Amazonka.Lambda.DeleteEventSourceMapping

-- | <i>See:</i> <a>newDeleteEventSourceMapping</a> smart constructor.
data DeleteEventSourceMapping
DeleteEventSourceMapping' :: Text -> DeleteEventSourceMapping

-- | The identifier of the event source mapping.
[$sel:uuid:DeleteEventSourceMapping'] :: DeleteEventSourceMapping -> Text

-- | Create a value of <a>DeleteEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uuid:DeleteEventSourceMapping'</a>,
--   <a>deleteEventSourceMapping_uuid</a> - The identifier of the event
--   source mapping.
newDeleteEventSourceMapping :: Text -> DeleteEventSourceMapping

-- | The identifier of the event source mapping.
deleteEventSourceMapping_uuid :: Lens' DeleteEventSourceMapping Text

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
[$sel:eventSourceArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
[$sel:state:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
[$sel:startingPositionTimestamp:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | The ARN of the Lambda function.
[$sel:functionArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The name of the Kafka topic.
[$sel:topics:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
[$sel:queues:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
[$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Bool

-- | The identifier of the event source mapping.
[$sel:uuid:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
[$sel:parallelizationFactor:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The result of the last Lambda invocation of your function.
[$sel:lastProcessingResult:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
[$sel:maximumRetryAttempts:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:batchSize:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
[$sel:stateTransitionReason:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
[$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
[$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
[$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The self-managed Apache Kafka cluster for your event source.
[$sel:selfManagedEventSource:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe SelfManagedEventSource

-- | The date that the event source mapping was last updated or that its
--   state changed.
[$sel:lastModified:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe DestinationConfig

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
[$sel:startingPosition:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe EventSourcePosition

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)
instance GHC.Generics.Generic Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance GHC.Show.Show Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance GHC.Read.Read Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance GHC.Classes.Eq Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteEventSourceMapping.DeleteEventSourceMapping


-- | Deletes the code signing configuration. You can delete the code
--   signing configuration only if no function is using it.
module Amazonka.Lambda.DeleteCodeSigningConfig

-- | <i>See:</i> <a>newDeleteCodeSigningConfig</a> smart constructor.
data DeleteCodeSigningConfig
DeleteCodeSigningConfig' :: Text -> DeleteCodeSigningConfig

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
[$sel:codeSigningConfigArn:DeleteCodeSigningConfig'] :: DeleteCodeSigningConfig -> Text

-- | Create a value of <a>DeleteCodeSigningConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigArn:DeleteCodeSigningConfig'</a>,
--   <a>deleteCodeSigningConfig_codeSigningConfigArn</a> - The The Amazon
--   Resource Name (ARN) of the code signing configuration.
newDeleteCodeSigningConfig :: Text -> DeleteCodeSigningConfig

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
deleteCodeSigningConfig_codeSigningConfigArn :: Lens' DeleteCodeSigningConfig Text

-- | <i>See:</i> <a>newDeleteCodeSigningConfigResponse</a> smart
--   constructor.
data DeleteCodeSigningConfigResponse
DeleteCodeSigningConfigResponse' :: Int -> DeleteCodeSigningConfigResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteCodeSigningConfigResponse'] :: DeleteCodeSigningConfigResponse -> Int

-- | Create a value of <a>DeleteCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCodeSigningConfigResponse'</a>,
--   <a>deleteCodeSigningConfigResponse_httpStatus</a> - The response's
--   http status code.
newDeleteCodeSigningConfigResponse :: Int -> DeleteCodeSigningConfigResponse

-- | The response's http status code.
deleteCodeSigningConfigResponse_httpStatus :: Lens' DeleteCodeSigningConfigResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteCodeSigningConfig.DeleteCodeSigningConfig


-- | Deletes a Lambda function <a>alias</a>.
module Amazonka.Lambda.DeleteAlias

-- | <i>See:</i> <a>newDeleteAlias</a> smart constructor.
data DeleteAlias
DeleteAlias' :: Text -> Text -> DeleteAlias

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:DeleteAlias'] :: DeleteAlias -> Text

-- | The name of the alias.
[$sel:name:DeleteAlias'] :: DeleteAlias -> Text

-- | Create a value of <a>DeleteAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteAlias'</a>, <a>deleteAlias_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:DeleteAlias'</a>, <a>deleteAlias_name</a> - The name of
--   the alias.
newDeleteAlias :: Text -> Text -> DeleteAlias

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteAlias_functionName :: Lens' DeleteAlias Text

-- | The name of the alias.
deleteAlias_name :: Lens' DeleteAlias Text

-- | <i>See:</i> <a>newDeleteAliasResponse</a> smart constructor.
data DeleteAliasResponse
DeleteAliasResponse' :: DeleteAliasResponse

-- | Create a value of <a>DeleteAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAliasResponse :: DeleteAliasResponse
instance GHC.Generics.Generic Amazonka.Lambda.DeleteAlias.DeleteAlias
instance GHC.Show.Show Amazonka.Lambda.DeleteAlias.DeleteAlias
instance GHC.Read.Read Amazonka.Lambda.DeleteAlias.DeleteAlias
instance GHC.Classes.Eq Amazonka.Lambda.DeleteAlias.DeleteAlias
instance GHC.Generics.Generic Amazonka.Lambda.DeleteAlias.DeleteAliasResponse
instance GHC.Show.Show Amazonka.Lambda.DeleteAlias.DeleteAliasResponse
instance GHC.Read.Read Amazonka.Lambda.DeleteAlias.DeleteAliasResponse
instance GHC.Classes.Eq Amazonka.Lambda.DeleteAlias.DeleteAliasResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.DeleteAlias.DeleteAlias
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteAlias.DeleteAliasResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.DeleteAlias.DeleteAlias
instance Control.DeepSeq.NFData Amazonka.Lambda.DeleteAlias.DeleteAlias
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.DeleteAlias.DeleteAlias
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.DeleteAlias.DeleteAlias
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.DeleteAlias.DeleteAlias


-- | Creates a Lambda function. To create a function, you need a
--   <a>deployment package</a> and an <a>execution role</a>. The deployment
--   package is a .zip file archive or container image that contains your
--   function code. The execution role grants the function permission to
--   use Amazon Web Services services, such as Amazon CloudWatch Logs for
--   log streaming and X-Ray for request tracing.
--   
--   You set the package type to <tt>Image</tt> if the deployment package
--   is a <a>container image</a>. For a container image, the code property
--   must include the URI of a container image in the Amazon ECR registry.
--   You do not need to specify the handler and runtime properties.
--   
--   You set the package type to <tt>Zip</tt> if the deployment package is
--   a <a>.zip file archive</a>. For a .zip file archive, the code property
--   specifies the location of the .zip file. You must also specify the
--   handler and runtime properties. The code in the deployment package
--   must be compatible with the target instruction set architecture of the
--   function (<tt>x86-64</tt> or <tt>arm64</tt>). If you do not specify
--   the architecture, the default value is <tt>x86-64</tt>.
--   
--   When you create a function, Lambda provisions an instance of the
--   function and its supporting resources. If your function connects to a
--   VPC, this process can take a minute or so. During this time, you can't
--   invoke or modify the function. The <tt>State</tt>,
--   <tt>StateReason</tt>, and <tt>StateReasonCode</tt> fields in the
--   response from GetFunctionConfiguration indicate when the function is
--   ready to invoke. For more information, see <a>Function States</a>.
--   
--   A function has an unpublished version, and can have published versions
--   and aliases. The unpublished version changes when you update your
--   function's code and configuration. A published version is a snapshot
--   of your function code and configuration that can't be changed. An
--   alias is a named resource that maps to a version, and can be changed
--   to map to a different version. Use the <tt>Publish</tt> parameter to
--   create version <tt>1</tt> of your function from its initial
--   configuration.
--   
--   The other parameters let you configure version-specific and
--   function-level settings. You can modify version-specific settings
--   later with UpdateFunctionConfiguration. Function-level settings apply
--   to both the unpublished and published versions of the function, and
--   include tags (TagResource) and per-function concurrency limits
--   (PutFunctionConcurrency).
--   
--   You can use code signing if your deployment package is a .zip file
--   archive. To enable code signing for this function, specify the ARN of
--   a code-signing configuration. When a user attempts to deploy a code
--   package with UpdateFunctionCode, Lambda checks that the code package
--   has a valid signature from a trusted publisher. The code-signing
--   configuration includes set set of signing profiles, which define the
--   trusted publishers for this function.
--   
--   If another account or an Amazon Web Services service invokes your
--   function, use AddPermission to grant permission by creating a
--   resource-based IAM policy. You can grant permissions at the function
--   level, on a version, or on an alias.
--   
--   To invoke your function directly, use Invoke. To invoke your function
--   in response to events in other Amazon Web Services services, create an
--   event source mapping (CreateEventSourceMapping), or configure a
--   function trigger in the other service. For more information, see
--   <a>Invoking Functions</a>.
module Amazonka.Lambda.CreateFunction

-- | <i>See:</i> <a>newCreateFunction</a> smart constructor.
data CreateFunction
CreateFunction' :: Maybe Natural -> Maybe Runtime -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe Environment -> Maybe ImageConfig -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe VpcConfig -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe TracingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Text -> Text -> FunctionCode -> CreateFunction

-- | The amount of <a>memory available to the function</a> at runtime.
--   Increasing the function memory also increases its CPU allocation. The
--   default value is 128 MB. The value can be any multiple of 1 MB.
[$sel:memorySize:CreateFunction'] :: CreateFunction -> Maybe Natural

-- | The identifier of the function's <a>runtime</a>.
[$sel:runtime:CreateFunction'] :: CreateFunction -> Maybe Runtime

-- | The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
[$sel:kmsKeyArn:CreateFunction'] :: CreateFunction -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for ZIP archive.
[$sel:packageType:CreateFunction'] :: CreateFunction -> Maybe PackageType

-- | Connection settings for an Amazon EFS file system.
[$sel:fileSystemConfigs:CreateFunction'] :: CreateFunction -> Maybe [FileSystemConfig]

-- | Environment variables that are accessible from function code during
--   execution.
[$sel:environment:CreateFunction'] :: CreateFunction -> Maybe Environment

-- | Container image <a>configuration values</a> that override the values
--   in the container image Dockerfile.
[$sel:imageConfig:CreateFunction'] :: CreateFunction -> Maybe ImageConfig

-- | A dead letter queue configuration that specifies the queue or topic
--   where Lambda sends asynchronous events when they fail processing. For
--   more information, see <a>Dead Letter Queues</a>.
[$sel:deadLetterConfig:CreateFunction'] :: CreateFunction -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports. Enter a
--   string array with one of the valid values. The default value is
--   <tt>x86_64</tt>.
[$sel:architectures:CreateFunction'] :: CreateFunction -> Maybe (NonEmpty Architecture)

-- | To enable code signing for this function, specify the ARN of a
--   code-signing configuration. A code-signing configuration includes a
--   set of signing profiles, which define the trusted publishers for this
--   function.
[$sel:codeSigningConfigArn:CreateFunction'] :: CreateFunction -> Maybe Text

-- | For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
[$sel:vpcConfig:CreateFunction'] :: CreateFunction -> Maybe VpcConfig

-- | A list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
[$sel:layers:CreateFunction'] :: CreateFunction -> Maybe [Text]

-- | The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
[$sel:handler:CreateFunction'] :: CreateFunction -> Maybe Text

-- | The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
[$sel:timeout:CreateFunction'] :: CreateFunction -> Maybe Natural

-- | Set <tt>Mode</tt> to <tt>Active</tt> to sample and trace a subset of
--   incoming requests with <a>X-Ray</a>.
[$sel:tracingConfig:CreateFunction'] :: CreateFunction -> Maybe TracingConfig

-- | A description of the function.
[$sel:description:CreateFunction'] :: CreateFunction -> Maybe Text

-- | A list of <a>tags</a> to apply to the function.
[$sel:tags:CreateFunction'] :: CreateFunction -> Maybe (HashMap Text Text)

-- | Set to true to publish the first version of the function during
--   creation.
[$sel:publish:CreateFunction'] :: CreateFunction -> Maybe Bool

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:CreateFunction'] :: CreateFunction -> Text

-- | The Amazon Resource Name (ARN) of the function's execution role.
[$sel:role':CreateFunction'] :: CreateFunction -> Text

-- | The code for the function.
[$sel:code:CreateFunction'] :: CreateFunction -> FunctionCode

-- | Create a value of <a>CreateFunction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:CreateFunction'</a>,
--   <a>createFunction_memorySize</a> - The amount of <a>memory available
--   to the function</a> at runtime. Increasing the function memory also
--   increases its CPU allocation. The default value is 128 MB. The value
--   can be any multiple of 1 MB.
--   
--   <a>$sel:runtime:CreateFunction'</a>, <a>createFunction_runtime</a> -
--   The identifier of the function's <a>runtime</a>.
--   
--   <a>$sel:kmsKeyArn:CreateFunction'</a>, <a>createFunction_kmsKeyArn</a>
--   - The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
--   
--   <a>$sel:packageType:CreateFunction'</a>,
--   <a>createFunction_packageType</a> - The type of deployment package.
--   Set to <tt>Image</tt> for container image and set <tt>Zip</tt> for ZIP
--   archive.
--   
--   <a>$sel:fileSystemConfigs:CreateFunction'</a>,
--   <a>createFunction_fileSystemConfigs</a> - Connection settings for an
--   Amazon EFS file system.
--   
--   <a>$sel:environment:CreateFunction'</a>,
--   <a>createFunction_environment</a> - Environment variables that are
--   accessible from function code during execution.
--   
--   <a>$sel:imageConfig:CreateFunction'</a>,
--   <a>createFunction_imageConfig</a> - Container image <a>configuration
--   values</a> that override the values in the container image Dockerfile.
--   
--   <a>$sel:deadLetterConfig:CreateFunction'</a>,
--   <a>createFunction_deadLetterConfig</a> - A dead letter queue
--   configuration that specifies the queue or topic where Lambda sends
--   asynchronous events when they fail processing. For more information,
--   see <a>Dead Letter Queues</a>.
--   
--   <a>$sel:architectures:CreateFunction'</a>,
--   <a>createFunction_architectures</a> - The instruction set architecture
--   that the function supports. Enter a string array with one of the valid
--   values. The default value is <tt>x86_64</tt>.
--   
--   <a>$sel:codeSigningConfigArn:CreateFunction'</a>,
--   <a>createFunction_codeSigningConfigArn</a> - To enable code signing
--   for this function, specify the ARN of a code-signing configuration. A
--   code-signing configuration includes a set of signing profiles, which
--   define the trusted publishers for this function.
--   
--   <a>$sel:vpcConfig:CreateFunction'</a>, <a>createFunction_vpcConfig</a>
--   - For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
--   
--   <a>$sel:layers:CreateFunction'</a>, <a>createFunction_layers</a> - A
--   list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
--   
--   <a>$sel:handler:CreateFunction'</a>, <a>createFunction_handler</a> -
--   The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
--   
--   <a>$sel:timeout:CreateFunction'</a>, <a>createFunction_timeout</a> -
--   The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
--   
--   <a>$sel:tracingConfig:CreateFunction'</a>,
--   <a>createFunction_tracingConfig</a> - Set <tt>Mode</tt> to
--   <tt>Active</tt> to sample and trace a subset of incoming requests with
--   <a>X-Ray</a>.
--   
--   <a>$sel:description:CreateFunction'</a>,
--   <a>createFunction_description</a> - A description of the function.
--   
--   <a>$sel:tags:CreateFunction'</a>, <a>createFunction_tags</a> - A list
--   of <a>tags</a> to apply to the function.
--   
--   <a>$sel:publish:CreateFunction'</a>, <a>createFunction_publish</a> -
--   Set to true to publish the first version of the function during
--   creation.
--   
--   <a>$sel:functionName:CreateFunction'</a>,
--   <a>createFunction_functionName</a> - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:role':CreateFunction'</a>, <a>createFunction_role</a> - The
--   Amazon Resource Name (ARN) of the function's execution role.
--   
--   <a>$sel:code:CreateFunction'</a>, <a>createFunction_code</a> - The
--   code for the function.
newCreateFunction :: Text -> Text -> FunctionCode -> CreateFunction

-- | The amount of <a>memory available to the function</a> at runtime.
--   Increasing the function memory also increases its CPU allocation. The
--   default value is 128 MB. The value can be any multiple of 1 MB.
createFunction_memorySize :: Lens' CreateFunction (Maybe Natural)

-- | The identifier of the function's <a>runtime</a>.
createFunction_runtime :: Lens' CreateFunction (Maybe Runtime)

-- | The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
createFunction_kmsKeyArn :: Lens' CreateFunction (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for ZIP archive.
createFunction_packageType :: Lens' CreateFunction (Maybe PackageType)

-- | Connection settings for an Amazon EFS file system.
createFunction_fileSystemConfigs :: Lens' CreateFunction (Maybe [FileSystemConfig])

-- | Environment variables that are accessible from function code during
--   execution.
createFunction_environment :: Lens' CreateFunction (Maybe Environment)

-- | Container image <a>configuration values</a> that override the values
--   in the container image Dockerfile.
createFunction_imageConfig :: Lens' CreateFunction (Maybe ImageConfig)

-- | A dead letter queue configuration that specifies the queue or topic
--   where Lambda sends asynchronous events when they fail processing. For
--   more information, see <a>Dead Letter Queues</a>.
createFunction_deadLetterConfig :: Lens' CreateFunction (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports. Enter a
--   string array with one of the valid values. The default value is
--   <tt>x86_64</tt>.
createFunction_architectures :: Lens' CreateFunction (Maybe (NonEmpty Architecture))

-- | To enable code signing for this function, specify the ARN of a
--   code-signing configuration. A code-signing configuration includes a
--   set of signing profiles, which define the trusted publishers for this
--   function.
createFunction_codeSigningConfigArn :: Lens' CreateFunction (Maybe Text)

-- | For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
createFunction_vpcConfig :: Lens' CreateFunction (Maybe VpcConfig)

-- | A list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
createFunction_layers :: Lens' CreateFunction (Maybe [Text])

-- | The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
createFunction_handler :: Lens' CreateFunction (Maybe Text)

-- | The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
createFunction_timeout :: Lens' CreateFunction (Maybe Natural)

-- | Set <tt>Mode</tt> to <tt>Active</tt> to sample and trace a subset of
--   incoming requests with <a>X-Ray</a>.
createFunction_tracingConfig :: Lens' CreateFunction (Maybe TracingConfig)

-- | A description of the function.
createFunction_description :: Lens' CreateFunction (Maybe Text)

-- | A list of <a>tags</a> to apply to the function.
createFunction_tags :: Lens' CreateFunction (Maybe (HashMap Text Text))

-- | Set to true to publish the first version of the function during
--   creation.
createFunction_publish :: Lens' CreateFunction (Maybe Bool)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
createFunction_functionName :: Lens' CreateFunction Text

-- | The Amazon Resource Name (ARN) of the function's execution role.
createFunction_role :: Lens' CreateFunction Text

-- | The code for the function.
createFunction_code :: Lens' CreateFunction FunctionCode

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | The amount of memory available to the function at runtime.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The runtime environment for the Lambda function.
[$sel:runtime:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Runtime

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
[$sel:state:FunctionConfiguration'] :: FunctionConfiguration -> Maybe State

-- | The ARN of the signing profile version.
[$sel:signingProfileVersionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
[$sel:lastUpdateStatus:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatus

-- | The function's Amazon Resource Name (ARN).
[$sel:functionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
[$sel:kmsKeyArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
[$sel:packageType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe PackageType

-- | Connection settings for an <a>Amazon EFS file system</a>.
[$sel:fileSystemConfigs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [FileSystemConfig]

-- | The function's <a>environment variables</a>.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EnvironmentResponse

-- | The function's dead letter queue.
[$sel:deadLetterConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
[$sel:architectures:FunctionConfiguration'] :: FunctionConfiguration -> Maybe (NonEmpty Architecture)

-- | The ARN of the signing job.
[$sel:signingJobArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's execution role.
[$sel:role':FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's networking configuration.
[$sel:vpcConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe VpcConfigResponse

-- | The version of the Lambda function.
[$sel:version:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The name of the function.
[$sel:functionName:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's <a>layers</a>.
[$sel:layers:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [Layer]

-- | The size of the function's deployment package, in bytes.
[$sel:codeSize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Integer

-- | The function that Lambda calls to begin executing your function.
[$sel:handler:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The reason for the last update that was performed on the function.
[$sel:lastUpdateStatusReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason for the function's current state.
[$sel:stateReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The SHA256 hash of the function's deployment package.
[$sel:codeSha256:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's X-Ray tracing configuration.
[$sel:tracingConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe TracingConfigResponse

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
[$sel:stateReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe StateReasonCode

-- | The function's image configuration values.
[$sel:imageConfigResponse:FunctionConfiguration'] :: FunctionConfiguration -> Maybe ImageConfigResponse

-- | The function's description.
[$sel:description:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason code for the last update that was performed on the
--   function.
[$sel:lastUpdateStatusReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatusReasonCode

-- | The latest updated revision of the function or alias.
[$sel:revisionId:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | For Lambda@Edge functions, the ARN of the master function.
[$sel:masterArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.CreateFunction.CreateFunction
instance GHC.Show.Show Amazonka.Lambda.CreateFunction.CreateFunction
instance GHC.Classes.Eq Amazonka.Lambda.CreateFunction.CreateFunction
instance Amazonka.Types.AWSRequest Amazonka.Lambda.CreateFunction.CreateFunction
instance Data.Hashable.Class.Hashable Amazonka.Lambda.CreateFunction.CreateFunction
instance Control.DeepSeq.NFData Amazonka.Lambda.CreateFunction.CreateFunction
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.CreateFunction.CreateFunction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.CreateFunction.CreateFunction
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.CreateFunction.CreateFunction
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.CreateFunction.CreateFunction


-- | Creates a mapping between an event source and an Lambda function.
--   Lambda reads items from the event source and triggers the function.
--   
--   For details about each event source type, see the following topics.
--   
--   <ul>
--   <li><a>Configuring a Dynamo DB stream as an event source</a></li>
--   <li><a>Configuring a Kinesis stream as an event source</a></li>
--   <li><a>Configuring an Amazon SQS queue as an event source</a></li>
--   <li><a>Configuring an MQ broker as an event source</a></li>
--   <li><a>Configuring MSK as an event source</a></li>
--   <li><a>Configuring Self-Managed Apache Kafka as an event
--   source</a></li>
--   </ul>
--   
--   The following error handling options are only available for stream
--   sources (DynamoDB and Kinesis):
--   
--   <ul>
--   <li><tt>BisectBatchOnFunctionError</tt> - If the function returns an
--   error, split the batch in two and retry.</li>
--   <li><tt>DestinationConfig</tt> - Send discarded records to an Amazon
--   SQS queue or Amazon SNS topic.</li>
--   <li><tt>MaximumRecordAgeInSeconds</tt> - Discard records older than
--   the specified age. The default value is infinite (-1). When set to
--   infinite (-1), failed records are retried until the record
--   expires</li>
--   <li><tt>MaximumRetryAttempts</tt> - Discard records after the
--   specified number of retries. The default value is infinite (-1). When
--   set to infinite (-1), failed records are retried until the record
--   expires.</li>
--   <li><tt>ParallelizationFactor</tt> - Process multiple batches from
--   each shard concurrently.</li>
--   </ul>
module Amazonka.Lambda.CreateEventSourceMapping

-- | <i>See:</i> <a>newCreateEventSourceMapping</a> smart constructor.
data CreateEventSourceMapping
CreateEventSourceMapping' :: Maybe Text -> Maybe POSIX -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Int -> Maybe Natural -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe DestinationConfig -> Maybe EventSourcePosition -> Text -> CreateEventSourceMapping

-- | The Amazon Resource Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
[$sel:eventSourceArn:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Text

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
[$sel:startingPositionTimestamp:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe POSIX

-- | The name of the Kafka topic.
[$sel:topics:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe (NonEmpty Text)

-- | (MQ) The name of the Amazon MQ broker destination queue to consume.
[$sel:queues:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe (NonEmpty Text)

-- | When true, the event source mapping is active. When false, Lambda
--   pauses polling and invocation.
--   
--   Default: True
[$sel:enabled:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Bool

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry.
[$sel:bisectBatchOnFunctionError:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Bool

-- | (Streams only) The number of batches to process from each shard
--   concurrently.
[$sel:parallelizationFactor:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Natural

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is infinite (-1). When set to infinite (-1), failed
--   records will be retried until the record expires.
[$sel:maximumRetryAttempts:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
[$sel:batchSize:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Natural

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Natural

-- | An array of authentication protocols or VPC components required to
--   secure your event source.
[$sel:sourceAccessConfigurations:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is infinite (-1).
[$sel:maximumRecordAgeInSeconds:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is between 1 second up to 900 seconds.
[$sel:tumblingWindowInSeconds:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe Natural

-- | The Self-Managed Apache Kafka cluster to send records.
[$sel:selfManagedEventSource:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe SelfManagedEventSource

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe DestinationConfig

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK Streams sources.
--   <tt>AT_TIMESTAMP</tt> is only supported for Amazon Kinesis streams.
[$sel:startingPosition:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Maybe EventSourcePosition

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
[$sel:functionName:CreateEventSourceMapping'] :: CreateEventSourceMapping -> Text

-- | Create a value of <a>CreateEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_eventSourceArn</a> - The Amazon Resource
--   Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
--   
--   <a>$sel:startingPositionTimestamp:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_startingPositionTimestamp</a> - With
--   <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time from
--   which to start reading.
--   
--   <a>$sel:topics:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_topics</a> - The name of the Kafka topic.
--   
--   <a>$sel:queues:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_queues</a> - (MQ) The name of the Amazon
--   MQ broker destination queue to consume.
--   
--   <a>$sel:enabled:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_enabled</a> - When true, the event source
--   mapping is active. When false, Lambda pauses polling and invocation.
--   
--   Default: True
--   
--   <a>$sel:bisectBatchOnFunctionError:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_bisectBatchOnFunctionError</a> - (Streams
--   only) If the function returns an error, split the batch in two and
--   retry.
--   
--   <a>$sel:parallelizationFactor:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_parallelizationFactor</a> - (Streams only)
--   The number of batches to process from each shard concurrently.
--   
--   <a>$sel:maximumRetryAttempts:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_maximumRetryAttempts</a> - (Streams only)
--   Discard records after the specified number of retries. The default
--   value is infinite (-1). When set to infinite (-1), failed records will
--   be retried until the record expires.
--   
--   <a>$sel:batchSize:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_batchSize</a> - The maximum number of
--   records in each batch that Lambda pulls from your stream or queue and
--   sends to your function. Lambda passes all of the records in the batch
--   to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
--   
--   <a>$sel:maximumBatchingWindowInSeconds:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_maximumBatchingWindowInSeconds</a> -
--   (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:sourceAccessConfigurations:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_sourceAccessConfigurations</a> - An array
--   of authentication protocols or VPC components required to secure your
--   event source.
--   
--   <a>$sel:maximumRecordAgeInSeconds:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_maximumRecordAgeInSeconds</a> - (Streams
--   only) Discard records older than the specified age. The default value
--   is infinite (-1).
--   
--   <a>$sel:functionResponseTypes:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_functionResponseTypes</a> - (Streams only)
--   A list of current response type enums applied to the event source
--   mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_tumblingWindowInSeconds</a> - (Streams
--   only) The duration in seconds of a processing window. The range is
--   between 1 second up to 900 seconds.
--   
--   <a>$sel:selfManagedEventSource:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_selfManagedEventSource</a> - The
--   Self-Managed Apache Kafka cluster to send records.
--   
--   <a>$sel:destinationConfig:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_destinationConfig</a> - (Streams only) An
--   Amazon SQS queue or Amazon SNS topic destination for discarded
--   records.
--   
--   <a>$sel:startingPosition:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_startingPosition</a> - The position in a
--   stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK Streams sources. <tt>AT_TIMESTAMP</tt>
--   is only supported for Amazon Kinesis streams.
--   
--   <a>$sel:functionName:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
newCreateEventSourceMapping :: Text -> CreateEventSourceMapping

-- | The Amazon Resource Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
createEventSourceMapping_eventSourceArn :: Lens' CreateEventSourceMapping (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
createEventSourceMapping_startingPositionTimestamp :: Lens' CreateEventSourceMapping (Maybe UTCTime)

-- | The name of the Kafka topic.
createEventSourceMapping_topics :: Lens' CreateEventSourceMapping (Maybe (NonEmpty Text))

-- | (MQ) The name of the Amazon MQ broker destination queue to consume.
createEventSourceMapping_queues :: Lens' CreateEventSourceMapping (Maybe (NonEmpty Text))

-- | When true, the event source mapping is active. When false, Lambda
--   pauses polling and invocation.
--   
--   Default: True
createEventSourceMapping_enabled :: Lens' CreateEventSourceMapping (Maybe Bool)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry.
createEventSourceMapping_bisectBatchOnFunctionError :: Lens' CreateEventSourceMapping (Maybe Bool)

-- | (Streams only) The number of batches to process from each shard
--   concurrently.
createEventSourceMapping_parallelizationFactor :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is infinite (-1). When set to infinite (-1), failed
--   records will be retried until the record expires.
createEventSourceMapping_maximumRetryAttempts :: Lens' CreateEventSourceMapping (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
createEventSourceMapping_batchSize :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
createEventSourceMapping_maximumBatchingWindowInSeconds :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | An array of authentication protocols or VPC components required to
--   secure your event source.
createEventSourceMapping_sourceAccessConfigurations :: Lens' CreateEventSourceMapping (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is infinite (-1).
createEventSourceMapping_maximumRecordAgeInSeconds :: Lens' CreateEventSourceMapping (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
createEventSourceMapping_functionResponseTypes :: Lens' CreateEventSourceMapping (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is between 1 second up to 900 seconds.
createEventSourceMapping_tumblingWindowInSeconds :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | The Self-Managed Apache Kafka cluster to send records.
createEventSourceMapping_selfManagedEventSource :: Lens' CreateEventSourceMapping (Maybe SelfManagedEventSource)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
createEventSourceMapping_destinationConfig :: Lens' CreateEventSourceMapping (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK Streams sources.
--   <tt>AT_TIMESTAMP</tt> is only supported for Amazon Kinesis streams.
createEventSourceMapping_startingPosition :: Lens' CreateEventSourceMapping (Maybe EventSourcePosition)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
createEventSourceMapping_functionName :: Lens' CreateEventSourceMapping Text

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
[$sel:eventSourceArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
[$sel:state:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
[$sel:startingPositionTimestamp:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | The ARN of the Lambda function.
[$sel:functionArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The name of the Kafka topic.
[$sel:topics:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
[$sel:queues:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
[$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Bool

-- | The identifier of the event source mapping.
[$sel:uuid:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
[$sel:parallelizationFactor:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The result of the last Lambda invocation of your function.
[$sel:lastProcessingResult:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
[$sel:maximumRetryAttempts:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:batchSize:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
[$sel:stateTransitionReason:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
[$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
[$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
[$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The self-managed Apache Kafka cluster for your event source.
[$sel:selfManagedEventSource:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe SelfManagedEventSource

-- | The date that the event source mapping was last updated or that its
--   state changed.
[$sel:lastModified:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe DestinationConfig

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
[$sel:startingPosition:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe EventSourcePosition

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)
instance GHC.Generics.Generic Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance GHC.Show.Show Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance GHC.Read.Read Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance GHC.Classes.Eq Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance Amazonka.Types.AWSRequest Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance Data.Hashable.Class.Hashable Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance Control.DeepSeq.NFData Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.CreateEventSourceMapping.CreateEventSourceMapping


-- | Creates a code signing configuration. A <a>code signing
--   configuration</a> defines a list of allowed signing profiles and
--   defines the code-signing validation policy (action to be taken if
--   deployment validation checks fail).
module Amazonka.Lambda.CreateCodeSigningConfig

-- | <i>See:</i> <a>newCreateCodeSigningConfig</a> smart constructor.
data CreateCodeSigningConfig
CreateCodeSigningConfig' :: Maybe CodeSigningPolicies -> Maybe Text -> AllowedPublishers -> CreateCodeSigningConfig

-- | The code signing policies define the actions to take if the validation
--   checks fail.
[$sel:codeSigningPolicies:CreateCodeSigningConfig'] :: CreateCodeSigningConfig -> Maybe CodeSigningPolicies

-- | Descriptive name for this code signing configuration.
[$sel:description:CreateCodeSigningConfig'] :: CreateCodeSigningConfig -> Maybe Text

-- | Signing profiles for this code signing configuration.
[$sel:allowedPublishers:CreateCodeSigningConfig'] :: CreateCodeSigningConfig -> AllowedPublishers

-- | Create a value of <a>CreateCodeSigningConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningPolicies:CreateCodeSigningConfig'</a>,
--   <a>createCodeSigningConfig_codeSigningPolicies</a> - The code signing
--   policies define the actions to take if the validation checks fail.
--   
--   <a>$sel:description:CreateCodeSigningConfig'</a>,
--   <a>createCodeSigningConfig_description</a> - Descriptive name for this
--   code signing configuration.
--   
--   <a>$sel:allowedPublishers:CreateCodeSigningConfig'</a>,
--   <a>createCodeSigningConfig_allowedPublishers</a> - Signing profiles
--   for this code signing configuration.
newCreateCodeSigningConfig :: AllowedPublishers -> CreateCodeSigningConfig

-- | The code signing policies define the actions to take if the validation
--   checks fail.
createCodeSigningConfig_codeSigningPolicies :: Lens' CreateCodeSigningConfig (Maybe CodeSigningPolicies)

-- | Descriptive name for this code signing configuration.
createCodeSigningConfig_description :: Lens' CreateCodeSigningConfig (Maybe Text)

-- | Signing profiles for this code signing configuration.
createCodeSigningConfig_allowedPublishers :: Lens' CreateCodeSigningConfig AllowedPublishers

-- | <i>See:</i> <a>newCreateCodeSigningConfigResponse</a> smart
--   constructor.
data CreateCodeSigningConfigResponse
CreateCodeSigningConfigResponse' :: Int -> CodeSigningConfig -> CreateCodeSigningConfigResponse

-- | The response's http status code.
[$sel:httpStatus:CreateCodeSigningConfigResponse'] :: CreateCodeSigningConfigResponse -> Int

-- | The code signing configuration.
[$sel:codeSigningConfig:CreateCodeSigningConfigResponse'] :: CreateCodeSigningConfigResponse -> CodeSigningConfig

-- | Create a value of <a>CreateCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateCodeSigningConfigResponse'</a>,
--   <a>createCodeSigningConfigResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:codeSigningConfig:CreateCodeSigningConfigResponse'</a>,
--   <a>createCodeSigningConfigResponse_codeSigningConfig</a> - The code
--   signing configuration.
newCreateCodeSigningConfigResponse :: Int -> CodeSigningConfig -> CreateCodeSigningConfigResponse

-- | The response's http status code.
createCodeSigningConfigResponse_httpStatus :: Lens' CreateCodeSigningConfigResponse Int

-- | The code signing configuration.
createCodeSigningConfigResponse_codeSigningConfig :: Lens' CreateCodeSigningConfigResponse CodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.CreateCodeSigningConfig.CreateCodeSigningConfig


-- | Creates an <a>alias</a> for a Lambda function version. Use aliases to
--   provide clients with a function identifier that you can update to
--   invoke a different version.
--   
--   You can also map an alias to split invocation requests between two
--   versions. Use the <tt>RoutingConfig</tt> parameter to specify a second
--   version and the percentage of invocation requests that it receives.
module Amazonka.Lambda.CreateAlias

-- | <i>See:</i> <a>newCreateAlias</a> smart constructor.
data CreateAlias
CreateAlias' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Text -> Text -> Text -> CreateAlias

-- | The <a>routing configuration</a> of the alias.
[$sel:routingConfig:CreateAlias'] :: CreateAlias -> Maybe AliasRoutingConfiguration

-- | A description of the alias.
[$sel:description:CreateAlias'] :: CreateAlias -> Maybe Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:CreateAlias'] :: CreateAlias -> Text

-- | The name of the alias.
[$sel:name:CreateAlias'] :: CreateAlias -> Text

-- | The function version that the alias invokes.
[$sel:functionVersion:CreateAlias'] :: CreateAlias -> Text

-- | Create a value of <a>CreateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:CreateAlias'</a>,
--   <a>createAlias_routingConfig</a> - The <a>routing configuration</a> of
--   the alias.
--   
--   <a>$sel:description:CreateAlias'</a>, <a>createAlias_description</a> -
--   A description of the alias.
--   
--   <a>$sel:functionName:CreateAlias'</a>, <a>createAlias_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:CreateAlias'</a>, <a>createAlias_name</a> - The name of
--   the alias.
--   
--   <a>$sel:functionVersion:CreateAlias'</a>,
--   <a>createAlias_functionVersion</a> - The function version that the
--   alias invokes.
newCreateAlias :: Text -> Text -> Text -> CreateAlias

-- | The <a>routing configuration</a> of the alias.
createAlias_routingConfig :: Lens' CreateAlias (Maybe AliasRoutingConfiguration)

-- | A description of the alias.
createAlias_description :: Lens' CreateAlias (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
createAlias_functionName :: Lens' CreateAlias Text

-- | The name of the alias.
createAlias_name :: Lens' CreateAlias Text

-- | The function version that the alias invokes.
createAlias_functionVersion :: Lens' CreateAlias Text

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
[$sel:routingConfig:AliasConfiguration'] :: AliasConfiguration -> Maybe AliasRoutingConfiguration

-- | The name of the alias.
[$sel:name:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The function version that the alias invokes.
[$sel:functionVersion:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the alias.
[$sel:aliasArn:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A description of the alias.
[$sel:description:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A unique identifier that changes when you update the alias.
[$sel:revisionId:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.CreateAlias.CreateAlias
instance GHC.Show.Show Amazonka.Lambda.CreateAlias.CreateAlias
instance GHC.Read.Read Amazonka.Lambda.CreateAlias.CreateAlias
instance GHC.Classes.Eq Amazonka.Lambda.CreateAlias.CreateAlias
instance Amazonka.Types.AWSRequest Amazonka.Lambda.CreateAlias.CreateAlias
instance Data.Hashable.Class.Hashable Amazonka.Lambda.CreateAlias.CreateAlias
instance Control.DeepSeq.NFData Amazonka.Lambda.CreateAlias.CreateAlias
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.CreateAlias.CreateAlias
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.CreateAlias.CreateAlias
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.CreateAlias.CreateAlias
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.CreateAlias.CreateAlias


-- | Grants an Amazon Web Services service or another account permission to
--   use a function. You can apply the policy at the function level, or
--   specify a qualifier to restrict access to a single version or alias.
--   If you use a qualifier, the invoker must use the full Amazon Resource
--   Name (ARN) of that version or alias to invoke the function. Note:
--   Lambda does not support adding policies to version $LATEST.
--   
--   To grant permission to another account, specify the account ID as the
--   <tt>Principal</tt>. For Amazon Web Services services, the principal is
--   a domain-style identifier defined by the service, like
--   <tt>s3.amazonaws.com</tt> or <tt>sns.amazonaws.com</tt>. For Amazon
--   Web Services services, you can also specify the ARN of the associated
--   resource as the <tt>SourceArn</tt>. If you grant permission to a
--   service principal without specifying the source, other accounts could
--   potentially configure resources in their account to invoke your Lambda
--   function.
--   
--   This action adds a statement to a resource-based permissions policy
--   for the function. For more information about function policies, see
--   <a>Lambda Function Policies</a>.
module Amazonka.Lambda.AddPermission

-- | <i>See:</i> <a>newAddPermission</a> smart constructor.
data AddPermission
AddPermission' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> Text -> AddPermission

-- | For Amazon S3, the ID of the account that owns the resource. Use this
--   together with <tt>SourceArn</tt> to ensure that the resource is owned
--   by the specified account. It is possible for an Amazon S3 bucket to be
--   deleted by its owner and recreated by another account.
[$sel:sourceAccount:AddPermission'] :: AddPermission -> Maybe Text

-- | For Alexa Smart Home functions, a token that must be supplied by the
--   invoker.
[$sel:eventSourceToken:AddPermission'] :: AddPermission -> Maybe Text

-- | For Amazon Web Services services, the ARN of the Amazon Web Services
--   resource that invokes the function. For example, an Amazon S3 bucket
--   or Amazon SNS topic.
--   
--   Note that Lambda configures the comparison using the
--   <tt>StringLike</tt> operator.
[$sel:sourceArn:AddPermission'] :: AddPermission -> Maybe Text

-- | Specify a version or alias to add permissions to a published version
--   of the function.
[$sel:qualifier:AddPermission'] :: AddPermission -> Maybe Text

-- | Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
[$sel:revisionId:AddPermission'] :: AddPermission -> Maybe Text

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:AddPermission'] :: AddPermission -> Text

-- | A statement identifier that differentiates the statement from others
--   in the same policy.
[$sel:statementId:AddPermission'] :: AddPermission -> Text

-- | The action that the principal can use on the function. For example,
--   <tt>lambda:InvokeFunction</tt> or <tt>lambda:GetFunction</tt>.
[$sel:action:AddPermission'] :: AddPermission -> Text

-- | The Amazon Web Services service or account that invokes the function.
--   If you specify a service, use <tt>SourceArn</tt> or
--   <tt>SourceAccount</tt> to limit who can invoke the function through
--   that service.
[$sel:principal:AddPermission'] :: AddPermission -> Text

-- | Create a value of <a>AddPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceAccount:AddPermission'</a>,
--   <a>addPermission_sourceAccount</a> - For Amazon S3, the ID of the
--   account that owns the resource. Use this together with
--   <tt>SourceArn</tt> to ensure that the resource is owned by the
--   specified account. It is possible for an Amazon S3 bucket to be
--   deleted by its owner and recreated by another account.
--   
--   <a>$sel:eventSourceToken:AddPermission'</a>,
--   <a>addPermission_eventSourceToken</a> - For Alexa Smart Home
--   functions, a token that must be supplied by the invoker.
--   
--   <a>$sel:sourceArn:AddPermission'</a>, <a>addPermission_sourceArn</a> -
--   For Amazon Web Services services, the ARN of the Amazon Web Services
--   resource that invokes the function. For example, an Amazon S3 bucket
--   or Amazon SNS topic.
--   
--   Note that Lambda configures the comparison using the
--   <tt>StringLike</tt> operator.
--   
--   <a>$sel:qualifier:AddPermission'</a>, <a>addPermission_qualifier</a> -
--   Specify a version or alias to add permissions to a published version
--   of the function.
--   
--   <a>$sel:revisionId:AddPermission'</a>, <a>addPermission_revisionId</a>
--   - Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
--   
--   <a>$sel:functionName:AddPermission'</a>,
--   <a>addPermission_functionName</a> - The name of the Lambda function,
--   version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:statementId:AddPermission'</a>,
--   <a>addPermission_statementId</a> - A statement identifier that
--   differentiates the statement from others in the same policy.
--   
--   <a>$sel:action:AddPermission'</a>, <a>addPermission_action</a> - The
--   action that the principal can use on the function. For example,
--   <tt>lambda:InvokeFunction</tt> or <tt>lambda:GetFunction</tt>.
--   
--   <a>$sel:principal:AddPermission'</a>, <a>addPermission_principal</a> -
--   The Amazon Web Services service or account that invokes the function.
--   If you specify a service, use <tt>SourceArn</tt> or
--   <tt>SourceAccount</tt> to limit who can invoke the function through
--   that service.
newAddPermission :: Text -> Text -> Text -> Text -> AddPermission

-- | For Amazon S3, the ID of the account that owns the resource. Use this
--   together with <tt>SourceArn</tt> to ensure that the resource is owned
--   by the specified account. It is possible for an Amazon S3 bucket to be
--   deleted by its owner and recreated by another account.
addPermission_sourceAccount :: Lens' AddPermission (Maybe Text)

-- | For Alexa Smart Home functions, a token that must be supplied by the
--   invoker.
addPermission_eventSourceToken :: Lens' AddPermission (Maybe Text)

-- | For Amazon Web Services services, the ARN of the Amazon Web Services
--   resource that invokes the function. For example, an Amazon S3 bucket
--   or Amazon SNS topic.
--   
--   Note that Lambda configures the comparison using the
--   <tt>StringLike</tt> operator.
addPermission_sourceArn :: Lens' AddPermission (Maybe Text)

-- | Specify a version or alias to add permissions to a published version
--   of the function.
addPermission_qualifier :: Lens' AddPermission (Maybe Text)

-- | Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
addPermission_revisionId :: Lens' AddPermission (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
addPermission_functionName :: Lens' AddPermission Text

-- | A statement identifier that differentiates the statement from others
--   in the same policy.
addPermission_statementId :: Lens' AddPermission Text

-- | The action that the principal can use on the function. For example,
--   <tt>lambda:InvokeFunction</tt> or <tt>lambda:GetFunction</tt>.
addPermission_action :: Lens' AddPermission Text

-- | The Amazon Web Services service or account that invokes the function.
--   If you specify a service, use <tt>SourceArn</tt> or
--   <tt>SourceAccount</tt> to limit who can invoke the function through
--   that service.
addPermission_principal :: Lens' AddPermission Text

-- | <i>See:</i> <a>newAddPermissionResponse</a> smart constructor.
data AddPermissionResponse
AddPermissionResponse' :: Maybe Text -> Int -> AddPermissionResponse

-- | The permission statement that's added to the function policy.
[$sel:statement:AddPermissionResponse'] :: AddPermissionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AddPermissionResponse'] :: AddPermissionResponse -> Int

-- | Create a value of <a>AddPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statement:AddPermissionResponse'</a>,
--   <a>addPermissionResponse_statement</a> - The permission statement
--   that's added to the function policy.
--   
--   <a>$sel:httpStatus:AddPermissionResponse'</a>,
--   <a>addPermissionResponse_httpStatus</a> - The response's http status
--   code.
newAddPermissionResponse :: Int -> AddPermissionResponse

-- | The permission statement that's added to the function policy.
addPermissionResponse_statement :: Lens' AddPermissionResponse (Maybe Text)

-- | The response's http status code.
addPermissionResponse_httpStatus :: Lens' AddPermissionResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.AddPermission.AddPermission
instance GHC.Show.Show Amazonka.Lambda.AddPermission.AddPermission
instance GHC.Read.Read Amazonka.Lambda.AddPermission.AddPermission
instance GHC.Classes.Eq Amazonka.Lambda.AddPermission.AddPermission
instance GHC.Generics.Generic Amazonka.Lambda.AddPermission.AddPermissionResponse
instance GHC.Show.Show Amazonka.Lambda.AddPermission.AddPermissionResponse
instance GHC.Read.Read Amazonka.Lambda.AddPermission.AddPermissionResponse
instance GHC.Classes.Eq Amazonka.Lambda.AddPermission.AddPermissionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.AddPermission.AddPermission
instance Control.DeepSeq.NFData Amazonka.Lambda.AddPermission.AddPermissionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.AddPermission.AddPermission
instance Control.DeepSeq.NFData Amazonka.Lambda.AddPermission.AddPermission
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.AddPermission.AddPermission
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.AddPermission.AddPermission
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.AddPermission.AddPermission
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.AddPermission.AddPermission


-- | Adds permissions to the resource-based policy of a version of an
--   <a>Lambda layer</a>. Use this action to grant layer usage permission
--   to other accounts. You can grant permission to a single account, all
--   accounts in an organization, or all Amazon Web Services accounts.
--   
--   To revoke permission, call RemoveLayerVersionPermission with the
--   statement ID that you specified when you added it.
module Amazonka.Lambda.AddLayerVersionPermission

-- | <i>See:</i> <a>newAddLayerVersionPermission</a> smart constructor.
data AddLayerVersionPermission
AddLayerVersionPermission' :: Maybe Text -> Maybe Text -> Text -> Integer -> Text -> Text -> Text -> AddLayerVersionPermission

-- | Only update the policy if the revision ID matches the ID specified.
--   Use this option to avoid modifying a policy that has changed since you
--   last read it.
[$sel:revisionId:AddLayerVersionPermission'] :: AddLayerVersionPermission -> Maybe Text

-- | With the principal set to <tt>*</tt>, grant permission to all accounts
--   in the specified organization.
[$sel:organizationId:AddLayerVersionPermission'] :: AddLayerVersionPermission -> Maybe Text

-- | The name or Amazon Resource Name (ARN) of the layer.
[$sel:layerName:AddLayerVersionPermission'] :: AddLayerVersionPermission -> Text

-- | The version number.
[$sel:versionNumber:AddLayerVersionPermission'] :: AddLayerVersionPermission -> Integer

-- | An identifier that distinguishes the policy from others on the same
--   layer version.
[$sel:statementId:AddLayerVersionPermission'] :: AddLayerVersionPermission -> Text

-- | The API action that grants access to the layer. For example,
--   <tt>lambda:GetLayerVersion</tt>.
[$sel:action:AddLayerVersionPermission'] :: AddLayerVersionPermission -> Text

-- | An account ID, or <tt>*</tt> to grant layer usage permission to all
--   accounts in an organization, or all Amazon Web Services accounts (if
--   <tt>organizationId</tt> is not specified). For the last case, make
--   sure that you really do want all Amazon Web Services accounts to have
--   usage permission to this layer.
[$sel:principal:AddLayerVersionPermission'] :: AddLayerVersionPermission -> Text

-- | Create a value of <a>AddLayerVersionPermission</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_revisionId</a> - Only update the policy
--   if the revision ID matches the ID specified. Use this option to avoid
--   modifying a policy that has changed since you last read it.
--   
--   <a>$sel:organizationId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_organizationId</a> - With the principal
--   set to <tt>*</tt>, grant permission to all accounts in the specified
--   organization.
--   
--   <a>$sel:layerName:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_layerName</a> - The name or Amazon
--   Resource Name (ARN) of the layer.
--   
--   <a>$sel:versionNumber:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_versionNumber</a> - The version number.
--   
--   <a>$sel:statementId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_statementId</a> - An identifier that
--   distinguishes the policy from others on the same layer version.
--   
--   <a>$sel:action:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_action</a> - The API action that grants
--   access to the layer. For example, <tt>lambda:GetLayerVersion</tt>.
--   
--   <a>$sel:principal:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_principal</a> - An account ID, or
--   <tt>*</tt> to grant layer usage permission to all accounts in an
--   organization, or all Amazon Web Services accounts (if
--   <tt>organizationId</tt> is not specified). For the last case, make
--   sure that you really do want all Amazon Web Services accounts to have
--   usage permission to this layer.
newAddLayerVersionPermission :: Text -> Integer -> Text -> Text -> Text -> AddLayerVersionPermission

-- | Only update the policy if the revision ID matches the ID specified.
--   Use this option to avoid modifying a policy that has changed since you
--   last read it.
addLayerVersionPermission_revisionId :: Lens' AddLayerVersionPermission (Maybe Text)

-- | With the principal set to <tt>*</tt>, grant permission to all accounts
--   in the specified organization.
addLayerVersionPermission_organizationId :: Lens' AddLayerVersionPermission (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the layer.
addLayerVersionPermission_layerName :: Lens' AddLayerVersionPermission Text

-- | The version number.
addLayerVersionPermission_versionNumber :: Lens' AddLayerVersionPermission Integer

-- | An identifier that distinguishes the policy from others on the same
--   layer version.
addLayerVersionPermission_statementId :: Lens' AddLayerVersionPermission Text

-- | The API action that grants access to the layer. For example,
--   <tt>lambda:GetLayerVersion</tt>.
addLayerVersionPermission_action :: Lens' AddLayerVersionPermission Text

-- | An account ID, or <tt>*</tt> to grant layer usage permission to all
--   accounts in an organization, or all Amazon Web Services accounts (if
--   <tt>organizationId</tt> is not specified). For the last case, make
--   sure that you really do want all Amazon Web Services accounts to have
--   usage permission to this layer.
addLayerVersionPermission_principal :: Lens' AddLayerVersionPermission Text

-- | <i>See:</i> <a>newAddLayerVersionPermissionResponse</a> smart
--   constructor.
data AddLayerVersionPermissionResponse
AddLayerVersionPermissionResponse' :: Maybe Text -> Maybe Text -> Int -> AddLayerVersionPermissionResponse

-- | The permission statement.
[$sel:statement:AddLayerVersionPermissionResponse'] :: AddLayerVersionPermissionResponse -> Maybe Text

-- | A unique identifier for the current revision of the policy.
[$sel:revisionId:AddLayerVersionPermissionResponse'] :: AddLayerVersionPermissionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AddLayerVersionPermissionResponse'] :: AddLayerVersionPermissionResponse -> Int

-- | Create a value of <a>AddLayerVersionPermissionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statement:AddLayerVersionPermissionResponse'</a>,
--   <a>addLayerVersionPermissionResponse_statement</a> - The permission
--   statement.
--   
--   <a>$sel:revisionId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermissionResponse_revisionId</a> - A unique
--   identifier for the current revision of the policy.
--   
--   <a>$sel:httpStatus:AddLayerVersionPermissionResponse'</a>,
--   <a>addLayerVersionPermissionResponse_httpStatus</a> - The response's
--   http status code.
newAddLayerVersionPermissionResponse :: Int -> AddLayerVersionPermissionResponse

-- | The permission statement.
addLayerVersionPermissionResponse_statement :: Lens' AddLayerVersionPermissionResponse (Maybe Text)

-- | A unique identifier for the current revision of the policy.
addLayerVersionPermissionResponse_revisionId :: Lens' AddLayerVersionPermissionResponse (Maybe Text)

-- | The response's http status code.
addLayerVersionPermissionResponse_httpStatus :: Lens' AddLayerVersionPermissionResponse Int
instance GHC.Generics.Generic Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance GHC.Show.Show Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance GHC.Read.Read Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance GHC.Classes.Eq Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance GHC.Generics.Generic Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermissionResponse
instance GHC.Show.Show Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermissionResponse
instance GHC.Read.Read Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermissionResponse
instance GHC.Classes.Eq Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermissionResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance Control.DeepSeq.NFData Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermissionResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance Control.DeepSeq.NFData Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.AddLayerVersionPermission.AddLayerVersionPermission


-- | Removes <a>tags</a> from a function.
module Amazonka.Lambda.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The function's Amazon Resource Name (ARN).
[$sel:resource:UntagResource'] :: UntagResource -> Text

-- | A list of tag keys to remove from the function.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:UntagResource'</a>, <a>untagResource_resource</a> -
--   The function's Amazon Resource Name (ARN).
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys to remove from the function.
newUntagResource :: Text -> UntagResource

-- | The function's Amazon Resource Name (ARN).
untagResource_resource :: Lens' UntagResource Text

-- | A list of tag keys to remove from the function.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.Lambda.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.Lambda.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.Lambda.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.Lambda.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.Lambda.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.Lambda.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.Lambda.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.Lambda.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Lambda.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Lambda.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.UntagResource.UntagResource


-- | Updates the configuration of a Lambda function <a>alias</a>.
module Amazonka.Lambda.UpdateAlias

-- | <i>See:</i> <a>newUpdateAlias</a> smart constructor.
data UpdateAlias
UpdateAlias' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateAlias

-- | The <a>routing configuration</a> of the alias.
[$sel:routingConfig:UpdateAlias'] :: UpdateAlias -> Maybe AliasRoutingConfiguration

-- | The function version that the alias invokes.
[$sel:functionVersion:UpdateAlias'] :: UpdateAlias -> Maybe Text

-- | A description of the alias.
[$sel:description:UpdateAlias'] :: UpdateAlias -> Maybe Text

-- | Only update the alias if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying an alias that has
--   changed since you last read it.
[$sel:revisionId:UpdateAlias'] :: UpdateAlias -> Maybe Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:UpdateAlias'] :: UpdateAlias -> Text

-- | The name of the alias.
[$sel:name:UpdateAlias'] :: UpdateAlias -> Text

-- | Create a value of <a>UpdateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:UpdateAlias'</a>,
--   <a>updateAlias_routingConfig</a> - The <a>routing configuration</a> of
--   the alias.
--   
--   <a>$sel:functionVersion:UpdateAlias'</a>,
--   <a>updateAlias_functionVersion</a> - The function version that the
--   alias invokes.
--   
--   <a>$sel:description:UpdateAlias'</a>, <a>updateAlias_description</a> -
--   A description of the alias.
--   
--   <a>$sel:revisionId:UpdateAlias'</a>, <a>updateAlias_revisionId</a> -
--   Only update the alias if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying an alias that has
--   changed since you last read it.
--   
--   <a>$sel:functionName:UpdateAlias'</a>, <a>updateAlias_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:UpdateAlias'</a>, <a>updateAlias_name</a> - The name of
--   the alias.
newUpdateAlias :: Text -> Text -> UpdateAlias

-- | The <a>routing configuration</a> of the alias.
updateAlias_routingConfig :: Lens' UpdateAlias (Maybe AliasRoutingConfiguration)

-- | The function version that the alias invokes.
updateAlias_functionVersion :: Lens' UpdateAlias (Maybe Text)

-- | A description of the alias.
updateAlias_description :: Lens' UpdateAlias (Maybe Text)

-- | Only update the alias if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying an alias that has
--   changed since you last read it.
updateAlias_revisionId :: Lens' UpdateAlias (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
updateAlias_functionName :: Lens' UpdateAlias Text

-- | The name of the alias.
updateAlias_name :: Lens' UpdateAlias Text

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
[$sel:routingConfig:AliasConfiguration'] :: AliasConfiguration -> Maybe AliasRoutingConfiguration

-- | The name of the alias.
[$sel:name:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The function version that the alias invokes.
[$sel:functionVersion:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the alias.
[$sel:aliasArn:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A description of the alias.
[$sel:description:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | A unique identifier that changes when you update the alias.
[$sel:revisionId:AliasConfiguration'] :: AliasConfiguration -> Maybe Text

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.UpdateAlias.UpdateAlias
instance GHC.Show.Show Amazonka.Lambda.UpdateAlias.UpdateAlias
instance GHC.Read.Read Amazonka.Lambda.UpdateAlias.UpdateAlias
instance GHC.Classes.Eq Amazonka.Lambda.UpdateAlias.UpdateAlias
instance Amazonka.Types.AWSRequest Amazonka.Lambda.UpdateAlias.UpdateAlias
instance Data.Hashable.Class.Hashable Amazonka.Lambda.UpdateAlias.UpdateAlias
instance Control.DeepSeq.NFData Amazonka.Lambda.UpdateAlias.UpdateAlias
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.UpdateAlias.UpdateAlias
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.UpdateAlias.UpdateAlias
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.UpdateAlias.UpdateAlias
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.UpdateAlias.UpdateAlias


-- | Update the code signing configuration. Changes to the code signing
--   configuration take effect the next time a user tries to deploy a code
--   package to the function.
module Amazonka.Lambda.UpdateCodeSigningConfig

-- | <i>See:</i> <a>newUpdateCodeSigningConfig</a> smart constructor.
data UpdateCodeSigningConfig
UpdateCodeSigningConfig' :: Maybe AllowedPublishers -> Maybe CodeSigningPolicies -> Maybe Text -> Text -> UpdateCodeSigningConfig

-- | Signing profiles for this code signing configuration.
[$sel:allowedPublishers:UpdateCodeSigningConfig'] :: UpdateCodeSigningConfig -> Maybe AllowedPublishers

-- | The code signing policy.
[$sel:codeSigningPolicies:UpdateCodeSigningConfig'] :: UpdateCodeSigningConfig -> Maybe CodeSigningPolicies

-- | Descriptive name for this code signing configuration.
[$sel:description:UpdateCodeSigningConfig'] :: UpdateCodeSigningConfig -> Maybe Text

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
[$sel:codeSigningConfigArn:UpdateCodeSigningConfig'] :: UpdateCodeSigningConfig -> Text

-- | Create a value of <a>UpdateCodeSigningConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedPublishers:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_allowedPublishers</a> - Signing profiles
--   for this code signing configuration.
--   
--   <a>$sel:codeSigningPolicies:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_codeSigningPolicies</a> - The code signing
--   policy.
--   
--   <a>$sel:description:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_description</a> - Descriptive name for this
--   code signing configuration.
--   
--   <a>$sel:codeSigningConfigArn:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_codeSigningConfigArn</a> - The The Amazon
--   Resource Name (ARN) of the code signing configuration.
newUpdateCodeSigningConfig :: Text -> UpdateCodeSigningConfig

-- | Signing profiles for this code signing configuration.
updateCodeSigningConfig_allowedPublishers :: Lens' UpdateCodeSigningConfig (Maybe AllowedPublishers)

-- | The code signing policy.
updateCodeSigningConfig_codeSigningPolicies :: Lens' UpdateCodeSigningConfig (Maybe CodeSigningPolicies)

-- | Descriptive name for this code signing configuration.
updateCodeSigningConfig_description :: Lens' UpdateCodeSigningConfig (Maybe Text)

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
updateCodeSigningConfig_codeSigningConfigArn :: Lens' UpdateCodeSigningConfig Text

-- | <i>See:</i> <a>newUpdateCodeSigningConfigResponse</a> smart
--   constructor.
data UpdateCodeSigningConfigResponse
UpdateCodeSigningConfigResponse' :: Int -> CodeSigningConfig -> UpdateCodeSigningConfigResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateCodeSigningConfigResponse'] :: UpdateCodeSigningConfigResponse -> Int

-- | The code signing configuration
[$sel:codeSigningConfig:UpdateCodeSigningConfigResponse'] :: UpdateCodeSigningConfigResponse -> CodeSigningConfig

-- | Create a value of <a>UpdateCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCodeSigningConfigResponse'</a>,
--   <a>updateCodeSigningConfigResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:codeSigningConfig:UpdateCodeSigningConfigResponse'</a>,
--   <a>updateCodeSigningConfigResponse_codeSigningConfig</a> - The code
--   signing configuration
newUpdateCodeSigningConfigResponse :: Int -> CodeSigningConfig -> UpdateCodeSigningConfigResponse

-- | The response's http status code.
updateCodeSigningConfigResponse_httpStatus :: Lens' UpdateCodeSigningConfigResponse Int

-- | The code signing configuration
updateCodeSigningConfigResponse_codeSigningConfig :: Lens' UpdateCodeSigningConfigResponse CodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance GHC.Show.Show Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance GHC.Read.Read Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance GHC.Classes.Eq Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance GHC.Generics.Generic Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfigResponse
instance GHC.Show.Show Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfigResponse
instance GHC.Read.Read Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfigResponse
instance GHC.Classes.Eq Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.UpdateCodeSigningConfig.UpdateCodeSigningConfig


-- | Updates an event source mapping. You can change the function that
--   Lambda invokes, or pause invocation and resume later from the same
--   location.
--   
--   The following error handling options are only available for stream
--   sources (DynamoDB and Kinesis):
--   
--   <ul>
--   <li><tt>BisectBatchOnFunctionError</tt> - If the function returns an
--   error, split the batch in two and retry.</li>
--   <li><tt>DestinationConfig</tt> - Send discarded records to an Amazon
--   SQS queue or Amazon SNS topic.</li>
--   <li><tt>MaximumRecordAgeInSeconds</tt> - Discard records older than
--   the specified age. The default value is infinite (-1). When set to
--   infinite (-1), failed records are retried until the record
--   expires</li>
--   <li><tt>MaximumRetryAttempts</tt> - Discard records after the
--   specified number of retries. The default value is infinite (-1). When
--   set to infinite (-1), failed records are retried until the record
--   expires.</li>
--   <li><tt>ParallelizationFactor</tt> - Process multiple batches from
--   each shard concurrently.</li>
--   </ul>
module Amazonka.Lambda.UpdateEventSourceMapping

-- | <i>See:</i> <a>newUpdateEventSourceMapping</a> smart constructor.
data UpdateEventSourceMapping
UpdateEventSourceMapping' :: Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Int -> Maybe Natural -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe Text -> Maybe DestinationConfig -> Text -> UpdateEventSourceMapping

-- | When true, the event source mapping is active. When false, Lambda
--   pauses polling and invocation.
--   
--   Default: True
[$sel:enabled:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Bool

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry.
[$sel:bisectBatchOnFunctionError:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Bool

-- | (Streams only) The number of batches to process from each shard
--   concurrently.
[$sel:parallelizationFactor:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Natural

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is infinite (-1). When set to infinite (-1), failed
--   records will be retried until the record expires.
[$sel:maximumRetryAttempts:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
[$sel:batchSize:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Natural

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Natural

-- | An array of authentication protocols or VPC components required to
--   secure your event source.
[$sel:sourceAccessConfigurations:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is infinite (-1).
[$sel:maximumRecordAgeInSeconds:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is between 1 second up to 900 seconds.
[$sel:tumblingWindowInSeconds:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Natural

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
[$sel:functionName:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe Text

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Maybe DestinationConfig

-- | The identifier of the event source mapping.
[$sel:uuid:UpdateEventSourceMapping'] :: UpdateEventSourceMapping -> Text

-- | Create a value of <a>UpdateEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_enabled</a> - When true, the event source
--   mapping is active. When false, Lambda pauses polling and invocation.
--   
--   Default: True
--   
--   <a>$sel:bisectBatchOnFunctionError:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_bisectBatchOnFunctionError</a> - (Streams
--   only) If the function returns an error, split the batch in two and
--   retry.
--   
--   <a>$sel:parallelizationFactor:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_parallelizationFactor</a> - (Streams only)
--   The number of batches to process from each shard concurrently.
--   
--   <a>$sel:maximumRetryAttempts:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_maximumRetryAttempts</a> - (Streams only)
--   Discard records after the specified number of retries. The default
--   value is infinite (-1). When set to infinite (-1), failed records will
--   be retried until the record expires.
--   
--   <a>$sel:batchSize:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_batchSize</a> - The maximum number of
--   records in each batch that Lambda pulls from your stream or queue and
--   sends to your function. Lambda passes all of the records in the batch
--   to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
--   
--   <a>$sel:maximumBatchingWindowInSeconds:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_maximumBatchingWindowInSeconds</a> -
--   (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:sourceAccessConfigurations:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_sourceAccessConfigurations</a> - An array
--   of authentication protocols or VPC components required to secure your
--   event source.
--   
--   <a>$sel:maximumRecordAgeInSeconds:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_maximumRecordAgeInSeconds</a> - (Streams
--   only) Discard records older than the specified age. The default value
--   is infinite (-1).
--   
--   <a>$sel:functionResponseTypes:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_functionResponseTypes</a> - (Streams only)
--   A list of current response type enums applied to the event source
--   mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_tumblingWindowInSeconds</a> - (Streams
--   only) The duration in seconds of a processing window. The range is
--   between 1 second up to 900 seconds.
--   
--   <a>$sel:functionName:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
--   
--   <a>$sel:destinationConfig:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_destinationConfig</a> - (Streams only) An
--   Amazon SQS queue or Amazon SNS topic destination for discarded
--   records.
--   
--   <a>$sel:uuid:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_uuid</a> - The identifier of the event
--   source mapping.
newUpdateEventSourceMapping :: Text -> UpdateEventSourceMapping

-- | When true, the event source mapping is active. When false, Lambda
--   pauses polling and invocation.
--   
--   Default: True
updateEventSourceMapping_enabled :: Lens' UpdateEventSourceMapping (Maybe Bool)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry.
updateEventSourceMapping_bisectBatchOnFunctionError :: Lens' UpdateEventSourceMapping (Maybe Bool)

-- | (Streams only) The number of batches to process from each shard
--   concurrently.
updateEventSourceMapping_parallelizationFactor :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is infinite (-1). When set to infinite (-1), failed
--   records will be retried until the record expires.
updateEventSourceMapping_maximumRetryAttempts :: Lens' UpdateEventSourceMapping (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
updateEventSourceMapping_batchSize :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
updateEventSourceMapping_maximumBatchingWindowInSeconds :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | An array of authentication protocols or VPC components required to
--   secure your event source.
updateEventSourceMapping_sourceAccessConfigurations :: Lens' UpdateEventSourceMapping (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is infinite (-1).
updateEventSourceMapping_maximumRecordAgeInSeconds :: Lens' UpdateEventSourceMapping (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
updateEventSourceMapping_functionResponseTypes :: Lens' UpdateEventSourceMapping (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is between 1 second up to 900 seconds.
updateEventSourceMapping_tumblingWindowInSeconds :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
updateEventSourceMapping_functionName :: Lens' UpdateEventSourceMapping (Maybe Text)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
updateEventSourceMapping_destinationConfig :: Lens' UpdateEventSourceMapping (Maybe DestinationConfig)

-- | The identifier of the event source mapping.
updateEventSourceMapping_uuid :: Lens' UpdateEventSourceMapping Text

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
[$sel:eventSourceArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
[$sel:state:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
[$sel:startingPositionTimestamp:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | The ARN of the Lambda function.
[$sel:functionArn:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | The name of the Kafka topic.
[$sel:topics:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
[$sel:queues:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe (NonEmpty Text)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
[$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Bool

-- | The identifier of the event source mapping.
[$sel:uuid:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
[$sel:parallelizationFactor:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The result of the last Lambda invocation of your function.
[$sel:lastProcessingResult:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
[$sel:maximumRetryAttempts:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:batchSize:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
[$sel:stateTransitionReason:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Text

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
[$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
[$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [SourceAccessConfiguration]

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
[$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Int

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
[$sel:functionResponseTypes:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe [FunctionResponseType]

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
[$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe Natural

-- | The self-managed Apache Kafka cluster for your event source.
[$sel:selfManagedEventSource:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe SelfManagedEventSource

-- | The date that the event source mapping was last updated or that its
--   state changed.
[$sel:lastModified:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe POSIX

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
[$sel:destinationConfig:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe DestinationConfig

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
[$sel:startingPosition:EventSourceMappingConfiguration'] :: EventSourceMappingConfiguration -> Maybe EventSourcePosition

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)
instance GHC.Generics.Generic Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance GHC.Show.Show Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance GHC.Read.Read Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance GHC.Classes.Eq Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance Amazonka.Types.AWSRequest Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance Data.Hashable.Class.Hashable Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance Control.DeepSeq.NFData Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.UpdateEventSourceMapping.UpdateEventSourceMapping


-- | Updates a Lambda function's code. If code signing is enabled for the
--   function, the code package must be signed by a trusted publisher. For
--   more information, see <a>Configuring code signing</a>.
--   
--   The function's code is locked when you publish a version. You can't
--   modify the code of a published version, only the unpublished version.
--   
--   For a function defined as a container image, Lambda resolves the image
--   tag to an image digest. In Amazon ECR, if you update the image tag to
--   a new image, Lambda does not automatically update the function.
module Amazonka.Lambda.UpdateFunctionCode

-- | <i>See:</i> <a>newUpdateFunctionCode</a> smart constructor.
data UpdateFunctionCode
UpdateFunctionCode' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Text -> UpdateFunctionCode

-- | For versioned objects, the version of the deployment package object to
--   use.
[$sel:s3ObjectVersion:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe Text

-- | The Amazon S3 key of the deployment package.
[$sel:s3Key:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe Text

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.
[$sel:zipFile:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe (Sensitive Base64)

-- | The instruction set architecture that the function supports. Enter a
--   string array with one of the valid values. The default value is
--   <tt>x86_64</tt>.
[$sel:architectures:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe (NonEmpty Architecture)

-- | URI of a container image in the Amazon ECR registry.
[$sel:imageUri:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe Text

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
[$sel:s3Bucket:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe Text

-- | Set to true to validate the request parameters and access permissions
--   without modifying the function code.
[$sel:dryRun:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe Bool

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a function that has
--   changed since you last read it.
[$sel:revisionId:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe Text

-- | Set to true to publish a new version of the function after updating
--   the code. This has the same effect as calling PublishVersion
--   separately.
[$sel:publish:UpdateFunctionCode'] :: UpdateFunctionCode -> Maybe Bool

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:UpdateFunctionCode'] :: UpdateFunctionCode -> Text

-- | Create a value of <a>UpdateFunctionCode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_s3ObjectVersion</a> - For versioned objects, the
--   version of the deployment package object to use.
--   
--   <a>$sel:s3Key:UpdateFunctionCode'</a>, <a>updateFunctionCode_s3Key</a>
--   - The Amazon S3 key of the deployment package.
--   
--   <a>$sel:zipFile:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_zipFile</a> - The base64-encoded contents of the
--   deployment package. Amazon Web Services SDK and Amazon Web Services
--   CLI clients handle the encoding for you.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:architectures:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_architectures</a> - The instruction set
--   architecture that the function supports. Enter a string array with one
--   of the valid values. The default value is <tt>x86_64</tt>.
--   
--   <a>$sel:imageUri:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_imageUri</a> - URI of a container image in the
--   Amazon ECR registry.
--   
--   <a>$sel:s3Bucket:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_s3Bucket</a> - An Amazon S3 bucket in the same
--   Amazon Web Services Region as your function. The bucket can be in a
--   different Amazon Web Services account.
--   
--   <a>$sel:dryRun:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_dryRun</a> - Set to true to validate the request
--   parameters and access permissions without modifying the function code.
--   
--   <a>$sel:revisionId:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_revisionId</a> - Only update the function if the
--   revision ID matches the ID that's specified. Use this option to avoid
--   modifying a function that has changed since you last read it.
--   
--   <a>$sel:publish:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_publish</a> - Set to true to publish a new
--   version of the function after updating the code. This has the same
--   effect as calling PublishVersion separately.
--   
--   <a>$sel:functionName:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newUpdateFunctionCode :: Text -> UpdateFunctionCode

-- | For versioned objects, the version of the deployment package object to
--   use.
updateFunctionCode_s3ObjectVersion :: Lens' UpdateFunctionCode (Maybe Text)

-- | The Amazon S3 key of the deployment package.
updateFunctionCode_s3Key :: Lens' UpdateFunctionCode (Maybe Text)

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
updateFunctionCode_zipFile :: Lens' UpdateFunctionCode (Maybe ByteString)

-- | The instruction set architecture that the function supports. Enter a
--   string array with one of the valid values. The default value is
--   <tt>x86_64</tt>.
updateFunctionCode_architectures :: Lens' UpdateFunctionCode (Maybe (NonEmpty Architecture))

-- | URI of a container image in the Amazon ECR registry.
updateFunctionCode_imageUri :: Lens' UpdateFunctionCode (Maybe Text)

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
updateFunctionCode_s3Bucket :: Lens' UpdateFunctionCode (Maybe Text)

-- | Set to true to validate the request parameters and access permissions
--   without modifying the function code.
updateFunctionCode_dryRun :: Lens' UpdateFunctionCode (Maybe Bool)

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a function that has
--   changed since you last read it.
updateFunctionCode_revisionId :: Lens' UpdateFunctionCode (Maybe Text)

-- | Set to true to publish a new version of the function after updating
--   the code. This has the same effect as calling PublishVersion
--   separately.
updateFunctionCode_publish :: Lens' UpdateFunctionCode (Maybe Bool)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
updateFunctionCode_functionName :: Lens' UpdateFunctionCode Text

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | The amount of memory available to the function at runtime.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The runtime environment for the Lambda function.
[$sel:runtime:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Runtime

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
[$sel:state:FunctionConfiguration'] :: FunctionConfiguration -> Maybe State

-- | The ARN of the signing profile version.
[$sel:signingProfileVersionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
[$sel:lastUpdateStatus:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatus

-- | The function's Amazon Resource Name (ARN).
[$sel:functionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
[$sel:kmsKeyArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
[$sel:packageType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe PackageType

-- | Connection settings for an <a>Amazon EFS file system</a>.
[$sel:fileSystemConfigs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [FileSystemConfig]

-- | The function's <a>environment variables</a>.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EnvironmentResponse

-- | The function's dead letter queue.
[$sel:deadLetterConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
[$sel:architectures:FunctionConfiguration'] :: FunctionConfiguration -> Maybe (NonEmpty Architecture)

-- | The ARN of the signing job.
[$sel:signingJobArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's execution role.
[$sel:role':FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's networking configuration.
[$sel:vpcConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe VpcConfigResponse

-- | The version of the Lambda function.
[$sel:version:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The name of the function.
[$sel:functionName:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's <a>layers</a>.
[$sel:layers:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [Layer]

-- | The size of the function's deployment package, in bytes.
[$sel:codeSize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Integer

-- | The function that Lambda calls to begin executing your function.
[$sel:handler:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The reason for the last update that was performed on the function.
[$sel:lastUpdateStatusReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason for the function's current state.
[$sel:stateReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The SHA256 hash of the function's deployment package.
[$sel:codeSha256:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's X-Ray tracing configuration.
[$sel:tracingConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe TracingConfigResponse

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
[$sel:stateReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe StateReasonCode

-- | The function's image configuration values.
[$sel:imageConfigResponse:FunctionConfiguration'] :: FunctionConfiguration -> Maybe ImageConfigResponse

-- | The function's description.
[$sel:description:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason code for the last update that was performed on the
--   function.
[$sel:lastUpdateStatusReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatusReasonCode

-- | The latest updated revision of the function or alias.
[$sel:revisionId:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | For Lambda@Edge functions, the ARN of the master function.
[$sel:masterArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance GHC.Show.Show Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance GHC.Classes.Eq Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance Amazonka.Types.AWSRequest Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance Data.Hashable.Class.Hashable Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance Control.DeepSeq.NFData Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.UpdateFunctionCode.UpdateFunctionCode


-- | Modify the version-specific settings of a Lambda function.
--   
--   When you update a function, Lambda provisions an instance of the
--   function and its supporting resources. If your function connects to a
--   VPC, this process can take a minute. During this time, you can't
--   modify the function, but you can still invoke it. The
--   <tt>LastUpdateStatus</tt>, <tt>LastUpdateStatusReason</tt>, and
--   <tt>LastUpdateStatusReasonCode</tt> fields in the response from
--   GetFunctionConfiguration indicate when the update is complete and the
--   function is processing events with the new configuration. For more
--   information, see <a>Function States</a>.
--   
--   These settings can vary between versions of a function and are locked
--   when you publish a version. You can't modify the configuration of a
--   published version, only the unpublished version.
--   
--   To configure function concurrency, use PutFunctionConcurrency. To
--   grant invoke permissions to an account or Amazon Web Services service,
--   use AddPermission.
module Amazonka.Lambda.UpdateFunctionConfiguration

-- | <i>See:</i> <a>newUpdateFunctionConfiguration</a> smart constructor.
data UpdateFunctionConfiguration
UpdateFunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe Text -> Maybe [FileSystemConfig] -> Maybe Environment -> Maybe ImageConfig -> Maybe DeadLetterConfig -> Maybe Text -> Maybe VpcConfig -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe TracingConfig -> Maybe Text -> Maybe Text -> Text -> UpdateFunctionConfiguration

-- | The amount of <a>memory available to the function</a> at runtime.
--   Increasing the function memory also increases its CPU allocation. The
--   default value is 128 MB. The value can be any multiple of 1 MB.
[$sel:memorySize:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Natural

-- | The identifier of the function's <a>runtime</a>.
[$sel:runtime:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Runtime

-- | The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
[$sel:kmsKeyArn:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Text

-- | Connection settings for an Amazon EFS file system.
[$sel:fileSystemConfigs:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe [FileSystemConfig]

-- | Environment variables that are accessible from function code during
--   execution.
[$sel:environment:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Environment

-- | <a>Container image configuration values</a> that override the values
--   in the container image Docker file.
[$sel:imageConfig:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe ImageConfig

-- | A dead letter queue configuration that specifies the queue or topic
--   where Lambda sends asynchronous events when they fail processing. For
--   more information, see <a>Dead Letter Queues</a>.
[$sel:deadLetterConfig:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe DeadLetterConfig

-- | The Amazon Resource Name (ARN) of the function's execution role.
[$sel:role':UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Text

-- | For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
[$sel:vpcConfig:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe VpcConfig

-- | A list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
[$sel:layers:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe [Text]

-- | The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
[$sel:handler:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Text

-- | The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
[$sel:timeout:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Natural

-- | Set <tt>Mode</tt> to <tt>Active</tt> to sample and trace a subset of
--   incoming requests with <a>X-Ray</a>.
[$sel:tracingConfig:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe TracingConfig

-- | A description of the function.
[$sel:description:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Text

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a function that has
--   changed since you last read it.
[$sel:revisionId:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Maybe Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
[$sel:functionName:UpdateFunctionConfiguration'] :: UpdateFunctionConfiguration -> Text

-- | Create a value of <a>UpdateFunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_memorySize</a> - The amount of
--   <a>memory available to the function</a> at runtime. Increasing the
--   function memory also increases its CPU allocation. The default value
--   is 128 MB. The value can be any multiple of 1 MB.
--   
--   <a>$sel:runtime:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_runtime</a> - The identifier of the
--   function's <a>runtime</a>.
--   
--   <a>$sel:kmsKeyArn:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_kmsKeyArn</a> - The ARN of the Amazon
--   Web Services Key Management Service (KMS) key that's used to encrypt
--   your function's environment variables. If it's not provided, Lambda
--   uses a default service key.
--   
--   <a>$sel:fileSystemConfigs:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_fileSystemConfigs</a> - Connection
--   settings for an Amazon EFS file system.
--   
--   <a>$sel:environment:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_environment</a> - Environment variables
--   that are accessible from function code during execution.
--   
--   <a>$sel:imageConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_imageConfig</a> - <a>Container image
--   configuration values</a> that override the values in the container
--   image Docker file.
--   
--   <a>$sel:deadLetterConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_deadLetterConfig</a> - A dead letter
--   queue configuration that specifies the queue or topic where Lambda
--   sends asynchronous events when they fail processing. For more
--   information, see <a>Dead Letter Queues</a>.
--   
--   <a>$sel:role':UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_role</a> - The Amazon Resource Name
--   (ARN) of the function's execution role.
--   
--   <a>$sel:vpcConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_vpcConfig</a> - For network
--   connectivity to Amazon Web Services resources in a VPC, specify a list
--   of security groups and subnets in the VPC. When you connect a function
--   to a VPC, it can only access resources and the internet through that
--   VPC. For more information, see <a>VPC Settings</a>.
--   
--   <a>$sel:layers:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_layers</a> - A list of <a>function
--   layers</a> to add to the function's execution environment. Specify
--   each layer by its ARN, including the version.
--   
--   <a>$sel:handler:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_handler</a> - The name of the method
--   within your code that Lambda calls to execute your function. The
--   format includes the file name. It can also include namespaces and
--   other qualifiers, depending on the runtime. For more information, see
--   <a>Programming Model</a>.
--   
--   <a>$sel:timeout:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_timeout</a> - The amount of time that
--   Lambda allows a function to run before stopping it. The default is 3
--   seconds. The maximum allowed value is 900 seconds. For additional
--   information, see <a>Lambda execution environment</a>.
--   
--   <a>$sel:tracingConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_tracingConfig</a> - Set <tt>Mode</tt>
--   to <tt>Active</tt> to sample and trace a subset of incoming requests
--   with <a>X-Ray</a>.
--   
--   <a>$sel:description:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_description</a> - A description of the
--   function.
--   
--   <a>$sel:revisionId:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_revisionId</a> - Only update the
--   function if the revision ID matches the ID that's specified. Use this
--   option to avoid modifying a function that has changed since you last
--   read it.
--   
--   <a>$sel:functionName:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newUpdateFunctionConfiguration :: Text -> UpdateFunctionConfiguration

-- | The amount of <a>memory available to the function</a> at runtime.
--   Increasing the function memory also increases its CPU allocation. The
--   default value is 128 MB. The value can be any multiple of 1 MB.
updateFunctionConfiguration_memorySize :: Lens' UpdateFunctionConfiguration (Maybe Natural)

-- | The identifier of the function's <a>runtime</a>.
updateFunctionConfiguration_runtime :: Lens' UpdateFunctionConfiguration (Maybe Runtime)

-- | The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
updateFunctionConfiguration_kmsKeyArn :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | Connection settings for an Amazon EFS file system.
updateFunctionConfiguration_fileSystemConfigs :: Lens' UpdateFunctionConfiguration (Maybe [FileSystemConfig])

-- | Environment variables that are accessible from function code during
--   execution.
updateFunctionConfiguration_environment :: Lens' UpdateFunctionConfiguration (Maybe Environment)

-- | <a>Container image configuration values</a> that override the values
--   in the container image Docker file.
updateFunctionConfiguration_imageConfig :: Lens' UpdateFunctionConfiguration (Maybe ImageConfig)

-- | A dead letter queue configuration that specifies the queue or topic
--   where Lambda sends asynchronous events when they fail processing. For
--   more information, see <a>Dead Letter Queues</a>.
updateFunctionConfiguration_deadLetterConfig :: Lens' UpdateFunctionConfiguration (Maybe DeadLetterConfig)

-- | The Amazon Resource Name (ARN) of the function's execution role.
updateFunctionConfiguration_role :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
updateFunctionConfiguration_vpcConfig :: Lens' UpdateFunctionConfiguration (Maybe VpcConfig)

-- | A list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
updateFunctionConfiguration_layers :: Lens' UpdateFunctionConfiguration (Maybe [Text])

-- | The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
updateFunctionConfiguration_handler :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
updateFunctionConfiguration_timeout :: Lens' UpdateFunctionConfiguration (Maybe Natural)

-- | Set <tt>Mode</tt> to <tt>Active</tt> to sample and trace a subset of
--   incoming requests with <a>X-Ray</a>.
updateFunctionConfiguration_tracingConfig :: Lens' UpdateFunctionConfiguration (Maybe TracingConfig)

-- | A description of the function.
updateFunctionConfiguration_description :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a function that has
--   changed since you last read it.
updateFunctionConfiguration_revisionId :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
updateFunctionConfiguration_functionName :: Lens' UpdateFunctionConfiguration Text

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | The amount of memory available to the function at runtime.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The runtime environment for the Lambda function.
[$sel:runtime:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Runtime

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
[$sel:state:FunctionConfiguration'] :: FunctionConfiguration -> Maybe State

-- | The ARN of the signing profile version.
[$sel:signingProfileVersionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
[$sel:lastUpdateStatus:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatus

-- | The function's Amazon Resource Name (ARN).
[$sel:functionArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
[$sel:kmsKeyArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
[$sel:packageType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe PackageType

-- | Connection settings for an <a>Amazon EFS file system</a>.
[$sel:fileSystemConfigs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [FileSystemConfig]

-- | The function's <a>environment variables</a>.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EnvironmentResponse

-- | The function's dead letter queue.
[$sel:deadLetterConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe DeadLetterConfig

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
[$sel:architectures:FunctionConfiguration'] :: FunctionConfiguration -> Maybe (NonEmpty Architecture)

-- | The ARN of the signing job.
[$sel:signingJobArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's execution role.
[$sel:role':FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's networking configuration.
[$sel:vpcConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe VpcConfigResponse

-- | The version of the Lambda function.
[$sel:version:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The name of the function.
[$sel:functionName:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's <a>layers</a>.
[$sel:layers:FunctionConfiguration'] :: FunctionConfiguration -> Maybe [Layer]

-- | The size of the function's deployment package, in bytes.
[$sel:codeSize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Integer

-- | The function that Lambda calls to begin executing your function.
[$sel:handler:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Natural

-- | The reason for the last update that was performed on the function.
[$sel:lastUpdateStatusReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason for the function's current state.
[$sel:stateReason:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
[$sel:lastModified:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The SHA256 hash of the function's deployment package.
[$sel:codeSha256:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The function's X-Ray tracing configuration.
[$sel:tracingConfig:FunctionConfiguration'] :: FunctionConfiguration -> Maybe TracingConfigResponse

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
[$sel:stateReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe StateReasonCode

-- | The function's image configuration values.
[$sel:imageConfigResponse:FunctionConfiguration'] :: FunctionConfiguration -> Maybe ImageConfigResponse

-- | The function's description.
[$sel:description:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The reason code for the last update that was performed on the
--   function.
[$sel:lastUpdateStatusReasonCode:FunctionConfiguration'] :: FunctionConfiguration -> Maybe LastUpdateStatusReasonCode

-- | The latest updated revision of the function or alias.
[$sel:revisionId:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | For Lambda@Edge functions, the ARN of the master function.
[$sel:masterArn:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance GHC.Show.Show Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance GHC.Classes.Eq Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance Amazonka.Types.AWSRequest Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance Control.DeepSeq.NFData Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.UpdateFunctionConfiguration.UpdateFunctionConfiguration


-- | Updates the configuration for asynchronous invocation for a function,
--   version, or alias.
--   
--   To configure options for asynchronous invocation, use
--   PutFunctionEventInvokeConfig.
module Amazonka.Lambda.UpdateFunctionEventInvokeConfig

-- | <i>See:</i> <a>newUpdateFunctionEventInvokeConfig</a> smart
--   constructor.
data UpdateFunctionEventInvokeConfig
UpdateFunctionEventInvokeConfig' :: Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe DestinationConfig -> Text -> UpdateFunctionEventInvokeConfig

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
[$sel:maximumEventAgeInSeconds:UpdateFunctionEventInvokeConfig'] :: UpdateFunctionEventInvokeConfig -> Maybe Natural

-- | The maximum number of times to retry when the function returns an
--   error.
[$sel:maximumRetryAttempts:UpdateFunctionEventInvokeConfig'] :: UpdateFunctionEventInvokeConfig -> Maybe Natural

-- | A version number or alias name.
[$sel:qualifier:UpdateFunctionEventInvokeConfig'] :: UpdateFunctionEventInvokeConfig -> Maybe Text

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
[$sel:destinationConfig:UpdateFunctionEventInvokeConfig'] :: UpdateFunctionEventInvokeConfig -> Maybe DestinationConfig

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
[$sel:functionName:UpdateFunctionEventInvokeConfig'] :: UpdateFunctionEventInvokeConfig -> Text

-- | Create a value of <a>UpdateFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumEventAgeInSeconds:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_maximumRetryAttempts</a> - The
--   maximum number of times to retry when the function returns an error.
--   
--   <a>$sel:qualifier:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:destinationConfig:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_destinationConfig</a> - A
--   destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
--   
--   <a>$sel:functionName:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newUpdateFunctionEventInvokeConfig :: Text -> UpdateFunctionEventInvokeConfig

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
updateFunctionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' UpdateFunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
updateFunctionEventInvokeConfig_maximumRetryAttempts :: Lens' UpdateFunctionEventInvokeConfig (Maybe Natural)

-- | A version number or alias name.
updateFunctionEventInvokeConfig_qualifier :: Lens' UpdateFunctionEventInvokeConfig (Maybe Text)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
updateFunctionEventInvokeConfig_destinationConfig :: Lens' UpdateFunctionEventInvokeConfig (Maybe DestinationConfig)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
updateFunctionEventInvokeConfig_functionName :: Lens' UpdateFunctionEventInvokeConfig Text

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
[$sel:functionArn:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Text

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
[$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The maximum number of times to retry when the function returns an
--   error.
[$sel:maximumRetryAttempts:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe Natural

-- | The date and time that the configuration was last updated.
[$sel:lastModified:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe POSIX

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
[$sel:destinationConfig:FunctionEventInvokeConfig'] :: FunctionEventInvokeConfig -> Maybe DestinationConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)
instance GHC.Generics.Generic Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance GHC.Show.Show Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance GHC.Read.Read Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance GHC.Classes.Eq Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance Amazonka.Types.AWSRequest Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance Data.Hashable.Class.Hashable Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance Control.DeepSeq.NFData Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance Amazonka.Data.Path.ToPath Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig
instance Amazonka.Data.Query.ToQuery Amazonka.Lambda.UpdateFunctionEventInvokeConfig.UpdateFunctionEventInvokeConfig


module Amazonka.Lambda.Lens

-- | Specify a version or alias to get details about a published version of
--   the function.
getFunctionConfiguration_qualifier :: Lens' GetFunctionConfiguration (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getFunctionConfiguration_functionName :: Lens' GetFunctionConfiguration Text

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The identifier of the event source mapping.
deleteEventSourceMapping_uuid :: Lens' DeleteEventSourceMapping Text

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)

-- | When true, the event source mapping is active. When false, Lambda
--   pauses polling and invocation.
--   
--   Default: True
updateEventSourceMapping_enabled :: Lens' UpdateEventSourceMapping (Maybe Bool)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry.
updateEventSourceMapping_bisectBatchOnFunctionError :: Lens' UpdateEventSourceMapping (Maybe Bool)

-- | (Streams only) The number of batches to process from each shard
--   concurrently.
updateEventSourceMapping_parallelizationFactor :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is infinite (-1). When set to infinite (-1), failed
--   records will be retried until the record expires.
updateEventSourceMapping_maximumRetryAttempts :: Lens' UpdateEventSourceMapping (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
updateEventSourceMapping_batchSize :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
updateEventSourceMapping_maximumBatchingWindowInSeconds :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | An array of authentication protocols or VPC components required to
--   secure your event source.
updateEventSourceMapping_sourceAccessConfigurations :: Lens' UpdateEventSourceMapping (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is infinite (-1).
updateEventSourceMapping_maximumRecordAgeInSeconds :: Lens' UpdateEventSourceMapping (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
updateEventSourceMapping_functionResponseTypes :: Lens' UpdateEventSourceMapping (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is between 1 second up to 900 seconds.
updateEventSourceMapping_tumblingWindowInSeconds :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
updateEventSourceMapping_functionName :: Lens' UpdateEventSourceMapping (Maybe Text)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
updateEventSourceMapping_destinationConfig :: Lens' UpdateEventSourceMapping (Maybe DestinationConfig)

-- | The identifier of the event source mapping.
updateEventSourceMapping_uuid :: Lens' UpdateEventSourceMapping Text

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)

-- | The name or Amazon Resource Name (ARN) of the layer.
getLayerVersion_layerName :: Lens' GetLayerVersion Text

-- | The version number.
getLayerVersion_versionNumber :: Lens' GetLayerVersion Integer

-- | The ARN of the layer version.
getLayerVersionResponse_layerVersionArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
getLayerVersionResponse_content :: Lens' GetLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
getLayerVersionResponse_createdDate :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The version number.
getLayerVersionResponse_version :: Lens' GetLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
getLayerVersionResponse_licenseInfo :: Lens' GetLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
getLayerVersionResponse_compatibleArchitectures :: Lens' GetLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
getLayerVersionResponse_layerArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The description of the version.
getLayerVersionResponse_description :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
getLayerVersionResponse_compatibleRuntimes :: Lens' GetLayerVersionResponse (Maybe [Runtime])

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteFunctionCodeSigningConfig_functionName :: Lens' DeleteFunctionCodeSigningConfig Text

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
putFunctionCodeSigningConfig_codeSigningConfigArn :: Lens' PutFunctionCodeSigningConfig Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putFunctionCodeSigningConfig_functionName :: Lens' PutFunctionCodeSigningConfig Text

-- | The response's http status code.
putFunctionCodeSigningConfigResponse_httpStatus :: Lens' PutFunctionCodeSigningConfigResponse Int

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
putFunctionCodeSigningConfigResponse_codeSigningConfigArn :: Lens' PutFunctionCodeSigningConfigResponse Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putFunctionCodeSigningConfigResponse_functionName :: Lens' PutFunctionCodeSigningConfigResponse Text

-- | The <a>routing configuration</a> of the alias.
createAlias_routingConfig :: Lens' CreateAlias (Maybe AliasRoutingConfiguration)

-- | A description of the alias.
createAlias_description :: Lens' CreateAlias (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
createAlias_functionName :: Lens' CreateAlias Text

-- | The name of the alias.
createAlias_name :: Lens' CreateAlias Text

-- | The function version that the alias invokes.
createAlias_functionVersion :: Lens' CreateAlias Text

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listVersionsByFunction_marker :: Lens' ListVersionsByFunction (Maybe Text)

-- | The maximum number of versions to return. Note that
--   <tt>ListVersionsByFunction</tt> returns a maximum of 50 items in each
--   response, even if you set the number higher.
listVersionsByFunction_maxItems :: Lens' ListVersionsByFunction (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listVersionsByFunction_functionName :: Lens' ListVersionsByFunction Text

-- | A list of Lambda function versions.
listVersionsByFunctionResponse_versions :: Lens' ListVersionsByFunctionResponse (Maybe [FunctionConfiguration])

-- | The pagination token that's included if more results are available.
listVersionsByFunctionResponse_nextMarker :: Lens' ListVersionsByFunctionResponse (Maybe Text)

-- | The response's http status code.
listVersionsByFunctionResponse_httpStatus :: Lens' ListVersionsByFunctionResponse Int

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listAliases_marker :: Lens' ListAliases (Maybe Text)

-- | Limit the number of aliases returned.
listAliases_maxItems :: Lens' ListAliases (Maybe Natural)

-- | Specify a function version to only list aliases that invoke that
--   version.
listAliases_functionVersion :: Lens' ListAliases (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listAliases_functionName :: Lens' ListAliases Text

-- | A list of aliases.
listAliasesResponse_aliases :: Lens' ListAliasesResponse (Maybe [AliasConfiguration])

-- | The pagination token that's included if more results are available.
listAliasesResponse_nextMarker :: Lens' ListAliasesResponse (Maybe Text)

-- | The response's http status code.
listAliasesResponse_httpStatus :: Lens' ListAliasesResponse Int

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
deleteCodeSigningConfig_codeSigningConfigArn :: Lens' DeleteCodeSigningConfig Text

-- | The response's http status code.
deleteCodeSigningConfigResponse_httpStatus :: Lens' DeleteCodeSigningConfigResponse Int

-- | Signing profiles for this code signing configuration.
updateCodeSigningConfig_allowedPublishers :: Lens' UpdateCodeSigningConfig (Maybe AllowedPublishers)

-- | The code signing policy.
updateCodeSigningConfig_codeSigningPolicies :: Lens' UpdateCodeSigningConfig (Maybe CodeSigningPolicies)

-- | Descriptive name for this code signing configuration.
updateCodeSigningConfig_description :: Lens' UpdateCodeSigningConfig (Maybe Text)

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
updateCodeSigningConfig_codeSigningConfigArn :: Lens' UpdateCodeSigningConfig Text

-- | The response's http status code.
updateCodeSigningConfigResponse_httpStatus :: Lens' UpdateCodeSigningConfigResponse Int

-- | The code signing configuration
updateCodeSigningConfigResponse_codeSigningConfig :: Lens' UpdateCodeSigningConfigResponse CodeSigningConfig

-- | Specify a version or alias to remove permissions from a published
--   version of the function.
removePermission_qualifier :: Lens' RemovePermission (Maybe Text)

-- | Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
removePermission_revisionId :: Lens' RemovePermission (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
removePermission_functionName :: Lens' RemovePermission Text

-- | Statement ID of the permission to remove.
removePermission_statementId :: Lens' RemovePermission Text

-- | A version number or alias name.
deleteFunctionEventInvokeConfig_qualifier :: Lens' DeleteFunctionEventInvokeConfig (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
deleteFunctionEventInvokeConfig_functionName :: Lens' DeleteFunctionEventInvokeConfig Text

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
updateFunctionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' UpdateFunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
updateFunctionEventInvokeConfig_maximumRetryAttempts :: Lens' UpdateFunctionEventInvokeConfig (Maybe Natural)

-- | A version number or alias name.
updateFunctionEventInvokeConfig_qualifier :: Lens' UpdateFunctionEventInvokeConfig (Maybe Text)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
updateFunctionEventInvokeConfig_destinationConfig :: Lens' UpdateFunctionEventInvokeConfig (Maybe DestinationConfig)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
updateFunctionEventInvokeConfig_functionName :: Lens' UpdateFunctionEventInvokeConfig Text

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
putFunctionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' PutFunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
putFunctionEventInvokeConfig_maximumRetryAttempts :: Lens' PutFunctionEventInvokeConfig (Maybe Natural)

-- | A version number or alias name.
putFunctionEventInvokeConfig_qualifier :: Lens' PutFunctionEventInvokeConfig (Maybe Text)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
putFunctionEventInvokeConfig_destinationConfig :: Lens' PutFunctionEventInvokeConfig (Maybe DestinationConfig)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
putFunctionEventInvokeConfig_functionName :: Lens' PutFunctionEventInvokeConfig Text

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)

-- | Choose from the following options.
--   
--   <ul>
--   <li><tt>RequestResponse</tt> (default) - Invoke the function
--   synchronously. Keep the connection open until the function returns a
--   response or times out. The API response includes the function response
--   and additional data.</li>
--   <li><tt>Event</tt> - Invoke the function asynchronously. Send events
--   that fail multiple times to the function's dead-letter queue (if it's
--   configured). The API response only includes a status code.</li>
--   <li><tt>DryRun</tt> - Validate parameter values and verify that the
--   user or role has permission to invoke the function.</li>
--   </ul>
invoke_invocationType :: Lens' Invoke (Maybe InvocationType)

-- | Set to <tt>Tail</tt> to include the execution log in the response.
--   Applies to synchronously invoked functions only.
invoke_logType :: Lens' Invoke (Maybe LogType)

-- | Specify a version or alias to invoke a published version of the
--   function.
invoke_qualifier :: Lens' Invoke (Maybe Text)

-- | Up to 3583 bytes of base64-encoded data about the invoking client to
--   pass to the function in the context object.
invoke_clientContext :: Lens' Invoke (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
invoke_functionName :: Lens' Invoke Text

-- | The JSON that you want to provide to your Lambda function as input.
invoke_payload :: Lens' Invoke ByteString

-- | If present, indicates that an error occurred during function
--   execution. Details about the error are included in the response
--   payload.
invokeResponse_functionError :: Lens' InvokeResponse (Maybe Text)

-- | The last 4 KB of the execution log, which is base64 encoded.
invokeResponse_logResult :: Lens' InvokeResponse (Maybe Text)

-- | The response from the function, or an error object.
invokeResponse_payload :: Lens' InvokeResponse (Maybe ByteString)

-- | The version of the function that executed. When you invoke a function
--   with an alias, this indicates which version the alias resolved to.
invokeResponse_executedVersion :: Lens' InvokeResponse (Maybe Text)

-- | The HTTP status code is in the 200 range for a successful request. For
--   the <tt>RequestResponse</tt> invocation type, this status code is 200.
--   For the <tt>Event</tt> invocation type, this status code is 202. For
--   the <tt>DryRun</tt> invocation type, the status code is 204.
invokeResponse_statusCode :: Lens' InvokeResponse Int

-- | The name or Amazon Resource Name (ARN) of the layer.
deleteLayerVersion_layerName :: Lens' DeleteLayerVersion Text

-- | The version number.
deleteLayerVersion_versionNumber :: Lens' DeleteLayerVersion Integer

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getAlias_functionName :: Lens' GetAlias Text

-- | The name of the alias.
getAlias_name :: Lens' GetAlias Text

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)

-- | The layer's software license. It can be any of the following:
--   
--   <ul>
--   <li>An <a>SPDX license identifier</a>. For example, <tt>MIT</tt>.</li>
--   <li>The URL of a license hosted on the internet. For example,
--   <tt>https://opensource.org/licenses/MIT</tt>.</li>
--   <li>The full text of the license.</li>
--   </ul>
publishLayerVersion_licenseInfo :: Lens' PublishLayerVersion (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
publishLayerVersion_compatibleArchitectures :: Lens' PublishLayerVersion (Maybe [Architecture])

-- | The description of the version.
publishLayerVersion_description :: Lens' PublishLayerVersion (Maybe Text)

-- | A list of compatible <a>function runtimes</a>. Used for filtering with
--   ListLayers and ListLayerVersions.
publishLayerVersion_compatibleRuntimes :: Lens' PublishLayerVersion (Maybe [Runtime])

-- | The name or Amazon Resource Name (ARN) of the layer.
publishLayerVersion_layerName :: Lens' PublishLayerVersion Text

-- | The function layer archive.
publishLayerVersion_content :: Lens' PublishLayerVersion LayerVersionContentInput

-- | The ARN of the layer version.
publishLayerVersionResponse_layerVersionArn :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
publishLayerVersionResponse_content :: Lens' PublishLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
publishLayerVersionResponse_createdDate :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | The version number.
publishLayerVersionResponse_version :: Lens' PublishLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
publishLayerVersionResponse_licenseInfo :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
publishLayerVersionResponse_compatibleArchitectures :: Lens' PublishLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
publishLayerVersionResponse_layerArn :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | The description of the version.
publishLayerVersionResponse_description :: Lens' PublishLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
publishLayerVersionResponse_compatibleRuntimes :: Lens' PublishLayerVersionResponse (Maybe [Runtime])

-- | The response's http status code.
publishLayerVersionResponse_httpStatus :: Lens' PublishLayerVersionResponse Int

-- | The identifier of the event source mapping.
getEventSourceMapping_uuid :: Lens' GetEventSourceMapping Text

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)

-- | Only update the policy if the revision ID matches the ID specified.
--   Use this option to avoid modifying a policy that has changed since you
--   last read it.
addLayerVersionPermission_revisionId :: Lens' AddLayerVersionPermission (Maybe Text)

-- | With the principal set to <tt>*</tt>, grant permission to all accounts
--   in the specified organization.
addLayerVersionPermission_organizationId :: Lens' AddLayerVersionPermission (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the layer.
addLayerVersionPermission_layerName :: Lens' AddLayerVersionPermission Text

-- | The version number.
addLayerVersionPermission_versionNumber :: Lens' AddLayerVersionPermission Integer

-- | An identifier that distinguishes the policy from others on the same
--   layer version.
addLayerVersionPermission_statementId :: Lens' AddLayerVersionPermission Text

-- | The API action that grants access to the layer. For example,
--   <tt>lambda:GetLayerVersion</tt>.
addLayerVersionPermission_action :: Lens' AddLayerVersionPermission Text

-- | An account ID, or <tt>*</tt> to grant layer usage permission to all
--   accounts in an organization, or all Amazon Web Services accounts (if
--   <tt>organizationId</tt> is not specified). For the last case, make
--   sure that you really do want all Amazon Web Services accounts to have
--   usage permission to this layer.
addLayerVersionPermission_principal :: Lens' AddLayerVersionPermission Text

-- | The permission statement.
addLayerVersionPermissionResponse_statement :: Lens' AddLayerVersionPermissionResponse (Maybe Text)

-- | A unique identifier for the current revision of the policy.
addLayerVersionPermissionResponse_revisionId :: Lens' AddLayerVersionPermissionResponse (Maybe Text)

-- | The response's http status code.
addLayerVersionPermissionResponse_httpStatus :: Lens' AddLayerVersionPermissionResponse Int

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listProvisionedConcurrencyConfigs_marker :: Lens' ListProvisionedConcurrencyConfigs (Maybe Text)

-- | Specify a number to limit the number of configurations returned.
listProvisionedConcurrencyConfigs_maxItems :: Lens' ListProvisionedConcurrencyConfigs (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listProvisionedConcurrencyConfigs_functionName :: Lens' ListProvisionedConcurrencyConfigs Text

-- | A list of provisioned concurrency configurations.
listProvisionedConcurrencyConfigsResponse_provisionedConcurrencyConfigs :: Lens' ListProvisionedConcurrencyConfigsResponse (Maybe [ProvisionedConcurrencyConfigListItem])

-- | The pagination token that's included if more results are available.
listProvisionedConcurrencyConfigsResponse_nextMarker :: Lens' ListProvisionedConcurrencyConfigsResponse (Maybe Text)

-- | The response's http status code.
listProvisionedConcurrencyConfigsResponse_httpStatus :: Lens' ListProvisionedConcurrencyConfigsResponse Int

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putFunctionConcurrency_functionName :: Lens' PutFunctionConcurrency Text

-- | The number of simultaneous executions to reserve for the function.
putFunctionConcurrency_reservedConcurrentExecutions :: Lens' PutFunctionConcurrency Natural

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
concurrency_reservedConcurrentExecutions :: Lens' Concurrency (Maybe Natural)

-- | The amount of <a>memory available to the function</a> at runtime.
--   Increasing the function memory also increases its CPU allocation. The
--   default value is 128 MB. The value can be any multiple of 1 MB.
createFunction_memorySize :: Lens' CreateFunction (Maybe Natural)

-- | The identifier of the function's <a>runtime</a>.
createFunction_runtime :: Lens' CreateFunction (Maybe Runtime)

-- | The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
createFunction_kmsKeyArn :: Lens' CreateFunction (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for ZIP archive.
createFunction_packageType :: Lens' CreateFunction (Maybe PackageType)

-- | Connection settings for an Amazon EFS file system.
createFunction_fileSystemConfigs :: Lens' CreateFunction (Maybe [FileSystemConfig])

-- | Environment variables that are accessible from function code during
--   execution.
createFunction_environment :: Lens' CreateFunction (Maybe Environment)

-- | Container image <a>configuration values</a> that override the values
--   in the container image Dockerfile.
createFunction_imageConfig :: Lens' CreateFunction (Maybe ImageConfig)

-- | A dead letter queue configuration that specifies the queue or topic
--   where Lambda sends asynchronous events when they fail processing. For
--   more information, see <a>Dead Letter Queues</a>.
createFunction_deadLetterConfig :: Lens' CreateFunction (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports. Enter a
--   string array with one of the valid values. The default value is
--   <tt>x86_64</tt>.
createFunction_architectures :: Lens' CreateFunction (Maybe (NonEmpty Architecture))

-- | To enable code signing for this function, specify the ARN of a
--   code-signing configuration. A code-signing configuration includes a
--   set of signing profiles, which define the trusted publishers for this
--   function.
createFunction_codeSigningConfigArn :: Lens' CreateFunction (Maybe Text)

-- | For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
createFunction_vpcConfig :: Lens' CreateFunction (Maybe VpcConfig)

-- | A list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
createFunction_layers :: Lens' CreateFunction (Maybe [Text])

-- | The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
createFunction_handler :: Lens' CreateFunction (Maybe Text)

-- | The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
createFunction_timeout :: Lens' CreateFunction (Maybe Natural)

-- | Set <tt>Mode</tt> to <tt>Active</tt> to sample and trace a subset of
--   incoming requests with <a>X-Ray</a>.
createFunction_tracingConfig :: Lens' CreateFunction (Maybe TracingConfig)

-- | A description of the function.
createFunction_description :: Lens' CreateFunction (Maybe Text)

-- | A list of <a>tags</a> to apply to the function.
createFunction_tags :: Lens' CreateFunction (Maybe (HashMap Text Text))

-- | Set to true to publish the first version of the function during
--   creation.
createFunction_publish :: Lens' CreateFunction (Maybe Bool)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
createFunction_functionName :: Lens' CreateFunction Text

-- | The Amazon Resource Name (ARN) of the function's execution role.
createFunction_role :: Lens' CreateFunction Text

-- | The code for the function.
createFunction_code :: Lens' CreateFunction FunctionCode

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteFunctionConcurrency_functionName :: Lens' DeleteFunctionConcurrency Text

-- | The ARN of the layer version.
getLayerVersionByArn_arn :: Lens' GetLayerVersionByArn Text

-- | The ARN of the layer version.
getLayerVersionResponse_layerVersionArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
getLayerVersionResponse_content :: Lens' GetLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
getLayerVersionResponse_createdDate :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The version number.
getLayerVersionResponse_version :: Lens' GetLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
getLayerVersionResponse_licenseInfo :: Lens' GetLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
getLayerVersionResponse_compatibleArchitectures :: Lens' GetLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
getLayerVersionResponse_layerArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The description of the version.
getLayerVersionResponse_description :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
getLayerVersionResponse_compatibleRuntimes :: Lens' GetLayerVersionResponse (Maybe [Runtime])

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getFunctionConcurrency_functionName :: Lens' GetFunctionConcurrency Text

-- | The number of simultaneous executions that are reserved for the
--   function.
getFunctionConcurrencyResponse_reservedConcurrentExecutions :: Lens' GetFunctionConcurrencyResponse (Maybe Natural)

-- | The response's http status code.
getFunctionConcurrencyResponse_httpStatus :: Lens' GetFunctionConcurrencyResponse Int

-- | The Amazon Resource Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
createEventSourceMapping_eventSourceArn :: Lens' CreateEventSourceMapping (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
createEventSourceMapping_startingPositionTimestamp :: Lens' CreateEventSourceMapping (Maybe UTCTime)

-- | The name of the Kafka topic.
createEventSourceMapping_topics :: Lens' CreateEventSourceMapping (Maybe (NonEmpty Text))

-- | (MQ) The name of the Amazon MQ broker destination queue to consume.
createEventSourceMapping_queues :: Lens' CreateEventSourceMapping (Maybe (NonEmpty Text))

-- | When true, the event source mapping is active. When false, Lambda
--   pauses polling and invocation.
--   
--   Default: True
createEventSourceMapping_enabled :: Lens' CreateEventSourceMapping (Maybe Bool)

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry.
createEventSourceMapping_bisectBatchOnFunctionError :: Lens' CreateEventSourceMapping (Maybe Bool)

-- | (Streams only) The number of batches to process from each shard
--   concurrently.
createEventSourceMapping_parallelizationFactor :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is infinite (-1). When set to infinite (-1), failed
--   records will be retried until the record expires.
createEventSourceMapping_maximumRetryAttempts :: Lens' CreateEventSourceMapping (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
createEventSourceMapping_batchSize :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
createEventSourceMapping_maximumBatchingWindowInSeconds :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | An array of authentication protocols or VPC components required to
--   secure your event source.
createEventSourceMapping_sourceAccessConfigurations :: Lens' CreateEventSourceMapping (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is infinite (-1).
createEventSourceMapping_maximumRecordAgeInSeconds :: Lens' CreateEventSourceMapping (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
createEventSourceMapping_functionResponseTypes :: Lens' CreateEventSourceMapping (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is between 1 second up to 900 seconds.
createEventSourceMapping_tumblingWindowInSeconds :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | The Self-Managed Apache Kafka cluster to send records.
createEventSourceMapping_selfManagedEventSource :: Lens' CreateEventSourceMapping (Maybe SelfManagedEventSource)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
createEventSourceMapping_destinationConfig :: Lens' CreateEventSourceMapping (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK Streams sources.
--   <tt>AT_TIMESTAMP</tt> is only supported for Amazon Kinesis streams.
createEventSourceMapping_startingPosition :: Lens' CreateEventSourceMapping (Maybe EventSourcePosition)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
createEventSourceMapping_functionName :: Lens' CreateEventSourceMapping Text

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getProvisionedConcurrencyConfig_functionName :: Lens' GetProvisionedConcurrencyConfig Text

-- | The version number or alias name.
getProvisionedConcurrencyConfig_qualifier :: Lens' GetProvisionedConcurrencyConfig Text

-- | The status of the allocation process.
getProvisionedConcurrencyConfigResponse_status :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe ProvisionedConcurrencyStatusEnum)

-- | The amount of provisioned concurrency requested.
getProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The amount of provisioned concurrency available.
getProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
getProvisionedConcurrencyConfigResponse_statusReason :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The amount of provisioned concurrency allocated.
getProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
getProvisionedConcurrencyConfigResponse_lastModified :: Lens' GetProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The response's http status code.
getProvisionedConcurrencyConfigResponse_httpStatus :: Lens' GetProvisionedConcurrencyConfigResponse Int

-- | Only update the policy if the revision ID matches the ID specified.
--   Use this option to avoid modifying a policy that has changed since you
--   last read it.
removeLayerVersionPermission_revisionId :: Lens' RemoveLayerVersionPermission (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the layer.
removeLayerVersionPermission_layerName :: Lens' RemoveLayerVersionPermission Text

-- | The version number.
removeLayerVersionPermission_versionNumber :: Lens' RemoveLayerVersionPermission Integer

-- | The identifier that was specified when the statement was added.
removeLayerVersionPermission_statementId :: Lens' RemoveLayerVersionPermission Text

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listFunctionsByCodeSigningConfig_marker :: Lens' ListFunctionsByCodeSigningConfig (Maybe Text)

-- | Maximum number of items to return.
listFunctionsByCodeSigningConfig_maxItems :: Lens' ListFunctionsByCodeSigningConfig (Maybe Natural)

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
listFunctionsByCodeSigningConfig_codeSigningConfigArn :: Lens' ListFunctionsByCodeSigningConfig Text

-- | The function ARNs.
listFunctionsByCodeSigningConfigResponse_functionArns :: Lens' ListFunctionsByCodeSigningConfigResponse (Maybe [Text])

-- | The pagination token that's included if more results are available.
listFunctionsByCodeSigningConfigResponse_nextMarker :: Lens' ListFunctionsByCodeSigningConfigResponse (Maybe Text)

-- | The response's http status code.
listFunctionsByCodeSigningConfigResponse_httpStatus :: Lens' ListFunctionsByCodeSigningConfigResponse Int

-- | Specify a version or alias to get details about a published version of
--   the function.
getFunction_qualifier :: Lens' GetFunction (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getFunction_functionName :: Lens' GetFunction Text

-- | The function's <a>reserved concurrency</a>.
getFunctionResponse_concurrency :: Lens' GetFunctionResponse (Maybe Concurrency)

-- | The deployment package of the function or version.
getFunctionResponse_code :: Lens' GetFunctionResponse (Maybe FunctionCodeLocation)

-- | The configuration of the function or version.
getFunctionResponse_configuration :: Lens' GetFunctionResponse (Maybe FunctionConfiguration)

-- | The function's <a>tags</a>.
getFunctionResponse_tags :: Lens' GetFunctionResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getFunctionResponse_httpStatus :: Lens' GetFunctionResponse Int

-- | The Amazon Resource Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
listEventSourceMappings_eventSourceArn :: Lens' ListEventSourceMappings (Maybe Text)

-- | A pagination token returned by a previous call.
listEventSourceMappings_marker :: Lens' ListEventSourceMappings (Maybe Text)

-- | The maximum number of event source mappings to return. Note that
--   ListEventSourceMappings returns a maximum of 100 items in each
--   response, even if you set the number higher.
listEventSourceMappings_maxItems :: Lens' ListEventSourceMappings (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
listEventSourceMappings_functionName :: Lens' ListEventSourceMappings (Maybe Text)

-- | A list of event source mappings.
listEventSourceMappingsResponse_eventSourceMappings :: Lens' ListEventSourceMappingsResponse (Maybe [EventSourceMappingConfiguration])

-- | A pagination token that's returned when the response doesn't contain
--   all event source mappings.
listEventSourceMappingsResponse_nextMarker :: Lens' ListEventSourceMappingsResponse (Maybe Text)

-- | The response's http status code.
listEventSourceMappingsResponse_httpStatus :: Lens' ListEventSourceMappingsResponse Int

-- | The name or Amazon Resource Name (ARN) of the layer.
getLayerVersionPolicy_layerName :: Lens' GetLayerVersionPolicy Text

-- | The version number.
getLayerVersionPolicy_versionNumber :: Lens' GetLayerVersionPolicy Integer

-- | The policy document.
getLayerVersionPolicyResponse_policy :: Lens' GetLayerVersionPolicyResponse (Maybe Text)

-- | A unique identifier for the current revision of the policy.
getLayerVersionPolicyResponse_revisionId :: Lens' GetLayerVersionPolicyResponse (Maybe Text)

-- | The response's http status code.
getLayerVersionPolicyResponse_httpStatus :: Lens' GetLayerVersionPolicyResponse Int

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteAlias_functionName :: Lens' DeleteAlias Text

-- | The name of the alias.
deleteAlias_name :: Lens' DeleteAlias Text

-- | The <a>routing configuration</a> of the alias.
updateAlias_routingConfig :: Lens' UpdateAlias (Maybe AliasRoutingConfiguration)

-- | The function version that the alias invokes.
updateAlias_functionVersion :: Lens' UpdateAlias (Maybe Text)

-- | A description of the alias.
updateAlias_description :: Lens' UpdateAlias (Maybe Text)

-- | Only update the alias if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying an alias that has
--   changed since you last read it.
updateAlias_revisionId :: Lens' UpdateAlias (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
updateAlias_functionName :: Lens' UpdateAlias Text

-- | The name of the alias.
updateAlias_name :: Lens' UpdateAlias Text

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)

-- | Limits that are related to concurrency and code storage.
getAccountSettingsResponse_accountLimit :: Lens' GetAccountSettingsResponse (Maybe AccountLimit)

-- | The number of functions and amount of storage in use.
getAccountSettingsResponse_accountUsage :: Lens' GetAccountSettingsResponse (Maybe AccountUsage)

-- | The response's http status code.
getAccountSettingsResponse_httpStatus :: Lens' GetAccountSettingsResponse Int

-- | A version number or alias name.
getFunctionEventInvokeConfig_qualifier :: Lens' GetFunctionEventInvokeConfig (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getFunctionEventInvokeConfig_functionName :: Lens' GetFunctionEventInvokeConfig Text

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
getCodeSigningConfig_codeSigningConfigArn :: Lens' GetCodeSigningConfig Text

-- | The response's http status code.
getCodeSigningConfigResponse_httpStatus :: Lens' GetCodeSigningConfigResponse Int

-- | The code signing configuration
getCodeSigningConfigResponse_codeSigningConfig :: Lens' GetCodeSigningConfigResponse CodeSigningConfig

-- | For Amazon S3, the ID of the account that owns the resource. Use this
--   together with <tt>SourceArn</tt> to ensure that the resource is owned
--   by the specified account. It is possible for an Amazon S3 bucket to be
--   deleted by its owner and recreated by another account.
addPermission_sourceAccount :: Lens' AddPermission (Maybe Text)

-- | For Alexa Smart Home functions, a token that must be supplied by the
--   invoker.
addPermission_eventSourceToken :: Lens' AddPermission (Maybe Text)

-- | For Amazon Web Services services, the ARN of the Amazon Web Services
--   resource that invokes the function. For example, an Amazon S3 bucket
--   or Amazon SNS topic.
--   
--   Note that Lambda configures the comparison using the
--   <tt>StringLike</tt> operator.
addPermission_sourceArn :: Lens' AddPermission (Maybe Text)

-- | Specify a version or alias to add permissions to a published version
--   of the function.
addPermission_qualifier :: Lens' AddPermission (Maybe Text)

-- | Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
addPermission_revisionId :: Lens' AddPermission (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
addPermission_functionName :: Lens' AddPermission Text

-- | A statement identifier that differentiates the statement from others
--   in the same policy.
addPermission_statementId :: Lens' AddPermission Text

-- | The action that the principal can use on the function. For example,
--   <tt>lambda:InvokeFunction</tt> or <tt>lambda:GetFunction</tt>.
addPermission_action :: Lens' AddPermission Text

-- | The Amazon Web Services service or account that invokes the function.
--   If you specify a service, use <tt>SourceArn</tt> or
--   <tt>SourceAccount</tt> to limit who can invoke the function through
--   that service.
addPermission_principal :: Lens' AddPermission Text

-- | The permission statement that's added to the function policy.
addPermissionResponse_statement :: Lens' AddPermissionResponse (Maybe Text)

-- | The response's http status code.
addPermissionResponse_httpStatus :: Lens' AddPermissionResponse Int

-- | A runtime identifier. For example, <tt>go1.x</tt>.
listLayers_compatibleRuntime :: Lens' ListLayers (Maybe Runtime)

-- | A pagination token returned by a previous call.
listLayers_marker :: Lens' ListLayers (Maybe Text)

-- | The maximum number of layers to return.
listLayers_maxItems :: Lens' ListLayers (Maybe Natural)

-- | The compatible <a>instruction set architecture</a>.
listLayers_compatibleArchitecture :: Lens' ListLayers (Maybe Architecture)

-- | A pagination token returned when the response doesn't contain all
--   layers.
listLayersResponse_nextMarker :: Lens' ListLayersResponse (Maybe Text)

-- | A list of function layers.
listLayersResponse_layers :: Lens' ListLayersResponse (Maybe [LayersListItem])

-- | The response's http status code.
listLayersResponse_httpStatus :: Lens' ListLayersResponse Int

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listFunctionEventInvokeConfigs_marker :: Lens' ListFunctionEventInvokeConfigs (Maybe Text)

-- | The maximum number of configurations to return.
listFunctionEventInvokeConfigs_maxItems :: Lens' ListFunctionEventInvokeConfigs (Maybe Natural)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
listFunctionEventInvokeConfigs_functionName :: Lens' ListFunctionEventInvokeConfigs Text

-- | A list of configurations.
listFunctionEventInvokeConfigsResponse_functionEventInvokeConfigs :: Lens' ListFunctionEventInvokeConfigsResponse (Maybe [FunctionEventInvokeConfig])

-- | The pagination token that's included if more results are available.
listFunctionEventInvokeConfigsResponse_nextMarker :: Lens' ListFunctionEventInvokeConfigsResponse (Maybe Text)

-- | The response's http status code.
listFunctionEventInvokeConfigsResponse_httpStatus :: Lens' ListFunctionEventInvokeConfigsResponse Int

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listCodeSigningConfigs_marker :: Lens' ListCodeSigningConfigs (Maybe Text)

-- | Maximum number of items to return.
listCodeSigningConfigs_maxItems :: Lens' ListCodeSigningConfigs (Maybe Natural)

-- | The code signing configurations
listCodeSigningConfigsResponse_codeSigningConfigs :: Lens' ListCodeSigningConfigsResponse (Maybe [CodeSigningConfig])

-- | The pagination token that's included if more results are available.
listCodeSigningConfigsResponse_nextMarker :: Lens' ListCodeSigningConfigsResponse (Maybe Text)

-- | The response's http status code.
listCodeSigningConfigsResponse_httpStatus :: Lens' ListCodeSigningConfigsResponse Int

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getFunctionCodeSigningConfig_functionName :: Lens' GetFunctionCodeSigningConfig Text

-- | The response's http status code.
getFunctionCodeSigningConfigResponse_httpStatus :: Lens' GetFunctionCodeSigningConfigResponse Int

-- | The The Amazon Resource Name (ARN) of the code signing configuration.
getFunctionCodeSigningConfigResponse_codeSigningConfigArn :: Lens' GetFunctionCodeSigningConfigResponse Text

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
getFunctionCodeSigningConfigResponse_functionName :: Lens' GetFunctionCodeSigningConfigResponse Text

-- | The code signing policies define the actions to take if the validation
--   checks fail.
createCodeSigningConfig_codeSigningPolicies :: Lens' CreateCodeSigningConfig (Maybe CodeSigningPolicies)

-- | Descriptive name for this code signing configuration.
createCodeSigningConfig_description :: Lens' CreateCodeSigningConfig (Maybe Text)

-- | Signing profiles for this code signing configuration.
createCodeSigningConfig_allowedPublishers :: Lens' CreateCodeSigningConfig AllowedPublishers

-- | The response's http status code.
createCodeSigningConfigResponse_httpStatus :: Lens' CreateCodeSigningConfigResponse Int

-- | The code signing configuration.
createCodeSigningConfigResponse_codeSigningConfig :: Lens' CreateCodeSigningConfigResponse CodeSigningConfig

-- | A runtime identifier. For example, <tt>go1.x</tt>.
listLayerVersions_compatibleRuntime :: Lens' ListLayerVersions (Maybe Runtime)

-- | A pagination token returned by a previous call.
listLayerVersions_marker :: Lens' ListLayerVersions (Maybe Text)

-- | The maximum number of versions to return.
listLayerVersions_maxItems :: Lens' ListLayerVersions (Maybe Natural)

-- | The compatible <a>instruction set architecture</a>.
listLayerVersions_compatibleArchitecture :: Lens' ListLayerVersions (Maybe Architecture)

-- | The name or Amazon Resource Name (ARN) of the layer.
listLayerVersions_layerName :: Lens' ListLayerVersions Text

-- | A list of versions.
listLayerVersionsResponse_layerVersions :: Lens' ListLayerVersionsResponse (Maybe [LayerVersionsListItem])

-- | A pagination token returned when the response doesn't contain all
--   versions.
listLayerVersionsResponse_nextMarker :: Lens' ListLayerVersionsResponse (Maybe Text)

-- | The response's http status code.
listLayerVersionsResponse_httpStatus :: Lens' ListLayerVersionsResponse Int

-- | The function's Amazon Resource Name (ARN).
tagResource_resource :: Lens' TagResource Text

-- | A list of tags to apply to the function.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | Only publish a version if the hash value matches the value that's
--   specified. Use this option to avoid publishing a version if the
--   function code has changed since you last updated it. You can get the
--   hash for the version that you uploaded from the output of
--   UpdateFunctionCode.
publishVersion_codeSha256 :: Lens' PublishVersion (Maybe Text)

-- | A description for the version to override the description in the
--   function configuration.
publishVersion_description :: Lens' PublishVersion (Maybe Text)

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid publishing a version if the
--   function configuration has changed since you last updated it.
publishVersion_revisionId :: Lens' PublishVersion (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
publishVersion_functionName :: Lens' PublishVersion Text

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's Amazon Resource Name (ARN). Note: Lambda does not
--   support adding tags to aliases or versions.
listTags_resource :: Lens' ListTags Text

-- | The function's tags.
listTagsResponse_tags :: Lens' ListTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int

-- | Specify a version to delete. You can't delete a version that's
--   referenced by an alias.
deleteFunction_qualifier :: Lens' DeleteFunction (Maybe Text)

-- | The name of the Lambda function or version.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:1</tt> (with version).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
deleteFunction_functionName :: Lens' DeleteFunction Text

-- | The function's Amazon Resource Name (ARN).
untagResource_resource :: Lens' UntagResource Text

-- | A list of tag keys to remove from the function.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The amount of <a>memory available to the function</a> at runtime.
--   Increasing the function memory also increases its CPU allocation. The
--   default value is 128 MB. The value can be any multiple of 1 MB.
updateFunctionConfiguration_memorySize :: Lens' UpdateFunctionConfiguration (Maybe Natural)

-- | The identifier of the function's <a>runtime</a>.
updateFunctionConfiguration_runtime :: Lens' UpdateFunctionConfiguration (Maybe Runtime)

-- | The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
updateFunctionConfiguration_kmsKeyArn :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | Connection settings for an Amazon EFS file system.
updateFunctionConfiguration_fileSystemConfigs :: Lens' UpdateFunctionConfiguration (Maybe [FileSystemConfig])

-- | Environment variables that are accessible from function code during
--   execution.
updateFunctionConfiguration_environment :: Lens' UpdateFunctionConfiguration (Maybe Environment)

-- | <a>Container image configuration values</a> that override the values
--   in the container image Docker file.
updateFunctionConfiguration_imageConfig :: Lens' UpdateFunctionConfiguration (Maybe ImageConfig)

-- | A dead letter queue configuration that specifies the queue or topic
--   where Lambda sends asynchronous events when they fail processing. For
--   more information, see <a>Dead Letter Queues</a>.
updateFunctionConfiguration_deadLetterConfig :: Lens' UpdateFunctionConfiguration (Maybe DeadLetterConfig)

-- | The Amazon Resource Name (ARN) of the function's execution role.
updateFunctionConfiguration_role :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
updateFunctionConfiguration_vpcConfig :: Lens' UpdateFunctionConfiguration (Maybe VpcConfig)

-- | A list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
updateFunctionConfiguration_layers :: Lens' UpdateFunctionConfiguration (Maybe [Text])

-- | The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
updateFunctionConfiguration_handler :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
updateFunctionConfiguration_timeout :: Lens' UpdateFunctionConfiguration (Maybe Natural)

-- | Set <tt>Mode</tt> to <tt>Active</tt> to sample and trace a subset of
--   incoming requests with <a>X-Ray</a>.
updateFunctionConfiguration_tracingConfig :: Lens' UpdateFunctionConfiguration (Maybe TracingConfig)

-- | A description of the function.
updateFunctionConfiguration_description :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a function that has
--   changed since you last read it.
updateFunctionConfiguration_revisionId :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
updateFunctionConfiguration_functionName :: Lens' UpdateFunctionConfiguration Text

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the Amazon Web Services Region of the
--   master function. For example, <tt>us-east-1</tt> filters the list of
--   functions to only include Lambda@Edge functions replicated from a
--   master function in US East (N. Virginia). If specified, you must set
--   <tt>FunctionVersion</tt> to <tt>ALL</tt>.
listFunctions_masterRegion :: Lens' ListFunctions (Maybe Text)

-- | Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
listFunctions_marker :: Lens' ListFunctions (Maybe Text)

-- | The maximum number of functions to return in the response. Note that
--   <tt>ListFunctions</tt> returns a maximum of 50 items in each response,
--   even if you set the number higher.
listFunctions_maxItems :: Lens' ListFunctions (Maybe Natural)

-- | Set to <tt>ALL</tt> to include entries for all published versions of
--   each function.
listFunctions_functionVersion :: Lens' ListFunctions (Maybe FunctionVersion)

-- | The pagination token that's included if more results are available.
listFunctionsResponse_nextMarker :: Lens' ListFunctionsResponse (Maybe Text)

-- | A list of Lambda functions.
listFunctionsResponse_functions :: Lens' ListFunctionsResponse (Maybe [FunctionConfiguration])

-- | The response's http status code.
listFunctionsResponse_httpStatus :: Lens' ListFunctionsResponse Int

-- | For versioned objects, the version of the deployment package object to
--   use.
updateFunctionCode_s3ObjectVersion :: Lens' UpdateFunctionCode (Maybe Text)

-- | The Amazon S3 key of the deployment package.
updateFunctionCode_s3Key :: Lens' UpdateFunctionCode (Maybe Text)

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
updateFunctionCode_zipFile :: Lens' UpdateFunctionCode (Maybe ByteString)

-- | The instruction set architecture that the function supports. Enter a
--   string array with one of the valid values. The default value is
--   <tt>x86_64</tt>.
updateFunctionCode_architectures :: Lens' UpdateFunctionCode (Maybe (NonEmpty Architecture))

-- | URI of a container image in the Amazon ECR registry.
updateFunctionCode_imageUri :: Lens' UpdateFunctionCode (Maybe Text)

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
updateFunctionCode_s3Bucket :: Lens' UpdateFunctionCode (Maybe Text)

-- | Set to true to validate the request parameters and access permissions
--   without modifying the function code.
updateFunctionCode_dryRun :: Lens' UpdateFunctionCode (Maybe Bool)

-- | Only update the function if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a function that has
--   changed since you last read it.
updateFunctionCode_revisionId :: Lens' UpdateFunctionCode (Maybe Text)

-- | Set to true to publish a new version of the function after updating
--   the code. This has the same effect as calling PublishVersion
--   separately.
updateFunctionCode_publish :: Lens' UpdateFunctionCode (Maybe Bool)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
updateFunctionCode_functionName :: Lens' UpdateFunctionCode Text

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
deleteProvisionedConcurrencyConfig_functionName :: Lens' DeleteProvisionedConcurrencyConfig Text

-- | The version number or alias name.
deleteProvisionedConcurrencyConfig_qualifier :: Lens' DeleteProvisionedConcurrencyConfig Text

-- | Specify a version or alias to get the policy for that resource.
getPolicy_qualifier :: Lens' GetPolicy (Maybe Text)

-- | The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
getPolicy_functionName :: Lens' GetPolicy Text

-- | The resource-based policy.
getPolicyResponse_policy :: Lens' GetPolicyResponse (Maybe Text)

-- | A unique identifier for the current revision of the policy.
getPolicyResponse_revisionId :: Lens' GetPolicyResponse (Maybe Text)

-- | The response's http status code.
getPolicyResponse_httpStatus :: Lens' GetPolicyResponse Int

-- | The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
putProvisionedConcurrencyConfig_functionName :: Lens' PutProvisionedConcurrencyConfig Text

-- | The version number or alias name.
putProvisionedConcurrencyConfig_qualifier :: Lens' PutProvisionedConcurrencyConfig Text

-- | The amount of provisioned concurrency to allocate for the version or
--   alias.
putProvisionedConcurrencyConfig_provisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfig Natural

-- | The status of the allocation process.
putProvisionedConcurrencyConfigResponse_status :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe ProvisionedConcurrencyStatusEnum)

-- | The amount of provisioned concurrency requested.
putProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The amount of provisioned concurrency available.
putProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
putProvisionedConcurrencyConfigResponse_statusReason :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The amount of provisioned concurrency allocated.
putProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Natural)

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
putProvisionedConcurrencyConfigResponse_lastModified :: Lens' PutProvisionedConcurrencyConfigResponse (Maybe Text)

-- | The response's http status code.
putProvisionedConcurrencyConfigResponse_httpStatus :: Lens' PutProvisionedConcurrencyConfigResponse Int

-- | The maximum number of simultaneous function executions.
accountLimit_concurrentExecutions :: Lens' AccountLimit (Maybe Int)

-- | The amount of storage space that you can use for all deployment
--   packages and layer archives.
accountLimit_totalCodeSize :: Lens' AccountLimit (Maybe Integer)

-- | The maximum number of simultaneous function executions, minus the
--   capacity that's reserved for individual functions with
--   PutFunctionConcurrency.
accountLimit_unreservedConcurrentExecutions :: Lens' AccountLimit (Maybe Natural)

-- | The maximum size of a function's deployment package and layers when
--   they're extracted.
accountLimit_codeSizeUnzipped :: Lens' AccountLimit (Maybe Integer)

-- | The maximum size of a deployment package when it's uploaded directly
--   to Lambda. Use Amazon S3 for larger files.
accountLimit_codeSizeZipped :: Lens' AccountLimit (Maybe Integer)

-- | The amount of storage space, in bytes, that's being used by deployment
--   packages and layer archives.
accountUsage_totalCodeSize :: Lens' AccountUsage (Maybe Integer)

-- | The number of Lambda functions.
accountUsage_functionCount :: Lens' AccountUsage (Maybe Integer)

-- | The <a>routing configuration</a> of the alias.
aliasConfiguration_routingConfig :: Lens' AliasConfiguration (Maybe AliasRoutingConfiguration)

-- | The name of the alias.
aliasConfiguration_name :: Lens' AliasConfiguration (Maybe Text)

-- | The function version that the alias invokes.
aliasConfiguration_functionVersion :: Lens' AliasConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alias.
aliasConfiguration_aliasArn :: Lens' AliasConfiguration (Maybe Text)

-- | A description of the alias.
aliasConfiguration_description :: Lens' AliasConfiguration (Maybe Text)

-- | A unique identifier that changes when you update the alias.
aliasConfiguration_revisionId :: Lens' AliasConfiguration (Maybe Text)

-- | The second version, and the percentage of traffic that's routed to it.
aliasRoutingConfiguration_additionalVersionWeights :: Lens' AliasRoutingConfiguration (Maybe (HashMap Text Double))

-- | The Amazon Resource Name (ARN) for each of the signing profiles. A
--   signing profile defines a trusted user who can sign a code package.
allowedPublishers_signingProfileVersionArns :: Lens' AllowedPublishers (NonEmpty Text)

-- | Code signing configuration description.
codeSigningConfig_description :: Lens' CodeSigningConfig (Maybe Text)

-- | Unique identifer for the Code signing configuration.
codeSigningConfig_codeSigningConfigId :: Lens' CodeSigningConfig Text

-- | The Amazon Resource Name (ARN) of the Code signing configuration.
codeSigningConfig_codeSigningConfigArn :: Lens' CodeSigningConfig Text

-- | List of allowed publishers.
codeSigningConfig_allowedPublishers :: Lens' CodeSigningConfig AllowedPublishers

-- | The code signing policy controls the validation failure action for
--   signature mismatch or expiry.
codeSigningConfig_codeSigningPolicies :: Lens' CodeSigningConfig CodeSigningPolicies

-- | The date and time that the Code signing configuration was last
--   modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).
codeSigningConfig_lastModified :: Lens' CodeSigningConfig Text

-- | Code signing configuration policy for deployment validation failure.
--   If you set the policy to <tt>Enforce</tt>, Lambda blocks the
--   deployment request if signature validation checks fail. If you set the
--   policy to <tt>Warn</tt>, Lambda allows the deployment and creates a
--   CloudWatch log.
--   
--   Default value: <tt>Warn</tt>
codeSigningPolicies_untrustedArtifactOnDeployment :: Lens' CodeSigningPolicies (Maybe CodeSigningPolicy)

-- | The number of concurrent executions that are reserved for this
--   function. For more information, see <a>Managing Concurrency</a>.
concurrency_reservedConcurrentExecutions :: Lens' Concurrency (Maybe Natural)

-- | The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS
--   topic.
deadLetterConfig_targetArn :: Lens' DeadLetterConfig (Maybe Text)

-- | The destination configuration for successful invocations.
destinationConfig_onSuccess :: Lens' DestinationConfig (Maybe OnSuccess)

-- | The destination configuration for failed invocations.
destinationConfig_onFailure :: Lens' DestinationConfig (Maybe OnFailure)

-- | Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
environment_variables :: Lens' Environment (Maybe (HashMap Text Text))

-- | The error code.
environmentError_errorCode :: Lens' EnvironmentError (Maybe Text)

-- | The error message.
environmentError_message :: Lens' EnvironmentError (Maybe Text)

-- | Environment variable key-value pairs.
environmentResponse_variables :: Lens' EnvironmentResponse (Maybe (HashMap Text Text))

-- | Error messages for environment variables that couldn't be applied.
environmentResponse_error :: Lens' EnvironmentResponse (Maybe EnvironmentError)

-- | The Amazon Resource Name (ARN) of the event source.
eventSourceMappingConfiguration_eventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be one of the following:
--   <tt>Creating</tt>, <tt>Enabling</tt>, <tt>Enabled</tt>,
--   <tt>Disabling</tt>, <tt>Disabled</tt>, <tt>Updating</tt>, or
--   <tt>Deleting</tt>.
eventSourceMappingConfiguration_state :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
eventSourceMappingConfiguration_startingPositionTimestamp :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The ARN of the Lambda function.
eventSourceMappingConfiguration_functionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The name of the Kafka topic.
eventSourceMappingConfiguration_topics :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Amazon MQ) The name of the Amazon MQ broker destination queue to
--   consume.
eventSourceMappingConfiguration_queues :: Lens' EventSourceMappingConfiguration (Maybe (NonEmpty Text))

-- | (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
eventSourceMappingConfiguration_bisectBatchOnFunctionError :: Lens' EventSourceMappingConfiguration (Maybe Bool)

-- | The identifier of the event source mapping.
eventSourceMappingConfiguration_uuid :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
eventSourceMappingConfiguration_parallelizationFactor :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The result of the last Lambda invocation of your function.
eventSourceMappingConfiguration_lastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams only) Discard records after the specified number of retries.
--   The default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
eventSourceMappingConfiguration_maximumRetryAttempts :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | The maximum number of records in each batch that Lambda pulls from
--   your stream or queue and sends to your function. Lambda passes all of
--   the records in the batch to the function in a single call, up to the
--   payload limit for synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_batchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | Indicates whether a user or Lambda made the last change to the event
--   source mapping.
eventSourceMappingConfiguration_stateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
eventSourceMappingConfiguration_maximumBatchingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | An array of the authentication protocol, VPC components, or virtual
--   host to secure and define your event source.
eventSourceMappingConfiguration_sourceAccessConfigurations :: Lens' EventSourceMappingConfiguration (Maybe [SourceAccessConfiguration])

-- | (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
eventSourceMappingConfiguration_maximumRecordAgeInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Int)

-- | (Streams only) A list of current response type enums applied to the
--   event source mapping.
eventSourceMappingConfiguration_functionResponseTypes :: Lens' EventSourceMappingConfiguration (Maybe [FunctionResponseType])

-- | (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
eventSourceMappingConfiguration_tumblingWindowInSeconds :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The self-managed Apache Kafka cluster for your event source.
eventSourceMappingConfiguration_selfManagedEventSource :: Lens' EventSourceMappingConfiguration (Maybe SelfManagedEventSource)

-- | The date that the event source mapping was last updated or that its
--   state changed.
eventSourceMappingConfiguration_lastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | (Streams only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
eventSourceMappingConfiguration_destinationConfig :: Lens' EventSourceMappingConfiguration (Maybe DestinationConfig)

-- | The position in a stream from which to start reading. Required for
--   Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources.
--   <tt>AT_TIMESTAMP</tt> is supported only for Amazon Kinesis streams.
eventSourceMappingConfiguration_startingPosition :: Lens' EventSourceMappingConfiguration (Maybe EventSourcePosition)

-- | The Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
fileSystemConfig_arn :: Lens' FileSystemConfig Text

-- | The path where the function can access the file system, starting with
--   <tt>/mnt/</tt>.
fileSystemConfig_localMountPath :: Lens' FileSystemConfig Text

-- | For versioned objects, the version of the deployment package object to
--   use.
functionCode_s3ObjectVersion :: Lens' FunctionCode (Maybe Text)

-- | The Amazon S3 key of the deployment package.
functionCode_s3Key :: Lens' FunctionCode (Maybe Text)

-- | The base64-encoded contents of the deployment package. Amazon Web
--   Services SDK and Amazon Web Services CLI clients handle the encoding
--   for you.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
functionCode_zipFile :: Lens' FunctionCode (Maybe ByteString)

-- | URI of a <a>container image</a> in the Amazon ECR registry.
functionCode_imageUri :: Lens' FunctionCode (Maybe Text)

-- | An Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
functionCode_s3Bucket :: Lens' FunctionCode (Maybe Text)

-- | A presigned URL that you can use to download the deployment package.
functionCodeLocation_location :: Lens' FunctionCodeLocation (Maybe Text)

-- | The resolved URI for the image.
functionCodeLocation_resolvedImageUri :: Lens' FunctionCodeLocation (Maybe Text)

-- | URI of a container image in the Amazon ECR registry.
functionCodeLocation_imageUri :: Lens' FunctionCodeLocation (Maybe Text)

-- | The service that's hosting the file.
functionCodeLocation_repositoryType :: Lens' FunctionCodeLocation (Maybe Text)

-- | The amount of memory available to the function at runtime.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The runtime environment for the Lambda function.
functionConfiguration_runtime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The current state of the function. When the state is
--   <tt>Inactive</tt>, you can reactivate the function by invoking it.
functionConfiguration_state :: Lens' FunctionConfiguration (Maybe State)

-- | The ARN of the signing profile version.
functionConfiguration_signingProfileVersionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The status of the last update that was performed on the function. This
--   is first set to <tt>Successful</tt> after function creation completes.
functionConfiguration_lastUpdateStatus :: Lens' FunctionConfiguration (Maybe LastUpdateStatus)

-- | The function's Amazon Resource Name (ARN).
functionConfiguration_functionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The KMS key that's used to encrypt the function's environment
--   variables. This key is only returned if you've configured a customer
--   managed CMK.
functionConfiguration_kmsKeyArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The type of deployment package. Set to <tt>Image</tt> for container
--   image and set <tt>Zip</tt> for .zip file archive.
functionConfiguration_packageType :: Lens' FunctionConfiguration (Maybe PackageType)

-- | Connection settings for an <a>Amazon EFS file system</a>.
functionConfiguration_fileSystemConfigs :: Lens' FunctionConfiguration (Maybe [FileSystemConfig])

-- | The function's <a>environment variables</a>.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe EnvironmentResponse)

-- | The function's dead letter queue.
functionConfiguration_deadLetterConfig :: Lens' FunctionConfiguration (Maybe DeadLetterConfig)

-- | The instruction set architecture that the function supports.
--   Architecture is a string array with one of the valid values. The
--   default architecture value is <tt>x86_64</tt>.
functionConfiguration_architectures :: Lens' FunctionConfiguration (Maybe (NonEmpty Architecture))

-- | The ARN of the signing job.
functionConfiguration_signingJobArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's execution role.
functionConfiguration_role :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's networking configuration.
functionConfiguration_vpcConfig :: Lens' FunctionConfiguration (Maybe VpcConfigResponse)

-- | The version of the Lambda function.
functionConfiguration_version :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
functionConfiguration_functionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's <a>layers</a>.
functionConfiguration_layers :: Lens' FunctionConfiguration (Maybe [Layer])

-- | The size of the function's deployment package, in bytes.
functionConfiguration_codeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The function that Lambda calls to begin executing your function.
functionConfiguration_handler :: Lens' FunctionConfiguration (Maybe Text)

-- | The amount of time in seconds that Lambda allows a function to run
--   before stopping it.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Natural)

-- | The reason for the last update that was performed on the function.
functionConfiguration_lastUpdateStatusReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason for the function's current state.
functionConfiguration_stateReason :: Lens' FunctionConfiguration (Maybe Text)

-- | The date and time that the function was last updated, in <a>ISO-8601
--   format</a> (YYYY-MM-DDThh:mm:ss.sTZD).
functionConfiguration_lastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The SHA256 hash of the function's deployment package.
functionConfiguration_codeSha256 :: Lens' FunctionConfiguration (Maybe Text)

-- | The function's X-Ray tracing configuration.
functionConfiguration_tracingConfig :: Lens' FunctionConfiguration (Maybe TracingConfigResponse)

-- | The reason code for the function's current state. When the code is
--   <tt>Creating</tt>, you can't invoke or modify the function.
functionConfiguration_stateReasonCode :: Lens' FunctionConfiguration (Maybe StateReasonCode)

-- | The function's image configuration values.
functionConfiguration_imageConfigResponse :: Lens' FunctionConfiguration (Maybe ImageConfigResponse)

-- | The function's description.
functionConfiguration_description :: Lens' FunctionConfiguration (Maybe Text)

-- | The reason code for the last update that was performed on the
--   function.
functionConfiguration_lastUpdateStatusReasonCode :: Lens' FunctionConfiguration (Maybe LastUpdateStatusReasonCode)

-- | The latest updated revision of the function or alias.
functionConfiguration_revisionId :: Lens' FunctionConfiguration (Maybe Text)

-- | For Lambda@Edge functions, the ARN of the master function.
functionConfiguration_masterArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the function.
functionEventInvokeConfig_functionArn :: Lens' FunctionEventInvokeConfig (Maybe Text)

-- | The maximum age of a request that Lambda sends to a function for
--   processing.
functionEventInvokeConfig_maximumEventAgeInSeconds :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The maximum number of times to retry when the function returns an
--   error.
functionEventInvokeConfig_maximumRetryAttempts :: Lens' FunctionEventInvokeConfig (Maybe Natural)

-- | The date and time that the configuration was last updated.
functionEventInvokeConfig_lastModified :: Lens' FunctionEventInvokeConfig (Maybe UTCTime)

-- | A destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
functionEventInvokeConfig_destinationConfig :: Lens' FunctionEventInvokeConfig (Maybe DestinationConfig)

-- | The ARN of the layer version.
getLayerVersionResponse_layerVersionArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | Details about the layer version.
getLayerVersionResponse_content :: Lens' GetLayerVersionResponse (Maybe LayerVersionContentOutput)

-- | The date that the layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
getLayerVersionResponse_createdDate :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The version number.
getLayerVersionResponse_version :: Lens' GetLayerVersionResponse (Maybe Integer)

-- | The layer's software license.
getLayerVersionResponse_licenseInfo :: Lens' GetLayerVersionResponse (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
getLayerVersionResponse_compatibleArchitectures :: Lens' GetLayerVersionResponse (Maybe [Architecture])

-- | The ARN of the layer.
getLayerVersionResponse_layerArn :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The description of the version.
getLayerVersionResponse_description :: Lens' GetLayerVersionResponse (Maybe Text)

-- | The layer's compatible runtimes.
getLayerVersionResponse_compatibleRuntimes :: Lens' GetLayerVersionResponse (Maybe [Runtime])

-- | Specifies parameters that you want to pass in with ENTRYPOINT.
imageConfig_command :: Lens' ImageConfig (Maybe [Text])

-- | Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
imageConfig_entryPoint :: Lens' ImageConfig (Maybe [Text])

-- | Specifies the working directory.
imageConfig_workingDirectory :: Lens' ImageConfig (Maybe Text)

-- | Error code.
imageConfigError_errorCode :: Lens' ImageConfigError (Maybe Text)

-- | Error message.
imageConfigError_message :: Lens' ImageConfigError (Maybe Text)

-- | Configuration values that override the container image Dockerfile.
imageConfigResponse_imageConfig :: Lens' ImageConfigResponse (Maybe ImageConfig)

-- | Error response to GetFunctionConfiguration.
imageConfigResponse_error :: Lens' ImageConfigResponse (Maybe ImageConfigError)

-- | The Amazon Resource Name (ARN) for a signing profile version.
layer_signingProfileVersionArn :: Lens' Layer (Maybe Text)

-- | The Amazon Resource Name (ARN) of the function layer.
layer_arn :: Lens' Layer (Maybe Text)

-- | The Amazon Resource Name (ARN) of a signing job.
layer_signingJobArn :: Lens' Layer (Maybe Text)

-- | The size of the layer archive in bytes.
layer_codeSize :: Lens' Layer (Maybe Integer)

-- | For versioned objects, the version of the layer archive object to use.
layerVersionContentInput_s3ObjectVersion :: Lens' LayerVersionContentInput (Maybe Text)

-- | The Amazon S3 key of the layer archive.
layerVersionContentInput_s3Key :: Lens' LayerVersionContentInput (Maybe Text)

-- | The base64-encoded contents of the layer archive. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
layerVersionContentInput_zipFile :: Lens' LayerVersionContentInput (Maybe ByteString)

-- | The Amazon S3 bucket of the layer archive.
layerVersionContentInput_s3Bucket :: Lens' LayerVersionContentInput (Maybe Text)

-- | The Amazon Resource Name (ARN) for a signing profile version.
layerVersionContentOutput_signingProfileVersionArn :: Lens' LayerVersionContentOutput (Maybe Text)

-- | A link to the layer archive in Amazon S3 that is valid for 10 minutes.
layerVersionContentOutput_location :: Lens' LayerVersionContentOutput (Maybe Text)

-- | The Amazon Resource Name (ARN) of a signing job.
layerVersionContentOutput_signingJobArn :: Lens' LayerVersionContentOutput (Maybe Text)

-- | The size of the layer archive in bytes.
layerVersionContentOutput_codeSize :: Lens' LayerVersionContentOutput (Maybe Integer)

-- | The SHA-256 hash of the layer archive.
layerVersionContentOutput_codeSha256 :: Lens' LayerVersionContentOutput (Maybe Text)

-- | The ARN of the layer version.
layerVersionsListItem_layerVersionArn :: Lens' LayerVersionsListItem (Maybe Text)

-- | The date that the version was created, in ISO 8601 format. For
--   example, <tt>2018-11-27T15:10:45.123+0000</tt>.
layerVersionsListItem_createdDate :: Lens' LayerVersionsListItem (Maybe Text)

-- | The version number.
layerVersionsListItem_version :: Lens' LayerVersionsListItem (Maybe Integer)

-- | The layer's open-source license.
layerVersionsListItem_licenseInfo :: Lens' LayerVersionsListItem (Maybe Text)

-- | A list of compatible <a>instruction set architectures</a>.
layerVersionsListItem_compatibleArchitectures :: Lens' LayerVersionsListItem (Maybe [Architecture])

-- | The description of the version.
layerVersionsListItem_description :: Lens' LayerVersionsListItem (Maybe Text)

-- | The layer's compatible runtimes.
layerVersionsListItem_compatibleRuntimes :: Lens' LayerVersionsListItem (Maybe [Runtime])

-- | The name of the layer.
layersListItem_layerName :: Lens' LayersListItem (Maybe Text)

-- | The newest version of the layer.
layersListItem_latestMatchingVersion :: Lens' LayersListItem (Maybe LayerVersionsListItem)

-- | The Amazon Resource Name (ARN) of the function layer.
layersListItem_layerArn :: Lens' LayersListItem (Maybe Text)

-- | The Amazon Resource Name (ARN) of the destination resource.
onFailure_destination :: Lens' OnFailure (Maybe Text)

-- | The Amazon Resource Name (ARN) of the destination resource.
onSuccess_destination :: Lens' OnSuccess (Maybe Text)

-- | The status of the allocation process.
provisionedConcurrencyConfigListItem_status :: Lens' ProvisionedConcurrencyConfigListItem (Maybe ProvisionedConcurrencyStatusEnum)

-- | The Amazon Resource Name (ARN) of the alias or version.
provisionedConcurrencyConfigListItem_functionArn :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The amount of provisioned concurrency requested.
provisionedConcurrencyConfigListItem_requestedProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | The amount of provisioned concurrency available.
provisionedConcurrencyConfigListItem_availableProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | For failed allocations, the reason that provisioned concurrency could
--   not be allocated.
provisionedConcurrencyConfigListItem_statusReason :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The amount of provisioned concurrency allocated.
provisionedConcurrencyConfigListItem_allocatedProvisionedConcurrentExecutions :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Natural)

-- | The date and time that a user last updated the configuration, in
--   <a>ISO 8601 format</a>.
provisionedConcurrencyConfigListItem_lastModified :: Lens' ProvisionedConcurrencyConfigListItem (Maybe Text)

-- | The list of bootstrap servers for your Kafka brokers in the following
--   format: <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
selfManagedEventSource_endpoints :: Lens' SelfManagedEventSource (Maybe (HashMap EndPointType (NonEmpty Text)))

-- | The value for your chosen configuration in <tt>Type</tt>. For example:
--   <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
sourceAccessConfiguration_uri :: Lens' SourceAccessConfiguration (Maybe Text)

-- | The type of authentication protocol, VPC components, or virtual host
--   for your event source. For example:
--   <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
sourceAccessConfiguration_type :: Lens' SourceAccessConfiguration (Maybe SourceAccessType)

-- | The tracing mode.
tracingConfig_mode :: Lens' TracingConfig (Maybe TracingMode)

-- | The tracing mode.
tracingConfigResponse_mode :: Lens' TracingConfigResponse (Maybe TracingMode)

-- | A list of VPC security groups IDs.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | A list of VPC subnet IDs.
vpcConfig_subnetIds :: Lens' VpcConfig (Maybe [Text])

-- | A list of VPC security groups IDs.
vpcConfigResponse_securityGroupIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | A list of VPC subnet IDs.
vpcConfigResponse_subnetIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | The ID of the VPC.
vpcConfigResponse_vpcId :: Lens' VpcConfigResponse (Maybe Text)


module Amazonka.Lambda.Waiters

-- | Polls <a>GetFunction</a> every 1 seconds until a successful state is
--   reached. An error is returned after 20 failed checks.
newFunctionExists :: Wait GetFunction

-- | Polls <a>GetFunctionConfiguration</a> every 5 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFunctionActive :: Wait GetFunctionConfiguration

-- | Polls <a>GetFunctionConfiguration</a> every 5 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFunctionUpdated :: Wait GetFunctionConfiguration


-- | Derived from API version <tt>2015-03-31</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Lambda
--   
--   <b>Overview</b>
--   
--   This is the <i>Lambda API Reference</i>. The Lambda Developer Guide
--   provides additional information. For the service overview, see <a>What
--   is Lambda</a>, and for information about how the service works, see
--   <a>Lambda: How it Works</a> in the <b>Lambda Developer Guide</b>.
module Amazonka.Lambda

-- | API version <tt>2015-03-31</tt> of the Amazon Lambda SDK
--   configuration.
defaultService :: Service

-- | Lambda was unable to decrypt the environment variables because the KMS
--   key used is in an invalid state for Decrypt. Check the function's KMS
--   key settings.
_KMSInvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was throttled by Amazon EC2 during Lambda function
--   initialization using the execution role provided for the Lambda
--   function.
_EC2ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function couldn't make a network connection to the configured file
--   system.
_EFSMountConnectivityException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The runtime or runtime version specified is not supported.
_InvalidRuntimeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function couldn't mount the configured file system due to a
--   permission or configuration issue.
_EFSMountFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The permissions policy for the resource is too large. <a>Learn
--   more</a>
_PolicyLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The RevisionId provided does not match the latest RevisionId for the
--   Lambda function or alias. Call the <tt>GetFunction</tt> or the
--   <tt>GetAlias</tt> API to retrieve the latest RevisionId for your
--   resource.
_PreconditionFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Need additional permissions to configure VPC settings.
_EC2AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Subnet ID provided in the Lambda function VPC configuration is
--   invalid.
_InvalidSubnetIDException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The code signature failed one or more of the validation checks for
--   signature mismatch or expiry, and the code signing policy is set to
--   ENFORCE. Lambda blocks the deployment.
_CodeVerificationFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content type of the <tt>Invoke</tt> request body is not JSON.
_UnsupportedMediaTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request body could not be parsed as JSON.
_InvalidRequestContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was unable to decrypt the environment variables because the KMS
--   key was not found. Check the function's KMS key settings.
_KMSNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was not able to create an elastic network interface in the VPC,
--   specified as part of Lambda function configuration, because the limit
--   for network interfaces has been reached.
_ENILimitReachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One of the parameters in the request is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request payload exceeded the <tt>Invoke</tt> request body JSON
--   input limit. For more information, see <a>Limits</a>.
_RequestTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The code signature failed the integrity check. Lambda always blocks
--   deployment if the integrity check fails, even if code signing policy
--   is set to WARN.
_InvalidCodeSignatureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request throughput limit was exceeded.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Security Group ID provided in the Lambda function VPC
--   configuration is invalid.
_InvalidSecurityGroupIDException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was unable to decrypt the environment variables because the KMS
--   key used is disabled. Check the Lambda function's KMS key settings.
_KMSDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was not able to set up VPC access for the Lambda function
--   because one or more configured subnets has no available IP addresses.
_SubnetIPAddressLimitReachedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Lambda service encountered an internal error.
_ServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded your maximum total code size per account. <a>Learn
--   more</a>
_CodeStorageExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified code signing configuration does not exist.
_CodeSigningConfigNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda could not unzip the deployment package.
_InvalidZipFileException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified configuration does not exist.
_ProvisionedConcurrencyConfigNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource already exists, or another operation is in progress.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function is inactive and its VPC connection is no longer
--   available. Wait for the VPC connection to reestablish and try again.
_ResourceNotReadyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda received an unexpected EC2 client exception while setting up
--   for the Lambda function.
_EC2UnexpectedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred when reading from or writing to a connected file
--   system.
_EFSIOException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The function was able to make a network connection to the configured
--   file system, but the mount operation timed out.
_EFSMountTimeoutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Lambda was unable to decrypt the environment variables because KMS
--   access was denied. Check the Lambda function's KMS permissions.
_KMSAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation conflicts with the resource's availability. For example,
--   you attempted to update an EventSource Mapping in CREATING, or tried
--   to delete a EventSource mapping currently in the UPDATING state.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>GetFunction</a> every 1 seconds until a successful state is
--   reached. An error is returned after 20 failed checks.
newFunctionExists :: Wait GetFunction

-- | Polls <a>GetFunctionConfiguration</a> every 5 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFunctionActive :: Wait GetFunctionConfiguration

-- | Polls <a>GetFunctionConfiguration</a> every 5 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFunctionUpdated :: Wait GetFunctionConfiguration

-- | <i>See:</i> <a>newGetFunctionConfiguration</a> smart constructor.
data GetFunctionConfiguration
GetFunctionConfiguration' :: Maybe Text -> Text -> GetFunctionConfiguration

-- | Create a value of <a>GetFunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetFunctionConfiguration'</a>,
--   <a>getFunctionConfiguration_qualifier</a> - Specify a version or alias
--   to get details about a published version of the function.
--   
--   <a>$sel:functionName:GetFunctionConfiguration'</a>,
--   <a>getFunctionConfiguration_functionName</a> - The name of the Lambda
--   function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetFunctionConfiguration :: Text -> GetFunctionConfiguration

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | <i>See:</i> <a>newDeleteEventSourceMapping</a> smart constructor.
data DeleteEventSourceMapping
DeleteEventSourceMapping' :: Text -> DeleteEventSourceMapping

-- | Create a value of <a>DeleteEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uuid:DeleteEventSourceMapping'</a>,
--   <a>deleteEventSourceMapping_uuid</a> - The identifier of the event
--   source mapping.
newDeleteEventSourceMapping :: Text -> DeleteEventSourceMapping

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | <i>See:</i> <a>newUpdateEventSourceMapping</a> smart constructor.
data UpdateEventSourceMapping
UpdateEventSourceMapping' :: Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Int -> Maybe Natural -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe Text -> Maybe DestinationConfig -> Text -> UpdateEventSourceMapping

-- | Create a value of <a>UpdateEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_enabled</a> - When true, the event source
--   mapping is active. When false, Lambda pauses polling and invocation.
--   
--   Default: True
--   
--   <a>$sel:bisectBatchOnFunctionError:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_bisectBatchOnFunctionError</a> - (Streams
--   only) If the function returns an error, split the batch in two and
--   retry.
--   
--   <a>$sel:parallelizationFactor:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_parallelizationFactor</a> - (Streams only)
--   The number of batches to process from each shard concurrently.
--   
--   <a>$sel:maximumRetryAttempts:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_maximumRetryAttempts</a> - (Streams only)
--   Discard records after the specified number of retries. The default
--   value is infinite (-1). When set to infinite (-1), failed records will
--   be retried until the record expires.
--   
--   <a>$sel:batchSize:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_batchSize</a> - The maximum number of
--   records in each batch that Lambda pulls from your stream or queue and
--   sends to your function. Lambda passes all of the records in the batch
--   to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
--   
--   <a>$sel:maximumBatchingWindowInSeconds:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_maximumBatchingWindowInSeconds</a> -
--   (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:sourceAccessConfigurations:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_sourceAccessConfigurations</a> - An array
--   of authentication protocols or VPC components required to secure your
--   event source.
--   
--   <a>$sel:maximumRecordAgeInSeconds:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_maximumRecordAgeInSeconds</a> - (Streams
--   only) Discard records older than the specified age. The default value
--   is infinite (-1).
--   
--   <a>$sel:functionResponseTypes:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_functionResponseTypes</a> - (Streams only)
--   A list of current response type enums applied to the event source
--   mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_tumblingWindowInSeconds</a> - (Streams
--   only) The duration in seconds of a processing window. The range is
--   between 1 second up to 900 seconds.
--   
--   <a>$sel:functionName:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
--   
--   <a>$sel:destinationConfig:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_destinationConfig</a> - (Streams only) An
--   Amazon SQS queue or Amazon SNS topic destination for discarded
--   records.
--   
--   <a>$sel:uuid:UpdateEventSourceMapping'</a>,
--   <a>updateEventSourceMapping_uuid</a> - The identifier of the event
--   source mapping.
newUpdateEventSourceMapping :: Text -> UpdateEventSourceMapping

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | <i>See:</i> <a>newGetLayerVersion</a> smart constructor.
data GetLayerVersion
GetLayerVersion' :: Text -> Integer -> GetLayerVersion

-- | Create a value of <a>GetLayerVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:GetLayerVersion'</a>,
--   <a>getLayerVersion_layerName</a> - The name or Amazon Resource Name
--   (ARN) of the layer.
--   
--   <a>$sel:versionNumber:GetLayerVersion'</a>,
--   <a>getLayerVersion_versionNumber</a> - The version number.
newGetLayerVersion :: Text -> Integer -> GetLayerVersion

-- | <i>See:</i> <a>newGetLayerVersionResponse</a> smart constructor.
data GetLayerVersionResponse
GetLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> GetLayerVersionResponse

-- | Create a value of <a>GetLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:content:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_createdDate</a> - The date that the layer
--   version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newGetLayerVersionResponse :: GetLayerVersionResponse

-- | <i>See:</i> <a>newDeleteFunctionCodeSigningConfig</a> smart
--   constructor.
data DeleteFunctionCodeSigningConfig
DeleteFunctionCodeSigningConfig' :: Text -> DeleteFunctionCodeSigningConfig

-- | Create a value of <a>DeleteFunctionCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteFunctionCodeSigningConfig'</a>,
--   <a>deleteFunctionCodeSigningConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newDeleteFunctionCodeSigningConfig :: Text -> DeleteFunctionCodeSigningConfig

-- | <i>See:</i> <a>newDeleteFunctionCodeSigningConfigResponse</a> smart
--   constructor.
data DeleteFunctionCodeSigningConfigResponse
DeleteFunctionCodeSigningConfigResponse' :: DeleteFunctionCodeSigningConfigResponse

-- | Create a value of <a>DeleteFunctionCodeSigningConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionCodeSigningConfigResponse :: DeleteFunctionCodeSigningConfigResponse

-- | <i>See:</i> <a>newPutFunctionCodeSigningConfig</a> smart constructor.
data PutFunctionCodeSigningConfig
PutFunctionCodeSigningConfig' :: Text -> Text -> PutFunctionCodeSigningConfig

-- | Create a value of <a>PutFunctionCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigArn:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfig_codeSigningConfigArn</a> - The The
--   Amazon Resource Name (ARN) of the code signing configuration.
--   
--   <a>$sel:functionName:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newPutFunctionCodeSigningConfig :: Text -> Text -> PutFunctionCodeSigningConfig

-- | <i>See:</i> <a>newPutFunctionCodeSigningConfigResponse</a> smart
--   constructor.
data PutFunctionCodeSigningConfigResponse
PutFunctionCodeSigningConfigResponse' :: Int -> Text -> Text -> PutFunctionCodeSigningConfigResponse

-- | Create a value of <a>PutFunctionCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutFunctionCodeSigningConfigResponse'</a>,
--   <a>putFunctionCodeSigningConfigResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:codeSigningConfigArn:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfigResponse_codeSigningConfigArn</a> - The
--   The Amazon Resource Name (ARN) of the code signing configuration.
--   
--   <a>$sel:functionName:PutFunctionCodeSigningConfig'</a>,
--   <a>putFunctionCodeSigningConfigResponse_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newPutFunctionCodeSigningConfigResponse :: Int -> Text -> Text -> PutFunctionCodeSigningConfigResponse

-- | <i>See:</i> <a>newCreateAlias</a> smart constructor.
data CreateAlias
CreateAlias' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Text -> Text -> Text -> CreateAlias

-- | Create a value of <a>CreateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:CreateAlias'</a>,
--   <a>createAlias_routingConfig</a> - The <a>routing configuration</a> of
--   the alias.
--   
--   <a>$sel:description:CreateAlias'</a>, <a>createAlias_description</a> -
--   A description of the alias.
--   
--   <a>$sel:functionName:CreateAlias'</a>, <a>createAlias_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:CreateAlias'</a>, <a>createAlias_name</a> - The name of
--   the alias.
--   
--   <a>$sel:functionVersion:CreateAlias'</a>,
--   <a>createAlias_functionVersion</a> - The function version that the
--   alias invokes.
newCreateAlias :: Text -> Text -> Text -> CreateAlias

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | <i>See:</i> <a>newListVersionsByFunction</a> smart constructor.
data ListVersionsByFunction
ListVersionsByFunction' :: Maybe Text -> Maybe Natural -> Text -> ListVersionsByFunction

-- | Create a value of <a>ListVersionsByFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListVersionsByFunction'</a>,
--   <a>listVersionsByFunction_marker</a> - Specify the pagination token
--   that's returned by a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxItems:ListVersionsByFunction'</a>,
--   <a>listVersionsByFunction_maxItems</a> - The maximum number of
--   versions to return. Note that <tt>ListVersionsByFunction</tt> returns
--   a maximum of 50 items in each response, even if you set the number
--   higher.
--   
--   <a>$sel:functionName:ListVersionsByFunction'</a>,
--   <a>listVersionsByFunction_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListVersionsByFunction :: Text -> ListVersionsByFunction

-- | <i>See:</i> <a>newListVersionsByFunctionResponse</a> smart
--   constructor.
data ListVersionsByFunctionResponse
ListVersionsByFunctionResponse' :: Maybe [FunctionConfiguration] -> Maybe Text -> Int -> ListVersionsByFunctionResponse

-- | Create a value of <a>ListVersionsByFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versions:ListVersionsByFunctionResponse'</a>,
--   <a>listVersionsByFunctionResponse_versions</a> - A list of Lambda
--   function versions.
--   
--   <a>$sel:nextMarker:ListVersionsByFunctionResponse'</a>,
--   <a>listVersionsByFunctionResponse_nextMarker</a> - The pagination
--   token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListVersionsByFunctionResponse'</a>,
--   <a>listVersionsByFunctionResponse_httpStatus</a> - The response's http
--   status code.
newListVersionsByFunctionResponse :: Int -> ListVersionsByFunctionResponse

-- | <i>See:</i> <a>newListAliases</a> smart constructor.
data ListAliases
ListAliases' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> ListAliases

-- | Create a value of <a>ListAliases</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListAliases'</a>, <a>listAliases_marker</a> - Specify
--   the pagination token that's returned by a previous request to retrieve
--   the next page of results.
--   
--   <a>$sel:maxItems:ListAliases'</a>, <a>listAliases_maxItems</a> - Limit
--   the number of aliases returned.
--   
--   <a>$sel:functionVersion:ListAliases'</a>,
--   <a>listAliases_functionVersion</a> - Specify a function version to
--   only list aliases that invoke that version.
--   
--   <a>$sel:functionName:ListAliases'</a>, <a>listAliases_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListAliases :: Text -> ListAliases

-- | <i>See:</i> <a>newListAliasesResponse</a> smart constructor.
data ListAliasesResponse
ListAliasesResponse' :: Maybe [AliasConfiguration] -> Maybe Text -> Int -> ListAliasesResponse

-- | Create a value of <a>ListAliasesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliases:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_aliases</a> - A list of aliases.
--   
--   <a>$sel:nextMarker:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_nextMarker</a> - The pagination token that's
--   included if more results are available.
--   
--   <a>$sel:httpStatus:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_httpStatus</a> - The response's http status
--   code.
newListAliasesResponse :: Int -> ListAliasesResponse

-- | <i>See:</i> <a>newDeleteCodeSigningConfig</a> smart constructor.
data DeleteCodeSigningConfig
DeleteCodeSigningConfig' :: Text -> DeleteCodeSigningConfig

-- | Create a value of <a>DeleteCodeSigningConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigArn:DeleteCodeSigningConfig'</a>,
--   <a>deleteCodeSigningConfig_codeSigningConfigArn</a> - The The Amazon
--   Resource Name (ARN) of the code signing configuration.
newDeleteCodeSigningConfig :: Text -> DeleteCodeSigningConfig

-- | <i>See:</i> <a>newDeleteCodeSigningConfigResponse</a> smart
--   constructor.
data DeleteCodeSigningConfigResponse
DeleteCodeSigningConfigResponse' :: Int -> DeleteCodeSigningConfigResponse

-- | Create a value of <a>DeleteCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCodeSigningConfigResponse'</a>,
--   <a>deleteCodeSigningConfigResponse_httpStatus</a> - The response's
--   http status code.
newDeleteCodeSigningConfigResponse :: Int -> DeleteCodeSigningConfigResponse

-- | <i>See:</i> <a>newUpdateCodeSigningConfig</a> smart constructor.
data UpdateCodeSigningConfig
UpdateCodeSigningConfig' :: Maybe AllowedPublishers -> Maybe CodeSigningPolicies -> Maybe Text -> Text -> UpdateCodeSigningConfig

-- | Create a value of <a>UpdateCodeSigningConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedPublishers:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_allowedPublishers</a> - Signing profiles
--   for this code signing configuration.
--   
--   <a>$sel:codeSigningPolicies:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_codeSigningPolicies</a> - The code signing
--   policy.
--   
--   <a>$sel:description:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_description</a> - Descriptive name for this
--   code signing configuration.
--   
--   <a>$sel:codeSigningConfigArn:UpdateCodeSigningConfig'</a>,
--   <a>updateCodeSigningConfig_codeSigningConfigArn</a> - The The Amazon
--   Resource Name (ARN) of the code signing configuration.
newUpdateCodeSigningConfig :: Text -> UpdateCodeSigningConfig

-- | <i>See:</i> <a>newUpdateCodeSigningConfigResponse</a> smart
--   constructor.
data UpdateCodeSigningConfigResponse
UpdateCodeSigningConfigResponse' :: Int -> CodeSigningConfig -> UpdateCodeSigningConfigResponse

-- | Create a value of <a>UpdateCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCodeSigningConfigResponse'</a>,
--   <a>updateCodeSigningConfigResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:codeSigningConfig:UpdateCodeSigningConfigResponse'</a>,
--   <a>updateCodeSigningConfigResponse_codeSigningConfig</a> - The code
--   signing configuration
newUpdateCodeSigningConfigResponse :: Int -> CodeSigningConfig -> UpdateCodeSigningConfigResponse

-- | <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Maybe Text -> Maybe Text -> Text -> Text -> RemovePermission

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:RemovePermission'</a>,
--   <a>removePermission_qualifier</a> - Specify a version or alias to
--   remove permissions from a published version of the function.
--   
--   <a>$sel:revisionId:RemovePermission'</a>,
--   <a>removePermission_revisionId</a> - Only update the policy if the
--   revision ID matches the ID that's specified. Use this option to avoid
--   modifying a policy that has changed since you last read it.
--   
--   <a>$sel:functionName:RemovePermission'</a>,
--   <a>removePermission_functionName</a> - The name of the Lambda
--   function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:statementId:RemovePermission'</a>,
--   <a>removePermission_statementId</a> - Statement ID of the permission
--   to remove.
newRemovePermission :: Text -> Text -> RemovePermission

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse

-- | <i>See:</i> <a>newDeleteFunctionEventInvokeConfig</a> smart
--   constructor.
data DeleteFunctionEventInvokeConfig
DeleteFunctionEventInvokeConfig' :: Maybe Text -> Text -> DeleteFunctionEventInvokeConfig

-- | Create a value of <a>DeleteFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:DeleteFunctionEventInvokeConfig'</a>,
--   <a>deleteFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:functionName:DeleteFunctionEventInvokeConfig'</a>,
--   <a>deleteFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newDeleteFunctionEventInvokeConfig :: Text -> DeleteFunctionEventInvokeConfig

-- | <i>See:</i> <a>newDeleteFunctionEventInvokeConfigResponse</a> smart
--   constructor.
data DeleteFunctionEventInvokeConfigResponse
DeleteFunctionEventInvokeConfigResponse' :: DeleteFunctionEventInvokeConfigResponse

-- | Create a value of <a>DeleteFunctionEventInvokeConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionEventInvokeConfigResponse :: DeleteFunctionEventInvokeConfigResponse

-- | <i>See:</i> <a>newUpdateFunctionEventInvokeConfig</a> smart
--   constructor.
data UpdateFunctionEventInvokeConfig
UpdateFunctionEventInvokeConfig' :: Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe DestinationConfig -> Text -> UpdateFunctionEventInvokeConfig

-- | Create a value of <a>UpdateFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumEventAgeInSeconds:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_maximumRetryAttempts</a> - The
--   maximum number of times to retry when the function returns an error.
--   
--   <a>$sel:qualifier:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:destinationConfig:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_destinationConfig</a> - A
--   destination for events after they have been sent to a function for
--   processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
--   
--   <a>$sel:functionName:UpdateFunctionEventInvokeConfig'</a>,
--   <a>updateFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newUpdateFunctionEventInvokeConfig :: Text -> UpdateFunctionEventInvokeConfig

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | <i>See:</i> <a>newPutFunctionEventInvokeConfig</a> smart constructor.
data PutFunctionEventInvokeConfig
PutFunctionEventInvokeConfig' :: Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe DestinationConfig -> Text -> PutFunctionEventInvokeConfig

-- | Create a value of <a>PutFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumEventAgeInSeconds:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:qualifier:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:destinationConfig:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_destinationConfig</a> - A destination
--   for events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
--   
--   <a>$sel:functionName:PutFunctionEventInvokeConfig'</a>,
--   <a>putFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newPutFunctionEventInvokeConfig :: Text -> PutFunctionEventInvokeConfig

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | <i>See:</i> <a>newInvoke</a> smart constructor.
data Invoke
Invoke' :: Maybe InvocationType -> Maybe LogType -> Maybe Text -> Maybe Text -> Text -> ByteString -> Invoke

-- | Create a value of <a>Invoke</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invocationType:Invoke'</a>, <a>invoke_invocationType</a> -
--   Choose from the following options.
--   
--   <ul>
--   <li><tt>RequestResponse</tt> (default) - Invoke the function
--   synchronously. Keep the connection open until the function returns a
--   response or times out. The API response includes the function response
--   and additional data.</li>
--   <li><tt>Event</tt> - Invoke the function asynchronously. Send events
--   that fail multiple times to the function's dead-letter queue (if it's
--   configured). The API response only includes a status code.</li>
--   <li><tt>DryRun</tt> - Validate parameter values and verify that the
--   user or role has permission to invoke the function.</li>
--   </ul>
--   
--   <a>$sel:logType:Invoke'</a>, <a>invoke_logType</a> - Set to
--   <tt>Tail</tt> to include the execution log in the response. Applies to
--   synchronously invoked functions only.
--   
--   <a>$sel:qualifier:Invoke'</a>, <a>invoke_qualifier</a> - Specify a
--   version or alias to invoke a published version of the function.
--   
--   <a>$sel:clientContext:Invoke'</a>, <a>invoke_clientContext</a> - Up to
--   3583 bytes of base64-encoded data about the invoking client to pass to
--   the function in the context object.
--   
--   <a>$sel:functionName:Invoke'</a>, <a>invoke_functionName</a> - The
--   name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:payload:Invoke'</a>, <a>invoke_payload</a> - The JSON that you
--   want to provide to your Lambda function as input.
newInvoke :: Text -> ByteString -> Invoke

-- | <i>See:</i> <a>newInvokeResponse</a> smart constructor.
data InvokeResponse
InvokeResponse' :: Maybe Text -> Maybe Text -> Maybe ByteString -> Maybe Text -> Int -> InvokeResponse

-- | Create a value of <a>InvokeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionError:InvokeResponse'</a>,
--   <a>invokeResponse_functionError</a> - If present, indicates that an
--   error occurred during function execution. Details about the error are
--   included in the response payload.
--   
--   <a>$sel:logResult:InvokeResponse'</a>, <a>invokeResponse_logResult</a>
--   - The last 4 KB of the execution log, which is base64 encoded.
--   
--   <a>$sel:payload:Invoke'</a>, <a>invokeResponse_payload</a> - The
--   response from the function, or an error object.
--   
--   <a>$sel:executedVersion:InvokeResponse'</a>,
--   <a>invokeResponse_executedVersion</a> - The version of the function
--   that executed. When you invoke a function with an alias, this
--   indicates which version the alias resolved to.
--   
--   <a>$sel:statusCode:InvokeResponse'</a>,
--   <a>invokeResponse_statusCode</a> - The HTTP status code is in the 200
--   range for a successful request. For the <tt>RequestResponse</tt>
--   invocation type, this status code is 200. For the <tt>Event</tt>
--   invocation type, this status code is 202. For the <tt>DryRun</tt>
--   invocation type, the status code is 204.
newInvokeResponse :: Int -> InvokeResponse

-- | <i>See:</i> <a>newDeleteLayerVersion</a> smart constructor.
data DeleteLayerVersion
DeleteLayerVersion' :: Text -> Integer -> DeleteLayerVersion

-- | Create a value of <a>DeleteLayerVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:DeleteLayerVersion'</a>,
--   <a>deleteLayerVersion_layerName</a> - The name or Amazon Resource Name
--   (ARN) of the layer.
--   
--   <a>$sel:versionNumber:DeleteLayerVersion'</a>,
--   <a>deleteLayerVersion_versionNumber</a> - The version number.
newDeleteLayerVersion :: Text -> Integer -> DeleteLayerVersion

-- | <i>See:</i> <a>newDeleteLayerVersionResponse</a> smart constructor.
data DeleteLayerVersionResponse
DeleteLayerVersionResponse' :: DeleteLayerVersionResponse

-- | Create a value of <a>DeleteLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLayerVersionResponse :: DeleteLayerVersionResponse

-- | <i>See:</i> <a>newGetAlias</a> smart constructor.
data GetAlias
GetAlias' :: Text -> Text -> GetAlias

-- | Create a value of <a>GetAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetAlias'</a>, <a>getAlias_functionName</a> - The
--   name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:GetAlias'</a>, <a>getAlias_name</a> - The name of the
--   alias.
newGetAlias :: Text -> Text -> GetAlias

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | <i>See:</i> <a>newPublishLayerVersion</a> smart constructor.
data PublishLayerVersion
PublishLayerVersion' :: Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe [Runtime] -> Text -> LayerVersionContentInput -> PublishLayerVersion

-- | Create a value of <a>PublishLayerVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:licenseInfo:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_licenseInfo</a> - The layer's software license.
--   It can be any of the following:
--   
--   <ul>
--   <li>An <a>SPDX license identifier</a>. For example, <tt>MIT</tt>.</li>
--   <li>The URL of a license hosted on the internet. For example,
--   <tt>https://opensource.org/licenses/MIT</tt>.</li>
--   <li>The full text of the license.</li>
--   </ul>
--   
--   <a>$sel:compatibleArchitectures:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:description:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_compatibleRuntimes</a> - A list of compatible
--   <a>function runtimes</a>. Used for filtering with ListLayers and
--   ListLayerVersions.
--   
--   <a>$sel:layerName:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_layerName</a> - The name or Amazon Resource
--   Name (ARN) of the layer.
--   
--   <a>$sel:content:PublishLayerVersion'</a>,
--   <a>publishLayerVersion_content</a> - The function layer archive.
newPublishLayerVersion :: Text -> LayerVersionContentInput -> PublishLayerVersion

-- | <i>See:</i> <a>newPublishLayerVersionResponse</a> smart constructor.
data PublishLayerVersionResponse
PublishLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> Int -> PublishLayerVersionResponse

-- | Create a value of <a>PublishLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_layerVersionArn</a> - The ARN of the
--   layer version.
--   
--   <a>$sel:content:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_createdDate</a> - The date that the
--   layer version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_description</a> - The description of
--   the version.
--   
--   <a>$sel:compatibleRuntimes:PublishLayerVersion'</a>,
--   <a>publishLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
--   
--   <a>$sel:httpStatus:PublishLayerVersionResponse'</a>,
--   <a>publishLayerVersionResponse_httpStatus</a> - The response's http
--   status code.
newPublishLayerVersionResponse :: Int -> PublishLayerVersionResponse

-- | <i>See:</i> <a>newGetEventSourceMapping</a> smart constructor.
data GetEventSourceMapping
GetEventSourceMapping' :: Text -> GetEventSourceMapping

-- | Create a value of <a>GetEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uuid:GetEventSourceMapping'</a>,
--   <a>getEventSourceMapping_uuid</a> - The identifier of the event source
--   mapping.
newGetEventSourceMapping :: Text -> GetEventSourceMapping

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | <i>See:</i> <a>newAddLayerVersionPermission</a> smart constructor.
data AddLayerVersionPermission
AddLayerVersionPermission' :: Maybe Text -> Maybe Text -> Text -> Integer -> Text -> Text -> Text -> AddLayerVersionPermission

-- | Create a value of <a>AddLayerVersionPermission</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_revisionId</a> - Only update the policy
--   if the revision ID matches the ID specified. Use this option to avoid
--   modifying a policy that has changed since you last read it.
--   
--   <a>$sel:organizationId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_organizationId</a> - With the principal
--   set to <tt>*</tt>, grant permission to all accounts in the specified
--   organization.
--   
--   <a>$sel:layerName:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_layerName</a> - The name or Amazon
--   Resource Name (ARN) of the layer.
--   
--   <a>$sel:versionNumber:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_versionNumber</a> - The version number.
--   
--   <a>$sel:statementId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_statementId</a> - An identifier that
--   distinguishes the policy from others on the same layer version.
--   
--   <a>$sel:action:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_action</a> - The API action that grants
--   access to the layer. For example, <tt>lambda:GetLayerVersion</tt>.
--   
--   <a>$sel:principal:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermission_principal</a> - An account ID, or
--   <tt>*</tt> to grant layer usage permission to all accounts in an
--   organization, or all Amazon Web Services accounts (if
--   <tt>organizationId</tt> is not specified). For the last case, make
--   sure that you really do want all Amazon Web Services accounts to have
--   usage permission to this layer.
newAddLayerVersionPermission :: Text -> Integer -> Text -> Text -> Text -> AddLayerVersionPermission

-- | <i>See:</i> <a>newAddLayerVersionPermissionResponse</a> smart
--   constructor.
data AddLayerVersionPermissionResponse
AddLayerVersionPermissionResponse' :: Maybe Text -> Maybe Text -> Int -> AddLayerVersionPermissionResponse

-- | Create a value of <a>AddLayerVersionPermissionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statement:AddLayerVersionPermissionResponse'</a>,
--   <a>addLayerVersionPermissionResponse_statement</a> - The permission
--   statement.
--   
--   <a>$sel:revisionId:AddLayerVersionPermission'</a>,
--   <a>addLayerVersionPermissionResponse_revisionId</a> - A unique
--   identifier for the current revision of the policy.
--   
--   <a>$sel:httpStatus:AddLayerVersionPermissionResponse'</a>,
--   <a>addLayerVersionPermissionResponse_httpStatus</a> - The response's
--   http status code.
newAddLayerVersionPermissionResponse :: Int -> AddLayerVersionPermissionResponse

-- | <i>See:</i> <a>newListProvisionedConcurrencyConfigs</a> smart
--   constructor.
data ListProvisionedConcurrencyConfigs
ListProvisionedConcurrencyConfigs' :: Maybe Text -> Maybe Natural -> Text -> ListProvisionedConcurrencyConfigs

-- | Create a value of <a>ListProvisionedConcurrencyConfigs</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListProvisionedConcurrencyConfigs'</a>,
--   <a>listProvisionedConcurrencyConfigs_marker</a> - Specify the
--   pagination token that's returned by a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxItems:ListProvisionedConcurrencyConfigs'</a>,
--   <a>listProvisionedConcurrencyConfigs_maxItems</a> - Specify a number
--   to limit the number of configurations returned.
--   
--   <a>$sel:functionName:ListProvisionedConcurrencyConfigs'</a>,
--   <a>listProvisionedConcurrencyConfigs_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListProvisionedConcurrencyConfigs :: Text -> ListProvisionedConcurrencyConfigs

-- | <i>See:</i> <a>newListProvisionedConcurrencyConfigsResponse</a> smart
--   constructor.
data ListProvisionedConcurrencyConfigsResponse
ListProvisionedConcurrencyConfigsResponse' :: Maybe [ProvisionedConcurrencyConfigListItem] -> Maybe Text -> Int -> ListProvisionedConcurrencyConfigsResponse

-- | Create a value of <a>ListProvisionedConcurrencyConfigsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:provisionedConcurrencyConfigs:ListProvisionedConcurrencyConfigsResponse'</a>,
--   <a>listProvisionedConcurrencyConfigsResponse_provisionedConcurrencyConfigs</a>
--   - A list of provisioned concurrency configurations.
--   
--   <a>$sel:nextMarker:ListProvisionedConcurrencyConfigsResponse'</a>,
--   <a>listProvisionedConcurrencyConfigsResponse_nextMarker</a> - The
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListProvisionedConcurrencyConfigsResponse'</a>,
--   <a>listProvisionedConcurrencyConfigsResponse_httpStatus</a> - The
--   response's http status code.
newListProvisionedConcurrencyConfigsResponse :: Int -> ListProvisionedConcurrencyConfigsResponse

-- | <i>See:</i> <a>newPutFunctionConcurrency</a> smart constructor.
data PutFunctionConcurrency
PutFunctionConcurrency' :: Text -> Natural -> PutFunctionConcurrency

-- | Create a value of <a>PutFunctionConcurrency</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:PutFunctionConcurrency'</a>,
--   <a>putFunctionConcurrency_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:reservedConcurrentExecutions:PutFunctionConcurrency'</a>,
--   <a>putFunctionConcurrency_reservedConcurrentExecutions</a> - The
--   number of simultaneous executions to reserve for the function.
newPutFunctionConcurrency :: Text -> Natural -> PutFunctionConcurrency

-- | <i>See:</i> <a>newConcurrency</a> smart constructor.
data Concurrency
Concurrency' :: Maybe Natural -> Concurrency

-- | Create a value of <a>Concurrency</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedConcurrentExecutions:Concurrency'</a>,
--   <a>concurrency_reservedConcurrentExecutions</a> - The number of
--   concurrent executions that are reserved for this function. For more
--   information, see <a>Managing Concurrency</a>.
newConcurrency :: Concurrency

-- | <i>See:</i> <a>newCreateFunction</a> smart constructor.
data CreateFunction
CreateFunction' :: Maybe Natural -> Maybe Runtime -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe Environment -> Maybe ImageConfig -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe VpcConfig -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe TracingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Text -> Text -> FunctionCode -> CreateFunction

-- | Create a value of <a>CreateFunction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:CreateFunction'</a>,
--   <a>createFunction_memorySize</a> - The amount of <a>memory available
--   to the function</a> at runtime. Increasing the function memory also
--   increases its CPU allocation. The default value is 128 MB. The value
--   can be any multiple of 1 MB.
--   
--   <a>$sel:runtime:CreateFunction'</a>, <a>createFunction_runtime</a> -
--   The identifier of the function's <a>runtime</a>.
--   
--   <a>$sel:kmsKeyArn:CreateFunction'</a>, <a>createFunction_kmsKeyArn</a>
--   - The ARN of the Amazon Web Services Key Management Service (KMS) key
--   that's used to encrypt your function's environment variables. If it's
--   not provided, Lambda uses a default service key.
--   
--   <a>$sel:packageType:CreateFunction'</a>,
--   <a>createFunction_packageType</a> - The type of deployment package.
--   Set to <tt>Image</tt> for container image and set <tt>Zip</tt> for ZIP
--   archive.
--   
--   <a>$sel:fileSystemConfigs:CreateFunction'</a>,
--   <a>createFunction_fileSystemConfigs</a> - Connection settings for an
--   Amazon EFS file system.
--   
--   <a>$sel:environment:CreateFunction'</a>,
--   <a>createFunction_environment</a> - Environment variables that are
--   accessible from function code during execution.
--   
--   <a>$sel:imageConfig:CreateFunction'</a>,
--   <a>createFunction_imageConfig</a> - Container image <a>configuration
--   values</a> that override the values in the container image Dockerfile.
--   
--   <a>$sel:deadLetterConfig:CreateFunction'</a>,
--   <a>createFunction_deadLetterConfig</a> - A dead letter queue
--   configuration that specifies the queue or topic where Lambda sends
--   asynchronous events when they fail processing. For more information,
--   see <a>Dead Letter Queues</a>.
--   
--   <a>$sel:architectures:CreateFunction'</a>,
--   <a>createFunction_architectures</a> - The instruction set architecture
--   that the function supports. Enter a string array with one of the valid
--   values. The default value is <tt>x86_64</tt>.
--   
--   <a>$sel:codeSigningConfigArn:CreateFunction'</a>,
--   <a>createFunction_codeSigningConfigArn</a> - To enable code signing
--   for this function, specify the ARN of a code-signing configuration. A
--   code-signing configuration includes a set of signing profiles, which
--   define the trusted publishers for this function.
--   
--   <a>$sel:vpcConfig:CreateFunction'</a>, <a>createFunction_vpcConfig</a>
--   - For network connectivity to Amazon Web Services resources in a VPC,
--   specify a list of security groups and subnets in the VPC. When you
--   connect a function to a VPC, it can only access resources and the
--   internet through that VPC. For more information, see <a>VPC
--   Settings</a>.
--   
--   <a>$sel:layers:CreateFunction'</a>, <a>createFunction_layers</a> - A
--   list of <a>function layers</a> to add to the function's execution
--   environment. Specify each layer by its ARN, including the version.
--   
--   <a>$sel:handler:CreateFunction'</a>, <a>createFunction_handler</a> -
--   The name of the method within your code that Lambda calls to execute
--   your function. The format includes the file name. It can also include
--   namespaces and other qualifiers, depending on the runtime. For more
--   information, see <a>Programming Model</a>.
--   
--   <a>$sel:timeout:CreateFunction'</a>, <a>createFunction_timeout</a> -
--   The amount of time that Lambda allows a function to run before
--   stopping it. The default is 3 seconds. The maximum allowed value is
--   900 seconds. For additional information, see <a>Lambda execution
--   environment</a>.
--   
--   <a>$sel:tracingConfig:CreateFunction'</a>,
--   <a>createFunction_tracingConfig</a> - Set <tt>Mode</tt> to
--   <tt>Active</tt> to sample and trace a subset of incoming requests with
--   <a>X-Ray</a>.
--   
--   <a>$sel:description:CreateFunction'</a>,
--   <a>createFunction_description</a> - A description of the function.
--   
--   <a>$sel:tags:CreateFunction'</a>, <a>createFunction_tags</a> - A list
--   of <a>tags</a> to apply to the function.
--   
--   <a>$sel:publish:CreateFunction'</a>, <a>createFunction_publish</a> -
--   Set to true to publish the first version of the function during
--   creation.
--   
--   <a>$sel:functionName:CreateFunction'</a>,
--   <a>createFunction_functionName</a> - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:role':CreateFunction'</a>, <a>createFunction_role</a> - The
--   Amazon Resource Name (ARN) of the function's execution role.
--   
--   <a>$sel:code:CreateFunction'</a>, <a>createFunction_code</a> - The
--   code for the function.
newCreateFunction :: Text -> Text -> FunctionCode -> CreateFunction

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | <i>See:</i> <a>newDeleteFunctionConcurrency</a> smart constructor.
data DeleteFunctionConcurrency
DeleteFunctionConcurrency' :: Text -> DeleteFunctionConcurrency

-- | Create a value of <a>DeleteFunctionConcurrency</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteFunctionConcurrency'</a>,
--   <a>deleteFunctionConcurrency_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newDeleteFunctionConcurrency :: Text -> DeleteFunctionConcurrency

-- | <i>See:</i> <a>newDeleteFunctionConcurrencyResponse</a> smart
--   constructor.
data DeleteFunctionConcurrencyResponse
DeleteFunctionConcurrencyResponse' :: DeleteFunctionConcurrencyResponse

-- | Create a value of <a>DeleteFunctionConcurrencyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionConcurrencyResponse :: DeleteFunctionConcurrencyResponse

-- | <i>See:</i> <a>newGetLayerVersionByArn</a> smart constructor.
data GetLayerVersionByArn
GetLayerVersionByArn' :: Text -> GetLayerVersionByArn

-- | Create a value of <a>GetLayerVersionByArn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetLayerVersionByArn'</a>, <a>getLayerVersionByArn_arn</a>
--   - The ARN of the layer version.
newGetLayerVersionByArn :: Text -> GetLayerVersionByArn

-- | <i>See:</i> <a>newGetLayerVersionResponse</a> smart constructor.
data GetLayerVersionResponse
GetLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> GetLayerVersionResponse

-- | Create a value of <a>GetLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:content:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_createdDate</a> - The date that the layer
--   version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newGetLayerVersionResponse :: GetLayerVersionResponse

-- | <i>See:</i> <a>newGetFunctionConcurrency</a> smart constructor.
data GetFunctionConcurrency
GetFunctionConcurrency' :: Text -> GetFunctionConcurrency

-- | Create a value of <a>GetFunctionConcurrency</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetFunctionConcurrency'</a>,
--   <a>getFunctionConcurrency_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newGetFunctionConcurrency :: Text -> GetFunctionConcurrency

-- | <i>See:</i> <a>newGetFunctionConcurrencyResponse</a> smart
--   constructor.
data GetFunctionConcurrencyResponse
GetFunctionConcurrencyResponse' :: Maybe Natural -> Int -> GetFunctionConcurrencyResponse

-- | Create a value of <a>GetFunctionConcurrencyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:reservedConcurrentExecutions:GetFunctionConcurrencyResponse'</a>,
--   <a>getFunctionConcurrencyResponse_reservedConcurrentExecutions</a> -
--   The number of simultaneous executions that are reserved for the
--   function.
--   
--   <a>$sel:httpStatus:GetFunctionConcurrencyResponse'</a>,
--   <a>getFunctionConcurrencyResponse_httpStatus</a> - The response's http
--   status code.
newGetFunctionConcurrencyResponse :: Int -> GetFunctionConcurrencyResponse

-- | <i>See:</i> <a>newCreateEventSourceMapping</a> smart constructor.
data CreateEventSourceMapping
CreateEventSourceMapping' :: Maybe Text -> Maybe POSIX -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Int -> Maybe Natural -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe DestinationConfig -> Maybe EventSourcePosition -> Text -> CreateEventSourceMapping

-- | Create a value of <a>CreateEventSourceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_eventSourceArn</a> - The Amazon Resource
--   Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
--   
--   <a>$sel:startingPositionTimestamp:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_startingPositionTimestamp</a> - With
--   <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time from
--   which to start reading.
--   
--   <a>$sel:topics:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_topics</a> - The name of the Kafka topic.
--   
--   <a>$sel:queues:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_queues</a> - (MQ) The name of the Amazon
--   MQ broker destination queue to consume.
--   
--   <a>$sel:enabled:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_enabled</a> - When true, the event source
--   mapping is active. When false, Lambda pauses polling and invocation.
--   
--   Default: True
--   
--   <a>$sel:bisectBatchOnFunctionError:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_bisectBatchOnFunctionError</a> - (Streams
--   only) If the function returns an error, split the batch in two and
--   retry.
--   
--   <a>$sel:parallelizationFactor:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_parallelizationFactor</a> - (Streams only)
--   The number of batches to process from each shard concurrently.
--   
--   <a>$sel:maximumRetryAttempts:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_maximumRetryAttempts</a> - (Streams only)
--   Discard records after the specified number of retries. The default
--   value is infinite (-1). When set to infinite (-1), failed records will
--   be retried until the record expires.
--   
--   <a>$sel:batchSize:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_batchSize</a> - The maximum number of
--   records in each batch that Lambda pulls from your stream or queue and
--   sends to your function. Lambda passes all of the records in the batch
--   to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - Default 100. Max 10,000.</li>
--   <li><b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</li>
--   <li><b>Amazon Simple Queue Service</b> - Default 10. For standard
--   queues the max is 10,000. For FIFO queues the max is 10.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - Default 100.
--   Max 10,000.</li>
--   <li><b>Self-Managed Apache Kafka</b> - Default 100. Max 10,000.</li>
--   </ul>
--   
--   <a>$sel:maximumBatchingWindowInSeconds:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_maximumBatchingWindowInSeconds</a> -
--   (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:sourceAccessConfigurations:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_sourceAccessConfigurations</a> - An array
--   of authentication protocols or VPC components required to secure your
--   event source.
--   
--   <a>$sel:maximumRecordAgeInSeconds:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_maximumRecordAgeInSeconds</a> - (Streams
--   only) Discard records older than the specified age. The default value
--   is infinite (-1).
--   
--   <a>$sel:functionResponseTypes:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_functionResponseTypes</a> - (Streams only)
--   A list of current response type enums applied to the event source
--   mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_tumblingWindowInSeconds</a> - (Streams
--   only) The duration in seconds of a processing window. The range is
--   between 1 second up to 900 seconds.
--   
--   <a>$sel:selfManagedEventSource:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_selfManagedEventSource</a> - The
--   Self-Managed Apache Kafka cluster to send records.
--   
--   <a>$sel:destinationConfig:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_destinationConfig</a> - (Streams only) An
--   Amazon SQS queue or Amazon SNS topic destination for discarded
--   records.
--   
--   <a>$sel:startingPosition:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_startingPosition</a> - The position in a
--   stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK Streams sources. <tt>AT_TIMESTAMP</tt>
--   is only supported for Amazon Kinesis streams.
--   
--   <a>$sel:functionName:CreateEventSourceMapping'</a>,
--   <a>createEventSourceMapping_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
newCreateEventSourceMapping :: Text -> CreateEventSourceMapping

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | <i>See:</i> <a>newGetProvisionedConcurrencyConfig</a> smart
--   constructor.
data GetProvisionedConcurrencyConfig
GetProvisionedConcurrencyConfig' :: Text -> Text -> GetProvisionedConcurrencyConfig

-- | Create a value of <a>GetProvisionedConcurrencyConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetProvisionedConcurrencyConfig'</a>,
--   <a>getProvisionedConcurrencyConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:qualifier:GetProvisionedConcurrencyConfig'</a>,
--   <a>getProvisionedConcurrencyConfig_qualifier</a> - The version number
--   or alias name.
newGetProvisionedConcurrencyConfig :: Text -> Text -> GetProvisionedConcurrencyConfig

-- | <i>See:</i> <a>newGetProvisionedConcurrencyConfigResponse</a> smart
--   constructor.
data GetProvisionedConcurrencyConfigResponse
GetProvisionedConcurrencyConfigResponse' :: Maybe ProvisionedConcurrencyStatusEnum -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> Int -> GetProvisionedConcurrencyConfigResponse

-- | Create a value of <a>GetProvisionedConcurrencyConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_status</a> - The status of
--   the allocation process.
--   
--   
--   <a>$sel:requestedProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency requested.
--   
--   
--   <a>$sel:availableProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency available.
--   
--   <a>$sel:statusReason:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_statusReason</a> - For
--   failed allocations, the reason that provisioned concurrency could not
--   be allocated.
--   
--   
--   <a>$sel:allocatedProvisionedConcurrentExecutions:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency allocated.
--   
--   <a>$sel:lastModified:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_lastModified</a> - The date
--   and time that a user last updated the configuration, in <a>ISO 8601
--   format</a>.
--   
--   <a>$sel:httpStatus:GetProvisionedConcurrencyConfigResponse'</a>,
--   <a>getProvisionedConcurrencyConfigResponse_httpStatus</a> - The
--   response's http status code.
newGetProvisionedConcurrencyConfigResponse :: Int -> GetProvisionedConcurrencyConfigResponse

-- | <i>See:</i> <a>newRemoveLayerVersionPermission</a> smart constructor.
data RemoveLayerVersionPermission
RemoveLayerVersionPermission' :: Maybe Text -> Text -> Integer -> Text -> RemoveLayerVersionPermission

-- | Create a value of <a>RemoveLayerVersionPermission</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_revisionId</a> - Only update the
--   policy if the revision ID matches the ID specified. Use this option to
--   avoid modifying a policy that has changed since you last read it.
--   
--   <a>$sel:layerName:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_layerName</a> - The name or Amazon
--   Resource Name (ARN) of the layer.
--   
--   <a>$sel:versionNumber:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_versionNumber</a> - The version
--   number.
--   
--   <a>$sel:statementId:RemoveLayerVersionPermission'</a>,
--   <a>removeLayerVersionPermission_statementId</a> - The identifier that
--   was specified when the statement was added.
newRemoveLayerVersionPermission :: Text -> Integer -> Text -> RemoveLayerVersionPermission

-- | <i>See:</i> <a>newRemoveLayerVersionPermissionResponse</a> smart
--   constructor.
data RemoveLayerVersionPermissionResponse
RemoveLayerVersionPermissionResponse' :: RemoveLayerVersionPermissionResponse

-- | Create a value of <a>RemoveLayerVersionPermissionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemoveLayerVersionPermissionResponse :: RemoveLayerVersionPermissionResponse

-- | <i>See:</i> <a>newListFunctionsByCodeSigningConfig</a> smart
--   constructor.
data ListFunctionsByCodeSigningConfig
ListFunctionsByCodeSigningConfig' :: Maybe Text -> Maybe Natural -> Text -> ListFunctionsByCodeSigningConfig

-- | Create a value of <a>ListFunctionsByCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListFunctionsByCodeSigningConfig'</a>,
--   <a>listFunctionsByCodeSigningConfig_marker</a> - Specify the
--   pagination token that's returned by a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxItems:ListFunctionsByCodeSigningConfig'</a>,
--   <a>listFunctionsByCodeSigningConfig_maxItems</a> - Maximum number of
--   items to return.
--   
--   <a>$sel:codeSigningConfigArn:ListFunctionsByCodeSigningConfig'</a>,
--   <a>listFunctionsByCodeSigningConfig_codeSigningConfigArn</a> - The The
--   Amazon Resource Name (ARN) of the code signing configuration.
newListFunctionsByCodeSigningConfig :: Text -> ListFunctionsByCodeSigningConfig

-- | <i>See:</i> <a>newListFunctionsByCodeSigningConfigResponse</a> smart
--   constructor.
data ListFunctionsByCodeSigningConfigResponse
ListFunctionsByCodeSigningConfigResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListFunctionsByCodeSigningConfigResponse

-- | Create a value of <a>ListFunctionsByCodeSigningConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArns:ListFunctionsByCodeSigningConfigResponse'</a>,
--   <a>listFunctionsByCodeSigningConfigResponse_functionArns</a> - The
--   function ARNs.
--   
--   <a>$sel:nextMarker:ListFunctionsByCodeSigningConfigResponse'</a>,
--   <a>listFunctionsByCodeSigningConfigResponse_nextMarker</a> - The
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListFunctionsByCodeSigningConfigResponse'</a>,
--   <a>listFunctionsByCodeSigningConfigResponse_httpStatus</a> - The
--   response's http status code.
newListFunctionsByCodeSigningConfigResponse :: Int -> ListFunctionsByCodeSigningConfigResponse

-- | <i>See:</i> <a>newGetFunction</a> smart constructor.
data GetFunction
GetFunction' :: Maybe Text -> Text -> GetFunction

-- | Create a value of <a>GetFunction</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetFunction'</a>, <a>getFunction_qualifier</a> -
--   Specify a version or alias to get details about a published version of
--   the function.
--   
--   <a>$sel:functionName:GetFunction'</a>, <a>getFunction_functionName</a>
--   - The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetFunction :: Text -> GetFunction

-- | <i>See:</i> <a>newGetFunctionResponse</a> smart constructor.
data GetFunctionResponse
GetFunctionResponse' :: Maybe Concurrency -> Maybe FunctionCodeLocation -> Maybe FunctionConfiguration -> Maybe (HashMap Text Text) -> Int -> GetFunctionResponse

-- | Create a value of <a>GetFunctionResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrency:GetFunctionResponse'</a>,
--   <a>getFunctionResponse_concurrency</a> - The function's <a>reserved
--   concurrency</a>.
--   
--   <a>$sel:code:GetFunctionResponse'</a>, <a>getFunctionResponse_code</a>
--   - The deployment package of the function or version.
--   
--   <a>$sel:configuration:GetFunctionResponse'</a>,
--   <a>getFunctionResponse_configuration</a> - The configuration of the
--   function or version.
--   
--   <a>$sel:tags:GetFunctionResponse'</a>, <a>getFunctionResponse_tags</a>
--   - The function's <a>tags</a>.
--   
--   <a>$sel:httpStatus:GetFunctionResponse'</a>,
--   <a>getFunctionResponse_httpStatus</a> - The response's http status
--   code.
newGetFunctionResponse :: Int -> GetFunctionResponse

-- | <i>See:</i> <a>newListEventSourceMappings</a> smart constructor.
data ListEventSourceMappings
ListEventSourceMappings' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListEventSourceMappings

-- | Create a value of <a>ListEventSourceMappings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_eventSourceArn</a> - The Amazon Resource
--   Name (ARN) of the event source.
--   
--   <ul>
--   <li><b>Amazon Kinesis</b> - The ARN of the data stream or a stream
--   consumer.</li>
--   <li><b>Amazon DynamoDB Streams</b> - The ARN of the stream.</li>
--   <li><b>Amazon Simple Queue Service</b> - The ARN of the queue.</li>
--   <li><b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the
--   cluster.</li>
--   </ul>
--   
--   <a>$sel:marker:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_marker</a> - A pagination token returned by
--   a previous call.
--   
--   <a>$sel:maxItems:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_maxItems</a> - The maximum number of event
--   source mappings to return. Note that ListEventSourceMappings returns a
--   maximum of 100 items in each response, even if you set the number
--   higher.
--   
--   <a>$sel:functionName:ListEventSourceMappings'</a>,
--   <a>listEventSourceMappings_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Version or Alias ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it's limited to 64 characters in length.
newListEventSourceMappings :: ListEventSourceMappings

-- | <i>See:</i> <a>newListEventSourceMappingsResponse</a> smart
--   constructor.
data ListEventSourceMappingsResponse
ListEventSourceMappingsResponse' :: Maybe [EventSourceMappingConfiguration] -> Maybe Text -> Int -> ListEventSourceMappingsResponse

-- | Create a value of <a>ListEventSourceMappingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceMappings:ListEventSourceMappingsResponse'</a>,
--   <a>listEventSourceMappingsResponse_eventSourceMappings</a> - A list of
--   event source mappings.
--   
--   <a>$sel:nextMarker:ListEventSourceMappingsResponse'</a>,
--   <a>listEventSourceMappingsResponse_nextMarker</a> - A pagination token
--   that's returned when the response doesn't contain all event source
--   mappings.
--   
--   <a>$sel:httpStatus:ListEventSourceMappingsResponse'</a>,
--   <a>listEventSourceMappingsResponse_httpStatus</a> - The response's
--   http status code.
newListEventSourceMappingsResponse :: Int -> ListEventSourceMappingsResponse

-- | <i>See:</i> <a>newGetLayerVersionPolicy</a> smart constructor.
data GetLayerVersionPolicy
GetLayerVersionPolicy' :: Text -> Integer -> GetLayerVersionPolicy

-- | Create a value of <a>GetLayerVersionPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:GetLayerVersionPolicy'</a>,
--   <a>getLayerVersionPolicy_layerName</a> - The name or Amazon Resource
--   Name (ARN) of the layer.
--   
--   <a>$sel:versionNumber:GetLayerVersionPolicy'</a>,
--   <a>getLayerVersionPolicy_versionNumber</a> - The version number.
newGetLayerVersionPolicy :: Text -> Integer -> GetLayerVersionPolicy

-- | <i>See:</i> <a>newGetLayerVersionPolicyResponse</a> smart constructor.
data GetLayerVersionPolicyResponse
GetLayerVersionPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetLayerVersionPolicyResponse

-- | Create a value of <a>GetLayerVersionPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetLayerVersionPolicyResponse'</a>,
--   <a>getLayerVersionPolicyResponse_policy</a> - The policy document.
--   
--   <a>$sel:revisionId:GetLayerVersionPolicyResponse'</a>,
--   <a>getLayerVersionPolicyResponse_revisionId</a> - A unique identifier
--   for the current revision of the policy.
--   
--   <a>$sel:httpStatus:GetLayerVersionPolicyResponse'</a>,
--   <a>getLayerVersionPolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetLayerVersionPolicyResponse :: Int -> GetLayerVersionPolicyResponse

-- | <i>See:</i> <a>newDeleteAlias</a> smart constructor.
data DeleteAlias
DeleteAlias' :: Text -> Text -> DeleteAlias

-- | Create a value of <a>DeleteAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteAlias'</a>, <a>deleteAlias_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:DeleteAlias'</a>, <a>deleteAlias_name</a> - The name of
--   the alias.
newDeleteAlias :: Text -> Text -> DeleteAlias

-- | <i>See:</i> <a>newDeleteAliasResponse</a> smart constructor.
data DeleteAliasResponse
DeleteAliasResponse' :: DeleteAliasResponse

-- | Create a value of <a>DeleteAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAliasResponse :: DeleteAliasResponse

-- | <i>See:</i> <a>newUpdateAlias</a> smart constructor.
data UpdateAlias
UpdateAlias' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateAlias

-- | Create a value of <a>UpdateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:UpdateAlias'</a>,
--   <a>updateAlias_routingConfig</a> - The <a>routing configuration</a> of
--   the alias.
--   
--   <a>$sel:functionVersion:UpdateAlias'</a>,
--   <a>updateAlias_functionVersion</a> - The function version that the
--   alias invokes.
--   
--   <a>$sel:description:UpdateAlias'</a>, <a>updateAlias_description</a> -
--   A description of the alias.
--   
--   <a>$sel:revisionId:UpdateAlias'</a>, <a>updateAlias_revisionId</a> -
--   Only update the alias if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying an alias that has
--   changed since you last read it.
--   
--   <a>$sel:functionName:UpdateAlias'</a>, <a>updateAlias_functionName</a>
--   - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:name:UpdateAlias'</a>, <a>updateAlias_name</a> - The name of
--   the alias.
newUpdateAlias :: Text -> Text -> UpdateAlias

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | <i>See:</i> <a>newGetAccountSettings</a> smart constructor.
data GetAccountSettings
GetAccountSettings' :: GetAccountSettings

-- | Create a value of <a>GetAccountSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccountSettings :: GetAccountSettings

-- | <i>See:</i> <a>newGetAccountSettingsResponse</a> smart constructor.
data GetAccountSettingsResponse
GetAccountSettingsResponse' :: Maybe AccountLimit -> Maybe AccountUsage -> Int -> GetAccountSettingsResponse

-- | Create a value of <a>GetAccountSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountLimit:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_accountLimit</a> - Limits that are
--   related to concurrency and code storage.
--   
--   <a>$sel:accountUsage:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_accountUsage</a> - The number of
--   functions and amount of storage in use.
--   
--   <a>$sel:httpStatus:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_httpStatus</a> - The response's http
--   status code.
newGetAccountSettingsResponse :: Int -> GetAccountSettingsResponse

-- | <i>See:</i> <a>newGetFunctionEventInvokeConfig</a> smart constructor.
data GetFunctionEventInvokeConfig
GetFunctionEventInvokeConfig' :: Maybe Text -> Text -> GetFunctionEventInvokeConfig

-- | Create a value of <a>GetFunctionEventInvokeConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetFunctionEventInvokeConfig'</a>,
--   <a>getFunctionEventInvokeConfig_qualifier</a> - A version number or
--   alias name.
--   
--   <a>$sel:functionName:GetFunctionEventInvokeConfig'</a>,
--   <a>getFunctionEventInvokeConfig_functionName</a> - The name of the
--   Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetFunctionEventInvokeConfig :: Text -> GetFunctionEventInvokeConfig

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | <i>See:</i> <a>newGetCodeSigningConfig</a> smart constructor.
data GetCodeSigningConfig
GetCodeSigningConfig' :: Text -> GetCodeSigningConfig

-- | Create a value of <a>GetCodeSigningConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigArn:GetCodeSigningConfig'</a>,
--   <a>getCodeSigningConfig_codeSigningConfigArn</a> - The The Amazon
--   Resource Name (ARN) of the code signing configuration.
newGetCodeSigningConfig :: Text -> GetCodeSigningConfig

-- | <i>See:</i> <a>newGetCodeSigningConfigResponse</a> smart constructor.
data GetCodeSigningConfigResponse
GetCodeSigningConfigResponse' :: Int -> CodeSigningConfig -> GetCodeSigningConfigResponse

-- | Create a value of <a>GetCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetCodeSigningConfigResponse'</a>,
--   <a>getCodeSigningConfigResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:codeSigningConfig:GetCodeSigningConfigResponse'</a>,
--   <a>getCodeSigningConfigResponse_codeSigningConfig</a> - The code
--   signing configuration
newGetCodeSigningConfigResponse :: Int -> CodeSigningConfig -> GetCodeSigningConfigResponse

-- | <i>See:</i> <a>newAddPermission</a> smart constructor.
data AddPermission
AddPermission' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> Text -> AddPermission

-- | Create a value of <a>AddPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceAccount:AddPermission'</a>,
--   <a>addPermission_sourceAccount</a> - For Amazon S3, the ID of the
--   account that owns the resource. Use this together with
--   <tt>SourceArn</tt> to ensure that the resource is owned by the
--   specified account. It is possible for an Amazon S3 bucket to be
--   deleted by its owner and recreated by another account.
--   
--   <a>$sel:eventSourceToken:AddPermission'</a>,
--   <a>addPermission_eventSourceToken</a> - For Alexa Smart Home
--   functions, a token that must be supplied by the invoker.
--   
--   <a>$sel:sourceArn:AddPermission'</a>, <a>addPermission_sourceArn</a> -
--   For Amazon Web Services services, the ARN of the Amazon Web Services
--   resource that invokes the function. For example, an Amazon S3 bucket
--   or Amazon SNS topic.
--   
--   Note that Lambda configures the comparison using the
--   <tt>StringLike</tt> operator.
--   
--   <a>$sel:qualifier:AddPermission'</a>, <a>addPermission_qualifier</a> -
--   Specify a version or alias to add permissions to a published version
--   of the function.
--   
--   <a>$sel:revisionId:AddPermission'</a>, <a>addPermission_revisionId</a>
--   - Only update the policy if the revision ID matches the ID that's
--   specified. Use this option to avoid modifying a policy that has
--   changed since you last read it.
--   
--   <a>$sel:functionName:AddPermission'</a>,
--   <a>addPermission_functionName</a> - The name of the Lambda function,
--   version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:statementId:AddPermission'</a>,
--   <a>addPermission_statementId</a> - A statement identifier that
--   differentiates the statement from others in the same policy.
--   
--   <a>$sel:action:AddPermission'</a>, <a>addPermission_action</a> - The
--   action that the principal can use on the function. For example,
--   <tt>lambda:InvokeFunction</tt> or <tt>lambda:GetFunction</tt>.
--   
--   <a>$sel:principal:AddPermission'</a>, <a>addPermission_principal</a> -
--   The Amazon Web Services service or account that invokes the function.
--   If you specify a service, use <tt>SourceArn</tt> or
--   <tt>SourceAccount</tt> to limit who can invoke the function through
--   that service.
newAddPermission :: Text -> Text -> Text -> Text -> AddPermission

-- | <i>See:</i> <a>newAddPermissionResponse</a> smart constructor.
data AddPermissionResponse
AddPermissionResponse' :: Maybe Text -> Int -> AddPermissionResponse

-- | Create a value of <a>AddPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statement:AddPermissionResponse'</a>,
--   <a>addPermissionResponse_statement</a> - The permission statement
--   that's added to the function policy.
--   
--   <a>$sel:httpStatus:AddPermissionResponse'</a>,
--   <a>addPermissionResponse_httpStatus</a> - The response's http status
--   code.
newAddPermissionResponse :: Int -> AddPermissionResponse

-- | <i>See:</i> <a>newListLayers</a> smart constructor.
data ListLayers
ListLayers' :: Maybe Runtime -> Maybe Text -> Maybe Natural -> Maybe Architecture -> ListLayers

-- | Create a value of <a>ListLayers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compatibleRuntime:ListLayers'</a>,
--   <a>listLayers_compatibleRuntime</a> - A runtime identifier. For
--   example, <tt>go1.x</tt>.
--   
--   <a>$sel:marker:ListLayers'</a>, <a>listLayers_marker</a> - A
--   pagination token returned by a previous call.
--   
--   <a>$sel:maxItems:ListLayers'</a>, <a>listLayers_maxItems</a> - The
--   maximum number of layers to return.
--   
--   <a>$sel:compatibleArchitecture:ListLayers'</a>,
--   <a>listLayers_compatibleArchitecture</a> - The compatible
--   <a>instruction set architecture</a>.
newListLayers :: ListLayers

-- | <i>See:</i> <a>newListLayersResponse</a> smart constructor.
data ListLayersResponse
ListLayersResponse' :: Maybe Text -> Maybe [LayersListItem] -> Int -> ListLayersResponse

-- | Create a value of <a>ListLayersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListLayersResponse'</a>,
--   <a>listLayersResponse_nextMarker</a> - A pagination token returned
--   when the response doesn't contain all layers.
--   
--   <a>$sel:layers:ListLayersResponse'</a>,
--   <a>listLayersResponse_layers</a> - A list of function layers.
--   
--   <a>$sel:httpStatus:ListLayersResponse'</a>,
--   <a>listLayersResponse_httpStatus</a> - The response's http status
--   code.
newListLayersResponse :: Int -> ListLayersResponse

-- | <i>See:</i> <a>newListFunctionEventInvokeConfigs</a> smart
--   constructor.
data ListFunctionEventInvokeConfigs
ListFunctionEventInvokeConfigs' :: Maybe Text -> Maybe Natural -> Text -> ListFunctionEventInvokeConfigs

-- | Create a value of <a>ListFunctionEventInvokeConfigs</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListFunctionEventInvokeConfigs'</a>,
--   <a>listFunctionEventInvokeConfigs_marker</a> - Specify the pagination
--   token that's returned by a previous request to retrieve the next page
--   of results.
--   
--   <a>$sel:maxItems:ListFunctionEventInvokeConfigs'</a>,
--   <a>listFunctionEventInvokeConfigs_maxItems</a> - The maximum number of
--   configurations to return.
--   
--   <a>$sel:functionName:ListFunctionEventInvokeConfigs'</a>,
--   <a>listFunctionEventInvokeConfigs_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newListFunctionEventInvokeConfigs :: Text -> ListFunctionEventInvokeConfigs

-- | <i>See:</i> <a>newListFunctionEventInvokeConfigsResponse</a> smart
--   constructor.
data ListFunctionEventInvokeConfigsResponse
ListFunctionEventInvokeConfigsResponse' :: Maybe [FunctionEventInvokeConfig] -> Maybe Text -> Int -> ListFunctionEventInvokeConfigsResponse

-- | Create a value of <a>ListFunctionEventInvokeConfigsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:functionEventInvokeConfigs:ListFunctionEventInvokeConfigsResponse'</a>,
--   <a>listFunctionEventInvokeConfigsResponse_functionEventInvokeConfigs</a>
--   - A list of configurations.
--   
--   <a>$sel:nextMarker:ListFunctionEventInvokeConfigsResponse'</a>,
--   <a>listFunctionEventInvokeConfigsResponse_nextMarker</a> - The
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListFunctionEventInvokeConfigsResponse'</a>,
--   <a>listFunctionEventInvokeConfigsResponse_httpStatus</a> - The
--   response's http status code.
newListFunctionEventInvokeConfigsResponse :: Int -> ListFunctionEventInvokeConfigsResponse

-- | <i>See:</i> <a>newListCodeSigningConfigs</a> smart constructor.
data ListCodeSigningConfigs
ListCodeSigningConfigs' :: Maybe Text -> Maybe Natural -> ListCodeSigningConfigs

-- | Create a value of <a>ListCodeSigningConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListCodeSigningConfigs'</a>,
--   <a>listCodeSigningConfigs_marker</a> - Specify the pagination token
--   that's returned by a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxItems:ListCodeSigningConfigs'</a>,
--   <a>listCodeSigningConfigs_maxItems</a> - Maximum number of items to
--   return.
newListCodeSigningConfigs :: ListCodeSigningConfigs

-- | <i>See:</i> <a>newListCodeSigningConfigsResponse</a> smart
--   constructor.
data ListCodeSigningConfigsResponse
ListCodeSigningConfigsResponse' :: Maybe [CodeSigningConfig] -> Maybe Text -> Int -> ListCodeSigningConfigsResponse

-- | Create a value of <a>ListCodeSigningConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningConfigs:ListCodeSigningConfigsResponse'</a>,
--   <a>listCodeSigningConfigsResponse_codeSigningConfigs</a> - The code
--   signing configurations
--   
--   <a>$sel:nextMarker:ListCodeSigningConfigsResponse'</a>,
--   <a>listCodeSigningConfigsResponse_nextMarker</a> - The pagination
--   token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListCodeSigningConfigsResponse'</a>,
--   <a>listCodeSigningConfigsResponse_httpStatus</a> - The response's http
--   status code.
newListCodeSigningConfigsResponse :: Int -> ListCodeSigningConfigsResponse

-- | <i>See:</i> <a>newGetFunctionCodeSigningConfig</a> smart constructor.
data GetFunctionCodeSigningConfig
GetFunctionCodeSigningConfig' :: Text -> GetFunctionCodeSigningConfig

-- | Create a value of <a>GetFunctionCodeSigningConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:GetFunctionCodeSigningConfig'</a>,
--   <a>getFunctionCodeSigningConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newGetFunctionCodeSigningConfig :: Text -> GetFunctionCodeSigningConfig

-- | <i>See:</i> <a>newGetFunctionCodeSigningConfigResponse</a> smart
--   constructor.
data GetFunctionCodeSigningConfigResponse
GetFunctionCodeSigningConfigResponse' :: Int -> Text -> Text -> GetFunctionCodeSigningConfigResponse

-- | Create a value of <a>GetFunctionCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetFunctionCodeSigningConfigResponse'</a>,
--   <a>getFunctionCodeSigningConfigResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:codeSigningConfigArn:GetFunctionCodeSigningConfigResponse'</a>,
--   <a>getFunctionCodeSigningConfigResponse_codeSigningConfigArn</a> - The
--   The Amazon Resource Name (ARN) of the code signing configuration.
--   
--   <a>$sel:functionName:GetFunctionCodeSigningConfig'</a>,
--   <a>getFunctionCodeSigningConfigResponse_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newGetFunctionCodeSigningConfigResponse :: Int -> Text -> Text -> GetFunctionCodeSigningConfigResponse

-- | <i>See:</i> <a>newCreateCodeSigningConfig</a> smart constructor.
data CreateCodeSigningConfig
CreateCodeSigningConfig' :: Maybe CodeSigningPolicies -> Maybe Text -> AllowedPublishers -> CreateCodeSigningConfig

-- | Create a value of <a>CreateCodeSigningConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSigningPolicies:CreateCodeSigningConfig'</a>,
--   <a>createCodeSigningConfig_codeSigningPolicies</a> - The code signing
--   policies define the actions to take if the validation checks fail.
--   
--   <a>$sel:description:CreateCodeSigningConfig'</a>,
--   <a>createCodeSigningConfig_description</a> - Descriptive name for this
--   code signing configuration.
--   
--   <a>$sel:allowedPublishers:CreateCodeSigningConfig'</a>,
--   <a>createCodeSigningConfig_allowedPublishers</a> - Signing profiles
--   for this code signing configuration.
newCreateCodeSigningConfig :: AllowedPublishers -> CreateCodeSigningConfig

-- | <i>See:</i> <a>newCreateCodeSigningConfigResponse</a> smart
--   constructor.
data CreateCodeSigningConfigResponse
CreateCodeSigningConfigResponse' :: Int -> CodeSigningConfig -> CreateCodeSigningConfigResponse

-- | Create a value of <a>CreateCodeSigningConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateCodeSigningConfigResponse'</a>,
--   <a>createCodeSigningConfigResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:codeSigningConfig:CreateCodeSigningConfigResponse'</a>,
--   <a>createCodeSigningConfigResponse_codeSigningConfig</a> - The code
--   signing configuration.
newCreateCodeSigningConfigResponse :: Int -> CodeSigningConfig -> CreateCodeSigningConfigResponse

-- | <i>See:</i> <a>newListLayerVersions</a> smart constructor.
data ListLayerVersions
ListLayerVersions' :: Maybe Runtime -> Maybe Text -> Maybe Natural -> Maybe Architecture -> Text -> ListLayerVersions

-- | Create a value of <a>ListLayerVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compatibleRuntime:ListLayerVersions'</a>,
--   <a>listLayerVersions_compatibleRuntime</a> - A runtime identifier. For
--   example, <tt>go1.x</tt>.
--   
--   <a>$sel:marker:ListLayerVersions'</a>, <a>listLayerVersions_marker</a>
--   - A pagination token returned by a previous call.
--   
--   <a>$sel:maxItems:ListLayerVersions'</a>,
--   <a>listLayerVersions_maxItems</a> - The maximum number of versions to
--   return.
--   
--   <a>$sel:compatibleArchitecture:ListLayerVersions'</a>,
--   <a>listLayerVersions_compatibleArchitecture</a> - The compatible
--   <a>instruction set architecture</a>.
--   
--   <a>$sel:layerName:ListLayerVersions'</a>,
--   <a>listLayerVersions_layerName</a> - The name or Amazon Resource Name
--   (ARN) of the layer.
newListLayerVersions :: Text -> ListLayerVersions

-- | <i>See:</i> <a>newListLayerVersionsResponse</a> smart constructor.
data ListLayerVersionsResponse
ListLayerVersionsResponse' :: Maybe [LayerVersionsListItem] -> Maybe Text -> Int -> ListLayerVersionsResponse

-- | Create a value of <a>ListLayerVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersions:ListLayerVersionsResponse'</a>,
--   <a>listLayerVersionsResponse_layerVersions</a> - A list of versions.
--   
--   <a>$sel:nextMarker:ListLayerVersionsResponse'</a>,
--   <a>listLayerVersionsResponse_nextMarker</a> - A pagination token
--   returned when the response doesn't contain all versions.
--   
--   <a>$sel:httpStatus:ListLayerVersionsResponse'</a>,
--   <a>listLayerVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListLayerVersionsResponse :: Int -> ListLayerVersionsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:TagResource'</a>, <a>tagResource_resource</a> - The
--   function's Amazon Resource Name (ARN).
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags to apply to the function.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newPublishVersion</a> smart constructor.
data PublishVersion
PublishVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> PublishVersion

-- | Create a value of <a>PublishVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeSha256:PublishVersion'</a>,
--   <a>publishVersion_codeSha256</a> - Only publish a version if the hash
--   value matches the value that's specified. Use this option to avoid
--   publishing a version if the function code has changed since you last
--   updated it. You can get the hash for the version that you uploaded
--   from the output of UpdateFunctionCode.
--   
--   <a>$sel:description:PublishVersion'</a>,
--   <a>publishVersion_description</a> - A description for the version to
--   override the description in the function configuration.
--   
--   <a>$sel:revisionId:PublishVersion'</a>,
--   <a>publishVersion_revisionId</a> - Only update the function if the
--   revision ID matches the ID that's specified. Use this option to avoid
--   publishing a version if the function configuration has changed since
--   you last updated it.
--   
--   <a>$sel:functionName:PublishVersion'</a>,
--   <a>publishVersion_functionName</a> - The name of the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>MyFunction</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:MyFunction</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newPublishVersion :: Text -> PublishVersion

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Text -> ListTags

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:ListTags'</a>, <a>listTags_resource</a> - The
--   function's Amazon Resource Name (ARN). Note: Lambda does not support
--   adding tags to aliases or versions.
newListTags :: Text -> ListTags

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsResponse

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsResponse'</a>, <a>listTagsResponse_tags</a> - The
--   function's tags.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | <i>See:</i> <a>newDeleteFunction</a> smart constructor.
data DeleteFunction
DeleteFunction' :: Maybe Text -> Text -> DeleteFunction

-- | Create a value of <a>DeleteFunction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:DeleteFunction'</a>, <a>deleteFunction_qualifier</a>
--   - Specify a version to delete. You can't delete a version that's
--   referenced by an alias.
--   
--   <a>$sel:functionName:DeleteFunction'</a>,
--   <a>deleteFunction_functionName</a> - The name of the Lambda function
--   or version.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:1</tt> (with version).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newDeleteFunction :: Text -> DeleteFunction

-- | <i>See:</i> <a>newDeleteFunctionResponse</a> smart constructor.
data DeleteFunctionResponse
DeleteFunctionResponse' :: DeleteFunctionResponse

-- | Create a value of <a>DeleteFunctionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFunctionResponse :: DeleteFunctionResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:UntagResource'</a>, <a>untagResource_resource</a> -
--   The function's Amazon Resource Name (ARN).
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys to remove from the function.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newUpdateFunctionConfiguration</a> smart constructor.
data UpdateFunctionConfiguration
UpdateFunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe Text -> Maybe [FileSystemConfig] -> Maybe Environment -> Maybe ImageConfig -> Maybe DeadLetterConfig -> Maybe Text -> Maybe VpcConfig -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe TracingConfig -> Maybe Text -> Maybe Text -> Text -> UpdateFunctionConfiguration

-- | Create a value of <a>UpdateFunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_memorySize</a> - The amount of
--   <a>memory available to the function</a> at runtime. Increasing the
--   function memory also increases its CPU allocation. The default value
--   is 128 MB. The value can be any multiple of 1 MB.
--   
--   <a>$sel:runtime:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_runtime</a> - The identifier of the
--   function's <a>runtime</a>.
--   
--   <a>$sel:kmsKeyArn:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_kmsKeyArn</a> - The ARN of the Amazon
--   Web Services Key Management Service (KMS) key that's used to encrypt
--   your function's environment variables. If it's not provided, Lambda
--   uses a default service key.
--   
--   <a>$sel:fileSystemConfigs:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_fileSystemConfigs</a> - Connection
--   settings for an Amazon EFS file system.
--   
--   <a>$sel:environment:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_environment</a> - Environment variables
--   that are accessible from function code during execution.
--   
--   <a>$sel:imageConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_imageConfig</a> - <a>Container image
--   configuration values</a> that override the values in the container
--   image Docker file.
--   
--   <a>$sel:deadLetterConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_deadLetterConfig</a> - A dead letter
--   queue configuration that specifies the queue or topic where Lambda
--   sends asynchronous events when they fail processing. For more
--   information, see <a>Dead Letter Queues</a>.
--   
--   <a>$sel:role':UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_role</a> - The Amazon Resource Name
--   (ARN) of the function's execution role.
--   
--   <a>$sel:vpcConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_vpcConfig</a> - For network
--   connectivity to Amazon Web Services resources in a VPC, specify a list
--   of security groups and subnets in the VPC. When you connect a function
--   to a VPC, it can only access resources and the internet through that
--   VPC. For more information, see <a>VPC Settings</a>.
--   
--   <a>$sel:layers:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_layers</a> - A list of <a>function
--   layers</a> to add to the function's execution environment. Specify
--   each layer by its ARN, including the version.
--   
--   <a>$sel:handler:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_handler</a> - The name of the method
--   within your code that Lambda calls to execute your function. The
--   format includes the file name. It can also include namespaces and
--   other qualifiers, depending on the runtime. For more information, see
--   <a>Programming Model</a>.
--   
--   <a>$sel:timeout:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_timeout</a> - The amount of time that
--   Lambda allows a function to run before stopping it. The default is 3
--   seconds. The maximum allowed value is 900 seconds. For additional
--   information, see <a>Lambda execution environment</a>.
--   
--   <a>$sel:tracingConfig:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_tracingConfig</a> - Set <tt>Mode</tt>
--   to <tt>Active</tt> to sample and trace a subset of incoming requests
--   with <a>X-Ray</a>.
--   
--   <a>$sel:description:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_description</a> - A description of the
--   function.
--   
--   <a>$sel:revisionId:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_revisionId</a> - Only update the
--   function if the revision ID matches the ID that's specified. Use this
--   option to avoid modifying a function that has changed since you last
--   read it.
--   
--   <a>$sel:functionName:UpdateFunctionConfiguration'</a>,
--   <a>updateFunctionConfiguration_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newUpdateFunctionConfiguration :: Text -> UpdateFunctionConfiguration

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | <i>See:</i> <a>newListFunctions</a> smart constructor.
data ListFunctions
ListFunctions' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe FunctionVersion -> ListFunctions

-- | Create a value of <a>ListFunctions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:masterRegion:ListFunctions'</a>,
--   <a>listFunctions_masterRegion</a> - For Lambda@Edge functions, the
--   Amazon Web Services Region of the master function. For example,
--   <tt>us-east-1</tt> filters the list of functions to only include
--   Lambda@Edge functions replicated from a master function in US East (N.
--   Virginia). If specified, you must set <tt>FunctionVersion</tt> to
--   <tt>ALL</tt>.
--   
--   <a>$sel:marker:ListFunctions'</a>, <a>listFunctions_marker</a> -
--   Specify the pagination token that's returned by a previous request to
--   retrieve the next page of results.
--   
--   <a>$sel:maxItems:ListFunctions'</a>, <a>listFunctions_maxItems</a> -
--   The maximum number of functions to return in the response. Note that
--   <tt>ListFunctions</tt> returns a maximum of 50 items in each response,
--   even if you set the number higher.
--   
--   <a>$sel:functionVersion:ListFunctions'</a>,
--   <a>listFunctions_functionVersion</a> - Set to <tt>ALL</tt> to include
--   entries for all published versions of each function.
newListFunctions :: ListFunctions

-- | A list of Lambda functions.
--   
--   <i>See:</i> <a>newListFunctionsResponse</a> smart constructor.
data ListFunctionsResponse
ListFunctionsResponse' :: Maybe Text -> Maybe [FunctionConfiguration] -> Int -> ListFunctionsResponse

-- | Create a value of <a>ListFunctionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListFunctionsResponse'</a>,
--   <a>listFunctionsResponse_nextMarker</a> - The pagination token that's
--   included if more results are available.
--   
--   <a>$sel:functions:ListFunctionsResponse'</a>,
--   <a>listFunctionsResponse_functions</a> - A list of Lambda functions.
--   
--   <a>$sel:httpStatus:ListFunctionsResponse'</a>,
--   <a>listFunctionsResponse_httpStatus</a> - The response's http status
--   code.
newListFunctionsResponse :: Int -> ListFunctionsResponse

-- | <i>See:</i> <a>newUpdateFunctionCode</a> smart constructor.
data UpdateFunctionCode
UpdateFunctionCode' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Text -> UpdateFunctionCode

-- | Create a value of <a>UpdateFunctionCode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_s3ObjectVersion</a> - For versioned objects, the
--   version of the deployment package object to use.
--   
--   <a>$sel:s3Key:UpdateFunctionCode'</a>, <a>updateFunctionCode_s3Key</a>
--   - The Amazon S3 key of the deployment package.
--   
--   <a>$sel:zipFile:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_zipFile</a> - The base64-encoded contents of the
--   deployment package. Amazon Web Services SDK and Amazon Web Services
--   CLI clients handle the encoding for you.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:architectures:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_architectures</a> - The instruction set
--   architecture that the function supports. Enter a string array with one
--   of the valid values. The default value is <tt>x86_64</tt>.
--   
--   <a>$sel:imageUri:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_imageUri</a> - URI of a container image in the
--   Amazon ECR registry.
--   
--   <a>$sel:s3Bucket:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_s3Bucket</a> - An Amazon S3 bucket in the same
--   Amazon Web Services Region as your function. The bucket can be in a
--   different Amazon Web Services account.
--   
--   <a>$sel:dryRun:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_dryRun</a> - Set to true to validate the request
--   parameters and access permissions without modifying the function code.
--   
--   <a>$sel:revisionId:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_revisionId</a> - Only update the function if the
--   revision ID matches the ID that's specified. Use this option to avoid
--   modifying a function that has changed since you last read it.
--   
--   <a>$sel:publish:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_publish</a> - Set to true to publish a new
--   version of the function after updating the code. This has the same
--   effect as calling PublishVersion separately.
--   
--   <a>$sel:functionName:UpdateFunctionCode'</a>,
--   <a>updateFunctionCode_functionName</a> - The name of the Lambda
--   function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
newUpdateFunctionCode :: Text -> UpdateFunctionCode

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | <i>See:</i> <a>newDeleteProvisionedConcurrencyConfig</a> smart
--   constructor.
data DeleteProvisionedConcurrencyConfig
DeleteProvisionedConcurrencyConfig' :: Text -> Text -> DeleteProvisionedConcurrencyConfig

-- | Create a value of <a>DeleteProvisionedConcurrencyConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:DeleteProvisionedConcurrencyConfig'</a>,
--   <a>deleteProvisionedConcurrencyConfig_functionName</a> - The name of
--   the Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:qualifier:DeleteProvisionedConcurrencyConfig'</a>,
--   <a>deleteProvisionedConcurrencyConfig_qualifier</a> - The version
--   number or alias name.
newDeleteProvisionedConcurrencyConfig :: Text -> Text -> DeleteProvisionedConcurrencyConfig

-- | <i>See:</i> <a>newDeleteProvisionedConcurrencyConfigResponse</a> smart
--   constructor.
data DeleteProvisionedConcurrencyConfigResponse
DeleteProvisionedConcurrencyConfigResponse' :: DeleteProvisionedConcurrencyConfigResponse

-- | Create a value of <a>DeleteProvisionedConcurrencyConfigResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteProvisionedConcurrencyConfigResponse :: DeleteProvisionedConcurrencyConfigResponse

-- | <i>See:</i> <a>newGetPolicy</a> smart constructor.
data GetPolicy
GetPolicy' :: Maybe Text -> Text -> GetPolicy

-- | Create a value of <a>GetPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualifier:GetPolicy'</a>, <a>getPolicy_qualifier</a> - Specify
--   a version or alias to get the policy for that resource.
--   
--   <a>$sel:functionName:GetPolicy'</a>, <a>getPolicy_functionName</a> -
--   The name of the Lambda function, version, or alias.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt> (name-only),
--   <tt>my-function:v1</tt> (with alias).</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   You can append a version number or alias to any of the formats. The
--   length constraint applies only to the full ARN. If you specify only
--   the function name, it is limited to 64 characters in length.
newGetPolicy :: Text -> GetPolicy

-- | <i>See:</i> <a>newGetPolicyResponse</a> smart constructor.
data GetPolicyResponse
GetPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetPolicyResponse

-- | Create a value of <a>GetPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetPolicyResponse'</a>, <a>getPolicyResponse_policy</a>
--   - The resource-based policy.
--   
--   <a>$sel:revisionId:GetPolicyResponse'</a>,
--   <a>getPolicyResponse_revisionId</a> - A unique identifier for the
--   current revision of the policy.
--   
--   <a>$sel:httpStatus:GetPolicyResponse'</a>,
--   <a>getPolicyResponse_httpStatus</a> - The response's http status code.
newGetPolicyResponse :: Int -> GetPolicyResponse

-- | <i>See:</i> <a>newPutProvisionedConcurrencyConfig</a> smart
--   constructor.
data PutProvisionedConcurrencyConfig
PutProvisionedConcurrencyConfig' :: Text -> Text -> Natural -> PutProvisionedConcurrencyConfig

-- | Create a value of <a>PutProvisionedConcurrencyConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionName:PutProvisionedConcurrencyConfig'</a>,
--   <a>putProvisionedConcurrencyConfig_functionName</a> - The name of the
--   Lambda function.
--   
--   <b>Name formats</b>
--   
--   <ul>
--   <li><b>Function name</b> - <tt>my-function</tt>.</li>
--   <li><b>Function ARN</b> -
--   <tt>arn:aws:lambda:us-west-2:123456789012:function:my-function</tt>.</li>
--   <li><b>Partial ARN</b> -
--   <tt>123456789012:function:my-function</tt>.</li>
--   </ul>
--   
--   The length constraint applies only to the full ARN. If you specify
--   only the function name, it is limited to 64 characters in length.
--   
--   <a>$sel:qualifier:PutProvisionedConcurrencyConfig'</a>,
--   <a>putProvisionedConcurrencyConfig_qualifier</a> - The version number
--   or alias name.
--   
--   
--   <a>$sel:provisionedConcurrentExecutions:PutProvisionedConcurrencyConfig'</a>,
--   <a>putProvisionedConcurrencyConfig_provisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency to allocate for the version or
--   alias.
newPutProvisionedConcurrencyConfig :: Text -> Text -> Natural -> PutProvisionedConcurrencyConfig

-- | <i>See:</i> <a>newPutProvisionedConcurrencyConfigResponse</a> smart
--   constructor.
data PutProvisionedConcurrencyConfigResponse
PutProvisionedConcurrencyConfigResponse' :: Maybe ProvisionedConcurrencyStatusEnum -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> Int -> PutProvisionedConcurrencyConfigResponse

-- | Create a value of <a>PutProvisionedConcurrencyConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_status</a> - The status of
--   the allocation process.
--   
--   
--   <a>$sel:requestedProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_requestedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency requested.
--   
--   
--   <a>$sel:availableProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_availableProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency available.
--   
--   <a>$sel:statusReason:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_statusReason</a> - For
--   failed allocations, the reason that provisioned concurrency could not
--   be allocated.
--   
--   
--   <a>$sel:allocatedProvisionedConcurrentExecutions:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_allocatedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency allocated.
--   
--   <a>$sel:lastModified:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_lastModified</a> - The date
--   and time that a user last updated the configuration, in <a>ISO 8601
--   format</a>.
--   
--   <a>$sel:httpStatus:PutProvisionedConcurrencyConfigResponse'</a>,
--   <a>putProvisionedConcurrencyConfigResponse_httpStatus</a> - The
--   response's http status code.
newPutProvisionedConcurrencyConfigResponse :: Int -> PutProvisionedConcurrencyConfigResponse
newtype Architecture
Architecture' :: Text -> Architecture
[fromArchitecture] :: Architecture -> Text
pattern Architecture_Arm64 :: Architecture
pattern Architecture_X86_64 :: Architecture
newtype CodeSigningPolicy
CodeSigningPolicy' :: Text -> CodeSigningPolicy
[fromCodeSigningPolicy] :: CodeSigningPolicy -> Text
pattern CodeSigningPolicy_Enforce :: CodeSigningPolicy
pattern CodeSigningPolicy_Warn :: CodeSigningPolicy
newtype EndPointType
EndPointType' :: Text -> EndPointType
[fromEndPointType] :: EndPointType -> Text
pattern EndPointType_KAFKA_BOOTSTRAP_SERVERS :: EndPointType
newtype EventSourcePosition
EventSourcePosition' :: Text -> EventSourcePosition
[fromEventSourcePosition] :: EventSourcePosition -> Text
pattern EventSourcePosition_AT_TIMESTAMP :: EventSourcePosition
pattern EventSourcePosition_LATEST :: EventSourcePosition
pattern EventSourcePosition_TRIM_HORIZON :: EventSourcePosition
newtype FunctionResponseType
FunctionResponseType' :: Text -> FunctionResponseType
[fromFunctionResponseType] :: FunctionResponseType -> Text
pattern FunctionResponseType_ReportBatchItemFailures :: FunctionResponseType
newtype FunctionVersion
FunctionVersion' :: Text -> FunctionVersion
[fromFunctionVersion] :: FunctionVersion -> Text
pattern FunctionVersion_ALL :: FunctionVersion
newtype InvocationType
InvocationType' :: Text -> InvocationType
[fromInvocationType] :: InvocationType -> Text
pattern InvocationType_DryRun :: InvocationType
pattern InvocationType_Event :: InvocationType
pattern InvocationType_RequestResponse :: InvocationType
newtype LastUpdateStatus
LastUpdateStatus' :: Text -> LastUpdateStatus
[fromLastUpdateStatus] :: LastUpdateStatus -> Text
pattern LastUpdateStatus_Failed :: LastUpdateStatus
pattern LastUpdateStatus_InProgress :: LastUpdateStatus
pattern LastUpdateStatus_Successful :: LastUpdateStatus
newtype LastUpdateStatusReasonCode
LastUpdateStatusReasonCode' :: Text -> LastUpdateStatusReasonCode
[fromLastUpdateStatusReasonCode] :: LastUpdateStatusReasonCode -> Text
pattern LastUpdateStatusReasonCode_EniLimitExceeded :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_ImageAccessDenied :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_ImageDeleted :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InsufficientRolePermissions :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InternalError :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidConfiguration :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidImage :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidSecurityGroup :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_InvalidSubnet :: LastUpdateStatusReasonCode
pattern LastUpdateStatusReasonCode_SubnetOutOfIPAddresses :: LastUpdateStatusReasonCode
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_None :: LogType
pattern LogType_Tail :: LogType
newtype PackageType
PackageType' :: Text -> PackageType
[fromPackageType] :: PackageType -> Text
pattern PackageType_Image :: PackageType
pattern PackageType_Zip :: PackageType
newtype ProvisionedConcurrencyStatusEnum
ProvisionedConcurrencyStatusEnum' :: Text -> ProvisionedConcurrencyStatusEnum
[fromProvisionedConcurrencyStatusEnum] :: ProvisionedConcurrencyStatusEnum -> Text
pattern ProvisionedConcurrencyStatusEnum_FAILED :: ProvisionedConcurrencyStatusEnum
pattern ProvisionedConcurrencyStatusEnum_IN_PROGRESS :: ProvisionedConcurrencyStatusEnum
pattern ProvisionedConcurrencyStatusEnum_READY :: ProvisionedConcurrencyStatusEnum
newtype Runtime
Runtime' :: Text -> Runtime
[fromRuntime] :: Runtime -> Text
pattern Runtime_Dotnetcore1_0 :: Runtime
pattern Runtime_Dotnetcore2_0 :: Runtime
pattern Runtime_Dotnetcore2_1 :: Runtime
pattern Runtime_Dotnetcore3_1 :: Runtime
pattern Runtime_Go1_x :: Runtime
pattern Runtime_Java11 :: Runtime
pattern Runtime_Java8 :: Runtime
pattern Runtime_Java8_al2 :: Runtime
pattern Runtime_Nodejs :: Runtime
pattern Runtime_Nodejs10_x :: Runtime
pattern Runtime_Nodejs12_x :: Runtime
pattern Runtime_Nodejs14_x :: Runtime
pattern Runtime_Nodejs4_3 :: Runtime
pattern Runtime_Nodejs4_3_edge :: Runtime
pattern Runtime_Nodejs6_10 :: Runtime
pattern Runtime_Nodejs8_10 :: Runtime
pattern Runtime_Provided :: Runtime
pattern Runtime_Provided_al2 :: Runtime
pattern Runtime_Python2_7 :: Runtime
pattern Runtime_Python3_6 :: Runtime
pattern Runtime_Python3_7 :: Runtime
pattern Runtime_Python3_8 :: Runtime
pattern Runtime_Python3_9 :: Runtime
pattern Runtime_Ruby2_5 :: Runtime
pattern Runtime_Ruby2_7 :: Runtime
newtype SourceAccessType
SourceAccessType' :: Text -> SourceAccessType
[fromSourceAccessType] :: SourceAccessType -> Text
pattern SourceAccessType_BASIC_AUTH :: SourceAccessType
pattern SourceAccessType_SASL_SCRAM_256_AUTH :: SourceAccessType
pattern SourceAccessType_SASL_SCRAM_512_AUTH :: SourceAccessType
pattern SourceAccessType_VIRTUAL_HOST :: SourceAccessType
pattern SourceAccessType_VPC_SECURITY_GROUP :: SourceAccessType
pattern SourceAccessType_VPC_SUBNET :: SourceAccessType
newtype State
State' :: Text -> State
[fromState] :: State -> Text
pattern State_Active :: State
pattern State_Failed :: State
pattern State_Inactive :: State
pattern State_Pending :: State
newtype StateReasonCode
StateReasonCode' :: Text -> StateReasonCode
[fromStateReasonCode] :: StateReasonCode -> Text
pattern StateReasonCode_Creating :: StateReasonCode
pattern StateReasonCode_EniLimitExceeded :: StateReasonCode
pattern StateReasonCode_Idle :: StateReasonCode
pattern StateReasonCode_ImageAccessDenied :: StateReasonCode
pattern StateReasonCode_ImageDeleted :: StateReasonCode
pattern StateReasonCode_InsufficientRolePermissions :: StateReasonCode
pattern StateReasonCode_InternalError :: StateReasonCode
pattern StateReasonCode_InvalidConfiguration :: StateReasonCode
pattern StateReasonCode_InvalidImage :: StateReasonCode
pattern StateReasonCode_InvalidSecurityGroup :: StateReasonCode
pattern StateReasonCode_InvalidSubnet :: StateReasonCode
pattern StateReasonCode_Restoring :: StateReasonCode
pattern StateReasonCode_SubnetOutOfIPAddresses :: StateReasonCode
newtype TracingMode
TracingMode' :: Text -> TracingMode
[fromTracingMode] :: TracingMode -> Text
pattern TracingMode_Active :: TracingMode
pattern TracingMode_PassThrough :: TracingMode

-- | Limits that are related to concurrency and storage. All file and
--   storage sizes are in bytes.
--   
--   <i>See:</i> <a>newAccountLimit</a> smart constructor.
data AccountLimit
AccountLimit' :: Maybe Int -> Maybe Integer -> Maybe Natural -> Maybe Integer -> Maybe Integer -> AccountLimit

-- | Create a value of <a>AccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentExecutions:AccountLimit'</a>,
--   <a>accountLimit_concurrentExecutions</a> - The maximum number of
--   simultaneous function executions.
--   
--   <a>$sel:totalCodeSize:AccountLimit'</a>,
--   <a>accountLimit_totalCodeSize</a> - The amount of storage space that
--   you can use for all deployment packages and layer archives.
--   
--   <a>$sel:unreservedConcurrentExecutions:AccountLimit'</a>,
--   <a>accountLimit_unreservedConcurrentExecutions</a> - The maximum
--   number of simultaneous function executions, minus the capacity that's
--   reserved for individual functions with PutFunctionConcurrency.
--   
--   <a>$sel:codeSizeUnzipped:AccountLimit'</a>,
--   <a>accountLimit_codeSizeUnzipped</a> - The maximum size of a
--   function's deployment package and layers when they're extracted.
--   
--   <a>$sel:codeSizeZipped:AccountLimit'</a>,
--   <a>accountLimit_codeSizeZipped</a> - The maximum size of a deployment
--   package when it's uploaded directly to Lambda. Use Amazon S3 for
--   larger files.
newAccountLimit :: AccountLimit

-- | The number of functions and amount of storage in use.
--   
--   <i>See:</i> <a>newAccountUsage</a> smart constructor.
data AccountUsage
AccountUsage' :: Maybe Integer -> Maybe Integer -> AccountUsage

-- | Create a value of <a>AccountUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalCodeSize:AccountUsage'</a>,
--   <a>accountUsage_totalCodeSize</a> - The amount of storage space, in
--   bytes, that's being used by deployment packages and layer archives.
--   
--   <a>$sel:functionCount:AccountUsage'</a>,
--   <a>accountUsage_functionCount</a> - The number of Lambda functions.
newAccountUsage :: AccountUsage

-- | Provides configuration information about a Lambda function
--   <a>alias</a>.
--   
--   <i>See:</i> <a>newAliasConfiguration</a> smart constructor.
data AliasConfiguration
AliasConfiguration' :: Maybe AliasRoutingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> AliasConfiguration

-- | Create a value of <a>AliasConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingConfig:AliasConfiguration'</a>,
--   <a>aliasConfiguration_routingConfig</a> - The <a>routing
--   configuration</a> of the alias.
--   
--   <a>$sel:name:AliasConfiguration'</a>, <a>aliasConfiguration_name</a> -
--   The name of the alias.
--   
--   <a>$sel:functionVersion:AliasConfiguration'</a>,
--   <a>aliasConfiguration_functionVersion</a> - The function version that
--   the alias invokes.
--   
--   <a>$sel:aliasArn:AliasConfiguration'</a>,
--   <a>aliasConfiguration_aliasArn</a> - The Amazon Resource Name (ARN) of
--   the alias.
--   
--   <a>$sel:description:AliasConfiguration'</a>,
--   <a>aliasConfiguration_description</a> - A description of the alias.
--   
--   <a>$sel:revisionId:AliasConfiguration'</a>,
--   <a>aliasConfiguration_revisionId</a> - A unique identifier that
--   changes when you update the alias.
newAliasConfiguration :: AliasConfiguration

-- | The <a>traffic-shifting</a> configuration of a Lambda function alias.
--   
--   <i>See:</i> <a>newAliasRoutingConfiguration</a> smart constructor.
data AliasRoutingConfiguration
AliasRoutingConfiguration' :: Maybe (HashMap Text Double) -> AliasRoutingConfiguration

-- | Create a value of <a>AliasRoutingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalVersionWeights:AliasRoutingConfiguration'</a>,
--   <a>aliasRoutingConfiguration_additionalVersionWeights</a> - The second
--   version, and the percentage of traffic that's routed to it.
newAliasRoutingConfiguration :: AliasRoutingConfiguration

-- | List of signing profiles that can sign a code package.
--   
--   <i>See:</i> <a>newAllowedPublishers</a> smart constructor.
data AllowedPublishers
AllowedPublishers' :: NonEmpty Text -> AllowedPublishers

-- | Create a value of <a>AllowedPublishers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArns:AllowedPublishers'</a>,
--   <a>allowedPublishers_signingProfileVersionArns</a> - The Amazon
--   Resource Name (ARN) for each of the signing profiles. A signing
--   profile defines a trusted user who can sign a code package.
newAllowedPublishers :: NonEmpty Text -> AllowedPublishers

-- | Details about a <a>Code signing configuration</a>.
--   
--   <i>See:</i> <a>newCodeSigningConfig</a> smart constructor.
data CodeSigningConfig
CodeSigningConfig' :: Maybe Text -> Text -> Text -> AllowedPublishers -> CodeSigningPolicies -> Text -> CodeSigningConfig

-- | Create a value of <a>CodeSigningConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_description</a> - Code signing configuration
--   description.
--   
--   <a>$sel:codeSigningConfigId:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningConfigId</a> - Unique identifer for
--   the Code signing configuration.
--   
--   <a>$sel:codeSigningConfigArn:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningConfigArn</a> - The Amazon Resource
--   Name (ARN) of the Code signing configuration.
--   
--   <a>$sel:allowedPublishers:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_allowedPublishers</a> - List of allowed
--   publishers.
--   
--   <a>$sel:codeSigningPolicies:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_codeSigningPolicies</a> - The code signing policy
--   controls the validation failure action for signature mismatch or
--   expiry.
--   
--   <a>$sel:lastModified:CodeSigningConfig'</a>,
--   <a>codeSigningConfig_lastModified</a> - The date and time that the
--   Code signing configuration was last modified, in ISO-8601 format
--   (YYYY-MM-DDThh:mm:ss.sTZD).
newCodeSigningConfig :: Text -> Text -> AllowedPublishers -> CodeSigningPolicies -> Text -> CodeSigningConfig

-- | Code signing configuration <a>policies</a> specify the validation
--   failure action for signature mismatch or expiry.
--   
--   <i>See:</i> <a>newCodeSigningPolicies</a> smart constructor.
data CodeSigningPolicies
CodeSigningPolicies' :: Maybe CodeSigningPolicy -> CodeSigningPolicies

-- | Create a value of <a>CodeSigningPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:untrustedArtifactOnDeployment:CodeSigningPolicies'</a>,
--   <a>codeSigningPolicies_untrustedArtifactOnDeployment</a> - Code
--   signing configuration policy for deployment validation failure. If you
--   set the policy to <tt>Enforce</tt>, Lambda blocks the deployment
--   request if signature validation checks fail. If you set the policy to
--   <tt>Warn</tt>, Lambda allows the deployment and creates a CloudWatch
--   log.
--   
--   Default value: <tt>Warn</tt>
newCodeSigningPolicies :: CodeSigningPolicies

-- | <i>See:</i> <a>newConcurrency</a> smart constructor.
data Concurrency
Concurrency' :: Maybe Natural -> Concurrency

-- | Create a value of <a>Concurrency</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservedConcurrentExecutions:Concurrency'</a>,
--   <a>concurrency_reservedConcurrentExecutions</a> - The number of
--   concurrent executions that are reserved for this function. For more
--   information, see <a>Managing Concurrency</a>.
newConcurrency :: Concurrency

-- | The <a>dead-letter queue</a> for failed asynchronous invocations.
--   
--   <i>See:</i> <a>newDeadLetterConfig</a> smart constructor.
data DeadLetterConfig
DeadLetterConfig' :: Maybe Text -> DeadLetterConfig

-- | Create a value of <a>DeadLetterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetArn:DeadLetterConfig'</a>,
--   <a>deadLetterConfig_targetArn</a> - The Amazon Resource Name (ARN) of
--   an Amazon SQS queue or Amazon SNS topic.
newDeadLetterConfig :: DeadLetterConfig

-- | A configuration object that specifies the destination of an event
--   after Lambda processes it.
--   
--   <i>See:</i> <a>newDestinationConfig</a> smart constructor.
data DestinationConfig
DestinationConfig' :: Maybe OnSuccess -> Maybe OnFailure -> DestinationConfig

-- | Create a value of <a>DestinationConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onSuccess:DestinationConfig'</a>,
--   <a>destinationConfig_onSuccess</a> - The destination configuration for
--   successful invocations.
--   
--   <a>$sel:onFailure:DestinationConfig'</a>,
--   <a>destinationConfig_onFailure</a> - The destination configuration for
--   failed invocations.
newDestinationConfig :: DestinationConfig

-- | A function's environment variable settings. You can use environment
--   variables to adjust your function's behavior without updating code. An
--   environment variable is a pair of strings that are stored in a
--   function's version-specific configuration.
--   
--   <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe (Sensitive (HashMap Text (Sensitive Text))) -> Environment

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:Environment'</a>, <a>environment_variables</a> -
--   Environment variable key-value pairs. For more information, see
--   <a>Using Lambda environment variables</a>.
newEnvironment :: Environment

-- | Error messages for environment variables that couldn't be applied.
--   
--   <i>See:</i> <a>newEnvironmentError</a> smart constructor.
data EnvironmentError
EnvironmentError' :: Maybe Text -> Maybe (Sensitive Text) -> EnvironmentError

-- | Create a value of <a>EnvironmentError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:EnvironmentError'</a>,
--   <a>environmentError_errorCode</a> - The error code.
--   
--   <a>$sel:message:EnvironmentError'</a>, <a>environmentError_message</a>
--   - The error message.
newEnvironmentError :: EnvironmentError

-- | The results of an operation to update or read environment variables.
--   If the operation is successful, the response contains the environment
--   variables. If it failed, the response contains details about the
--   error.
--   
--   <i>See:</i> <a>newEnvironmentResponse</a> smart constructor.
data EnvironmentResponse
EnvironmentResponse' :: Maybe (Sensitive (HashMap Text (Sensitive Text))) -> Maybe EnvironmentError -> EnvironmentResponse

-- | Create a value of <a>EnvironmentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:EnvironmentResponse'</a>,
--   <a>environmentResponse_variables</a> - Environment variable key-value
--   pairs.
--   
--   <a>$sel:error:EnvironmentResponse'</a>,
--   <a>environmentResponse_error</a> - Error messages for environment
--   variables that couldn't be applied.
newEnvironmentResponse :: EnvironmentResponse

-- | A mapping between an Amazon Web Services resource and a Lambda
--   function. For details, see CreateEventSourceMapping.
--   
--   <i>See:</i> <a>newEventSourceMappingConfiguration</a> smart
--   constructor.
data EventSourceMappingConfiguration
EventSourceMappingConfiguration' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe [SourceAccessConfiguration] -> Maybe Int -> Maybe [FunctionResponseType] -> Maybe Natural -> Maybe SelfManagedEventSource -> Maybe POSIX -> Maybe DestinationConfig -> Maybe EventSourcePosition -> EventSourceMappingConfiguration

-- | Create a value of <a>EventSourceMappingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_eventSourceArn</a> - The Amazon
--   Resource Name (ARN) of the event source.
--   
--   <a>$sel:state:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_state</a> - The state of the event
--   source mapping. It can be one of the following: <tt>Creating</tt>,
--   <tt>Enabling</tt>, <tt>Enabled</tt>, <tt>Disabling</tt>,
--   <tt>Disabled</tt>, <tt>Updating</tt>, or <tt>Deleting</tt>.
--   
--   
--   <a>$sel:startingPositionTimestamp:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPositionTimestamp</a> -
--   With <tt>StartingPosition</tt> set to <tt>AT_TIMESTAMP</tt>, the time
--   from which to start reading.
--   
--   <a>$sel:functionArn:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionArn</a> - The ARN of the
--   Lambda function.
--   
--   <a>$sel:topics:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_topics</a> - The name of the Kafka
--   topic.
--   
--   <a>$sel:queues:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_queues</a> - (Amazon MQ) The name
--   of the Amazon MQ broker destination queue to consume.
--   
--   
--   <a>$sel:bisectBatchOnFunctionError:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_bisectBatchOnFunctionError</a> -
--   (Streams only) If the function returns an error, split the batch in
--   two and retry. The default value is false.
--   
--   <a>$sel:uuid:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_uuid</a> - The identifier of the
--   event source mapping.
--   
--   <a>$sel:parallelizationFactor:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_parallelizationFactor</a> -
--   (Streams only) The number of batches to process concurrently from each
--   shard. The default value is 1.
--   
--   <a>$sel:lastProcessingResult:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastProcessingResult</a> - The
--   result of the last Lambda invocation of your function.
--   
--   <a>$sel:maximumRetryAttempts:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRetryAttempts</a> - (Streams
--   only) Discard records after the specified number of retries. The
--   default value is -1, which sets the maximum number of retries to
--   infinite. When MaximumRetryAttempts is infinite, Lambda retries failed
--   records until the record expires in the event source.
--   
--   <a>$sel:batchSize:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_batchSize</a> - The maximum number
--   of records in each batch that Lambda pulls from your stream or queue
--   and sends to your function. Lambda passes all of the records in the
--   batch to the function in a single call, up to the payload limit for
--   synchronous invocation (6 MB).
--   
--   Default value: Varies by service. For Amazon SQS, the default is 10.
--   For all other services, the default is 100.
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   <a>$sel:stateTransitionReason:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_stateTransitionReason</a> -
--   Indicates whether a user or Lambda made the last change to the event
--   source mapping.
--   
--   
--   <a>$sel:maximumBatchingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumBatchingWindowInSeconds</a>
--   - (Streams and Amazon SQS standard queues) The maximum amount of time,
--   in seconds, that Lambda spends gathering records before invoking the
--   function.
--   
--   Default: 0
--   
--   Related setting: When you set <tt>BatchSize</tt> to a value greater
--   than 10, you must set <tt>MaximumBatchingWindowInSeconds</tt> to at
--   least 1.
--   
--   
--   <a>$sel:sourceAccessConfigurations:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_sourceAccessConfigurations</a> - An
--   array of the authentication protocol, VPC components, or virtual host
--   to secure and define your event source.
--   
--   
--   <a>$sel:maximumRecordAgeInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_maximumRecordAgeInSeconds</a> -
--   (Streams only) Discard records older than the specified age. The
--   default value is -1, which sets the maximum age to infinite. When the
--   value is set to infinite, Lambda never discards old records.
--   
--   <a>$sel:functionResponseTypes:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_functionResponseTypes</a> -
--   (Streams only) A list of current response type enums applied to the
--   event source mapping.
--   
--   <a>$sel:tumblingWindowInSeconds:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_tumblingWindowInSeconds</a> -
--   (Streams only) The duration in seconds of a processing window. The
--   range is 1–900 seconds.
--   
--   <a>$sel:selfManagedEventSource:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_selfManagedEventSource</a> - The
--   self-managed Apache Kafka cluster for your event source.
--   
--   <a>$sel:lastModified:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_lastModified</a> - The date that
--   the event source mapping was last updated or that its state changed.
--   
--   <a>$sel:destinationConfig:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_destinationConfig</a> - (Streams
--   only) An Amazon SQS queue or Amazon SNS topic destination for
--   discarded records.
--   
--   <a>$sel:startingPosition:EventSourceMappingConfiguration'</a>,
--   <a>eventSourceMappingConfiguration_startingPosition</a> - The position
--   in a stream from which to start reading. Required for Amazon Kinesis,
--   Amazon DynamoDB, and Amazon MSK stream sources. <tt>AT_TIMESTAMP</tt>
--   is supported only for Amazon Kinesis streams.
newEventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | Details about the connection between a Lambda function and an
--   <a>Amazon EFS file system</a>.
--   
--   <i>See:</i> <a>newFileSystemConfig</a> smart constructor.
data FileSystemConfig
FileSystemConfig' :: Text -> Text -> FileSystemConfig

-- | Create a value of <a>FileSystemConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FileSystemConfig'</a>, <a>fileSystemConfig_arn</a> - The
--   Amazon Resource Name (ARN) of the Amazon EFS access point that
--   provides access to the file system.
--   
--   <a>$sel:localMountPath:FileSystemConfig'</a>,
--   <a>fileSystemConfig_localMountPath</a> - The path where the function
--   can access the file system, starting with <tt>/mnt/</tt>.
newFileSystemConfig :: Text -> Text -> FileSystemConfig

-- | The code for the Lambda function. You can specify either an object in
--   Amazon S3, upload a .zip file archive deployment package directly, or
--   specify the URI of a container image.
--   
--   <i>See:</i> <a>newFunctionCode</a> smart constructor.
data FunctionCode
FunctionCode' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe Text -> Maybe Text -> FunctionCode

-- | Create a value of <a>FunctionCode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:FunctionCode'</a>,
--   <a>functionCode_s3ObjectVersion</a> - For versioned objects, the
--   version of the deployment package object to use.
--   
--   <a>$sel:s3Key:FunctionCode'</a>, <a>functionCode_s3Key</a> - The
--   Amazon S3 key of the deployment package.
--   
--   <a>$sel:zipFile:FunctionCode'</a>, <a>functionCode_zipFile</a> - The
--   base64-encoded contents of the deployment package. Amazon Web Services
--   SDK and Amazon Web Services CLI clients handle the encoding for you.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:imageUri:FunctionCode'</a>, <a>functionCode_imageUri</a> - URI
--   of a <a>container image</a> in the Amazon ECR registry.
--   
--   <a>$sel:s3Bucket:FunctionCode'</a>, <a>functionCode_s3Bucket</a> - An
--   Amazon S3 bucket in the same Amazon Web Services Region as your
--   function. The bucket can be in a different Amazon Web Services
--   account.
newFunctionCode :: FunctionCode

-- | Details about a function's deployment package.
--   
--   <i>See:</i> <a>newFunctionCodeLocation</a> smart constructor.
data FunctionCodeLocation
FunctionCodeLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FunctionCodeLocation

-- | Create a value of <a>FunctionCodeLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_location</a> - A presigned URL that you can
--   use to download the deployment package.
--   
--   <a>$sel:resolvedImageUri:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_resolvedImageUri</a> - The resolved URI for
--   the image.
--   
--   <a>$sel:imageUri:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_imageUri</a> - URI of a container image in the
--   Amazon ECR registry.
--   
--   <a>$sel:repositoryType:FunctionCodeLocation'</a>,
--   <a>functionCodeLocation_repositoryType</a> - The service that's
--   hosting the file.
newFunctionCodeLocation :: FunctionCodeLocation

-- | Details about a function's configuration.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Natural -> Maybe Runtime -> Maybe State -> Maybe Text -> Maybe LastUpdateStatus -> Maybe Text -> Maybe Text -> Maybe PackageType -> Maybe [FileSystemConfig] -> Maybe EnvironmentResponse -> Maybe DeadLetterConfig -> Maybe (NonEmpty Architecture) -> Maybe Text -> Maybe Text -> Maybe VpcConfigResponse -> Maybe Text -> Maybe Text -> Maybe [Layer] -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TracingConfigResponse -> Maybe StateReasonCode -> Maybe ImageConfigResponse -> Maybe Text -> Maybe LastUpdateStatusReasonCode -> Maybe Text -> Maybe Text -> FunctionConfiguration

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The amount of memory
--   available to the function at runtime.
--   
--   <a>$sel:runtime:FunctionConfiguration'</a>,
--   <a>functionConfiguration_runtime</a> - The runtime environment for the
--   Lambda function.
--   
--   <a>$sel:state:FunctionConfiguration'</a>,
--   <a>functionConfiguration_state</a> - The current state of the
--   function. When the state is <tt>Inactive</tt>, you can reactivate the
--   function by invoking it.
--   
--   <a>$sel:signingProfileVersionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingProfileVersionArn</a> - The ARN of the
--   signing profile version.
--   
--   <a>$sel:lastUpdateStatus:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatus</a> - The status of the last
--   update that was performed on the function. This is first set to
--   <tt>Successful</tt> after function creation completes.
--   
--   <a>$sel:functionArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionArn</a> - The function's Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:kmsKeyArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_kmsKeyArn</a> - The KMS key that's used to
--   encrypt the function's environment variables. This key is only
--   returned if you've configured a customer managed CMK.
--   
--   <a>$sel:packageType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_packageType</a> - The type of deployment
--   package. Set to <tt>Image</tt> for container image and set
--   <tt>Zip</tt> for .zip file archive.
--   
--   <a>$sel:fileSystemConfigs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_fileSystemConfigs</a> - Connection settings
--   for an <a>Amazon EFS file system</a>.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The function's
--   <a>environment variables</a>.
--   
--   <a>$sel:deadLetterConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_deadLetterConfig</a> - The function's dead
--   letter queue.
--   
--   <a>$sel:architectures:FunctionConfiguration'</a>,
--   <a>functionConfiguration_architectures</a> - The instruction set
--   architecture that the function supports. Architecture is a string
--   array with one of the valid values. The default architecture value is
--   <tt>x86_64</tt>.
--   
--   <a>$sel:signingJobArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_signingJobArn</a> - The ARN of the signing
--   job.
--   
--   <a>$sel:role':FunctionConfiguration'</a>,
--   <a>functionConfiguration_role</a> - The function's execution role.
--   
--   <a>$sel:vpcConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_vpcConfig</a> - The function's networking
--   configuration.
--   
--   <a>$sel:version:FunctionConfiguration'</a>,
--   <a>functionConfiguration_version</a> - The version of the Lambda
--   function.
--   
--   <a>$sel:functionName:FunctionConfiguration'</a>,
--   <a>functionConfiguration_functionName</a> - The name of the function.
--   
--   <a>$sel:layers:FunctionConfiguration'</a>,
--   <a>functionConfiguration_layers</a> - The function's <a>layers</a>.
--   
--   <a>$sel:codeSize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSize</a> - The size of the function's
--   deployment package, in bytes.
--   
--   <a>$sel:handler:FunctionConfiguration'</a>,
--   <a>functionConfiguration_handler</a> - The function that Lambda calls
--   to begin executing your function.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The amount of time in seconds
--   that Lambda allows a function to run before stopping it.
--   
--   <a>$sel:lastUpdateStatusReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReason</a> - The reason for
--   the last update that was performed on the function.
--   
--   <a>$sel:stateReason:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReason</a> - The reason for the
--   function's current state.
--   
--   <a>$sel:lastModified:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastModified</a> - The date and time that the
--   function was last updated, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:codeSha256:FunctionConfiguration'</a>,
--   <a>functionConfiguration_codeSha256</a> - The SHA256 hash of the
--   function's deployment package.
--   
--   <a>$sel:tracingConfig:FunctionConfiguration'</a>,
--   <a>functionConfiguration_tracingConfig</a> - The function's X-Ray
--   tracing configuration.
--   
--   <a>$sel:stateReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_stateReasonCode</a> - The reason code for the
--   function's current state. When the code is <tt>Creating</tt>, you
--   can't invoke or modify the function.
--   
--   <a>$sel:imageConfigResponse:FunctionConfiguration'</a>,
--   <a>functionConfiguration_imageConfigResponse</a> - The function's
--   image configuration values.
--   
--   <a>$sel:description:FunctionConfiguration'</a>,
--   <a>functionConfiguration_description</a> - The function's description.
--   
--   <a>$sel:lastUpdateStatusReasonCode:FunctionConfiguration'</a>,
--   <a>functionConfiguration_lastUpdateStatusReasonCode</a> - The reason
--   code for the last update that was performed on the function.
--   
--   <a>$sel:revisionId:FunctionConfiguration'</a>,
--   <a>functionConfiguration_revisionId</a> - The latest updated revision
--   of the function or alias.
--   
--   <a>$sel:masterArn:FunctionConfiguration'</a>,
--   <a>functionConfiguration_masterArn</a> - For Lambda@Edge functions,
--   the ARN of the master function.
newFunctionConfiguration :: FunctionConfiguration

-- | <i>See:</i> <a>newFunctionEventInvokeConfig</a> smart constructor.
data FunctionEventInvokeConfig
FunctionEventInvokeConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe POSIX -> Maybe DestinationConfig -> FunctionEventInvokeConfig

-- | Create a value of <a>FunctionEventInvokeConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionArn:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_functionArn</a> - The Amazon Resource
--   Name (ARN) of the function.
--   
--   <a>$sel:maximumEventAgeInSeconds:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumEventAgeInSeconds</a> - The
--   maximum age of a request that Lambda sends to a function for
--   processing.
--   
--   <a>$sel:maximumRetryAttempts:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_maximumRetryAttempts</a> - The maximum
--   number of times to retry when the function returns an error.
--   
--   <a>$sel:lastModified:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_lastModified</a> - The date and time that
--   the configuration was last updated.
--   
--   <a>$sel:destinationConfig:FunctionEventInvokeConfig'</a>,
--   <a>functionEventInvokeConfig_destinationConfig</a> - A destination for
--   events after they have been sent to a function for processing.
--   
--   <b>Destinations</b>
--   
--   <ul>
--   <li><b>Function</b> - The Amazon Resource Name (ARN) of a Lambda
--   function.</li>
--   <li><b>Queue</b> - The ARN of an SQS queue.</li>
--   <li><b>Topic</b> - The ARN of an SNS topic.</li>
--   <li><b>Event Bus</b> - The ARN of an Amazon EventBridge event
--   bus.</li>
--   </ul>
newFunctionEventInvokeConfig :: FunctionEventInvokeConfig

-- | <i>See:</i> <a>newGetLayerVersionResponse</a> smart constructor.
data GetLayerVersionResponse
GetLayerVersionResponse' :: Maybe Text -> Maybe LayerVersionContentOutput -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe Text -> Maybe [Runtime] -> GetLayerVersionResponse

-- | Create a value of <a>GetLayerVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:content:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_content</a> - Details about the layer
--   version.
--   
--   <a>$sel:createdDate:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_createdDate</a> - The date that the layer
--   version was created, in <a>ISO-8601 format</a>
--   (YYYY-MM-DDThh:mm:ss.sTZD).
--   
--   <a>$sel:version:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_licenseInfo</a> - The layer's software
--   license.
--   
--   <a>$sel:compatibleArchitectures:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:layerArn:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_layerArn</a> - The ARN of the layer.
--   
--   <a>$sel:description:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:GetLayerVersionResponse'</a>,
--   <a>getLayerVersionResponse_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newGetLayerVersionResponse :: GetLayerVersionResponse

-- | Configuration values that override the container image Dockerfile
--   settings. See <a>Container settings</a>.
--   
--   <i>See:</i> <a>newImageConfig</a> smart constructor.
data ImageConfig
ImageConfig' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> ImageConfig

-- | Create a value of <a>ImageConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:ImageConfig'</a>, <a>imageConfig_command</a> -
--   Specifies parameters that you want to pass in with ENTRYPOINT.
--   
--   <a>$sel:entryPoint:ImageConfig'</a>, <a>imageConfig_entryPoint</a> -
--   Specifies the entry point to their application, which is typically the
--   location of the runtime executable.
--   
--   <a>$sel:workingDirectory:ImageConfig'</a>,
--   <a>imageConfig_workingDirectory</a> - Specifies the working directory.
newImageConfig :: ImageConfig

-- | Error response to GetFunctionConfiguration.
--   
--   <i>See:</i> <a>newImageConfigError</a> smart constructor.
data ImageConfigError
ImageConfigError' :: Maybe Text -> Maybe (Sensitive Text) -> ImageConfigError

-- | Create a value of <a>ImageConfigError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ImageConfigError'</a>,
--   <a>imageConfigError_errorCode</a> - Error code.
--   
--   <a>$sel:message:ImageConfigError'</a>, <a>imageConfigError_message</a>
--   - Error message.
newImageConfigError :: ImageConfigError

-- | Response to GetFunctionConfiguration request.
--   
--   <i>See:</i> <a>newImageConfigResponse</a> smart constructor.
data ImageConfigResponse
ImageConfigResponse' :: Maybe ImageConfig -> Maybe ImageConfigError -> ImageConfigResponse

-- | Create a value of <a>ImageConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageConfig:ImageConfigResponse'</a>,
--   <a>imageConfigResponse_imageConfig</a> - Configuration values that
--   override the container image Dockerfile.
--   
--   <a>$sel:error:ImageConfigResponse'</a>,
--   <a>imageConfigResponse_error</a> - Error response to
--   GetFunctionConfiguration.
newImageConfigResponse :: ImageConfigResponse

-- | An <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayer</a> smart constructor.
data Layer
Layer' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Layer

-- | Create a value of <a>Layer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArn:Layer'</a>,
--   <a>layer_signingProfileVersionArn</a> - The Amazon Resource Name (ARN)
--   for a signing profile version.
--   
--   <a>$sel:arn:Layer'</a>, <a>layer_arn</a> - The Amazon Resource Name
--   (ARN) of the function layer.
--   
--   <a>$sel:signingJobArn:Layer'</a>, <a>layer_signingJobArn</a> - The
--   Amazon Resource Name (ARN) of a signing job.
--   
--   <a>$sel:codeSize:Layer'</a>, <a>layer_codeSize</a> - The size of the
--   layer archive in bytes.
newLayer :: Layer

-- | A ZIP archive that contains the contents of an <a>Lambda layer</a>.
--   You can specify either an Amazon S3 location, or upload a layer
--   archive directly.
--   
--   <i>See:</i> <a>newLayerVersionContentInput</a> smart constructor.
data LayerVersionContentInput
LayerVersionContentInput' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Base64) -> Maybe Text -> LayerVersionContentInput

-- | Create a value of <a>LayerVersionContentInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ObjectVersion:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3ObjectVersion</a> - For versioned
--   objects, the version of the layer archive object to use.
--   
--   <a>$sel:s3Key:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3Key</a> - The Amazon S3 key of the layer
--   archive.
--   
--   <a>$sel:zipFile:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_zipFile</a> - The base64-encoded contents
--   of the layer archive. Amazon Web Services SDK and Amazon Web Services
--   CLI clients handle the encoding for you.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:s3Bucket:LayerVersionContentInput'</a>,
--   <a>layerVersionContentInput_s3Bucket</a> - The Amazon S3 bucket of the
--   layer archive.
newLayerVersionContentInput :: LayerVersionContentInput

-- | Details about a version of an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayerVersionContentOutput</a> smart constructor.
data LayerVersionContentOutput
LayerVersionContentOutput' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> LayerVersionContentOutput

-- | Create a value of <a>LayerVersionContentOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signingProfileVersionArn:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_signingProfileVersionArn</a> - The Amazon
--   Resource Name (ARN) for a signing profile version.
--   
--   <a>$sel:location:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_location</a> - A link to the layer
--   archive in Amazon S3 that is valid for 10 minutes.
--   
--   <a>$sel:signingJobArn:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_signingJobArn</a> - The Amazon Resource
--   Name (ARN) of a signing job.
--   
--   <a>$sel:codeSize:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_codeSize</a> - The size of the layer
--   archive in bytes.
--   
--   <a>$sel:codeSha256:LayerVersionContentOutput'</a>,
--   <a>layerVersionContentOutput_codeSha256</a> - The SHA-256 hash of the
--   layer archive.
newLayerVersionContentOutput :: LayerVersionContentOutput

-- | Details about a version of an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayerVersionsListItem</a> smart constructor.
data LayerVersionsListItem
LayerVersionsListItem' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe [Architecture] -> Maybe Text -> Maybe [Runtime] -> LayerVersionsListItem

-- | Create a value of <a>LayerVersionsListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerVersionArn:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_layerVersionArn</a> - The ARN of the layer
--   version.
--   
--   <a>$sel:createdDate:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_createdDate</a> - The date that the version
--   was created, in ISO 8601 format. For example,
--   <tt>2018-11-27T15:10:45.123+0000</tt>.
--   
--   <a>$sel:version:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_version</a> - The version number.
--   
--   <a>$sel:licenseInfo:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_licenseInfo</a> - The layer's open-source
--   license.
--   
--   <a>$sel:compatibleArchitectures:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_compatibleArchitectures</a> - A list of
--   compatible <a>instruction set architectures</a>.
--   
--   <a>$sel:description:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_description</a> - The description of the
--   version.
--   
--   <a>$sel:compatibleRuntimes:LayerVersionsListItem'</a>,
--   <a>layerVersionsListItem_compatibleRuntimes</a> - The layer's
--   compatible runtimes.
newLayerVersionsListItem :: LayerVersionsListItem

-- | Details about an <a>Lambda layer</a>.
--   
--   <i>See:</i> <a>newLayersListItem</a> smart constructor.
data LayersListItem
LayersListItem' :: Maybe Text -> Maybe LayerVersionsListItem -> Maybe Text -> LayersListItem

-- | Create a value of <a>LayersListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:layerName:LayersListItem'</a>, <a>layersListItem_layerName</a>
--   - The name of the layer.
--   
--   <a>$sel:latestMatchingVersion:LayersListItem'</a>,
--   <a>layersListItem_latestMatchingVersion</a> - The newest version of
--   the layer.
--   
--   <a>$sel:layerArn:LayersListItem'</a>, <a>layersListItem_layerArn</a> -
--   The Amazon Resource Name (ARN) of the function layer.
newLayersListItem :: LayersListItem

-- | A destination for events that failed processing.
--   
--   <i>See:</i> <a>newOnFailure</a> smart constructor.
data OnFailure
OnFailure' :: Maybe Text -> OnFailure

-- | Create a value of <a>OnFailure</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:OnFailure'</a>, <a>onFailure_destination</a> - The
--   Amazon Resource Name (ARN) of the destination resource.
newOnFailure :: OnFailure

-- | A destination for events that were processed successfully.
--   
--   <i>See:</i> <a>newOnSuccess</a> smart constructor.
data OnSuccess
OnSuccess' :: Maybe Text -> OnSuccess

-- | Create a value of <a>OnSuccess</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:OnSuccess'</a>, <a>onSuccess_destination</a> - The
--   Amazon Resource Name (ARN) of the destination resource.
newOnSuccess :: OnSuccess

-- | Details about the provisioned concurrency configuration for a function
--   alias or version.
--   
--   <i>See:</i> <a>newProvisionedConcurrencyConfigListItem</a> smart
--   constructor.
data ProvisionedConcurrencyConfigListItem
ProvisionedConcurrencyConfigListItem' :: Maybe ProvisionedConcurrencyStatusEnum -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> ProvisionedConcurrencyConfigListItem

-- | Create a value of <a>ProvisionedConcurrencyConfigListItem</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_status</a> - The status of the
--   allocation process.
--   
--   <a>$sel:functionArn:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_functionArn</a> - The Amazon
--   Resource Name (ARN) of the alias or version.
--   
--   
--   <a>$sel:requestedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_requestedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency requested.
--   
--   
--   <a>$sel:availableProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_availableProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency available.
--   
--   <a>$sel:statusReason:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_statusReason</a> - For failed
--   allocations, the reason that provisioned concurrency could not be
--   allocated.
--   
--   
--   <a>$sel:allocatedProvisionedConcurrentExecutions:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_allocatedProvisionedConcurrentExecutions</a>
--   - The amount of provisioned concurrency allocated.
--   
--   <a>$sel:lastModified:ProvisionedConcurrencyConfigListItem'</a>,
--   <a>provisionedConcurrencyConfigListItem_lastModified</a> - The date
--   and time that a user last updated the configuration, in <a>ISO 8601
--   format</a>.
newProvisionedConcurrencyConfigListItem :: ProvisionedConcurrencyConfigListItem

-- | The self-managed Apache Kafka cluster for your event source.
--   
--   <i>See:</i> <a>newSelfManagedEventSource</a> smart constructor.
data SelfManagedEventSource
SelfManagedEventSource' :: Maybe (HashMap EndPointType (NonEmpty Text)) -> SelfManagedEventSource

-- | Create a value of <a>SelfManagedEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoints:SelfManagedEventSource'</a>,
--   <a>selfManagedEventSource_endpoints</a> - The list of bootstrap
--   servers for your Kafka brokers in the following format:
--   <tt>"KAFKA_BOOTSTRAP_SERVERS":
--   ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</tt>.
newSelfManagedEventSource :: SelfManagedEventSource

-- | To secure and define access to your event source, you can specify the
--   authentication protocol, VPC components, or virtual host.
--   
--   <i>See:</i> <a>newSourceAccessConfiguration</a> smart constructor.
data SourceAccessConfiguration
SourceAccessConfiguration' :: Maybe Text -> Maybe SourceAccessType -> SourceAccessConfiguration

-- | Create a value of <a>SourceAccessConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:SourceAccessConfiguration'</a>,
--   <a>sourceAccessConfiguration_uri</a> - The value for your chosen
--   configuration in <tt>Type</tt>. For example: <tt>"URI":
--   "arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName"</tt>.
--   
--   <a>$sel:type':SourceAccessConfiguration'</a>,
--   <a>sourceAccessConfiguration_type</a> - The type of authentication
--   protocol, VPC components, or virtual host for your event source. For
--   example: <tt>"Type":"SASL_SCRAM_512_AUTH"</tt>.
--   
--   <ul>
--   <li><tt>BASIC_AUTH</tt> - (Amazon MQ) The Secrets Manager secret that
--   stores your broker credentials.</li>
--   <li><tt>BASIC_AUTH</tt> - (Self-managed Apache Kafka) The Secrets
--   Manager ARN of your secret key used for SASL/PLAIN authentication of
--   your Apache Kafka brokers.</li>
--   <li><tt>VPC_SUBNET</tt> - The subnets associated with your VPC. Lambda
--   connects to these subnets to fetch data from your self-managed Apache
--   Kafka cluster.</li>
--   <li><tt>VPC_SECURITY_GROUP</tt> - The VPC security group used to
--   manage access to your self-managed Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_256_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-256 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>SASL_SCRAM_512_AUTH</tt> - The Secrets Manager ARN of your
--   secret key used for SASL SCRAM-512 authentication of your self-managed
--   Apache Kafka brokers.</li>
--   <li><tt>VIRTUAL_HOST</tt> - (Amazon MQ) The name of the virtual host
--   in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event
--   source.</li>
--   </ul>
newSourceAccessConfiguration :: SourceAccessConfiguration

-- | The function's <a>X-Ray</a> tracing configuration. To sample and
--   record incoming requests, set <tt>Mode</tt> to <tt>Active</tt>.
--   
--   <i>See:</i> <a>newTracingConfig</a> smart constructor.
data TracingConfig
TracingConfig' :: Maybe TracingMode -> TracingConfig

-- | Create a value of <a>TracingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:TracingConfig'</a>, <a>tracingConfig_mode</a> - The
--   tracing mode.
newTracingConfig :: TracingConfig

-- | The function's X-Ray tracing configuration.
--   
--   <i>See:</i> <a>newTracingConfigResponse</a> smart constructor.
data TracingConfigResponse
TracingConfigResponse' :: Maybe TracingMode -> TracingConfigResponse

-- | Create a value of <a>TracingConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:TracingConfigResponse'</a>,
--   <a>tracingConfigResponse_mode</a> - The tracing mode.
newTracingConfigResponse :: TracingConfigResponse

-- | The VPC security groups and subnets that are attached to a Lambda
--   function. For more information, see <a>VPC Settings</a>.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe [Text] -> VpcConfig

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - A list of VPC security groups IDs.
--   
--   <a>$sel:subnetIds:VpcConfig'</a>, <a>vpcConfig_subnetIds</a> - A list
--   of VPC subnet IDs.
newVpcConfig :: VpcConfig

-- | The VPC security groups and subnets that are attached to a Lambda
--   function.
--   
--   <i>See:</i> <a>newVpcConfigResponse</a> smart constructor.
data VpcConfigResponse
VpcConfigResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> VpcConfigResponse

-- | Create a value of <a>VpcConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_securityGroupIds</a> - A list of VPC security
--   groups IDs.
--   
--   <a>$sel:subnetIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_subnetIds</a> - A list of VPC subnet IDs.
--   
--   <a>$sel:vpcId:VpcConfigResponse'</a>, <a>vpcConfigResponse_vpcId</a> -
--   The ID of the VPC.
newVpcConfigResponse :: VpcConfigResponse
