-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-codeartifactZSamazonka-codeartifact
@version 2.0


module Amazonka.CodeArtifact.Types.DomainStatus
newtype DomainStatus
DomainStatus' :: Text -> DomainStatus
[fromDomainStatus] :: DomainStatus -> Text
pattern DomainStatus_Active :: DomainStatus
pattern DomainStatus_Deleted :: DomainStatus
instance Amazonka.Data.XML.ToXML Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Amazonka.Data.XML.FromXML Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Log.ToLog Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Text.ToText Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Text.FromText Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance GHC.Classes.Ord Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance GHC.Read.Read Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus
instance GHC.Show.Show Amazonka.CodeArtifact.Types.DomainStatus.DomainStatus


module Amazonka.CodeArtifact.Types.DomainDescription

-- | Information about a domain. A domain is a container for repositories.
--   When you create a domain, it is empty until you add one or more
--   repositories.
--   
--   <i>See:</i> <a>newDomainDescription</a> smart constructor.
data DomainDescription
DomainDescription' :: Maybe Integer -> Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> DomainDescription

-- | The total size of all assets in the domain.
[$sel:assetSizeBytes:DomainDescription'] :: DomainDescription -> Maybe Integer

-- | The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
[$sel:status:DomainDescription'] :: DomainDescription -> Maybe DomainStatus

-- | The Amazon Resource Name (ARN) of the domain.
[$sel:arn:DomainDescription'] :: DomainDescription -> Maybe Text

-- | A timestamp that represents the date and time the domain was created.
[$sel:createdTime:DomainDescription'] :: DomainDescription -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to
--   store package assets in the domain.
[$sel:s3BucketArn:DomainDescription'] :: DomainDescription -> Maybe Text

-- | The AWS account ID that owns the domain.
[$sel:owner:DomainDescription'] :: DomainDescription -> Maybe Text

-- | The number of repositories in the domain.
[$sel:repositoryCount:DomainDescription'] :: DomainDescription -> Maybe Int

-- | The name of the domain.
[$sel:name:DomainDescription'] :: DomainDescription -> Maybe Text

-- | The ARN of an AWS Key Management Service (AWS KMS) key associated with
--   a domain.
[$sel:encryptionKey:DomainDescription'] :: DomainDescription -> Maybe Text

-- | Create a value of <a>DomainDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetSizeBytes:DomainDescription'</a>,
--   <a>domainDescription_assetSizeBytes</a> - The total size of all assets
--   in the domain.
--   
--   <a>$sel:status:DomainDescription'</a>, <a>domainDescription_status</a>
--   - The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
--   
--   <a>$sel:arn:DomainDescription'</a>, <a>domainDescription_arn</a> - The
--   Amazon Resource Name (ARN) of the domain.
--   
--   <a>$sel:createdTime:DomainDescription'</a>,
--   <a>domainDescription_createdTime</a> - A timestamp that represents the
--   date and time the domain was created.
--   
--   <a>$sel:s3BucketArn:DomainDescription'</a>,
--   <a>domainDescription_s3BucketArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon S3 bucket that is used to store package assets in the
--   domain.
--   
--   <a>$sel:owner:DomainDescription'</a>, <a>domainDescription_owner</a> -
--   The AWS account ID that owns the domain.
--   
--   <a>$sel:repositoryCount:DomainDescription'</a>,
--   <a>domainDescription_repositoryCount</a> - The number of repositories
--   in the domain.
--   
--   <a>$sel:name:DomainDescription'</a>, <a>domainDescription_name</a> -
--   The name of the domain.
--   
--   <a>$sel:encryptionKey:DomainDescription'</a>,
--   <a>domainDescription_encryptionKey</a> - The ARN of an AWS Key
--   Management Service (AWS KMS) key associated with a domain.
newDomainDescription :: DomainDescription

-- | The total size of all assets in the domain.
domainDescription_assetSizeBytes :: Lens' DomainDescription (Maybe Integer)

-- | The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
domainDescription_status :: Lens' DomainDescription (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) of the domain.
domainDescription_arn :: Lens' DomainDescription (Maybe Text)

-- | A timestamp that represents the date and time the domain was created.
domainDescription_createdTime :: Lens' DomainDescription (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to
--   store package assets in the domain.
domainDescription_s3BucketArn :: Lens' DomainDescription (Maybe Text)

-- | The AWS account ID that owns the domain.
domainDescription_owner :: Lens' DomainDescription (Maybe Text)

-- | The number of repositories in the domain.
domainDescription_repositoryCount :: Lens' DomainDescription (Maybe Int)

-- | The name of the domain.
domainDescription_name :: Lens' DomainDescription (Maybe Text)

-- | The ARN of an AWS Key Management Service (AWS KMS) key associated with
--   a domain.
domainDescription_encryptionKey :: Lens' DomainDescription (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.DomainDescription.DomainDescription
instance GHC.Show.Show Amazonka.CodeArtifact.Types.DomainDescription.DomainDescription
instance GHC.Read.Read Amazonka.CodeArtifact.Types.DomainDescription.DomainDescription
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.DomainDescription.DomainDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.DomainDescription.DomainDescription
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.DomainDescription.DomainDescription
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.DomainDescription.DomainDescription


module Amazonka.CodeArtifact.Types.DomainSummary

-- | Information about a domain, including its name, Amazon Resource Name
--   (ARN), and status. The <a>ListDomains</a> operation returns a list of
--   <tt>DomainSummary</tt> objects.
--   
--   <i>See:</i> <a>newDomainSummary</a> smart constructor.
data DomainSummary
DomainSummary' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> DomainSummary

-- | A string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
[$sel:status:DomainSummary'] :: DomainSummary -> Maybe DomainStatus

-- | The ARN of the domain.
[$sel:arn:DomainSummary'] :: DomainSummary -> Maybe Text

-- | A timestamp that contains the date and time the domain was created.
[$sel:createdTime:DomainSummary'] :: DomainSummary -> Maybe POSIX

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:owner:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The name of the domain.
[$sel:name:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The key used to encrypt the domain.
[$sel:encryptionKey:DomainSummary'] :: DomainSummary -> Maybe Text

-- | Create a value of <a>DomainSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DomainSummary'</a>, <a>domainSummary_status</a> - A
--   string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
--   
--   <a>$sel:arn:DomainSummary'</a>, <a>domainSummary_arn</a> - The ARN of
--   the domain.
--   
--   <a>$sel:createdTime:DomainSummary'</a>,
--   <a>domainSummary_createdTime</a> - A timestamp that contains the date
--   and time the domain was created.
--   
--   <a>$sel:owner:DomainSummary'</a>, <a>domainSummary_owner</a> - The
--   12-digit account number of the AWS account that owns the domain. It
--   does not include dashes or spaces.
--   
--   <a>$sel:name:DomainSummary'</a>, <a>domainSummary_name</a> - The name
--   of the domain.
--   
--   <a>$sel:encryptionKey:DomainSummary'</a>,
--   <a>domainSummary_encryptionKey</a> - The key used to encrypt the
--   domain.
newDomainSummary :: DomainSummary

-- | A string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
domainSummary_status :: Lens' DomainSummary (Maybe DomainStatus)

-- | The ARN of the domain.
domainSummary_arn :: Lens' DomainSummary (Maybe Text)

-- | A timestamp that contains the date and time the domain was created.
domainSummary_createdTime :: Lens' DomainSummary (Maybe UTCTime)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
domainSummary_owner :: Lens' DomainSummary (Maybe Text)

-- | The name of the domain.
domainSummary_name :: Lens' DomainSummary (Maybe Text)

-- | The key used to encrypt the domain.
domainSummary_encryptionKey :: Lens' DomainSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.DomainSummary.DomainSummary
instance GHC.Show.Show Amazonka.CodeArtifact.Types.DomainSummary.DomainSummary
instance GHC.Read.Read Amazonka.CodeArtifact.Types.DomainSummary.DomainSummary
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.DomainSummary.DomainSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.DomainSummary.DomainSummary
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.DomainSummary.DomainSummary
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.DomainSummary.DomainSummary


module Amazonka.CodeArtifact.Types.ExternalConnectionStatus
newtype ExternalConnectionStatus
ExternalConnectionStatus' :: Text -> ExternalConnectionStatus
[fromExternalConnectionStatus] :: ExternalConnectionStatus -> Text
pattern ExternalConnectionStatus_Available :: ExternalConnectionStatus
instance Amazonka.Data.XML.ToXML Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Amazonka.Data.XML.FromXML Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Amazonka.Data.Log.ToLog Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Amazonka.Data.Text.ToText Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Amazonka.Data.Text.FromText Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance GHC.Classes.Ord Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance GHC.Read.Read Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus
instance GHC.Show.Show Amazonka.CodeArtifact.Types.ExternalConnectionStatus.ExternalConnectionStatus


module Amazonka.CodeArtifact.Types.HashAlgorithm
newtype HashAlgorithm
HashAlgorithm' :: Text -> HashAlgorithm
[fromHashAlgorithm] :: HashAlgorithm -> Text
pattern HashAlgorithm_MD5 :: HashAlgorithm
pattern HashAlgorithm_SHA_1 :: HashAlgorithm
pattern HashAlgorithm_SHA_256 :: HashAlgorithm
pattern HashAlgorithm_SHA_512 :: HashAlgorithm
instance Amazonka.Data.XML.ToXML Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Amazonka.Data.XML.FromXML Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Amazonka.Data.Log.ToLog Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Amazonka.Data.Text.ToText Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Amazonka.Data.Text.FromText Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance GHC.Classes.Ord Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance GHC.Read.Read Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm
instance GHC.Show.Show Amazonka.CodeArtifact.Types.HashAlgorithm.HashAlgorithm


module Amazonka.CodeArtifact.Types.AssetSummary

-- | Contains details about a package version asset.
--   
--   <i>See:</i> <a>newAssetSummary</a> smart constructor.
data AssetSummary
AssetSummary' :: Maybe Integer -> Maybe (HashMap HashAlgorithm Text) -> Text -> AssetSummary

-- | The size of the asset.
[$sel:size:AssetSummary'] :: AssetSummary -> Maybe Integer

-- | The hashes of the asset.
[$sel:hashes:AssetSummary'] :: AssetSummary -> Maybe (HashMap HashAlgorithm Text)

-- | The name of the asset.
[$sel:name:AssetSummary'] :: AssetSummary -> Text

-- | Create a value of <a>AssetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:AssetSummary'</a>, <a>assetSummary_size</a> - The size of
--   the asset.
--   
--   <a>$sel:hashes:AssetSummary'</a>, <a>assetSummary_hashes</a> - The
--   hashes of the asset.
--   
--   <a>$sel:name:AssetSummary'</a>, <a>assetSummary_name</a> - The name of
--   the asset.
newAssetSummary :: Text -> AssetSummary

-- | The size of the asset.
assetSummary_size :: Lens' AssetSummary (Maybe Integer)

-- | The hashes of the asset.
assetSummary_hashes :: Lens' AssetSummary (Maybe (HashMap HashAlgorithm Text))

-- | The name of the asset.
assetSummary_name :: Lens' AssetSummary Text
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.AssetSummary.AssetSummary
instance GHC.Show.Show Amazonka.CodeArtifact.Types.AssetSummary.AssetSummary
instance GHC.Read.Read Amazonka.CodeArtifact.Types.AssetSummary.AssetSummary
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.AssetSummary.AssetSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.AssetSummary.AssetSummary
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.AssetSummary.AssetSummary
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.AssetSummary.AssetSummary


module Amazonka.CodeArtifact.Types.LicenseInfo

-- | Details of the license data.
--   
--   <i>See:</i> <a>newLicenseInfo</a> smart constructor.
data LicenseInfo
LicenseInfo' :: Maybe Text -> Maybe Text -> LicenseInfo

-- | The URL for license data.
[$sel:url:LicenseInfo'] :: LicenseInfo -> Maybe Text

-- | Name of the license.
[$sel:name:LicenseInfo'] :: LicenseInfo -> Maybe Text

-- | Create a value of <a>LicenseInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:LicenseInfo'</a>, <a>licenseInfo_url</a> - The URL for
--   license data.
--   
--   <a>$sel:name:LicenseInfo'</a>, <a>licenseInfo_name</a> - Name of the
--   license.
newLicenseInfo :: LicenseInfo

-- | The URL for license data.
licenseInfo_url :: Lens' LicenseInfo (Maybe Text)

-- | Name of the license.
licenseInfo_name :: Lens' LicenseInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.LicenseInfo.LicenseInfo
instance GHC.Show.Show Amazonka.CodeArtifact.Types.LicenseInfo.LicenseInfo
instance GHC.Read.Read Amazonka.CodeArtifact.Types.LicenseInfo.LicenseInfo
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.LicenseInfo.LicenseInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.LicenseInfo.LicenseInfo
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.LicenseInfo.LicenseInfo
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.LicenseInfo.LicenseInfo


module Amazonka.CodeArtifact.Types.PackageDependency

-- | Details about a package dependency.
--   
--   <i>See:</i> <a>newPackageDependency</a> smart constructor.
data PackageDependency
PackageDependency' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PackageDependency

-- | The type of a package dependency. The possible values depend on the
--   package type. Example types are <tt>compile</tt>, <tt>runtime</tt>,
--   and <tt>test</tt> for Maven packages, and <tt>dev</tt>, <tt>prod</tt>,
--   and <tt>optional</tt> for npm packages.
[$sel:dependencyType:PackageDependency'] :: PackageDependency -> Maybe Text

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:PackageDependency'] :: PackageDependency -> Maybe Text

-- | The name of the package that this package depends on.
[$sel:package:PackageDependency'] :: PackageDependency -> Maybe Text

-- | The required version, or version range, of the package that this
--   package depends on. The version format is specific to the package
--   type. For example, the following are possible valid required versions:
--   <tt>1.2.3</tt>, <tt>^2.3.4</tt>, or <tt>4.x</tt>.
[$sel:versionRequirement:PackageDependency'] :: PackageDependency -> Maybe Text

-- | Create a value of <a>PackageDependency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dependencyType:PackageDependency'</a>,
--   <a>packageDependency_dependencyType</a> - The type of a package
--   dependency. The possible values depend on the package type. Example
--   types are <tt>compile</tt>, <tt>runtime</tt>, and <tt>test</tt> for
--   Maven packages, and <tt>dev</tt>, <tt>prod</tt>, and <tt>optional</tt>
--   for npm packages.
--   
--   <a>$sel:namespace:PackageDependency'</a>,
--   <a>packageDependency_namespace</a> - The namespace of the package. The
--   package component that specifies its namespace depends on its type.
--   For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:package:PackageDependency'</a>,
--   <a>packageDependency_package</a> - The name of the package that this
--   package depends on.
--   
--   <a>$sel:versionRequirement:PackageDependency'</a>,
--   <a>packageDependency_versionRequirement</a> - The required version, or
--   version range, of the package that this package depends on. The
--   version format is specific to the package type. For example, the
--   following are possible valid required versions: <tt>1.2.3</tt>,
--   <tt>^2.3.4</tt>, or <tt>4.x</tt>.
newPackageDependency :: PackageDependency

-- | The type of a package dependency. The possible values depend on the
--   package type. Example types are <tt>compile</tt>, <tt>runtime</tt>,
--   and <tt>test</tt> for Maven packages, and <tt>dev</tt>, <tt>prod</tt>,
--   and <tt>optional</tt> for npm packages.
packageDependency_dependencyType :: Lens' PackageDependency (Maybe Text)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageDependency_namespace :: Lens' PackageDependency (Maybe Text)

-- | The name of the package that this package depends on.
packageDependency_package :: Lens' PackageDependency (Maybe Text)

-- | The required version, or version range, of the package that this
--   package depends on. The version format is specific to the package
--   type. For example, the following are possible valid required versions:
--   <tt>1.2.3</tt>, <tt>^2.3.4</tt>, or <tt>4.x</tt>.
packageDependency_versionRequirement :: Lens' PackageDependency (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageDependency.PackageDependency
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageDependency.PackageDependency
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageDependency.PackageDependency
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageDependency.PackageDependency
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageDependency.PackageDependency
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageDependency.PackageDependency
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageDependency.PackageDependency


module Amazonka.CodeArtifact.Types.PackageFormat
newtype PackageFormat
PackageFormat' :: Text -> PackageFormat
[fromPackageFormat] :: PackageFormat -> Text
pattern PackageFormat_Maven :: PackageFormat
pattern PackageFormat_Npm :: PackageFormat
pattern PackageFormat_Nuget :: PackageFormat
pattern PackageFormat_Pypi :: PackageFormat
instance Amazonka.Data.XML.ToXML Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Amazonka.Data.XML.FromXML Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Amazonka.Data.Log.ToLog Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Amazonka.Data.Text.ToText Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Amazonka.Data.Text.FromText Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance GHC.Classes.Ord Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageFormat.PackageFormat


module Amazonka.CodeArtifact.Types.PackageSummary

-- | Details about a package, including its format, namespace, and name.
--   The <a>ListPackages</a> operation returns a list of
--   <tt>PackageSummary</tt> objects.
--   
--   <i>See:</i> <a>newPackageSummary</a> smart constructor.
data PackageSummary
PackageSummary' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> PackageSummary

-- | The format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:PackageSummary'] :: PackageSummary -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:PackageSummary'] :: PackageSummary -> Maybe Text

-- | The name of the package.
[$sel:package:PackageSummary'] :: PackageSummary -> Maybe Text

-- | Create a value of <a>PackageSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:PackageSummary'</a>, <a>packageSummary_format</a> - The
--   format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:PackageSummary'</a>, <a>packageSummary_namespace</a>
--   - The namespace of the package. The package component that specifies
--   its namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:package:PackageSummary'</a>, <a>packageSummary_package</a> -
--   The name of the package.
newPackageSummary :: PackageSummary

-- | The format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
packageSummary_format :: Lens' PackageSummary (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageSummary_namespace :: Lens' PackageSummary (Maybe Text)

-- | The name of the package.
packageSummary_package :: Lens' PackageSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageSummary.PackageSummary
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageSummary.PackageSummary
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageSummary.PackageSummary
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageSummary.PackageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageSummary.PackageSummary
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageSummary.PackageSummary
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageSummary.PackageSummary


module Amazonka.CodeArtifact.Types.PackageVersionErrorCode
newtype PackageVersionErrorCode
PackageVersionErrorCode' :: Text -> PackageVersionErrorCode
[fromPackageVersionErrorCode] :: PackageVersionErrorCode -> Text
pattern PackageVersionErrorCode_ALREADY_EXISTS :: PackageVersionErrorCode
pattern PackageVersionErrorCode_MISMATCHED_REVISION :: PackageVersionErrorCode
pattern PackageVersionErrorCode_MISMATCHED_STATUS :: PackageVersionErrorCode
pattern PackageVersionErrorCode_NOT_ALLOWED :: PackageVersionErrorCode
pattern PackageVersionErrorCode_NOT_FOUND :: PackageVersionErrorCode
pattern PackageVersionErrorCode_SKIPPED :: PackageVersionErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Amazonka.Data.Text.ToText Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Amazonka.Data.Text.FromText Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance GHC.Classes.Ord Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageVersionErrorCode.PackageVersionErrorCode


module Amazonka.CodeArtifact.Types.PackageVersionError

-- | An error associated with package.
--   
--   <i>See:</i> <a>newPackageVersionError</a> smart constructor.
data PackageVersionError
PackageVersionError' :: Maybe PackageVersionErrorCode -> Maybe Text -> PackageVersionError

-- | The error code associated with the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
[$sel:errorCode:PackageVersionError'] :: PackageVersionError -> Maybe PackageVersionErrorCode

-- | The error message associated with the error.
[$sel:errorMessage:PackageVersionError'] :: PackageVersionError -> Maybe Text

-- | Create a value of <a>PackageVersionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PackageVersionError'</a>,
--   <a>packageVersionError_errorCode</a> - The error code associated with
--   the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:errorMessage:PackageVersionError'</a>,
--   <a>packageVersionError_errorMessage</a> - The error message associated
--   with the error.
newPackageVersionError :: PackageVersionError

-- | The error code associated with the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
packageVersionError_errorCode :: Lens' PackageVersionError (Maybe PackageVersionErrorCode)

-- | The error message associated with the error.
packageVersionError_errorMessage :: Lens' PackageVersionError (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageVersionError.PackageVersionError
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageVersionError.PackageVersionError
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageVersionError.PackageVersionError
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageVersionError.PackageVersionError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageVersionError.PackageVersionError
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageVersionError.PackageVersionError
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageVersionError.PackageVersionError


module Amazonka.CodeArtifact.Types.PackageVersionSortType
newtype PackageVersionSortType
PackageVersionSortType' :: Text -> PackageVersionSortType
[fromPackageVersionSortType] :: PackageVersionSortType -> Text
pattern PackageVersionSortType_PUBLISHED_TIME :: PackageVersionSortType
instance Amazonka.Data.XML.ToXML Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Amazonka.Data.XML.FromXML Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Amazonka.Data.Log.ToLog Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Amazonka.Data.Text.ToText Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Amazonka.Data.Text.FromText Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance GHC.Classes.Ord Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageVersionSortType.PackageVersionSortType


module Amazonka.CodeArtifact.Types.PackageVersionStatus
newtype PackageVersionStatus
PackageVersionStatus' :: Text -> PackageVersionStatus
[fromPackageVersionStatus] :: PackageVersionStatus -> Text
pattern PackageVersionStatus_Archived :: PackageVersionStatus
pattern PackageVersionStatus_Deleted :: PackageVersionStatus
pattern PackageVersionStatus_Disposed :: PackageVersionStatus
pattern PackageVersionStatus_Published :: PackageVersionStatus
pattern PackageVersionStatus_Unfinished :: PackageVersionStatus
pattern PackageVersionStatus_Unlisted :: PackageVersionStatus
instance Amazonka.Data.XML.ToXML Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.XML.FromXML Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Log.ToLog Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Text.ToText Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Text.FromText Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Classes.Ord Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageVersionStatus.PackageVersionStatus


module Amazonka.CodeArtifact.Types.PackageVersionDescription

-- | Details about a package version.
--   
--   <i>See:</i> <a>newPackageVersionDescription</a> smart constructor.
data PackageVersionDescription
PackageVersionDescription' :: Maybe Text -> Maybe Text -> Maybe PackageVersionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [LicenseInfo] -> Maybe Text -> PackageVersionDescription

-- | A summary of the package version. The summary is extracted from the
--   package. The information in and detail level of the summary depends on
--   the package version's format.
[$sel:summary:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The homepage associated with the package.
[$sel:homePage:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:status:PackageVersionDescription'] :: PackageVersionDescription -> Maybe PackageVersionStatus

-- | The repository for the source code in the package version, or the
--   source code used to build it.
[$sel:sourceCodeRepository:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The name of the requested package.
[$sel:packageName:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | A timestamp that contains the date and time the package version was
--   published.
[$sel:publishedTime:PackageVersionDescription'] :: PackageVersionDescription -> Maybe POSIX

-- | The format of the package version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:format:PackageVersionDescription'] :: PackageVersionDescription -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The version of the package.
[$sel:version:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The name of the package that is displayed. The <tt>displayName</tt>
--   varies depending on the package version's format. For example, if an
--   npm package is named <tt>ui</tt>, is in the namespace <tt>vue</tt>,
--   and has the format <tt>npm</tt>, then the <tt>displayName</tt> is
--   <tt>@vue/ui</tt>.
[$sel:displayName:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | Information about licenses associated with the package version.
[$sel:licenses:PackageVersionDescription'] :: PackageVersionDescription -> Maybe [LicenseInfo]

-- | The revision of the package version.
[$sel:revision:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | Create a value of <a>PackageVersionDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_summary</a> - A summary of the package
--   version. The summary is extracted from the package. The information in
--   and detail level of the summary depends on the package version's
--   format.
--   
--   <a>$sel:homePage:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_homePage</a> - The homepage associated
--   with the package.
--   
--   <a>$sel:status:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_status</a> - A string that contains the
--   status of the package version. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:sourceCodeRepository:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_sourceCodeRepository</a> - The repository
--   for the source code in the package version, or the source code used to
--   build it.
--   
--   <a>$sel:packageName:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_packageName</a> - The name of the
--   requested package.
--   
--   <a>$sel:publishedTime:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_publishedTime</a> - A timestamp that
--   contains the date and time the package version was published.
--   
--   <a>$sel:format:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_format</a> - The format of the package
--   version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:namespace:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:version:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_version</a> - The version of the package.
--   
--   <a>$sel:displayName:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_displayName</a> - The name of the package
--   that is displayed. The <tt>displayName</tt> varies depending on the
--   package version's format. For example, if an npm package is named
--   <tt>ui</tt>, is in the namespace <tt>vue</tt>, and has the format
--   <tt>npm</tt>, then the <tt>displayName</tt> is <tt>@vue/ui</tt>.
--   
--   <a>$sel:licenses:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_licenses</a> - Information about licenses
--   associated with the package version.
--   
--   <a>$sel:revision:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_revision</a> - The revision of the
--   package version.
newPackageVersionDescription :: PackageVersionDescription

-- | A summary of the package version. The summary is extracted from the
--   package. The information in and detail level of the summary depends on
--   the package version's format.
packageVersionDescription_summary :: Lens' PackageVersionDescription (Maybe Text)

-- | The homepage associated with the package.
packageVersionDescription_homePage :: Lens' PackageVersionDescription (Maybe Text)

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
packageVersionDescription_status :: Lens' PackageVersionDescription (Maybe PackageVersionStatus)

-- | The repository for the source code in the package version, or the
--   source code used to build it.
packageVersionDescription_sourceCodeRepository :: Lens' PackageVersionDescription (Maybe Text)

-- | The name of the requested package.
packageVersionDescription_packageName :: Lens' PackageVersionDescription (Maybe Text)

-- | A timestamp that contains the date and time the package version was
--   published.
packageVersionDescription_publishedTime :: Lens' PackageVersionDescription (Maybe UTCTime)

-- | The format of the package version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
packageVersionDescription_format :: Lens' PackageVersionDescription (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageVersionDescription_namespace :: Lens' PackageVersionDescription (Maybe Text)

-- | The version of the package.
packageVersionDescription_version :: Lens' PackageVersionDescription (Maybe Text)

-- | The name of the package that is displayed. The <tt>displayName</tt>
--   varies depending on the package version's format. For example, if an
--   npm package is named <tt>ui</tt>, is in the namespace <tt>vue</tt>,
--   and has the format <tt>npm</tt>, then the <tt>displayName</tt> is
--   <tt>@vue/ui</tt>.
packageVersionDescription_displayName :: Lens' PackageVersionDescription (Maybe Text)

-- | Information about licenses associated with the package version.
packageVersionDescription_licenses :: Lens' PackageVersionDescription (Maybe [LicenseInfo])

-- | The revision of the package version.
packageVersionDescription_revision :: Lens' PackageVersionDescription (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageVersionDescription.PackageVersionDescription
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageVersionDescription.PackageVersionDescription
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageVersionDescription.PackageVersionDescription
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageVersionDescription.PackageVersionDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageVersionDescription.PackageVersionDescription
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageVersionDescription.PackageVersionDescription
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageVersionDescription.PackageVersionDescription


module Amazonka.CodeArtifact.Types.PackageVersionSummary

-- | Details about a package version, including its status, version, and
--   revision. The <a>ListPackageVersions</a> operation returns a list of
--   <tt>PackageVersionSummary</tt> objects.
--   
--   <i>See:</i> <a>newPackageVersionSummary</a> smart constructor.
data PackageVersionSummary
PackageVersionSummary' :: Maybe Text -> Text -> PackageVersionStatus -> PackageVersionSummary

-- | The revision associated with a package version.
[$sel:revision:PackageVersionSummary'] :: PackageVersionSummary -> Maybe Text

-- | Information about a package version.
[$sel:version:PackageVersionSummary'] :: PackageVersionSummary -> Text

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:status:PackageVersionSummary'] :: PackageVersionSummary -> PackageVersionStatus

-- | Create a value of <a>PackageVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_revision</a> - The revision associated with a
--   package version.
--   
--   <a>$sel:version:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_version</a> - Information about a package
--   version.
--   
--   <a>$sel:status:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_status</a> - A string that contains the
--   status of the package version. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
newPackageVersionSummary :: Text -> PackageVersionStatus -> PackageVersionSummary

-- | The revision associated with a package version.
packageVersionSummary_revision :: Lens' PackageVersionSummary (Maybe Text)

-- | Information about a package version.
packageVersionSummary_version :: Lens' PackageVersionSummary Text

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
packageVersionSummary_status :: Lens' PackageVersionSummary PackageVersionStatus
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.PackageVersionSummary.PackageVersionSummary
instance GHC.Show.Show Amazonka.CodeArtifact.Types.PackageVersionSummary.PackageVersionSummary
instance GHC.Read.Read Amazonka.CodeArtifact.Types.PackageVersionSummary.PackageVersionSummary
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.PackageVersionSummary.PackageVersionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.PackageVersionSummary.PackageVersionSummary
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.PackageVersionSummary.PackageVersionSummary
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.PackageVersionSummary.PackageVersionSummary


module Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo

-- | Contains information about the external connection of a repository.
--   
--   <i>See:</i> <a>newRepositoryExternalConnectionInfo</a> smart
--   constructor.
data RepositoryExternalConnectionInfo
RepositoryExternalConnectionInfo' :: Maybe Text -> Maybe ExternalConnectionStatus -> Maybe PackageFormat -> RepositoryExternalConnectionInfo

-- | The name of the external connection associated with a repository.
[$sel:externalConnectionName:RepositoryExternalConnectionInfo'] :: RepositoryExternalConnectionInfo -> Maybe Text

-- | The status of the external connection of a repository. There is one
--   valid value, <tt>Available</tt>.
[$sel:status:RepositoryExternalConnectionInfo'] :: RepositoryExternalConnectionInfo -> Maybe ExternalConnectionStatus

-- | The package format associated with a repository's external connection.
--   The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:packageFormat:RepositoryExternalConnectionInfo'] :: RepositoryExternalConnectionInfo -> Maybe PackageFormat

-- | Create a value of <a>RepositoryExternalConnectionInfo</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalConnectionName:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_externalConnectionName</a> - The
--   name of the external connection associated with a repository.
--   
--   <a>$sel:status:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_status</a> - The status of the
--   external connection of a repository. There is one valid value,
--   <tt>Available</tt>.
--   
--   <a>$sel:packageFormat:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_packageFormat</a> - The package
--   format associated with a repository's external connection. The valid
--   package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
newRepositoryExternalConnectionInfo :: RepositoryExternalConnectionInfo

-- | The name of the external connection associated with a repository.
repositoryExternalConnectionInfo_externalConnectionName :: Lens' RepositoryExternalConnectionInfo (Maybe Text)

-- | The status of the external connection of a repository. There is one
--   valid value, <tt>Available</tt>.
repositoryExternalConnectionInfo_status :: Lens' RepositoryExternalConnectionInfo (Maybe ExternalConnectionStatus)

-- | The package format associated with a repository's external connection.
--   The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
repositoryExternalConnectionInfo_packageFormat :: Lens' RepositoryExternalConnectionInfo (Maybe PackageFormat)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo.RepositoryExternalConnectionInfo
instance GHC.Show.Show Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo.RepositoryExternalConnectionInfo
instance GHC.Read.Read Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo.RepositoryExternalConnectionInfo
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo.RepositoryExternalConnectionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo.RepositoryExternalConnectionInfo
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo.RepositoryExternalConnectionInfo
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.RepositoryExternalConnectionInfo.RepositoryExternalConnectionInfo


module Amazonka.CodeArtifact.Types.RepositorySummary

-- | Details about a repository, including its Amazon Resource Name (ARN),
--   description, and domain information. The <a>ListRepositories</a>
--   operation returns a list of <tt>RepositorySummary</tt> objects.
--   
--   <i>See:</i> <a>newRepositorySummary</a> smart constructor.
data RepositorySummary
RepositorySummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RepositorySummary

-- | The ARN of the repository.
[$sel:arn:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The name of the domain that contains the repository.
[$sel:domainName:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The name of the repository.
[$sel:name:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The AWS account ID that manages the repository.
[$sel:administratorAccount:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The description of the repository.
[$sel:description:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | Create a value of <a>RepositorySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RepositorySummary'</a>, <a>repositorySummary_arn</a> - The
--   ARN of the repository.
--   
--   <a>$sel:domainOwner:RepositorySummary'</a>,
--   <a>repositorySummary_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domainName:RepositorySummary'</a>,
--   <a>repositorySummary_domainName</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:name:RepositorySummary'</a>, <a>repositorySummary_name</a> -
--   The name of the repository.
--   
--   <a>$sel:administratorAccount:RepositorySummary'</a>,
--   <a>repositorySummary_administratorAccount</a> - The AWS account ID
--   that manages the repository.
--   
--   <a>$sel:description:RepositorySummary'</a>,
--   <a>repositorySummary_description</a> - The description of the
--   repository.
newRepositorySummary :: RepositorySummary

-- | The ARN of the repository.
repositorySummary_arn :: Lens' RepositorySummary (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
repositorySummary_domainOwner :: Lens' RepositorySummary (Maybe Text)

-- | The name of the domain that contains the repository.
repositorySummary_domainName :: Lens' RepositorySummary (Maybe Text)

-- | The name of the repository.
repositorySummary_name :: Lens' RepositorySummary (Maybe Text)

-- | The AWS account ID that manages the repository.
repositorySummary_administratorAccount :: Lens' RepositorySummary (Maybe Text)

-- | The description of the repository.
repositorySummary_description :: Lens' RepositorySummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.RepositorySummary.RepositorySummary
instance GHC.Show.Show Amazonka.CodeArtifact.Types.RepositorySummary.RepositorySummary
instance GHC.Read.Read Amazonka.CodeArtifact.Types.RepositorySummary.RepositorySummary
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.RepositorySummary.RepositorySummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.RepositorySummary.RepositorySummary
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.RepositorySummary.RepositorySummary
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.RepositorySummary.RepositorySummary


module Amazonka.CodeArtifact.Types.ResourcePolicy

-- | An AWS CodeArtifact resource policy that contains a resource ARN,
--   document details, and a revision.
--   
--   <i>See:</i> <a>newResourcePolicy</a> smart constructor.
data ResourcePolicy
ResourcePolicy' :: Maybe Text -> Maybe Text -> Maybe Text -> ResourcePolicy

-- | The ARN of the resource associated with the resource policy
[$sel:resourceArn:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | The resource policy formatted in JSON.
[$sel:document:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | The current revision of the resource policy.
[$sel:revision:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | Create a value of <a>ResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourcePolicy'</a>,
--   <a>resourcePolicy_resourceArn</a> - The ARN of the resource associated
--   with the resource policy
--   
--   <a>$sel:document:ResourcePolicy'</a>, <a>resourcePolicy_document</a> -
--   The resource policy formatted in JSON.
--   
--   <a>$sel:revision:ResourcePolicy'</a>, <a>resourcePolicy_revision</a> -
--   The current revision of the resource policy.
newResourcePolicy :: ResourcePolicy

-- | The ARN of the resource associated with the resource policy
resourcePolicy_resourceArn :: Lens' ResourcePolicy (Maybe Text)

-- | The resource policy formatted in JSON.
resourcePolicy_document :: Lens' ResourcePolicy (Maybe Text)

-- | The current revision of the resource policy.
resourcePolicy_revision :: Lens' ResourcePolicy (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.ResourcePolicy.ResourcePolicy
instance GHC.Show.Show Amazonka.CodeArtifact.Types.ResourcePolicy.ResourcePolicy
instance GHC.Read.Read Amazonka.CodeArtifact.Types.ResourcePolicy.ResourcePolicy
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.ResourcePolicy.ResourcePolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.ResourcePolicy.ResourcePolicy
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.ResourcePolicy.ResourcePolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.ResourcePolicy.ResourcePolicy


module Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo

-- | Contains the revision and status of a package version.
--   
--   <i>See:</i> <a>newSuccessfulPackageVersionInfo</a> smart constructor.
data SuccessfulPackageVersionInfo
SuccessfulPackageVersionInfo' :: Maybe PackageVersionStatus -> Maybe Text -> SuccessfulPackageVersionInfo

-- | The status of a package version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:status:SuccessfulPackageVersionInfo'] :: SuccessfulPackageVersionInfo -> Maybe PackageVersionStatus

-- | The revision of a package version.
[$sel:revision:SuccessfulPackageVersionInfo'] :: SuccessfulPackageVersionInfo -> Maybe Text

-- | Create a value of <a>SuccessfulPackageVersionInfo</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SuccessfulPackageVersionInfo'</a>,
--   <a>successfulPackageVersionInfo_status</a> - The status of a package
--   version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:revision:SuccessfulPackageVersionInfo'</a>,
--   <a>successfulPackageVersionInfo_revision</a> - The revision of a
--   package version.
newSuccessfulPackageVersionInfo :: SuccessfulPackageVersionInfo

-- | The status of a package version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
successfulPackageVersionInfo_status :: Lens' SuccessfulPackageVersionInfo (Maybe PackageVersionStatus)

-- | The revision of a package version.
successfulPackageVersionInfo_revision :: Lens' SuccessfulPackageVersionInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo.SuccessfulPackageVersionInfo
instance GHC.Show.Show Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo.SuccessfulPackageVersionInfo
instance GHC.Read.Read Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo.SuccessfulPackageVersionInfo
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo.SuccessfulPackageVersionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo.SuccessfulPackageVersionInfo
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo.SuccessfulPackageVersionInfo
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.SuccessfulPackageVersionInfo.SuccessfulPackageVersionInfo


module Amazonka.CodeArtifact.Types.Tag

-- | A tag is a key-value pair that can be used to manage, search for, or
--   filter resources in AWS CodeArtifact.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Tag

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The tag value.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.Tag.Tag
instance GHC.Show.Show Amazonka.CodeArtifact.Types.Tag.Tag
instance GHC.Read.Read Amazonka.CodeArtifact.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.Tag.Tag


module Amazonka.CodeArtifact.Types.UpstreamRepository

-- | Information about an upstream repository. A list of
--   <tt>UpstreamRepository</tt> objects is an input parameter to
--   <a>CreateRepository</a> and <a>UpdateRepository</a>.
--   
--   <i>See:</i> <a>newUpstreamRepository</a> smart constructor.
data UpstreamRepository
UpstreamRepository' :: Text -> UpstreamRepository

-- | The name of an upstream repository.
[$sel:repositoryName:UpstreamRepository'] :: UpstreamRepository -> Text

-- | Create a value of <a>UpstreamRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpstreamRepository'</a>,
--   <a>upstreamRepository_repositoryName</a> - The name of an upstream
--   repository.
newUpstreamRepository :: Text -> UpstreamRepository

-- | The name of an upstream repository.
upstreamRepository_repositoryName :: Lens' UpstreamRepository Text
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.UpstreamRepository.UpstreamRepository
instance GHC.Show.Show Amazonka.CodeArtifact.Types.UpstreamRepository.UpstreamRepository
instance GHC.Read.Read Amazonka.CodeArtifact.Types.UpstreamRepository.UpstreamRepository
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.UpstreamRepository.UpstreamRepository
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.UpstreamRepository.UpstreamRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.UpstreamRepository.UpstreamRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.Types.UpstreamRepository.UpstreamRepository


module Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo

-- | Information about an upstream repository.
--   
--   <i>See:</i> <a>newUpstreamRepositoryInfo</a> smart constructor.
data UpstreamRepositoryInfo
UpstreamRepositoryInfo' :: Maybe Text -> UpstreamRepositoryInfo

-- | The name of an upstream repository.
[$sel:repositoryName:UpstreamRepositoryInfo'] :: UpstreamRepositoryInfo -> Maybe Text

-- | Create a value of <a>UpstreamRepositoryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpstreamRepositoryInfo'</a>,
--   <a>upstreamRepositoryInfo_repositoryName</a> - The name of an upstream
--   repository.
newUpstreamRepositoryInfo :: UpstreamRepositoryInfo

-- | The name of an upstream repository.
upstreamRepositoryInfo_repositoryName :: Lens' UpstreamRepositoryInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo.UpstreamRepositoryInfo
instance GHC.Show.Show Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo.UpstreamRepositoryInfo
instance GHC.Read.Read Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo.UpstreamRepositoryInfo
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo.UpstreamRepositoryInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo.UpstreamRepositoryInfo
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo.UpstreamRepositoryInfo
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.UpstreamRepositoryInfo.UpstreamRepositoryInfo


module Amazonka.CodeArtifact.Types.RepositoryDescription

-- | The details of a repository stored in AWS CodeArtifact. A CodeArtifact
--   repository contains a set of package versions, each of which maps to a
--   set of assets. Repositories are polyglot—a single repository can
--   contain packages of any supported type. Each repository exposes
--   endpoints for fetching and publishing packages using tools like the
--   <tt>npm</tt> CLI, the Maven CLI (<tt>mvn</tt>), and <tt>pip</tt>. You
--   can create up to 100 repositories per AWS account.
--   
--   <i>See:</i> <a>newRepositoryDescription</a> smart constructor.
data RepositoryDescription
RepositoryDescription' :: Maybe [UpstreamRepositoryInfo] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [RepositoryExternalConnectionInfo] -> Maybe Text -> RepositoryDescription

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
[$sel:upstreams:RepositoryDescription'] :: RepositoryDescription -> Maybe [UpstreamRepositoryInfo]

-- | The Amazon Resource Name (ARN) of the repository.
[$sel:arn:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
[$sel:domainOwner:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The name of the domain that contains the repository.
[$sel:domainName:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The name of the repository.
[$sel:name:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The 12-digit account number of the AWS account that manages the
--   repository.
[$sel:administratorAccount:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | An array of external connections associated with the repository.
[$sel:externalConnections:RepositoryDescription'] :: RepositoryDescription -> Maybe [RepositoryExternalConnectionInfo]

-- | A text description of the repository.
[$sel:description:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | Create a value of <a>RepositoryDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upstreams:RepositoryDescription'</a>,
--   <a>repositoryDescription_upstreams</a> - A list of upstream
--   repositories to associate with the repository. The order of the
--   upstream repositories in the list determines their priority order when
--   AWS CodeArtifact looks for a requested package version. For more
--   information, see <a>Working with upstream repositories</a>.
--   
--   <a>$sel:arn:RepositoryDescription'</a>,
--   <a>repositoryDescription_arn</a> - The Amazon Resource Name (ARN) of
--   the repository.
--   
--   <a>$sel:domainOwner:RepositoryDescription'</a>,
--   <a>repositoryDescription_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain that contains the repository.
--   It does not include dashes or spaces.
--   
--   <a>$sel:domainName:RepositoryDescription'</a>,
--   <a>repositoryDescription_domainName</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:name:RepositoryDescription'</a>,
--   <a>repositoryDescription_name</a> - The name of the repository.
--   
--   <a>$sel:administratorAccount:RepositoryDescription'</a>,
--   <a>repositoryDescription_administratorAccount</a> - The 12-digit
--   account number of the AWS account that manages the repository.
--   
--   <a>$sel:externalConnections:RepositoryDescription'</a>,
--   <a>repositoryDescription_externalConnections</a> - An array of
--   external connections associated with the repository.
--   
--   <a>$sel:description:RepositoryDescription'</a>,
--   <a>repositoryDescription_description</a> - A text description of the
--   repository.
newRepositoryDescription :: RepositoryDescription

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
repositoryDescription_upstreams :: Lens' RepositoryDescription (Maybe [UpstreamRepositoryInfo])

-- | The Amazon Resource Name (ARN) of the repository.
repositoryDescription_arn :: Lens' RepositoryDescription (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
repositoryDescription_domainOwner :: Lens' RepositoryDescription (Maybe Text)

-- | The name of the domain that contains the repository.
repositoryDescription_domainName :: Lens' RepositoryDescription (Maybe Text)

-- | The name of the repository.
repositoryDescription_name :: Lens' RepositoryDescription (Maybe Text)

-- | The 12-digit account number of the AWS account that manages the
--   repository.
repositoryDescription_administratorAccount :: Lens' RepositoryDescription (Maybe Text)

-- | An array of external connections associated with the repository.
repositoryDescription_externalConnections :: Lens' RepositoryDescription (Maybe [RepositoryExternalConnectionInfo])

-- | A text description of the repository.
repositoryDescription_description :: Lens' RepositoryDescription (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeArtifact.Types.RepositoryDescription.RepositoryDescription
instance GHC.Show.Show Amazonka.CodeArtifact.Types.RepositoryDescription.RepositoryDescription
instance GHC.Read.Read Amazonka.CodeArtifact.Types.RepositoryDescription.RepositoryDescription
instance GHC.Classes.Eq Amazonka.CodeArtifact.Types.RepositoryDescription.RepositoryDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeArtifact.Types.RepositoryDescription.RepositoryDescription
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.Types.RepositoryDescription.RepositoryDescription
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.Types.RepositoryDescription.RepositoryDescription


module Amazonka.CodeArtifact.Types

-- | API version <tt>2018-09-22</tt> of the Amazon CodeArtifact SDK
--   configuration.
defaultService :: Service

-- | The operation did not succeed because a parameter in the request was
--   sent with an invalid value.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because of an unauthorized access
--   attempt.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because prerequisites are not met.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because it would have exceeded a service
--   limit for your account.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because too many requests are sent to
--   the service.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because of an error that occurred inside
--   AWS CodeArtifact.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because the resource requested is not
--   found in the service.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype DomainStatus
DomainStatus' :: Text -> DomainStatus
[fromDomainStatus] :: DomainStatus -> Text
pattern DomainStatus_Active :: DomainStatus
pattern DomainStatus_Deleted :: DomainStatus
newtype ExternalConnectionStatus
ExternalConnectionStatus' :: Text -> ExternalConnectionStatus
[fromExternalConnectionStatus] :: ExternalConnectionStatus -> Text
pattern ExternalConnectionStatus_Available :: ExternalConnectionStatus
newtype HashAlgorithm
HashAlgorithm' :: Text -> HashAlgorithm
[fromHashAlgorithm] :: HashAlgorithm -> Text
pattern HashAlgorithm_MD5 :: HashAlgorithm
pattern HashAlgorithm_SHA_1 :: HashAlgorithm
pattern HashAlgorithm_SHA_256 :: HashAlgorithm
pattern HashAlgorithm_SHA_512 :: HashAlgorithm
newtype PackageFormat
PackageFormat' :: Text -> PackageFormat
[fromPackageFormat] :: PackageFormat -> Text
pattern PackageFormat_Maven :: PackageFormat
pattern PackageFormat_Npm :: PackageFormat
pattern PackageFormat_Nuget :: PackageFormat
pattern PackageFormat_Pypi :: PackageFormat
newtype PackageVersionErrorCode
PackageVersionErrorCode' :: Text -> PackageVersionErrorCode
[fromPackageVersionErrorCode] :: PackageVersionErrorCode -> Text
pattern PackageVersionErrorCode_ALREADY_EXISTS :: PackageVersionErrorCode
pattern PackageVersionErrorCode_MISMATCHED_REVISION :: PackageVersionErrorCode
pattern PackageVersionErrorCode_MISMATCHED_STATUS :: PackageVersionErrorCode
pattern PackageVersionErrorCode_NOT_ALLOWED :: PackageVersionErrorCode
pattern PackageVersionErrorCode_NOT_FOUND :: PackageVersionErrorCode
pattern PackageVersionErrorCode_SKIPPED :: PackageVersionErrorCode
newtype PackageVersionSortType
PackageVersionSortType' :: Text -> PackageVersionSortType
[fromPackageVersionSortType] :: PackageVersionSortType -> Text
pattern PackageVersionSortType_PUBLISHED_TIME :: PackageVersionSortType
newtype PackageVersionStatus
PackageVersionStatus' :: Text -> PackageVersionStatus
[fromPackageVersionStatus] :: PackageVersionStatus -> Text
pattern PackageVersionStatus_Archived :: PackageVersionStatus
pattern PackageVersionStatus_Deleted :: PackageVersionStatus
pattern PackageVersionStatus_Disposed :: PackageVersionStatus
pattern PackageVersionStatus_Published :: PackageVersionStatus
pattern PackageVersionStatus_Unfinished :: PackageVersionStatus
pattern PackageVersionStatus_Unlisted :: PackageVersionStatus

-- | Contains details about a package version asset.
--   
--   <i>See:</i> <a>newAssetSummary</a> smart constructor.
data AssetSummary
AssetSummary' :: Maybe Integer -> Maybe (HashMap HashAlgorithm Text) -> Text -> AssetSummary

-- | The size of the asset.
[$sel:size:AssetSummary'] :: AssetSummary -> Maybe Integer

-- | The hashes of the asset.
[$sel:hashes:AssetSummary'] :: AssetSummary -> Maybe (HashMap HashAlgorithm Text)

-- | The name of the asset.
[$sel:name:AssetSummary'] :: AssetSummary -> Text

-- | Create a value of <a>AssetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:AssetSummary'</a>, <a>assetSummary_size</a> - The size of
--   the asset.
--   
--   <a>$sel:hashes:AssetSummary'</a>, <a>assetSummary_hashes</a> - The
--   hashes of the asset.
--   
--   <a>$sel:name:AssetSummary'</a>, <a>assetSummary_name</a> - The name of
--   the asset.
newAssetSummary :: Text -> AssetSummary

-- | The size of the asset.
assetSummary_size :: Lens' AssetSummary (Maybe Integer)

-- | The hashes of the asset.
assetSummary_hashes :: Lens' AssetSummary (Maybe (HashMap HashAlgorithm Text))

-- | The name of the asset.
assetSummary_name :: Lens' AssetSummary Text

-- | Information about a domain. A domain is a container for repositories.
--   When you create a domain, it is empty until you add one or more
--   repositories.
--   
--   <i>See:</i> <a>newDomainDescription</a> smart constructor.
data DomainDescription
DomainDescription' :: Maybe Integer -> Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> DomainDescription

-- | The total size of all assets in the domain.
[$sel:assetSizeBytes:DomainDescription'] :: DomainDescription -> Maybe Integer

-- | The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
[$sel:status:DomainDescription'] :: DomainDescription -> Maybe DomainStatus

-- | The Amazon Resource Name (ARN) of the domain.
[$sel:arn:DomainDescription'] :: DomainDescription -> Maybe Text

-- | A timestamp that represents the date and time the domain was created.
[$sel:createdTime:DomainDescription'] :: DomainDescription -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to
--   store package assets in the domain.
[$sel:s3BucketArn:DomainDescription'] :: DomainDescription -> Maybe Text

-- | The AWS account ID that owns the domain.
[$sel:owner:DomainDescription'] :: DomainDescription -> Maybe Text

-- | The number of repositories in the domain.
[$sel:repositoryCount:DomainDescription'] :: DomainDescription -> Maybe Int

-- | The name of the domain.
[$sel:name:DomainDescription'] :: DomainDescription -> Maybe Text

-- | The ARN of an AWS Key Management Service (AWS KMS) key associated with
--   a domain.
[$sel:encryptionKey:DomainDescription'] :: DomainDescription -> Maybe Text

-- | Create a value of <a>DomainDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetSizeBytes:DomainDescription'</a>,
--   <a>domainDescription_assetSizeBytes</a> - The total size of all assets
--   in the domain.
--   
--   <a>$sel:status:DomainDescription'</a>, <a>domainDescription_status</a>
--   - The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
--   
--   <a>$sel:arn:DomainDescription'</a>, <a>domainDescription_arn</a> - The
--   Amazon Resource Name (ARN) of the domain.
--   
--   <a>$sel:createdTime:DomainDescription'</a>,
--   <a>domainDescription_createdTime</a> - A timestamp that represents the
--   date and time the domain was created.
--   
--   <a>$sel:s3BucketArn:DomainDescription'</a>,
--   <a>domainDescription_s3BucketArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon S3 bucket that is used to store package assets in the
--   domain.
--   
--   <a>$sel:owner:DomainDescription'</a>, <a>domainDescription_owner</a> -
--   The AWS account ID that owns the domain.
--   
--   <a>$sel:repositoryCount:DomainDescription'</a>,
--   <a>domainDescription_repositoryCount</a> - The number of repositories
--   in the domain.
--   
--   <a>$sel:name:DomainDescription'</a>, <a>domainDescription_name</a> -
--   The name of the domain.
--   
--   <a>$sel:encryptionKey:DomainDescription'</a>,
--   <a>domainDescription_encryptionKey</a> - The ARN of an AWS Key
--   Management Service (AWS KMS) key associated with a domain.
newDomainDescription :: DomainDescription

-- | The total size of all assets in the domain.
domainDescription_assetSizeBytes :: Lens' DomainDescription (Maybe Integer)

-- | The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
domainDescription_status :: Lens' DomainDescription (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) of the domain.
domainDescription_arn :: Lens' DomainDescription (Maybe Text)

-- | A timestamp that represents the date and time the domain was created.
domainDescription_createdTime :: Lens' DomainDescription (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to
--   store package assets in the domain.
domainDescription_s3BucketArn :: Lens' DomainDescription (Maybe Text)

-- | The AWS account ID that owns the domain.
domainDescription_owner :: Lens' DomainDescription (Maybe Text)

-- | The number of repositories in the domain.
domainDescription_repositoryCount :: Lens' DomainDescription (Maybe Int)

-- | The name of the domain.
domainDescription_name :: Lens' DomainDescription (Maybe Text)

-- | The ARN of an AWS Key Management Service (AWS KMS) key associated with
--   a domain.
domainDescription_encryptionKey :: Lens' DomainDescription (Maybe Text)

-- | Information about a domain, including its name, Amazon Resource Name
--   (ARN), and status. The <a>ListDomains</a> operation returns a list of
--   <tt>DomainSummary</tt> objects.
--   
--   <i>See:</i> <a>newDomainSummary</a> smart constructor.
data DomainSummary
DomainSummary' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> DomainSummary

-- | A string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
[$sel:status:DomainSummary'] :: DomainSummary -> Maybe DomainStatus

-- | The ARN of the domain.
[$sel:arn:DomainSummary'] :: DomainSummary -> Maybe Text

-- | A timestamp that contains the date and time the domain was created.
[$sel:createdTime:DomainSummary'] :: DomainSummary -> Maybe POSIX

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:owner:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The name of the domain.
[$sel:name:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The key used to encrypt the domain.
[$sel:encryptionKey:DomainSummary'] :: DomainSummary -> Maybe Text

-- | Create a value of <a>DomainSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DomainSummary'</a>, <a>domainSummary_status</a> - A
--   string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
--   
--   <a>$sel:arn:DomainSummary'</a>, <a>domainSummary_arn</a> - The ARN of
--   the domain.
--   
--   <a>$sel:createdTime:DomainSummary'</a>,
--   <a>domainSummary_createdTime</a> - A timestamp that contains the date
--   and time the domain was created.
--   
--   <a>$sel:owner:DomainSummary'</a>, <a>domainSummary_owner</a> - The
--   12-digit account number of the AWS account that owns the domain. It
--   does not include dashes or spaces.
--   
--   <a>$sel:name:DomainSummary'</a>, <a>domainSummary_name</a> - The name
--   of the domain.
--   
--   <a>$sel:encryptionKey:DomainSummary'</a>,
--   <a>domainSummary_encryptionKey</a> - The key used to encrypt the
--   domain.
newDomainSummary :: DomainSummary

-- | A string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
domainSummary_status :: Lens' DomainSummary (Maybe DomainStatus)

-- | The ARN of the domain.
domainSummary_arn :: Lens' DomainSummary (Maybe Text)

-- | A timestamp that contains the date and time the domain was created.
domainSummary_createdTime :: Lens' DomainSummary (Maybe UTCTime)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
domainSummary_owner :: Lens' DomainSummary (Maybe Text)

-- | The name of the domain.
domainSummary_name :: Lens' DomainSummary (Maybe Text)

-- | The key used to encrypt the domain.
domainSummary_encryptionKey :: Lens' DomainSummary (Maybe Text)

-- | Details of the license data.
--   
--   <i>See:</i> <a>newLicenseInfo</a> smart constructor.
data LicenseInfo
LicenseInfo' :: Maybe Text -> Maybe Text -> LicenseInfo

-- | The URL for license data.
[$sel:url:LicenseInfo'] :: LicenseInfo -> Maybe Text

-- | Name of the license.
[$sel:name:LicenseInfo'] :: LicenseInfo -> Maybe Text

-- | Create a value of <a>LicenseInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:LicenseInfo'</a>, <a>licenseInfo_url</a> - The URL for
--   license data.
--   
--   <a>$sel:name:LicenseInfo'</a>, <a>licenseInfo_name</a> - Name of the
--   license.
newLicenseInfo :: LicenseInfo

-- | The URL for license data.
licenseInfo_url :: Lens' LicenseInfo (Maybe Text)

-- | Name of the license.
licenseInfo_name :: Lens' LicenseInfo (Maybe Text)

-- | Details about a package dependency.
--   
--   <i>See:</i> <a>newPackageDependency</a> smart constructor.
data PackageDependency
PackageDependency' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PackageDependency

-- | The type of a package dependency. The possible values depend on the
--   package type. Example types are <tt>compile</tt>, <tt>runtime</tt>,
--   and <tt>test</tt> for Maven packages, and <tt>dev</tt>, <tt>prod</tt>,
--   and <tt>optional</tt> for npm packages.
[$sel:dependencyType:PackageDependency'] :: PackageDependency -> Maybe Text

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:PackageDependency'] :: PackageDependency -> Maybe Text

-- | The name of the package that this package depends on.
[$sel:package:PackageDependency'] :: PackageDependency -> Maybe Text

-- | The required version, or version range, of the package that this
--   package depends on. The version format is specific to the package
--   type. For example, the following are possible valid required versions:
--   <tt>1.2.3</tt>, <tt>^2.3.4</tt>, or <tt>4.x</tt>.
[$sel:versionRequirement:PackageDependency'] :: PackageDependency -> Maybe Text

-- | Create a value of <a>PackageDependency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dependencyType:PackageDependency'</a>,
--   <a>packageDependency_dependencyType</a> - The type of a package
--   dependency. The possible values depend on the package type. Example
--   types are <tt>compile</tt>, <tt>runtime</tt>, and <tt>test</tt> for
--   Maven packages, and <tt>dev</tt>, <tt>prod</tt>, and <tt>optional</tt>
--   for npm packages.
--   
--   <a>$sel:namespace:PackageDependency'</a>,
--   <a>packageDependency_namespace</a> - The namespace of the package. The
--   package component that specifies its namespace depends on its type.
--   For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:package:PackageDependency'</a>,
--   <a>packageDependency_package</a> - The name of the package that this
--   package depends on.
--   
--   <a>$sel:versionRequirement:PackageDependency'</a>,
--   <a>packageDependency_versionRequirement</a> - The required version, or
--   version range, of the package that this package depends on. The
--   version format is specific to the package type. For example, the
--   following are possible valid required versions: <tt>1.2.3</tt>,
--   <tt>^2.3.4</tt>, or <tt>4.x</tt>.
newPackageDependency :: PackageDependency

-- | The type of a package dependency. The possible values depend on the
--   package type. Example types are <tt>compile</tt>, <tt>runtime</tt>,
--   and <tt>test</tt> for Maven packages, and <tt>dev</tt>, <tt>prod</tt>,
--   and <tt>optional</tt> for npm packages.
packageDependency_dependencyType :: Lens' PackageDependency (Maybe Text)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageDependency_namespace :: Lens' PackageDependency (Maybe Text)

-- | The name of the package that this package depends on.
packageDependency_package :: Lens' PackageDependency (Maybe Text)

-- | The required version, or version range, of the package that this
--   package depends on. The version format is specific to the package
--   type. For example, the following are possible valid required versions:
--   <tt>1.2.3</tt>, <tt>^2.3.4</tt>, or <tt>4.x</tt>.
packageDependency_versionRequirement :: Lens' PackageDependency (Maybe Text)

-- | Details about a package, including its format, namespace, and name.
--   The <a>ListPackages</a> operation returns a list of
--   <tt>PackageSummary</tt> objects.
--   
--   <i>See:</i> <a>newPackageSummary</a> smart constructor.
data PackageSummary
PackageSummary' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> PackageSummary

-- | The format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:PackageSummary'] :: PackageSummary -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:PackageSummary'] :: PackageSummary -> Maybe Text

-- | The name of the package.
[$sel:package:PackageSummary'] :: PackageSummary -> Maybe Text

-- | Create a value of <a>PackageSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:PackageSummary'</a>, <a>packageSummary_format</a> - The
--   format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:PackageSummary'</a>, <a>packageSummary_namespace</a>
--   - The namespace of the package. The package component that specifies
--   its namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:package:PackageSummary'</a>, <a>packageSummary_package</a> -
--   The name of the package.
newPackageSummary :: PackageSummary

-- | The format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
packageSummary_format :: Lens' PackageSummary (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageSummary_namespace :: Lens' PackageSummary (Maybe Text)

-- | The name of the package.
packageSummary_package :: Lens' PackageSummary (Maybe Text)

-- | Details about a package version.
--   
--   <i>See:</i> <a>newPackageVersionDescription</a> smart constructor.
data PackageVersionDescription
PackageVersionDescription' :: Maybe Text -> Maybe Text -> Maybe PackageVersionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [LicenseInfo] -> Maybe Text -> PackageVersionDescription

-- | A summary of the package version. The summary is extracted from the
--   package. The information in and detail level of the summary depends on
--   the package version's format.
[$sel:summary:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The homepage associated with the package.
[$sel:homePage:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:status:PackageVersionDescription'] :: PackageVersionDescription -> Maybe PackageVersionStatus

-- | The repository for the source code in the package version, or the
--   source code used to build it.
[$sel:sourceCodeRepository:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The name of the requested package.
[$sel:packageName:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | A timestamp that contains the date and time the package version was
--   published.
[$sel:publishedTime:PackageVersionDescription'] :: PackageVersionDescription -> Maybe POSIX

-- | The format of the package version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:format:PackageVersionDescription'] :: PackageVersionDescription -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The version of the package.
[$sel:version:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | The name of the package that is displayed. The <tt>displayName</tt>
--   varies depending on the package version's format. For example, if an
--   npm package is named <tt>ui</tt>, is in the namespace <tt>vue</tt>,
--   and has the format <tt>npm</tt>, then the <tt>displayName</tt> is
--   <tt>@vue/ui</tt>.
[$sel:displayName:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | Information about licenses associated with the package version.
[$sel:licenses:PackageVersionDescription'] :: PackageVersionDescription -> Maybe [LicenseInfo]

-- | The revision of the package version.
[$sel:revision:PackageVersionDescription'] :: PackageVersionDescription -> Maybe Text

-- | Create a value of <a>PackageVersionDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_summary</a> - A summary of the package
--   version. The summary is extracted from the package. The information in
--   and detail level of the summary depends on the package version's
--   format.
--   
--   <a>$sel:homePage:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_homePage</a> - The homepage associated
--   with the package.
--   
--   <a>$sel:status:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_status</a> - A string that contains the
--   status of the package version. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:sourceCodeRepository:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_sourceCodeRepository</a> - The repository
--   for the source code in the package version, or the source code used to
--   build it.
--   
--   <a>$sel:packageName:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_packageName</a> - The name of the
--   requested package.
--   
--   <a>$sel:publishedTime:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_publishedTime</a> - A timestamp that
--   contains the date and time the package version was published.
--   
--   <a>$sel:format:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_format</a> - The format of the package
--   version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:namespace:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:version:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_version</a> - The version of the package.
--   
--   <a>$sel:displayName:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_displayName</a> - The name of the package
--   that is displayed. The <tt>displayName</tt> varies depending on the
--   package version's format. For example, if an npm package is named
--   <tt>ui</tt>, is in the namespace <tt>vue</tt>, and has the format
--   <tt>npm</tt>, then the <tt>displayName</tt> is <tt>@vue/ui</tt>.
--   
--   <a>$sel:licenses:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_licenses</a> - Information about licenses
--   associated with the package version.
--   
--   <a>$sel:revision:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_revision</a> - The revision of the
--   package version.
newPackageVersionDescription :: PackageVersionDescription

-- | A summary of the package version. The summary is extracted from the
--   package. The information in and detail level of the summary depends on
--   the package version's format.
packageVersionDescription_summary :: Lens' PackageVersionDescription (Maybe Text)

-- | The homepage associated with the package.
packageVersionDescription_homePage :: Lens' PackageVersionDescription (Maybe Text)

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
packageVersionDescription_status :: Lens' PackageVersionDescription (Maybe PackageVersionStatus)

-- | The repository for the source code in the package version, or the
--   source code used to build it.
packageVersionDescription_sourceCodeRepository :: Lens' PackageVersionDescription (Maybe Text)

-- | The name of the requested package.
packageVersionDescription_packageName :: Lens' PackageVersionDescription (Maybe Text)

-- | A timestamp that contains the date and time the package version was
--   published.
packageVersionDescription_publishedTime :: Lens' PackageVersionDescription (Maybe UTCTime)

-- | The format of the package version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
packageVersionDescription_format :: Lens' PackageVersionDescription (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageVersionDescription_namespace :: Lens' PackageVersionDescription (Maybe Text)

-- | The version of the package.
packageVersionDescription_version :: Lens' PackageVersionDescription (Maybe Text)

-- | The name of the package that is displayed. The <tt>displayName</tt>
--   varies depending on the package version's format. For example, if an
--   npm package is named <tt>ui</tt>, is in the namespace <tt>vue</tt>,
--   and has the format <tt>npm</tt>, then the <tt>displayName</tt> is
--   <tt>@vue/ui</tt>.
packageVersionDescription_displayName :: Lens' PackageVersionDescription (Maybe Text)

-- | Information about licenses associated with the package version.
packageVersionDescription_licenses :: Lens' PackageVersionDescription (Maybe [LicenseInfo])

-- | The revision of the package version.
packageVersionDescription_revision :: Lens' PackageVersionDescription (Maybe Text)

-- | An error associated with package.
--   
--   <i>See:</i> <a>newPackageVersionError</a> smart constructor.
data PackageVersionError
PackageVersionError' :: Maybe PackageVersionErrorCode -> Maybe Text -> PackageVersionError

-- | The error code associated with the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
[$sel:errorCode:PackageVersionError'] :: PackageVersionError -> Maybe PackageVersionErrorCode

-- | The error message associated with the error.
[$sel:errorMessage:PackageVersionError'] :: PackageVersionError -> Maybe Text

-- | Create a value of <a>PackageVersionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PackageVersionError'</a>,
--   <a>packageVersionError_errorCode</a> - The error code associated with
--   the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:errorMessage:PackageVersionError'</a>,
--   <a>packageVersionError_errorMessage</a> - The error message associated
--   with the error.
newPackageVersionError :: PackageVersionError

-- | The error code associated with the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
packageVersionError_errorCode :: Lens' PackageVersionError (Maybe PackageVersionErrorCode)

-- | The error message associated with the error.
packageVersionError_errorMessage :: Lens' PackageVersionError (Maybe Text)

-- | Details about a package version, including its status, version, and
--   revision. The <a>ListPackageVersions</a> operation returns a list of
--   <tt>PackageVersionSummary</tt> objects.
--   
--   <i>See:</i> <a>newPackageVersionSummary</a> smart constructor.
data PackageVersionSummary
PackageVersionSummary' :: Maybe Text -> Text -> PackageVersionStatus -> PackageVersionSummary

-- | The revision associated with a package version.
[$sel:revision:PackageVersionSummary'] :: PackageVersionSummary -> Maybe Text

-- | Information about a package version.
[$sel:version:PackageVersionSummary'] :: PackageVersionSummary -> Text

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:status:PackageVersionSummary'] :: PackageVersionSummary -> PackageVersionStatus

-- | Create a value of <a>PackageVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_revision</a> - The revision associated with a
--   package version.
--   
--   <a>$sel:version:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_version</a> - Information about a package
--   version.
--   
--   <a>$sel:status:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_status</a> - A string that contains the
--   status of the package version. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
newPackageVersionSummary :: Text -> PackageVersionStatus -> PackageVersionSummary

-- | The revision associated with a package version.
packageVersionSummary_revision :: Lens' PackageVersionSummary (Maybe Text)

-- | Information about a package version.
packageVersionSummary_version :: Lens' PackageVersionSummary Text

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
packageVersionSummary_status :: Lens' PackageVersionSummary PackageVersionStatus

-- | The details of a repository stored in AWS CodeArtifact. A CodeArtifact
--   repository contains a set of package versions, each of which maps to a
--   set of assets. Repositories are polyglot—a single repository can
--   contain packages of any supported type. Each repository exposes
--   endpoints for fetching and publishing packages using tools like the
--   <tt>npm</tt> CLI, the Maven CLI (<tt>mvn</tt>), and <tt>pip</tt>. You
--   can create up to 100 repositories per AWS account.
--   
--   <i>See:</i> <a>newRepositoryDescription</a> smart constructor.
data RepositoryDescription
RepositoryDescription' :: Maybe [UpstreamRepositoryInfo] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [RepositoryExternalConnectionInfo] -> Maybe Text -> RepositoryDescription

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
[$sel:upstreams:RepositoryDescription'] :: RepositoryDescription -> Maybe [UpstreamRepositoryInfo]

-- | The Amazon Resource Name (ARN) of the repository.
[$sel:arn:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
[$sel:domainOwner:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The name of the domain that contains the repository.
[$sel:domainName:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The name of the repository.
[$sel:name:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | The 12-digit account number of the AWS account that manages the
--   repository.
[$sel:administratorAccount:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | An array of external connections associated with the repository.
[$sel:externalConnections:RepositoryDescription'] :: RepositoryDescription -> Maybe [RepositoryExternalConnectionInfo]

-- | A text description of the repository.
[$sel:description:RepositoryDescription'] :: RepositoryDescription -> Maybe Text

-- | Create a value of <a>RepositoryDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upstreams:RepositoryDescription'</a>,
--   <a>repositoryDescription_upstreams</a> - A list of upstream
--   repositories to associate with the repository. The order of the
--   upstream repositories in the list determines their priority order when
--   AWS CodeArtifact looks for a requested package version. For more
--   information, see <a>Working with upstream repositories</a>.
--   
--   <a>$sel:arn:RepositoryDescription'</a>,
--   <a>repositoryDescription_arn</a> - The Amazon Resource Name (ARN) of
--   the repository.
--   
--   <a>$sel:domainOwner:RepositoryDescription'</a>,
--   <a>repositoryDescription_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain that contains the repository.
--   It does not include dashes or spaces.
--   
--   <a>$sel:domainName:RepositoryDescription'</a>,
--   <a>repositoryDescription_domainName</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:name:RepositoryDescription'</a>,
--   <a>repositoryDescription_name</a> - The name of the repository.
--   
--   <a>$sel:administratorAccount:RepositoryDescription'</a>,
--   <a>repositoryDescription_administratorAccount</a> - The 12-digit
--   account number of the AWS account that manages the repository.
--   
--   <a>$sel:externalConnections:RepositoryDescription'</a>,
--   <a>repositoryDescription_externalConnections</a> - An array of
--   external connections associated with the repository.
--   
--   <a>$sel:description:RepositoryDescription'</a>,
--   <a>repositoryDescription_description</a> - A text description of the
--   repository.
newRepositoryDescription :: RepositoryDescription

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
repositoryDescription_upstreams :: Lens' RepositoryDescription (Maybe [UpstreamRepositoryInfo])

-- | The Amazon Resource Name (ARN) of the repository.
repositoryDescription_arn :: Lens' RepositoryDescription (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
repositoryDescription_domainOwner :: Lens' RepositoryDescription (Maybe Text)

-- | The name of the domain that contains the repository.
repositoryDescription_domainName :: Lens' RepositoryDescription (Maybe Text)

-- | The name of the repository.
repositoryDescription_name :: Lens' RepositoryDescription (Maybe Text)

-- | The 12-digit account number of the AWS account that manages the
--   repository.
repositoryDescription_administratorAccount :: Lens' RepositoryDescription (Maybe Text)

-- | An array of external connections associated with the repository.
repositoryDescription_externalConnections :: Lens' RepositoryDescription (Maybe [RepositoryExternalConnectionInfo])

-- | A text description of the repository.
repositoryDescription_description :: Lens' RepositoryDescription (Maybe Text)

-- | Contains information about the external connection of a repository.
--   
--   <i>See:</i> <a>newRepositoryExternalConnectionInfo</a> smart
--   constructor.
data RepositoryExternalConnectionInfo
RepositoryExternalConnectionInfo' :: Maybe Text -> Maybe ExternalConnectionStatus -> Maybe PackageFormat -> RepositoryExternalConnectionInfo

-- | The name of the external connection associated with a repository.
[$sel:externalConnectionName:RepositoryExternalConnectionInfo'] :: RepositoryExternalConnectionInfo -> Maybe Text

-- | The status of the external connection of a repository. There is one
--   valid value, <tt>Available</tt>.
[$sel:status:RepositoryExternalConnectionInfo'] :: RepositoryExternalConnectionInfo -> Maybe ExternalConnectionStatus

-- | The package format associated with a repository's external connection.
--   The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:packageFormat:RepositoryExternalConnectionInfo'] :: RepositoryExternalConnectionInfo -> Maybe PackageFormat

-- | Create a value of <a>RepositoryExternalConnectionInfo</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalConnectionName:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_externalConnectionName</a> - The
--   name of the external connection associated with a repository.
--   
--   <a>$sel:status:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_status</a> - The status of the
--   external connection of a repository. There is one valid value,
--   <tt>Available</tt>.
--   
--   <a>$sel:packageFormat:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_packageFormat</a> - The package
--   format associated with a repository's external connection. The valid
--   package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
newRepositoryExternalConnectionInfo :: RepositoryExternalConnectionInfo

-- | The name of the external connection associated with a repository.
repositoryExternalConnectionInfo_externalConnectionName :: Lens' RepositoryExternalConnectionInfo (Maybe Text)

-- | The status of the external connection of a repository. There is one
--   valid value, <tt>Available</tt>.
repositoryExternalConnectionInfo_status :: Lens' RepositoryExternalConnectionInfo (Maybe ExternalConnectionStatus)

-- | The package format associated with a repository's external connection.
--   The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
repositoryExternalConnectionInfo_packageFormat :: Lens' RepositoryExternalConnectionInfo (Maybe PackageFormat)

-- | Details about a repository, including its Amazon Resource Name (ARN),
--   description, and domain information. The <a>ListRepositories</a>
--   operation returns a list of <tt>RepositorySummary</tt> objects.
--   
--   <i>See:</i> <a>newRepositorySummary</a> smart constructor.
data RepositorySummary
RepositorySummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RepositorySummary

-- | The ARN of the repository.
[$sel:arn:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The name of the domain that contains the repository.
[$sel:domainName:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The name of the repository.
[$sel:name:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The AWS account ID that manages the repository.
[$sel:administratorAccount:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | The description of the repository.
[$sel:description:RepositorySummary'] :: RepositorySummary -> Maybe Text

-- | Create a value of <a>RepositorySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RepositorySummary'</a>, <a>repositorySummary_arn</a> - The
--   ARN of the repository.
--   
--   <a>$sel:domainOwner:RepositorySummary'</a>,
--   <a>repositorySummary_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domainName:RepositorySummary'</a>,
--   <a>repositorySummary_domainName</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:name:RepositorySummary'</a>, <a>repositorySummary_name</a> -
--   The name of the repository.
--   
--   <a>$sel:administratorAccount:RepositorySummary'</a>,
--   <a>repositorySummary_administratorAccount</a> - The AWS account ID
--   that manages the repository.
--   
--   <a>$sel:description:RepositorySummary'</a>,
--   <a>repositorySummary_description</a> - The description of the
--   repository.
newRepositorySummary :: RepositorySummary

-- | The ARN of the repository.
repositorySummary_arn :: Lens' RepositorySummary (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
repositorySummary_domainOwner :: Lens' RepositorySummary (Maybe Text)

-- | The name of the domain that contains the repository.
repositorySummary_domainName :: Lens' RepositorySummary (Maybe Text)

-- | The name of the repository.
repositorySummary_name :: Lens' RepositorySummary (Maybe Text)

-- | The AWS account ID that manages the repository.
repositorySummary_administratorAccount :: Lens' RepositorySummary (Maybe Text)

-- | The description of the repository.
repositorySummary_description :: Lens' RepositorySummary (Maybe Text)

-- | An AWS CodeArtifact resource policy that contains a resource ARN,
--   document details, and a revision.
--   
--   <i>See:</i> <a>newResourcePolicy</a> smart constructor.
data ResourcePolicy
ResourcePolicy' :: Maybe Text -> Maybe Text -> Maybe Text -> ResourcePolicy

-- | The ARN of the resource associated with the resource policy
[$sel:resourceArn:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | The resource policy formatted in JSON.
[$sel:document:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | The current revision of the resource policy.
[$sel:revision:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | Create a value of <a>ResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourcePolicy'</a>,
--   <a>resourcePolicy_resourceArn</a> - The ARN of the resource associated
--   with the resource policy
--   
--   <a>$sel:document:ResourcePolicy'</a>, <a>resourcePolicy_document</a> -
--   The resource policy formatted in JSON.
--   
--   <a>$sel:revision:ResourcePolicy'</a>, <a>resourcePolicy_revision</a> -
--   The current revision of the resource policy.
newResourcePolicy :: ResourcePolicy

-- | The ARN of the resource associated with the resource policy
resourcePolicy_resourceArn :: Lens' ResourcePolicy (Maybe Text)

-- | The resource policy formatted in JSON.
resourcePolicy_document :: Lens' ResourcePolicy (Maybe Text)

-- | The current revision of the resource policy.
resourcePolicy_revision :: Lens' ResourcePolicy (Maybe Text)

-- | Contains the revision and status of a package version.
--   
--   <i>See:</i> <a>newSuccessfulPackageVersionInfo</a> smart constructor.
data SuccessfulPackageVersionInfo
SuccessfulPackageVersionInfo' :: Maybe PackageVersionStatus -> Maybe Text -> SuccessfulPackageVersionInfo

-- | The status of a package version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:status:SuccessfulPackageVersionInfo'] :: SuccessfulPackageVersionInfo -> Maybe PackageVersionStatus

-- | The revision of a package version.
[$sel:revision:SuccessfulPackageVersionInfo'] :: SuccessfulPackageVersionInfo -> Maybe Text

-- | Create a value of <a>SuccessfulPackageVersionInfo</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SuccessfulPackageVersionInfo'</a>,
--   <a>successfulPackageVersionInfo_status</a> - The status of a package
--   version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:revision:SuccessfulPackageVersionInfo'</a>,
--   <a>successfulPackageVersionInfo_revision</a> - The revision of a
--   package version.
newSuccessfulPackageVersionInfo :: SuccessfulPackageVersionInfo

-- | The status of a package version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
successfulPackageVersionInfo_status :: Lens' SuccessfulPackageVersionInfo (Maybe PackageVersionStatus)

-- | The revision of a package version.
successfulPackageVersionInfo_revision :: Lens' SuccessfulPackageVersionInfo (Maybe Text)

-- | A tag is a key-value pair that can be used to manage, search for, or
--   filter resources in AWS CodeArtifact.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Tag

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The tag value.
tag_value :: Lens' Tag Text

-- | Information about an upstream repository. A list of
--   <tt>UpstreamRepository</tt> objects is an input parameter to
--   <a>CreateRepository</a> and <a>UpdateRepository</a>.
--   
--   <i>See:</i> <a>newUpstreamRepository</a> smart constructor.
data UpstreamRepository
UpstreamRepository' :: Text -> UpstreamRepository

-- | The name of an upstream repository.
[$sel:repositoryName:UpstreamRepository'] :: UpstreamRepository -> Text

-- | Create a value of <a>UpstreamRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpstreamRepository'</a>,
--   <a>upstreamRepository_repositoryName</a> - The name of an upstream
--   repository.
newUpstreamRepository :: Text -> UpstreamRepository

-- | The name of an upstream repository.
upstreamRepository_repositoryName :: Lens' UpstreamRepository Text

-- | Information about an upstream repository.
--   
--   <i>See:</i> <a>newUpstreamRepositoryInfo</a> smart constructor.
data UpstreamRepositoryInfo
UpstreamRepositoryInfo' :: Maybe Text -> UpstreamRepositoryInfo

-- | The name of an upstream repository.
[$sel:repositoryName:UpstreamRepositoryInfo'] :: UpstreamRepositoryInfo -> Maybe Text

-- | Create a value of <a>UpstreamRepositoryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpstreamRepositoryInfo'</a>,
--   <a>upstreamRepositoryInfo_repositoryName</a> - The name of an upstream
--   repository.
newUpstreamRepositoryInfo :: UpstreamRepositoryInfo

-- | The name of an upstream repository.
upstreamRepositoryInfo_repositoryName :: Lens' UpstreamRepositoryInfo (Maybe Text)


-- | Adds or updates tags for a resource in AWS CodeArtifact.
module Amazonka.CodeArtifact.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to add or
--   update tags for.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags you want to modify or add to the resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to add or
--   update tags for.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags you
--   want to modify or add to the resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to add or
--   update tags for.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags you want to modify or add to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.TagResource.TagResource
instance GHC.Show.Show Amazonka.CodeArtifact.TagResource.TagResource
instance GHC.Read.Read Amazonka.CodeArtifact.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.CodeArtifact.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.CodeArtifact.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.CodeArtifact.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.CodeArtifact.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.TagResource.TagResource


-- | Sets the resource policy on a repository that specifies permissions to
--   access it.
--   
--   When you call <tt>PutRepositoryPermissionsPolicy</tt>, the resource
--   policy on the repository is ignored when evaluting permissions. This
--   ensures that the owner of a repository cannot lock themselves out of
--   the repository, which would prevent them from being able to update the
--   resource policy.
module Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy

-- | <i>See:</i> <a>newPutRepositoryPermissionsPolicy</a> smart
--   constructor.
data PutRepositoryPermissionsPolicy
PutRepositoryPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> PutRepositoryPermissionsPolicy

-- | Sets the revision of the resource policy that specifies permissions to
--   access the repository. This revision is used for optimistic locking,
--   which prevents others from overwriting your changes to the
--   repository's resource policy.
[$sel:policyRevision:PutRepositoryPermissionsPolicy'] :: PutRepositoryPermissionsPolicy -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:PutRepositoryPermissionsPolicy'] :: PutRepositoryPermissionsPolicy -> Maybe Text

-- | The name of the domain containing the repository to set the resource
--   policy on.
[$sel:domain:PutRepositoryPermissionsPolicy'] :: PutRepositoryPermissionsPolicy -> Text

-- | The name of the repository to set the resource policy on.
[$sel:repository:PutRepositoryPermissionsPolicy'] :: PutRepositoryPermissionsPolicy -> Text

-- | A valid displayable JSON Aspen policy string to be set as the access
--   control resource policy on the provided repository.
[$sel:policyDocument:PutRepositoryPermissionsPolicy'] :: PutRepositoryPermissionsPolicy -> Text

-- | Create a value of <a>PutRepositoryPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_policyRevision</a> - Sets the
--   revision of the resource policy that specifies permissions to access
--   the repository. This revision is used for optimistic locking, which
--   prevents others from overwriting your changes to the repository's
--   resource policy.
--   
--   <a>$sel:domainOwner:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_domain</a> - The name of the domain
--   containing the repository to set the resource policy on.
--   
--   <a>$sel:repository:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_repository</a> - The name of the
--   repository to set the resource policy on.
--   
--   <a>$sel:policyDocument:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_policyDocument</a> - A valid
--   displayable JSON Aspen policy string to be set as the access control
--   resource policy on the provided repository.
newPutRepositoryPermissionsPolicy :: Text -> Text -> Text -> PutRepositoryPermissionsPolicy

-- | Sets the revision of the resource policy that specifies permissions to
--   access the repository. This revision is used for optimistic locking,
--   which prevents others from overwriting your changes to the
--   repository's resource policy.
putRepositoryPermissionsPolicy_policyRevision :: Lens' PutRepositoryPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
putRepositoryPermissionsPolicy_domainOwner :: Lens' PutRepositoryPermissionsPolicy (Maybe Text)

-- | The name of the domain containing the repository to set the resource
--   policy on.
putRepositoryPermissionsPolicy_domain :: Lens' PutRepositoryPermissionsPolicy Text

-- | The name of the repository to set the resource policy on.
putRepositoryPermissionsPolicy_repository :: Lens' PutRepositoryPermissionsPolicy Text

-- | A valid displayable JSON Aspen policy string to be set as the access
--   control resource policy on the provided repository.
putRepositoryPermissionsPolicy_policyDocument :: Lens' PutRepositoryPermissionsPolicy Text

-- | <i>See:</i> <a>newPutRepositoryPermissionsPolicyResponse</a> smart
--   constructor.
data PutRepositoryPermissionsPolicyResponse
PutRepositoryPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> PutRepositoryPermissionsPolicyResponse

-- | The resource policy that was set after processing the request.
[$sel:policy:PutRepositoryPermissionsPolicyResponse'] :: PutRepositoryPermissionsPolicyResponse -> Maybe ResourcePolicy

-- | The response's http status code.
[$sel:httpStatus:PutRepositoryPermissionsPolicyResponse'] :: PutRepositoryPermissionsPolicyResponse -> Int

-- | Create a value of <a>PutRepositoryPermissionsPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:PutRepositoryPermissionsPolicyResponse'</a>,
--   <a>putRepositoryPermissionsPolicyResponse_policy</a> - The resource
--   policy that was set after processing the request.
--   
--   <a>$sel:httpStatus:PutRepositoryPermissionsPolicyResponse'</a>,
--   <a>putRepositoryPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newPutRepositoryPermissionsPolicyResponse :: Int -> PutRepositoryPermissionsPolicyResponse

-- | The resource policy that was set after processing the request.
putRepositoryPermissionsPolicyResponse_policy :: Lens' PutRepositoryPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
putRepositoryPermissionsPolicyResponse_httpStatus :: Lens' PutRepositoryPermissionsPolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance GHC.Show.Show Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance GHC.Read.Read Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance GHC.Classes.Eq Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance GHC.Generics.Generic Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicyResponse
instance GHC.Show.Show Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicyResponse
instance GHC.Read.Read Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicyResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.PutRepositoryPermissionsPolicy.PutRepositoryPermissionsPolicy


-- | Sets a resource policy on a domain that specifies permissions to
--   access it.
--   
--   When you call <tt>PutDomainPermissionsPolicy</tt>, the resource policy
--   on the domain is ignored when evaluting permissions. This ensures that
--   the owner of a domain cannot lock themselves out of the domain, which
--   would prevent them from being able to update the resource policy.
module Amazonka.CodeArtifact.PutDomainPermissionsPolicy

-- | <i>See:</i> <a>newPutDomainPermissionsPolicy</a> smart constructor.
data PutDomainPermissionsPolicy
PutDomainPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> Text -> PutDomainPermissionsPolicy

-- | The current revision of the resource policy to be set. This revision
--   is used for optimistic locking, which prevents others from overwriting
--   your changes to the domain's resource policy.
[$sel:policyRevision:PutDomainPermissionsPolicy'] :: PutDomainPermissionsPolicy -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:PutDomainPermissionsPolicy'] :: PutDomainPermissionsPolicy -> Maybe Text

-- | The name of the domain on which to set the resource policy.
[$sel:domain:PutDomainPermissionsPolicy'] :: PutDomainPermissionsPolicy -> Text

-- | A valid displayable JSON Aspen policy string to be set as the access
--   control resource policy on the provided domain.
[$sel:policyDocument:PutDomainPermissionsPolicy'] :: PutDomainPermissionsPolicy -> Text

-- | Create a value of <a>PutDomainPermissionsPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_policyRevision</a> - The current
--   revision of the resource policy to be set. This revision is used for
--   optimistic locking, which prevents others from overwriting your
--   changes to the domain's resource policy.
--   
--   <a>$sel:domainOwner:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_domain</a> - The name of the domain on
--   which to set the resource policy.
--   
--   <a>$sel:policyDocument:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_policyDocument</a> - A valid displayable
--   JSON Aspen policy string to be set as the access control resource
--   policy on the provided domain.
newPutDomainPermissionsPolicy :: Text -> Text -> PutDomainPermissionsPolicy

-- | The current revision of the resource policy to be set. This revision
--   is used for optimistic locking, which prevents others from overwriting
--   your changes to the domain's resource policy.
putDomainPermissionsPolicy_policyRevision :: Lens' PutDomainPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
putDomainPermissionsPolicy_domainOwner :: Lens' PutDomainPermissionsPolicy (Maybe Text)

-- | The name of the domain on which to set the resource policy.
putDomainPermissionsPolicy_domain :: Lens' PutDomainPermissionsPolicy Text

-- | A valid displayable JSON Aspen policy string to be set as the access
--   control resource policy on the provided domain.
putDomainPermissionsPolicy_policyDocument :: Lens' PutDomainPermissionsPolicy Text

-- | <i>See:</i> <a>newPutDomainPermissionsPolicyResponse</a> smart
--   constructor.
data PutDomainPermissionsPolicyResponse
PutDomainPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> PutDomainPermissionsPolicyResponse

-- | The resource policy that was set after processing the request.
[$sel:policy:PutDomainPermissionsPolicyResponse'] :: PutDomainPermissionsPolicyResponse -> Maybe ResourcePolicy

-- | The response's http status code.
[$sel:httpStatus:PutDomainPermissionsPolicyResponse'] :: PutDomainPermissionsPolicyResponse -> Int

-- | Create a value of <a>PutDomainPermissionsPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:PutDomainPermissionsPolicyResponse'</a>,
--   <a>putDomainPermissionsPolicyResponse_policy</a> - The resource policy
--   that was set after processing the request.
--   
--   <a>$sel:httpStatus:PutDomainPermissionsPolicyResponse'</a>,
--   <a>putDomainPermissionsPolicyResponse_httpStatus</a> - The response's
--   http status code.
newPutDomainPermissionsPolicyResponse :: Int -> PutDomainPermissionsPolicyResponse

-- | The resource policy that was set after processing the request.
putDomainPermissionsPolicyResponse_policy :: Lens' PutDomainPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
putDomainPermissionsPolicyResponse_httpStatus :: Lens' PutDomainPermissionsPolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance GHC.Show.Show Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance GHC.Read.Read Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance GHC.Classes.Eq Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance GHC.Generics.Generic Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicyResponse
instance GHC.Show.Show Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicyResponse
instance GHC.Read.Read Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicyResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.PutDomainPermissionsPolicy.PutDomainPermissionsPolicy


-- | Gets information about AWS tags for a specified Amazon Resource Name
--   (ARN) in AWS CodeArtifact.
module Amazonka.CodeArtifact.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource to get tags for.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource to get tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource to get tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | A list of tag key and value pairs associated with the specified
--   resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key and value
--   pairs associated with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A list of tag key and value pairs associated with the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListTagsForResource.ListTagsForResource


-- | Returns a list of <a>RepositorySummary</a> objects. Each
--   <tt>RepositorySummary</tt> contains information about a repository in
--   the specified domain and that matches the input parameters.
--   
--   This operation returns paginated results.
module Amazonka.CodeArtifact.ListRepositoriesInDomain

-- | <i>See:</i> <a>newListRepositoriesInDomain</a> smart constructor.
data ListRepositoriesInDomain
ListRepositoriesInDomain' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListRepositoriesInDomain

-- | A prefix used to filter returned repositories. Only repositories with
--   names that start with <tt>repositoryPrefix</tt> are returned.
[$sel:repositoryPrefix:ListRepositoriesInDomain'] :: ListRepositoriesInDomain -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:ListRepositoriesInDomain'] :: ListRepositoriesInDomain -> Maybe Text

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListRepositoriesInDomain'] :: ListRepositoriesInDomain -> Maybe Text

-- | Filter the list of repositories to only include those that are managed
--   by the AWS account ID.
[$sel:administratorAccount:ListRepositoriesInDomain'] :: ListRepositoriesInDomain -> Maybe Text

-- | The maximum number of results to return per page.
[$sel:maxResults:ListRepositoriesInDomain'] :: ListRepositoriesInDomain -> Maybe Natural

-- | The name of the domain that contains the returned list of
--   repositories.
[$sel:domain:ListRepositoriesInDomain'] :: ListRepositoriesInDomain -> Text

-- | Create a value of <a>ListRepositoriesInDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryPrefix:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_repositoryPrefix</a> - A prefix used to
--   filter returned repositories. Only repositories with names that start
--   with <tt>repositoryPrefix</tt> are returned.
--   
--   <a>$sel:domainOwner:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:nextToken:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_nextToken</a> - The token for the next set
--   of results. Use the value returned in the previous response in the
--   next request to retrieve the next set of results.
--   
--   <a>$sel:administratorAccount:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_administratorAccount</a> - Filter the list
--   of repositories to only include those that are managed by the AWS
--   account ID.
--   
--   <a>$sel:maxResults:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_maxResults</a> - The maximum number of
--   results to return per page.
--   
--   <a>$sel:domain:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_domain</a> - The name of the domain that
--   contains the returned list of repositories.
newListRepositoriesInDomain :: Text -> ListRepositoriesInDomain

-- | A prefix used to filter returned repositories. Only repositories with
--   names that start with <tt>repositoryPrefix</tt> are returned.
listRepositoriesInDomain_repositoryPrefix :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listRepositoriesInDomain_domainOwner :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listRepositoriesInDomain_nextToken :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | Filter the list of repositories to only include those that are managed
--   by the AWS account ID.
listRepositoriesInDomain_administratorAccount :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | The maximum number of results to return per page.
listRepositoriesInDomain_maxResults :: Lens' ListRepositoriesInDomain (Maybe Natural)

-- | The name of the domain that contains the returned list of
--   repositories.
listRepositoriesInDomain_domain :: Lens' ListRepositoriesInDomain Text

-- | <i>See:</i> <a>newListRepositoriesInDomainResponse</a> smart
--   constructor.
data ListRepositoriesInDomainResponse
ListRepositoriesInDomainResponse' :: Maybe [RepositorySummary] -> Maybe Text -> Int -> ListRepositoriesInDomainResponse

-- | The returned list of repositories.
[$sel:repositories:ListRepositoriesInDomainResponse'] :: ListRepositoriesInDomainResponse -> Maybe [RepositorySummary]

-- | If there are additional results, this is the token for the next set of
--   results.
[$sel:nextToken:ListRepositoriesInDomainResponse'] :: ListRepositoriesInDomainResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRepositoriesInDomainResponse'] :: ListRepositoriesInDomainResponse -> Int

-- | Create a value of <a>ListRepositoriesInDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:ListRepositoriesInDomainResponse'</a>,
--   <a>listRepositoriesInDomainResponse_repositories</a> - The returned
--   list of repositories.
--   
--   <a>$sel:nextToken:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomainResponse_nextToken</a> - If there are
--   additional results, this is the token for the next set of results.
--   
--   <a>$sel:httpStatus:ListRepositoriesInDomainResponse'</a>,
--   <a>listRepositoriesInDomainResponse_httpStatus</a> - The response's
--   http status code.
newListRepositoriesInDomainResponse :: Int -> ListRepositoriesInDomainResponse

-- | The returned list of repositories.
listRepositoriesInDomainResponse_repositories :: Lens' ListRepositoriesInDomainResponse (Maybe [RepositorySummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listRepositoriesInDomainResponse_nextToken :: Lens' ListRepositoriesInDomainResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesInDomainResponse_httpStatus :: Lens' ListRepositoriesInDomainResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance GHC.Show.Show Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance GHC.Read.Read Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomainResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomainResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomainResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomainResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListRepositoriesInDomain.ListRepositoriesInDomain


-- | Returns a list of <a>RepositorySummary</a> objects. Each
--   <tt>RepositorySummary</tt> contains information about a repository in
--   the specified AWS account and that matches the input parameters.
--   
--   This operation returns paginated results.
module Amazonka.CodeArtifact.ListRepositories

-- | <i>See:</i> <a>newListRepositories</a> smart constructor.
data ListRepositories
ListRepositories' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListRepositories

-- | A prefix used to filter returned repositories. Only repositories with
--   names that start with <tt>repositoryPrefix</tt> are returned.
[$sel:repositoryPrefix:ListRepositories'] :: ListRepositories -> Maybe Text

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListRepositories'] :: ListRepositories -> Maybe Text

-- | The maximum number of results to return per page.
[$sel:maxResults:ListRepositories'] :: ListRepositories -> Maybe Natural

-- | Create a value of <a>ListRepositories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryPrefix:ListRepositories'</a>,
--   <a>listRepositories_repositoryPrefix</a> - A prefix used to filter
--   returned repositories. Only repositories with names that start with
--   <tt>repositoryPrefix</tt> are returned.
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositories_nextToken</a> - The token for the next set of
--   results. Use the value returned in the previous response in the next
--   request to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListRepositories'</a>,
--   <a>listRepositories_maxResults</a> - The maximum number of results to
--   return per page.
newListRepositories :: ListRepositories

-- | A prefix used to filter returned repositories. Only repositories with
--   names that start with <tt>repositoryPrefix</tt> are returned.
listRepositories_repositoryPrefix :: Lens' ListRepositories (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listRepositories_nextToken :: Lens' ListRepositories (Maybe Text)

-- | The maximum number of results to return per page.
listRepositories_maxResults :: Lens' ListRepositories (Maybe Natural)

-- | <i>See:</i> <a>newListRepositoriesResponse</a> smart constructor.
data ListRepositoriesResponse
ListRepositoriesResponse' :: Maybe [RepositorySummary] -> Maybe Text -> Int -> ListRepositoriesResponse

-- | The returned list of <a>RepositorySummary</a> objects.
[$sel:repositories:ListRepositoriesResponse'] :: ListRepositoriesResponse -> Maybe [RepositorySummary]

-- | If there are additional results, this is the token for the next set of
--   results.
[$sel:nextToken:ListRepositoriesResponse'] :: ListRepositoriesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRepositoriesResponse'] :: ListRepositoriesResponse -> Int

-- | Create a value of <a>ListRepositoriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_repositories</a> - The returned list of
--   <a>RepositorySummary</a> objects.
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositoriesResponse_nextToken</a> - If there are additional
--   results, this is the token for the next set of results.
--   
--   <a>$sel:httpStatus:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_httpStatus</a> - The response's http
--   status code.
newListRepositoriesResponse :: Int -> ListRepositoriesResponse

-- | The returned list of <a>RepositorySummary</a> objects.
listRepositoriesResponse_repositories :: Lens' ListRepositoriesResponse (Maybe [RepositorySummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listRepositoriesResponse_nextToken :: Lens' ListRepositoriesResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesResponse_httpStatus :: Lens' ListRepositoriesResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance GHC.Show.Show Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance GHC.Read.Read Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListRepositories.ListRepositoriesResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListRepositories.ListRepositoriesResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListRepositories.ListRepositoriesResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListRepositories.ListRepositoriesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListRepositories.ListRepositoriesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListRepositories.ListRepositories
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListRepositories.ListRepositories


-- | Returns a list of <a>PackageSummary</a> objects for packages in a
--   repository that match the request parameters.
--   
--   This operation returns paginated results.
module Amazonka.CodeArtifact.ListPackages

-- | <i>See:</i> <a>newListPackages</a> smart constructor.
data ListPackages
ListPackages' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> ListPackages

-- | The format of the packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:format:ListPackages'] :: ListPackages -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:ListPackages'] :: ListPackages -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:ListPackages'] :: ListPackages -> Maybe Text

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListPackages'] :: ListPackages -> Maybe Text

-- | A prefix used to filter returned packages. Only packages with names
--   that start with <tt>packagePrefix</tt> are returned.
[$sel:packagePrefix:ListPackages'] :: ListPackages -> Maybe Text

-- | The maximum number of results to return per page.
[$sel:maxResults:ListPackages'] :: ListPackages -> Maybe Natural

-- | The name of the domain that contains the repository that contains the
--   requested list of packages.
[$sel:domain:ListPackages'] :: ListPackages -> Text

-- | The name of the repository from which packages are to be listed.
[$sel:repository:ListPackages'] :: ListPackages -> Text

-- | Create a value of <a>ListPackages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackages'</a>, <a>listPackages_format</a> - The
--   format of the packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackages'</a>, <a>listPackages_namespace</a> -
--   The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackages'</a>, <a>listPackages_domainOwner</a>
--   - The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
--   
--   <a>$sel:nextToken:ListPackages'</a>, <a>listPackages_nextToken</a> -
--   The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
--   
--   <a>$sel:packagePrefix:ListPackages'</a>,
--   <a>listPackages_packagePrefix</a> - A prefix used to filter returned
--   packages. Only packages with names that start with
--   <tt>packagePrefix</tt> are returned.
--   
--   <a>$sel:maxResults:ListPackages'</a>, <a>listPackages_maxResults</a> -
--   The maximum number of results to return per page.
--   
--   <a>$sel:domain:ListPackages'</a>, <a>listPackages_domain</a> - The
--   name of the domain that contains the repository that contains the
--   requested list of packages.
--   
--   <a>$sel:repository:ListPackages'</a>, <a>listPackages_repository</a> -
--   The name of the repository from which packages are to be listed.
newListPackages :: Text -> Text -> ListPackages

-- | The format of the packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackages_format :: Lens' ListPackages (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackages_namespace :: Lens' ListPackages (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackages_domainOwner :: Lens' ListPackages (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackages_nextToken :: Lens' ListPackages (Maybe Text)

-- | A prefix used to filter returned packages. Only packages with names
--   that start with <tt>packagePrefix</tt> are returned.
listPackages_packagePrefix :: Lens' ListPackages (Maybe Text)

-- | The maximum number of results to return per page.
listPackages_maxResults :: Lens' ListPackages (Maybe Natural)

-- | The name of the domain that contains the repository that contains the
--   requested list of packages.
listPackages_domain :: Lens' ListPackages Text

-- | The name of the repository from which packages are to be listed.
listPackages_repository :: Lens' ListPackages Text

-- | <i>See:</i> <a>newListPackagesResponse</a> smart constructor.
data ListPackagesResponse
ListPackagesResponse' :: Maybe [PackageSummary] -> Maybe Text -> Int -> ListPackagesResponse

-- | The list of returned <a>PackageSummary</a> objects.
[$sel:packages:ListPackagesResponse'] :: ListPackagesResponse -> Maybe [PackageSummary]

-- | If there are additional results, this is the token for the next set of
--   results.
[$sel:nextToken:ListPackagesResponse'] :: ListPackagesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPackagesResponse'] :: ListPackagesResponse -> Int

-- | Create a value of <a>ListPackagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packages:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_packages</a> - The list of returned
--   <a>PackageSummary</a> objects.
--   
--   <a>$sel:nextToken:ListPackages'</a>,
--   <a>listPackagesResponse_nextToken</a> - If there are additional
--   results, this is the token for the next set of results.
--   
--   <a>$sel:httpStatus:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_httpStatus</a> - The response's http status
--   code.
newListPackagesResponse :: Int -> ListPackagesResponse

-- | The list of returned <a>PackageSummary</a> objects.
listPackagesResponse_packages :: Lens' ListPackagesResponse (Maybe [PackageSummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listPackagesResponse_nextToken :: Lens' ListPackagesResponse (Maybe Text)

-- | The response's http status code.
listPackagesResponse_httpStatus :: Lens' ListPackagesResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackages.ListPackages
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackages.ListPackages
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackages.ListPackages
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackages.ListPackages
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackages.ListPackagesResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackages.ListPackagesResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackages.ListPackagesResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackages.ListPackagesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListPackages.ListPackages
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackages.ListPackagesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeArtifact.ListPackages.ListPackages
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListPackages.ListPackages
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackages.ListPackages
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListPackages.ListPackages
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListPackages.ListPackages
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListPackages.ListPackages
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListPackages.ListPackages


-- | Returns a list of <a>PackageVersionSummary</a> objects for package
--   versions in a repository that match the request parameters.
--   
--   This operation returns paginated results.
module Amazonka.CodeArtifact.ListPackageVersions

-- | <i>See:</i> <a>newListPackageVersions</a> smart constructor.
data ListPackageVersions
ListPackageVersions' :: Maybe PackageVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe PackageVersionSortType -> Text -> Text -> PackageFormat -> Text -> ListPackageVersions

-- | A string that specifies the status of the package versions to include
--   in the returned list. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:status:ListPackageVersions'] :: ListPackageVersions -> Maybe PackageVersionStatus

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:ListPackageVersions'] :: ListPackageVersions -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:ListPackageVersions'] :: ListPackageVersions -> Maybe Text

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListPackageVersions'] :: ListPackageVersions -> Maybe Text

-- | The maximum number of results to return per page.
[$sel:maxResults:ListPackageVersions'] :: ListPackageVersions -> Maybe Natural

-- | How to sort the returned list of package versions.
[$sel:sortBy:ListPackageVersions'] :: ListPackageVersions -> Maybe PackageVersionSortType

-- | The name of the domain that contains the repository that contains the
--   returned package versions.
[$sel:domain:ListPackageVersions'] :: ListPackageVersions -> Text

-- | The name of the repository that contains the package.
[$sel:repository:ListPackageVersions'] :: ListPackageVersions -> Text

-- | The format of the returned packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:format:ListPackageVersions'] :: ListPackageVersions -> PackageFormat

-- | The name of the package for which you want to return a list of package
--   versions.
[$sel:package:ListPackageVersions'] :: ListPackageVersions -> Text

-- | Create a value of <a>ListPackageVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListPackageVersions'</a>,
--   <a>listPackageVersions_status</a> - A string that specifies the status
--   of the package versions to include in the returned list. It can be one
--   of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackageVersions'</a>,
--   <a>listPackageVersions_namespace</a> - The namespace of the package.
--   The package component that specifies its namespace depends on its
--   type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackageVersions'</a>,
--   <a>listPackageVersions_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:nextToken:ListPackageVersions'</a>,
--   <a>listPackageVersions_nextToken</a> - The token for the next set of
--   results. Use the value returned in the previous response in the next
--   request to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListPackageVersions'</a>,
--   <a>listPackageVersions_maxResults</a> - The maximum number of results
--   to return per page.
--   
--   <a>$sel:sortBy:ListPackageVersions'</a>,
--   <a>listPackageVersions_sortBy</a> - How to sort the returned list of
--   package versions.
--   
--   <a>$sel:domain:ListPackageVersions'</a>,
--   <a>listPackageVersions_domain</a> - The name of the domain that
--   contains the repository that contains the returned package versions.
--   
--   <a>$sel:repository:ListPackageVersions'</a>,
--   <a>listPackageVersions_repository</a> - The name of the repository
--   that contains the package.
--   
--   <a>$sel:format:ListPackageVersions'</a>,
--   <a>listPackageVersions_format</a> - The format of the returned
--   packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:ListPackageVersions'</a>,
--   <a>listPackageVersions_package</a> - The name of the package for which
--   you want to return a list of package versions.
newListPackageVersions :: Text -> Text -> PackageFormat -> Text -> ListPackageVersions

-- | A string that specifies the status of the package versions to include
--   in the returned list. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
listPackageVersions_status :: Lens' ListPackageVersions (Maybe PackageVersionStatus)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersions_namespace :: Lens' ListPackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackageVersions_domainOwner :: Lens' ListPackageVersions (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersions_nextToken :: Lens' ListPackageVersions (Maybe Text)

-- | The maximum number of results to return per page.
listPackageVersions_maxResults :: Lens' ListPackageVersions (Maybe Natural)

-- | How to sort the returned list of package versions.
listPackageVersions_sortBy :: Lens' ListPackageVersions (Maybe PackageVersionSortType)

-- | The name of the domain that contains the repository that contains the
--   returned package versions.
listPackageVersions_domain :: Lens' ListPackageVersions Text

-- | The name of the repository that contains the package.
listPackageVersions_repository :: Lens' ListPackageVersions Text

-- | The format of the returned packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackageVersions_format :: Lens' ListPackageVersions PackageFormat

-- | The name of the package for which you want to return a list of package
--   versions.
listPackageVersions_package :: Lens' ListPackageVersions Text

-- | <i>See:</i> <a>newListPackageVersionsResponse</a> smart constructor.
data ListPackageVersionsResponse
ListPackageVersionsResponse' :: Maybe PackageFormat -> Maybe Text -> Maybe [PackageVersionSummary] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> ListPackageVersionsResponse

-- | A format of the package. Valid package format values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:ListPackageVersionsResponse'] :: ListPackageVersionsResponse -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:ListPackageVersionsResponse'] :: ListPackageVersionsResponse -> Maybe Text

-- | The returned list of <a>PackageVersionSummary</a> objects.
[$sel:versions:ListPackageVersionsResponse'] :: ListPackageVersionsResponse -> Maybe [PackageVersionSummary]

-- | If there are additional results, this is the token for the next set of
--   results.
[$sel:nextToken:ListPackageVersionsResponse'] :: ListPackageVersionsResponse -> Maybe Text

-- | The name of the package.
[$sel:package:ListPackageVersionsResponse'] :: ListPackageVersionsResponse -> Maybe Text

-- | The default package version to display. This depends on the package
--   format:
--   
--   <ul>
--   <li>For Maven and PyPI packages, it's the most recently published
--   package version.</li>
--   <li>For npm packages, it's the version referenced by the
--   <tt>latest</tt> tag. If the <tt>latest</tt> tag is not set, it's the
--   most recently published package version.</li>
--   </ul>
[$sel:defaultDisplayVersion:ListPackageVersionsResponse'] :: ListPackageVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPackageVersionsResponse'] :: ListPackageVersionsResponse -> Int

-- | Create a value of <a>ListPackageVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_format</a> - A format of the package.
--   Valid package format values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versions:ListPackageVersionsResponse'</a>,
--   <a>listPackageVersionsResponse_versions</a> - The returned list of
--   <a>PackageVersionSummary</a> objects.
--   
--   <a>$sel:nextToken:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_nextToken</a> - If there are additional
--   results, this is the token for the next set of results.
--   
--   <a>$sel:package:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_package</a> - The name of the package.
--   
--   <a>$sel:defaultDisplayVersion:ListPackageVersionsResponse'</a>,
--   <a>listPackageVersionsResponse_defaultDisplayVersion</a> - The default
--   package version to display. This depends on the package format:
--   
--   <ul>
--   <li>For Maven and PyPI packages, it's the most recently published
--   package version.</li>
--   <li>For npm packages, it's the version referenced by the
--   <tt>latest</tt> tag. If the <tt>latest</tt> tag is not set, it's the
--   most recently published package version.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListPackageVersionsResponse'</a>,
--   <a>listPackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListPackageVersionsResponse :: Int -> ListPackageVersionsResponse

-- | A format of the package. Valid package format values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
listPackageVersionsResponse_format :: Lens' ListPackageVersionsResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionsResponse_namespace :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The returned list of <a>PackageVersionSummary</a> objects.
listPackageVersionsResponse_versions :: Lens' ListPackageVersionsResponse (Maybe [PackageVersionSummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listPackageVersionsResponse_nextToken :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The name of the package.
listPackageVersionsResponse_package :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The default package version to display. This depends on the package
--   format:
--   
--   <ul>
--   <li>For Maven and PyPI packages, it's the most recently published
--   package version.</li>
--   <li>For npm packages, it's the version referenced by the
--   <tt>latest</tt> tag. If the <tt>latest</tt> tag is not set, it's the
--   most recently published package version.</li>
--   </ul>
listPackageVersionsResponse_defaultDisplayVersion :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The response's http status code.
listPackageVersionsResponse_httpStatus :: Lens' ListPackageVersionsResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersionsResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersionsResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersionsResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersionsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListPackageVersions.ListPackageVersions


-- | Returns the direct dependencies for a package version. The
--   dependencies are returned as <a>PackageDependency</a> objects.
--   CodeArtifact extracts the dependencies for a package version from the
--   metadata file for the package format (for example, the
--   <tt>package.json</tt> file for npm packages and the <tt>pom.xml</tt>
--   file for Maven). Any package version dependencies that are not listed
--   in the configuration file are not returned.
module Amazonka.CodeArtifact.ListPackageVersionDependencies

-- | <i>See:</i> <a>newListPackageVersionDependencies</a> smart
--   constructor.
data ListPackageVersionDependencies
ListPackageVersionDependencies' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionDependencies

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> Maybe Text

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> Maybe Text

-- | The name of the domain that contains the repository that contains the
--   requested package version dependencies.
[$sel:domain:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> Text

-- | The name of the repository that contains the requested package
--   version.
[$sel:repository:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> Text

-- | The format of the package with the requested dependencies. The valid
--   package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:format:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> PackageFormat

-- | The name of the package versions' package.
[$sel:package:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
[$sel:packageVersion:ListPackageVersionDependencies'] :: ListPackageVersionDependencies -> Text

-- | Create a value of <a>ListPackageVersionDependencies</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:nextToken:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_nextToken</a> - The token for the
--   next set of results. Use the value returned in the previous response
--   in the next request to retrieve the next set of results.
--   
--   <a>$sel:domain:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_domain</a> - The name of the domain
--   that contains the repository that contains the requested package
--   version dependencies.
--   
--   <a>$sel:repository:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_repository</a> - The name of the
--   repository that contains the requested package version.
--   
--   <a>$sel:format:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_format</a> - The format of the
--   package with the requested dependencies. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_package</a> - The name of the
--   package versions' package.
--   
--   <a>$sel:packageVersion:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_packageVersion</a> - A string that
--   contains the package version (for example, <tt>3.5.2</tt>).
newListPackageVersionDependencies :: Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionDependencies

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionDependencies_namespace :: Lens' ListPackageVersionDependencies (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackageVersionDependencies_domainOwner :: Lens' ListPackageVersionDependencies (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersionDependencies_nextToken :: Lens' ListPackageVersionDependencies (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   requested package version dependencies.
listPackageVersionDependencies_domain :: Lens' ListPackageVersionDependencies Text

-- | The name of the repository that contains the requested package
--   version.
listPackageVersionDependencies_repository :: Lens' ListPackageVersionDependencies Text

-- | The format of the package with the requested dependencies. The valid
--   package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackageVersionDependencies_format :: Lens' ListPackageVersionDependencies PackageFormat

-- | The name of the package versions' package.
listPackageVersionDependencies_package :: Lens' ListPackageVersionDependencies Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
listPackageVersionDependencies_packageVersion :: Lens' ListPackageVersionDependencies Text

-- | <i>See:</i> <a>newListPackageVersionDependenciesResponse</a> smart
--   constructor.
data ListPackageVersionDependenciesResponse
ListPackageVersionDependenciesResponse' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe [PackageDependency] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> ListPackageVersionDependenciesResponse

-- | A format that specifies the type of the package that contains the
--   returned dependencies. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Maybe Text

-- | The current revision associated with the package version.
[$sel:versionRevision:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Maybe Text

-- | The returned list of <a>PackageDependency</a> objects.
[$sel:dependencies:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Maybe [PackageDependency]

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Maybe Text

-- | The version of the package that is specified in the request.
[$sel:version:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Maybe Text

-- | The name of the package that contains the returned package versions
--   dependencies.
[$sel:package:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPackageVersionDependenciesResponse'] :: ListPackageVersionDependenciesResponse -> Int

-- | Create a value of <a>ListPackageVersionDependenciesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_format</a> - A format that
--   specifies the type of the package that contains the returned
--   dependencies. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_namespace</a> - The
--   namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versionRevision:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_versionRevision</a> - The
--   current revision associated with the package version.
--   
--   <a>$sel:dependencies:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_dependencies</a> - The
--   returned list of <a>PackageDependency</a> objects.
--   
--   <a>$sel:nextToken:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_nextToken</a> - The token
--   for the next set of results. Use the value returned in the previous
--   response in the next request to retrieve the next set of results.
--   
--   <a>$sel:version:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_version</a> - The version of
--   the package that is specified in the request.
--   
--   <a>$sel:package:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_package</a> - The name of
--   the package that contains the returned package versions dependencies.
--   
--   <a>$sel:httpStatus:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_httpStatus</a> - The
--   response's http status code.
newListPackageVersionDependenciesResponse :: Int -> ListPackageVersionDependenciesResponse

-- | A format that specifies the type of the package that contains the
--   returned dependencies. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
listPackageVersionDependenciesResponse_format :: Lens' ListPackageVersionDependenciesResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionDependenciesResponse_namespace :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The current revision associated with the package version.
listPackageVersionDependenciesResponse_versionRevision :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The returned list of <a>PackageDependency</a> objects.
listPackageVersionDependenciesResponse_dependencies :: Lens' ListPackageVersionDependenciesResponse (Maybe [PackageDependency])

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersionDependenciesResponse_nextToken :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The version of the package that is specified in the request.
listPackageVersionDependenciesResponse_version :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The name of the package that contains the returned package versions
--   dependencies.
listPackageVersionDependenciesResponse_package :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The response's http status code.
listPackageVersionDependenciesResponse_httpStatus :: Lens' ListPackageVersionDependenciesResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependenciesResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependenciesResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependenciesResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependenciesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependenciesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListPackageVersionDependencies.ListPackageVersionDependencies


-- | Returns a list of <a>AssetSummary</a> objects for assets in a package
--   version.
--   
--   This operation returns paginated results.
module Amazonka.CodeArtifact.ListPackageVersionAssets

-- | <i>See:</i> <a>newListPackageVersionAssets</a> smart constructor.
data ListPackageVersionAssets
ListPackageVersionAssets' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionAssets

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Maybe Text

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Maybe Text

-- | The maximum number of results to return per page.
[$sel:maxResults:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Maybe Natural

-- | The name of the domain that contains the repository associated with
--   the package version assets.
[$sel:domain:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Text

-- | The name of the repository that contains the package that contains the
--   returned package version assets.
[$sel:repository:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Text

-- | The format of the package that contains the returned package version
--   assets. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:format:ListPackageVersionAssets'] :: ListPackageVersionAssets -> PackageFormat

-- | The name of the package that contains the returned package version
--   assets.
[$sel:package:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
[$sel:packageVersion:ListPackageVersionAssets'] :: ListPackageVersionAssets -> Text

-- | Create a value of <a>ListPackageVersionAssets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:nextToken:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_nextToken</a> - The token for the next set
--   of results. Use the value returned in the previous response in the
--   next request to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_maxResults</a> - The maximum number of
--   results to return per page.
--   
--   <a>$sel:domain:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_domain</a> - The name of the domain that
--   contains the repository associated with the package version assets.
--   
--   <a>$sel:repository:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_repository</a> - The name of the
--   repository that contains the package that contains the returned
--   package version assets.
--   
--   <a>$sel:format:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_format</a> - The format of the package
--   that contains the returned package version assets. The valid package
--   types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_package</a> - The name of the package that
--   contains the returned package version assets.
--   
--   <a>$sel:packageVersion:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_packageVersion</a> - A string that
--   contains the package version (for example, <tt>3.5.2</tt>).
newListPackageVersionAssets :: Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionAssets

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionAssets_namespace :: Lens' ListPackageVersionAssets (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackageVersionAssets_domainOwner :: Lens' ListPackageVersionAssets (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersionAssets_nextToken :: Lens' ListPackageVersionAssets (Maybe Text)

-- | The maximum number of results to return per page.
listPackageVersionAssets_maxResults :: Lens' ListPackageVersionAssets (Maybe Natural)

-- | The name of the domain that contains the repository associated with
--   the package version assets.
listPackageVersionAssets_domain :: Lens' ListPackageVersionAssets Text

-- | The name of the repository that contains the package that contains the
--   returned package version assets.
listPackageVersionAssets_repository :: Lens' ListPackageVersionAssets Text

-- | The format of the package that contains the returned package version
--   assets. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackageVersionAssets_format :: Lens' ListPackageVersionAssets PackageFormat

-- | The name of the package that contains the returned package version
--   assets.
listPackageVersionAssets_package :: Lens' ListPackageVersionAssets Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
listPackageVersionAssets_packageVersion :: Lens' ListPackageVersionAssets Text

-- | <i>See:</i> <a>newListPackageVersionAssetsResponse</a> smart
--   constructor.
data ListPackageVersionAssetsResponse
ListPackageVersionAssetsResponse' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [AssetSummary] -> Int -> ListPackageVersionAssetsResponse

-- | The format of the package that contains the returned package version
--   assets.
[$sel:format:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Maybe Text

-- | The current revision associated with the package version.
[$sel:versionRevision:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Maybe Text

-- | If there are additional results, this is the token for the next set of
--   results.
[$sel:nextToken:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Maybe Text

-- | The version of the package associated with the returned assets.
[$sel:version:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Maybe Text

-- | The name of the package that contains the returned package version
--   assets.
[$sel:package:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Maybe Text

-- | The returned list of <a>AssetSummary</a> objects.
[$sel:assets:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Maybe [AssetSummary]

-- | The response's http status code.
[$sel:httpStatus:ListPackageVersionAssetsResponse'] :: ListPackageVersionAssetsResponse -> Int

-- | Create a value of <a>ListPackageVersionAssetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_format</a> - The format of the
--   package that contains the returned package version assets.
--   
--   <a>$sel:namespace:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_namespace</a> - The namespace of
--   the package. The package component that specifies its namespace
--   depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versionRevision:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_versionRevision</a> - The current
--   revision associated with the package version.
--   
--   <a>$sel:nextToken:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_nextToken</a> - If there are
--   additional results, this is the token for the next set of results.
--   
--   <a>$sel:version:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_version</a> - The version of the
--   package associated with the returned assets.
--   
--   <a>$sel:package:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_package</a> - The name of the
--   package that contains the returned package version assets.
--   
--   <a>$sel:assets:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_assets</a> - The returned list of
--   <a>AssetSummary</a> objects.
--   
--   <a>$sel:httpStatus:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_httpStatus</a> - The response's
--   http status code.
newListPackageVersionAssetsResponse :: Int -> ListPackageVersionAssetsResponse

-- | The format of the package that contains the returned package version
--   assets.
listPackageVersionAssetsResponse_format :: Lens' ListPackageVersionAssetsResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionAssetsResponse_namespace :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The current revision associated with the package version.
listPackageVersionAssetsResponse_versionRevision :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | If there are additional results, this is the token for the next set of
--   results.
listPackageVersionAssetsResponse_nextToken :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The version of the package associated with the returned assets.
listPackageVersionAssetsResponse_version :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The name of the package that contains the returned package version
--   assets.
listPackageVersionAssetsResponse_package :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The returned list of <a>AssetSummary</a> objects.
listPackageVersionAssetsResponse_assets :: Lens' ListPackageVersionAssetsResponse (Maybe [AssetSummary])

-- | The response's http status code.
listPackageVersionAssetsResponse_httpStatus :: Lens' ListPackageVersionAssetsResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssetsResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssetsResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssetsResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssetsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssetsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListPackageVersionAssets.ListPackageVersionAssets


-- | Returns a list of <a>DomainSummary</a> objects for all domains owned
--   by the AWS account that makes this call. Each returned
--   <tt>DomainSummary</tt> object contains information about a domain.
--   
--   This operation returns paginated results.
module Amazonka.CodeArtifact.ListDomains

-- | <i>See:</i> <a>newListDomains</a> smart constructor.
data ListDomains
ListDomains' :: Maybe Text -> Maybe Natural -> ListDomains

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListDomains'] :: ListDomains -> Maybe Text

-- | The maximum number of results to return per page.
[$sel:maxResults:ListDomains'] :: ListDomains -> Maybe Natural

-- | Create a value of <a>ListDomains</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>, <a>listDomains_nextToken</a> - The
--   token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListDomains'</a>, <a>listDomains_maxResults</a> -
--   The maximum number of results to return per page.
newListDomains :: ListDomains

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listDomains_nextToken :: Lens' ListDomains (Maybe Text)

-- | The maximum number of results to return per page.
listDomains_maxResults :: Lens' ListDomains (Maybe Natural)

-- | <i>See:</i> <a>newListDomainsResponse</a> smart constructor.
data ListDomainsResponse
ListDomainsResponse' :: Maybe Text -> Maybe [DomainSummary] -> Int -> ListDomainsResponse

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
[$sel:nextToken:ListDomainsResponse'] :: ListDomainsResponse -> Maybe Text

-- | The returned list of <a>DomainSummary</a> objects.
[$sel:domains:ListDomainsResponse'] :: ListDomainsResponse -> Maybe [DomainSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDomainsResponse'] :: ListDomainsResponse -> Int

-- | Create a value of <a>ListDomainsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>,
--   <a>listDomainsResponse_nextToken</a> - The token for the next set of
--   results. Use the value returned in the previous response in the next
--   request to retrieve the next set of results.
--   
--   <a>$sel:domains:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_domains</a> - The returned list of
--   <a>DomainSummary</a> objects.
--   
--   <a>$sel:httpStatus:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_httpStatus</a> - The response's http status
--   code.
newListDomainsResponse :: Int -> ListDomainsResponse

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listDomainsResponse_nextToken :: Lens' ListDomainsResponse (Maybe Text)

-- | The returned list of <a>DomainSummary</a> objects.
listDomainsResponse_domains :: Lens' ListDomainsResponse (Maybe [DomainSummary])

-- | The response's http status code.
listDomainsResponse_httpStatus :: Lens' ListDomainsResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListDomains.ListDomains
instance GHC.Show.Show Amazonka.CodeArtifact.ListDomains.ListDomains
instance GHC.Read.Read Amazonka.CodeArtifact.ListDomains.ListDomains
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListDomains.ListDomains
instance GHC.Generics.Generic Amazonka.CodeArtifact.ListDomains.ListDomainsResponse
instance GHC.Show.Show Amazonka.CodeArtifact.ListDomains.ListDomainsResponse
instance GHC.Read.Read Amazonka.CodeArtifact.ListDomains.ListDomainsResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.ListDomains.ListDomainsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.ListDomains.ListDomains
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListDomains.ListDomainsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeArtifact.ListDomains.ListDomains
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.ListDomains.ListDomains
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.ListDomains.ListDomains
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.ListDomains.ListDomains
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.ListDomains.ListDomains
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.ListDomains.ListDomains
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.ListDomains.ListDomains


-- | Returns the resource policy that is set on a repository.
module Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy

-- | <i>See:</i> <a>newGetRepositoryPermissionsPolicy</a> smart
--   constructor.
data GetRepositoryPermissionsPolicy
GetRepositoryPermissionsPolicy' :: Maybe Text -> Text -> Text -> GetRepositoryPermissionsPolicy

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:GetRepositoryPermissionsPolicy'] :: GetRepositoryPermissionsPolicy -> Maybe Text

-- | The name of the domain containing the repository whose associated
--   resource policy is to be retrieved.
[$sel:domain:GetRepositoryPermissionsPolicy'] :: GetRepositoryPermissionsPolicy -> Text

-- | The name of the repository whose associated resource policy is to be
--   retrieved.
[$sel:repository:GetRepositoryPermissionsPolicy'] :: GetRepositoryPermissionsPolicy -> Text

-- | Create a value of <a>GetRepositoryPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetRepositoryPermissionsPolicy'</a>,
--   <a>getRepositoryPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:GetRepositoryPermissionsPolicy'</a>,
--   <a>getRepositoryPermissionsPolicy_domain</a> - The name of the domain
--   containing the repository whose associated resource policy is to be
--   retrieved.
--   
--   <a>$sel:repository:GetRepositoryPermissionsPolicy'</a>,
--   <a>getRepositoryPermissionsPolicy_repository</a> - The name of the
--   repository whose associated resource policy is to be retrieved.
newGetRepositoryPermissionsPolicy :: Text -> Text -> GetRepositoryPermissionsPolicy

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getRepositoryPermissionsPolicy_domainOwner :: Lens' GetRepositoryPermissionsPolicy (Maybe Text)

-- | The name of the domain containing the repository whose associated
--   resource policy is to be retrieved.
getRepositoryPermissionsPolicy_domain :: Lens' GetRepositoryPermissionsPolicy Text

-- | The name of the repository whose associated resource policy is to be
--   retrieved.
getRepositoryPermissionsPolicy_repository :: Lens' GetRepositoryPermissionsPolicy Text

-- | <i>See:</i> <a>newGetRepositoryPermissionsPolicyResponse</a> smart
--   constructor.
data GetRepositoryPermissionsPolicyResponse
GetRepositoryPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> GetRepositoryPermissionsPolicyResponse

-- | The returned resource policy.
[$sel:policy:GetRepositoryPermissionsPolicyResponse'] :: GetRepositoryPermissionsPolicyResponse -> Maybe ResourcePolicy

-- | The response's http status code.
[$sel:httpStatus:GetRepositoryPermissionsPolicyResponse'] :: GetRepositoryPermissionsPolicyResponse -> Int

-- | Create a value of <a>GetRepositoryPermissionsPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetRepositoryPermissionsPolicyResponse'</a>,
--   <a>getRepositoryPermissionsPolicyResponse_policy</a> - The returned
--   resource policy.
--   
--   <a>$sel:httpStatus:GetRepositoryPermissionsPolicyResponse'</a>,
--   <a>getRepositoryPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newGetRepositoryPermissionsPolicyResponse :: Int -> GetRepositoryPermissionsPolicyResponse

-- | The returned resource policy.
getRepositoryPermissionsPolicyResponse_policy :: Lens' GetRepositoryPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
getRepositoryPermissionsPolicyResponse_httpStatus :: Lens' GetRepositoryPermissionsPolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance GHC.Show.Show Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance GHC.Read.Read Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicyResponse
instance GHC.Show.Show Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicyResponse
instance GHC.Read.Read Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicyResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.GetRepositoryPermissionsPolicy.GetRepositoryPermissionsPolicy


-- | Returns the endpoint of a repository for a specific package format. A
--   repository has one endpoint for each package format:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
module Amazonka.CodeArtifact.GetRepositoryEndpoint

-- | <i>See:</i> <a>newGetRepositoryEndpoint</a> smart constructor.
data GetRepositoryEndpoint
GetRepositoryEndpoint' :: Maybe Text -> Text -> Text -> PackageFormat -> GetRepositoryEndpoint

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
[$sel:domainOwner:GetRepositoryEndpoint'] :: GetRepositoryEndpoint -> Maybe Text

-- | The name of the domain that contains the repository.
[$sel:domain:GetRepositoryEndpoint'] :: GetRepositoryEndpoint -> Text

-- | The name of the repository.
[$sel:repository:GetRepositoryEndpoint'] :: GetRepositoryEndpoint -> Text

-- | Returns which endpoint of a repository to return. A repository has one
--   endpoint for each package format:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:GetRepositoryEndpoint'] :: GetRepositoryEndpoint -> PackageFormat

-- | Create a value of <a>GetRepositoryEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain that contains the repository.
--   It does not include dashes or spaces.
--   
--   <a>$sel:domain:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_domain</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:repository:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_repository</a> - The name of the repository.
--   
--   <a>$sel:format:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_format</a> - Returns which endpoint of a
--   repository to return. A repository has one endpoint for each package
--   format:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
newGetRepositoryEndpoint :: Text -> Text -> PackageFormat -> GetRepositoryEndpoint

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
getRepositoryEndpoint_domainOwner :: Lens' GetRepositoryEndpoint (Maybe Text)

-- | The name of the domain that contains the repository.
getRepositoryEndpoint_domain :: Lens' GetRepositoryEndpoint Text

-- | The name of the repository.
getRepositoryEndpoint_repository :: Lens' GetRepositoryEndpoint Text

-- | Returns which endpoint of a repository to return. A repository has one
--   endpoint for each package format:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getRepositoryEndpoint_format :: Lens' GetRepositoryEndpoint PackageFormat

-- | <i>See:</i> <a>newGetRepositoryEndpointResponse</a> smart constructor.
data GetRepositoryEndpointResponse
GetRepositoryEndpointResponse' :: Maybe Text -> Int -> GetRepositoryEndpointResponse

-- | A string that specifies the URL of the returned endpoint.
[$sel:repositoryEndpoint:GetRepositoryEndpointResponse'] :: GetRepositoryEndpointResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRepositoryEndpointResponse'] :: GetRepositoryEndpointResponse -> Int

-- | Create a value of <a>GetRepositoryEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryEndpoint:GetRepositoryEndpointResponse'</a>,
--   <a>getRepositoryEndpointResponse_repositoryEndpoint</a> - A string
--   that specifies the URL of the returned endpoint.
--   
--   <a>$sel:httpStatus:GetRepositoryEndpointResponse'</a>,
--   <a>getRepositoryEndpointResponse_httpStatus</a> - The response's http
--   status code.
newGetRepositoryEndpointResponse :: Int -> GetRepositoryEndpointResponse

-- | A string that specifies the URL of the returned endpoint.
getRepositoryEndpointResponse_repositoryEndpoint :: Lens' GetRepositoryEndpointResponse (Maybe Text)

-- | The response's http status code.
getRepositoryEndpointResponse_httpStatus :: Lens' GetRepositoryEndpointResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance GHC.Show.Show Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance GHC.Read.Read Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpointResponse
instance GHC.Show.Show Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpointResponse
instance GHC.Read.Read Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpointResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpointResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpointResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.GetRepositoryEndpoint.GetRepositoryEndpoint


-- | Gets the readme file or descriptive text for a package version. For
--   packages that do not contain a readme file, CodeArtifact extracts a
--   description from a metadata file. For example, from the
--   <tt>&lt;description&gt;</tt> element in the <tt>pom.xml</tt> file of a
--   Maven package.
--   
--   The returned text might contain formatting. For example, it might
--   contain formatting for Markdown or reStructuredText.
module Amazonka.CodeArtifact.GetPackageVersionReadme

-- | <i>See:</i> <a>newGetPackageVersionReadme</a> smart constructor.
data GetPackageVersionReadme
GetPackageVersionReadme' :: Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> GetPackageVersionReadme

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:GetPackageVersionReadme'] :: GetPackageVersionReadme -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:GetPackageVersionReadme'] :: GetPackageVersionReadme -> Maybe Text

-- | The name of the domain that contains the repository that contains the
--   package version with the requested readme file.
[$sel:domain:GetPackageVersionReadme'] :: GetPackageVersionReadme -> Text

-- | The repository that contains the package with the requested readme
--   file.
[$sel:repository:GetPackageVersionReadme'] :: GetPackageVersionReadme -> Text

-- | A format that specifies the type of the package version with the
--   requested readme file. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:GetPackageVersionReadme'] :: GetPackageVersionReadme -> PackageFormat

-- | The name of the package version that contains the requested readme
--   file.
[$sel:package:GetPackageVersionReadme'] :: GetPackageVersionReadme -> Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
[$sel:packageVersion:GetPackageVersionReadme'] :: GetPackageVersionReadme -> Text

-- | Create a value of <a>GetPackageVersionReadme</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_domain</a> - The name of the domain that
--   contains the repository that contains the package version with the
--   requested readme file.
--   
--   <a>$sel:repository:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_repository</a> - The repository that
--   contains the package with the requested readme file.
--   
--   <a>$sel:format:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_format</a> - A format that specifies the
--   type of the package version with the requested readme file. The valid
--   values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_package</a> - The name of the package
--   version that contains the requested readme file.
--   
--   <a>$sel:packageVersion:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_packageVersion</a> - A string that contains
--   the package version (for example, <tt>3.5.2</tt>).
newGetPackageVersionReadme :: Text -> Text -> PackageFormat -> Text -> Text -> GetPackageVersionReadme

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
getPackageVersionReadme_namespace :: Lens' GetPackageVersionReadme (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getPackageVersionReadme_domainOwner :: Lens' GetPackageVersionReadme (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package version with the requested readme file.
getPackageVersionReadme_domain :: Lens' GetPackageVersionReadme Text

-- | The repository that contains the package with the requested readme
--   file.
getPackageVersionReadme_repository :: Lens' GetPackageVersionReadme Text

-- | A format that specifies the type of the package version with the
--   requested readme file. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getPackageVersionReadme_format :: Lens' GetPackageVersionReadme PackageFormat

-- | The name of the package version that contains the requested readme
--   file.
getPackageVersionReadme_package :: Lens' GetPackageVersionReadme Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
getPackageVersionReadme_packageVersion :: Lens' GetPackageVersionReadme Text

-- | <i>See:</i> <a>newGetPackageVersionReadmeResponse</a> smart
--   constructor.
data GetPackageVersionReadmeResponse
GetPackageVersionReadmeResponse' :: Maybe Text -> Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetPackageVersionReadmeResponse

-- | The text of the returned readme file.
[$sel:readme:GetPackageVersionReadmeResponse'] :: GetPackageVersionReadmeResponse -> Maybe Text

-- | The format of the package with the requested readme file. Valid format
--   types are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:GetPackageVersionReadmeResponse'] :: GetPackageVersionReadmeResponse -> Maybe PackageFormat

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:GetPackageVersionReadmeResponse'] :: GetPackageVersionReadmeResponse -> Maybe Text

-- | The current revision associated with the package version.
[$sel:versionRevision:GetPackageVersionReadmeResponse'] :: GetPackageVersionReadmeResponse -> Maybe Text

-- | The version of the package with the requested readme file.
[$sel:version:GetPackageVersionReadmeResponse'] :: GetPackageVersionReadmeResponse -> Maybe Text

-- | The name of the package that contains the returned readme file.
[$sel:package:GetPackageVersionReadmeResponse'] :: GetPackageVersionReadmeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPackageVersionReadmeResponse'] :: GetPackageVersionReadmeResponse -> Int

-- | Create a value of <a>GetPackageVersionReadmeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readme:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_readme</a> - The text of the
--   returned readme file.
--   
--   <a>$sel:format:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadmeResponse_format</a> - The format of the
--   package with the requested readme file. Valid format types are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadmeResponse_namespace</a> - The namespace of
--   the package. The package component that specifies its namespace
--   depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versionRevision:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_versionRevision</a> - The current
--   revision associated with the package version.
--   
--   <a>$sel:version:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_version</a> - The version of the
--   package with the requested readme file.
--   
--   <a>$sel:package:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadmeResponse_package</a> - The name of the
--   package that contains the returned readme file.
--   
--   <a>$sel:httpStatus:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_httpStatus</a> - The response's
--   http status code.
newGetPackageVersionReadmeResponse :: Int -> GetPackageVersionReadmeResponse

-- | The text of the returned readme file.
getPackageVersionReadmeResponse_readme :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The format of the package with the requested readme file. Valid format
--   types are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getPackageVersionReadmeResponse_format :: Lens' GetPackageVersionReadmeResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
getPackageVersionReadmeResponse_namespace :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The current revision associated with the package version.
getPackageVersionReadmeResponse_versionRevision :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The version of the package with the requested readme file.
getPackageVersionReadmeResponse_version :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The name of the package that contains the returned readme file.
getPackageVersionReadmeResponse_package :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The response's http status code.
getPackageVersionReadmeResponse_httpStatus :: Lens' GetPackageVersionReadmeResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance GHC.Show.Show Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance GHC.Read.Read Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadmeResponse
instance GHC.Show.Show Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadmeResponse
instance GHC.Read.Read Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadmeResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadmeResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadmeResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.GetPackageVersionReadme.GetPackageVersionReadme


-- | Returns an asset (or file) that is in a package. For example, for a
--   Maven package version, use <tt>GetPackageVersionAsset</tt> to download
--   a <tt>JAR</tt> file, a <tt>POM</tt> file, or any other assets in the
--   package version.
module Amazonka.CodeArtifact.GetPackageVersionAsset

-- | <i>See:</i> <a>newGetPackageVersionAsset</a> smart constructor.
data GetPackageVersionAsset
GetPackageVersionAsset' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> Text -> GetPackageVersionAsset

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Maybe Text

-- | The name of the package version revision that contains the requested
--   asset.
[$sel:packageVersionRevision:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Maybe Text

-- | The name of the domain that contains the repository that contains the
--   package version with the requested asset.
[$sel:domain:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Text

-- | The repository that contains the package version with the requested
--   asset.
[$sel:repository:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Text

-- | A format that specifies the type of the package version with the
--   requested asset file. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:GetPackageVersionAsset'] :: GetPackageVersionAsset -> PackageFormat

-- | The name of the package that contains the requested asset.
[$sel:package:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
[$sel:packageVersion:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Text

-- | The name of the requested asset.
[$sel:asset:GetPackageVersionAsset'] :: GetPackageVersionAsset -> Text

-- | Create a value of <a>GetPackageVersionAsset</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:packageVersionRevision:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_packageVersionRevision</a> - The name of the
--   package version revision that contains the requested asset.
--   
--   <a>$sel:domain:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_domain</a> - The name of the domain that
--   contains the repository that contains the package version with the
--   requested asset.
--   
--   <a>$sel:repository:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_repository</a> - The repository that
--   contains the package version with the requested asset.
--   
--   <a>$sel:format:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_format</a> - A format that specifies the
--   type of the package version with the requested asset file. The valid
--   values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_package</a> - The name of the package that
--   contains the requested asset.
--   
--   <a>$sel:packageVersion:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_packageVersion</a> - A string that contains
--   the package version (for example, <tt>3.5.2</tt>).
--   
--   <a>$sel:asset:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_asset</a> - The name of the requested asset.
newGetPackageVersionAsset :: Text -> Text -> PackageFormat -> Text -> Text -> Text -> GetPackageVersionAsset

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
getPackageVersionAsset_namespace :: Lens' GetPackageVersionAsset (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getPackageVersionAsset_domainOwner :: Lens' GetPackageVersionAsset (Maybe Text)

-- | The name of the package version revision that contains the requested
--   asset.
getPackageVersionAsset_packageVersionRevision :: Lens' GetPackageVersionAsset (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package version with the requested asset.
getPackageVersionAsset_domain :: Lens' GetPackageVersionAsset Text

-- | The repository that contains the package version with the requested
--   asset.
getPackageVersionAsset_repository :: Lens' GetPackageVersionAsset Text

-- | A format that specifies the type of the package version with the
--   requested asset file. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getPackageVersionAsset_format :: Lens' GetPackageVersionAsset PackageFormat

-- | The name of the package that contains the requested asset.
getPackageVersionAsset_package :: Lens' GetPackageVersionAsset Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
getPackageVersionAsset_packageVersion :: Lens' GetPackageVersionAsset Text

-- | The name of the requested asset.
getPackageVersionAsset_asset :: Lens' GetPackageVersionAsset Text

-- | <i>See:</i> <a>newGetPackageVersionAssetResponse</a> smart
--   constructor.
data GetPackageVersionAssetResponse
GetPackageVersionAssetResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> ResponseBody -> GetPackageVersionAssetResponse

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
[$sel:packageVersion:GetPackageVersionAssetResponse'] :: GetPackageVersionAssetResponse -> Maybe Text

-- | The name of the asset that is downloaded.
[$sel:assetName:GetPackageVersionAssetResponse'] :: GetPackageVersionAssetResponse -> Maybe Text

-- | The name of the package version revision that contains the downloaded
--   asset.
[$sel:packageVersionRevision:GetPackageVersionAssetResponse'] :: GetPackageVersionAssetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPackageVersionAssetResponse'] :: GetPackageVersionAssetResponse -> Int

-- | The binary file, or asset, that is downloaded.
[$sel:asset:GetPackageVersionAssetResponse'] :: GetPackageVersionAssetResponse -> ResponseBody

-- | Create a value of <a>GetPackageVersionAssetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersion:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAssetResponse_packageVersion</a> - A string that
--   contains the package version (for example, <tt>3.5.2</tt>).
--   
--   <a>$sel:assetName:GetPackageVersionAssetResponse'</a>,
--   <a>getPackageVersionAssetResponse_assetName</a> - The name of the
--   asset that is downloaded.
--   
--   <a>$sel:packageVersionRevision:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAssetResponse_packageVersionRevision</a> - The
--   name of the package version revision that contains the downloaded
--   asset.
--   
--   <a>$sel:httpStatus:GetPackageVersionAssetResponse'</a>,
--   <a>getPackageVersionAssetResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:asset:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAssetResponse_asset</a> - The binary file, or
--   asset, that is downloaded.
newGetPackageVersionAssetResponse :: Int -> ResponseBody -> GetPackageVersionAssetResponse

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
getPackageVersionAssetResponse_packageVersion :: Lens' GetPackageVersionAssetResponse (Maybe Text)

-- | The name of the asset that is downloaded.
getPackageVersionAssetResponse_assetName :: Lens' GetPackageVersionAssetResponse (Maybe Text)

-- | The name of the package version revision that contains the downloaded
--   asset.
getPackageVersionAssetResponse_packageVersionRevision :: Lens' GetPackageVersionAssetResponse (Maybe Text)

-- | The response's http status code.
getPackageVersionAssetResponse_httpStatus :: Lens' GetPackageVersionAssetResponse Int

-- | The binary file, or asset, that is downloaded.
getPackageVersionAssetResponse_asset :: Lens' GetPackageVersionAssetResponse ResponseBody
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance GHC.Show.Show Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance GHC.Read.Read Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAssetResponse
instance GHC.Show.Show Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAssetResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.GetPackageVersionAsset.GetPackageVersionAsset


-- | Returns the resource policy attached to the specified domain.
--   
--   The policy is a resource-based policy, not an identity-based policy.
--   For more information, see <a>Identity-based policies and
--   resource-based policies</a> in the <i>AWS Identity and Access
--   Management User Guide</i>.
module Amazonka.CodeArtifact.GetDomainPermissionsPolicy

-- | <i>See:</i> <a>newGetDomainPermissionsPolicy</a> smart constructor.
data GetDomainPermissionsPolicy
GetDomainPermissionsPolicy' :: Maybe Text -> Text -> GetDomainPermissionsPolicy

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:GetDomainPermissionsPolicy'] :: GetDomainPermissionsPolicy -> Maybe Text

-- | The name of the domain to which the resource policy is attached.
[$sel:domain:GetDomainPermissionsPolicy'] :: GetDomainPermissionsPolicy -> Text

-- | Create a value of <a>GetDomainPermissionsPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetDomainPermissionsPolicy'</a>,
--   <a>getDomainPermissionsPolicy_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:GetDomainPermissionsPolicy'</a>,
--   <a>getDomainPermissionsPolicy_domain</a> - The name of the domain to
--   which the resource policy is attached.
newGetDomainPermissionsPolicy :: Text -> GetDomainPermissionsPolicy

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getDomainPermissionsPolicy_domainOwner :: Lens' GetDomainPermissionsPolicy (Maybe Text)

-- | The name of the domain to which the resource policy is attached.
getDomainPermissionsPolicy_domain :: Lens' GetDomainPermissionsPolicy Text

-- | <i>See:</i> <a>newGetDomainPermissionsPolicyResponse</a> smart
--   constructor.
data GetDomainPermissionsPolicyResponse
GetDomainPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> GetDomainPermissionsPolicyResponse

-- | The returned resource policy.
[$sel:policy:GetDomainPermissionsPolicyResponse'] :: GetDomainPermissionsPolicyResponse -> Maybe ResourcePolicy

-- | The response's http status code.
[$sel:httpStatus:GetDomainPermissionsPolicyResponse'] :: GetDomainPermissionsPolicyResponse -> Int

-- | Create a value of <a>GetDomainPermissionsPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetDomainPermissionsPolicyResponse'</a>,
--   <a>getDomainPermissionsPolicyResponse_policy</a> - The returned
--   resource policy.
--   
--   <a>$sel:httpStatus:GetDomainPermissionsPolicyResponse'</a>,
--   <a>getDomainPermissionsPolicyResponse_httpStatus</a> - The response's
--   http status code.
newGetDomainPermissionsPolicyResponse :: Int -> GetDomainPermissionsPolicyResponse

-- | The returned resource policy.
getDomainPermissionsPolicyResponse_policy :: Lens' GetDomainPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
getDomainPermissionsPolicyResponse_httpStatus :: Lens' GetDomainPermissionsPolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance GHC.Show.Show Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance GHC.Read.Read Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicyResponse
instance GHC.Show.Show Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicyResponse
instance GHC.Read.Read Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicyResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.GetDomainPermissionsPolicy.GetDomainPermissionsPolicy


-- | Generates a temporary authorization token for accessing repositories
--   in the domain. This API requires the
--   <tt>codeartifact:GetAuthorizationToken</tt> and
--   <tt>sts:GetServiceBearerToken</tt> permissions. For more information
--   about authorization tokens, see <a>AWS CodeArtifact authentication and
--   tokens</a>.
--   
--   CodeArtifact authorization tokens are valid for a period of 12 hours
--   when created with the <tt>login</tt> command. You can call
--   <tt>login</tt> periodically to refresh the token. When you create an
--   authorization token with the <tt>GetAuthorizationToken</tt> API, you
--   can set a custom authorization period, up to a maximum of 12 hours,
--   with the <tt>durationSeconds</tt> parameter.
--   
--   The authorization period begins after <tt>login</tt> or
--   <tt>GetAuthorizationToken</tt> is called. If <tt>login</tt> or
--   <tt>GetAuthorizationToken</tt> is called while assuming a role, the
--   token lifetime is independent of the maximum session duration of the
--   role. For example, if you call <tt>sts assume-role</tt> and specify a
--   session duration of 15 minutes, then generate a CodeArtifact
--   authorization token, the token will be valid for the full
--   authorization period even though this is longer than the 15-minute
--   session duration.
--   
--   See <a>Using IAM Roles</a> for more information on controlling session
--   duration.
module Amazonka.CodeArtifact.GetAuthorizationToken

-- | <i>See:</i> <a>newGetAuthorizationToken</a> smart constructor.
data GetAuthorizationToken
GetAuthorizationToken' :: Maybe Text -> Maybe Natural -> Text -> GetAuthorizationToken

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:GetAuthorizationToken'] :: GetAuthorizationToken -> Maybe Text

-- | The time, in seconds, that the generated authorization token is valid.
--   Valid values are <tt>0</tt> and any number between <tt>900</tt> (15
--   minutes) and <tt>43200</tt> (12 hours). A value of <tt>0</tt> will set
--   the expiration of the authorization token to the same expiration of
--   the user's role's temporary credentials.
[$sel:durationSeconds:GetAuthorizationToken'] :: GetAuthorizationToken -> Maybe Natural

-- | The name of the domain that is in scope for the generated
--   authorization token.
[$sel:domain:GetAuthorizationToken'] :: GetAuthorizationToken -> Text

-- | Create a value of <a>GetAuthorizationToken</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetAuthorizationToken'</a>,
--   <a>getAuthorizationToken_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:durationSeconds:GetAuthorizationToken'</a>,
--   <a>getAuthorizationToken_durationSeconds</a> - The time, in seconds,
--   that the generated authorization token is valid. Valid values are
--   <tt>0</tt> and any number between <tt>900</tt> (15 minutes) and
--   <tt>43200</tt> (12 hours). A value of <tt>0</tt> will set the
--   expiration of the authorization token to the same expiration of the
--   user's role's temporary credentials.
--   
--   <a>$sel:domain:GetAuthorizationToken'</a>,
--   <a>getAuthorizationToken_domain</a> - The name of the domain that is
--   in scope for the generated authorization token.
newGetAuthorizationToken :: Text -> GetAuthorizationToken

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getAuthorizationToken_domainOwner :: Lens' GetAuthorizationToken (Maybe Text)

-- | The time, in seconds, that the generated authorization token is valid.
--   Valid values are <tt>0</tt> and any number between <tt>900</tt> (15
--   minutes) and <tt>43200</tt> (12 hours). A value of <tt>0</tt> will set
--   the expiration of the authorization token to the same expiration of
--   the user's role's temporary credentials.
getAuthorizationToken_durationSeconds :: Lens' GetAuthorizationToken (Maybe Natural)

-- | The name of the domain that is in scope for the generated
--   authorization token.
getAuthorizationToken_domain :: Lens' GetAuthorizationToken Text

-- | <i>See:</i> <a>newGetAuthorizationTokenResponse</a> smart constructor.
data GetAuthorizationTokenResponse
GetAuthorizationTokenResponse' :: Maybe POSIX -> Maybe Text -> Int -> GetAuthorizationTokenResponse

-- | A timestamp that specifies the date and time the authorization token
--   expires.
[$sel:expiration:GetAuthorizationTokenResponse'] :: GetAuthorizationTokenResponse -> Maybe POSIX

-- | The returned authentication token.
[$sel:authorizationToken:GetAuthorizationTokenResponse'] :: GetAuthorizationTokenResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAuthorizationTokenResponse'] :: GetAuthorizationTokenResponse -> Int

-- | Create a value of <a>GetAuthorizationTokenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiration:GetAuthorizationTokenResponse'</a>,
--   <a>getAuthorizationTokenResponse_expiration</a> - A timestamp that
--   specifies the date and time the authorization token expires.
--   
--   <a>$sel:authorizationToken:GetAuthorizationTokenResponse'</a>,
--   <a>getAuthorizationTokenResponse_authorizationToken</a> - The returned
--   authentication token.
--   
--   <a>$sel:httpStatus:GetAuthorizationTokenResponse'</a>,
--   <a>getAuthorizationTokenResponse_httpStatus</a> - The response's http
--   status code.
newGetAuthorizationTokenResponse :: Int -> GetAuthorizationTokenResponse

-- | A timestamp that specifies the date and time the authorization token
--   expires.
getAuthorizationTokenResponse_expiration :: Lens' GetAuthorizationTokenResponse (Maybe UTCTime)

-- | The returned authentication token.
getAuthorizationTokenResponse_authorizationToken :: Lens' GetAuthorizationTokenResponse (Maybe Text)

-- | The response's http status code.
getAuthorizationTokenResponse_httpStatus :: Lens' GetAuthorizationTokenResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance GHC.Show.Show Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance GHC.Read.Read Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance GHC.Generics.Generic Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationTokenResponse
instance GHC.Show.Show Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationTokenResponse
instance GHC.Read.Read Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationTokenResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationTokenResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationTokenResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.GetAuthorizationToken.GetAuthorizationToken


-- | Deletes the assets in package versions and sets the package versions'
--   status to <tt>Disposed</tt>. A disposed package version cannot be
--   restored in your repository because its assets are deleted.
--   
--   To view all disposed package versions in a repository, use
--   <a>ListPackageVersions</a> and set the <a>status</a> parameter to
--   <tt>Disposed</tt>.
--   
--   To view information about a disposed package version, use
--   <a>DescribePackageVersion</a>.
module Amazonka.CodeArtifact.DisposePackageVersions

-- | <i>See:</i> <a>newDisposePackageVersions</a> smart constructor.
data DisposePackageVersions
DisposePackageVersions' :: Maybe PackageVersionStatus -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> [Text] -> DisposePackageVersions

-- | The expected status of the package version to dispose. Valid values
--   are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:expectedStatus:DisposePackageVersions'] :: DisposePackageVersions -> Maybe PackageVersionStatus

-- | The revisions of the package versions you want to dispose.
[$sel:versionRevisions:DisposePackageVersions'] :: DisposePackageVersions -> Maybe (HashMap Text Text)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:DisposePackageVersions'] :: DisposePackageVersions -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DisposePackageVersions'] :: DisposePackageVersions -> Maybe Text

-- | The name of the domain that contains the repository you want to
--   dispose.
[$sel:domain:DisposePackageVersions'] :: DisposePackageVersions -> Text

-- | The name of the repository that contains the package versions you want
--   to dispose.
[$sel:repository:DisposePackageVersions'] :: DisposePackageVersions -> Text

-- | A format that specifies the type of package versions you want to
--   dispose. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:DisposePackageVersions'] :: DisposePackageVersions -> PackageFormat

-- | The name of the package with the versions you want to dispose.
[$sel:package:DisposePackageVersions'] :: DisposePackageVersions -> Text

-- | The versions of the package you want to dispose.
[$sel:versions:DisposePackageVersions'] :: DisposePackageVersions -> [Text]

-- | Create a value of <a>DisposePackageVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expectedStatus:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_expectedStatus</a> - The expected status of
--   the package version to dispose. Valid values are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:versionRevisions:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_versionRevisions</a> - The revisions of the
--   package versions you want to dispose.
--   
--   <a>$sel:namespace:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_domain</a> - The name of the domain that
--   contains the repository you want to dispose.
--   
--   <a>$sel:repository:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_repository</a> - The name of the repository
--   that contains the package versions you want to dispose.
--   
--   <a>$sel:format:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_format</a> - A format that specifies the
--   type of package versions you want to dispose. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_package</a> - The name of the package with
--   the versions you want to dispose.
--   
--   <a>$sel:versions:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_versions</a> - The versions of the package
--   you want to dispose.
newDisposePackageVersions :: Text -> Text -> PackageFormat -> Text -> DisposePackageVersions

-- | The expected status of the package version to dispose. Valid values
--   are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
disposePackageVersions_expectedStatus :: Lens' DisposePackageVersions (Maybe PackageVersionStatus)

-- | The revisions of the package versions you want to dispose.
disposePackageVersions_versionRevisions :: Lens' DisposePackageVersions (Maybe (HashMap Text Text))

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
disposePackageVersions_namespace :: Lens' DisposePackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
disposePackageVersions_domainOwner :: Lens' DisposePackageVersions (Maybe Text)

-- | The name of the domain that contains the repository you want to
--   dispose.
disposePackageVersions_domain :: Lens' DisposePackageVersions Text

-- | The name of the repository that contains the package versions you want
--   to dispose.
disposePackageVersions_repository :: Lens' DisposePackageVersions Text

-- | A format that specifies the type of package versions you want to
--   dispose. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
disposePackageVersions_format :: Lens' DisposePackageVersions PackageFormat

-- | The name of the package with the versions you want to dispose.
disposePackageVersions_package :: Lens' DisposePackageVersions Text

-- | The versions of the package you want to dispose.
disposePackageVersions_versions :: Lens' DisposePackageVersions [Text]

-- | <i>See:</i> <a>newDisposePackageVersionsResponse</a> smart
--   constructor.
data DisposePackageVersionsResponse
DisposePackageVersionsResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> DisposePackageVersionsResponse

-- | A <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the disposed package versions that failed. The possible
--   error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
[$sel:failedVersions:DisposePackageVersionsResponse'] :: DisposePackageVersionsResponse -> Maybe (HashMap Text PackageVersionError)

-- | A list of the package versions that were successfully disposed.
[$sel:successfulVersions:DisposePackageVersionsResponse'] :: DisposePackageVersionsResponse -> Maybe (HashMap Text SuccessfulPackageVersionInfo)

-- | The response's http status code.
[$sel:httpStatus:DisposePackageVersionsResponse'] :: DisposePackageVersionsResponse -> Int

-- | Create a value of <a>DisposePackageVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:DisposePackageVersionsResponse'</a>,
--   <a>disposePackageVersionsResponse_failedVersions</a> - A
--   <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the disposed package versions that failed. The possible
--   error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:successfulVersions:DisposePackageVersionsResponse'</a>,
--   <a>disposePackageVersionsResponse_successfulVersions</a> - A list of
--   the package versions that were successfully disposed.
--   
--   <a>$sel:httpStatus:DisposePackageVersionsResponse'</a>,
--   <a>disposePackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDisposePackageVersionsResponse :: Int -> DisposePackageVersionsResponse

-- | A <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the disposed package versions that failed. The possible
--   error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
disposePackageVersionsResponse_failedVersions :: Lens' DisposePackageVersionsResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of the package versions that were successfully disposed.
disposePackageVersionsResponse_successfulVersions :: Lens' DisposePackageVersionsResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
disposePackageVersionsResponse_httpStatus :: Lens' DisposePackageVersionsResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance GHC.Show.Show Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance GHC.Read.Read Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance GHC.Classes.Eq Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance GHC.Generics.Generic Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersionsResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersionsResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersionsResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DisposePackageVersions.DisposePackageVersions


-- | Removes an existing external connection from a repository.
module Amazonka.CodeArtifact.DisassociateExternalConnection

-- | <i>See:</i> <a>newDisassociateExternalConnection</a> smart
--   constructor.
data DisassociateExternalConnection
DisassociateExternalConnection' :: Maybe Text -> Text -> Text -> Text -> DisassociateExternalConnection

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DisassociateExternalConnection'] :: DisassociateExternalConnection -> Maybe Text

-- | The name of the domain that contains the repository from which to
--   remove the external repository.
[$sel:domain:DisassociateExternalConnection'] :: DisassociateExternalConnection -> Text

-- | The name of the repository from which the external connection will be
--   removed.
[$sel:repository:DisassociateExternalConnection'] :: DisassociateExternalConnection -> Text

-- | The name of the external connection to be removed from the repository.
[$sel:externalConnection:DisassociateExternalConnection'] :: DisassociateExternalConnection -> Text

-- | Create a value of <a>DisassociateExternalConnection</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_domain</a> - The name of the domain
--   that contains the repository from which to remove the external
--   repository.
--   
--   <a>$sel:repository:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_repository</a> - The name of the
--   repository from which the external connection will be removed.
--   
--   <a>$sel:externalConnection:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_externalConnection</a> - The name of
--   the external connection to be removed from the repository.
newDisassociateExternalConnection :: Text -> Text -> Text -> DisassociateExternalConnection

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
disassociateExternalConnection_domainOwner :: Lens' DisassociateExternalConnection (Maybe Text)

-- | The name of the domain that contains the repository from which to
--   remove the external repository.
disassociateExternalConnection_domain :: Lens' DisassociateExternalConnection Text

-- | The name of the repository from which the external connection will be
--   removed.
disassociateExternalConnection_repository :: Lens' DisassociateExternalConnection Text

-- | The name of the external connection to be removed from the repository.
disassociateExternalConnection_externalConnection :: Lens' DisassociateExternalConnection Text

-- | <i>See:</i> <a>newDisassociateExternalConnectionResponse</a> smart
--   constructor.
data DisassociateExternalConnectionResponse
DisassociateExternalConnectionResponse' :: Maybe RepositoryDescription -> Int -> DisassociateExternalConnectionResponse

-- | The repository associated with the removed external connection.
[$sel:repository:DisassociateExternalConnectionResponse'] :: DisassociateExternalConnectionResponse -> Maybe RepositoryDescription

-- | The response's http status code.
[$sel:httpStatus:DisassociateExternalConnectionResponse'] :: DisassociateExternalConnectionResponse -> Int

-- | Create a value of <a>DisassociateExternalConnectionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnectionResponse_repository</a> - The
--   repository associated with the removed external connection.
--   
--   <a>$sel:httpStatus:DisassociateExternalConnectionResponse'</a>,
--   <a>disassociateExternalConnectionResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateExternalConnectionResponse :: Int -> DisassociateExternalConnectionResponse

-- | The repository associated with the removed external connection.
disassociateExternalConnectionResponse_repository :: Lens' DisassociateExternalConnectionResponse (Maybe RepositoryDescription)

-- | The response's http status code.
disassociateExternalConnectionResponse_httpStatus :: Lens' DisassociateExternalConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance GHC.Show.Show Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance GHC.Read.Read Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance GHC.Classes.Eq Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance GHC.Generics.Generic Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnectionResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnectionResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnectionResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DisassociateExternalConnection.DisassociateExternalConnection


-- | Returns a <tt>RepositoryDescription</tt> object that contains detailed
--   information about the requested repository.
module Amazonka.CodeArtifact.DescribeRepository

-- | <i>See:</i> <a>newDescribeRepository</a> smart constructor.
data DescribeRepository
DescribeRepository' :: Maybe Text -> Text -> Text -> DescribeRepository

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DescribeRepository'] :: DescribeRepository -> Maybe Text

-- | The name of the domain that contains the repository to describe.
[$sel:domain:DescribeRepository'] :: DescribeRepository -> Text

-- | A string that specifies the name of the requested repository.
[$sel:repository:DescribeRepository'] :: DescribeRepository -> Text

-- | Create a value of <a>DescribeRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DescribeRepository'</a>,
--   <a>describeRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DescribeRepository'</a>,
--   <a>describeRepository_domain</a> - The name of the domain that
--   contains the repository to describe.
--   
--   <a>$sel:repository:DescribeRepository'</a>,
--   <a>describeRepository_repository</a> - A string that specifies the
--   name of the requested repository.
newDescribeRepository :: Text -> Text -> DescribeRepository

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
describeRepository_domainOwner :: Lens' DescribeRepository (Maybe Text)

-- | The name of the domain that contains the repository to describe.
describeRepository_domain :: Lens' DescribeRepository Text

-- | A string that specifies the name of the requested repository.
describeRepository_repository :: Lens' DescribeRepository Text

-- | <i>See:</i> <a>newDescribeRepositoryResponse</a> smart constructor.
data DescribeRepositoryResponse
DescribeRepositoryResponse' :: Maybe RepositoryDescription -> Int -> DescribeRepositoryResponse

-- | A <tt>RepositoryDescription</tt> object that contains the requested
--   repository information.
[$sel:repository:DescribeRepositoryResponse'] :: DescribeRepositoryResponse -> Maybe RepositoryDescription

-- | The response's http status code.
[$sel:httpStatus:DescribeRepositoryResponse'] :: DescribeRepositoryResponse -> Int

-- | Create a value of <a>DescribeRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:DescribeRepository'</a>,
--   <a>describeRepositoryResponse_repository</a> - A
--   <tt>RepositoryDescription</tt> object that contains the requested
--   repository information.
--   
--   <a>$sel:httpStatus:DescribeRepositoryResponse'</a>,
--   <a>describeRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDescribeRepositoryResponse :: Int -> DescribeRepositoryResponse

-- | A <tt>RepositoryDescription</tt> object that contains the requested
--   repository information.
describeRepositoryResponse_repository :: Lens' DescribeRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
describeRepositoryResponse_httpStatus :: Lens' DescribeRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance GHC.Show.Show Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance GHC.Read.Read Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance GHC.Classes.Eq Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance GHC.Generics.Generic Amazonka.CodeArtifact.DescribeRepository.DescribeRepositoryResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DescribeRepository.DescribeRepositoryResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DescribeRepository.DescribeRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DescribeRepository.DescribeRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DescribeRepository.DescribeRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DescribeRepository.DescribeRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DescribeRepository.DescribeRepository


-- | Returns a <a>PackageVersionDescription</a> object that contains
--   information about the requested package version.
module Amazonka.CodeArtifact.DescribePackageVersion

-- | <i>See:</i> <a>newDescribePackageVersion</a> smart constructor.
data DescribePackageVersion
DescribePackageVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> DescribePackageVersion

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:DescribePackageVersion'] :: DescribePackageVersion -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DescribePackageVersion'] :: DescribePackageVersion -> Maybe Text

-- | The name of the domain that contains the repository that contains the
--   package version.
[$sel:domain:DescribePackageVersion'] :: DescribePackageVersion -> Text

-- | The name of the repository that contains the package version.
[$sel:repository:DescribePackageVersion'] :: DescribePackageVersion -> Text

-- | A format that specifies the type of the requested package version. The
--   valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:DescribePackageVersion'] :: DescribePackageVersion -> PackageFormat

-- | The name of the requested package version.
[$sel:package:DescribePackageVersion'] :: DescribePackageVersion -> Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
[$sel:packageVersion:DescribePackageVersion'] :: DescribePackageVersion -> Text

-- | Create a value of <a>DescribePackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:DescribePackageVersion'</a>,
--   <a>describePackageVersion_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:DescribePackageVersion'</a>,
--   <a>describePackageVersion_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:DescribePackageVersion'</a>,
--   <a>describePackageVersion_domain</a> - The name of the domain that
--   contains the repository that contains the package version.
--   
--   <a>$sel:repository:DescribePackageVersion'</a>,
--   <a>describePackageVersion_repository</a> - The name of the repository
--   that contains the package version.
--   
--   <a>$sel:format:DescribePackageVersion'</a>,
--   <a>describePackageVersion_format</a> - A format that specifies the
--   type of the requested package version. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:DescribePackageVersion'</a>,
--   <a>describePackageVersion_package</a> - The name of the requested
--   package version.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersion_packageVersion</a> - A string that contains
--   the package version (for example, <tt>3.5.2</tt>).
newDescribePackageVersion :: Text -> Text -> PackageFormat -> Text -> Text -> DescribePackageVersion

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
describePackageVersion_namespace :: Lens' DescribePackageVersion (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
describePackageVersion_domainOwner :: Lens' DescribePackageVersion (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package version.
describePackageVersion_domain :: Lens' DescribePackageVersion Text

-- | The name of the repository that contains the package version.
describePackageVersion_repository :: Lens' DescribePackageVersion Text

-- | A format that specifies the type of the requested package version. The
--   valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
describePackageVersion_format :: Lens' DescribePackageVersion PackageFormat

-- | The name of the requested package version.
describePackageVersion_package :: Lens' DescribePackageVersion Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
describePackageVersion_packageVersion :: Lens' DescribePackageVersion Text

-- | <i>See:</i> <a>newDescribePackageVersionResponse</a> smart
--   constructor.
data DescribePackageVersionResponse
DescribePackageVersionResponse' :: Int -> PackageVersionDescription -> DescribePackageVersionResponse

-- | The response's http status code.
[$sel:httpStatus:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Int

-- | A <a>PackageVersionDescription</a> object that contains information
--   about the requested package version.
[$sel:packageVersion:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> PackageVersionDescription

-- | Create a value of <a>DescribePackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_packageVersion</a> - A
--   <a>PackageVersionDescription</a> object that contains information
--   about the requested package version.
newDescribePackageVersionResponse :: Int -> PackageVersionDescription -> DescribePackageVersionResponse

-- | The response's http status code.
describePackageVersionResponse_httpStatus :: Lens' DescribePackageVersionResponse Int

-- | A <a>PackageVersionDescription</a> object that contains information
--   about the requested package version.
describePackageVersionResponse_packageVersion :: Lens' DescribePackageVersionResponse PackageVersionDescription
instance GHC.Generics.Generic Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance GHC.Show.Show Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance GHC.Read.Read Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance GHC.Classes.Eq Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance GHC.Generics.Generic Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersionResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersionResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersionResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DescribePackageVersion.DescribePackageVersion


-- | Returns a <a>DomainDescription</a> object that contains information
--   about the requested domain.
module Amazonka.CodeArtifact.DescribeDomain

-- | <i>See:</i> <a>newDescribeDomain</a> smart constructor.
data DescribeDomain
DescribeDomain' :: Maybe Text -> Text -> DescribeDomain

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DescribeDomain'] :: DescribeDomain -> Maybe Text

-- | A string that specifies the name of the requested domain.
[$sel:domain:DescribeDomain'] :: DescribeDomain -> Text

-- | Create a value of <a>DescribeDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DescribeDomain'</a>,
--   <a>describeDomain_domainOwner</a> - The 12-digit account number of the
--   AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DescribeDomain'</a>, <a>describeDomain_domain</a> - A
--   string that specifies the name of the requested domain.
newDescribeDomain :: Text -> DescribeDomain

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
describeDomain_domainOwner :: Lens' DescribeDomain (Maybe Text)

-- | A string that specifies the name of the requested domain.
describeDomain_domain :: Lens' DescribeDomain Text

-- | <i>See:</i> <a>newDescribeDomainResponse</a> smart constructor.
data DescribeDomainResponse
DescribeDomainResponse' :: Maybe DomainDescription -> Int -> DescribeDomainResponse
[$sel:domain:DescribeDomainResponse'] :: DescribeDomainResponse -> Maybe DomainDescription

-- | The response's http status code.
[$sel:httpStatus:DescribeDomainResponse'] :: DescribeDomainResponse -> Int

-- | Create a value of <a>DescribeDomainResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DescribeDomain'</a>,
--   <a>describeDomainResponse_domain</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeDomainResponse'</a>,
--   <a>describeDomainResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDomainResponse :: Int -> DescribeDomainResponse

-- | Undocumented member.
describeDomainResponse_domain :: Lens' DescribeDomainResponse (Maybe DomainDescription)

-- | The response's http status code.
describeDomainResponse_httpStatus :: Lens' DescribeDomainResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance GHC.Show.Show Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance GHC.Read.Read Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance GHC.Classes.Eq Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance GHC.Generics.Generic Amazonka.CodeArtifact.DescribeDomain.DescribeDomainResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DescribeDomain.DescribeDomainResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DescribeDomain.DescribeDomainResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DescribeDomain.DescribeDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DescribeDomain.DescribeDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DescribeDomain.DescribeDomain
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DescribeDomain.DescribeDomain


-- | Deletes the resource policy that is set on a repository. After a
--   resource policy is deleted, the permissions allowed and denied by the
--   deleted policy are removed. The effect of deleting a resource policy
--   might not be immediate.
--   
--   Use <tt>DeleteRepositoryPermissionsPolicy</tt> with caution. After a
--   policy is deleted, AWS users, roles, and accounts lose permissions to
--   perform the repository actions granted by the deleted policy.
module Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy

-- | <i>See:</i> <a>newDeleteRepositoryPermissionsPolicy</a> smart
--   constructor.
data DeleteRepositoryPermissionsPolicy
DeleteRepositoryPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> Text -> DeleteRepositoryPermissionsPolicy

-- | The revision of the repository's resource policy to be deleted. This
--   revision is used for optimistic locking, which prevents others from
--   accidentally overwriting your changes to the repository's resource
--   policy.
[$sel:policyRevision:DeleteRepositoryPermissionsPolicy'] :: DeleteRepositoryPermissionsPolicy -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DeleteRepositoryPermissionsPolicy'] :: DeleteRepositoryPermissionsPolicy -> Maybe Text

-- | The name of the domain that contains the repository associated with
--   the resource policy to be deleted.
[$sel:domain:DeleteRepositoryPermissionsPolicy'] :: DeleteRepositoryPermissionsPolicy -> Text

-- | The name of the repository that is associated with the resource policy
--   to be deleted
[$sel:repository:DeleteRepositoryPermissionsPolicy'] :: DeleteRepositoryPermissionsPolicy -> Text

-- | Create a value of <a>DeleteRepositoryPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_policyRevision</a> - The revision
--   of the repository's resource policy to be deleted. This revision is
--   used for optimistic locking, which prevents others from accidentally
--   overwriting your changes to the repository's resource policy.
--   
--   <a>$sel:domainOwner:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_domain</a> - The name of the
--   domain that contains the repository associated with the resource
--   policy to be deleted.
--   
--   <a>$sel:repository:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_repository</a> - The name of the
--   repository that is associated with the resource policy to be deleted
newDeleteRepositoryPermissionsPolicy :: Text -> Text -> DeleteRepositoryPermissionsPolicy

-- | The revision of the repository's resource policy to be deleted. This
--   revision is used for optimistic locking, which prevents others from
--   accidentally overwriting your changes to the repository's resource
--   policy.
deleteRepositoryPermissionsPolicy_policyRevision :: Lens' DeleteRepositoryPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteRepositoryPermissionsPolicy_domainOwner :: Lens' DeleteRepositoryPermissionsPolicy (Maybe Text)

-- | The name of the domain that contains the repository associated with
--   the resource policy to be deleted.
deleteRepositoryPermissionsPolicy_domain :: Lens' DeleteRepositoryPermissionsPolicy Text

-- | The name of the repository that is associated with the resource policy
--   to be deleted
deleteRepositoryPermissionsPolicy_repository :: Lens' DeleteRepositoryPermissionsPolicy Text

-- | <i>See:</i> <a>newDeleteRepositoryPermissionsPolicyResponse</a> smart
--   constructor.
data DeleteRepositoryPermissionsPolicyResponse
DeleteRepositoryPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> DeleteRepositoryPermissionsPolicyResponse

-- | Information about the deleted policy after processing the request.
[$sel:policy:DeleteRepositoryPermissionsPolicyResponse'] :: DeleteRepositoryPermissionsPolicyResponse -> Maybe ResourcePolicy

-- | The response's http status code.
[$sel:httpStatus:DeleteRepositoryPermissionsPolicyResponse'] :: DeleteRepositoryPermissionsPolicyResponse -> Int

-- | Create a value of <a>DeleteRepositoryPermissionsPolicyResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:DeleteRepositoryPermissionsPolicyResponse'</a>,
--   <a>deleteRepositoryPermissionsPolicyResponse_policy</a> - Information
--   about the deleted policy after processing the request.
--   
--   <a>$sel:httpStatus:DeleteRepositoryPermissionsPolicyResponse'</a>,
--   <a>deleteRepositoryPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newDeleteRepositoryPermissionsPolicyResponse :: Int -> DeleteRepositoryPermissionsPolicyResponse

-- | Information about the deleted policy after processing the request.
deleteRepositoryPermissionsPolicyResponse_policy :: Lens' DeleteRepositoryPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
deleteRepositoryPermissionsPolicyResponse_httpStatus :: Lens' DeleteRepositoryPermissionsPolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicyResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicyResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicyResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DeleteRepositoryPermissionsPolicy.DeleteRepositoryPermissionsPolicy


-- | Deletes a repository.
module Amazonka.CodeArtifact.DeleteRepository

-- | <i>See:</i> <a>newDeleteRepository</a> smart constructor.
data DeleteRepository
DeleteRepository' :: Maybe Text -> Text -> Text -> DeleteRepository

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DeleteRepository'] :: DeleteRepository -> Maybe Text

-- | The name of the domain that contains the repository to delete.
[$sel:domain:DeleteRepository'] :: DeleteRepository -> Text

-- | The name of the repository to delete.
[$sel:repository:DeleteRepository'] :: DeleteRepository -> Text

-- | Create a value of <a>DeleteRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DeleteRepository'</a>,
--   <a>deleteRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DeleteRepository'</a>, <a>deleteRepository_domain</a> -
--   The name of the domain that contains the repository to delete.
--   
--   <a>$sel:repository:DeleteRepository'</a>,
--   <a>deleteRepository_repository</a> - The name of the repository to
--   delete.
newDeleteRepository :: Text -> Text -> DeleteRepository

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteRepository_domainOwner :: Lens' DeleteRepository (Maybe Text)

-- | The name of the domain that contains the repository to delete.
deleteRepository_domain :: Lens' DeleteRepository Text

-- | The name of the repository to delete.
deleteRepository_repository :: Lens' DeleteRepository Text

-- | <i>See:</i> <a>newDeleteRepositoryResponse</a> smart constructor.
data DeleteRepositoryResponse
DeleteRepositoryResponse' :: Maybe RepositoryDescription -> Int -> DeleteRepositoryResponse

-- | Information about the deleted repository after processing the request.
[$sel:repository:DeleteRepositoryResponse'] :: DeleteRepositoryResponse -> Maybe RepositoryDescription

-- | The response's http status code.
[$sel:httpStatus:DeleteRepositoryResponse'] :: DeleteRepositoryResponse -> Int

-- | Create a value of <a>DeleteRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:DeleteRepository'</a>,
--   <a>deleteRepositoryResponse_repository</a> - Information about the
--   deleted repository after processing the request.
--   
--   <a>$sel:httpStatus:DeleteRepositoryResponse'</a>,
--   <a>deleteRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRepositoryResponse :: Int -> DeleteRepositoryResponse

-- | Information about the deleted repository after processing the request.
deleteRepositoryResponse_repository :: Lens' DeleteRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
deleteRepositoryResponse_httpStatus :: Lens' DeleteRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteRepository.DeleteRepositoryResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteRepository.DeleteRepositoryResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteRepository.DeleteRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteRepository.DeleteRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteRepository.DeleteRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DeleteRepository.DeleteRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DeleteRepository.DeleteRepository


-- | Deletes one or more versions of a package. A deleted package version
--   cannot be restored in your repository. If you want to remove a package
--   version from your repository and be able to restore it later, set its
--   status to <tt>Archived</tt>. Archived packages cannot be downloaded
--   from a repository and don't show up with list package APIs (for
--   example, <a>ListackageVersions</a>), but you can restore them using
--   <a>UpdatePackageVersionsStatus</a>.
module Amazonka.CodeArtifact.DeletePackageVersions

-- | <i>See:</i> <a>newDeletePackageVersions</a> smart constructor.
data DeletePackageVersions
DeletePackageVersions' :: Maybe PackageVersionStatus -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> [Text] -> DeletePackageVersions

-- | The expected status of the package version to delete. Valid values
--   are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
[$sel:expectedStatus:DeletePackageVersions'] :: DeletePackageVersions -> Maybe PackageVersionStatus

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:DeletePackageVersions'] :: DeletePackageVersions -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DeletePackageVersions'] :: DeletePackageVersions -> Maybe Text

-- | The name of the domain that contains the package to delete.
[$sel:domain:DeletePackageVersions'] :: DeletePackageVersions -> Text

-- | The name of the repository that contains the package versions to
--   delete.
[$sel:repository:DeletePackageVersions'] :: DeletePackageVersions -> Text

-- | The format of the package versions to delete. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:DeletePackageVersions'] :: DeletePackageVersions -> PackageFormat

-- | The name of the package with the versions to delete.
[$sel:package:DeletePackageVersions'] :: DeletePackageVersions -> Text

-- | An array of strings that specify the versions of the package to
--   delete.
[$sel:versions:DeletePackageVersions'] :: DeletePackageVersions -> [Text]

-- | Create a value of <a>DeletePackageVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expectedStatus:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_expectedStatus</a> - The expected status of
--   the package version to delete. Valid values are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_namespace</a> - The namespace of the package.
--   The package component that specifies its namespace depends on its
--   type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_domain</a> - The name of the domain that
--   contains the package to delete.
--   
--   <a>$sel:repository:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_repository</a> - The name of the repository
--   that contains the package versions to delete.
--   
--   <a>$sel:format:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_format</a> - The format of the package
--   versions to delete. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_package</a> - The name of the package with
--   the versions to delete.
--   
--   <a>$sel:versions:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_versions</a> - An array of strings that
--   specify the versions of the package to delete.
newDeletePackageVersions :: Text -> Text -> PackageFormat -> Text -> DeletePackageVersions

-- | The expected status of the package version to delete. Valid values
--   are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
deletePackageVersions_expectedStatus :: Lens' DeletePackageVersions (Maybe PackageVersionStatus)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
deletePackageVersions_namespace :: Lens' DeletePackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deletePackageVersions_domainOwner :: Lens' DeletePackageVersions (Maybe Text)

-- | The name of the domain that contains the package to delete.
deletePackageVersions_domain :: Lens' DeletePackageVersions Text

-- | The name of the repository that contains the package versions to
--   delete.
deletePackageVersions_repository :: Lens' DeletePackageVersions Text

-- | The format of the package versions to delete. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
deletePackageVersions_format :: Lens' DeletePackageVersions PackageFormat

-- | The name of the package with the versions to delete.
deletePackageVersions_package :: Lens' DeletePackageVersions Text

-- | An array of strings that specify the versions of the package to
--   delete.
deletePackageVersions_versions :: Lens' DeletePackageVersions [Text]

-- | <i>See:</i> <a>newDeletePackageVersionsResponse</a> smart constructor.
data DeletePackageVersionsResponse
DeletePackageVersionsResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> DeletePackageVersionsResponse

-- | A <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the deleted package that failed. The possible error codes
--   are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
[$sel:failedVersions:DeletePackageVersionsResponse'] :: DeletePackageVersionsResponse -> Maybe (HashMap Text PackageVersionError)

-- | A list of the package versions that were successfully deleted.
[$sel:successfulVersions:DeletePackageVersionsResponse'] :: DeletePackageVersionsResponse -> Maybe (HashMap Text SuccessfulPackageVersionInfo)

-- | The response's http status code.
[$sel:httpStatus:DeletePackageVersionsResponse'] :: DeletePackageVersionsResponse -> Int

-- | Create a value of <a>DeletePackageVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:DeletePackageVersionsResponse'</a>,
--   <a>deletePackageVersionsResponse_failedVersions</a> - A
--   <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the deleted package that failed. The possible error codes
--   are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:successfulVersions:DeletePackageVersionsResponse'</a>,
--   <a>deletePackageVersionsResponse_successfulVersions</a> - A list of
--   the package versions that were successfully deleted.
--   
--   <a>$sel:httpStatus:DeletePackageVersionsResponse'</a>,
--   <a>deletePackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDeletePackageVersionsResponse :: Int -> DeletePackageVersionsResponse

-- | A <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the deleted package that failed. The possible error codes
--   are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
deletePackageVersionsResponse_failedVersions :: Lens' DeletePackageVersionsResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of the package versions that were successfully deleted.
deletePackageVersionsResponse_successfulVersions :: Lens' DeletePackageVersionsResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
deletePackageVersionsResponse_httpStatus :: Lens' DeletePackageVersionsResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance GHC.Show.Show Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance GHC.Read.Read Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersionsResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersionsResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersionsResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DeletePackageVersions.DeletePackageVersions


-- | Deletes the resource policy set on a domain.
module Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy

-- | <i>See:</i> <a>newDeleteDomainPermissionsPolicy</a> smart constructor.
data DeleteDomainPermissionsPolicy
DeleteDomainPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> DeleteDomainPermissionsPolicy

-- | The current revision of the resource policy to be deleted. This
--   revision is used for optimistic locking, which prevents others from
--   overwriting your changes to the domain's resource policy.
[$sel:policyRevision:DeleteDomainPermissionsPolicy'] :: DeleteDomainPermissionsPolicy -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DeleteDomainPermissionsPolicy'] :: DeleteDomainPermissionsPolicy -> Maybe Text

-- | The name of the domain associated with the resource policy to be
--   deleted.
[$sel:domain:DeleteDomainPermissionsPolicy'] :: DeleteDomainPermissionsPolicy -> Text

-- | Create a value of <a>DeleteDomainPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:DeleteDomainPermissionsPolicy'</a>,
--   <a>deleteDomainPermissionsPolicy_policyRevision</a> - The current
--   revision of the resource policy to be deleted. This revision is used
--   for optimistic locking, which prevents others from overwriting your
--   changes to the domain's resource policy.
--   
--   <a>$sel:domainOwner:DeleteDomainPermissionsPolicy'</a>,
--   <a>deleteDomainPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:DeleteDomainPermissionsPolicy'</a>,
--   <a>deleteDomainPermissionsPolicy_domain</a> - The name of the domain
--   associated with the resource policy to be deleted.
newDeleteDomainPermissionsPolicy :: Text -> DeleteDomainPermissionsPolicy

-- | The current revision of the resource policy to be deleted. This
--   revision is used for optimistic locking, which prevents others from
--   overwriting your changes to the domain's resource policy.
deleteDomainPermissionsPolicy_policyRevision :: Lens' DeleteDomainPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteDomainPermissionsPolicy_domainOwner :: Lens' DeleteDomainPermissionsPolicy (Maybe Text)

-- | The name of the domain associated with the resource policy to be
--   deleted.
deleteDomainPermissionsPolicy_domain :: Lens' DeleteDomainPermissionsPolicy Text

-- | <i>See:</i> <a>newDeleteDomainPermissionsPolicyResponse</a> smart
--   constructor.
data DeleteDomainPermissionsPolicyResponse
DeleteDomainPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> DeleteDomainPermissionsPolicyResponse

-- | Information about the deleted resource policy after processing the
--   request.
[$sel:policy:DeleteDomainPermissionsPolicyResponse'] :: DeleteDomainPermissionsPolicyResponse -> Maybe ResourcePolicy

-- | The response's http status code.
[$sel:httpStatus:DeleteDomainPermissionsPolicyResponse'] :: DeleteDomainPermissionsPolicyResponse -> Int

-- | Create a value of <a>DeleteDomainPermissionsPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:DeleteDomainPermissionsPolicyResponse'</a>,
--   <a>deleteDomainPermissionsPolicyResponse_policy</a> - Information
--   about the deleted resource policy after processing the request.
--   
--   <a>$sel:httpStatus:DeleteDomainPermissionsPolicyResponse'</a>,
--   <a>deleteDomainPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newDeleteDomainPermissionsPolicyResponse :: Int -> DeleteDomainPermissionsPolicyResponse

-- | Information about the deleted resource policy after processing the
--   request.
deleteDomainPermissionsPolicyResponse_policy :: Lens' DeleteDomainPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
deleteDomainPermissionsPolicyResponse_httpStatus :: Lens' DeleteDomainPermissionsPolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicyResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicyResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicyResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DeleteDomainPermissionsPolicy.DeleteDomainPermissionsPolicy


-- | Deletes a domain. You cannot delete a domain that contains
--   repositories. If you want to delete a domain with repositories, first
--   delete its repositories.
module Amazonka.CodeArtifact.DeleteDomain

-- | <i>See:</i> <a>newDeleteDomain</a> smart constructor.
data DeleteDomain
DeleteDomain' :: Maybe Text -> Text -> DeleteDomain

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:DeleteDomain'] :: DeleteDomain -> Maybe Text

-- | The name of the domain to delete.
[$sel:domain:DeleteDomain'] :: DeleteDomain -> Text

-- | Create a value of <a>DeleteDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DeleteDomain'</a>, <a>deleteDomain_domainOwner</a>
--   - The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
--   
--   <a>$sel:domain:DeleteDomain'</a>, <a>deleteDomain_domain</a> - The
--   name of the domain to delete.
newDeleteDomain :: Text -> DeleteDomain

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteDomain_domainOwner :: Lens' DeleteDomain (Maybe Text)

-- | The name of the domain to delete.
deleteDomain_domain :: Lens' DeleteDomain Text

-- | <i>See:</i> <a>newDeleteDomainResponse</a> smart constructor.
data DeleteDomainResponse
DeleteDomainResponse' :: Maybe DomainDescription -> Int -> DeleteDomainResponse

-- | Contains information about the deleted domain after processing the
--   request.
[$sel:domain:DeleteDomainResponse'] :: DeleteDomainResponse -> Maybe DomainDescription

-- | The response's http status code.
[$sel:httpStatus:DeleteDomainResponse'] :: DeleteDomainResponse -> Int

-- | Create a value of <a>DeleteDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DeleteDomain'</a>, <a>deleteDomainResponse_domain</a> -
--   Contains information about the deleted domain after processing the
--   request.
--   
--   <a>$sel:httpStatus:DeleteDomainResponse'</a>,
--   <a>deleteDomainResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDomainResponse :: Int -> DeleteDomainResponse

-- | Contains information about the deleted domain after processing the
--   request.
deleteDomainResponse_domain :: Lens' DeleteDomainResponse (Maybe DomainDescription)

-- | The response's http status code.
deleteDomainResponse_httpStatus :: Lens' DeleteDomainResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance GHC.Generics.Generic Amazonka.CodeArtifact.DeleteDomain.DeleteDomainResponse
instance GHC.Show.Show Amazonka.CodeArtifact.DeleteDomain.DeleteDomainResponse
instance GHC.Read.Read Amazonka.CodeArtifact.DeleteDomain.DeleteDomainResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.DeleteDomain.DeleteDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteDomain.DeleteDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.DeleteDomain.DeleteDomain
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.DeleteDomain.DeleteDomain


-- | Creates a repository.
module Amazonka.CodeArtifact.CreateRepository

-- | <i>See:</i> <a>newCreateRepository</a> smart constructor.
data CreateRepository
CreateRepository' :: Maybe [UpstreamRepository] -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> Text -> CreateRepository

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
[$sel:upstreams:CreateRepository'] :: CreateRepository -> Maybe [UpstreamRepository]

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:CreateRepository'] :: CreateRepository -> Maybe Text

-- | A description of the created repository.
[$sel:description:CreateRepository'] :: CreateRepository -> Maybe Text

-- | One or more tag key-value pairs for the repository.
[$sel:tags:CreateRepository'] :: CreateRepository -> Maybe [Tag]

-- | The name of the domain that contains the created repository.
[$sel:domain:CreateRepository'] :: CreateRepository -> Text

-- | The name of the repository to create.
[$sel:repository:CreateRepository'] :: CreateRepository -> Text

-- | Create a value of <a>CreateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upstreams:CreateRepository'</a>,
--   <a>createRepository_upstreams</a> - A list of upstream repositories to
--   associate with the repository. The order of the upstream repositories
--   in the list determines their priority order when AWS CodeArtifact
--   looks for a requested package version. For more information, see
--   <a>Working with upstream repositories</a>.
--   
--   <a>$sel:domainOwner:CreateRepository'</a>,
--   <a>createRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:description:CreateRepository'</a>,
--   <a>createRepository_description</a> - A description of the created
--   repository.
--   
--   <a>$sel:tags:CreateRepository'</a>, <a>createRepository_tags</a> - One
--   or more tag key-value pairs for the repository.
--   
--   <a>$sel:domain:CreateRepository'</a>, <a>createRepository_domain</a> -
--   The name of the domain that contains the created repository.
--   
--   <a>$sel:repository:CreateRepository'</a>,
--   <a>createRepository_repository</a> - The name of the repository to
--   create.
newCreateRepository :: Text -> Text -> CreateRepository

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
createRepository_upstreams :: Lens' CreateRepository (Maybe [UpstreamRepository])

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
createRepository_domainOwner :: Lens' CreateRepository (Maybe Text)

-- | A description of the created repository.
createRepository_description :: Lens' CreateRepository (Maybe Text)

-- | One or more tag key-value pairs for the repository.
createRepository_tags :: Lens' CreateRepository (Maybe [Tag])

-- | The name of the domain that contains the created repository.
createRepository_domain :: Lens' CreateRepository Text

-- | The name of the repository to create.
createRepository_repository :: Lens' CreateRepository Text

-- | <i>See:</i> <a>newCreateRepositoryResponse</a> smart constructor.
data CreateRepositoryResponse
CreateRepositoryResponse' :: Maybe RepositoryDescription -> Int -> CreateRepositoryResponse

-- | Information about the created repository after processing the request.
[$sel:repository:CreateRepositoryResponse'] :: CreateRepositoryResponse -> Maybe RepositoryDescription

-- | The response's http status code.
[$sel:httpStatus:CreateRepositoryResponse'] :: CreateRepositoryResponse -> Int

-- | Create a value of <a>CreateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:CreateRepository'</a>,
--   <a>createRepositoryResponse_repository</a> - Information about the
--   created repository after processing the request.
--   
--   <a>$sel:httpStatus:CreateRepositoryResponse'</a>,
--   <a>createRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newCreateRepositoryResponse :: Int -> CreateRepositoryResponse

-- | Information about the created repository after processing the request.
createRepositoryResponse_repository :: Lens' CreateRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
createRepositoryResponse_httpStatus :: Lens' CreateRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance GHC.Show.Show Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance GHC.Read.Read Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance GHC.Classes.Eq Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance GHC.Generics.Generic Amazonka.CodeArtifact.CreateRepository.CreateRepositoryResponse
instance GHC.Show.Show Amazonka.CodeArtifact.CreateRepository.CreateRepositoryResponse
instance GHC.Read.Read Amazonka.CodeArtifact.CreateRepository.CreateRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.CreateRepository.CreateRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.CreateRepository.CreateRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.CreateRepository.CreateRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.CreateRepository.CreateRepository


-- | Creates a domain. CodeArtifact <i>domains</i> make it easier to manage
--   multiple repositories across an organization. You can use a domain to
--   apply permissions across many repositories owned by different AWS
--   accounts. An asset is stored only once in a domain, even if it's in
--   multiple repositories.
--   
--   Although you can have multiple domains, we recommend a single
--   production domain that contains all published artifacts so that your
--   development teams can find and share packages. You can use a second
--   pre-production domain to test changes to the production domain
--   configuration.
module Amazonka.CodeArtifact.CreateDomain

-- | <i>See:</i> <a>newCreateDomain</a> smart constructor.
data CreateDomain
CreateDomain' :: Maybe Text -> Maybe [Tag] -> Text -> CreateDomain

-- | The encryption key for the domain. This is used to encrypt content
--   stored in a domain. An encryption key can be a key ID, a key Amazon
--   Resource Name (ARN), a key alias, or a key alias ARN. To specify an
--   <tt>encryptionKey</tt>, your IAM role must have
--   <tt>kms:DescribeKey</tt> and <tt>kms:CreateGrant</tt> permissions on
--   the encryption key that is used. For more information, see
--   <a>DescribeKey</a> in the <i>AWS Key Management Service API
--   Reference</i> and <a>AWS KMS API Permissions Reference</a> in the
--   <i>AWS Key Management Service Developer Guide</i>.
--   
--   CodeArtifact supports only symmetric CMKs. Do not associate an
--   asymmetric CMK with your domain. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.
[$sel:encryptionKey:CreateDomain'] :: CreateDomain -> Maybe Text

-- | One or more tag key-value pairs for the domain.
[$sel:tags:CreateDomain'] :: CreateDomain -> Maybe [Tag]

-- | The name of the domain to create. All domain names in an AWS Region
--   that are in the same AWS account must be unique. The domain name is
--   used as the prefix in DNS hostnames. Do not use sensitive information
--   in a domain name because it is publicly discoverable.
[$sel:domain:CreateDomain'] :: CreateDomain -> Text

-- | Create a value of <a>CreateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:CreateDomain'</a>,
--   <a>createDomain_encryptionKey</a> - The encryption key for the domain.
--   This is used to encrypt content stored in a domain. An encryption key
--   can be a key ID, a key Amazon Resource Name (ARN), a key alias, or a
--   key alias ARN. To specify an <tt>encryptionKey</tt>, your IAM role
--   must have <tt>kms:DescribeKey</tt> and <tt>kms:CreateGrant</tt>
--   permissions on the encryption key that is used. For more information,
--   see <a>DescribeKey</a> in the <i>AWS Key Management Service API
--   Reference</i> and <a>AWS KMS API Permissions Reference</a> in the
--   <i>AWS Key Management Service Developer Guide</i>.
--   
--   CodeArtifact supports only symmetric CMKs. Do not associate an
--   asymmetric CMK with your domain. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.
--   
--   <a>$sel:tags:CreateDomain'</a>, <a>createDomain_tags</a> - One or more
--   tag key-value pairs for the domain.
--   
--   <a>$sel:domain:CreateDomain'</a>, <a>createDomain_domain</a> - The
--   name of the domain to create. All domain names in an AWS Region that
--   are in the same AWS account must be unique. The domain name is used as
--   the prefix in DNS hostnames. Do not use sensitive information in a
--   domain name because it is publicly discoverable.
newCreateDomain :: Text -> CreateDomain

-- | The encryption key for the domain. This is used to encrypt content
--   stored in a domain. An encryption key can be a key ID, a key Amazon
--   Resource Name (ARN), a key alias, or a key alias ARN. To specify an
--   <tt>encryptionKey</tt>, your IAM role must have
--   <tt>kms:DescribeKey</tt> and <tt>kms:CreateGrant</tt> permissions on
--   the encryption key that is used. For more information, see
--   <a>DescribeKey</a> in the <i>AWS Key Management Service API
--   Reference</i> and <a>AWS KMS API Permissions Reference</a> in the
--   <i>AWS Key Management Service Developer Guide</i>.
--   
--   CodeArtifact supports only symmetric CMKs. Do not associate an
--   asymmetric CMK with your domain. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.
createDomain_encryptionKey :: Lens' CreateDomain (Maybe Text)

-- | One or more tag key-value pairs for the domain.
createDomain_tags :: Lens' CreateDomain (Maybe [Tag])

-- | The name of the domain to create. All domain names in an AWS Region
--   that are in the same AWS account must be unique. The domain name is
--   used as the prefix in DNS hostnames. Do not use sensitive information
--   in a domain name because it is publicly discoverable.
createDomain_domain :: Lens' CreateDomain Text

-- | <i>See:</i> <a>newCreateDomainResponse</a> smart constructor.
data CreateDomainResponse
CreateDomainResponse' :: Maybe DomainDescription -> Int -> CreateDomainResponse

-- | Contains information about the created domain after processing the
--   request.
[$sel:domain:CreateDomainResponse'] :: CreateDomainResponse -> Maybe DomainDescription

-- | The response's http status code.
[$sel:httpStatus:CreateDomainResponse'] :: CreateDomainResponse -> Int

-- | Create a value of <a>CreateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:CreateDomain'</a>, <a>createDomainResponse_domain</a> -
--   Contains information about the created domain after processing the
--   request.
--   
--   <a>$sel:httpStatus:CreateDomainResponse'</a>,
--   <a>createDomainResponse_httpStatus</a> - The response's http status
--   code.
newCreateDomainResponse :: Int -> CreateDomainResponse

-- | Contains information about the created domain after processing the
--   request.
createDomainResponse_domain :: Lens' CreateDomainResponse (Maybe DomainDescription)

-- | The response's http status code.
createDomainResponse_httpStatus :: Lens' CreateDomainResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance GHC.Show.Show Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance GHC.Read.Read Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance GHC.Classes.Eq Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance GHC.Generics.Generic Amazonka.CodeArtifact.CreateDomain.CreateDomainResponse
instance GHC.Show.Show Amazonka.CodeArtifact.CreateDomain.CreateDomainResponse
instance GHC.Read.Read Amazonka.CodeArtifact.CreateDomain.CreateDomainResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.CreateDomain.CreateDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.CreateDomain.CreateDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.CreateDomain.CreateDomain
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.CreateDomain.CreateDomain


-- | Copies package versions from one repository to another repository in
--   the same domain.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
module Amazonka.CodeArtifact.CopyPackageVersions

-- | <i>See:</i> <a>newCopyPackageVersions</a> smart constructor.
data CopyPackageVersions
CopyPackageVersions' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Text -> Text -> Text -> PackageFormat -> Text -> CopyPackageVersions

-- | Set to true to overwrite a package version that already exists in the
--   destination repository. If set to false and the package version
--   already exists in the destination repository, the package version is
--   returned in the <tt>failedVersions</tt> field of the response with an
--   <tt>ALREADY_EXISTS</tt> error code.
[$sel:allowOverwrite:CopyPackageVersions'] :: CopyPackageVersions -> Maybe Bool

-- | A list of key-value pairs. The keys are package versions and the
--   values are package version revisions. A <tt>CopyPackageVersion</tt>
--   operation succeeds if the specified versions in the source repository
--   match the specified package version revision.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
[$sel:versionRevisions:CopyPackageVersions'] :: CopyPackageVersions -> Maybe (HashMap Text Text)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:CopyPackageVersions'] :: CopyPackageVersions -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:CopyPackageVersions'] :: CopyPackageVersions -> Maybe Text

-- | The versions of the package to copy.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
[$sel:versions:CopyPackageVersions'] :: CopyPackageVersions -> Maybe [Text]

-- | Set to true to copy packages from repositories that are upstream from
--   the source repository to the destination repository. The default
--   setting is false. For more information, see <a>Working with upstream
--   repositories</a>.
[$sel:includeFromUpstream:CopyPackageVersions'] :: CopyPackageVersions -> Maybe Bool

-- | The name of the domain that contains the source and destination
--   repositories.
[$sel:domain:CopyPackageVersions'] :: CopyPackageVersions -> Text

-- | The name of the repository that contains the package versions to copy.
[$sel:sourceRepository:CopyPackageVersions'] :: CopyPackageVersions -> Text

-- | The name of the repository into which package versions are copied.
[$sel:destinationRepository:CopyPackageVersions'] :: CopyPackageVersions -> Text

-- | The format of the package that is copied. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
[$sel:format:CopyPackageVersions'] :: CopyPackageVersions -> PackageFormat

-- | The name of the package that is copied.
[$sel:package:CopyPackageVersions'] :: CopyPackageVersions -> Text

-- | Create a value of <a>CopyPackageVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowOverwrite:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_allowOverwrite</a> - Set to true to overwrite a
--   package version that already exists in the destination repository. If
--   set to false and the package version already exists in the destination
--   repository, the package version is returned in the
--   <tt>failedVersions</tt> field of the response with an
--   <tt>ALREADY_EXISTS</tt> error code.
--   
--   <a>$sel:versionRevisions:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_versionRevisions</a> - A list of key-value
--   pairs. The keys are package versions and the values are package
--   version revisions. A <tt>CopyPackageVersion</tt> operation succeeds if
--   the specified versions in the source repository match the specified
--   package version revision.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
--   
--   <a>$sel:namespace:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_namespace</a> - The namespace of the package.
--   The package component that specifies its namespace depends on its
--   type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:versions:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_versions</a> - The versions of the package to
--   copy.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
--   
--   <a>$sel:includeFromUpstream:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_includeFromUpstream</a> - Set to true to copy
--   packages from repositories that are upstream from the source
--   repository to the destination repository. The default setting is
--   false. For more information, see <a>Working with upstream
--   repositories</a>.
--   
--   <a>$sel:domain:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_domain</a> - The name of the domain that
--   contains the source and destination repositories.
--   
--   <a>$sel:sourceRepository:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_sourceRepository</a> - The name of the
--   repository that contains the package versions to copy.
--   
--   <a>$sel:destinationRepository:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_destinationRepository</a> - The name of the
--   repository into which package versions are copied.
--   
--   <a>$sel:format:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_format</a> - The format of the package that is
--   copied. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_package</a> - The name of the package that is
--   copied.
newCopyPackageVersions :: Text -> Text -> Text -> PackageFormat -> Text -> CopyPackageVersions

-- | Set to true to overwrite a package version that already exists in the
--   destination repository. If set to false and the package version
--   already exists in the destination repository, the package version is
--   returned in the <tt>failedVersions</tt> field of the response with an
--   <tt>ALREADY_EXISTS</tt> error code.
copyPackageVersions_allowOverwrite :: Lens' CopyPackageVersions (Maybe Bool)

-- | A list of key-value pairs. The keys are package versions and the
--   values are package version revisions. A <tt>CopyPackageVersion</tt>
--   operation succeeds if the specified versions in the source repository
--   match the specified package version revision.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
copyPackageVersions_versionRevisions :: Lens' CopyPackageVersions (Maybe (HashMap Text Text))

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
copyPackageVersions_namespace :: Lens' CopyPackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
copyPackageVersions_domainOwner :: Lens' CopyPackageVersions (Maybe Text)

-- | The versions of the package to copy.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
copyPackageVersions_versions :: Lens' CopyPackageVersions (Maybe [Text])

-- | Set to true to copy packages from repositories that are upstream from
--   the source repository to the destination repository. The default
--   setting is false. For more information, see <a>Working with upstream
--   repositories</a>.
copyPackageVersions_includeFromUpstream :: Lens' CopyPackageVersions (Maybe Bool)

-- | The name of the domain that contains the source and destination
--   repositories.
copyPackageVersions_domain :: Lens' CopyPackageVersions Text

-- | The name of the repository that contains the package versions to copy.
copyPackageVersions_sourceRepository :: Lens' CopyPackageVersions Text

-- | The name of the repository into which package versions are copied.
copyPackageVersions_destinationRepository :: Lens' CopyPackageVersions Text

-- | The format of the package that is copied. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
copyPackageVersions_format :: Lens' CopyPackageVersions PackageFormat

-- | The name of the package that is copied.
copyPackageVersions_package :: Lens' CopyPackageVersions Text

-- | <i>See:</i> <a>newCopyPackageVersionsResponse</a> smart constructor.
data CopyPackageVersionsResponse
CopyPackageVersionsResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> CopyPackageVersionsResponse

-- | A map of package versions that failed to copy and their error codes.
--   The possible error codes are in the <tt>PackageVersionError</tt> data
--   type. They are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
[$sel:failedVersions:CopyPackageVersionsResponse'] :: CopyPackageVersionsResponse -> Maybe (HashMap Text PackageVersionError)

-- | A list of the package versions that were successfully copied to your
--   repository.
[$sel:successfulVersions:CopyPackageVersionsResponse'] :: CopyPackageVersionsResponse -> Maybe (HashMap Text SuccessfulPackageVersionInfo)

-- | The response's http status code.
[$sel:httpStatus:CopyPackageVersionsResponse'] :: CopyPackageVersionsResponse -> Int

-- | Create a value of <a>CopyPackageVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:CopyPackageVersionsResponse'</a>,
--   <a>copyPackageVersionsResponse_failedVersions</a> - A map of package
--   versions that failed to copy and their error codes. The possible error
--   codes are in the <tt>PackageVersionError</tt> data type. They are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:successfulVersions:CopyPackageVersionsResponse'</a>,
--   <a>copyPackageVersionsResponse_successfulVersions</a> - A list of the
--   package versions that were successfully copied to your repository.
--   
--   <a>$sel:httpStatus:CopyPackageVersionsResponse'</a>,
--   <a>copyPackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newCopyPackageVersionsResponse :: Int -> CopyPackageVersionsResponse

-- | A map of package versions that failed to copy and their error codes.
--   The possible error codes are in the <tt>PackageVersionError</tt> data
--   type. They are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
copyPackageVersionsResponse_failedVersions :: Lens' CopyPackageVersionsResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of the package versions that were successfully copied to your
--   repository.
copyPackageVersionsResponse_successfulVersions :: Lens' CopyPackageVersionsResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
copyPackageVersionsResponse_httpStatus :: Lens' CopyPackageVersionsResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance GHC.Show.Show Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance GHC.Read.Read Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance GHC.Classes.Eq Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance GHC.Generics.Generic Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersionsResponse
instance GHC.Show.Show Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersionsResponse
instance GHC.Read.Read Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersionsResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.CopyPackageVersions.CopyPackageVersions


-- | Adds an existing external connection to a repository. One external
--   connection is allowed per repository.
--   
--   A repository can have one or more upstream repositories, or an
--   external connection.
module Amazonka.CodeArtifact.AssociateExternalConnection

-- | <i>See:</i> <a>newAssociateExternalConnection</a> smart constructor.
data AssociateExternalConnection
AssociateExternalConnection' :: Maybe Text -> Text -> Text -> Text -> AssociateExternalConnection

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:AssociateExternalConnection'] :: AssociateExternalConnection -> Maybe Text

-- | The name of the domain that contains the repository.
[$sel:domain:AssociateExternalConnection'] :: AssociateExternalConnection -> Text

-- | The name of the repository to which the external connection is added.
[$sel:repository:AssociateExternalConnection'] :: AssociateExternalConnection -> Text

-- | The name of the external connection to add to the repository. The
--   following values are supported:
--   
--   <ul>
--   <li><tt>public:npmjs</tt> - for the npm public repository.</li>
--   <li><tt>public:pypi</tt> - for the Python Package Index.</li>
--   <li><tt>public:maven-central</tt> - for Maven Central.</li>
--   <li><tt>public:maven-googleandroid</tt> - for the Google Android
--   repository.</li>
--   <li><tt>public:maven-gradleplugins</tt> - for the Gradle plugins
--   repository.</li>
--   <li><tt>public:maven-commonsware</tt> - for the CommonsWare Android
--   repository.</li>
--   </ul>
[$sel:externalConnection:AssociateExternalConnection'] :: AssociateExternalConnection -> Text

-- | Create a value of <a>AssociateExternalConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_domain</a> - The name of the domain
--   that contains the repository.
--   
--   <a>$sel:repository:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_repository</a> - The name of the
--   repository to which the external connection is added.
--   
--   <a>$sel:externalConnection:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_externalConnection</a> - The name of
--   the external connection to add to the repository. The following values
--   are supported:
--   
--   <ul>
--   <li><tt>public:npmjs</tt> - for the npm public repository.</li>
--   <li><tt>public:pypi</tt> - for the Python Package Index.</li>
--   <li><tt>public:maven-central</tt> - for Maven Central.</li>
--   <li><tt>public:maven-googleandroid</tt> - for the Google Android
--   repository.</li>
--   <li><tt>public:maven-gradleplugins</tt> - for the Gradle plugins
--   repository.</li>
--   <li><tt>public:maven-commonsware</tt> - for the CommonsWare Android
--   repository.</li>
--   </ul>
newAssociateExternalConnection :: Text -> Text -> Text -> AssociateExternalConnection

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
associateExternalConnection_domainOwner :: Lens' AssociateExternalConnection (Maybe Text)

-- | The name of the domain that contains the repository.
associateExternalConnection_domain :: Lens' AssociateExternalConnection Text

-- | The name of the repository to which the external connection is added.
associateExternalConnection_repository :: Lens' AssociateExternalConnection Text

-- | The name of the external connection to add to the repository. The
--   following values are supported:
--   
--   <ul>
--   <li><tt>public:npmjs</tt> - for the npm public repository.</li>
--   <li><tt>public:pypi</tt> - for the Python Package Index.</li>
--   <li><tt>public:maven-central</tt> - for Maven Central.</li>
--   <li><tt>public:maven-googleandroid</tt> - for the Google Android
--   repository.</li>
--   <li><tt>public:maven-gradleplugins</tt> - for the Gradle plugins
--   repository.</li>
--   <li><tt>public:maven-commonsware</tt> - for the CommonsWare Android
--   repository.</li>
--   </ul>
associateExternalConnection_externalConnection :: Lens' AssociateExternalConnection Text

-- | <i>See:</i> <a>newAssociateExternalConnectionResponse</a> smart
--   constructor.
data AssociateExternalConnectionResponse
AssociateExternalConnectionResponse' :: Maybe RepositoryDescription -> Int -> AssociateExternalConnectionResponse

-- | Information about the connected repository after processing the
--   request.
[$sel:repository:AssociateExternalConnectionResponse'] :: AssociateExternalConnectionResponse -> Maybe RepositoryDescription

-- | The response's http status code.
[$sel:httpStatus:AssociateExternalConnectionResponse'] :: AssociateExternalConnectionResponse -> Int

-- | Create a value of <a>AssociateExternalConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:AssociateExternalConnection'</a>,
--   <a>associateExternalConnectionResponse_repository</a> - Information
--   about the connected repository after processing the request.
--   
--   <a>$sel:httpStatus:AssociateExternalConnectionResponse'</a>,
--   <a>associateExternalConnectionResponse_httpStatus</a> - The response's
--   http status code.
newAssociateExternalConnectionResponse :: Int -> AssociateExternalConnectionResponse

-- | Information about the connected repository after processing the
--   request.
associateExternalConnectionResponse_repository :: Lens' AssociateExternalConnectionResponse (Maybe RepositoryDescription)

-- | The response's http status code.
associateExternalConnectionResponse_httpStatus :: Lens' AssociateExternalConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance GHC.Show.Show Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance GHC.Read.Read Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance GHC.Classes.Eq Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance GHC.Generics.Generic Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnectionResponse
instance GHC.Show.Show Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnectionResponse
instance GHC.Read.Read Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnectionResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.AssociateExternalConnection.AssociateExternalConnection


-- | Removes tags from a resource in AWS CodeArtifact.
module Amazonka.CodeArtifact.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to remove
--   tags from.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag key for each tag that you want to remove from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag key for each tag that you want to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to remove
--   tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag key for each tag that you want to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.CodeArtifact.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.CodeArtifact.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.CodeArtifact.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.CodeArtifact.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.CodeArtifact.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.CodeArtifact.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.UntagResource.UntagResource


-- | Updates the status of one or more versions of a package.
module Amazonka.CodeArtifact.UpdatePackageVersionsStatus

-- | <i>See:</i> <a>newUpdatePackageVersionsStatus</a> smart constructor.
data UpdatePackageVersionsStatus
UpdatePackageVersionsStatus' :: Maybe PackageVersionStatus -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> [Text] -> PackageVersionStatus -> UpdatePackageVersionsStatus

-- | The package version’s expected status before it is updated. If
--   <tt>expectedStatus</tt> is provided, the package version's status is
--   updated only if its status at the time
--   <tt>UpdatePackageVersionsStatus</tt> is called matches
--   <tt>expectedStatus</tt>.
[$sel:expectedStatus:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> Maybe PackageVersionStatus

-- | A map of package versions and package version revisions. The map
--   <tt>key</tt> is the package version (for example, <tt>3.5.2</tt>), and
--   the map <tt>value</tt> is the package version revision.
[$sel:versionRevisions:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> Maybe (HashMap Text Text)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
[$sel:namespace:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> Maybe Text

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> Maybe Text

-- | The name of the domain that contains the repository that contains the
--   package versions with a status to be updated.
[$sel:domain:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> Text

-- | The repository that contains the package versions with the status you
--   want to update.
[$sel:repository:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> Text

-- | A format that specifies the type of the package with the statuses to
--   update. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
[$sel:format:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> PackageFormat

-- | The name of the package with the version statuses to update.
[$sel:package:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> Text

-- | An array of strings that specify the versions of the package with the
--   statuses to update.
[$sel:versions:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> [Text]

-- | The status you want to change the package version status to.
[$sel:targetStatus:UpdatePackageVersionsStatus'] :: UpdatePackageVersionsStatus -> PackageVersionStatus

-- | Create a value of <a>UpdatePackageVersionsStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expectedStatus:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_expectedStatus</a> - The package
--   version’s expected status before it is updated. If
--   <tt>expectedStatus</tt> is provided, the package version's status is
--   updated only if its status at the time
--   <tt>UpdatePackageVersionsStatus</tt> is called matches
--   <tt>expectedStatus</tt>.
--   
--   <a>$sel:versionRevisions:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_versionRevisions</a> - A map of package
--   versions and package version revisions. The map <tt>key</tt> is the
--   package version (for example, <tt>3.5.2</tt>), and the map
--   <tt>value</tt> is the package version revision.
--   
--   <a>$sel:namespace:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_domain</a> - The name of the domain
--   that contains the repository that contains the package versions with a
--   status to be updated.
--   
--   <a>$sel:repository:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_repository</a> - The repository that
--   contains the package versions with the status you want to update.
--   
--   <a>$sel:format:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_format</a> - A format that specifies
--   the type of the package with the statuses to update. The valid values
--   are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_package</a> - The name of the package
--   with the version statuses to update.
--   
--   <a>$sel:versions:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_versions</a> - An array of strings that
--   specify the versions of the package with the statuses to update.
--   
--   <a>$sel:targetStatus:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_targetStatus</a> - The status you want
--   to change the package version status to.
newUpdatePackageVersionsStatus :: Text -> Text -> PackageFormat -> Text -> PackageVersionStatus -> UpdatePackageVersionsStatus

-- | The package version’s expected status before it is updated. If
--   <tt>expectedStatus</tt> is provided, the package version's status is
--   updated only if its status at the time
--   <tt>UpdatePackageVersionsStatus</tt> is called matches
--   <tt>expectedStatus</tt>.
updatePackageVersionsStatus_expectedStatus :: Lens' UpdatePackageVersionsStatus (Maybe PackageVersionStatus)

-- | A map of package versions and package version revisions. The map
--   <tt>key</tt> is the package version (for example, <tt>3.5.2</tt>), and
--   the map <tt>value</tt> is the package version revision.
updatePackageVersionsStatus_versionRevisions :: Lens' UpdatePackageVersionsStatus (Maybe (HashMap Text Text))

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
updatePackageVersionsStatus_namespace :: Lens' UpdatePackageVersionsStatus (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
updatePackageVersionsStatus_domainOwner :: Lens' UpdatePackageVersionsStatus (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package versions with a status to be updated.
updatePackageVersionsStatus_domain :: Lens' UpdatePackageVersionsStatus Text

-- | The repository that contains the package versions with the status you
--   want to update.
updatePackageVersionsStatus_repository :: Lens' UpdatePackageVersionsStatus Text

-- | A format that specifies the type of the package with the statuses to
--   update. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
updatePackageVersionsStatus_format :: Lens' UpdatePackageVersionsStatus PackageFormat

-- | The name of the package with the version statuses to update.
updatePackageVersionsStatus_package :: Lens' UpdatePackageVersionsStatus Text

-- | An array of strings that specify the versions of the package with the
--   statuses to update.
updatePackageVersionsStatus_versions :: Lens' UpdatePackageVersionsStatus [Text]

-- | The status you want to change the package version status to.
updatePackageVersionsStatus_targetStatus :: Lens' UpdatePackageVersionsStatus PackageVersionStatus

-- | <i>See:</i> <a>newUpdatePackageVersionsStatusResponse</a> smart
--   constructor.
data UpdatePackageVersionsStatusResponse
UpdatePackageVersionsStatusResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> UpdatePackageVersionsStatusResponse

-- | A list of <tt>SuccessfulPackageVersionInfo</tt> objects, one for each
--   package version with a status that successfully updated.
[$sel:failedVersions:UpdatePackageVersionsStatusResponse'] :: UpdatePackageVersionsStatusResponse -> Maybe (HashMap Text PackageVersionError)

-- | A list of <tt>PackageVersionError</tt> objects, one for each package
--   version with a status that failed to update.
[$sel:successfulVersions:UpdatePackageVersionsStatusResponse'] :: UpdatePackageVersionsStatusResponse -> Maybe (HashMap Text SuccessfulPackageVersionInfo)

-- | The response's http status code.
[$sel:httpStatus:UpdatePackageVersionsStatusResponse'] :: UpdatePackageVersionsStatusResponse -> Int

-- | Create a value of <a>UpdatePackageVersionsStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:UpdatePackageVersionsStatusResponse'</a>,
--   <a>updatePackageVersionsStatusResponse_failedVersions</a> - A list of
--   <tt>SuccessfulPackageVersionInfo</tt> objects, one for each package
--   version with a status that successfully updated.
--   
--   <a>$sel:successfulVersions:UpdatePackageVersionsStatusResponse'</a>,
--   <a>updatePackageVersionsStatusResponse_successfulVersions</a> - A list
--   of <tt>PackageVersionError</tt> objects, one for each package version
--   with a status that failed to update.
--   
--   <a>$sel:httpStatus:UpdatePackageVersionsStatusResponse'</a>,
--   <a>updatePackageVersionsStatusResponse_httpStatus</a> - The response's
--   http status code.
newUpdatePackageVersionsStatusResponse :: Int -> UpdatePackageVersionsStatusResponse

-- | A list of <tt>SuccessfulPackageVersionInfo</tt> objects, one for each
--   package version with a status that successfully updated.
updatePackageVersionsStatusResponse_failedVersions :: Lens' UpdatePackageVersionsStatusResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of <tt>PackageVersionError</tt> objects, one for each package
--   version with a status that failed to update.
updatePackageVersionsStatusResponse_successfulVersions :: Lens' UpdatePackageVersionsStatusResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
updatePackageVersionsStatusResponse_httpStatus :: Lens' UpdatePackageVersionsStatusResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance GHC.Show.Show Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance GHC.Read.Read Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance GHC.Classes.Eq Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance GHC.Generics.Generic Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatusResponse
instance GHC.Show.Show Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatusResponse
instance GHC.Read.Read Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatusResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatusResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatusResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.UpdatePackageVersionsStatus.UpdatePackageVersionsStatus


-- | Update the properties of a repository.
module Amazonka.CodeArtifact.UpdateRepository

-- | <i>See:</i> <a>newUpdateRepository</a> smart constructor.
data UpdateRepository
UpdateRepository' :: Maybe [UpstreamRepository] -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateRepository

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
[$sel:upstreams:UpdateRepository'] :: UpdateRepository -> Maybe [UpstreamRepository]

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
[$sel:domainOwner:UpdateRepository'] :: UpdateRepository -> Maybe Text

-- | An updated repository description.
[$sel:description:UpdateRepository'] :: UpdateRepository -> Maybe Text

-- | The name of the domain associated with the repository to update.
[$sel:domain:UpdateRepository'] :: UpdateRepository -> Text

-- | The name of the repository to update.
[$sel:repository:UpdateRepository'] :: UpdateRepository -> Text

-- | Create a value of <a>UpdateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upstreams:UpdateRepository'</a>,
--   <a>updateRepository_upstreams</a> - A list of upstream repositories to
--   associate with the repository. The order of the upstream repositories
--   in the list determines their priority order when AWS CodeArtifact
--   looks for a requested package version. For more information, see
--   <a>Working with upstream repositories</a>.
--   
--   <a>$sel:domainOwner:UpdateRepository'</a>,
--   <a>updateRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:description:UpdateRepository'</a>,
--   <a>updateRepository_description</a> - An updated repository
--   description.
--   
--   <a>$sel:domain:UpdateRepository'</a>, <a>updateRepository_domain</a> -
--   The name of the domain associated with the repository to update.
--   
--   <a>$sel:repository:UpdateRepository'</a>,
--   <a>updateRepository_repository</a> - The name of the repository to
--   update.
newUpdateRepository :: Text -> Text -> UpdateRepository

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
updateRepository_upstreams :: Lens' UpdateRepository (Maybe [UpstreamRepository])

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
updateRepository_domainOwner :: Lens' UpdateRepository (Maybe Text)

-- | An updated repository description.
updateRepository_description :: Lens' UpdateRepository (Maybe Text)

-- | The name of the domain associated with the repository to update.
updateRepository_domain :: Lens' UpdateRepository Text

-- | The name of the repository to update.
updateRepository_repository :: Lens' UpdateRepository Text

-- | <i>See:</i> <a>newUpdateRepositoryResponse</a> smart constructor.
data UpdateRepositoryResponse
UpdateRepositoryResponse' :: Maybe RepositoryDescription -> Int -> UpdateRepositoryResponse

-- | The updated repository.
[$sel:repository:UpdateRepositoryResponse'] :: UpdateRepositoryResponse -> Maybe RepositoryDescription

-- | The response's http status code.
[$sel:httpStatus:UpdateRepositoryResponse'] :: UpdateRepositoryResponse -> Int

-- | Create a value of <a>UpdateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:UpdateRepository'</a>,
--   <a>updateRepositoryResponse_repository</a> - The updated repository.
--   
--   <a>$sel:httpStatus:UpdateRepositoryResponse'</a>,
--   <a>updateRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRepositoryResponse :: Int -> UpdateRepositoryResponse

-- | The updated repository.
updateRepositoryResponse_repository :: Lens' UpdateRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
updateRepositoryResponse_httpStatus :: Lens' UpdateRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance GHC.Show.Show Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance GHC.Read.Read Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance GHC.Classes.Eq Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance GHC.Generics.Generic Amazonka.CodeArtifact.UpdateRepository.UpdateRepositoryResponse
instance GHC.Show.Show Amazonka.CodeArtifact.UpdateRepository.UpdateRepositoryResponse
instance GHC.Read.Read Amazonka.CodeArtifact.UpdateRepository.UpdateRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeArtifact.UpdateRepository.UpdateRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.UpdateRepository.UpdateRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance Control.DeepSeq.NFData Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeArtifact.UpdateRepository.UpdateRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeArtifact.UpdateRepository.UpdateRepository


module Amazonka.CodeArtifact.Lens

-- | The expected status of the package version to dispose. Valid values
--   are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
disposePackageVersions_expectedStatus :: Lens' DisposePackageVersions (Maybe PackageVersionStatus)

-- | The revisions of the package versions you want to dispose.
disposePackageVersions_versionRevisions :: Lens' DisposePackageVersions (Maybe (HashMap Text Text))

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
disposePackageVersions_namespace :: Lens' DisposePackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
disposePackageVersions_domainOwner :: Lens' DisposePackageVersions (Maybe Text)

-- | The name of the domain that contains the repository you want to
--   dispose.
disposePackageVersions_domain :: Lens' DisposePackageVersions Text

-- | The name of the repository that contains the package versions you want
--   to dispose.
disposePackageVersions_repository :: Lens' DisposePackageVersions Text

-- | A format that specifies the type of package versions you want to
--   dispose. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
disposePackageVersions_format :: Lens' DisposePackageVersions PackageFormat

-- | The name of the package with the versions you want to dispose.
disposePackageVersions_package :: Lens' DisposePackageVersions Text

-- | The versions of the package you want to dispose.
disposePackageVersions_versions :: Lens' DisposePackageVersions [Text]

-- | A <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the disposed package versions that failed. The possible
--   error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
disposePackageVersionsResponse_failedVersions :: Lens' DisposePackageVersionsResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of the package versions that were successfully disposed.
disposePackageVersionsResponse_successfulVersions :: Lens' DisposePackageVersionsResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
disposePackageVersionsResponse_httpStatus :: Lens' DisposePackageVersionsResponse Int

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
getRepositoryEndpoint_domainOwner :: Lens' GetRepositoryEndpoint (Maybe Text)

-- | The name of the domain that contains the repository.
getRepositoryEndpoint_domain :: Lens' GetRepositoryEndpoint Text

-- | The name of the repository.
getRepositoryEndpoint_repository :: Lens' GetRepositoryEndpoint Text

-- | Returns which endpoint of a repository to return. A repository has one
--   endpoint for each package format:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getRepositoryEndpoint_format :: Lens' GetRepositoryEndpoint PackageFormat

-- | A string that specifies the URL of the returned endpoint.
getRepositoryEndpointResponse_repositoryEndpoint :: Lens' GetRepositoryEndpointResponse (Maybe Text)

-- | The response's http status code.
getRepositoryEndpointResponse_httpStatus :: Lens' GetRepositoryEndpointResponse Int

-- | The Amazon Resource Name (ARN) of the resource to get tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A list of tag key and value pairs associated with the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionDependencies_namespace :: Lens' ListPackageVersionDependencies (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackageVersionDependencies_domainOwner :: Lens' ListPackageVersionDependencies (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersionDependencies_nextToken :: Lens' ListPackageVersionDependencies (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   requested package version dependencies.
listPackageVersionDependencies_domain :: Lens' ListPackageVersionDependencies Text

-- | The name of the repository that contains the requested package
--   version.
listPackageVersionDependencies_repository :: Lens' ListPackageVersionDependencies Text

-- | The format of the package with the requested dependencies. The valid
--   package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackageVersionDependencies_format :: Lens' ListPackageVersionDependencies PackageFormat

-- | The name of the package versions' package.
listPackageVersionDependencies_package :: Lens' ListPackageVersionDependencies Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
listPackageVersionDependencies_packageVersion :: Lens' ListPackageVersionDependencies Text

-- | A format that specifies the type of the package that contains the
--   returned dependencies. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
listPackageVersionDependenciesResponse_format :: Lens' ListPackageVersionDependenciesResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionDependenciesResponse_namespace :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The current revision associated with the package version.
listPackageVersionDependenciesResponse_versionRevision :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The returned list of <a>PackageDependency</a> objects.
listPackageVersionDependenciesResponse_dependencies :: Lens' ListPackageVersionDependenciesResponse (Maybe [PackageDependency])

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersionDependenciesResponse_nextToken :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The version of the package that is specified in the request.
listPackageVersionDependenciesResponse_version :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The name of the package that contains the returned package versions
--   dependencies.
listPackageVersionDependenciesResponse_package :: Lens' ListPackageVersionDependenciesResponse (Maybe Text)

-- | The response's http status code.
listPackageVersionDependenciesResponse_httpStatus :: Lens' ListPackageVersionDependenciesResponse Int

-- | The format of the packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackages_format :: Lens' ListPackages (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackages_namespace :: Lens' ListPackages (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackages_domainOwner :: Lens' ListPackages (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackages_nextToken :: Lens' ListPackages (Maybe Text)

-- | A prefix used to filter returned packages. Only packages with names
--   that start with <tt>packagePrefix</tt> are returned.
listPackages_packagePrefix :: Lens' ListPackages (Maybe Text)

-- | The maximum number of results to return per page.
listPackages_maxResults :: Lens' ListPackages (Maybe Natural)

-- | The name of the domain that contains the repository that contains the
--   requested list of packages.
listPackages_domain :: Lens' ListPackages Text

-- | The name of the repository from which packages are to be listed.
listPackages_repository :: Lens' ListPackages Text

-- | The list of returned <a>PackageSummary</a> objects.
listPackagesResponse_packages :: Lens' ListPackagesResponse (Maybe [PackageSummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listPackagesResponse_nextToken :: Lens' ListPackagesResponse (Maybe Text)

-- | The response's http status code.
listPackagesResponse_httpStatus :: Lens' ListPackagesResponse Int

-- | Sets the revision of the resource policy that specifies permissions to
--   access the repository. This revision is used for optimistic locking,
--   which prevents others from overwriting your changes to the
--   repository's resource policy.
putRepositoryPermissionsPolicy_policyRevision :: Lens' PutRepositoryPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
putRepositoryPermissionsPolicy_domainOwner :: Lens' PutRepositoryPermissionsPolicy (Maybe Text)

-- | The name of the domain containing the repository to set the resource
--   policy on.
putRepositoryPermissionsPolicy_domain :: Lens' PutRepositoryPermissionsPolicy Text

-- | The name of the repository to set the resource policy on.
putRepositoryPermissionsPolicy_repository :: Lens' PutRepositoryPermissionsPolicy Text

-- | A valid displayable JSON Aspen policy string to be set as the access
--   control resource policy on the provided repository.
putRepositoryPermissionsPolicy_policyDocument :: Lens' PutRepositoryPermissionsPolicy Text

-- | The resource policy that was set after processing the request.
putRepositoryPermissionsPolicyResponse_policy :: Lens' PutRepositoryPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
putRepositoryPermissionsPolicyResponse_httpStatus :: Lens' PutRepositoryPermissionsPolicyResponse Int

-- | The revision of the repository's resource policy to be deleted. This
--   revision is used for optimistic locking, which prevents others from
--   accidentally overwriting your changes to the repository's resource
--   policy.
deleteRepositoryPermissionsPolicy_policyRevision :: Lens' DeleteRepositoryPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteRepositoryPermissionsPolicy_domainOwner :: Lens' DeleteRepositoryPermissionsPolicy (Maybe Text)

-- | The name of the domain that contains the repository associated with
--   the resource policy to be deleted.
deleteRepositoryPermissionsPolicy_domain :: Lens' DeleteRepositoryPermissionsPolicy Text

-- | The name of the repository that is associated with the resource policy
--   to be deleted
deleteRepositoryPermissionsPolicy_repository :: Lens' DeleteRepositoryPermissionsPolicy Text

-- | Information about the deleted policy after processing the request.
deleteRepositoryPermissionsPolicyResponse_policy :: Lens' DeleteRepositoryPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
deleteRepositoryPermissionsPolicyResponse_httpStatus :: Lens' DeleteRepositoryPermissionsPolicyResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getDomainPermissionsPolicy_domainOwner :: Lens' GetDomainPermissionsPolicy (Maybe Text)

-- | The name of the domain to which the resource policy is attached.
getDomainPermissionsPolicy_domain :: Lens' GetDomainPermissionsPolicy Text

-- | The returned resource policy.
getDomainPermissionsPolicyResponse_policy :: Lens' GetDomainPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
getDomainPermissionsPolicyResponse_httpStatus :: Lens' GetDomainPermissionsPolicyResponse Int

-- | A prefix used to filter returned repositories. Only repositories with
--   names that start with <tt>repositoryPrefix</tt> are returned.
listRepositories_repositoryPrefix :: Lens' ListRepositories (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listRepositories_nextToken :: Lens' ListRepositories (Maybe Text)

-- | The maximum number of results to return per page.
listRepositories_maxResults :: Lens' ListRepositories (Maybe Natural)

-- | The returned list of <a>RepositorySummary</a> objects.
listRepositoriesResponse_repositories :: Lens' ListRepositoriesResponse (Maybe [RepositorySummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listRepositoriesResponse_nextToken :: Lens' ListRepositoriesResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesResponse_httpStatus :: Lens' ListRepositoriesResponse Int

-- | The package version’s expected status before it is updated. If
--   <tt>expectedStatus</tt> is provided, the package version's status is
--   updated only if its status at the time
--   <tt>UpdatePackageVersionsStatus</tt> is called matches
--   <tt>expectedStatus</tt>.
updatePackageVersionsStatus_expectedStatus :: Lens' UpdatePackageVersionsStatus (Maybe PackageVersionStatus)

-- | A map of package versions and package version revisions. The map
--   <tt>key</tt> is the package version (for example, <tt>3.5.2</tt>), and
--   the map <tt>value</tt> is the package version revision.
updatePackageVersionsStatus_versionRevisions :: Lens' UpdatePackageVersionsStatus (Maybe (HashMap Text Text))

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
updatePackageVersionsStatus_namespace :: Lens' UpdatePackageVersionsStatus (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
updatePackageVersionsStatus_domainOwner :: Lens' UpdatePackageVersionsStatus (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package versions with a status to be updated.
updatePackageVersionsStatus_domain :: Lens' UpdatePackageVersionsStatus Text

-- | The repository that contains the package versions with the status you
--   want to update.
updatePackageVersionsStatus_repository :: Lens' UpdatePackageVersionsStatus Text

-- | A format that specifies the type of the package with the statuses to
--   update. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
updatePackageVersionsStatus_format :: Lens' UpdatePackageVersionsStatus PackageFormat

-- | The name of the package with the version statuses to update.
updatePackageVersionsStatus_package :: Lens' UpdatePackageVersionsStatus Text

-- | An array of strings that specify the versions of the package with the
--   statuses to update.
updatePackageVersionsStatus_versions :: Lens' UpdatePackageVersionsStatus [Text]

-- | The status you want to change the package version status to.
updatePackageVersionsStatus_targetStatus :: Lens' UpdatePackageVersionsStatus PackageVersionStatus

-- | A list of <tt>SuccessfulPackageVersionInfo</tt> objects, one for each
--   package version with a status that successfully updated.
updatePackageVersionsStatusResponse_failedVersions :: Lens' UpdatePackageVersionsStatusResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of <tt>PackageVersionError</tt> objects, one for each package
--   version with a status that failed to update.
updatePackageVersionsStatusResponse_successfulVersions :: Lens' UpdatePackageVersionsStatusResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
updatePackageVersionsStatusResponse_httpStatus :: Lens' UpdatePackageVersionsStatusResponse Int

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
createRepository_upstreams :: Lens' CreateRepository (Maybe [UpstreamRepository])

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
createRepository_domainOwner :: Lens' CreateRepository (Maybe Text)

-- | A description of the created repository.
createRepository_description :: Lens' CreateRepository (Maybe Text)

-- | One or more tag key-value pairs for the repository.
createRepository_tags :: Lens' CreateRepository (Maybe [Tag])

-- | The name of the domain that contains the created repository.
createRepository_domain :: Lens' CreateRepository Text

-- | The name of the repository to create.
createRepository_repository :: Lens' CreateRepository Text

-- | Information about the created repository after processing the request.
createRepositoryResponse_repository :: Lens' CreateRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
createRepositoryResponse_httpStatus :: Lens' CreateRepositoryResponse Int

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
getPackageVersionAsset_namespace :: Lens' GetPackageVersionAsset (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getPackageVersionAsset_domainOwner :: Lens' GetPackageVersionAsset (Maybe Text)

-- | The name of the package version revision that contains the requested
--   asset.
getPackageVersionAsset_packageVersionRevision :: Lens' GetPackageVersionAsset (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package version with the requested asset.
getPackageVersionAsset_domain :: Lens' GetPackageVersionAsset Text

-- | The repository that contains the package version with the requested
--   asset.
getPackageVersionAsset_repository :: Lens' GetPackageVersionAsset Text

-- | A format that specifies the type of the package version with the
--   requested asset file. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getPackageVersionAsset_format :: Lens' GetPackageVersionAsset PackageFormat

-- | The name of the package that contains the requested asset.
getPackageVersionAsset_package :: Lens' GetPackageVersionAsset Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
getPackageVersionAsset_packageVersion :: Lens' GetPackageVersionAsset Text

-- | The name of the requested asset.
getPackageVersionAsset_asset :: Lens' GetPackageVersionAsset Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
getPackageVersionAssetResponse_packageVersion :: Lens' GetPackageVersionAssetResponse (Maybe Text)

-- | The name of the asset that is downloaded.
getPackageVersionAssetResponse_assetName :: Lens' GetPackageVersionAssetResponse (Maybe Text)

-- | The name of the package version revision that contains the downloaded
--   asset.
getPackageVersionAssetResponse_packageVersionRevision :: Lens' GetPackageVersionAssetResponse (Maybe Text)

-- | The response's http status code.
getPackageVersionAssetResponse_httpStatus :: Lens' GetPackageVersionAssetResponse Int

-- | The binary file, or asset, that is downloaded.
getPackageVersionAssetResponse_asset :: Lens' GetPackageVersionAssetResponse ResponseBody

-- | A prefix used to filter returned repositories. Only repositories with
--   names that start with <tt>repositoryPrefix</tt> are returned.
listRepositoriesInDomain_repositoryPrefix :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listRepositoriesInDomain_domainOwner :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listRepositoriesInDomain_nextToken :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | Filter the list of repositories to only include those that are managed
--   by the AWS account ID.
listRepositoriesInDomain_administratorAccount :: Lens' ListRepositoriesInDomain (Maybe Text)

-- | The maximum number of results to return per page.
listRepositoriesInDomain_maxResults :: Lens' ListRepositoriesInDomain (Maybe Natural)

-- | The name of the domain that contains the returned list of
--   repositories.
listRepositoriesInDomain_domain :: Lens' ListRepositoriesInDomain Text

-- | The returned list of repositories.
listRepositoriesInDomainResponse_repositories :: Lens' ListRepositoriesInDomainResponse (Maybe [RepositorySummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listRepositoriesInDomainResponse_nextToken :: Lens' ListRepositoriesInDomainResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesInDomainResponse_httpStatus :: Lens' ListRepositoriesInDomainResponse Int

-- | The current revision of the resource policy to be set. This revision
--   is used for optimistic locking, which prevents others from overwriting
--   your changes to the domain's resource policy.
putDomainPermissionsPolicy_policyRevision :: Lens' PutDomainPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
putDomainPermissionsPolicy_domainOwner :: Lens' PutDomainPermissionsPolicy (Maybe Text)

-- | The name of the domain on which to set the resource policy.
putDomainPermissionsPolicy_domain :: Lens' PutDomainPermissionsPolicy Text

-- | A valid displayable JSON Aspen policy string to be set as the access
--   control resource policy on the provided domain.
putDomainPermissionsPolicy_policyDocument :: Lens' PutDomainPermissionsPolicy Text

-- | The resource policy that was set after processing the request.
putDomainPermissionsPolicyResponse_policy :: Lens' PutDomainPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
putDomainPermissionsPolicyResponse_httpStatus :: Lens' PutDomainPermissionsPolicyResponse Int

-- | The current revision of the resource policy to be deleted. This
--   revision is used for optimistic locking, which prevents others from
--   overwriting your changes to the domain's resource policy.
deleteDomainPermissionsPolicy_policyRevision :: Lens' DeleteDomainPermissionsPolicy (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteDomainPermissionsPolicy_domainOwner :: Lens' DeleteDomainPermissionsPolicy (Maybe Text)

-- | The name of the domain associated with the resource policy to be
--   deleted.
deleteDomainPermissionsPolicy_domain :: Lens' DeleteDomainPermissionsPolicy Text

-- | Information about the deleted resource policy after processing the
--   request.
deleteDomainPermissionsPolicyResponse_policy :: Lens' DeleteDomainPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
deleteDomainPermissionsPolicyResponse_httpStatus :: Lens' DeleteDomainPermissionsPolicyResponse Int

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
getPackageVersionReadme_namespace :: Lens' GetPackageVersionReadme (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getPackageVersionReadme_domainOwner :: Lens' GetPackageVersionReadme (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package version with the requested readme file.
getPackageVersionReadme_domain :: Lens' GetPackageVersionReadme Text

-- | The repository that contains the package with the requested readme
--   file.
getPackageVersionReadme_repository :: Lens' GetPackageVersionReadme Text

-- | A format that specifies the type of the package version with the
--   requested readme file. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getPackageVersionReadme_format :: Lens' GetPackageVersionReadme PackageFormat

-- | The name of the package version that contains the requested readme
--   file.
getPackageVersionReadme_package :: Lens' GetPackageVersionReadme Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
getPackageVersionReadme_packageVersion :: Lens' GetPackageVersionReadme Text

-- | The text of the returned readme file.
getPackageVersionReadmeResponse_readme :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The format of the package with the requested readme file. Valid format
--   types are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
getPackageVersionReadmeResponse_format :: Lens' GetPackageVersionReadmeResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
getPackageVersionReadmeResponse_namespace :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The current revision associated with the package version.
getPackageVersionReadmeResponse_versionRevision :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The version of the package with the requested readme file.
getPackageVersionReadmeResponse_version :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The name of the package that contains the returned readme file.
getPackageVersionReadmeResponse_package :: Lens' GetPackageVersionReadmeResponse (Maybe Text)

-- | The response's http status code.
getPackageVersionReadmeResponse_httpStatus :: Lens' GetPackageVersionReadmeResponse Int

-- | The encryption key for the domain. This is used to encrypt content
--   stored in a domain. An encryption key can be a key ID, a key Amazon
--   Resource Name (ARN), a key alias, or a key alias ARN. To specify an
--   <tt>encryptionKey</tt>, your IAM role must have
--   <tt>kms:DescribeKey</tt> and <tt>kms:CreateGrant</tt> permissions on
--   the encryption key that is used. For more information, see
--   <a>DescribeKey</a> in the <i>AWS Key Management Service API
--   Reference</i> and <a>AWS KMS API Permissions Reference</a> in the
--   <i>AWS Key Management Service Developer Guide</i>.
--   
--   CodeArtifact supports only symmetric CMKs. Do not associate an
--   asymmetric CMK with your domain. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.
createDomain_encryptionKey :: Lens' CreateDomain (Maybe Text)

-- | One or more tag key-value pairs for the domain.
createDomain_tags :: Lens' CreateDomain (Maybe [Tag])

-- | The name of the domain to create. All domain names in an AWS Region
--   that are in the same AWS account must be unique. The domain name is
--   used as the prefix in DNS hostnames. Do not use sensitive information
--   in a domain name because it is publicly discoverable.
createDomain_domain :: Lens' CreateDomain Text

-- | Contains information about the created domain after processing the
--   request.
createDomainResponse_domain :: Lens' CreateDomainResponse (Maybe DomainDescription)

-- | The response's http status code.
createDomainResponse_httpStatus :: Lens' CreateDomainResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getRepositoryPermissionsPolicy_domainOwner :: Lens' GetRepositoryPermissionsPolicy (Maybe Text)

-- | The name of the domain containing the repository whose associated
--   resource policy is to be retrieved.
getRepositoryPermissionsPolicy_domain :: Lens' GetRepositoryPermissionsPolicy Text

-- | The name of the repository whose associated resource policy is to be
--   retrieved.
getRepositoryPermissionsPolicy_repository :: Lens' GetRepositoryPermissionsPolicy Text

-- | The returned resource policy.
getRepositoryPermissionsPolicyResponse_policy :: Lens' GetRepositoryPermissionsPolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
getRepositoryPermissionsPolicyResponse_httpStatus :: Lens' GetRepositoryPermissionsPolicyResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
associateExternalConnection_domainOwner :: Lens' AssociateExternalConnection (Maybe Text)

-- | The name of the domain that contains the repository.
associateExternalConnection_domain :: Lens' AssociateExternalConnection Text

-- | The name of the repository to which the external connection is added.
associateExternalConnection_repository :: Lens' AssociateExternalConnection Text

-- | The name of the external connection to add to the repository. The
--   following values are supported:
--   
--   <ul>
--   <li><tt>public:npmjs</tt> - for the npm public repository.</li>
--   <li><tt>public:pypi</tt> - for the Python Package Index.</li>
--   <li><tt>public:maven-central</tt> - for Maven Central.</li>
--   <li><tt>public:maven-googleandroid</tt> - for the Google Android
--   repository.</li>
--   <li><tt>public:maven-gradleplugins</tt> - for the Gradle plugins
--   repository.</li>
--   <li><tt>public:maven-commonsware</tt> - for the CommonsWare Android
--   repository.</li>
--   </ul>
associateExternalConnection_externalConnection :: Lens' AssociateExternalConnection Text

-- | Information about the connected repository after processing the
--   request.
associateExternalConnectionResponse_repository :: Lens' AssociateExternalConnectionResponse (Maybe RepositoryDescription)

-- | The response's http status code.
associateExternalConnectionResponse_httpStatus :: Lens' AssociateExternalConnectionResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
describeRepository_domainOwner :: Lens' DescribeRepository (Maybe Text)

-- | The name of the domain that contains the repository to describe.
describeRepository_domain :: Lens' DescribeRepository Text

-- | A string that specifies the name of the requested repository.
describeRepository_repository :: Lens' DescribeRepository Text

-- | A <tt>RepositoryDescription</tt> object that contains the requested
--   repository information.
describeRepositoryResponse_repository :: Lens' DescribeRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
describeRepositoryResponse_httpStatus :: Lens' DescribeRepositoryResponse Int

-- | The expected status of the package version to delete. Valid values
--   are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
deletePackageVersions_expectedStatus :: Lens' DeletePackageVersions (Maybe PackageVersionStatus)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
deletePackageVersions_namespace :: Lens' DeletePackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deletePackageVersions_domainOwner :: Lens' DeletePackageVersions (Maybe Text)

-- | The name of the domain that contains the package to delete.
deletePackageVersions_domain :: Lens' DeletePackageVersions Text

-- | The name of the repository that contains the package versions to
--   delete.
deletePackageVersions_repository :: Lens' DeletePackageVersions Text

-- | The format of the package versions to delete. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
deletePackageVersions_format :: Lens' DeletePackageVersions PackageFormat

-- | The name of the package with the versions to delete.
deletePackageVersions_package :: Lens' DeletePackageVersions Text

-- | An array of strings that specify the versions of the package to
--   delete.
deletePackageVersions_versions :: Lens' DeletePackageVersions [Text]

-- | A <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the deleted package that failed. The possible error codes
--   are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
deletePackageVersionsResponse_failedVersions :: Lens' DeletePackageVersionsResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of the package versions that were successfully deleted.
deletePackageVersionsResponse_successfulVersions :: Lens' DeletePackageVersionsResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
deletePackageVersionsResponse_httpStatus :: Lens' DeletePackageVersionsResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
describeDomain_domainOwner :: Lens' DescribeDomain (Maybe Text)

-- | A string that specifies the name of the requested domain.
describeDomain_domain :: Lens' DescribeDomain Text

-- | Undocumented member.
describeDomainResponse_domain :: Lens' DescribeDomainResponse (Maybe DomainDescription)

-- | The response's http status code.
describeDomainResponse_httpStatus :: Lens' DescribeDomainResponse Int

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
describePackageVersion_namespace :: Lens' DescribePackageVersion (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
describePackageVersion_domainOwner :: Lens' DescribePackageVersion (Maybe Text)

-- | The name of the domain that contains the repository that contains the
--   package version.
describePackageVersion_domain :: Lens' DescribePackageVersion Text

-- | The name of the repository that contains the package version.
describePackageVersion_repository :: Lens' DescribePackageVersion Text

-- | A format that specifies the type of the requested package version. The
--   valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
describePackageVersion_format :: Lens' DescribePackageVersion PackageFormat

-- | The name of the requested package version.
describePackageVersion_package :: Lens' DescribePackageVersion Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
describePackageVersion_packageVersion :: Lens' DescribePackageVersion Text

-- | The response's http status code.
describePackageVersionResponse_httpStatus :: Lens' DescribePackageVersionResponse Int

-- | A <a>PackageVersionDescription</a> object that contains information
--   about the requested package version.
describePackageVersionResponse_packageVersion :: Lens' DescribePackageVersionResponse PackageVersionDescription

-- | The Amazon Resource Name (ARN) of the resource that you want to add or
--   update tags for.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags you want to modify or add to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to remove
--   tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag key for each tag that you want to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteRepository_domainOwner :: Lens' DeleteRepository (Maybe Text)

-- | The name of the domain that contains the repository to delete.
deleteRepository_domain :: Lens' DeleteRepository Text

-- | The name of the repository to delete.
deleteRepository_repository :: Lens' DeleteRepository Text

-- | Information about the deleted repository after processing the request.
deleteRepositoryResponse_repository :: Lens' DeleteRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
deleteRepositoryResponse_httpStatus :: Lens' DeleteRepositoryResponse Int

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
updateRepository_upstreams :: Lens' UpdateRepository (Maybe [UpstreamRepository])

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
updateRepository_domainOwner :: Lens' UpdateRepository (Maybe Text)

-- | An updated repository description.
updateRepository_description :: Lens' UpdateRepository (Maybe Text)

-- | The name of the domain associated with the repository to update.
updateRepository_domain :: Lens' UpdateRepository Text

-- | The name of the repository to update.
updateRepository_repository :: Lens' UpdateRepository Text

-- | The updated repository.
updateRepositoryResponse_repository :: Lens' UpdateRepositoryResponse (Maybe RepositoryDescription)

-- | The response's http status code.
updateRepositoryResponse_httpStatus :: Lens' UpdateRepositoryResponse Int

-- | Set to true to overwrite a package version that already exists in the
--   destination repository. If set to false and the package version
--   already exists in the destination repository, the package version is
--   returned in the <tt>failedVersions</tt> field of the response with an
--   <tt>ALREADY_EXISTS</tt> error code.
copyPackageVersions_allowOverwrite :: Lens' CopyPackageVersions (Maybe Bool)

-- | A list of key-value pairs. The keys are package versions and the
--   values are package version revisions. A <tt>CopyPackageVersion</tt>
--   operation succeeds if the specified versions in the source repository
--   match the specified package version revision.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
copyPackageVersions_versionRevisions :: Lens' CopyPackageVersions (Maybe (HashMap Text Text))

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
copyPackageVersions_namespace :: Lens' CopyPackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
copyPackageVersions_domainOwner :: Lens' CopyPackageVersions (Maybe Text)

-- | The versions of the package to copy.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
copyPackageVersions_versions :: Lens' CopyPackageVersions (Maybe [Text])

-- | Set to true to copy packages from repositories that are upstream from
--   the source repository to the destination repository. The default
--   setting is false. For more information, see <a>Working with upstream
--   repositories</a>.
copyPackageVersions_includeFromUpstream :: Lens' CopyPackageVersions (Maybe Bool)

-- | The name of the domain that contains the source and destination
--   repositories.
copyPackageVersions_domain :: Lens' CopyPackageVersions Text

-- | The name of the repository that contains the package versions to copy.
copyPackageVersions_sourceRepository :: Lens' CopyPackageVersions Text

-- | The name of the repository into which package versions are copied.
copyPackageVersions_destinationRepository :: Lens' CopyPackageVersions Text

-- | The format of the package that is copied. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
copyPackageVersions_format :: Lens' CopyPackageVersions PackageFormat

-- | The name of the package that is copied.
copyPackageVersions_package :: Lens' CopyPackageVersions Text

-- | A map of package versions that failed to copy and their error codes.
--   The possible error codes are in the <tt>PackageVersionError</tt> data
--   type. They are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
copyPackageVersionsResponse_failedVersions :: Lens' CopyPackageVersionsResponse (Maybe (HashMap Text PackageVersionError))

-- | A list of the package versions that were successfully copied to your
--   repository.
copyPackageVersionsResponse_successfulVersions :: Lens' CopyPackageVersionsResponse (Maybe (HashMap Text SuccessfulPackageVersionInfo))

-- | The response's http status code.
copyPackageVersionsResponse_httpStatus :: Lens' CopyPackageVersionsResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
getAuthorizationToken_domainOwner :: Lens' GetAuthorizationToken (Maybe Text)

-- | The time, in seconds, that the generated authorization token is valid.
--   Valid values are <tt>0</tt> and any number between <tt>900</tt> (15
--   minutes) and <tt>43200</tt> (12 hours). A value of <tt>0</tt> will set
--   the expiration of the authorization token to the same expiration of
--   the user's role's temporary credentials.
getAuthorizationToken_durationSeconds :: Lens' GetAuthorizationToken (Maybe Natural)

-- | The name of the domain that is in scope for the generated
--   authorization token.
getAuthorizationToken_domain :: Lens' GetAuthorizationToken Text

-- | A timestamp that specifies the date and time the authorization token
--   expires.
getAuthorizationTokenResponse_expiration :: Lens' GetAuthorizationTokenResponse (Maybe UTCTime)

-- | The returned authentication token.
getAuthorizationTokenResponse_authorizationToken :: Lens' GetAuthorizationTokenResponse (Maybe Text)

-- | The response's http status code.
getAuthorizationTokenResponse_httpStatus :: Lens' GetAuthorizationTokenResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
disassociateExternalConnection_domainOwner :: Lens' DisassociateExternalConnection (Maybe Text)

-- | The name of the domain that contains the repository from which to
--   remove the external repository.
disassociateExternalConnection_domain :: Lens' DisassociateExternalConnection Text

-- | The name of the repository from which the external connection will be
--   removed.
disassociateExternalConnection_repository :: Lens' DisassociateExternalConnection Text

-- | The name of the external connection to be removed from the repository.
disassociateExternalConnection_externalConnection :: Lens' DisassociateExternalConnection Text

-- | The repository associated with the removed external connection.
disassociateExternalConnectionResponse_repository :: Lens' DisassociateExternalConnectionResponse (Maybe RepositoryDescription)

-- | The response's http status code.
disassociateExternalConnectionResponse_httpStatus :: Lens' DisassociateExternalConnectionResponse Int

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
deleteDomain_domainOwner :: Lens' DeleteDomain (Maybe Text)

-- | The name of the domain to delete.
deleteDomain_domain :: Lens' DeleteDomain Text

-- | Contains information about the deleted domain after processing the
--   request.
deleteDomainResponse_domain :: Lens' DeleteDomainResponse (Maybe DomainDescription)

-- | The response's http status code.
deleteDomainResponse_httpStatus :: Lens' DeleteDomainResponse Int

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listDomains_nextToken :: Lens' ListDomains (Maybe Text)

-- | The maximum number of results to return per page.
listDomains_maxResults :: Lens' ListDomains (Maybe Natural)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listDomainsResponse_nextToken :: Lens' ListDomainsResponse (Maybe Text)

-- | The returned list of <a>DomainSummary</a> objects.
listDomainsResponse_domains :: Lens' ListDomainsResponse (Maybe [DomainSummary])

-- | The response's http status code.
listDomainsResponse_httpStatus :: Lens' ListDomainsResponse Int

-- | A string that specifies the status of the package versions to include
--   in the returned list. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
listPackageVersions_status :: Lens' ListPackageVersions (Maybe PackageVersionStatus)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersions_namespace :: Lens' ListPackageVersions (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackageVersions_domainOwner :: Lens' ListPackageVersions (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersions_nextToken :: Lens' ListPackageVersions (Maybe Text)

-- | The maximum number of results to return per page.
listPackageVersions_maxResults :: Lens' ListPackageVersions (Maybe Natural)

-- | How to sort the returned list of package versions.
listPackageVersions_sortBy :: Lens' ListPackageVersions (Maybe PackageVersionSortType)

-- | The name of the domain that contains the repository that contains the
--   returned package versions.
listPackageVersions_domain :: Lens' ListPackageVersions Text

-- | The name of the repository that contains the package.
listPackageVersions_repository :: Lens' ListPackageVersions Text

-- | The format of the returned packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackageVersions_format :: Lens' ListPackageVersions PackageFormat

-- | The name of the package for which you want to return a list of package
--   versions.
listPackageVersions_package :: Lens' ListPackageVersions Text

-- | A format of the package. Valid package format values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
listPackageVersionsResponse_format :: Lens' ListPackageVersionsResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionsResponse_namespace :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The returned list of <a>PackageVersionSummary</a> objects.
listPackageVersionsResponse_versions :: Lens' ListPackageVersionsResponse (Maybe [PackageVersionSummary])

-- | If there are additional results, this is the token for the next set of
--   results.
listPackageVersionsResponse_nextToken :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The name of the package.
listPackageVersionsResponse_package :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The default package version to display. This depends on the package
--   format:
--   
--   <ul>
--   <li>For Maven and PyPI packages, it's the most recently published
--   package version.</li>
--   <li>For npm packages, it's the version referenced by the
--   <tt>latest</tt> tag. If the <tt>latest</tt> tag is not set, it's the
--   most recently published package version.</li>
--   </ul>
listPackageVersionsResponse_defaultDisplayVersion :: Lens' ListPackageVersionsResponse (Maybe Text)

-- | The response's http status code.
listPackageVersionsResponse_httpStatus :: Lens' ListPackageVersionsResponse Int

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionAssets_namespace :: Lens' ListPackageVersionAssets (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
listPackageVersionAssets_domainOwner :: Lens' ListPackageVersionAssets (Maybe Text)

-- | The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
listPackageVersionAssets_nextToken :: Lens' ListPackageVersionAssets (Maybe Text)

-- | The maximum number of results to return per page.
listPackageVersionAssets_maxResults :: Lens' ListPackageVersionAssets (Maybe Natural)

-- | The name of the domain that contains the repository associated with
--   the package version assets.
listPackageVersionAssets_domain :: Lens' ListPackageVersionAssets Text

-- | The name of the repository that contains the package that contains the
--   returned package version assets.
listPackageVersionAssets_repository :: Lens' ListPackageVersionAssets Text

-- | The format of the package that contains the returned package version
--   assets. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
listPackageVersionAssets_format :: Lens' ListPackageVersionAssets PackageFormat

-- | The name of the package that contains the returned package version
--   assets.
listPackageVersionAssets_package :: Lens' ListPackageVersionAssets Text

-- | A string that contains the package version (for example,
--   <tt>3.5.2</tt>).
listPackageVersionAssets_packageVersion :: Lens' ListPackageVersionAssets Text

-- | The format of the package that contains the returned package version
--   assets.
listPackageVersionAssetsResponse_format :: Lens' ListPackageVersionAssetsResponse (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
listPackageVersionAssetsResponse_namespace :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The current revision associated with the package version.
listPackageVersionAssetsResponse_versionRevision :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | If there are additional results, this is the token for the next set of
--   results.
listPackageVersionAssetsResponse_nextToken :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The version of the package associated with the returned assets.
listPackageVersionAssetsResponse_version :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The name of the package that contains the returned package version
--   assets.
listPackageVersionAssetsResponse_package :: Lens' ListPackageVersionAssetsResponse (Maybe Text)

-- | The returned list of <a>AssetSummary</a> objects.
listPackageVersionAssetsResponse_assets :: Lens' ListPackageVersionAssetsResponse (Maybe [AssetSummary])

-- | The response's http status code.
listPackageVersionAssetsResponse_httpStatus :: Lens' ListPackageVersionAssetsResponse Int

-- | The size of the asset.
assetSummary_size :: Lens' AssetSummary (Maybe Integer)

-- | The hashes of the asset.
assetSummary_hashes :: Lens' AssetSummary (Maybe (HashMap HashAlgorithm Text))

-- | The name of the asset.
assetSummary_name :: Lens' AssetSummary Text

-- | The total size of all assets in the domain.
domainDescription_assetSizeBytes :: Lens' DomainDescription (Maybe Integer)

-- | The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
domainDescription_status :: Lens' DomainDescription (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) of the domain.
domainDescription_arn :: Lens' DomainDescription (Maybe Text)

-- | A timestamp that represents the date and time the domain was created.
domainDescription_createdTime :: Lens' DomainDescription (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to
--   store package assets in the domain.
domainDescription_s3BucketArn :: Lens' DomainDescription (Maybe Text)

-- | The AWS account ID that owns the domain.
domainDescription_owner :: Lens' DomainDescription (Maybe Text)

-- | The number of repositories in the domain.
domainDescription_repositoryCount :: Lens' DomainDescription (Maybe Int)

-- | The name of the domain.
domainDescription_name :: Lens' DomainDescription (Maybe Text)

-- | The ARN of an AWS Key Management Service (AWS KMS) key associated with
--   a domain.
domainDescription_encryptionKey :: Lens' DomainDescription (Maybe Text)

-- | A string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
domainSummary_status :: Lens' DomainSummary (Maybe DomainStatus)

-- | The ARN of the domain.
domainSummary_arn :: Lens' DomainSummary (Maybe Text)

-- | A timestamp that contains the date and time the domain was created.
domainSummary_createdTime :: Lens' DomainSummary (Maybe UTCTime)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
domainSummary_owner :: Lens' DomainSummary (Maybe Text)

-- | The name of the domain.
domainSummary_name :: Lens' DomainSummary (Maybe Text)

-- | The key used to encrypt the domain.
domainSummary_encryptionKey :: Lens' DomainSummary (Maybe Text)

-- | The URL for license data.
licenseInfo_url :: Lens' LicenseInfo (Maybe Text)

-- | Name of the license.
licenseInfo_name :: Lens' LicenseInfo (Maybe Text)

-- | The type of a package dependency. The possible values depend on the
--   package type. Example types are <tt>compile</tt>, <tt>runtime</tt>,
--   and <tt>test</tt> for Maven packages, and <tt>dev</tt>, <tt>prod</tt>,
--   and <tt>optional</tt> for npm packages.
packageDependency_dependencyType :: Lens' PackageDependency (Maybe Text)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageDependency_namespace :: Lens' PackageDependency (Maybe Text)

-- | The name of the package that this package depends on.
packageDependency_package :: Lens' PackageDependency (Maybe Text)

-- | The required version, or version range, of the package that this
--   package depends on. The version format is specific to the package
--   type. For example, the following are possible valid required versions:
--   <tt>1.2.3</tt>, <tt>^2.3.4</tt>, or <tt>4.x</tt>.
packageDependency_versionRequirement :: Lens' PackageDependency (Maybe Text)

-- | The format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
packageSummary_format :: Lens' PackageSummary (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageSummary_namespace :: Lens' PackageSummary (Maybe Text)

-- | The name of the package.
packageSummary_package :: Lens' PackageSummary (Maybe Text)

-- | A summary of the package version. The summary is extracted from the
--   package. The information in and detail level of the summary depends on
--   the package version's format.
packageVersionDescription_summary :: Lens' PackageVersionDescription (Maybe Text)

-- | The homepage associated with the package.
packageVersionDescription_homePage :: Lens' PackageVersionDescription (Maybe Text)

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
packageVersionDescription_status :: Lens' PackageVersionDescription (Maybe PackageVersionStatus)

-- | The repository for the source code in the package version, or the
--   source code used to build it.
packageVersionDescription_sourceCodeRepository :: Lens' PackageVersionDescription (Maybe Text)

-- | The name of the requested package.
packageVersionDescription_packageName :: Lens' PackageVersionDescription (Maybe Text)

-- | A timestamp that contains the date and time the package version was
--   published.
packageVersionDescription_publishedTime :: Lens' PackageVersionDescription (Maybe UTCTime)

-- | The format of the package version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
packageVersionDescription_format :: Lens' PackageVersionDescription (Maybe PackageFormat)

-- | The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
packageVersionDescription_namespace :: Lens' PackageVersionDescription (Maybe Text)

-- | The version of the package.
packageVersionDescription_version :: Lens' PackageVersionDescription (Maybe Text)

-- | The name of the package that is displayed. The <tt>displayName</tt>
--   varies depending on the package version's format. For example, if an
--   npm package is named <tt>ui</tt>, is in the namespace <tt>vue</tt>,
--   and has the format <tt>npm</tt>, then the <tt>displayName</tt> is
--   <tt>@vue/ui</tt>.
packageVersionDescription_displayName :: Lens' PackageVersionDescription (Maybe Text)

-- | Information about licenses associated with the package version.
packageVersionDescription_licenses :: Lens' PackageVersionDescription (Maybe [LicenseInfo])

-- | The revision of the package version.
packageVersionDescription_revision :: Lens' PackageVersionDescription (Maybe Text)

-- | The error code associated with the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
packageVersionError_errorCode :: Lens' PackageVersionError (Maybe PackageVersionErrorCode)

-- | The error message associated with the error.
packageVersionError_errorMessage :: Lens' PackageVersionError (Maybe Text)

-- | The revision associated with a package version.
packageVersionSummary_revision :: Lens' PackageVersionSummary (Maybe Text)

-- | Information about a package version.
packageVersionSummary_version :: Lens' PackageVersionSummary Text

-- | A string that contains the status of the package version. It can be
--   one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
packageVersionSummary_status :: Lens' PackageVersionSummary PackageVersionStatus

-- | A list of upstream repositories to associate with the repository. The
--   order of the upstream repositories in the list determines their
--   priority order when AWS CodeArtifact looks for a requested package
--   version. For more information, see <a>Working with upstream
--   repositories</a>.
repositoryDescription_upstreams :: Lens' RepositoryDescription (Maybe [UpstreamRepositoryInfo])

-- | The Amazon Resource Name (ARN) of the repository.
repositoryDescription_arn :: Lens' RepositoryDescription (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain
--   that contains the repository. It does not include dashes or spaces.
repositoryDescription_domainOwner :: Lens' RepositoryDescription (Maybe Text)

-- | The name of the domain that contains the repository.
repositoryDescription_domainName :: Lens' RepositoryDescription (Maybe Text)

-- | The name of the repository.
repositoryDescription_name :: Lens' RepositoryDescription (Maybe Text)

-- | The 12-digit account number of the AWS account that manages the
--   repository.
repositoryDescription_administratorAccount :: Lens' RepositoryDescription (Maybe Text)

-- | An array of external connections associated with the repository.
repositoryDescription_externalConnections :: Lens' RepositoryDescription (Maybe [RepositoryExternalConnectionInfo])

-- | A text description of the repository.
repositoryDescription_description :: Lens' RepositoryDescription (Maybe Text)

-- | The name of the external connection associated with a repository.
repositoryExternalConnectionInfo_externalConnectionName :: Lens' RepositoryExternalConnectionInfo (Maybe Text)

-- | The status of the external connection of a repository. There is one
--   valid value, <tt>Available</tt>.
repositoryExternalConnectionInfo_status :: Lens' RepositoryExternalConnectionInfo (Maybe ExternalConnectionStatus)

-- | The package format associated with a repository's external connection.
--   The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
repositoryExternalConnectionInfo_packageFormat :: Lens' RepositoryExternalConnectionInfo (Maybe PackageFormat)

-- | The ARN of the repository.
repositorySummary_arn :: Lens' RepositorySummary (Maybe Text)

-- | The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
repositorySummary_domainOwner :: Lens' RepositorySummary (Maybe Text)

-- | The name of the domain that contains the repository.
repositorySummary_domainName :: Lens' RepositorySummary (Maybe Text)

-- | The name of the repository.
repositorySummary_name :: Lens' RepositorySummary (Maybe Text)

-- | The AWS account ID that manages the repository.
repositorySummary_administratorAccount :: Lens' RepositorySummary (Maybe Text)

-- | The description of the repository.
repositorySummary_description :: Lens' RepositorySummary (Maybe Text)

-- | The ARN of the resource associated with the resource policy
resourcePolicy_resourceArn :: Lens' ResourcePolicy (Maybe Text)

-- | The resource policy formatted in JSON.
resourcePolicy_document :: Lens' ResourcePolicy (Maybe Text)

-- | The current revision of the resource policy.
resourcePolicy_revision :: Lens' ResourcePolicy (Maybe Text)

-- | The status of a package version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
successfulPackageVersionInfo_status :: Lens' SuccessfulPackageVersionInfo (Maybe PackageVersionStatus)

-- | The revision of a package version.
successfulPackageVersionInfo_revision :: Lens' SuccessfulPackageVersionInfo (Maybe Text)

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The tag value.
tag_value :: Lens' Tag Text

-- | The name of an upstream repository.
upstreamRepository_repositoryName :: Lens' UpstreamRepository Text

-- | The name of an upstream repository.
upstreamRepositoryInfo_repositoryName :: Lens' UpstreamRepositoryInfo (Maybe Text)


module Amazonka.CodeArtifact.Waiters


-- | Derived from API version <tt>2018-09-22</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS CodeArtifact is a fully managed artifact repository compatible
--   with language-native package managers and build tools such as npm,
--   Apache Maven, and pip. You can use CodeArtifact to share packages with
--   development teams and pull packages. Packages can be pulled from both
--   public and CodeArtifact repositories. You can also create an upstream
--   relationship between a CodeArtifact repository and another repository,
--   which effectively merges their contents from the point of view of a
--   package manager client.
--   
--   <b>AWS CodeArtifact Components</b>
--   
--   Use the information in this guide to help you work with the following
--   CodeArtifact components:
--   
--   <ul>
--   <li><b>Repository</b>: A CodeArtifact repository contains a set of
--   <a>package versions</a>, each of which maps to a set of assets, or
--   files. Repositories are polyglot, so a single repository can contain
--   packages of any supported type. Each repository exposes endpoints for
--   fetching and publishing packages using tools like the
--   <b><tt>npm</tt></b> CLI, the Maven CLI ( <b><tt>mvn</tt></b> ), and
--   <b><tt>pip</tt></b> .</li>
--   <li><b>Domain</b>: Repositories are aggregated into a higher-level
--   entity known as a <i>domain</i>. All package assets and metadata are
--   stored in the domain, but are consumed through repositories. A given
--   package asset, such as a Maven JAR file, is stored once per domain, no
--   matter how many repositories it's present in. All of the assets and
--   metadata in a domain are encrypted with the same customer master key
--   (CMK) stored in AWS Key Management Service (AWS KMS).Each repository
--   is a member of a single domain and can't be moved to a different
--   domain.The domain allows organizational policy to be applied across
--   multiple repositories, such as which accounts can access repositories
--   in the domain, and which public repositories can be used as sources of
--   packages.Although an organization can have multiple domains, we
--   recommend a single production domain that contains all published
--   artifacts so that teams can find and share packages across their
--   organization.</li>
--   <li><b>Package</b>: A <i>package</i> is a bundle of software and the
--   metadata required to resolve dependencies and install the software.
--   CodeArtifact supports <a>npm</a>, <a>PyPI</a>, and <a>Maven</a>
--   package formats.In CodeArtifact, a package consists of:<ul><li>A
--   <i>name</i> (for example, <tt>webpack</tt> is the name of a popular
--   npm package)</li><li>An optional namespace (for example,
--   <tt>@types</tt> in <tt>@types/node</tt>)</li><li>A set of versions
--   (for example, <tt>1.0.0</tt>, <tt>1.0.1</tt>, <tt>1.0.2</tt>,
--   etc.)</li><li>Package-level metadata (for example, npm
--   tags)</li></ul></li>
--   <li><b>Package version</b>: A version of a package, such as
--   <tt>@types/node 12.6.9</tt>. The version number format and semantics
--   vary for different package formats. For example, npm package versions
--   must conform to the <a>Semantic Versioning specification</a>. In
--   CodeArtifact, a package version consists of the version identifier,
--   metadata at the package version level, and a set of assets.</li>
--   <li><b>Upstream repository</b>: One repository is <i>upstream</i> of
--   another when the package versions in it can be accessed from the
--   repository endpoint of the downstream repository, effectively merging
--   the contents of the two repositories from the point of view of a
--   client. CodeArtifact allows creating an upstream relationship between
--   two repositories.</li>
--   <li><b>Asset</b>: An individual file stored in CodeArtifact associated
--   with a package version, such as an npm <tt>.tgz</tt> file or Maven POM
--   and JAR files.</li>
--   </ul>
--   
--   CodeArtifact supports these operations:
--   
--   <ul>
--   <li><tt>AssociateExternalConnection</tt>: Adds an existing external
--   connection to a repository.</li>
--   <li><tt>CopyPackageVersions</tt>: Copies package versions from one
--   repository to another repository in the same domain.</li>
--   <li><tt>CreateDomain</tt>: Creates a domain</li>
--   <li><tt>CreateRepository</tt>: Creates a CodeArtifact repository in a
--   domain.</li>
--   <li><tt>DeleteDomain</tt>: Deletes a domain. You cannot delete a
--   domain that contains repositories.</li>
--   <li><tt>DeleteDomainPermissionsPolicy</tt>: Deletes the resource
--   policy that is set on a domain.</li>
--   <li><tt>DeletePackageVersions</tt>: Deletes versions of a package.
--   After a package has been deleted, it can be republished, but its
--   assets and metadata cannot be restored because they have been
--   permanently removed from storage.</li>
--   <li><tt>DeleteRepository</tt>: Deletes a repository.</li>
--   <li><tt>DeleteRepositoryPermissionsPolicy</tt>: Deletes the resource
--   policy that is set on a repository.</li>
--   <li><tt>DescribeDomain</tt>: Returns a <tt>DomainDescription</tt>
--   object that contains information about the requested domain.</li>
--   <li><tt>DescribePackageVersion</tt>: Returns a
--   <a>PackageVersionDescription</a> object that contains details about a
--   package version.</li>
--   <li><tt>DescribeRepository</tt>: Returns a
--   <tt>RepositoryDescription</tt> object that contains detailed
--   information about the requested repository.</li>
--   <li><tt>DisposePackageVersions</tt>: Disposes versions of a package. A
--   package version with the status <tt>Disposed</tt> cannot be restored
--   because they have been permanently removed from storage.</li>
--   <li><tt>DisassociateExternalConnection</tt>: Removes an existing
--   external connection from a repository.</li>
--   <li><tt>GetAuthorizationToken</tt>: Generates a temporary
--   authorization token for accessing repositories in the domain. The
--   token expires the authorization period has passed. The default
--   authorization period is 12 hours and can be customized to any length
--   with a maximum of 12 hours.</li>
--   <li><tt>GetDomainPermissionsPolicy</tt>: Returns the policy of a
--   resource that is attached to the specified domain.</li>
--   <li><tt>GetPackageVersionAsset</tt>: Returns the contents of an asset
--   that is in a package version.</li>
--   <li><tt>GetPackageVersionReadme</tt>: Gets the readme file or
--   descriptive text for a package version.</li>
--   <li><tt>GetRepositoryEndpoint</tt>: Returns the endpoint of a
--   repository for a specific package format. A repository has one
--   endpoint for each package
--   format:<ul><li><pre>npm</pre></li><li><pre>pypi</pre></li><li><pre>maven</pre></li></ul></li>
--   <li><tt>GetRepositoryPermissionsPolicy</tt>: Returns the resource
--   policy that is set on a repository.</li>
--   <li><tt>ListDomains</tt>: Returns a list of <tt>DomainSummary</tt>
--   objects. Each returned <tt>DomainSummary</tt> object contains
--   information about a domain.</li>
--   <li><tt>ListPackages</tt>: Lists the packages in a repository.</li>
--   <li><tt>ListPackageVersionAssets</tt>: Lists the assets for a given
--   package version.</li>
--   <li><tt>ListPackageVersionDependencies</tt>: Returns a list of the
--   direct dependencies for a package version.</li>
--   <li><tt>ListPackageVersions</tt>: Returns a list of package versions
--   for a specified package in a repository.</li>
--   <li><tt>ListRepositories</tt>: Returns a list of repositories owned by
--   the AWS account that called this method.</li>
--   <li><tt>ListRepositoriesInDomain</tt>: Returns a list of the
--   repositories in a domain.</li>
--   <li><tt>PutDomainPermissionsPolicy</tt>: Attaches a resource policy to
--   a domain.</li>
--   <li><tt>PutRepositoryPermissionsPolicy</tt>: Sets the resource policy
--   on a repository that specifies permissions to access it.</li>
--   <li><tt>UpdatePackageVersionsStatus</tt>: Updates the status of one or
--   more versions of a package.</li>
--   <li><tt>UpdateRepository</tt>: Updates the properties of a
--   repository.</li>
--   </ul>
module Amazonka.CodeArtifact

-- | API version <tt>2018-09-22</tt> of the Amazon CodeArtifact SDK
--   configuration.
defaultService :: Service

-- | The operation did not succeed because a parameter in the request was
--   sent with an invalid value.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because of an unauthorized access
--   attempt.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because prerequisites are not met.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because it would have exceeded a service
--   limit for your account.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because too many requests are sent to
--   the service.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because of an error that occurred inside
--   AWS CodeArtifact.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation did not succeed because the resource requested is not
--   found in the service.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDisposePackageVersions</a> smart constructor.
data DisposePackageVersions
DisposePackageVersions' :: Maybe PackageVersionStatus -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> [Text] -> DisposePackageVersions

-- | Create a value of <a>DisposePackageVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expectedStatus:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_expectedStatus</a> - The expected status of
--   the package version to dispose. Valid values are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:versionRevisions:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_versionRevisions</a> - The revisions of the
--   package versions you want to dispose.
--   
--   <a>$sel:namespace:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_domain</a> - The name of the domain that
--   contains the repository you want to dispose.
--   
--   <a>$sel:repository:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_repository</a> - The name of the repository
--   that contains the package versions you want to dispose.
--   
--   <a>$sel:format:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_format</a> - A format that specifies the
--   type of package versions you want to dispose. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_package</a> - The name of the package with
--   the versions you want to dispose.
--   
--   <a>$sel:versions:DisposePackageVersions'</a>,
--   <a>disposePackageVersions_versions</a> - The versions of the package
--   you want to dispose.
newDisposePackageVersions :: Text -> Text -> PackageFormat -> Text -> DisposePackageVersions

-- | <i>See:</i> <a>newDisposePackageVersionsResponse</a> smart
--   constructor.
data DisposePackageVersionsResponse
DisposePackageVersionsResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> DisposePackageVersionsResponse

-- | Create a value of <a>DisposePackageVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:DisposePackageVersionsResponse'</a>,
--   <a>disposePackageVersionsResponse_failedVersions</a> - A
--   <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the disposed package versions that failed. The possible
--   error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:successfulVersions:DisposePackageVersionsResponse'</a>,
--   <a>disposePackageVersionsResponse_successfulVersions</a> - A list of
--   the package versions that were successfully disposed.
--   
--   <a>$sel:httpStatus:DisposePackageVersionsResponse'</a>,
--   <a>disposePackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDisposePackageVersionsResponse :: Int -> DisposePackageVersionsResponse

-- | <i>See:</i> <a>newGetRepositoryEndpoint</a> smart constructor.
data GetRepositoryEndpoint
GetRepositoryEndpoint' :: Maybe Text -> Text -> Text -> PackageFormat -> GetRepositoryEndpoint

-- | Create a value of <a>GetRepositoryEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain that contains the repository.
--   It does not include dashes or spaces.
--   
--   <a>$sel:domain:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_domain</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:repository:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_repository</a> - The name of the repository.
--   
--   <a>$sel:format:GetRepositoryEndpoint'</a>,
--   <a>getRepositoryEndpoint_format</a> - Returns which endpoint of a
--   repository to return. A repository has one endpoint for each package
--   format:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
newGetRepositoryEndpoint :: Text -> Text -> PackageFormat -> GetRepositoryEndpoint

-- | <i>See:</i> <a>newGetRepositoryEndpointResponse</a> smart constructor.
data GetRepositoryEndpointResponse
GetRepositoryEndpointResponse' :: Maybe Text -> Int -> GetRepositoryEndpointResponse

-- | Create a value of <a>GetRepositoryEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryEndpoint:GetRepositoryEndpointResponse'</a>,
--   <a>getRepositoryEndpointResponse_repositoryEndpoint</a> - A string
--   that specifies the URL of the returned endpoint.
--   
--   <a>$sel:httpStatus:GetRepositoryEndpointResponse'</a>,
--   <a>getRepositoryEndpointResponse_httpStatus</a> - The response's http
--   status code.
newGetRepositoryEndpointResponse :: Int -> GetRepositoryEndpointResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource to get tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key and value
--   pairs associated with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newListPackageVersionDependencies</a> smart
--   constructor.
data ListPackageVersionDependencies
ListPackageVersionDependencies' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionDependencies

-- | Create a value of <a>ListPackageVersionDependencies</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:nextToken:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_nextToken</a> - The token for the
--   next set of results. Use the value returned in the previous response
--   in the next request to retrieve the next set of results.
--   
--   <a>$sel:domain:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_domain</a> - The name of the domain
--   that contains the repository that contains the requested package
--   version dependencies.
--   
--   <a>$sel:repository:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_repository</a> - The name of the
--   repository that contains the requested package version.
--   
--   <a>$sel:format:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_format</a> - The format of the
--   package with the requested dependencies. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_package</a> - The name of the
--   package versions' package.
--   
--   <a>$sel:packageVersion:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependencies_packageVersion</a> - A string that
--   contains the package version (for example, <tt>3.5.2</tt>).
newListPackageVersionDependencies :: Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionDependencies

-- | <i>See:</i> <a>newListPackageVersionDependenciesResponse</a> smart
--   constructor.
data ListPackageVersionDependenciesResponse
ListPackageVersionDependenciesResponse' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe [PackageDependency] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> ListPackageVersionDependenciesResponse

-- | Create a value of <a>ListPackageVersionDependenciesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_format</a> - A format that
--   specifies the type of the package that contains the returned
--   dependencies. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_namespace</a> - The
--   namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versionRevision:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_versionRevision</a> - The
--   current revision associated with the package version.
--   
--   <a>$sel:dependencies:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_dependencies</a> - The
--   returned list of <a>PackageDependency</a> objects.
--   
--   <a>$sel:nextToken:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_nextToken</a> - The token
--   for the next set of results. Use the value returned in the previous
--   response in the next request to retrieve the next set of results.
--   
--   <a>$sel:version:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_version</a> - The version of
--   the package that is specified in the request.
--   
--   <a>$sel:package:ListPackageVersionDependencies'</a>,
--   <a>listPackageVersionDependenciesResponse_package</a> - The name of
--   the package that contains the returned package versions dependencies.
--   
--   <a>$sel:httpStatus:ListPackageVersionDependenciesResponse'</a>,
--   <a>listPackageVersionDependenciesResponse_httpStatus</a> - The
--   response's http status code.
newListPackageVersionDependenciesResponse :: Int -> ListPackageVersionDependenciesResponse

-- | <i>See:</i> <a>newListPackages</a> smart constructor.
data ListPackages
ListPackages' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> ListPackages

-- | Create a value of <a>ListPackages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackages'</a>, <a>listPackages_format</a> - The
--   format of the packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackages'</a>, <a>listPackages_namespace</a> -
--   The namespace of the package. The package component that specifies its
--   namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackages'</a>, <a>listPackages_domainOwner</a>
--   - The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
--   
--   <a>$sel:nextToken:ListPackages'</a>, <a>listPackages_nextToken</a> -
--   The token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
--   
--   <a>$sel:packagePrefix:ListPackages'</a>,
--   <a>listPackages_packagePrefix</a> - A prefix used to filter returned
--   packages. Only packages with names that start with
--   <tt>packagePrefix</tt> are returned.
--   
--   <a>$sel:maxResults:ListPackages'</a>, <a>listPackages_maxResults</a> -
--   The maximum number of results to return per page.
--   
--   <a>$sel:domain:ListPackages'</a>, <a>listPackages_domain</a> - The
--   name of the domain that contains the repository that contains the
--   requested list of packages.
--   
--   <a>$sel:repository:ListPackages'</a>, <a>listPackages_repository</a> -
--   The name of the repository from which packages are to be listed.
newListPackages :: Text -> Text -> ListPackages

-- | <i>See:</i> <a>newListPackagesResponse</a> smart constructor.
data ListPackagesResponse
ListPackagesResponse' :: Maybe [PackageSummary] -> Maybe Text -> Int -> ListPackagesResponse

-- | Create a value of <a>ListPackagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packages:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_packages</a> - The list of returned
--   <a>PackageSummary</a> objects.
--   
--   <a>$sel:nextToken:ListPackages'</a>,
--   <a>listPackagesResponse_nextToken</a> - If there are additional
--   results, this is the token for the next set of results.
--   
--   <a>$sel:httpStatus:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_httpStatus</a> - The response's http status
--   code.
newListPackagesResponse :: Int -> ListPackagesResponse

-- | <i>See:</i> <a>newPutRepositoryPermissionsPolicy</a> smart
--   constructor.
data PutRepositoryPermissionsPolicy
PutRepositoryPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> PutRepositoryPermissionsPolicy

-- | Create a value of <a>PutRepositoryPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_policyRevision</a> - Sets the
--   revision of the resource policy that specifies permissions to access
--   the repository. This revision is used for optimistic locking, which
--   prevents others from overwriting your changes to the repository's
--   resource policy.
--   
--   <a>$sel:domainOwner:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_domain</a> - The name of the domain
--   containing the repository to set the resource policy on.
--   
--   <a>$sel:repository:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_repository</a> - The name of the
--   repository to set the resource policy on.
--   
--   <a>$sel:policyDocument:PutRepositoryPermissionsPolicy'</a>,
--   <a>putRepositoryPermissionsPolicy_policyDocument</a> - A valid
--   displayable JSON Aspen policy string to be set as the access control
--   resource policy on the provided repository.
newPutRepositoryPermissionsPolicy :: Text -> Text -> Text -> PutRepositoryPermissionsPolicy

-- | <i>See:</i> <a>newPutRepositoryPermissionsPolicyResponse</a> smart
--   constructor.
data PutRepositoryPermissionsPolicyResponse
PutRepositoryPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> PutRepositoryPermissionsPolicyResponse

-- | Create a value of <a>PutRepositoryPermissionsPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:PutRepositoryPermissionsPolicyResponse'</a>,
--   <a>putRepositoryPermissionsPolicyResponse_policy</a> - The resource
--   policy that was set after processing the request.
--   
--   <a>$sel:httpStatus:PutRepositoryPermissionsPolicyResponse'</a>,
--   <a>putRepositoryPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newPutRepositoryPermissionsPolicyResponse :: Int -> PutRepositoryPermissionsPolicyResponse

-- | <i>See:</i> <a>newDeleteRepositoryPermissionsPolicy</a> smart
--   constructor.
data DeleteRepositoryPermissionsPolicy
DeleteRepositoryPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> Text -> DeleteRepositoryPermissionsPolicy

-- | Create a value of <a>DeleteRepositoryPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_policyRevision</a> - The revision
--   of the repository's resource policy to be deleted. This revision is
--   used for optimistic locking, which prevents others from accidentally
--   overwriting your changes to the repository's resource policy.
--   
--   <a>$sel:domainOwner:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_domain</a> - The name of the
--   domain that contains the repository associated with the resource
--   policy to be deleted.
--   
--   <a>$sel:repository:DeleteRepositoryPermissionsPolicy'</a>,
--   <a>deleteRepositoryPermissionsPolicy_repository</a> - The name of the
--   repository that is associated with the resource policy to be deleted
newDeleteRepositoryPermissionsPolicy :: Text -> Text -> DeleteRepositoryPermissionsPolicy

-- | <i>See:</i> <a>newDeleteRepositoryPermissionsPolicyResponse</a> smart
--   constructor.
data DeleteRepositoryPermissionsPolicyResponse
DeleteRepositoryPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> DeleteRepositoryPermissionsPolicyResponse

-- | Create a value of <a>DeleteRepositoryPermissionsPolicyResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:DeleteRepositoryPermissionsPolicyResponse'</a>,
--   <a>deleteRepositoryPermissionsPolicyResponse_policy</a> - Information
--   about the deleted policy after processing the request.
--   
--   <a>$sel:httpStatus:DeleteRepositoryPermissionsPolicyResponse'</a>,
--   <a>deleteRepositoryPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newDeleteRepositoryPermissionsPolicyResponse :: Int -> DeleteRepositoryPermissionsPolicyResponse

-- | <i>See:</i> <a>newGetDomainPermissionsPolicy</a> smart constructor.
data GetDomainPermissionsPolicy
GetDomainPermissionsPolicy' :: Maybe Text -> Text -> GetDomainPermissionsPolicy

-- | Create a value of <a>GetDomainPermissionsPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetDomainPermissionsPolicy'</a>,
--   <a>getDomainPermissionsPolicy_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:GetDomainPermissionsPolicy'</a>,
--   <a>getDomainPermissionsPolicy_domain</a> - The name of the domain to
--   which the resource policy is attached.
newGetDomainPermissionsPolicy :: Text -> GetDomainPermissionsPolicy

-- | <i>See:</i> <a>newGetDomainPermissionsPolicyResponse</a> smart
--   constructor.
data GetDomainPermissionsPolicyResponse
GetDomainPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> GetDomainPermissionsPolicyResponse

-- | Create a value of <a>GetDomainPermissionsPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetDomainPermissionsPolicyResponse'</a>,
--   <a>getDomainPermissionsPolicyResponse_policy</a> - The returned
--   resource policy.
--   
--   <a>$sel:httpStatus:GetDomainPermissionsPolicyResponse'</a>,
--   <a>getDomainPermissionsPolicyResponse_httpStatus</a> - The response's
--   http status code.
newGetDomainPermissionsPolicyResponse :: Int -> GetDomainPermissionsPolicyResponse

-- | <i>See:</i> <a>newListRepositories</a> smart constructor.
data ListRepositories
ListRepositories' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListRepositories

-- | Create a value of <a>ListRepositories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryPrefix:ListRepositories'</a>,
--   <a>listRepositories_repositoryPrefix</a> - A prefix used to filter
--   returned repositories. Only repositories with names that start with
--   <tt>repositoryPrefix</tt> are returned.
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositories_nextToken</a> - The token for the next set of
--   results. Use the value returned in the previous response in the next
--   request to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListRepositories'</a>,
--   <a>listRepositories_maxResults</a> - The maximum number of results to
--   return per page.
newListRepositories :: ListRepositories

-- | <i>See:</i> <a>newListRepositoriesResponse</a> smart constructor.
data ListRepositoriesResponse
ListRepositoriesResponse' :: Maybe [RepositorySummary] -> Maybe Text -> Int -> ListRepositoriesResponse

-- | Create a value of <a>ListRepositoriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_repositories</a> - The returned list of
--   <a>RepositorySummary</a> objects.
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositoriesResponse_nextToken</a> - If there are additional
--   results, this is the token for the next set of results.
--   
--   <a>$sel:httpStatus:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_httpStatus</a> - The response's http
--   status code.
newListRepositoriesResponse :: Int -> ListRepositoriesResponse

-- | <i>See:</i> <a>newUpdatePackageVersionsStatus</a> smart constructor.
data UpdatePackageVersionsStatus
UpdatePackageVersionsStatus' :: Maybe PackageVersionStatus -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> [Text] -> PackageVersionStatus -> UpdatePackageVersionsStatus

-- | Create a value of <a>UpdatePackageVersionsStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expectedStatus:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_expectedStatus</a> - The package
--   version’s expected status before it is updated. If
--   <tt>expectedStatus</tt> is provided, the package version's status is
--   updated only if its status at the time
--   <tt>UpdatePackageVersionsStatus</tt> is called matches
--   <tt>expectedStatus</tt>.
--   
--   <a>$sel:versionRevisions:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_versionRevisions</a> - A map of package
--   versions and package version revisions. The map <tt>key</tt> is the
--   package version (for example, <tt>3.5.2</tt>), and the map
--   <tt>value</tt> is the package version revision.
--   
--   <a>$sel:namespace:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_domain</a> - The name of the domain
--   that contains the repository that contains the package versions with a
--   status to be updated.
--   
--   <a>$sel:repository:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_repository</a> - The repository that
--   contains the package versions with the status you want to update.
--   
--   <a>$sel:format:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_format</a> - A format that specifies
--   the type of the package with the statuses to update. The valid values
--   are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_package</a> - The name of the package
--   with the version statuses to update.
--   
--   <a>$sel:versions:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_versions</a> - An array of strings that
--   specify the versions of the package with the statuses to update.
--   
--   <a>$sel:targetStatus:UpdatePackageVersionsStatus'</a>,
--   <a>updatePackageVersionsStatus_targetStatus</a> - The status you want
--   to change the package version status to.
newUpdatePackageVersionsStatus :: Text -> Text -> PackageFormat -> Text -> PackageVersionStatus -> UpdatePackageVersionsStatus

-- | <i>See:</i> <a>newUpdatePackageVersionsStatusResponse</a> smart
--   constructor.
data UpdatePackageVersionsStatusResponse
UpdatePackageVersionsStatusResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> UpdatePackageVersionsStatusResponse

-- | Create a value of <a>UpdatePackageVersionsStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:UpdatePackageVersionsStatusResponse'</a>,
--   <a>updatePackageVersionsStatusResponse_failedVersions</a> - A list of
--   <tt>SuccessfulPackageVersionInfo</tt> objects, one for each package
--   version with a status that successfully updated.
--   
--   <a>$sel:successfulVersions:UpdatePackageVersionsStatusResponse'</a>,
--   <a>updatePackageVersionsStatusResponse_successfulVersions</a> - A list
--   of <tt>PackageVersionError</tt> objects, one for each package version
--   with a status that failed to update.
--   
--   <a>$sel:httpStatus:UpdatePackageVersionsStatusResponse'</a>,
--   <a>updatePackageVersionsStatusResponse_httpStatus</a> - The response's
--   http status code.
newUpdatePackageVersionsStatusResponse :: Int -> UpdatePackageVersionsStatusResponse

-- | <i>See:</i> <a>newCreateRepository</a> smart constructor.
data CreateRepository
CreateRepository' :: Maybe [UpstreamRepository] -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> Text -> CreateRepository

-- | Create a value of <a>CreateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upstreams:CreateRepository'</a>,
--   <a>createRepository_upstreams</a> - A list of upstream repositories to
--   associate with the repository. The order of the upstream repositories
--   in the list determines their priority order when AWS CodeArtifact
--   looks for a requested package version. For more information, see
--   <a>Working with upstream repositories</a>.
--   
--   <a>$sel:domainOwner:CreateRepository'</a>,
--   <a>createRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:description:CreateRepository'</a>,
--   <a>createRepository_description</a> - A description of the created
--   repository.
--   
--   <a>$sel:tags:CreateRepository'</a>, <a>createRepository_tags</a> - One
--   or more tag key-value pairs for the repository.
--   
--   <a>$sel:domain:CreateRepository'</a>, <a>createRepository_domain</a> -
--   The name of the domain that contains the created repository.
--   
--   <a>$sel:repository:CreateRepository'</a>,
--   <a>createRepository_repository</a> - The name of the repository to
--   create.
newCreateRepository :: Text -> Text -> CreateRepository

-- | <i>See:</i> <a>newCreateRepositoryResponse</a> smart constructor.
data CreateRepositoryResponse
CreateRepositoryResponse' :: Maybe RepositoryDescription -> Int -> CreateRepositoryResponse

-- | Create a value of <a>CreateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:CreateRepository'</a>,
--   <a>createRepositoryResponse_repository</a> - Information about the
--   created repository after processing the request.
--   
--   <a>$sel:httpStatus:CreateRepositoryResponse'</a>,
--   <a>createRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newCreateRepositoryResponse :: Int -> CreateRepositoryResponse

-- | <i>See:</i> <a>newGetPackageVersionAsset</a> smart constructor.
data GetPackageVersionAsset
GetPackageVersionAsset' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> Text -> GetPackageVersionAsset

-- | Create a value of <a>GetPackageVersionAsset</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:packageVersionRevision:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_packageVersionRevision</a> - The name of the
--   package version revision that contains the requested asset.
--   
--   <a>$sel:domain:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_domain</a> - The name of the domain that
--   contains the repository that contains the package version with the
--   requested asset.
--   
--   <a>$sel:repository:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_repository</a> - The repository that
--   contains the package version with the requested asset.
--   
--   <a>$sel:format:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_format</a> - A format that specifies the
--   type of the package version with the requested asset file. The valid
--   values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_package</a> - The name of the package that
--   contains the requested asset.
--   
--   <a>$sel:packageVersion:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_packageVersion</a> - A string that contains
--   the package version (for example, <tt>3.5.2</tt>).
--   
--   <a>$sel:asset:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAsset_asset</a> - The name of the requested asset.
newGetPackageVersionAsset :: Text -> Text -> PackageFormat -> Text -> Text -> Text -> GetPackageVersionAsset

-- | <i>See:</i> <a>newGetPackageVersionAssetResponse</a> smart
--   constructor.
data GetPackageVersionAssetResponse
GetPackageVersionAssetResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> ResponseBody -> GetPackageVersionAssetResponse

-- | Create a value of <a>GetPackageVersionAssetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersion:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAssetResponse_packageVersion</a> - A string that
--   contains the package version (for example, <tt>3.5.2</tt>).
--   
--   <a>$sel:assetName:GetPackageVersionAssetResponse'</a>,
--   <a>getPackageVersionAssetResponse_assetName</a> - The name of the
--   asset that is downloaded.
--   
--   <a>$sel:packageVersionRevision:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAssetResponse_packageVersionRevision</a> - The
--   name of the package version revision that contains the downloaded
--   asset.
--   
--   <a>$sel:httpStatus:GetPackageVersionAssetResponse'</a>,
--   <a>getPackageVersionAssetResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:asset:GetPackageVersionAsset'</a>,
--   <a>getPackageVersionAssetResponse_asset</a> - The binary file, or
--   asset, that is downloaded.
newGetPackageVersionAssetResponse :: Int -> ResponseBody -> GetPackageVersionAssetResponse

-- | <i>See:</i> <a>newListRepositoriesInDomain</a> smart constructor.
data ListRepositoriesInDomain
ListRepositoriesInDomain' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListRepositoriesInDomain

-- | Create a value of <a>ListRepositoriesInDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryPrefix:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_repositoryPrefix</a> - A prefix used to
--   filter returned repositories. Only repositories with names that start
--   with <tt>repositoryPrefix</tt> are returned.
--   
--   <a>$sel:domainOwner:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:nextToken:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_nextToken</a> - The token for the next set
--   of results. Use the value returned in the previous response in the
--   next request to retrieve the next set of results.
--   
--   <a>$sel:administratorAccount:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_administratorAccount</a> - Filter the list
--   of repositories to only include those that are managed by the AWS
--   account ID.
--   
--   <a>$sel:maxResults:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_maxResults</a> - The maximum number of
--   results to return per page.
--   
--   <a>$sel:domain:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomain_domain</a> - The name of the domain that
--   contains the returned list of repositories.
newListRepositoriesInDomain :: Text -> ListRepositoriesInDomain

-- | <i>See:</i> <a>newListRepositoriesInDomainResponse</a> smart
--   constructor.
data ListRepositoriesInDomainResponse
ListRepositoriesInDomainResponse' :: Maybe [RepositorySummary] -> Maybe Text -> Int -> ListRepositoriesInDomainResponse

-- | Create a value of <a>ListRepositoriesInDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:ListRepositoriesInDomainResponse'</a>,
--   <a>listRepositoriesInDomainResponse_repositories</a> - The returned
--   list of repositories.
--   
--   <a>$sel:nextToken:ListRepositoriesInDomain'</a>,
--   <a>listRepositoriesInDomainResponse_nextToken</a> - If there are
--   additional results, this is the token for the next set of results.
--   
--   <a>$sel:httpStatus:ListRepositoriesInDomainResponse'</a>,
--   <a>listRepositoriesInDomainResponse_httpStatus</a> - The response's
--   http status code.
newListRepositoriesInDomainResponse :: Int -> ListRepositoriesInDomainResponse

-- | <i>See:</i> <a>newPutDomainPermissionsPolicy</a> smart constructor.
data PutDomainPermissionsPolicy
PutDomainPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> Text -> PutDomainPermissionsPolicy

-- | Create a value of <a>PutDomainPermissionsPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_policyRevision</a> - The current
--   revision of the resource policy to be set. This revision is used for
--   optimistic locking, which prevents others from overwriting your
--   changes to the domain's resource policy.
--   
--   <a>$sel:domainOwner:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_domain</a> - The name of the domain on
--   which to set the resource policy.
--   
--   <a>$sel:policyDocument:PutDomainPermissionsPolicy'</a>,
--   <a>putDomainPermissionsPolicy_policyDocument</a> - A valid displayable
--   JSON Aspen policy string to be set as the access control resource
--   policy on the provided domain.
newPutDomainPermissionsPolicy :: Text -> Text -> PutDomainPermissionsPolicy

-- | <i>See:</i> <a>newPutDomainPermissionsPolicyResponse</a> smart
--   constructor.
data PutDomainPermissionsPolicyResponse
PutDomainPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> PutDomainPermissionsPolicyResponse

-- | Create a value of <a>PutDomainPermissionsPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:PutDomainPermissionsPolicyResponse'</a>,
--   <a>putDomainPermissionsPolicyResponse_policy</a> - The resource policy
--   that was set after processing the request.
--   
--   <a>$sel:httpStatus:PutDomainPermissionsPolicyResponse'</a>,
--   <a>putDomainPermissionsPolicyResponse_httpStatus</a> - The response's
--   http status code.
newPutDomainPermissionsPolicyResponse :: Int -> PutDomainPermissionsPolicyResponse

-- | <i>See:</i> <a>newDeleteDomainPermissionsPolicy</a> smart constructor.
data DeleteDomainPermissionsPolicy
DeleteDomainPermissionsPolicy' :: Maybe Text -> Maybe Text -> Text -> DeleteDomainPermissionsPolicy

-- | Create a value of <a>DeleteDomainPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyRevision:DeleteDomainPermissionsPolicy'</a>,
--   <a>deleteDomainPermissionsPolicy_policyRevision</a> - The current
--   revision of the resource policy to be deleted. This revision is used
--   for optimistic locking, which prevents others from overwriting your
--   changes to the domain's resource policy.
--   
--   <a>$sel:domainOwner:DeleteDomainPermissionsPolicy'</a>,
--   <a>deleteDomainPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:DeleteDomainPermissionsPolicy'</a>,
--   <a>deleteDomainPermissionsPolicy_domain</a> - The name of the domain
--   associated with the resource policy to be deleted.
newDeleteDomainPermissionsPolicy :: Text -> DeleteDomainPermissionsPolicy

-- | <i>See:</i> <a>newDeleteDomainPermissionsPolicyResponse</a> smart
--   constructor.
data DeleteDomainPermissionsPolicyResponse
DeleteDomainPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> DeleteDomainPermissionsPolicyResponse

-- | Create a value of <a>DeleteDomainPermissionsPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:DeleteDomainPermissionsPolicyResponse'</a>,
--   <a>deleteDomainPermissionsPolicyResponse_policy</a> - Information
--   about the deleted resource policy after processing the request.
--   
--   <a>$sel:httpStatus:DeleteDomainPermissionsPolicyResponse'</a>,
--   <a>deleteDomainPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newDeleteDomainPermissionsPolicyResponse :: Int -> DeleteDomainPermissionsPolicyResponse

-- | <i>See:</i> <a>newGetPackageVersionReadme</a> smart constructor.
data GetPackageVersionReadme
GetPackageVersionReadme' :: Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> GetPackageVersionReadme

-- | Create a value of <a>GetPackageVersionReadme</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_domain</a> - The name of the domain that
--   contains the repository that contains the package version with the
--   requested readme file.
--   
--   <a>$sel:repository:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_repository</a> - The repository that
--   contains the package with the requested readme file.
--   
--   <a>$sel:format:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_format</a> - A format that specifies the
--   type of the package version with the requested readme file. The valid
--   values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_package</a> - The name of the package
--   version that contains the requested readme file.
--   
--   <a>$sel:packageVersion:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadme_packageVersion</a> - A string that contains
--   the package version (for example, <tt>3.5.2</tt>).
newGetPackageVersionReadme :: Text -> Text -> PackageFormat -> Text -> Text -> GetPackageVersionReadme

-- | <i>See:</i> <a>newGetPackageVersionReadmeResponse</a> smart
--   constructor.
data GetPackageVersionReadmeResponse
GetPackageVersionReadmeResponse' :: Maybe Text -> Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetPackageVersionReadmeResponse

-- | Create a value of <a>GetPackageVersionReadmeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readme:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_readme</a> - The text of the
--   returned readme file.
--   
--   <a>$sel:format:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadmeResponse_format</a> - The format of the
--   package with the requested readme file. Valid format types are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadmeResponse_namespace</a> - The namespace of
--   the package. The package component that specifies its namespace
--   depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versionRevision:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_versionRevision</a> - The current
--   revision associated with the package version.
--   
--   <a>$sel:version:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_version</a> - The version of the
--   package with the requested readme file.
--   
--   <a>$sel:package:GetPackageVersionReadme'</a>,
--   <a>getPackageVersionReadmeResponse_package</a> - The name of the
--   package that contains the returned readme file.
--   
--   <a>$sel:httpStatus:GetPackageVersionReadmeResponse'</a>,
--   <a>getPackageVersionReadmeResponse_httpStatus</a> - The response's
--   http status code.
newGetPackageVersionReadmeResponse :: Int -> GetPackageVersionReadmeResponse

-- | <i>See:</i> <a>newCreateDomain</a> smart constructor.
data CreateDomain
CreateDomain' :: Maybe Text -> Maybe [Tag] -> Text -> CreateDomain

-- | Create a value of <a>CreateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:CreateDomain'</a>,
--   <a>createDomain_encryptionKey</a> - The encryption key for the domain.
--   This is used to encrypt content stored in a domain. An encryption key
--   can be a key ID, a key Amazon Resource Name (ARN), a key alias, or a
--   key alias ARN. To specify an <tt>encryptionKey</tt>, your IAM role
--   must have <tt>kms:DescribeKey</tt> and <tt>kms:CreateGrant</tt>
--   permissions on the encryption key that is used. For more information,
--   see <a>DescribeKey</a> in the <i>AWS Key Management Service API
--   Reference</i> and <a>AWS KMS API Permissions Reference</a> in the
--   <i>AWS Key Management Service Developer Guide</i>.
--   
--   CodeArtifact supports only symmetric CMKs. Do not associate an
--   asymmetric CMK with your domain. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.
--   
--   <a>$sel:tags:CreateDomain'</a>, <a>createDomain_tags</a> - One or more
--   tag key-value pairs for the domain.
--   
--   <a>$sel:domain:CreateDomain'</a>, <a>createDomain_domain</a> - The
--   name of the domain to create. All domain names in an AWS Region that
--   are in the same AWS account must be unique. The domain name is used as
--   the prefix in DNS hostnames. Do not use sensitive information in a
--   domain name because it is publicly discoverable.
newCreateDomain :: Text -> CreateDomain

-- | <i>See:</i> <a>newCreateDomainResponse</a> smart constructor.
data CreateDomainResponse
CreateDomainResponse' :: Maybe DomainDescription -> Int -> CreateDomainResponse

-- | Create a value of <a>CreateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:CreateDomain'</a>, <a>createDomainResponse_domain</a> -
--   Contains information about the created domain after processing the
--   request.
--   
--   <a>$sel:httpStatus:CreateDomainResponse'</a>,
--   <a>createDomainResponse_httpStatus</a> - The response's http status
--   code.
newCreateDomainResponse :: Int -> CreateDomainResponse

-- | <i>See:</i> <a>newGetRepositoryPermissionsPolicy</a> smart
--   constructor.
data GetRepositoryPermissionsPolicy
GetRepositoryPermissionsPolicy' :: Maybe Text -> Text -> Text -> GetRepositoryPermissionsPolicy

-- | Create a value of <a>GetRepositoryPermissionsPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetRepositoryPermissionsPolicy'</a>,
--   <a>getRepositoryPermissionsPolicy_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:GetRepositoryPermissionsPolicy'</a>,
--   <a>getRepositoryPermissionsPolicy_domain</a> - The name of the domain
--   containing the repository whose associated resource policy is to be
--   retrieved.
--   
--   <a>$sel:repository:GetRepositoryPermissionsPolicy'</a>,
--   <a>getRepositoryPermissionsPolicy_repository</a> - The name of the
--   repository whose associated resource policy is to be retrieved.
newGetRepositoryPermissionsPolicy :: Text -> Text -> GetRepositoryPermissionsPolicy

-- | <i>See:</i> <a>newGetRepositoryPermissionsPolicyResponse</a> smart
--   constructor.
data GetRepositoryPermissionsPolicyResponse
GetRepositoryPermissionsPolicyResponse' :: Maybe ResourcePolicy -> Int -> GetRepositoryPermissionsPolicyResponse

-- | Create a value of <a>GetRepositoryPermissionsPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetRepositoryPermissionsPolicyResponse'</a>,
--   <a>getRepositoryPermissionsPolicyResponse_policy</a> - The returned
--   resource policy.
--   
--   <a>$sel:httpStatus:GetRepositoryPermissionsPolicyResponse'</a>,
--   <a>getRepositoryPermissionsPolicyResponse_httpStatus</a> - The
--   response's http status code.
newGetRepositoryPermissionsPolicyResponse :: Int -> GetRepositoryPermissionsPolicyResponse

-- | <i>See:</i> <a>newAssociateExternalConnection</a> smart constructor.
data AssociateExternalConnection
AssociateExternalConnection' :: Maybe Text -> Text -> Text -> Text -> AssociateExternalConnection

-- | Create a value of <a>AssociateExternalConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_domain</a> - The name of the domain
--   that contains the repository.
--   
--   <a>$sel:repository:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_repository</a> - The name of the
--   repository to which the external connection is added.
--   
--   <a>$sel:externalConnection:AssociateExternalConnection'</a>,
--   <a>associateExternalConnection_externalConnection</a> - The name of
--   the external connection to add to the repository. The following values
--   are supported:
--   
--   <ul>
--   <li><tt>public:npmjs</tt> - for the npm public repository.</li>
--   <li><tt>public:pypi</tt> - for the Python Package Index.</li>
--   <li><tt>public:maven-central</tt> - for Maven Central.</li>
--   <li><tt>public:maven-googleandroid</tt> - for the Google Android
--   repository.</li>
--   <li><tt>public:maven-gradleplugins</tt> - for the Gradle plugins
--   repository.</li>
--   <li><tt>public:maven-commonsware</tt> - for the CommonsWare Android
--   repository.</li>
--   </ul>
newAssociateExternalConnection :: Text -> Text -> Text -> AssociateExternalConnection

-- | <i>See:</i> <a>newAssociateExternalConnectionResponse</a> smart
--   constructor.
data AssociateExternalConnectionResponse
AssociateExternalConnectionResponse' :: Maybe RepositoryDescription -> Int -> AssociateExternalConnectionResponse

-- | Create a value of <a>AssociateExternalConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:AssociateExternalConnection'</a>,
--   <a>associateExternalConnectionResponse_repository</a> - Information
--   about the connected repository after processing the request.
--   
--   <a>$sel:httpStatus:AssociateExternalConnectionResponse'</a>,
--   <a>associateExternalConnectionResponse_httpStatus</a> - The response's
--   http status code.
newAssociateExternalConnectionResponse :: Int -> AssociateExternalConnectionResponse

-- | <i>See:</i> <a>newDescribeRepository</a> smart constructor.
data DescribeRepository
DescribeRepository' :: Maybe Text -> Text -> Text -> DescribeRepository

-- | Create a value of <a>DescribeRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DescribeRepository'</a>,
--   <a>describeRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DescribeRepository'</a>,
--   <a>describeRepository_domain</a> - The name of the domain that
--   contains the repository to describe.
--   
--   <a>$sel:repository:DescribeRepository'</a>,
--   <a>describeRepository_repository</a> - A string that specifies the
--   name of the requested repository.
newDescribeRepository :: Text -> Text -> DescribeRepository

-- | <i>See:</i> <a>newDescribeRepositoryResponse</a> smart constructor.
data DescribeRepositoryResponse
DescribeRepositoryResponse' :: Maybe RepositoryDescription -> Int -> DescribeRepositoryResponse

-- | Create a value of <a>DescribeRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:DescribeRepository'</a>,
--   <a>describeRepositoryResponse_repository</a> - A
--   <tt>RepositoryDescription</tt> object that contains the requested
--   repository information.
--   
--   <a>$sel:httpStatus:DescribeRepositoryResponse'</a>,
--   <a>describeRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDescribeRepositoryResponse :: Int -> DescribeRepositoryResponse

-- | <i>See:</i> <a>newDeletePackageVersions</a> smart constructor.
data DeletePackageVersions
DeletePackageVersions' :: Maybe PackageVersionStatus -> Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> [Text] -> DeletePackageVersions

-- | Create a value of <a>DeletePackageVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expectedStatus:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_expectedStatus</a> - The expected status of
--   the package version to delete. Valid values are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_namespace</a> - The namespace of the package.
--   The package component that specifies its namespace depends on its
--   type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_domain</a> - The name of the domain that
--   contains the package to delete.
--   
--   <a>$sel:repository:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_repository</a> - The name of the repository
--   that contains the package versions to delete.
--   
--   <a>$sel:format:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_format</a> - The format of the package
--   versions to delete. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_package</a> - The name of the package with
--   the versions to delete.
--   
--   <a>$sel:versions:DeletePackageVersions'</a>,
--   <a>deletePackageVersions_versions</a> - An array of strings that
--   specify the versions of the package to delete.
newDeletePackageVersions :: Text -> Text -> PackageFormat -> Text -> DeletePackageVersions

-- | <i>See:</i> <a>newDeletePackageVersionsResponse</a> smart constructor.
data DeletePackageVersionsResponse
DeletePackageVersionsResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> DeletePackageVersionsResponse

-- | Create a value of <a>DeletePackageVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:DeletePackageVersionsResponse'</a>,
--   <a>deletePackageVersionsResponse_failedVersions</a> - A
--   <tt>PackageVersionError</tt> object that contains a map of errors
--   codes for the deleted package that failed. The possible error codes
--   are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:successfulVersions:DeletePackageVersionsResponse'</a>,
--   <a>deletePackageVersionsResponse_successfulVersions</a> - A list of
--   the package versions that were successfully deleted.
--   
--   <a>$sel:httpStatus:DeletePackageVersionsResponse'</a>,
--   <a>deletePackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDeletePackageVersionsResponse :: Int -> DeletePackageVersionsResponse

-- | <i>See:</i> <a>newDescribeDomain</a> smart constructor.
data DescribeDomain
DescribeDomain' :: Maybe Text -> Text -> DescribeDomain

-- | Create a value of <a>DescribeDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DescribeDomain'</a>,
--   <a>describeDomain_domainOwner</a> - The 12-digit account number of the
--   AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DescribeDomain'</a>, <a>describeDomain_domain</a> - A
--   string that specifies the name of the requested domain.
newDescribeDomain :: Text -> DescribeDomain

-- | <i>See:</i> <a>newDescribeDomainResponse</a> smart constructor.
data DescribeDomainResponse
DescribeDomainResponse' :: Maybe DomainDescription -> Int -> DescribeDomainResponse

-- | Create a value of <a>DescribeDomainResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DescribeDomain'</a>,
--   <a>describeDomainResponse_domain</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeDomainResponse'</a>,
--   <a>describeDomainResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDomainResponse :: Int -> DescribeDomainResponse

-- | <i>See:</i> <a>newDescribePackageVersion</a> smart constructor.
data DescribePackageVersion
DescribePackageVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> PackageFormat -> Text -> Text -> DescribePackageVersion

-- | Create a value of <a>DescribePackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:DescribePackageVersion'</a>,
--   <a>describePackageVersion_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:DescribePackageVersion'</a>,
--   <a>describePackageVersion_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:domain:DescribePackageVersion'</a>,
--   <a>describePackageVersion_domain</a> - The name of the domain that
--   contains the repository that contains the package version.
--   
--   <a>$sel:repository:DescribePackageVersion'</a>,
--   <a>describePackageVersion_repository</a> - The name of the repository
--   that contains the package version.
--   
--   <a>$sel:format:DescribePackageVersion'</a>,
--   <a>describePackageVersion_format</a> - A format that specifies the
--   type of the requested package version. The valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:package:DescribePackageVersion'</a>,
--   <a>describePackageVersion_package</a> - The name of the requested
--   package version.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersion_packageVersion</a> - A string that contains
--   the package version (for example, <tt>3.5.2</tt>).
newDescribePackageVersion :: Text -> Text -> PackageFormat -> Text -> Text -> DescribePackageVersion

-- | <i>See:</i> <a>newDescribePackageVersionResponse</a> smart
--   constructor.
data DescribePackageVersionResponse
DescribePackageVersionResponse' :: Int -> PackageVersionDescription -> DescribePackageVersionResponse

-- | Create a value of <a>DescribePackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_packageVersion</a> - A
--   <a>PackageVersionDescription</a> object that contains information
--   about the requested package version.
newDescribePackageVersionResponse :: Int -> PackageVersionDescription -> DescribePackageVersionResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to add or
--   update tags for.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags you
--   want to modify or add to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag key for each tag that you want to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDeleteRepository</a> smart constructor.
data DeleteRepository
DeleteRepository' :: Maybe Text -> Text -> Text -> DeleteRepository

-- | Create a value of <a>DeleteRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DeleteRepository'</a>,
--   <a>deleteRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domain:DeleteRepository'</a>, <a>deleteRepository_domain</a> -
--   The name of the domain that contains the repository to delete.
--   
--   <a>$sel:repository:DeleteRepository'</a>,
--   <a>deleteRepository_repository</a> - The name of the repository to
--   delete.
newDeleteRepository :: Text -> Text -> DeleteRepository

-- | <i>See:</i> <a>newDeleteRepositoryResponse</a> smart constructor.
data DeleteRepositoryResponse
DeleteRepositoryResponse' :: Maybe RepositoryDescription -> Int -> DeleteRepositoryResponse

-- | Create a value of <a>DeleteRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:DeleteRepository'</a>,
--   <a>deleteRepositoryResponse_repository</a> - Information about the
--   deleted repository after processing the request.
--   
--   <a>$sel:httpStatus:DeleteRepositoryResponse'</a>,
--   <a>deleteRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRepositoryResponse :: Int -> DeleteRepositoryResponse

-- | <i>See:</i> <a>newUpdateRepository</a> smart constructor.
data UpdateRepository
UpdateRepository' :: Maybe [UpstreamRepository] -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateRepository

-- | Create a value of <a>UpdateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upstreams:UpdateRepository'</a>,
--   <a>updateRepository_upstreams</a> - A list of upstream repositories to
--   associate with the repository. The order of the upstream repositories
--   in the list determines their priority order when AWS CodeArtifact
--   looks for a requested package version. For more information, see
--   <a>Working with upstream repositories</a>.
--   
--   <a>$sel:domainOwner:UpdateRepository'</a>,
--   <a>updateRepository_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:description:UpdateRepository'</a>,
--   <a>updateRepository_description</a> - An updated repository
--   description.
--   
--   <a>$sel:domain:UpdateRepository'</a>, <a>updateRepository_domain</a> -
--   The name of the domain associated with the repository to update.
--   
--   <a>$sel:repository:UpdateRepository'</a>,
--   <a>updateRepository_repository</a> - The name of the repository to
--   update.
newUpdateRepository :: Text -> Text -> UpdateRepository

-- | <i>See:</i> <a>newUpdateRepositoryResponse</a> smart constructor.
data UpdateRepositoryResponse
UpdateRepositoryResponse' :: Maybe RepositoryDescription -> Int -> UpdateRepositoryResponse

-- | Create a value of <a>UpdateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:UpdateRepository'</a>,
--   <a>updateRepositoryResponse_repository</a> - The updated repository.
--   
--   <a>$sel:httpStatus:UpdateRepositoryResponse'</a>,
--   <a>updateRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRepositoryResponse :: Int -> UpdateRepositoryResponse

-- | <i>See:</i> <a>newCopyPackageVersions</a> smart constructor.
data CopyPackageVersions
CopyPackageVersions' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Text -> Text -> Text -> PackageFormat -> Text -> CopyPackageVersions

-- | Create a value of <a>CopyPackageVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowOverwrite:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_allowOverwrite</a> - Set to true to overwrite a
--   package version that already exists in the destination repository. If
--   set to false and the package version already exists in the destination
--   repository, the package version is returned in the
--   <tt>failedVersions</tt> field of the response with an
--   <tt>ALREADY_EXISTS</tt> error code.
--   
--   <a>$sel:versionRevisions:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_versionRevisions</a> - A list of key-value
--   pairs. The keys are package versions and the values are package
--   version revisions. A <tt>CopyPackageVersion</tt> operation succeeds if
--   the specified versions in the source repository match the specified
--   package version revision.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
--   
--   <a>$sel:namespace:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_namespace</a> - The namespace of the package.
--   The package component that specifies its namespace depends on its
--   type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:versions:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_versions</a> - The versions of the package to
--   copy.
--   
--   You must specify <tt>versions</tt> or <tt>versionRevisions</tt>. You
--   cannot specify both.
--   
--   <a>$sel:includeFromUpstream:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_includeFromUpstream</a> - Set to true to copy
--   packages from repositories that are upstream from the source
--   repository to the destination repository. The default setting is
--   false. For more information, see <a>Working with upstream
--   repositories</a>.
--   
--   <a>$sel:domain:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_domain</a> - The name of the domain that
--   contains the source and destination repositories.
--   
--   <a>$sel:sourceRepository:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_sourceRepository</a> - The name of the
--   repository that contains the package versions to copy.
--   
--   <a>$sel:destinationRepository:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_destinationRepository</a> - The name of the
--   repository into which package versions are copied.
--   
--   <a>$sel:format:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_format</a> - The format of the package that is
--   copied. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:CopyPackageVersions'</a>,
--   <a>copyPackageVersions_package</a> - The name of the package that is
--   copied.
newCopyPackageVersions :: Text -> Text -> Text -> PackageFormat -> Text -> CopyPackageVersions

-- | <i>See:</i> <a>newCopyPackageVersionsResponse</a> smart constructor.
data CopyPackageVersionsResponse
CopyPackageVersionsResponse' :: Maybe (HashMap Text PackageVersionError) -> Maybe (HashMap Text SuccessfulPackageVersionInfo) -> Int -> CopyPackageVersionsResponse

-- | Create a value of <a>CopyPackageVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedVersions:CopyPackageVersionsResponse'</a>,
--   <a>copyPackageVersionsResponse_failedVersions</a> - A map of package
--   versions that failed to copy and their error codes. The possible error
--   codes are in the <tt>PackageVersionError</tt> data type. They are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:successfulVersions:CopyPackageVersionsResponse'</a>,
--   <a>copyPackageVersionsResponse_successfulVersions</a> - A list of the
--   package versions that were successfully copied to your repository.
--   
--   <a>$sel:httpStatus:CopyPackageVersionsResponse'</a>,
--   <a>copyPackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newCopyPackageVersionsResponse :: Int -> CopyPackageVersionsResponse

-- | <i>See:</i> <a>newGetAuthorizationToken</a> smart constructor.
data GetAuthorizationToken
GetAuthorizationToken' :: Maybe Text -> Maybe Natural -> Text -> GetAuthorizationToken

-- | Create a value of <a>GetAuthorizationToken</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:GetAuthorizationToken'</a>,
--   <a>getAuthorizationToken_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:durationSeconds:GetAuthorizationToken'</a>,
--   <a>getAuthorizationToken_durationSeconds</a> - The time, in seconds,
--   that the generated authorization token is valid. Valid values are
--   <tt>0</tt> and any number between <tt>900</tt> (15 minutes) and
--   <tt>43200</tt> (12 hours). A value of <tt>0</tt> will set the
--   expiration of the authorization token to the same expiration of the
--   user's role's temporary credentials.
--   
--   <a>$sel:domain:GetAuthorizationToken'</a>,
--   <a>getAuthorizationToken_domain</a> - The name of the domain that is
--   in scope for the generated authorization token.
newGetAuthorizationToken :: Text -> GetAuthorizationToken

-- | <i>See:</i> <a>newGetAuthorizationTokenResponse</a> smart constructor.
data GetAuthorizationTokenResponse
GetAuthorizationTokenResponse' :: Maybe POSIX -> Maybe Text -> Int -> GetAuthorizationTokenResponse

-- | Create a value of <a>GetAuthorizationTokenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiration:GetAuthorizationTokenResponse'</a>,
--   <a>getAuthorizationTokenResponse_expiration</a> - A timestamp that
--   specifies the date and time the authorization token expires.
--   
--   <a>$sel:authorizationToken:GetAuthorizationTokenResponse'</a>,
--   <a>getAuthorizationTokenResponse_authorizationToken</a> - The returned
--   authentication token.
--   
--   <a>$sel:httpStatus:GetAuthorizationTokenResponse'</a>,
--   <a>getAuthorizationTokenResponse_httpStatus</a> - The response's http
--   status code.
newGetAuthorizationTokenResponse :: Int -> GetAuthorizationTokenResponse

-- | <i>See:</i> <a>newDisassociateExternalConnection</a> smart
--   constructor.
data DisassociateExternalConnection
DisassociateExternalConnection' :: Maybe Text -> Text -> Text -> Text -> DisassociateExternalConnection

-- | Create a value of <a>DisassociateExternalConnection</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_domainOwner</a> - The 12-digit
--   account number of the AWS account that owns the domain. It does not
--   include dashes or spaces.
--   
--   <a>$sel:domain:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_domain</a> - The name of the domain
--   that contains the repository from which to remove the external
--   repository.
--   
--   <a>$sel:repository:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_repository</a> - The name of the
--   repository from which the external connection will be removed.
--   
--   <a>$sel:externalConnection:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnection_externalConnection</a> - The name of
--   the external connection to be removed from the repository.
newDisassociateExternalConnection :: Text -> Text -> Text -> DisassociateExternalConnection

-- | <i>See:</i> <a>newDisassociateExternalConnectionResponse</a> smart
--   constructor.
data DisassociateExternalConnectionResponse
DisassociateExternalConnectionResponse' :: Maybe RepositoryDescription -> Int -> DisassociateExternalConnectionResponse

-- | Create a value of <a>DisassociateExternalConnectionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repository:DisassociateExternalConnection'</a>,
--   <a>disassociateExternalConnectionResponse_repository</a> - The
--   repository associated with the removed external connection.
--   
--   <a>$sel:httpStatus:DisassociateExternalConnectionResponse'</a>,
--   <a>disassociateExternalConnectionResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateExternalConnectionResponse :: Int -> DisassociateExternalConnectionResponse

-- | <i>See:</i> <a>newDeleteDomain</a> smart constructor.
data DeleteDomain
DeleteDomain' :: Maybe Text -> Text -> DeleteDomain

-- | Create a value of <a>DeleteDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainOwner:DeleteDomain'</a>, <a>deleteDomain_domainOwner</a>
--   - The 12-digit account number of the AWS account that owns the domain.
--   It does not include dashes or spaces.
--   
--   <a>$sel:domain:DeleteDomain'</a>, <a>deleteDomain_domain</a> - The
--   name of the domain to delete.
newDeleteDomain :: Text -> DeleteDomain

-- | <i>See:</i> <a>newDeleteDomainResponse</a> smart constructor.
data DeleteDomainResponse
DeleteDomainResponse' :: Maybe DomainDescription -> Int -> DeleteDomainResponse

-- | Create a value of <a>DeleteDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DeleteDomain'</a>, <a>deleteDomainResponse_domain</a> -
--   Contains information about the deleted domain after processing the
--   request.
--   
--   <a>$sel:httpStatus:DeleteDomainResponse'</a>,
--   <a>deleteDomainResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDomainResponse :: Int -> DeleteDomainResponse

-- | <i>See:</i> <a>newListDomains</a> smart constructor.
data ListDomains
ListDomains' :: Maybe Text -> Maybe Natural -> ListDomains

-- | Create a value of <a>ListDomains</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>, <a>listDomains_nextToken</a> - The
--   token for the next set of results. Use the value returned in the
--   previous response in the next request to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListDomains'</a>, <a>listDomains_maxResults</a> -
--   The maximum number of results to return per page.
newListDomains :: ListDomains

-- | <i>See:</i> <a>newListDomainsResponse</a> smart constructor.
data ListDomainsResponse
ListDomainsResponse' :: Maybe Text -> Maybe [DomainSummary] -> Int -> ListDomainsResponse

-- | Create a value of <a>ListDomainsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>,
--   <a>listDomainsResponse_nextToken</a> - The token for the next set of
--   results. Use the value returned in the previous response in the next
--   request to retrieve the next set of results.
--   
--   <a>$sel:domains:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_domains</a> - The returned list of
--   <a>DomainSummary</a> objects.
--   
--   <a>$sel:httpStatus:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_httpStatus</a> - The response's http status
--   code.
newListDomainsResponse :: Int -> ListDomainsResponse

-- | <i>See:</i> <a>newListPackageVersions</a> smart constructor.
data ListPackageVersions
ListPackageVersions' :: Maybe PackageVersionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe PackageVersionSortType -> Text -> Text -> PackageFormat -> Text -> ListPackageVersions

-- | Create a value of <a>ListPackageVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListPackageVersions'</a>,
--   <a>listPackageVersions_status</a> - A string that specifies the status
--   of the package versions to include in the returned list. It can be one
--   of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackageVersions'</a>,
--   <a>listPackageVersions_namespace</a> - The namespace of the package.
--   The package component that specifies its namespace depends on its
--   type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackageVersions'</a>,
--   <a>listPackageVersions_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:nextToken:ListPackageVersions'</a>,
--   <a>listPackageVersions_nextToken</a> - The token for the next set of
--   results. Use the value returned in the previous response in the next
--   request to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListPackageVersions'</a>,
--   <a>listPackageVersions_maxResults</a> - The maximum number of results
--   to return per page.
--   
--   <a>$sel:sortBy:ListPackageVersions'</a>,
--   <a>listPackageVersions_sortBy</a> - How to sort the returned list of
--   package versions.
--   
--   <a>$sel:domain:ListPackageVersions'</a>,
--   <a>listPackageVersions_domain</a> - The name of the domain that
--   contains the repository that contains the returned package versions.
--   
--   <a>$sel:repository:ListPackageVersions'</a>,
--   <a>listPackageVersions_repository</a> - The name of the repository
--   that contains the package.
--   
--   <a>$sel:format:ListPackageVersions'</a>,
--   <a>listPackageVersions_format</a> - The format of the returned
--   packages. The valid package types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:ListPackageVersions'</a>,
--   <a>listPackageVersions_package</a> - The name of the package for which
--   you want to return a list of package versions.
newListPackageVersions :: Text -> Text -> PackageFormat -> Text -> ListPackageVersions

-- | <i>See:</i> <a>newListPackageVersionsResponse</a> smart constructor.
data ListPackageVersionsResponse
ListPackageVersionsResponse' :: Maybe PackageFormat -> Maybe Text -> Maybe [PackageVersionSummary] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> ListPackageVersionsResponse

-- | Create a value of <a>ListPackageVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_format</a> - A format of the package.
--   Valid package format values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versions:ListPackageVersionsResponse'</a>,
--   <a>listPackageVersionsResponse_versions</a> - The returned list of
--   <a>PackageVersionSummary</a> objects.
--   
--   <a>$sel:nextToken:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_nextToken</a> - If there are additional
--   results, this is the token for the next set of results.
--   
--   <a>$sel:package:ListPackageVersions'</a>,
--   <a>listPackageVersionsResponse_package</a> - The name of the package.
--   
--   <a>$sel:defaultDisplayVersion:ListPackageVersionsResponse'</a>,
--   <a>listPackageVersionsResponse_defaultDisplayVersion</a> - The default
--   package version to display. This depends on the package format:
--   
--   <ul>
--   <li>For Maven and PyPI packages, it's the most recently published
--   package version.</li>
--   <li>For npm packages, it's the version referenced by the
--   <tt>latest</tt> tag. If the <tt>latest</tt> tag is not set, it's the
--   most recently published package version.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListPackageVersionsResponse'</a>,
--   <a>listPackageVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListPackageVersionsResponse :: Int -> ListPackageVersionsResponse

-- | <i>See:</i> <a>newListPackageVersionAssets</a> smart constructor.
data ListPackageVersionAssets
ListPackageVersionAssets' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionAssets

-- | Create a value of <a>ListPackageVersionAssets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:domainOwner:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_domainOwner</a> - The 12-digit account
--   number of the AWS account that owns the domain. It does not include
--   dashes or spaces.
--   
--   <a>$sel:nextToken:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_nextToken</a> - The token for the next set
--   of results. Use the value returned in the previous response in the
--   next request to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_maxResults</a> - The maximum number of
--   results to return per page.
--   
--   <a>$sel:domain:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_domain</a> - The name of the domain that
--   contains the repository associated with the package version assets.
--   
--   <a>$sel:repository:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_repository</a> - The name of the
--   repository that contains the package that contains the returned
--   package version assets.
--   
--   <a>$sel:format:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_format</a> - The format of the package
--   that contains the returned package version assets. The valid package
--   types are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:package:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_package</a> - The name of the package that
--   contains the returned package version assets.
--   
--   <a>$sel:packageVersion:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssets_packageVersion</a> - A string that
--   contains the package version (for example, <tt>3.5.2</tt>).
newListPackageVersionAssets :: Text -> Text -> PackageFormat -> Text -> Text -> ListPackageVersionAssets

-- | <i>See:</i> <a>newListPackageVersionAssetsResponse</a> smart
--   constructor.
data ListPackageVersionAssetsResponse
ListPackageVersionAssetsResponse' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [AssetSummary] -> Int -> ListPackageVersionAssetsResponse

-- | Create a value of <a>ListPackageVersionAssetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_format</a> - The format of the
--   package that contains the returned package version assets.
--   
--   <a>$sel:namespace:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_namespace</a> - The namespace of
--   the package. The package component that specifies its namespace
--   depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:versionRevision:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_versionRevision</a> - The current
--   revision associated with the package version.
--   
--   <a>$sel:nextToken:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_nextToken</a> - If there are
--   additional results, this is the token for the next set of results.
--   
--   <a>$sel:version:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_version</a> - The version of the
--   package associated with the returned assets.
--   
--   <a>$sel:package:ListPackageVersionAssets'</a>,
--   <a>listPackageVersionAssetsResponse_package</a> - The name of the
--   package that contains the returned package version assets.
--   
--   <a>$sel:assets:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_assets</a> - The returned list of
--   <a>AssetSummary</a> objects.
--   
--   <a>$sel:httpStatus:ListPackageVersionAssetsResponse'</a>,
--   <a>listPackageVersionAssetsResponse_httpStatus</a> - The response's
--   http status code.
newListPackageVersionAssetsResponse :: Int -> ListPackageVersionAssetsResponse
newtype DomainStatus
DomainStatus' :: Text -> DomainStatus
[fromDomainStatus] :: DomainStatus -> Text
pattern DomainStatus_Active :: DomainStatus
pattern DomainStatus_Deleted :: DomainStatus
newtype ExternalConnectionStatus
ExternalConnectionStatus' :: Text -> ExternalConnectionStatus
[fromExternalConnectionStatus] :: ExternalConnectionStatus -> Text
pattern ExternalConnectionStatus_Available :: ExternalConnectionStatus
newtype HashAlgorithm
HashAlgorithm' :: Text -> HashAlgorithm
[fromHashAlgorithm] :: HashAlgorithm -> Text
pattern HashAlgorithm_MD5 :: HashAlgorithm
pattern HashAlgorithm_SHA_1 :: HashAlgorithm
pattern HashAlgorithm_SHA_256 :: HashAlgorithm
pattern HashAlgorithm_SHA_512 :: HashAlgorithm
newtype PackageFormat
PackageFormat' :: Text -> PackageFormat
[fromPackageFormat] :: PackageFormat -> Text
pattern PackageFormat_Maven :: PackageFormat
pattern PackageFormat_Npm :: PackageFormat
pattern PackageFormat_Nuget :: PackageFormat
pattern PackageFormat_Pypi :: PackageFormat
newtype PackageVersionErrorCode
PackageVersionErrorCode' :: Text -> PackageVersionErrorCode
[fromPackageVersionErrorCode] :: PackageVersionErrorCode -> Text
pattern PackageVersionErrorCode_ALREADY_EXISTS :: PackageVersionErrorCode
pattern PackageVersionErrorCode_MISMATCHED_REVISION :: PackageVersionErrorCode
pattern PackageVersionErrorCode_MISMATCHED_STATUS :: PackageVersionErrorCode
pattern PackageVersionErrorCode_NOT_ALLOWED :: PackageVersionErrorCode
pattern PackageVersionErrorCode_NOT_FOUND :: PackageVersionErrorCode
pattern PackageVersionErrorCode_SKIPPED :: PackageVersionErrorCode
newtype PackageVersionSortType
PackageVersionSortType' :: Text -> PackageVersionSortType
[fromPackageVersionSortType] :: PackageVersionSortType -> Text
pattern PackageVersionSortType_PUBLISHED_TIME :: PackageVersionSortType
newtype PackageVersionStatus
PackageVersionStatus' :: Text -> PackageVersionStatus
[fromPackageVersionStatus] :: PackageVersionStatus -> Text
pattern PackageVersionStatus_Archived :: PackageVersionStatus
pattern PackageVersionStatus_Deleted :: PackageVersionStatus
pattern PackageVersionStatus_Disposed :: PackageVersionStatus
pattern PackageVersionStatus_Published :: PackageVersionStatus
pattern PackageVersionStatus_Unfinished :: PackageVersionStatus
pattern PackageVersionStatus_Unlisted :: PackageVersionStatus

-- | Contains details about a package version asset.
--   
--   <i>See:</i> <a>newAssetSummary</a> smart constructor.
data AssetSummary
AssetSummary' :: Maybe Integer -> Maybe (HashMap HashAlgorithm Text) -> Text -> AssetSummary

-- | Create a value of <a>AssetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:AssetSummary'</a>, <a>assetSummary_size</a> - The size of
--   the asset.
--   
--   <a>$sel:hashes:AssetSummary'</a>, <a>assetSummary_hashes</a> - The
--   hashes of the asset.
--   
--   <a>$sel:name:AssetSummary'</a>, <a>assetSummary_name</a> - The name of
--   the asset.
newAssetSummary :: Text -> AssetSummary

-- | Information about a domain. A domain is a container for repositories.
--   When you create a domain, it is empty until you add one or more
--   repositories.
--   
--   <i>See:</i> <a>newDomainDescription</a> smart constructor.
data DomainDescription
DomainDescription' :: Maybe Integer -> Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> DomainDescription

-- | Create a value of <a>DomainDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetSizeBytes:DomainDescription'</a>,
--   <a>domainDescription_assetSizeBytes</a> - The total size of all assets
--   in the domain.
--   
--   <a>$sel:status:DomainDescription'</a>, <a>domainDescription_status</a>
--   - The current status of a domain. The valid values are
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
--   
--   <a>$sel:arn:DomainDescription'</a>, <a>domainDescription_arn</a> - The
--   Amazon Resource Name (ARN) of the domain.
--   
--   <a>$sel:createdTime:DomainDescription'</a>,
--   <a>domainDescription_createdTime</a> - A timestamp that represents the
--   date and time the domain was created.
--   
--   <a>$sel:s3BucketArn:DomainDescription'</a>,
--   <a>domainDescription_s3BucketArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon S3 bucket that is used to store package assets in the
--   domain.
--   
--   <a>$sel:owner:DomainDescription'</a>, <a>domainDescription_owner</a> -
--   The AWS account ID that owns the domain.
--   
--   <a>$sel:repositoryCount:DomainDescription'</a>,
--   <a>domainDescription_repositoryCount</a> - The number of repositories
--   in the domain.
--   
--   <a>$sel:name:DomainDescription'</a>, <a>domainDescription_name</a> -
--   The name of the domain.
--   
--   <a>$sel:encryptionKey:DomainDescription'</a>,
--   <a>domainDescription_encryptionKey</a> - The ARN of an AWS Key
--   Management Service (AWS KMS) key associated with a domain.
newDomainDescription :: DomainDescription

-- | Information about a domain, including its name, Amazon Resource Name
--   (ARN), and status. The <a>ListDomains</a> operation returns a list of
--   <tt>DomainSummary</tt> objects.
--   
--   <i>See:</i> <a>newDomainSummary</a> smart constructor.
data DomainSummary
DomainSummary' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> DomainSummary

-- | Create a value of <a>DomainSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DomainSummary'</a>, <a>domainSummary_status</a> - A
--   string that contains the status of the domain. The valid values are:
--   
--   <ul>
--   <li><pre>Active</pre></li>
--   <li><pre>Deleted</pre></li>
--   </ul>
--   
--   <a>$sel:arn:DomainSummary'</a>, <a>domainSummary_arn</a> - The ARN of
--   the domain.
--   
--   <a>$sel:createdTime:DomainSummary'</a>,
--   <a>domainSummary_createdTime</a> - A timestamp that contains the date
--   and time the domain was created.
--   
--   <a>$sel:owner:DomainSummary'</a>, <a>domainSummary_owner</a> - The
--   12-digit account number of the AWS account that owns the domain. It
--   does not include dashes or spaces.
--   
--   <a>$sel:name:DomainSummary'</a>, <a>domainSummary_name</a> - The name
--   of the domain.
--   
--   <a>$sel:encryptionKey:DomainSummary'</a>,
--   <a>domainSummary_encryptionKey</a> - The key used to encrypt the
--   domain.
newDomainSummary :: DomainSummary

-- | Details of the license data.
--   
--   <i>See:</i> <a>newLicenseInfo</a> smart constructor.
data LicenseInfo
LicenseInfo' :: Maybe Text -> Maybe Text -> LicenseInfo

-- | Create a value of <a>LicenseInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:LicenseInfo'</a>, <a>licenseInfo_url</a> - The URL for
--   license data.
--   
--   <a>$sel:name:LicenseInfo'</a>, <a>licenseInfo_name</a> - Name of the
--   license.
newLicenseInfo :: LicenseInfo

-- | Details about a package dependency.
--   
--   <i>See:</i> <a>newPackageDependency</a> smart constructor.
data PackageDependency
PackageDependency' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PackageDependency

-- | Create a value of <a>PackageDependency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dependencyType:PackageDependency'</a>,
--   <a>packageDependency_dependencyType</a> - The type of a package
--   dependency. The possible values depend on the package type. Example
--   types are <tt>compile</tt>, <tt>runtime</tt>, and <tt>test</tt> for
--   Maven packages, and <tt>dev</tt>, <tt>prod</tt>, and <tt>optional</tt>
--   for npm packages.
--   
--   <a>$sel:namespace:PackageDependency'</a>,
--   <a>packageDependency_namespace</a> - The namespace of the package. The
--   package component that specifies its namespace depends on its type.
--   For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:package:PackageDependency'</a>,
--   <a>packageDependency_package</a> - The name of the package that this
--   package depends on.
--   
--   <a>$sel:versionRequirement:PackageDependency'</a>,
--   <a>packageDependency_versionRequirement</a> - The required version, or
--   version range, of the package that this package depends on. The
--   version format is specific to the package type. For example, the
--   following are possible valid required versions: <tt>1.2.3</tt>,
--   <tt>^2.3.4</tt>, or <tt>4.x</tt>.
newPackageDependency :: PackageDependency

-- | Details about a package, including its format, namespace, and name.
--   The <a>ListPackages</a> operation returns a list of
--   <tt>PackageSummary</tt> objects.
--   
--   <i>See:</i> <a>newPackageSummary</a> smart constructor.
data PackageSummary
PackageSummary' :: Maybe PackageFormat -> Maybe Text -> Maybe Text -> PackageSummary

-- | Create a value of <a>PackageSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:PackageSummary'</a>, <a>packageSummary_format</a> - The
--   format of the package. Valid values are:
--   
--   <ul>
--   <li><pre>npm</pre></li>
--   <li><pre>pypi</pre></li>
--   <li><pre>maven</pre></li>
--   </ul>
--   
--   <a>$sel:namespace:PackageSummary'</a>, <a>packageSummary_namespace</a>
--   - The namespace of the package. The package component that specifies
--   its namespace depends on its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:package:PackageSummary'</a>, <a>packageSummary_package</a> -
--   The name of the package.
newPackageSummary :: PackageSummary

-- | Details about a package version.
--   
--   <i>See:</i> <a>newPackageVersionDescription</a> smart constructor.
data PackageVersionDescription
PackageVersionDescription' :: Maybe Text -> Maybe Text -> Maybe PackageVersionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe PackageFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [LicenseInfo] -> Maybe Text -> PackageVersionDescription

-- | Create a value of <a>PackageVersionDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_summary</a> - A summary of the package
--   version. The summary is extracted from the package. The information in
--   and detail level of the summary depends on the package version's
--   format.
--   
--   <a>$sel:homePage:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_homePage</a> - The homepage associated
--   with the package.
--   
--   <a>$sel:status:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_status</a> - A string that contains the
--   status of the package version. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:sourceCodeRepository:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_sourceCodeRepository</a> - The repository
--   for the source code in the package version, or the source code used to
--   build it.
--   
--   <a>$sel:packageName:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_packageName</a> - The name of the
--   requested package.
--   
--   <a>$sel:publishedTime:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_publishedTime</a> - A timestamp that
--   contains the date and time the package version was published.
--   
--   <a>$sel:format:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_format</a> - The format of the package
--   version. The valid package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
--   
--   <a>$sel:namespace:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_namespace</a> - The namespace of the
--   package. The package component that specifies its namespace depends on
--   its type. For example:
--   
--   <ul>
--   <li>The namespace of a Maven package is its <tt>groupId</tt>.</li>
--   <li>The namespace of an npm package is its <tt>scope</tt>.</li>
--   <li>A Python package does not contain a corresponding component, so
--   Python packages do not have a namespace.</li>
--   </ul>
--   
--   <a>$sel:version:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_version</a> - The version of the package.
--   
--   <a>$sel:displayName:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_displayName</a> - The name of the package
--   that is displayed. The <tt>displayName</tt> varies depending on the
--   package version's format. For example, if an npm package is named
--   <tt>ui</tt>, is in the namespace <tt>vue</tt>, and has the format
--   <tt>npm</tt>, then the <tt>displayName</tt> is <tt>@vue/ui</tt>.
--   
--   <a>$sel:licenses:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_licenses</a> - Information about licenses
--   associated with the package version.
--   
--   <a>$sel:revision:PackageVersionDescription'</a>,
--   <a>packageVersionDescription_revision</a> - The revision of the
--   package version.
newPackageVersionDescription :: PackageVersionDescription

-- | An error associated with package.
--   
--   <i>See:</i> <a>newPackageVersionError</a> smart constructor.
data PackageVersionError
PackageVersionError' :: Maybe PackageVersionErrorCode -> Maybe Text -> PackageVersionError

-- | Create a value of <a>PackageVersionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PackageVersionError'</a>,
--   <a>packageVersionError_errorCode</a> - The error code associated with
--   the error. Valid error codes are:
--   
--   <ul>
--   <li><pre>ALREADY_EXISTS</pre></li>
--   <li><pre>MISMATCHED_REVISION</pre></li>
--   <li><pre>MISMATCHED_STATUS</pre></li>
--   <li><pre>NOT_ALLOWED</pre></li>
--   <li><pre>NOT_FOUND</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   </ul>
--   
--   <a>$sel:errorMessage:PackageVersionError'</a>,
--   <a>packageVersionError_errorMessage</a> - The error message associated
--   with the error.
newPackageVersionError :: PackageVersionError

-- | Details about a package version, including its status, version, and
--   revision. The <a>ListPackageVersions</a> operation returns a list of
--   <tt>PackageVersionSummary</tt> objects.
--   
--   <i>See:</i> <a>newPackageVersionSummary</a> smart constructor.
data PackageVersionSummary
PackageVersionSummary' :: Maybe Text -> Text -> PackageVersionStatus -> PackageVersionSummary

-- | Create a value of <a>PackageVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_revision</a> - The revision associated with a
--   package version.
--   
--   <a>$sel:version:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_version</a> - Information about a package
--   version.
--   
--   <a>$sel:status:PackageVersionSummary'</a>,
--   <a>packageVersionSummary_status</a> - A string that contains the
--   status of the package version. It can be one of the following:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
newPackageVersionSummary :: Text -> PackageVersionStatus -> PackageVersionSummary

-- | The details of a repository stored in AWS CodeArtifact. A CodeArtifact
--   repository contains a set of package versions, each of which maps to a
--   set of assets. Repositories are polyglot—a single repository can
--   contain packages of any supported type. Each repository exposes
--   endpoints for fetching and publishing packages using tools like the
--   <tt>npm</tt> CLI, the Maven CLI (<tt>mvn</tt>), and <tt>pip</tt>. You
--   can create up to 100 repositories per AWS account.
--   
--   <i>See:</i> <a>newRepositoryDescription</a> smart constructor.
data RepositoryDescription
RepositoryDescription' :: Maybe [UpstreamRepositoryInfo] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [RepositoryExternalConnectionInfo] -> Maybe Text -> RepositoryDescription

-- | Create a value of <a>RepositoryDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upstreams:RepositoryDescription'</a>,
--   <a>repositoryDescription_upstreams</a> - A list of upstream
--   repositories to associate with the repository. The order of the
--   upstream repositories in the list determines their priority order when
--   AWS CodeArtifact looks for a requested package version. For more
--   information, see <a>Working with upstream repositories</a>.
--   
--   <a>$sel:arn:RepositoryDescription'</a>,
--   <a>repositoryDescription_arn</a> - The Amazon Resource Name (ARN) of
--   the repository.
--   
--   <a>$sel:domainOwner:RepositoryDescription'</a>,
--   <a>repositoryDescription_domainOwner</a> - The 12-digit account number
--   of the AWS account that owns the domain that contains the repository.
--   It does not include dashes or spaces.
--   
--   <a>$sel:domainName:RepositoryDescription'</a>,
--   <a>repositoryDescription_domainName</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:name:RepositoryDescription'</a>,
--   <a>repositoryDescription_name</a> - The name of the repository.
--   
--   <a>$sel:administratorAccount:RepositoryDescription'</a>,
--   <a>repositoryDescription_administratorAccount</a> - The 12-digit
--   account number of the AWS account that manages the repository.
--   
--   <a>$sel:externalConnections:RepositoryDescription'</a>,
--   <a>repositoryDescription_externalConnections</a> - An array of
--   external connections associated with the repository.
--   
--   <a>$sel:description:RepositoryDescription'</a>,
--   <a>repositoryDescription_description</a> - A text description of the
--   repository.
newRepositoryDescription :: RepositoryDescription

-- | Contains information about the external connection of a repository.
--   
--   <i>See:</i> <a>newRepositoryExternalConnectionInfo</a> smart
--   constructor.
data RepositoryExternalConnectionInfo
RepositoryExternalConnectionInfo' :: Maybe Text -> Maybe ExternalConnectionStatus -> Maybe PackageFormat -> RepositoryExternalConnectionInfo

-- | Create a value of <a>RepositoryExternalConnectionInfo</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalConnectionName:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_externalConnectionName</a> - The
--   name of the external connection associated with a repository.
--   
--   <a>$sel:status:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_status</a> - The status of the
--   external connection of a repository. There is one valid value,
--   <tt>Available</tt>.
--   
--   <a>$sel:packageFormat:RepositoryExternalConnectionInfo'</a>,
--   <a>repositoryExternalConnectionInfo_packageFormat</a> - The package
--   format associated with a repository's external connection. The valid
--   package formats are:
--   
--   <ul>
--   <li><tt>npm</tt>: A Node Package Manager (npm) package.</li>
--   <li><tt>pypi</tt>: A Python Package Index (PyPI) package.</li>
--   <li><tt>maven</tt>: A Maven package that contains compiled code in a
--   distributable format, such as a JAR file.</li>
--   </ul>
newRepositoryExternalConnectionInfo :: RepositoryExternalConnectionInfo

-- | Details about a repository, including its Amazon Resource Name (ARN),
--   description, and domain information. The <a>ListRepositories</a>
--   operation returns a list of <tt>RepositorySummary</tt> objects.
--   
--   <i>See:</i> <a>newRepositorySummary</a> smart constructor.
data RepositorySummary
RepositorySummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RepositorySummary

-- | Create a value of <a>RepositorySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RepositorySummary'</a>, <a>repositorySummary_arn</a> - The
--   ARN of the repository.
--   
--   <a>$sel:domainOwner:RepositorySummary'</a>,
--   <a>repositorySummary_domainOwner</a> - The 12-digit account number of
--   the AWS account that owns the domain. It does not include dashes or
--   spaces.
--   
--   <a>$sel:domainName:RepositorySummary'</a>,
--   <a>repositorySummary_domainName</a> - The name of the domain that
--   contains the repository.
--   
--   <a>$sel:name:RepositorySummary'</a>, <a>repositorySummary_name</a> -
--   The name of the repository.
--   
--   <a>$sel:administratorAccount:RepositorySummary'</a>,
--   <a>repositorySummary_administratorAccount</a> - The AWS account ID
--   that manages the repository.
--   
--   <a>$sel:description:RepositorySummary'</a>,
--   <a>repositorySummary_description</a> - The description of the
--   repository.
newRepositorySummary :: RepositorySummary

-- | An AWS CodeArtifact resource policy that contains a resource ARN,
--   document details, and a revision.
--   
--   <i>See:</i> <a>newResourcePolicy</a> smart constructor.
data ResourcePolicy
ResourcePolicy' :: Maybe Text -> Maybe Text -> Maybe Text -> ResourcePolicy

-- | Create a value of <a>ResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourcePolicy'</a>,
--   <a>resourcePolicy_resourceArn</a> - The ARN of the resource associated
--   with the resource policy
--   
--   <a>$sel:document:ResourcePolicy'</a>, <a>resourcePolicy_document</a> -
--   The resource policy formatted in JSON.
--   
--   <a>$sel:revision:ResourcePolicy'</a>, <a>resourcePolicy_revision</a> -
--   The current revision of the resource policy.
newResourcePolicy :: ResourcePolicy

-- | Contains the revision and status of a package version.
--   
--   <i>See:</i> <a>newSuccessfulPackageVersionInfo</a> smart constructor.
data SuccessfulPackageVersionInfo
SuccessfulPackageVersionInfo' :: Maybe PackageVersionStatus -> Maybe Text -> SuccessfulPackageVersionInfo

-- | Create a value of <a>SuccessfulPackageVersionInfo</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SuccessfulPackageVersionInfo'</a>,
--   <a>successfulPackageVersionInfo_status</a> - The status of a package
--   version. Valid statuses are:
--   
--   <ul>
--   <li><pre>Published</pre></li>
--   <li><pre>Unfinished</pre></li>
--   <li><pre>Unlisted</pre></li>
--   <li><pre>Archived</pre></li>
--   <li><pre>Disposed</pre></li>
--   </ul>
--   
--   <a>$sel:revision:SuccessfulPackageVersionInfo'</a>,
--   <a>successfulPackageVersionInfo_revision</a> - The revision of a
--   package version.
newSuccessfulPackageVersionInfo :: SuccessfulPackageVersionInfo

-- | A tag is a key-value pair that can be used to manage, search for, or
--   filter resources in AWS CodeArtifact.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Tag

-- | Information about an upstream repository. A list of
--   <tt>UpstreamRepository</tt> objects is an input parameter to
--   <a>CreateRepository</a> and <a>UpdateRepository</a>.
--   
--   <i>See:</i> <a>newUpstreamRepository</a> smart constructor.
data UpstreamRepository
UpstreamRepository' :: Text -> UpstreamRepository

-- | Create a value of <a>UpstreamRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpstreamRepository'</a>,
--   <a>upstreamRepository_repositoryName</a> - The name of an upstream
--   repository.
newUpstreamRepository :: Text -> UpstreamRepository

-- | Information about an upstream repository.
--   
--   <i>See:</i> <a>newUpstreamRepositoryInfo</a> smart constructor.
data UpstreamRepositoryInfo
UpstreamRepositoryInfo' :: Maybe Text -> UpstreamRepositoryInfo

-- | Create a value of <a>UpstreamRepositoryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpstreamRepositoryInfo'</a>,
--   <a>upstreamRepositoryInfo_repositoryName</a> - The name of an upstream
--   repository.
newUpstreamRepositoryInfo :: UpstreamRepositoryInfo
