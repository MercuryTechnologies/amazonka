-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-application-insightsZSamazonka-application-insights
@version 2.0


module Amazonka.ApplicationInsights.Types.ApplicationInfo

-- | Describes the status of the application.
--   
--   <i>See:</i> <a>newApplicationInfo</a> smart constructor.
data ApplicationInfo
ApplicationInfo' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> ApplicationInfo

-- | The name of the resource group used for the application.
[$sel:resourceGroupName:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
[$sel:cWEMonitorEnabled:ApplicationInfo'] :: ApplicationInfo -> Maybe Bool

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItems to receive SNS notifications for opsItem updates.
[$sel:opsItemSNSTopicArn:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The lifecycle of the application.
[$sel:lifeCycle:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | Indicates whether Application Insights will create opsItems for any
--   problem detected by Application Insights for an application.
[$sel:opsCenterEnabled:ApplicationInfo'] :: ApplicationInfo -> Maybe Bool

-- | The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
[$sel:remarks:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | Create a value of <a>ApplicationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ApplicationInfo'</a>,
--   <a>applicationInfo_resourceGroupName</a> - The name of the resource
--   group used for the application.
--   
--   <a>$sel:cWEMonitorEnabled:ApplicationInfo'</a>,
--   <a>applicationInfo_cWEMonitorEnabled</a> - Indicates whether
--   Application Insights can listen to CloudWatch events for the
--   application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
--   
--   <a>$sel:opsItemSNSTopicArn:ApplicationInfo'</a>,
--   <a>applicationInfo_opsItemSNSTopicArn</a> - The SNS topic provided to
--   Application Insights that is associated to the created opsItems to
--   receive SNS notifications for opsItem updates.
--   
--   <a>$sel:lifeCycle:ApplicationInfo'</a>,
--   <a>applicationInfo_lifeCycle</a> - The lifecycle of the application.
--   
--   <a>$sel:opsCenterEnabled:ApplicationInfo'</a>,
--   <a>applicationInfo_opsCenterEnabled</a> - Indicates whether
--   Application Insights will create opsItems for any problem detected by
--   Application Insights for an application.
--   
--   <a>$sel:remarks:ApplicationInfo'</a>, <a>applicationInfo_remarks</a> -
--   The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
newApplicationInfo :: ApplicationInfo

-- | The name of the resource group used for the application.
applicationInfo_resourceGroupName :: Lens' ApplicationInfo (Maybe Text)

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
applicationInfo_cWEMonitorEnabled :: Lens' ApplicationInfo (Maybe Bool)

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItems to receive SNS notifications for opsItem updates.
applicationInfo_opsItemSNSTopicArn :: Lens' ApplicationInfo (Maybe Text)

-- | The lifecycle of the application.
applicationInfo_lifeCycle :: Lens' ApplicationInfo (Maybe Text)

-- | Indicates whether Application Insights will create opsItems for any
--   problem detected by Application Insights for an application.
applicationInfo_opsCenterEnabled :: Lens' ApplicationInfo (Maybe Bool)

-- | The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
applicationInfo_remarks :: Lens' ApplicationInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.ApplicationInfo.ApplicationInfo
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.ApplicationInfo.ApplicationInfo
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.ApplicationInfo.ApplicationInfo
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.ApplicationInfo.ApplicationInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.ApplicationInfo.ApplicationInfo
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.ApplicationInfo.ApplicationInfo
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.ApplicationInfo.ApplicationInfo


module Amazonka.ApplicationInsights.Types.CloudWatchEventSource
newtype CloudWatchEventSource
CloudWatchEventSource' :: Text -> CloudWatchEventSource
[fromCloudWatchEventSource] :: CloudWatchEventSource -> Text
pattern CloudWatchEventSource_CODE_DEPLOY :: CloudWatchEventSource
pattern CloudWatchEventSource_EC2 :: CloudWatchEventSource
pattern CloudWatchEventSource_HEALTH :: CloudWatchEventSource
pattern CloudWatchEventSource_RDS :: CloudWatchEventSource
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.CloudWatchEventSource.CloudWatchEventSource


module Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType
newtype ConfigurationEventResourceType
ConfigurationEventResourceType' :: Text -> ConfigurationEventResourceType
[fromConfigurationEventResourceType] :: ConfigurationEventResourceType -> Text
pattern ConfigurationEventResourceType_CLOUDFORMATION :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_CLOUDWATCH_ALARM :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_CLOUDWATCH_LOG :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_SSM_ASSOCIATION :: ConfigurationEventResourceType
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.ConfigurationEventResourceType.ConfigurationEventResourceType


module Amazonka.ApplicationInsights.Types.ConfigurationEventStatus
newtype ConfigurationEventStatus
ConfigurationEventStatus' :: Text -> ConfigurationEventStatus
[fromConfigurationEventStatus] :: ConfigurationEventStatus -> Text
pattern ConfigurationEventStatus_ERROR :: ConfigurationEventStatus
pattern ConfigurationEventStatus_INFO :: ConfigurationEventStatus
pattern ConfigurationEventStatus_WARN :: ConfigurationEventStatus
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.ConfigurationEventStatus.ConfigurationEventStatus


module Amazonka.ApplicationInsights.Types.ConfigurationEvent

-- | The event information.
--   
--   <i>See:</i> <a>newConfigurationEvent</a> smart constructor.
data ConfigurationEvent
ConfigurationEvent' :: Maybe Text -> Maybe ConfigurationEventStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ConfigurationEventResourceType -> ConfigurationEvent

-- | The resource monitored by Application Insights.
[$sel:monitoredResourceARN:ConfigurationEvent'] :: ConfigurationEvent -> Maybe Text

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
[$sel:eventStatus:ConfigurationEvent'] :: ConfigurationEvent -> Maybe ConfigurationEventStatus

-- | The name of the resource Application Insights attempted to configure.
[$sel:eventResourceName:ConfigurationEvent'] :: ConfigurationEvent -> Maybe Text

-- | The timestamp of the event.
[$sel:eventTime:ConfigurationEvent'] :: ConfigurationEvent -> Maybe POSIX

-- | The details of the event in plain text.
[$sel:eventDetail:ConfigurationEvent'] :: ConfigurationEvent -> Maybe Text

-- | The resource type that Application Insights attempted to configure,
--   for example, CLOUDWATCH_ALARM.
[$sel:eventResourceType:ConfigurationEvent'] :: ConfigurationEvent -> Maybe ConfigurationEventResourceType

-- | Create a value of <a>ConfigurationEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitoredResourceARN:ConfigurationEvent'</a>,
--   <a>configurationEvent_monitoredResourceARN</a> - The resource
--   monitored by Application Insights.
--   
--   <a>$sel:eventStatus:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventStatus</a> - The status of the
--   configuration update event. Possible values include INFO, WARN, and
--   ERROR.
--   
--   <a>$sel:eventResourceName:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventResourceName</a> - The name of the resource
--   Application Insights attempted to configure.
--   
--   <a>$sel:eventTime:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventTime</a> - The timestamp of the event.
--   
--   <a>$sel:eventDetail:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventDetail</a> - The details of the event in
--   plain text.
--   
--   <a>$sel:eventResourceType:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventResourceType</a> - The resource type that
--   Application Insights attempted to configure, for example,
--   CLOUDWATCH_ALARM.
newConfigurationEvent :: ConfigurationEvent

-- | The resource monitored by Application Insights.
configurationEvent_monitoredResourceARN :: Lens' ConfigurationEvent (Maybe Text)

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
configurationEvent_eventStatus :: Lens' ConfigurationEvent (Maybe ConfigurationEventStatus)

-- | The name of the resource Application Insights attempted to configure.
configurationEvent_eventResourceName :: Lens' ConfigurationEvent (Maybe Text)

-- | The timestamp of the event.
configurationEvent_eventTime :: Lens' ConfigurationEvent (Maybe UTCTime)

-- | The details of the event in plain text.
configurationEvent_eventDetail :: Lens' ConfigurationEvent (Maybe Text)

-- | The resource type that Application Insights attempted to configure,
--   for example, CLOUDWATCH_ALARM.
configurationEvent_eventResourceType :: Lens' ConfigurationEvent (Maybe ConfigurationEventResourceType)
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.ConfigurationEvent.ConfigurationEvent
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.ConfigurationEvent.ConfigurationEvent
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.ConfigurationEvent.ConfigurationEvent
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.ConfigurationEvent.ConfigurationEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.ConfigurationEvent.ConfigurationEvent
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.ConfigurationEvent.ConfigurationEvent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.ConfigurationEvent.ConfigurationEvent


module Amazonka.ApplicationInsights.Types.FeedbackKey
newtype FeedbackKey
FeedbackKey' :: Text -> FeedbackKey
[fromFeedbackKey] :: FeedbackKey -> Text
pattern FeedbackKey_INSIGHTS_FEEDBACK :: FeedbackKey
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.FeedbackKey.FeedbackKey


module Amazonka.ApplicationInsights.Types.FeedbackValue
newtype FeedbackValue
FeedbackValue' :: Text -> FeedbackValue
[fromFeedbackValue] :: FeedbackValue -> Text
pattern FeedbackValue_NOT_SPECIFIED :: FeedbackValue
pattern FeedbackValue_NOT_USEFUL :: FeedbackValue
pattern FeedbackValue_USEFUL :: FeedbackValue
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.FeedbackValue.FeedbackValue


module Amazonka.ApplicationInsights.Types.LogFilter
newtype LogFilter
LogFilter' :: Text -> LogFilter
[fromLogFilter] :: LogFilter -> Text
pattern LogFilter_ERROR :: LogFilter
pattern LogFilter_INFO :: LogFilter
pattern LogFilter_WARN :: LogFilter
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.LogFilter.LogFilter
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.LogFilter.LogFilter


module Amazonka.ApplicationInsights.Types.LogPattern

-- | An object that defines the log patterns that belongs to a
--   <tt>LogPatternSet</tt>.
--   
--   <i>See:</i> <a>newLogPattern</a> smart constructor.
data LogPattern
LogPattern' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> LogPattern

-- | A regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
[$sel:pattern':LogPattern'] :: LogPattern -> Maybe Text

-- | The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
[$sel:patternName:LogPattern'] :: LogPattern -> Maybe Text

-- | The name of the log pattern. A log pattern name can contain as many as
--   30 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
[$sel:patternSetName:LogPattern'] :: LogPattern -> Maybe Text

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
[$sel:rank:LogPattern'] :: LogPattern -> Maybe Int

-- | Create a value of <a>LogPattern</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':LogPattern'</a>, <a>logPattern_pattern</a> - A
--   regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
--   
--   <a>$sel:patternName:LogPattern'</a>, <a>logPattern_patternName</a> -
--   The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
--   
--   <a>$sel:patternSetName:LogPattern'</a>,
--   <a>logPattern_patternSetName</a> - The name of the log pattern. A log
--   pattern name can contain as many as 30 characters, and it cannot be
--   empty. The characters can be Unicode letters, digits, or one of the
--   following symbols: period, dash, underscore.
--   
--   <a>$sel:rank:LogPattern'</a>, <a>logPattern_rank</a> - Rank of the log
--   pattern. Must be a value between <tt>1</tt> and <tt>1,000,000</tt>.
--   The patterns are sorted by rank, so we recommend that you set your
--   highest priority patterns with the lowest rank. A pattern of rank
--   <tt>1</tt> will be the first to get matched to a log line. A pattern
--   of rank <tt>1,000,000</tt> will be last to get matched. When you
--   configure custom log patterns from the console, a <tt>Low</tt>
--   severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
newLogPattern :: LogPattern

-- | A regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
logPattern_pattern :: Lens' LogPattern (Maybe Text)

-- | The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
logPattern_patternName :: Lens' LogPattern (Maybe Text)

-- | The name of the log pattern. A log pattern name can contain as many as
--   30 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
logPattern_patternSetName :: Lens' LogPattern (Maybe Text)

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
logPattern_rank :: Lens' LogPattern (Maybe Int)
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.LogPattern.LogPattern
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.LogPattern.LogPattern
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.LogPattern.LogPattern
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.LogPattern.LogPattern
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.LogPattern.LogPattern
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.LogPattern.LogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.LogPattern.LogPattern


module Amazonka.ApplicationInsights.Types.Observation

-- | Describes an anomaly or error with the application.
--   
--   <i>See:</i> <a>newObservation</a> smart constructor.
data Observation
Observation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Double -> Maybe Text -> Maybe CloudWatchEventSource -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LogFilter -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Observation

-- | The CodeDeploy application to which the deployment belongs.
[$sel:codeDeployApplication:Observation'] :: Observation -> Maybe Text

-- | The message of an RDS event.
[$sel:rdsEventMessage:Observation'] :: Observation -> Maybe Text

-- | The deployment ID of the CodeDeploy-based observation related to the
--   detected problem.
[$sel:codeDeployDeploymentId:Observation'] :: Observation -> Maybe Text

-- | The time when the observation was first detected, in epoch seconds.
[$sel:startTime:Observation'] :: Observation -> Maybe POSIX

-- | The source type of the observation.
[$sel:sourceType:Observation'] :: Observation -> Maybe Text

-- | The source resource ARN of the observation.
[$sel:sourceARN:Observation'] :: Observation -> Maybe Text

-- | The X-Ray node request average latency for this node.
[$sel:xRayRequestAverageLatency:Observation'] :: Observation -> Maybe Integer

-- | The status of the step function-related observation.
[$sel:statesStatus:Observation'] :: Observation -> Maybe Text

-- | The deployment group to which the CodeDeploy deployment belongs.
[$sel:codeDeployDeploymentGroup:Observation'] :: Observation -> Maybe Text

-- | The category of the AWS Health event, such as <tt>issue</tt>.
[$sel:healthEventTypeCategory:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request count for this node.
[$sel:xRayRequestCount:Observation'] :: Observation -> Maybe Int

-- | The name of the S3 CloudWatch Event-based observation.
[$sel:s3EventName:Observation'] :: Observation -> Maybe Text

-- | The name of the observation metric.
[$sel:metricName:Observation'] :: Observation -> Maybe Text

-- | The state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
[$sel:ec2State:Observation'] :: Observation -> Maybe Text

-- | The log group name.
[$sel:logGroup:Observation'] :: Observation -> Maybe Text

-- | The value of the source observation metric.
[$sel:value:Observation'] :: Observation -> Maybe Double

-- | The description of the AWS Health event provided by the service, such
--   as Amazon EC2.
[$sel:healthEventDescription:Observation'] :: Observation -> Maybe Text

-- | The source of the CloudWatch Event.
[$sel:cloudWatchEventSource:Observation'] :: Observation -> Maybe CloudWatchEventSource

-- | The status of the CodeDeploy deployment, for example <tt>SUCCESS</tt>
--   or <tt> FAILURE</tt>.
[$sel:codeDeployState:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request error percentage for this node.
[$sel:xRayErrorPercent:Observation'] :: Observation -> Maybe Int

-- | The Amazon Resource Name (ARN) of the step function-based observation.
[$sel:statesArn:Observation'] :: Observation -> Maybe Text

-- | The ID of the CloudWatch Event-based observation related to the
--   detected problem.
[$sel:cloudWatchEventId:Observation'] :: Observation -> Maybe Text

-- | The log text of the observation.
[$sel:logText:Observation'] :: Observation -> Maybe Text

-- | The log filter of the observation.
[$sel:logFilter:Observation'] :: Observation -> Maybe LogFilter

-- | The namespace of the observation metric.
[$sel:metricNamespace:Observation'] :: Observation -> Maybe Text

-- | The category of an RDS event.
[$sel:rdsEventCategories:Observation'] :: Observation -> Maybe Text

-- | The type of the X-Ray node.
[$sel:xRayNodeType:Observation'] :: Observation -> Maybe Text

-- | The time when the observation ended, in epoch seconds.
[$sel:endTime:Observation'] :: Observation -> Maybe POSIX

-- | The input to the step function-based observation.
[$sel:statesInput:Observation'] :: Observation -> Maybe Text

-- | The name of the X-Ray node.
[$sel:xRayNodeName:Observation'] :: Observation -> Maybe Text

-- | The ID of the observation type.
[$sel:id:Observation'] :: Observation -> Maybe Text

-- | The Amazon Resource Name (ARN) of the AWS Health Event-based
--   observation.
[$sel:healthEventArn:Observation'] :: Observation -> Maybe Text

-- | The type of the AWS Health event, for example,
--   <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
[$sel:healthEventTypeCode:Observation'] :: Observation -> Maybe Text

-- | The result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
[$sel:ebsResult:Observation'] :: Observation -> Maybe Text

-- | The detail type of the CloudWatch Event-based observation, for
--   example, <tt>EC2 Instance State-change Notification</tt>.
[$sel:cloudWatchEventDetailType:Observation'] :: Observation -> Maybe Text

-- | The instance group to which the CodeDeploy instance belongs.
[$sel:codeDeployInstanceGroupId:Observation'] :: Observation -> Maybe Text

-- | The cause of an EBS CloudWatch event.
[$sel:ebsCause:Observation'] :: Observation -> Maybe Text

-- | The type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
[$sel:ebsEvent:Observation'] :: Observation -> Maybe Text

-- | The request ID of an EBS CloudWatch event.
[$sel:ebsRequestId:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request fault percentage for this node.
[$sel:xRayFaultPercent:Observation'] :: Observation -> Maybe Int

-- | The Amazon Resource Name (ARN) of the step function execution-based
--   observation.
[$sel:statesExecutionArn:Observation'] :: Observation -> Maybe Text

-- | The timestamp in the CloudWatch Logs that specifies when the matched
--   line occurred.
[$sel:lineTime:Observation'] :: Observation -> Maybe POSIX

-- | The unit of the source observation metric.
[$sel:unit:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request throttle percentage for this node.
[$sel:xRayThrottlePercent:Observation'] :: Observation -> Maybe Int

-- | The service to which the AWS Health Event belongs, such as EC2.
[$sel:healthService:Observation'] :: Observation -> Maybe Text

-- | Create a value of <a>Observation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeployApplication:Observation'</a>,
--   <a>observation_codeDeployApplication</a> - The CodeDeploy application
--   to which the deployment belongs.
--   
--   <a>$sel:rdsEventMessage:Observation'</a>,
--   <a>observation_rdsEventMessage</a> - The message of an RDS event.
--   
--   <a>$sel:codeDeployDeploymentId:Observation'</a>,
--   <a>observation_codeDeployDeploymentId</a> - The deployment ID of the
--   CodeDeploy-based observation related to the detected problem.
--   
--   <a>$sel:startTime:Observation'</a>, <a>observation_startTime</a> - The
--   time when the observation was first detected, in epoch seconds.
--   
--   <a>$sel:sourceType:Observation'</a>, <a>observation_sourceType</a> -
--   The source type of the observation.
--   
--   <a>$sel:sourceARN:Observation'</a>, <a>observation_sourceARN</a> - The
--   source resource ARN of the observation.
--   
--   <a>$sel:xRayRequestAverageLatency:Observation'</a>,
--   <a>observation_xRayRequestAverageLatency</a> - The X-Ray node request
--   average latency for this node.
--   
--   <a>$sel:statesStatus:Observation'</a>, <a>observation_statesStatus</a>
--   - The status of the step function-related observation.
--   
--   <a>$sel:codeDeployDeploymentGroup:Observation'</a>,
--   <a>observation_codeDeployDeploymentGroup</a> - The deployment group to
--   which the CodeDeploy deployment belongs.
--   
--   <a>$sel:healthEventTypeCategory:Observation'</a>,
--   <a>observation_healthEventTypeCategory</a> - The category of the AWS
--   Health event, such as <tt>issue</tt>.
--   
--   <a>$sel:xRayRequestCount:Observation'</a>,
--   <a>observation_xRayRequestCount</a> - The X-Ray request count for this
--   node.
--   
--   <a>$sel:s3EventName:Observation'</a>, <a>observation_s3EventName</a> -
--   The name of the S3 CloudWatch Event-based observation.
--   
--   <a>$sel:metricName:Observation'</a>, <a>observation_metricName</a> -
--   The name of the observation metric.
--   
--   <a>$sel:ec2State:Observation'</a>, <a>observation_ec2State</a> - The
--   state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
--   
--   <a>$sel:logGroup:Observation'</a>, <a>observation_logGroup</a> - The
--   log group name.
--   
--   <a>$sel:value:Observation'</a>, <a>observation_value</a> - The value
--   of the source observation metric.
--   
--   <a>$sel:healthEventDescription:Observation'</a>,
--   <a>observation_healthEventDescription</a> - The description of the AWS
--   Health event provided by the service, such as Amazon EC2.
--   
--   <a>$sel:cloudWatchEventSource:Observation'</a>,
--   <a>observation_cloudWatchEventSource</a> - The source of the
--   CloudWatch Event.
--   
--   <a>$sel:codeDeployState:Observation'</a>,
--   <a>observation_codeDeployState</a> - The status of the CodeDeploy
--   deployment, for example <tt>SUCCESS</tt> or <tt> FAILURE</tt>.
--   
--   <a>$sel:xRayErrorPercent:Observation'</a>,
--   <a>observation_xRayErrorPercent</a> - The X-Ray request error
--   percentage for this node.
--   
--   <a>$sel:statesArn:Observation'</a>, <a>observation_statesArn</a> - The
--   Amazon Resource Name (ARN) of the step function-based observation.
--   
--   <a>$sel:cloudWatchEventId:Observation'</a>,
--   <a>observation_cloudWatchEventId</a> - The ID of the CloudWatch
--   Event-based observation related to the detected problem.
--   
--   <a>$sel:logText:Observation'</a>, <a>observation_logText</a> - The log
--   text of the observation.
--   
--   <a>$sel:logFilter:Observation'</a>, <a>observation_logFilter</a> - The
--   log filter of the observation.
--   
--   <a>$sel:metricNamespace:Observation'</a>,
--   <a>observation_metricNamespace</a> - The namespace of the observation
--   metric.
--   
--   <a>$sel:rdsEventCategories:Observation'</a>,
--   <a>observation_rdsEventCategories</a> - The category of an RDS event.
--   
--   <a>$sel:xRayNodeType:Observation'</a>, <a>observation_xRayNodeType</a>
--   - The type of the X-Ray node.
--   
--   <a>$sel:endTime:Observation'</a>, <a>observation_endTime</a> - The
--   time when the observation ended, in epoch seconds.
--   
--   <a>$sel:statesInput:Observation'</a>, <a>observation_statesInput</a> -
--   The input to the step function-based observation.
--   
--   <a>$sel:xRayNodeName:Observation'</a>, <a>observation_xRayNodeName</a>
--   - The name of the X-Ray node.
--   
--   <a>$sel:id:Observation'</a>, <a>observation_id</a> - The ID of the
--   observation type.
--   
--   <a>$sel:healthEventArn:Observation'</a>,
--   <a>observation_healthEventArn</a> - The Amazon Resource Name (ARN) of
--   the AWS Health Event-based observation.
--   
--   <a>$sel:healthEventTypeCode:Observation'</a>,
--   <a>observation_healthEventTypeCode</a> - The type of the AWS Health
--   event, for example, <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
--   
--   <a>$sel:ebsResult:Observation'</a>, <a>observation_ebsResult</a> - The
--   result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
--   
--   <a>$sel:cloudWatchEventDetailType:Observation'</a>,
--   <a>observation_cloudWatchEventDetailType</a> - The detail type of the
--   CloudWatch Event-based observation, for example, <tt>EC2 Instance
--   State-change Notification</tt>.
--   
--   <a>$sel:codeDeployInstanceGroupId:Observation'</a>,
--   <a>observation_codeDeployInstanceGroupId</a> - The instance group to
--   which the CodeDeploy instance belongs.
--   
--   <a>$sel:ebsCause:Observation'</a>, <a>observation_ebsCause</a> - The
--   cause of an EBS CloudWatch event.
--   
--   <a>$sel:ebsEvent:Observation'</a>, <a>observation_ebsEvent</a> - The
--   type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
--   
--   <a>$sel:ebsRequestId:Observation'</a>, <a>observation_ebsRequestId</a>
--   - The request ID of an EBS CloudWatch event.
--   
--   <a>$sel:xRayFaultPercent:Observation'</a>,
--   <a>observation_xRayFaultPercent</a> - The X-Ray request fault
--   percentage for this node.
--   
--   <a>$sel:statesExecutionArn:Observation'</a>,
--   <a>observation_statesExecutionArn</a> - The Amazon Resource Name (ARN)
--   of the step function execution-based observation.
--   
--   <a>$sel:lineTime:Observation'</a>, <a>observation_lineTime</a> - The
--   timestamp in the CloudWatch Logs that specifies when the matched line
--   occurred.
--   
--   <a>$sel:unit:Observation'</a>, <a>observation_unit</a> - The unit of
--   the source observation metric.
--   
--   <a>$sel:xRayThrottlePercent:Observation'</a>,
--   <a>observation_xRayThrottlePercent</a> - The X-Ray request throttle
--   percentage for this node.
--   
--   <a>$sel:healthService:Observation'</a>,
--   <a>observation_healthService</a> - The service to which the AWS Health
--   Event belongs, such as EC2.
newObservation :: Observation

-- | The CodeDeploy application to which the deployment belongs.
observation_codeDeployApplication :: Lens' Observation (Maybe Text)

-- | The message of an RDS event.
observation_rdsEventMessage :: Lens' Observation (Maybe Text)

-- | The deployment ID of the CodeDeploy-based observation related to the
--   detected problem.
observation_codeDeployDeploymentId :: Lens' Observation (Maybe Text)

-- | The time when the observation was first detected, in epoch seconds.
observation_startTime :: Lens' Observation (Maybe UTCTime)

-- | The source type of the observation.
observation_sourceType :: Lens' Observation (Maybe Text)

-- | The source resource ARN of the observation.
observation_sourceARN :: Lens' Observation (Maybe Text)

-- | The X-Ray node request average latency for this node.
observation_xRayRequestAverageLatency :: Lens' Observation (Maybe Integer)

-- | The status of the step function-related observation.
observation_statesStatus :: Lens' Observation (Maybe Text)

-- | The deployment group to which the CodeDeploy deployment belongs.
observation_codeDeployDeploymentGroup :: Lens' Observation (Maybe Text)

-- | The category of the AWS Health event, such as <tt>issue</tt>.
observation_healthEventTypeCategory :: Lens' Observation (Maybe Text)

-- | The X-Ray request count for this node.
observation_xRayRequestCount :: Lens' Observation (Maybe Int)

-- | The name of the S3 CloudWatch Event-based observation.
observation_s3EventName :: Lens' Observation (Maybe Text)

-- | The name of the observation metric.
observation_metricName :: Lens' Observation (Maybe Text)

-- | The state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
observation_ec2State :: Lens' Observation (Maybe Text)

-- | The log group name.
observation_logGroup :: Lens' Observation (Maybe Text)

-- | The value of the source observation metric.
observation_value :: Lens' Observation (Maybe Double)

-- | The description of the AWS Health event provided by the service, such
--   as Amazon EC2.
observation_healthEventDescription :: Lens' Observation (Maybe Text)

-- | The source of the CloudWatch Event.
observation_cloudWatchEventSource :: Lens' Observation (Maybe CloudWatchEventSource)

-- | The status of the CodeDeploy deployment, for example <tt>SUCCESS</tt>
--   or <tt> FAILURE</tt>.
observation_codeDeployState :: Lens' Observation (Maybe Text)

-- | The X-Ray request error percentage for this node.
observation_xRayErrorPercent :: Lens' Observation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the step function-based observation.
observation_statesArn :: Lens' Observation (Maybe Text)

-- | The ID of the CloudWatch Event-based observation related to the
--   detected problem.
observation_cloudWatchEventId :: Lens' Observation (Maybe Text)

-- | The log text of the observation.
observation_logText :: Lens' Observation (Maybe Text)

-- | The log filter of the observation.
observation_logFilter :: Lens' Observation (Maybe LogFilter)

-- | The namespace of the observation metric.
observation_metricNamespace :: Lens' Observation (Maybe Text)

-- | The category of an RDS event.
observation_rdsEventCategories :: Lens' Observation (Maybe Text)

-- | The type of the X-Ray node.
observation_xRayNodeType :: Lens' Observation (Maybe Text)

-- | The time when the observation ended, in epoch seconds.
observation_endTime :: Lens' Observation (Maybe UTCTime)

-- | The input to the step function-based observation.
observation_statesInput :: Lens' Observation (Maybe Text)

-- | The name of the X-Ray node.
observation_xRayNodeName :: Lens' Observation (Maybe Text)

-- | The ID of the observation type.
observation_id :: Lens' Observation (Maybe Text)

-- | The Amazon Resource Name (ARN) of the AWS Health Event-based
--   observation.
observation_healthEventArn :: Lens' Observation (Maybe Text)

-- | The type of the AWS Health event, for example,
--   <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
observation_healthEventTypeCode :: Lens' Observation (Maybe Text)

-- | The result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
observation_ebsResult :: Lens' Observation (Maybe Text)

-- | The detail type of the CloudWatch Event-based observation, for
--   example, <tt>EC2 Instance State-change Notification</tt>.
observation_cloudWatchEventDetailType :: Lens' Observation (Maybe Text)

-- | The instance group to which the CodeDeploy instance belongs.
observation_codeDeployInstanceGroupId :: Lens' Observation (Maybe Text)

-- | The cause of an EBS CloudWatch event.
observation_ebsCause :: Lens' Observation (Maybe Text)

-- | The type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
observation_ebsEvent :: Lens' Observation (Maybe Text)

-- | The request ID of an EBS CloudWatch event.
observation_ebsRequestId :: Lens' Observation (Maybe Text)

-- | The X-Ray request fault percentage for this node.
observation_xRayFaultPercent :: Lens' Observation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the step function execution-based
--   observation.
observation_statesExecutionArn :: Lens' Observation (Maybe Text)

-- | The timestamp in the CloudWatch Logs that specifies when the matched
--   line occurred.
observation_lineTime :: Lens' Observation (Maybe UTCTime)

-- | The unit of the source observation metric.
observation_unit :: Lens' Observation (Maybe Text)

-- | The X-Ray request throttle percentage for this node.
observation_xRayThrottlePercent :: Lens' Observation (Maybe Int)

-- | The service to which the AWS Health Event belongs, such as EC2.
observation_healthService :: Lens' Observation (Maybe Text)
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.Observation.Observation
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.Observation.Observation
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.Observation.Observation
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.Observation.Observation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.Observation.Observation
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.Observation.Observation
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.Observation.Observation


module Amazonka.ApplicationInsights.Types.OsType
newtype OsType
OsType' :: Text -> OsType
[fromOsType] :: OsType -> Text
pattern OsType_LINUX :: OsType
pattern OsType_WINDOWS :: OsType
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.OsType.OsType
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.OsType.OsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.OsType.OsType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.OsType.OsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.OsType.OsType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.OsType.OsType
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.OsType.OsType
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.OsType.OsType
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.OsType.OsType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.OsType.OsType
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.OsType.OsType
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.OsType.OsType
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.OsType.OsType
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.OsType.OsType
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.OsType.OsType
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.OsType.OsType
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.OsType.OsType
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.OsType.OsType
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.OsType.OsType


module Amazonka.ApplicationInsights.Types.RelatedObservations

-- | Describes observations related to the problem.
--   
--   <i>See:</i> <a>newRelatedObservations</a> smart constructor.
data RelatedObservations
RelatedObservations' :: Maybe [Observation] -> RelatedObservations

-- | The list of observations related to the problem.
[$sel:observationList:RelatedObservations'] :: RelatedObservations -> Maybe [Observation]

-- | Create a value of <a>RelatedObservations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:observationList:RelatedObservations'</a>,
--   <a>relatedObservations_observationList</a> - The list of observations
--   related to the problem.
newRelatedObservations :: RelatedObservations

-- | The list of observations related to the problem.
relatedObservations_observationList :: Lens' RelatedObservations (Maybe [Observation])
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.RelatedObservations.RelatedObservations
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.RelatedObservations.RelatedObservations
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.RelatedObservations.RelatedObservations
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.RelatedObservations.RelatedObservations
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.RelatedObservations.RelatedObservations
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.RelatedObservations.RelatedObservations
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.RelatedObservations.RelatedObservations


module Amazonka.ApplicationInsights.Types.SeverityLevel
newtype SeverityLevel
SeverityLevel' :: Text -> SeverityLevel
[fromSeverityLevel] :: SeverityLevel -> Text
pattern SeverityLevel_High :: SeverityLevel
pattern SeverityLevel_Low :: SeverityLevel
pattern SeverityLevel_Medium :: SeverityLevel
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.SeverityLevel.SeverityLevel


module Amazonka.ApplicationInsights.Types.Status
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_IGNORE :: Status
pattern Status_PENDING :: Status
pattern Status_RESOLVED :: Status
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.Status.Status
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.Status.Status
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.Status.Status
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.Status.Status
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.Status.Status
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.Status.Status
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.Status.Status
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.Status.Status
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.Status.Status
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.Status.Status
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.Status.Status
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.Status.Status
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.Status.Status
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.Status.Status
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.Status.Status


module Amazonka.ApplicationInsights.Types.Problem

-- | Describes a problem that is detected by correlating observations.
--   
--   <i>See:</i> <a>newProblem</a> smart constructor.
data Problem
Problem' :: Maybe Status -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe SeverityLevel -> Maybe Text -> Maybe Text -> Maybe (HashMap FeedbackKey FeedbackValue) -> Problem

-- | The status of the problem.
[$sel:status:Problem'] :: Problem -> Maybe Status

-- | The name of the resource group affected by the problem.
[$sel:resourceGroupName:Problem'] :: Problem -> Maybe Text

-- | The time when the problem started, in epoch seconds.
[$sel:startTime:Problem'] :: Problem -> Maybe POSIX

-- | A detailed analysis of the problem using machine learning.
[$sel:insights:Problem'] :: Problem -> Maybe Text

-- | The time when the problem ended, in epoch seconds.
[$sel:endTime:Problem'] :: Problem -> Maybe POSIX

-- | The ID of the problem.
[$sel:id:Problem'] :: Problem -> Maybe Text

-- | A measure of the level of impact of the problem.
[$sel:severityLevel:Problem'] :: Problem -> Maybe SeverityLevel

-- | The name of the problem.
[$sel:title:Problem'] :: Problem -> Maybe Text

-- | The resource affected by the problem.
[$sel:affectedResource:Problem'] :: Problem -> Maybe Text

-- | Feedback provided by the user about the problem.
[$sel:feedback:Problem'] :: Problem -> Maybe (HashMap FeedbackKey FeedbackValue)

-- | Create a value of <a>Problem</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Problem'</a>, <a>problem_status</a> - The status of the
--   problem.
--   
--   <a>$sel:resourceGroupName:Problem'</a>,
--   <a>problem_resourceGroupName</a> - The name of the resource group
--   affected by the problem.
--   
--   <a>$sel:startTime:Problem'</a>, <a>problem_startTime</a> - The time
--   when the problem started, in epoch seconds.
--   
--   <a>$sel:insights:Problem'</a>, <a>problem_insights</a> - A detailed
--   analysis of the problem using machine learning.
--   
--   <a>$sel:endTime:Problem'</a>, <a>problem_endTime</a> - The time when
--   the problem ended, in epoch seconds.
--   
--   <a>$sel:id:Problem'</a>, <a>problem_id</a> - The ID of the problem.
--   
--   <a>$sel:severityLevel:Problem'</a>, <a>problem_severityLevel</a> - A
--   measure of the level of impact of the problem.
--   
--   <a>$sel:title:Problem'</a>, <a>problem_title</a> - The name of the
--   problem.
--   
--   <a>$sel:affectedResource:Problem'</a>, <a>problem_affectedResource</a>
--   - The resource affected by the problem.
--   
--   <a>$sel:feedback:Problem'</a>, <a>problem_feedback</a> - Feedback
--   provided by the user about the problem.
newProblem :: Problem

-- | The status of the problem.
problem_status :: Lens' Problem (Maybe Status)

-- | The name of the resource group affected by the problem.
problem_resourceGroupName :: Lens' Problem (Maybe Text)

-- | The time when the problem started, in epoch seconds.
problem_startTime :: Lens' Problem (Maybe UTCTime)

-- | A detailed analysis of the problem using machine learning.
problem_insights :: Lens' Problem (Maybe Text)

-- | The time when the problem ended, in epoch seconds.
problem_endTime :: Lens' Problem (Maybe UTCTime)

-- | The ID of the problem.
problem_id :: Lens' Problem (Maybe Text)

-- | A measure of the level of impact of the problem.
problem_severityLevel :: Lens' Problem (Maybe SeverityLevel)

-- | The name of the problem.
problem_title :: Lens' Problem (Maybe Text)

-- | The resource affected by the problem.
problem_affectedResource :: Lens' Problem (Maybe Text)

-- | Feedback provided by the user about the problem.
problem_feedback :: Lens' Problem (Maybe (HashMap FeedbackKey FeedbackValue))
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.Problem.Problem
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.Problem.Problem
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.Problem.Problem
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.Problem.Problem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.Problem.Problem
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.Problem.Problem
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.Problem.Problem


module Amazonka.ApplicationInsights.Types.Tag

-- | An object that defines the tags associated with an application. A
--   <i>tag</i> is a label that you optionally define and associate with an
--   application. Tags can help you categorize and manage resources in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
--   
--   Each tag consists of a required <i>tag key</i> and an associated
--   <i>tag value</i>, both of which you define. A tag key is a general
--   label that acts as a category for a more specific tag value. A tag
--   value acts as a descriptor within a tag key. A tag key can contain as
--   many as 128 characters. A tag value can contain as many as 256
--   characters. The characters can be Unicode letters, digits, white
--   space, or one of the following symbols: _ . : / = + -. The following
--   additional restrictions apply to tags:
--   
--   <ul>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>For each associated resource, each tag key must be unique and it
--   can have only one value.</li>
--   <li>The <tt>aws:</tt> prefix is reserved for use by AWS; you can’t use
--   it in any tag keys or values that you define. In addition, you can't
--   edit or remove tag keys or values that use this prefix.</li>
--   </ul>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | One part of a key-value pair that defines a tag. The maximum length of
--   a tag key is 128 characters. The minimum length is 1 character.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional part of a key-value pair that defines a tag. The maximum
--   length of a tag value is 256 characters. The minimum length is 0
--   characters. If you don't want an application to have a specific tag
--   value, don't specify a value for this parameter.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that defines a tag. The maximum length of a tag key is 128 characters.
--   The minimum length is 1 character.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that defines a tag. The maximum length of a tag value
--   is 256 characters. The minimum length is 0 characters. If you don't
--   want an application to have a specific tag value, don't specify a
--   value for this parameter.
newTag :: Text -> Text -> Tag

-- | One part of a key-value pair that defines a tag. The maximum length of
--   a tag key is 128 characters. The minimum length is 1 character.
tag_key :: Lens' Tag Text

-- | The optional part of a key-value pair that defines a tag. The maximum
--   length of a tag value is 256 characters. The minimum length is 0
--   characters. If you don't want an application to have a specific tag
--   value, don't specify a value for this parameter.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.Tag.Tag
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.Tag.Tag
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.Tag.Tag


module Amazonka.ApplicationInsights.Types.Tier
newtype Tier
Tier' :: Text -> Tier
[fromTier] :: Tier -> Text
pattern Tier_CUSTOM :: Tier
pattern Tier_DEFAULT :: Tier
pattern Tier_DOT_NET_CORE :: Tier
pattern Tier_DOT_NET_WEB :: Tier
pattern Tier_DOT_NET_WEB_TIER :: Tier
pattern Tier_DOT_NET_WORKER :: Tier
pattern Tier_JAVA_JMX :: Tier
pattern Tier_MYSQL :: Tier
pattern Tier_ORACLE :: Tier
pattern Tier_POSTGRESQL :: Tier
pattern Tier_SQL_SERVER :: Tier
pattern Tier_SQL_SERVER_ALWAYSON_AVAILABILITY_GROUP :: Tier
instance Amazonka.Data.XML.ToXML Amazonka.ApplicationInsights.Types.Tier.Tier
instance Amazonka.Data.XML.FromXML Amazonka.ApplicationInsights.Types.Tier.Tier
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ApplicationInsights.Types.Tier.Tier
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.Types.Tier.Tier
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ApplicationInsights.Types.Tier.Tier
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.Tier.Tier
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.Types.Tier.Tier
instance Amazonka.Data.Headers.ToHeader Amazonka.ApplicationInsights.Types.Tier.Tier
instance Amazonka.Data.Log.ToLog Amazonka.ApplicationInsights.Types.Tier.Tier
instance Amazonka.Data.ByteString.ToByteString Amazonka.ApplicationInsights.Types.Tier.Tier
instance Amazonka.Data.Text.ToText Amazonka.ApplicationInsights.Types.Tier.Tier
instance Amazonka.Data.Text.FromText Amazonka.ApplicationInsights.Types.Tier.Tier
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.Tier.Tier
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.Tier.Tier
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.Tier.Tier
instance GHC.Classes.Ord Amazonka.ApplicationInsights.Types.Tier.Tier
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.Tier.Tier
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.Tier.Tier
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.Tier.Tier


module Amazonka.ApplicationInsights.Types.ApplicationComponent

-- | Describes a standalone resource or similarly grouped resources that
--   the application is made up of.
--   
--   <i>See:</i> <a>newApplicationComponent</a> smart constructor.
data ApplicationComponent
ApplicationComponent' :: Maybe OsType -> Maybe Text -> Maybe (HashMap Tier (HashMap Text Text)) -> Maybe Bool -> Maybe Tier -> Maybe Text -> Maybe Text -> ApplicationComponent

-- | The operating system of the component.
[$sel:osType:ApplicationComponent'] :: ApplicationComponent -> Maybe OsType

-- | The resource type. Supported resource types include EC2 instances,
--   Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.
[$sel:resourceType:ApplicationComponent'] :: ApplicationComponent -> Maybe Text

-- | Workloads detected in the application component.
[$sel:detectedWorkload:ApplicationComponent'] :: ApplicationComponent -> Maybe (HashMap Tier (HashMap Text Text))

-- | Indicates whether the application component is monitored.
[$sel:monitor:ApplicationComponent'] :: ApplicationComponent -> Maybe Bool

-- | The stack tier of the application component.
[$sel:tier:ApplicationComponent'] :: ApplicationComponent -> Maybe Tier

-- | The name of the component.
[$sel:componentName:ApplicationComponent'] :: ApplicationComponent -> Maybe Text

-- | If logging is supported for the resource type, indicates whether the
--   component has configured logs to be monitored.
[$sel:componentRemarks:ApplicationComponent'] :: ApplicationComponent -> Maybe Text

-- | Create a value of <a>ApplicationComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:osType:ApplicationComponent'</a>,
--   <a>applicationComponent_osType</a> - The operating system of the
--   component.
--   
--   <a>$sel:resourceType:ApplicationComponent'</a>,
--   <a>applicationComponent_resourceType</a> - The resource type.
--   Supported resource types include EC2 instances, Auto Scaling group,
--   Classic ELB, Application ELB, and SQS Queue.
--   
--   <a>$sel:detectedWorkload:ApplicationComponent'</a>,
--   <a>applicationComponent_detectedWorkload</a> - Workloads detected in
--   the application component.
--   
--   <a>$sel:monitor:ApplicationComponent'</a>,
--   <a>applicationComponent_monitor</a> - Indicates whether the
--   application component is monitored.
--   
--   <a>$sel:tier:ApplicationComponent'</a>,
--   <a>applicationComponent_tier</a> - The stack tier of the application
--   component.
--   
--   <a>$sel:componentName:ApplicationComponent'</a>,
--   <a>applicationComponent_componentName</a> - The name of the component.
--   
--   <a>$sel:componentRemarks:ApplicationComponent'</a>,
--   <a>applicationComponent_componentRemarks</a> - If logging is supported
--   for the resource type, indicates whether the component has configured
--   logs to be monitored.
newApplicationComponent :: ApplicationComponent

-- | The operating system of the component.
applicationComponent_osType :: Lens' ApplicationComponent (Maybe OsType)

-- | The resource type. Supported resource types include EC2 instances,
--   Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.
applicationComponent_resourceType :: Lens' ApplicationComponent (Maybe Text)

-- | Workloads detected in the application component.
applicationComponent_detectedWorkload :: Lens' ApplicationComponent (Maybe (HashMap Tier (HashMap Text Text)))

-- | Indicates whether the application component is monitored.
applicationComponent_monitor :: Lens' ApplicationComponent (Maybe Bool)

-- | The stack tier of the application component.
applicationComponent_tier :: Lens' ApplicationComponent (Maybe Tier)

-- | The name of the component.
applicationComponent_componentName :: Lens' ApplicationComponent (Maybe Text)

-- | If logging is supported for the resource type, indicates whether the
--   component has configured logs to be monitored.
applicationComponent_componentRemarks :: Lens' ApplicationComponent (Maybe Text)
instance GHC.Generics.Generic Amazonka.ApplicationInsights.Types.ApplicationComponent.ApplicationComponent
instance GHC.Show.Show Amazonka.ApplicationInsights.Types.ApplicationComponent.ApplicationComponent
instance GHC.Read.Read Amazonka.ApplicationInsights.Types.ApplicationComponent.ApplicationComponent
instance GHC.Classes.Eq Amazonka.ApplicationInsights.Types.ApplicationComponent.ApplicationComponent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ApplicationInsights.Types.ApplicationComponent.ApplicationComponent
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.Types.ApplicationComponent.ApplicationComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.Types.ApplicationComponent.ApplicationComponent


module Amazonka.ApplicationInsights.Types

-- | API version <tt>2018-11-25</tt> of the Amazon CloudWatch Application
--   Insights SDK configuration.
defaultService :: Service

-- | The parameter is not valid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | User does not have permissions to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Tags are already registered for the specified application ARN.
_TagsAlreadyExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of the provided tags is beyond the limit, or the number of
--   total tags you are trying to attach to the specified resource exceeds
--   the limit.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The server encountered an internal error and is unable to complete the
--   request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource does not exist in the customer account.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is not understood by the server.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is already created or in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype CloudWatchEventSource
CloudWatchEventSource' :: Text -> CloudWatchEventSource
[fromCloudWatchEventSource] :: CloudWatchEventSource -> Text
pattern CloudWatchEventSource_CODE_DEPLOY :: CloudWatchEventSource
pattern CloudWatchEventSource_EC2 :: CloudWatchEventSource
pattern CloudWatchEventSource_HEALTH :: CloudWatchEventSource
pattern CloudWatchEventSource_RDS :: CloudWatchEventSource
newtype ConfigurationEventResourceType
ConfigurationEventResourceType' :: Text -> ConfigurationEventResourceType
[fromConfigurationEventResourceType] :: ConfigurationEventResourceType -> Text
pattern ConfigurationEventResourceType_CLOUDFORMATION :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_CLOUDWATCH_ALARM :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_CLOUDWATCH_LOG :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_SSM_ASSOCIATION :: ConfigurationEventResourceType
newtype ConfigurationEventStatus
ConfigurationEventStatus' :: Text -> ConfigurationEventStatus
[fromConfigurationEventStatus] :: ConfigurationEventStatus -> Text
pattern ConfigurationEventStatus_ERROR :: ConfigurationEventStatus
pattern ConfigurationEventStatus_INFO :: ConfigurationEventStatus
pattern ConfigurationEventStatus_WARN :: ConfigurationEventStatus
newtype FeedbackKey
FeedbackKey' :: Text -> FeedbackKey
[fromFeedbackKey] :: FeedbackKey -> Text
pattern FeedbackKey_INSIGHTS_FEEDBACK :: FeedbackKey
newtype FeedbackValue
FeedbackValue' :: Text -> FeedbackValue
[fromFeedbackValue] :: FeedbackValue -> Text
pattern FeedbackValue_NOT_SPECIFIED :: FeedbackValue
pattern FeedbackValue_NOT_USEFUL :: FeedbackValue
pattern FeedbackValue_USEFUL :: FeedbackValue
newtype LogFilter
LogFilter' :: Text -> LogFilter
[fromLogFilter] :: LogFilter -> Text
pattern LogFilter_ERROR :: LogFilter
pattern LogFilter_INFO :: LogFilter
pattern LogFilter_WARN :: LogFilter
newtype OsType
OsType' :: Text -> OsType
[fromOsType] :: OsType -> Text
pattern OsType_LINUX :: OsType
pattern OsType_WINDOWS :: OsType
newtype SeverityLevel
SeverityLevel' :: Text -> SeverityLevel
[fromSeverityLevel] :: SeverityLevel -> Text
pattern SeverityLevel_High :: SeverityLevel
pattern SeverityLevel_Low :: SeverityLevel
pattern SeverityLevel_Medium :: SeverityLevel
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_IGNORE :: Status
pattern Status_PENDING :: Status
pattern Status_RESOLVED :: Status
newtype Tier
Tier' :: Text -> Tier
[fromTier] :: Tier -> Text
pattern Tier_CUSTOM :: Tier
pattern Tier_DEFAULT :: Tier
pattern Tier_DOT_NET_CORE :: Tier
pattern Tier_DOT_NET_WEB :: Tier
pattern Tier_DOT_NET_WEB_TIER :: Tier
pattern Tier_DOT_NET_WORKER :: Tier
pattern Tier_JAVA_JMX :: Tier
pattern Tier_MYSQL :: Tier
pattern Tier_ORACLE :: Tier
pattern Tier_POSTGRESQL :: Tier
pattern Tier_SQL_SERVER :: Tier
pattern Tier_SQL_SERVER_ALWAYSON_AVAILABILITY_GROUP :: Tier

-- | Describes a standalone resource or similarly grouped resources that
--   the application is made up of.
--   
--   <i>See:</i> <a>newApplicationComponent</a> smart constructor.
data ApplicationComponent
ApplicationComponent' :: Maybe OsType -> Maybe Text -> Maybe (HashMap Tier (HashMap Text Text)) -> Maybe Bool -> Maybe Tier -> Maybe Text -> Maybe Text -> ApplicationComponent

-- | The operating system of the component.
[$sel:osType:ApplicationComponent'] :: ApplicationComponent -> Maybe OsType

-- | The resource type. Supported resource types include EC2 instances,
--   Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.
[$sel:resourceType:ApplicationComponent'] :: ApplicationComponent -> Maybe Text

-- | Workloads detected in the application component.
[$sel:detectedWorkload:ApplicationComponent'] :: ApplicationComponent -> Maybe (HashMap Tier (HashMap Text Text))

-- | Indicates whether the application component is monitored.
[$sel:monitor:ApplicationComponent'] :: ApplicationComponent -> Maybe Bool

-- | The stack tier of the application component.
[$sel:tier:ApplicationComponent'] :: ApplicationComponent -> Maybe Tier

-- | The name of the component.
[$sel:componentName:ApplicationComponent'] :: ApplicationComponent -> Maybe Text

-- | If logging is supported for the resource type, indicates whether the
--   component has configured logs to be monitored.
[$sel:componentRemarks:ApplicationComponent'] :: ApplicationComponent -> Maybe Text

-- | Create a value of <a>ApplicationComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:osType:ApplicationComponent'</a>,
--   <a>applicationComponent_osType</a> - The operating system of the
--   component.
--   
--   <a>$sel:resourceType:ApplicationComponent'</a>,
--   <a>applicationComponent_resourceType</a> - The resource type.
--   Supported resource types include EC2 instances, Auto Scaling group,
--   Classic ELB, Application ELB, and SQS Queue.
--   
--   <a>$sel:detectedWorkload:ApplicationComponent'</a>,
--   <a>applicationComponent_detectedWorkload</a> - Workloads detected in
--   the application component.
--   
--   <a>$sel:monitor:ApplicationComponent'</a>,
--   <a>applicationComponent_monitor</a> - Indicates whether the
--   application component is monitored.
--   
--   <a>$sel:tier:ApplicationComponent'</a>,
--   <a>applicationComponent_tier</a> - The stack tier of the application
--   component.
--   
--   <a>$sel:componentName:ApplicationComponent'</a>,
--   <a>applicationComponent_componentName</a> - The name of the component.
--   
--   <a>$sel:componentRemarks:ApplicationComponent'</a>,
--   <a>applicationComponent_componentRemarks</a> - If logging is supported
--   for the resource type, indicates whether the component has configured
--   logs to be monitored.
newApplicationComponent :: ApplicationComponent

-- | The operating system of the component.
applicationComponent_osType :: Lens' ApplicationComponent (Maybe OsType)

-- | The resource type. Supported resource types include EC2 instances,
--   Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.
applicationComponent_resourceType :: Lens' ApplicationComponent (Maybe Text)

-- | Workloads detected in the application component.
applicationComponent_detectedWorkload :: Lens' ApplicationComponent (Maybe (HashMap Tier (HashMap Text Text)))

-- | Indicates whether the application component is monitored.
applicationComponent_monitor :: Lens' ApplicationComponent (Maybe Bool)

-- | The stack tier of the application component.
applicationComponent_tier :: Lens' ApplicationComponent (Maybe Tier)

-- | The name of the component.
applicationComponent_componentName :: Lens' ApplicationComponent (Maybe Text)

-- | If logging is supported for the resource type, indicates whether the
--   component has configured logs to be monitored.
applicationComponent_componentRemarks :: Lens' ApplicationComponent (Maybe Text)

-- | Describes the status of the application.
--   
--   <i>See:</i> <a>newApplicationInfo</a> smart constructor.
data ApplicationInfo
ApplicationInfo' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> ApplicationInfo

-- | The name of the resource group used for the application.
[$sel:resourceGroupName:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
[$sel:cWEMonitorEnabled:ApplicationInfo'] :: ApplicationInfo -> Maybe Bool

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItems to receive SNS notifications for opsItem updates.
[$sel:opsItemSNSTopicArn:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The lifecycle of the application.
[$sel:lifeCycle:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | Indicates whether Application Insights will create opsItems for any
--   problem detected by Application Insights for an application.
[$sel:opsCenterEnabled:ApplicationInfo'] :: ApplicationInfo -> Maybe Bool

-- | The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
[$sel:remarks:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | Create a value of <a>ApplicationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ApplicationInfo'</a>,
--   <a>applicationInfo_resourceGroupName</a> - The name of the resource
--   group used for the application.
--   
--   <a>$sel:cWEMonitorEnabled:ApplicationInfo'</a>,
--   <a>applicationInfo_cWEMonitorEnabled</a> - Indicates whether
--   Application Insights can listen to CloudWatch events for the
--   application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
--   
--   <a>$sel:opsItemSNSTopicArn:ApplicationInfo'</a>,
--   <a>applicationInfo_opsItemSNSTopicArn</a> - The SNS topic provided to
--   Application Insights that is associated to the created opsItems to
--   receive SNS notifications for opsItem updates.
--   
--   <a>$sel:lifeCycle:ApplicationInfo'</a>,
--   <a>applicationInfo_lifeCycle</a> - The lifecycle of the application.
--   
--   <a>$sel:opsCenterEnabled:ApplicationInfo'</a>,
--   <a>applicationInfo_opsCenterEnabled</a> - Indicates whether
--   Application Insights will create opsItems for any problem detected by
--   Application Insights for an application.
--   
--   <a>$sel:remarks:ApplicationInfo'</a>, <a>applicationInfo_remarks</a> -
--   The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
newApplicationInfo :: ApplicationInfo

-- | The name of the resource group used for the application.
applicationInfo_resourceGroupName :: Lens' ApplicationInfo (Maybe Text)

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
applicationInfo_cWEMonitorEnabled :: Lens' ApplicationInfo (Maybe Bool)

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItems to receive SNS notifications for opsItem updates.
applicationInfo_opsItemSNSTopicArn :: Lens' ApplicationInfo (Maybe Text)

-- | The lifecycle of the application.
applicationInfo_lifeCycle :: Lens' ApplicationInfo (Maybe Text)

-- | Indicates whether Application Insights will create opsItems for any
--   problem detected by Application Insights for an application.
applicationInfo_opsCenterEnabled :: Lens' ApplicationInfo (Maybe Bool)

-- | The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
applicationInfo_remarks :: Lens' ApplicationInfo (Maybe Text)

-- | The event information.
--   
--   <i>See:</i> <a>newConfigurationEvent</a> smart constructor.
data ConfigurationEvent
ConfigurationEvent' :: Maybe Text -> Maybe ConfigurationEventStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ConfigurationEventResourceType -> ConfigurationEvent

-- | The resource monitored by Application Insights.
[$sel:monitoredResourceARN:ConfigurationEvent'] :: ConfigurationEvent -> Maybe Text

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
[$sel:eventStatus:ConfigurationEvent'] :: ConfigurationEvent -> Maybe ConfigurationEventStatus

-- | The name of the resource Application Insights attempted to configure.
[$sel:eventResourceName:ConfigurationEvent'] :: ConfigurationEvent -> Maybe Text

-- | The timestamp of the event.
[$sel:eventTime:ConfigurationEvent'] :: ConfigurationEvent -> Maybe POSIX

-- | The details of the event in plain text.
[$sel:eventDetail:ConfigurationEvent'] :: ConfigurationEvent -> Maybe Text

-- | The resource type that Application Insights attempted to configure,
--   for example, CLOUDWATCH_ALARM.
[$sel:eventResourceType:ConfigurationEvent'] :: ConfigurationEvent -> Maybe ConfigurationEventResourceType

-- | Create a value of <a>ConfigurationEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitoredResourceARN:ConfigurationEvent'</a>,
--   <a>configurationEvent_monitoredResourceARN</a> - The resource
--   monitored by Application Insights.
--   
--   <a>$sel:eventStatus:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventStatus</a> - The status of the
--   configuration update event. Possible values include INFO, WARN, and
--   ERROR.
--   
--   <a>$sel:eventResourceName:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventResourceName</a> - The name of the resource
--   Application Insights attempted to configure.
--   
--   <a>$sel:eventTime:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventTime</a> - The timestamp of the event.
--   
--   <a>$sel:eventDetail:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventDetail</a> - The details of the event in
--   plain text.
--   
--   <a>$sel:eventResourceType:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventResourceType</a> - The resource type that
--   Application Insights attempted to configure, for example,
--   CLOUDWATCH_ALARM.
newConfigurationEvent :: ConfigurationEvent

-- | The resource monitored by Application Insights.
configurationEvent_monitoredResourceARN :: Lens' ConfigurationEvent (Maybe Text)

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
configurationEvent_eventStatus :: Lens' ConfigurationEvent (Maybe ConfigurationEventStatus)

-- | The name of the resource Application Insights attempted to configure.
configurationEvent_eventResourceName :: Lens' ConfigurationEvent (Maybe Text)

-- | The timestamp of the event.
configurationEvent_eventTime :: Lens' ConfigurationEvent (Maybe UTCTime)

-- | The details of the event in plain text.
configurationEvent_eventDetail :: Lens' ConfigurationEvent (Maybe Text)

-- | The resource type that Application Insights attempted to configure,
--   for example, CLOUDWATCH_ALARM.
configurationEvent_eventResourceType :: Lens' ConfigurationEvent (Maybe ConfigurationEventResourceType)

-- | An object that defines the log patterns that belongs to a
--   <tt>LogPatternSet</tt>.
--   
--   <i>See:</i> <a>newLogPattern</a> smart constructor.
data LogPattern
LogPattern' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> LogPattern

-- | A regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
[$sel:pattern':LogPattern'] :: LogPattern -> Maybe Text

-- | The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
[$sel:patternName:LogPattern'] :: LogPattern -> Maybe Text

-- | The name of the log pattern. A log pattern name can contain as many as
--   30 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
[$sel:patternSetName:LogPattern'] :: LogPattern -> Maybe Text

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
[$sel:rank:LogPattern'] :: LogPattern -> Maybe Int

-- | Create a value of <a>LogPattern</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':LogPattern'</a>, <a>logPattern_pattern</a> - A
--   regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
--   
--   <a>$sel:patternName:LogPattern'</a>, <a>logPattern_patternName</a> -
--   The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
--   
--   <a>$sel:patternSetName:LogPattern'</a>,
--   <a>logPattern_patternSetName</a> - The name of the log pattern. A log
--   pattern name can contain as many as 30 characters, and it cannot be
--   empty. The characters can be Unicode letters, digits, or one of the
--   following symbols: period, dash, underscore.
--   
--   <a>$sel:rank:LogPattern'</a>, <a>logPattern_rank</a> - Rank of the log
--   pattern. Must be a value between <tt>1</tt> and <tt>1,000,000</tt>.
--   The patterns are sorted by rank, so we recommend that you set your
--   highest priority patterns with the lowest rank. A pattern of rank
--   <tt>1</tt> will be the first to get matched to a log line. A pattern
--   of rank <tt>1,000,000</tt> will be last to get matched. When you
--   configure custom log patterns from the console, a <tt>Low</tt>
--   severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
newLogPattern :: LogPattern

-- | A regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
logPattern_pattern :: Lens' LogPattern (Maybe Text)

-- | The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
logPattern_patternName :: Lens' LogPattern (Maybe Text)

-- | The name of the log pattern. A log pattern name can contain as many as
--   30 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
logPattern_patternSetName :: Lens' LogPattern (Maybe Text)

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
logPattern_rank :: Lens' LogPattern (Maybe Int)

-- | Describes an anomaly or error with the application.
--   
--   <i>See:</i> <a>newObservation</a> smart constructor.
data Observation
Observation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Double -> Maybe Text -> Maybe CloudWatchEventSource -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LogFilter -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Observation

-- | The CodeDeploy application to which the deployment belongs.
[$sel:codeDeployApplication:Observation'] :: Observation -> Maybe Text

-- | The message of an RDS event.
[$sel:rdsEventMessage:Observation'] :: Observation -> Maybe Text

-- | The deployment ID of the CodeDeploy-based observation related to the
--   detected problem.
[$sel:codeDeployDeploymentId:Observation'] :: Observation -> Maybe Text

-- | The time when the observation was first detected, in epoch seconds.
[$sel:startTime:Observation'] :: Observation -> Maybe POSIX

-- | The source type of the observation.
[$sel:sourceType:Observation'] :: Observation -> Maybe Text

-- | The source resource ARN of the observation.
[$sel:sourceARN:Observation'] :: Observation -> Maybe Text

-- | The X-Ray node request average latency for this node.
[$sel:xRayRequestAverageLatency:Observation'] :: Observation -> Maybe Integer

-- | The status of the step function-related observation.
[$sel:statesStatus:Observation'] :: Observation -> Maybe Text

-- | The deployment group to which the CodeDeploy deployment belongs.
[$sel:codeDeployDeploymentGroup:Observation'] :: Observation -> Maybe Text

-- | The category of the AWS Health event, such as <tt>issue</tt>.
[$sel:healthEventTypeCategory:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request count for this node.
[$sel:xRayRequestCount:Observation'] :: Observation -> Maybe Int

-- | The name of the S3 CloudWatch Event-based observation.
[$sel:s3EventName:Observation'] :: Observation -> Maybe Text

-- | The name of the observation metric.
[$sel:metricName:Observation'] :: Observation -> Maybe Text

-- | The state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
[$sel:ec2State:Observation'] :: Observation -> Maybe Text

-- | The log group name.
[$sel:logGroup:Observation'] :: Observation -> Maybe Text

-- | The value of the source observation metric.
[$sel:value:Observation'] :: Observation -> Maybe Double

-- | The description of the AWS Health event provided by the service, such
--   as Amazon EC2.
[$sel:healthEventDescription:Observation'] :: Observation -> Maybe Text

-- | The source of the CloudWatch Event.
[$sel:cloudWatchEventSource:Observation'] :: Observation -> Maybe CloudWatchEventSource

-- | The status of the CodeDeploy deployment, for example <tt>SUCCESS</tt>
--   or <tt> FAILURE</tt>.
[$sel:codeDeployState:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request error percentage for this node.
[$sel:xRayErrorPercent:Observation'] :: Observation -> Maybe Int

-- | The Amazon Resource Name (ARN) of the step function-based observation.
[$sel:statesArn:Observation'] :: Observation -> Maybe Text

-- | The ID of the CloudWatch Event-based observation related to the
--   detected problem.
[$sel:cloudWatchEventId:Observation'] :: Observation -> Maybe Text

-- | The log text of the observation.
[$sel:logText:Observation'] :: Observation -> Maybe Text

-- | The log filter of the observation.
[$sel:logFilter:Observation'] :: Observation -> Maybe LogFilter

-- | The namespace of the observation metric.
[$sel:metricNamespace:Observation'] :: Observation -> Maybe Text

-- | The category of an RDS event.
[$sel:rdsEventCategories:Observation'] :: Observation -> Maybe Text

-- | The type of the X-Ray node.
[$sel:xRayNodeType:Observation'] :: Observation -> Maybe Text

-- | The time when the observation ended, in epoch seconds.
[$sel:endTime:Observation'] :: Observation -> Maybe POSIX

-- | The input to the step function-based observation.
[$sel:statesInput:Observation'] :: Observation -> Maybe Text

-- | The name of the X-Ray node.
[$sel:xRayNodeName:Observation'] :: Observation -> Maybe Text

-- | The ID of the observation type.
[$sel:id:Observation'] :: Observation -> Maybe Text

-- | The Amazon Resource Name (ARN) of the AWS Health Event-based
--   observation.
[$sel:healthEventArn:Observation'] :: Observation -> Maybe Text

-- | The type of the AWS Health event, for example,
--   <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
[$sel:healthEventTypeCode:Observation'] :: Observation -> Maybe Text

-- | The result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
[$sel:ebsResult:Observation'] :: Observation -> Maybe Text

-- | The detail type of the CloudWatch Event-based observation, for
--   example, <tt>EC2 Instance State-change Notification</tt>.
[$sel:cloudWatchEventDetailType:Observation'] :: Observation -> Maybe Text

-- | The instance group to which the CodeDeploy instance belongs.
[$sel:codeDeployInstanceGroupId:Observation'] :: Observation -> Maybe Text

-- | The cause of an EBS CloudWatch event.
[$sel:ebsCause:Observation'] :: Observation -> Maybe Text

-- | The type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
[$sel:ebsEvent:Observation'] :: Observation -> Maybe Text

-- | The request ID of an EBS CloudWatch event.
[$sel:ebsRequestId:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request fault percentage for this node.
[$sel:xRayFaultPercent:Observation'] :: Observation -> Maybe Int

-- | The Amazon Resource Name (ARN) of the step function execution-based
--   observation.
[$sel:statesExecutionArn:Observation'] :: Observation -> Maybe Text

-- | The timestamp in the CloudWatch Logs that specifies when the matched
--   line occurred.
[$sel:lineTime:Observation'] :: Observation -> Maybe POSIX

-- | The unit of the source observation metric.
[$sel:unit:Observation'] :: Observation -> Maybe Text

-- | The X-Ray request throttle percentage for this node.
[$sel:xRayThrottlePercent:Observation'] :: Observation -> Maybe Int

-- | The service to which the AWS Health Event belongs, such as EC2.
[$sel:healthService:Observation'] :: Observation -> Maybe Text

-- | Create a value of <a>Observation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeployApplication:Observation'</a>,
--   <a>observation_codeDeployApplication</a> - The CodeDeploy application
--   to which the deployment belongs.
--   
--   <a>$sel:rdsEventMessage:Observation'</a>,
--   <a>observation_rdsEventMessage</a> - The message of an RDS event.
--   
--   <a>$sel:codeDeployDeploymentId:Observation'</a>,
--   <a>observation_codeDeployDeploymentId</a> - The deployment ID of the
--   CodeDeploy-based observation related to the detected problem.
--   
--   <a>$sel:startTime:Observation'</a>, <a>observation_startTime</a> - The
--   time when the observation was first detected, in epoch seconds.
--   
--   <a>$sel:sourceType:Observation'</a>, <a>observation_sourceType</a> -
--   The source type of the observation.
--   
--   <a>$sel:sourceARN:Observation'</a>, <a>observation_sourceARN</a> - The
--   source resource ARN of the observation.
--   
--   <a>$sel:xRayRequestAverageLatency:Observation'</a>,
--   <a>observation_xRayRequestAverageLatency</a> - The X-Ray node request
--   average latency for this node.
--   
--   <a>$sel:statesStatus:Observation'</a>, <a>observation_statesStatus</a>
--   - The status of the step function-related observation.
--   
--   <a>$sel:codeDeployDeploymentGroup:Observation'</a>,
--   <a>observation_codeDeployDeploymentGroup</a> - The deployment group to
--   which the CodeDeploy deployment belongs.
--   
--   <a>$sel:healthEventTypeCategory:Observation'</a>,
--   <a>observation_healthEventTypeCategory</a> - The category of the AWS
--   Health event, such as <tt>issue</tt>.
--   
--   <a>$sel:xRayRequestCount:Observation'</a>,
--   <a>observation_xRayRequestCount</a> - The X-Ray request count for this
--   node.
--   
--   <a>$sel:s3EventName:Observation'</a>, <a>observation_s3EventName</a> -
--   The name of the S3 CloudWatch Event-based observation.
--   
--   <a>$sel:metricName:Observation'</a>, <a>observation_metricName</a> -
--   The name of the observation metric.
--   
--   <a>$sel:ec2State:Observation'</a>, <a>observation_ec2State</a> - The
--   state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
--   
--   <a>$sel:logGroup:Observation'</a>, <a>observation_logGroup</a> - The
--   log group name.
--   
--   <a>$sel:value:Observation'</a>, <a>observation_value</a> - The value
--   of the source observation metric.
--   
--   <a>$sel:healthEventDescription:Observation'</a>,
--   <a>observation_healthEventDescription</a> - The description of the AWS
--   Health event provided by the service, such as Amazon EC2.
--   
--   <a>$sel:cloudWatchEventSource:Observation'</a>,
--   <a>observation_cloudWatchEventSource</a> - The source of the
--   CloudWatch Event.
--   
--   <a>$sel:codeDeployState:Observation'</a>,
--   <a>observation_codeDeployState</a> - The status of the CodeDeploy
--   deployment, for example <tt>SUCCESS</tt> or <tt> FAILURE</tt>.
--   
--   <a>$sel:xRayErrorPercent:Observation'</a>,
--   <a>observation_xRayErrorPercent</a> - The X-Ray request error
--   percentage for this node.
--   
--   <a>$sel:statesArn:Observation'</a>, <a>observation_statesArn</a> - The
--   Amazon Resource Name (ARN) of the step function-based observation.
--   
--   <a>$sel:cloudWatchEventId:Observation'</a>,
--   <a>observation_cloudWatchEventId</a> - The ID of the CloudWatch
--   Event-based observation related to the detected problem.
--   
--   <a>$sel:logText:Observation'</a>, <a>observation_logText</a> - The log
--   text of the observation.
--   
--   <a>$sel:logFilter:Observation'</a>, <a>observation_logFilter</a> - The
--   log filter of the observation.
--   
--   <a>$sel:metricNamespace:Observation'</a>,
--   <a>observation_metricNamespace</a> - The namespace of the observation
--   metric.
--   
--   <a>$sel:rdsEventCategories:Observation'</a>,
--   <a>observation_rdsEventCategories</a> - The category of an RDS event.
--   
--   <a>$sel:xRayNodeType:Observation'</a>, <a>observation_xRayNodeType</a>
--   - The type of the X-Ray node.
--   
--   <a>$sel:endTime:Observation'</a>, <a>observation_endTime</a> - The
--   time when the observation ended, in epoch seconds.
--   
--   <a>$sel:statesInput:Observation'</a>, <a>observation_statesInput</a> -
--   The input to the step function-based observation.
--   
--   <a>$sel:xRayNodeName:Observation'</a>, <a>observation_xRayNodeName</a>
--   - The name of the X-Ray node.
--   
--   <a>$sel:id:Observation'</a>, <a>observation_id</a> - The ID of the
--   observation type.
--   
--   <a>$sel:healthEventArn:Observation'</a>,
--   <a>observation_healthEventArn</a> - The Amazon Resource Name (ARN) of
--   the AWS Health Event-based observation.
--   
--   <a>$sel:healthEventTypeCode:Observation'</a>,
--   <a>observation_healthEventTypeCode</a> - The type of the AWS Health
--   event, for example, <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
--   
--   <a>$sel:ebsResult:Observation'</a>, <a>observation_ebsResult</a> - The
--   result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
--   
--   <a>$sel:cloudWatchEventDetailType:Observation'</a>,
--   <a>observation_cloudWatchEventDetailType</a> - The detail type of the
--   CloudWatch Event-based observation, for example, <tt>EC2 Instance
--   State-change Notification</tt>.
--   
--   <a>$sel:codeDeployInstanceGroupId:Observation'</a>,
--   <a>observation_codeDeployInstanceGroupId</a> - The instance group to
--   which the CodeDeploy instance belongs.
--   
--   <a>$sel:ebsCause:Observation'</a>, <a>observation_ebsCause</a> - The
--   cause of an EBS CloudWatch event.
--   
--   <a>$sel:ebsEvent:Observation'</a>, <a>observation_ebsEvent</a> - The
--   type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
--   
--   <a>$sel:ebsRequestId:Observation'</a>, <a>observation_ebsRequestId</a>
--   - The request ID of an EBS CloudWatch event.
--   
--   <a>$sel:xRayFaultPercent:Observation'</a>,
--   <a>observation_xRayFaultPercent</a> - The X-Ray request fault
--   percentage for this node.
--   
--   <a>$sel:statesExecutionArn:Observation'</a>,
--   <a>observation_statesExecutionArn</a> - The Amazon Resource Name (ARN)
--   of the step function execution-based observation.
--   
--   <a>$sel:lineTime:Observation'</a>, <a>observation_lineTime</a> - The
--   timestamp in the CloudWatch Logs that specifies when the matched line
--   occurred.
--   
--   <a>$sel:unit:Observation'</a>, <a>observation_unit</a> - The unit of
--   the source observation metric.
--   
--   <a>$sel:xRayThrottlePercent:Observation'</a>,
--   <a>observation_xRayThrottlePercent</a> - The X-Ray request throttle
--   percentage for this node.
--   
--   <a>$sel:healthService:Observation'</a>,
--   <a>observation_healthService</a> - The service to which the AWS Health
--   Event belongs, such as EC2.
newObservation :: Observation

-- | The CodeDeploy application to which the deployment belongs.
observation_codeDeployApplication :: Lens' Observation (Maybe Text)

-- | The message of an RDS event.
observation_rdsEventMessage :: Lens' Observation (Maybe Text)

-- | The deployment ID of the CodeDeploy-based observation related to the
--   detected problem.
observation_codeDeployDeploymentId :: Lens' Observation (Maybe Text)

-- | The time when the observation was first detected, in epoch seconds.
observation_startTime :: Lens' Observation (Maybe UTCTime)

-- | The source type of the observation.
observation_sourceType :: Lens' Observation (Maybe Text)

-- | The source resource ARN of the observation.
observation_sourceARN :: Lens' Observation (Maybe Text)

-- | The X-Ray node request average latency for this node.
observation_xRayRequestAverageLatency :: Lens' Observation (Maybe Integer)

-- | The status of the step function-related observation.
observation_statesStatus :: Lens' Observation (Maybe Text)

-- | The deployment group to which the CodeDeploy deployment belongs.
observation_codeDeployDeploymentGroup :: Lens' Observation (Maybe Text)

-- | The category of the AWS Health event, such as <tt>issue</tt>.
observation_healthEventTypeCategory :: Lens' Observation (Maybe Text)

-- | The X-Ray request count for this node.
observation_xRayRequestCount :: Lens' Observation (Maybe Int)

-- | The name of the S3 CloudWatch Event-based observation.
observation_s3EventName :: Lens' Observation (Maybe Text)

-- | The name of the observation metric.
observation_metricName :: Lens' Observation (Maybe Text)

-- | The state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
observation_ec2State :: Lens' Observation (Maybe Text)

-- | The log group name.
observation_logGroup :: Lens' Observation (Maybe Text)

-- | The value of the source observation metric.
observation_value :: Lens' Observation (Maybe Double)

-- | The description of the AWS Health event provided by the service, such
--   as Amazon EC2.
observation_healthEventDescription :: Lens' Observation (Maybe Text)

-- | The source of the CloudWatch Event.
observation_cloudWatchEventSource :: Lens' Observation (Maybe CloudWatchEventSource)

-- | The status of the CodeDeploy deployment, for example <tt>SUCCESS</tt>
--   or <tt> FAILURE</tt>.
observation_codeDeployState :: Lens' Observation (Maybe Text)

-- | The X-Ray request error percentage for this node.
observation_xRayErrorPercent :: Lens' Observation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the step function-based observation.
observation_statesArn :: Lens' Observation (Maybe Text)

-- | The ID of the CloudWatch Event-based observation related to the
--   detected problem.
observation_cloudWatchEventId :: Lens' Observation (Maybe Text)

-- | The log text of the observation.
observation_logText :: Lens' Observation (Maybe Text)

-- | The log filter of the observation.
observation_logFilter :: Lens' Observation (Maybe LogFilter)

-- | The namespace of the observation metric.
observation_metricNamespace :: Lens' Observation (Maybe Text)

-- | The category of an RDS event.
observation_rdsEventCategories :: Lens' Observation (Maybe Text)

-- | The type of the X-Ray node.
observation_xRayNodeType :: Lens' Observation (Maybe Text)

-- | The time when the observation ended, in epoch seconds.
observation_endTime :: Lens' Observation (Maybe UTCTime)

-- | The input to the step function-based observation.
observation_statesInput :: Lens' Observation (Maybe Text)

-- | The name of the X-Ray node.
observation_xRayNodeName :: Lens' Observation (Maybe Text)

-- | The ID of the observation type.
observation_id :: Lens' Observation (Maybe Text)

-- | The Amazon Resource Name (ARN) of the AWS Health Event-based
--   observation.
observation_healthEventArn :: Lens' Observation (Maybe Text)

-- | The type of the AWS Health event, for example,
--   <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
observation_healthEventTypeCode :: Lens' Observation (Maybe Text)

-- | The result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
observation_ebsResult :: Lens' Observation (Maybe Text)

-- | The detail type of the CloudWatch Event-based observation, for
--   example, <tt>EC2 Instance State-change Notification</tt>.
observation_cloudWatchEventDetailType :: Lens' Observation (Maybe Text)

-- | The instance group to which the CodeDeploy instance belongs.
observation_codeDeployInstanceGroupId :: Lens' Observation (Maybe Text)

-- | The cause of an EBS CloudWatch event.
observation_ebsCause :: Lens' Observation (Maybe Text)

-- | The type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
observation_ebsEvent :: Lens' Observation (Maybe Text)

-- | The request ID of an EBS CloudWatch event.
observation_ebsRequestId :: Lens' Observation (Maybe Text)

-- | The X-Ray request fault percentage for this node.
observation_xRayFaultPercent :: Lens' Observation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the step function execution-based
--   observation.
observation_statesExecutionArn :: Lens' Observation (Maybe Text)

-- | The timestamp in the CloudWatch Logs that specifies when the matched
--   line occurred.
observation_lineTime :: Lens' Observation (Maybe UTCTime)

-- | The unit of the source observation metric.
observation_unit :: Lens' Observation (Maybe Text)

-- | The X-Ray request throttle percentage for this node.
observation_xRayThrottlePercent :: Lens' Observation (Maybe Int)

-- | The service to which the AWS Health Event belongs, such as EC2.
observation_healthService :: Lens' Observation (Maybe Text)

-- | Describes a problem that is detected by correlating observations.
--   
--   <i>See:</i> <a>newProblem</a> smart constructor.
data Problem
Problem' :: Maybe Status -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe SeverityLevel -> Maybe Text -> Maybe Text -> Maybe (HashMap FeedbackKey FeedbackValue) -> Problem

-- | The status of the problem.
[$sel:status:Problem'] :: Problem -> Maybe Status

-- | The name of the resource group affected by the problem.
[$sel:resourceGroupName:Problem'] :: Problem -> Maybe Text

-- | The time when the problem started, in epoch seconds.
[$sel:startTime:Problem'] :: Problem -> Maybe POSIX

-- | A detailed analysis of the problem using machine learning.
[$sel:insights:Problem'] :: Problem -> Maybe Text

-- | The time when the problem ended, in epoch seconds.
[$sel:endTime:Problem'] :: Problem -> Maybe POSIX

-- | The ID of the problem.
[$sel:id:Problem'] :: Problem -> Maybe Text

-- | A measure of the level of impact of the problem.
[$sel:severityLevel:Problem'] :: Problem -> Maybe SeverityLevel

-- | The name of the problem.
[$sel:title:Problem'] :: Problem -> Maybe Text

-- | The resource affected by the problem.
[$sel:affectedResource:Problem'] :: Problem -> Maybe Text

-- | Feedback provided by the user about the problem.
[$sel:feedback:Problem'] :: Problem -> Maybe (HashMap FeedbackKey FeedbackValue)

-- | Create a value of <a>Problem</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Problem'</a>, <a>problem_status</a> - The status of the
--   problem.
--   
--   <a>$sel:resourceGroupName:Problem'</a>,
--   <a>problem_resourceGroupName</a> - The name of the resource group
--   affected by the problem.
--   
--   <a>$sel:startTime:Problem'</a>, <a>problem_startTime</a> - The time
--   when the problem started, in epoch seconds.
--   
--   <a>$sel:insights:Problem'</a>, <a>problem_insights</a> - A detailed
--   analysis of the problem using machine learning.
--   
--   <a>$sel:endTime:Problem'</a>, <a>problem_endTime</a> - The time when
--   the problem ended, in epoch seconds.
--   
--   <a>$sel:id:Problem'</a>, <a>problem_id</a> - The ID of the problem.
--   
--   <a>$sel:severityLevel:Problem'</a>, <a>problem_severityLevel</a> - A
--   measure of the level of impact of the problem.
--   
--   <a>$sel:title:Problem'</a>, <a>problem_title</a> - The name of the
--   problem.
--   
--   <a>$sel:affectedResource:Problem'</a>, <a>problem_affectedResource</a>
--   - The resource affected by the problem.
--   
--   <a>$sel:feedback:Problem'</a>, <a>problem_feedback</a> - Feedback
--   provided by the user about the problem.
newProblem :: Problem

-- | The status of the problem.
problem_status :: Lens' Problem (Maybe Status)

-- | The name of the resource group affected by the problem.
problem_resourceGroupName :: Lens' Problem (Maybe Text)

-- | The time when the problem started, in epoch seconds.
problem_startTime :: Lens' Problem (Maybe UTCTime)

-- | A detailed analysis of the problem using machine learning.
problem_insights :: Lens' Problem (Maybe Text)

-- | The time when the problem ended, in epoch seconds.
problem_endTime :: Lens' Problem (Maybe UTCTime)

-- | The ID of the problem.
problem_id :: Lens' Problem (Maybe Text)

-- | A measure of the level of impact of the problem.
problem_severityLevel :: Lens' Problem (Maybe SeverityLevel)

-- | The name of the problem.
problem_title :: Lens' Problem (Maybe Text)

-- | The resource affected by the problem.
problem_affectedResource :: Lens' Problem (Maybe Text)

-- | Feedback provided by the user about the problem.
problem_feedback :: Lens' Problem (Maybe (HashMap FeedbackKey FeedbackValue))

-- | Describes observations related to the problem.
--   
--   <i>See:</i> <a>newRelatedObservations</a> smart constructor.
data RelatedObservations
RelatedObservations' :: Maybe [Observation] -> RelatedObservations

-- | The list of observations related to the problem.
[$sel:observationList:RelatedObservations'] :: RelatedObservations -> Maybe [Observation]

-- | Create a value of <a>RelatedObservations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:observationList:RelatedObservations'</a>,
--   <a>relatedObservations_observationList</a> - The list of observations
--   related to the problem.
newRelatedObservations :: RelatedObservations

-- | The list of observations related to the problem.
relatedObservations_observationList :: Lens' RelatedObservations (Maybe [Observation])

-- | An object that defines the tags associated with an application. A
--   <i>tag</i> is a label that you optionally define and associate with an
--   application. Tags can help you categorize and manage resources in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
--   
--   Each tag consists of a required <i>tag key</i> and an associated
--   <i>tag value</i>, both of which you define. A tag key is a general
--   label that acts as a category for a more specific tag value. A tag
--   value acts as a descriptor within a tag key. A tag key can contain as
--   many as 128 characters. A tag value can contain as many as 256
--   characters. The characters can be Unicode letters, digits, white
--   space, or one of the following symbols: _ . : / = + -. The following
--   additional restrictions apply to tags:
--   
--   <ul>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>For each associated resource, each tag key must be unique and it
--   can have only one value.</li>
--   <li>The <tt>aws:</tt> prefix is reserved for use by AWS; you can’t use
--   it in any tag keys or values that you define. In addition, you can't
--   edit or remove tag keys or values that use this prefix.</li>
--   </ul>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | One part of a key-value pair that defines a tag. The maximum length of
--   a tag key is 128 characters. The minimum length is 1 character.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional part of a key-value pair that defines a tag. The maximum
--   length of a tag value is 256 characters. The minimum length is 0
--   characters. If you don't want an application to have a specific tag
--   value, don't specify a value for this parameter.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that defines a tag. The maximum length of a tag key is 128 characters.
--   The minimum length is 1 character.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that defines a tag. The maximum length of a tag value
--   is 256 characters. The minimum length is 0 characters. If you don't
--   want an application to have a specific tag value, don't specify a
--   value for this parameter.
newTag :: Text -> Text -> Tag

-- | One part of a key-value pair that defines a tag. The maximum length of
--   a tag key is 128 characters. The minimum length is 1 character.
tag_key :: Lens' Tag Text

-- | The optional part of a key-value pair that defines a tag. The maximum
--   length of a tag value is 256 characters. The minimum length is 0
--   characters. If you don't want an application to have a specific tag
--   value, don't specify a value for this parameter.
tag_value :: Lens' Tag Text


-- | Add one or more tags (keys and values) to a specified application. A
--   <i>tag</i> is a label that you optionally define and associate with an
--   application. Tags can help you categorize and manage application in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
--   
--   Each tag consists of a required <i>tag key</i> and an associated
--   <i>tag value</i>, both of which you define. A tag key is a general
--   label that acts as a category for more specific tag values. A tag
--   value acts as a descriptor within a tag key.
module Amazonka.ApplicationInsights.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the application that you want to add
--   one or more tags to.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | A list of tags that to add to the application. A tag consists of a
--   required tag key (<tt>Key</tt>) and an associated tag value
--   (<tt>Value</tt>). The maximum length of a tag key is 128 characters.
--   The maximum length of a tag value is 256 characters.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (ARN) of the application that you want to add
--   one or more tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags that to add to the application. A tag consists of a required tag
--   key (<tt>Key</tt>) and an associated tag value (<tt>Value</tt>). The
--   maximum length of a tag key is 128 characters. The maximum length of a
--   tag value is 256 characters.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the application that you want to add
--   one or more tags to.
tagResource_resourceARN :: Lens' TagResource Text

-- | A list of tags that to add to the application. A tag consists of a
--   required tag key (<tt>Key</tt>) and an associated tag value
--   (<tt>Value</tt>). The maximum length of a tag key is 128 characters.
--   The maximum length of a tag value is 256 characters.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.TagResource.TagResource
instance GHC.Show.Show Amazonka.ApplicationInsights.TagResource.TagResource
instance GHC.Read.Read Amazonka.ApplicationInsights.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.ApplicationInsights.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.ApplicationInsights.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.TagResource.TagResource


-- | Retrieve a list of the tags (keys and values) that are associated with
--   a specified application. A <i>tag</i> is a label that you optionally
--   define and associate with an application. Each tag consists of a
--   required <i>tag key</i> and an optional associated <i>tag value</i>. A
--   tag key is a general label that acts as a category for more specific
--   tag values. A tag value acts as a descriptor within a tag key.
module Amazonka.ApplicationInsights.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the application that you want to
--   retrieve tag information for.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (ARN) of the application that you want to retrieve tag information
--   for.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the application that you want to
--   retrieve tag information for.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | An array that lists all the tags that are associated with the
--   application. Each tag consists of a required tag key (<tt>Key</tt>)
--   and an associated tag value (<tt>Value</tt>).
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - An array that lists all the
--   tags that are associated with the application. Each tag consists of a
--   required tag key (<tt>Key</tt>) and an associated tag value
--   (<tt>Value</tt>).
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | An array that lists all the tags that are associated with the
--   application. Each tag consists of a required tag key (<tt>Key</tt>)
--   and an associated tag value (<tt>Value</tt>).
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.ListTagsForResource.ListTagsForResource


-- | Lists the problems with your application.
module Amazonka.ApplicationInsights.ListProblems

-- | <i>See:</i> <a>newListProblems</a> smart constructor.
data ListProblems
ListProblems' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Natural -> ListProblems

-- | The name of the resource group.
[$sel:resourceGroupName:ListProblems'] :: ListProblems -> Maybe Text

-- | The time when the problem was detected, in epoch seconds. If you don't
--   specify a time frame for the request, problems within the past seven
--   days are returned.
[$sel:startTime:ListProblems'] :: ListProblems -> Maybe POSIX

-- | The token to request the next page of results.
[$sel:nextToken:ListProblems'] :: ListProblems -> Maybe Text

-- | The time when the problem ended, in epoch seconds. If not specified,
--   problems within the past seven days are returned.
[$sel:endTime:ListProblems'] :: ListProblems -> Maybe POSIX

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
[$sel:maxResults:ListProblems'] :: ListProblems -> Maybe Natural

-- | Create a value of <a>ListProblems</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListProblems'</a>,
--   <a>listProblems_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:startTime:ListProblems'</a>, <a>listProblems_startTime</a> -
--   The time when the problem was detected, in epoch seconds. If you don't
--   specify a time frame for the request, problems within the past seven
--   days are returned.
--   
--   <a>$sel:nextToken:ListProblems'</a>, <a>listProblems_nextToken</a> -
--   The token to request the next page of results.
--   
--   <a>$sel:endTime:ListProblems'</a>, <a>listProblems_endTime</a> - The
--   time when the problem ended, in epoch seconds. If not specified,
--   problems within the past seven days are returned.
--   
--   <a>$sel:maxResults:ListProblems'</a>, <a>listProblems_maxResults</a> -
--   The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
newListProblems :: ListProblems

-- | The name of the resource group.
listProblems_resourceGroupName :: Lens' ListProblems (Maybe Text)

-- | The time when the problem was detected, in epoch seconds. If you don't
--   specify a time frame for the request, problems within the past seven
--   days are returned.
listProblems_startTime :: Lens' ListProblems (Maybe UTCTime)

-- | The token to request the next page of results.
listProblems_nextToken :: Lens' ListProblems (Maybe Text)

-- | The time when the problem ended, in epoch seconds. If not specified,
--   problems within the past seven days are returned.
listProblems_endTime :: Lens' ListProblems (Maybe UTCTime)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listProblems_maxResults :: Lens' ListProblems (Maybe Natural)

-- | <i>See:</i> <a>newListProblemsResponse</a> smart constructor.
data ListProblemsResponse
ListProblemsResponse' :: Maybe Text -> Maybe [Problem] -> Int -> ListProblemsResponse

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListProblemsResponse'] :: ListProblemsResponse -> Maybe Text

-- | The list of problems.
[$sel:problemList:ListProblemsResponse'] :: ListProblemsResponse -> Maybe [Problem]

-- | The response's http status code.
[$sel:httpStatus:ListProblemsResponse'] :: ListProblemsResponse -> Int

-- | Create a value of <a>ListProblemsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProblems'</a>,
--   <a>listProblemsResponse_nextToken</a> - The token used to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
--   
--   <a>$sel:problemList:ListProblemsResponse'</a>,
--   <a>listProblemsResponse_problemList</a> - The list of problems.
--   
--   <a>$sel:httpStatus:ListProblemsResponse'</a>,
--   <a>listProblemsResponse_httpStatus</a> - The response's http status
--   code.
newListProblemsResponse :: Int -> ListProblemsResponse

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listProblemsResponse_nextToken :: Lens' ListProblemsResponse (Maybe Text)

-- | The list of problems.
listProblemsResponse_problemList :: Lens' ListProblemsResponse (Maybe [Problem])

-- | The response's http status code.
listProblemsResponse_httpStatus :: Lens' ListProblemsResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListProblems.ListProblems
instance GHC.Show.Show Amazonka.ApplicationInsights.ListProblems.ListProblems
instance GHC.Read.Read Amazonka.ApplicationInsights.ListProblems.ListProblems
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListProblems.ListProblems
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListProblems.ListProblemsResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.ListProblems.ListProblemsResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.ListProblems.ListProblemsResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListProblems.ListProblemsResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.ListProblems.ListProblems
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListProblems.ListProblemsResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.ListProblems.ListProblems
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListProblems.ListProblems
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.ListProblems.ListProblems
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.ListProblems.ListProblems
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.ListProblems.ListProblems
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.ListProblems.ListProblems


-- | Lists the log patterns in the specific log <tt>LogPatternSet</tt>.
module Amazonka.ApplicationInsights.ListLogPatterns

-- | <i>See:</i> <a>newListLogPatterns</a> smart constructor.
data ListLogPatterns
ListLogPatterns' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListLogPatterns

-- | The token to request the next page of results.
[$sel:nextToken:ListLogPatterns'] :: ListLogPatterns -> Maybe Text

-- | The name of the log pattern set.
[$sel:patternSetName:ListLogPatterns'] :: ListLogPatterns -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
[$sel:maxResults:ListLogPatterns'] :: ListLogPatterns -> Maybe Natural

-- | The name of the resource group.
[$sel:resourceGroupName:ListLogPatterns'] :: ListLogPatterns -> Text

-- | Create a value of <a>ListLogPatterns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLogPatterns'</a>,
--   <a>listLogPatterns_nextToken</a> - The token to request the next page
--   of results.
--   
--   <a>$sel:patternSetName:ListLogPatterns'</a>,
--   <a>listLogPatterns_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:maxResults:ListLogPatterns'</a>,
--   <a>listLogPatterns_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
--   
--   <a>$sel:resourceGroupName:ListLogPatterns'</a>,
--   <a>listLogPatterns_resourceGroupName</a> - The name of the resource
--   group.
newListLogPatterns :: Text -> ListLogPatterns

-- | The token to request the next page of results.
listLogPatterns_nextToken :: Lens' ListLogPatterns (Maybe Text)

-- | The name of the log pattern set.
listLogPatterns_patternSetName :: Lens' ListLogPatterns (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listLogPatterns_maxResults :: Lens' ListLogPatterns (Maybe Natural)

-- | The name of the resource group.
listLogPatterns_resourceGroupName :: Lens' ListLogPatterns Text

-- | <i>See:</i> <a>newListLogPatternsResponse</a> smart constructor.
data ListLogPatternsResponse
ListLogPatternsResponse' :: Maybe Text -> Maybe Text -> Maybe [LogPattern] -> Int -> ListLogPatternsResponse

-- | The name of the resource group.
[$sel:resourceGroupName:ListLogPatternsResponse'] :: ListLogPatternsResponse -> Maybe Text

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListLogPatternsResponse'] :: ListLogPatternsResponse -> Maybe Text

-- | The list of log patterns.
[$sel:logPatterns:ListLogPatternsResponse'] :: ListLogPatternsResponse -> Maybe [LogPattern]

-- | The response's http status code.
[$sel:httpStatus:ListLogPatternsResponse'] :: ListLogPatternsResponse -> Int

-- | Create a value of <a>ListLogPatternsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListLogPatterns'</a>,
--   <a>listLogPatternsResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:nextToken:ListLogPatterns'</a>,
--   <a>listLogPatternsResponse_nextToken</a> - The token used to retrieve
--   the next page of results. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   <a>$sel:logPatterns:ListLogPatternsResponse'</a>,
--   <a>listLogPatternsResponse_logPatterns</a> - The list of log patterns.
--   
--   <a>$sel:httpStatus:ListLogPatternsResponse'</a>,
--   <a>listLogPatternsResponse_httpStatus</a> - The response's http status
--   code.
newListLogPatternsResponse :: Int -> ListLogPatternsResponse

-- | The name of the resource group.
listLogPatternsResponse_resourceGroupName :: Lens' ListLogPatternsResponse (Maybe Text)

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listLogPatternsResponse_nextToken :: Lens' ListLogPatternsResponse (Maybe Text)

-- | The list of log patterns.
listLogPatternsResponse_logPatterns :: Lens' ListLogPatternsResponse (Maybe [LogPattern])

-- | The response's http status code.
listLogPatternsResponse_httpStatus :: Lens' ListLogPatternsResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance GHC.Show.Show Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance GHC.Read.Read Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatternsResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatternsResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatternsResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatternsResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatternsResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.ListLogPatterns.ListLogPatterns


-- | Lists the log pattern sets in the specific application.
module Amazonka.ApplicationInsights.ListLogPatternSets

-- | <i>See:</i> <a>newListLogPatternSets</a> smart constructor.
data ListLogPatternSets
ListLogPatternSets' :: Maybe Text -> Maybe Natural -> Text -> ListLogPatternSets

-- | The token to request the next page of results.
[$sel:nextToken:ListLogPatternSets'] :: ListLogPatternSets -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
[$sel:maxResults:ListLogPatternSets'] :: ListLogPatternSets -> Maybe Natural

-- | The name of the resource group.
[$sel:resourceGroupName:ListLogPatternSets'] :: ListLogPatternSets -> Text

-- | Create a value of <a>ListLogPatternSets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLogPatternSets'</a>,
--   <a>listLogPatternSets_nextToken</a> - The token to request the next
--   page of results.
--   
--   <a>$sel:maxResults:ListLogPatternSets'</a>,
--   <a>listLogPatternSets_maxResults</a> - The maximum number of results
--   to return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
--   
--   <a>$sel:resourceGroupName:ListLogPatternSets'</a>,
--   <a>listLogPatternSets_resourceGroupName</a> - The name of the resource
--   group.
newListLogPatternSets :: Text -> ListLogPatternSets

-- | The token to request the next page of results.
listLogPatternSets_nextToken :: Lens' ListLogPatternSets (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listLogPatternSets_maxResults :: Lens' ListLogPatternSets (Maybe Natural)

-- | The name of the resource group.
listLogPatternSets_resourceGroupName :: Lens' ListLogPatternSets Text

-- | <i>See:</i> <a>newListLogPatternSetsResponse</a> smart constructor.
data ListLogPatternSetsResponse
ListLogPatternSetsResponse' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Int -> ListLogPatternSetsResponse

-- | The name of the resource group.
[$sel:resourceGroupName:ListLogPatternSetsResponse'] :: ListLogPatternSetsResponse -> Maybe Text

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListLogPatternSetsResponse'] :: ListLogPatternSetsResponse -> Maybe Text

-- | The list of log pattern sets.
[$sel:logPatternSets:ListLogPatternSetsResponse'] :: ListLogPatternSetsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListLogPatternSetsResponse'] :: ListLogPatternSetsResponse -> Int

-- | Create a value of <a>ListLogPatternSetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListLogPatternSets'</a>,
--   <a>listLogPatternSetsResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:nextToken:ListLogPatternSets'</a>,
--   <a>listLogPatternSetsResponse_nextToken</a> - The token used to
--   retrieve the next page of results. This value is <tt>null</tt> when
--   there are no more results to return.
--   
--   <a>$sel:logPatternSets:ListLogPatternSetsResponse'</a>,
--   <a>listLogPatternSetsResponse_logPatternSets</a> - The list of log
--   pattern sets.
--   
--   <a>$sel:httpStatus:ListLogPatternSetsResponse'</a>,
--   <a>listLogPatternSetsResponse_httpStatus</a> - The response's http
--   status code.
newListLogPatternSetsResponse :: Int -> ListLogPatternSetsResponse

-- | The name of the resource group.
listLogPatternSetsResponse_resourceGroupName :: Lens' ListLogPatternSetsResponse (Maybe Text)

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listLogPatternSetsResponse_nextToken :: Lens' ListLogPatternSetsResponse (Maybe Text)

-- | The list of log pattern sets.
listLogPatternSetsResponse_logPatternSets :: Lens' ListLogPatternSetsResponse (Maybe [Text])

-- | The response's http status code.
listLogPatternSetsResponse_httpStatus :: Lens' ListLogPatternSetsResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance GHC.Show.Show Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance GHC.Read.Read Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSetsResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSetsResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSetsResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSetsResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSetsResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.ListLogPatternSets.ListLogPatternSets


-- | Lists the INFO, WARN, and ERROR events for periodic configuration
--   updates performed by Application Insights. Examples of events
--   represented are:
--   
--   <ul>
--   <li>INFO: creating a new alarm or updating an alarm threshold.</li>
--   <li>WARN: alarm not created due to insufficient data points used to
--   predict thresholds.</li>
--   <li>ERROR: alarm not created due to permission errors or exceeding
--   quotas.</li>
--   </ul>
module Amazonka.ApplicationInsights.ListConfigurationHistory

-- | <i>See:</i> <a>newListConfigurationHistory</a> smart constructor.
data ListConfigurationHistory
ListConfigurationHistory' :: Maybe Text -> Maybe POSIX -> Maybe ConfigurationEventStatus -> Maybe Text -> Maybe POSIX -> Maybe Natural -> ListConfigurationHistory

-- | Resource group to which the application belongs.
[$sel:resourceGroupName:ListConfigurationHistory'] :: ListConfigurationHistory -> Maybe Text

-- | The start time of the event.
[$sel:startTime:ListConfigurationHistory'] :: ListConfigurationHistory -> Maybe POSIX

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
[$sel:eventStatus:ListConfigurationHistory'] :: ListConfigurationHistory -> Maybe ConfigurationEventStatus

-- | The <tt>NextToken</tt> value returned from a previous paginated
--   <tt>ListConfigurationHistory</tt> request where <tt>MaxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>NextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
[$sel:nextToken:ListConfigurationHistory'] :: ListConfigurationHistory -> Maybe Text

-- | The end time of the event.
[$sel:endTime:ListConfigurationHistory'] :: ListConfigurationHistory -> Maybe POSIX

-- | The maximum number of results returned by
--   <tt>ListConfigurationHistory</tt> in paginated output. When this
--   parameter is used, <tt>ListConfigurationHistory</tt> returns only
--   <tt>MaxResults</tt> in a single page along with a <tt>NextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListConfigurationHistory</tt> request with
--   the returned <tt>NextToken</tt> value. If this parameter is not used,
--   then <tt>ListConfigurationHistory</tt> returns all results.
[$sel:maxResults:ListConfigurationHistory'] :: ListConfigurationHistory -> Maybe Natural

-- | Create a value of <a>ListConfigurationHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_resourceGroupName</a> - Resource group to
--   which the application belongs.
--   
--   <a>$sel:startTime:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_startTime</a> - The start time of the
--   event.
--   
--   <a>$sel:eventStatus:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_eventStatus</a> - The status of the
--   configuration update event. Possible values include INFO, WARN, and
--   ERROR.
--   
--   <a>$sel:nextToken:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_nextToken</a> - The <tt>NextToken</tt>
--   value returned from a previous paginated
--   <tt>ListConfigurationHistory</tt> request where <tt>MaxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>NextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
--   
--   <a>$sel:endTime:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_endTime</a> - The end time of the event.
--   
--   <a>$sel:maxResults:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_maxResults</a> - The maximum number of
--   results returned by <tt>ListConfigurationHistory</tt> in paginated
--   output. When this parameter is used, <tt>ListConfigurationHistory</tt>
--   returns only <tt>MaxResults</tt> in a single page along with a
--   <tt>NextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListConfigurationHistory</tt> request with the returned
--   <tt>NextToken</tt> value. If this parameter is not used, then
--   <tt>ListConfigurationHistory</tt> returns all results.
newListConfigurationHistory :: ListConfigurationHistory

-- | Resource group to which the application belongs.
listConfigurationHistory_resourceGroupName :: Lens' ListConfigurationHistory (Maybe Text)

-- | The start time of the event.
listConfigurationHistory_startTime :: Lens' ListConfigurationHistory (Maybe UTCTime)

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
listConfigurationHistory_eventStatus :: Lens' ListConfigurationHistory (Maybe ConfigurationEventStatus)

-- | The <tt>NextToken</tt> value returned from a previous paginated
--   <tt>ListConfigurationHistory</tt> request where <tt>MaxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>NextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
listConfigurationHistory_nextToken :: Lens' ListConfigurationHistory (Maybe Text)

-- | The end time of the event.
listConfigurationHistory_endTime :: Lens' ListConfigurationHistory (Maybe UTCTime)

-- | The maximum number of results returned by
--   <tt>ListConfigurationHistory</tt> in paginated output. When this
--   parameter is used, <tt>ListConfigurationHistory</tt> returns only
--   <tt>MaxResults</tt> in a single page along with a <tt>NextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListConfigurationHistory</tt> request with
--   the returned <tt>NextToken</tt> value. If this parameter is not used,
--   then <tt>ListConfigurationHistory</tt> returns all results.
listConfigurationHistory_maxResults :: Lens' ListConfigurationHistory (Maybe Natural)

-- | <i>See:</i> <a>newListConfigurationHistoryResponse</a> smart
--   constructor.
data ListConfigurationHistoryResponse
ListConfigurationHistoryResponse' :: Maybe Text -> Maybe [ConfigurationEvent] -> Int -> ListConfigurationHistoryResponse

-- | The <tt>NextToken</tt> value to include in a future
--   <tt>ListConfigurationHistory</tt> request. When the results of a
--   <tt>ListConfigurationHistory</tt> request exceed <tt>MaxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListConfigurationHistoryResponse'] :: ListConfigurationHistoryResponse -> Maybe Text

-- | The list of configuration events and their corresponding details.
[$sel:eventList:ListConfigurationHistoryResponse'] :: ListConfigurationHistoryResponse -> Maybe [ConfigurationEvent]

-- | The response's http status code.
[$sel:httpStatus:ListConfigurationHistoryResponse'] :: ListConfigurationHistoryResponse -> Int

-- | Create a value of <a>ListConfigurationHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistoryResponse_nextToken</a> - The
--   <tt>NextToken</tt> value to include in a future
--   <tt>ListConfigurationHistory</tt> request. When the results of a
--   <tt>ListConfigurationHistory</tt> request exceed <tt>MaxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:eventList:ListConfigurationHistoryResponse'</a>,
--   <a>listConfigurationHistoryResponse_eventList</a> - The list of
--   configuration events and their corresponding details.
--   
--   <a>$sel:httpStatus:ListConfigurationHistoryResponse'</a>,
--   <a>listConfigurationHistoryResponse_httpStatus</a> - The response's
--   http status code.
newListConfigurationHistoryResponse :: Int -> ListConfigurationHistoryResponse

-- | The <tt>NextToken</tt> value to include in a future
--   <tt>ListConfigurationHistory</tt> request. When the results of a
--   <tt>ListConfigurationHistory</tt> request exceed <tt>MaxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
listConfigurationHistoryResponse_nextToken :: Lens' ListConfigurationHistoryResponse (Maybe Text)

-- | The list of configuration events and their corresponding details.
listConfigurationHistoryResponse_eventList :: Lens' ListConfigurationHistoryResponse (Maybe [ConfigurationEvent])

-- | The response's http status code.
listConfigurationHistoryResponse_httpStatus :: Lens' ListConfigurationHistoryResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance GHC.Show.Show Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance GHC.Read.Read Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistoryResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistoryResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistoryResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistoryResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistoryResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.ListConfigurationHistory.ListConfigurationHistory


-- | Lists the auto-grouped, standalone, and custom components of the
--   application.
module Amazonka.ApplicationInsights.ListComponents

-- | <i>See:</i> <a>newListComponents</a> smart constructor.
data ListComponents
ListComponents' :: Maybe Text -> Maybe Natural -> Text -> ListComponents

-- | The token to request the next page of results.
[$sel:nextToken:ListComponents'] :: ListComponents -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
[$sel:maxResults:ListComponents'] :: ListComponents -> Maybe Natural

-- | The name of the resource group.
[$sel:resourceGroupName:ListComponents'] :: ListComponents -> Text

-- | Create a value of <a>ListComponents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListComponents'</a>, <a>listComponents_nextToken</a>
--   - The token to request the next page of results.
--   
--   <a>$sel:maxResults:ListComponents'</a>,
--   <a>listComponents_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
--   
--   <a>$sel:resourceGroupName:ListComponents'</a>,
--   <a>listComponents_resourceGroupName</a> - The name of the resource
--   group.
newListComponents :: Text -> ListComponents

-- | The token to request the next page of results.
listComponents_nextToken :: Lens' ListComponents (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listComponents_maxResults :: Lens' ListComponents (Maybe Natural)

-- | The name of the resource group.
listComponents_resourceGroupName :: Lens' ListComponents Text

-- | <i>See:</i> <a>newListComponentsResponse</a> smart constructor.
data ListComponentsResponse
ListComponentsResponse' :: Maybe [ApplicationComponent] -> Maybe Text -> Int -> ListComponentsResponse

-- | The list of application components.
[$sel:applicationComponentList:ListComponentsResponse'] :: ListComponentsResponse -> Maybe [ApplicationComponent]

-- | The token to request the next page of results.
[$sel:nextToken:ListComponentsResponse'] :: ListComponentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListComponentsResponse'] :: ListComponentsResponse -> Int

-- | Create a value of <a>ListComponentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationComponentList:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_applicationComponentList</a> - The list of
--   application components.
--   
--   <a>$sel:nextToken:ListComponents'</a>,
--   <a>listComponentsResponse_nextToken</a> - The token to request the
--   next page of results.
--   
--   <a>$sel:httpStatus:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_httpStatus</a> - The response's http status
--   code.
newListComponentsResponse :: Int -> ListComponentsResponse

-- | The list of application components.
listComponentsResponse_applicationComponentList :: Lens' ListComponentsResponse (Maybe [ApplicationComponent])

-- | The token to request the next page of results.
listComponentsResponse_nextToken :: Lens' ListComponentsResponse (Maybe Text)

-- | The response's http status code.
listComponentsResponse_httpStatus :: Lens' ListComponentsResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListComponents.ListComponents
instance GHC.Show.Show Amazonka.ApplicationInsights.ListComponents.ListComponents
instance GHC.Read.Read Amazonka.ApplicationInsights.ListComponents.ListComponents
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListComponents.ListComponents
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListComponents.ListComponentsResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.ListComponents.ListComponentsResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.ListComponents.ListComponentsResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListComponents.ListComponentsResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.ListComponents.ListComponents
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListComponents.ListComponentsResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.ListComponents.ListComponents
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListComponents.ListComponents
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.ListComponents.ListComponents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.ListComponents.ListComponents
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.ListComponents.ListComponents
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.ListComponents.ListComponents


-- | Lists the IDs of the applications that you are monitoring.
module Amazonka.ApplicationInsights.ListApplications

-- | <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Text -> Maybe Natural -> ListApplications

-- | The token to request the next page of results.
[$sel:nextToken:ListApplications'] :: ListApplications -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
[$sel:maxResults:ListApplications'] :: ListApplications -> Maybe Natural

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplications_nextToken</a> - The token to request the next page
--   of results.
--   
--   <a>$sel:maxResults:ListApplications'</a>,
--   <a>listApplications_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
newListApplications :: ListApplications

-- | The token to request the next page of results.
listApplications_nextToken :: Lens' ListApplications (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listApplications_maxResults :: Lens' ListApplications (Maybe Natural)

-- | <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Maybe Text -> Maybe [ApplicationInfo] -> Int -> ListApplicationsResponse

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListApplicationsResponse'] :: ListApplicationsResponse -> Maybe Text

-- | The list of applications.
[$sel:applicationInfoList:ListApplicationsResponse'] :: ListApplicationsResponse -> Maybe [ApplicationInfo]

-- | The response's http status code.
[$sel:httpStatus:ListApplicationsResponse'] :: ListApplicationsResponse -> Int

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplicationsResponse_nextToken</a> - The token used to retrieve
--   the next page of results. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   <a>$sel:applicationInfoList:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_applicationInfoList</a> - The list of
--   applications.
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListApplicationsResponse :: Int -> ListApplicationsResponse

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listApplicationsResponse_nextToken :: Lens' ListApplicationsResponse (Maybe Text)

-- | The list of applications.
listApplicationsResponse_applicationInfoList :: Lens' ListApplicationsResponse (Maybe [ApplicationInfo])

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListApplications.ListApplications
instance GHC.Show.Show Amazonka.ApplicationInsights.ListApplications.ListApplications
instance GHC.Read.Read Amazonka.ApplicationInsights.ListApplications.ListApplications
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListApplications.ListApplications
instance GHC.Generics.Generic Amazonka.ApplicationInsights.ListApplications.ListApplicationsResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.ListApplications.ListApplicationsResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.ListApplications.ListApplicationsResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.ListApplications.ListApplicationsResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.ListApplications.ListApplications
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListApplications.ListApplicationsResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.ListApplications.ListApplications
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.ListApplications.ListApplications
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.ListApplications.ListApplications
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.ListApplications.ListApplications
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.ListApplications.ListApplications
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.ListApplications.ListApplications


-- | Describes the anomalies or errors associated with the problem.
module Amazonka.ApplicationInsights.DescribeProblemObservations

-- | <i>See:</i> <a>newDescribeProblemObservations</a> smart constructor.
data DescribeProblemObservations
DescribeProblemObservations' :: Text -> DescribeProblemObservations

-- | The ID of the problem.
[$sel:problemId:DescribeProblemObservations'] :: DescribeProblemObservations -> Text

-- | Create a value of <a>DescribeProblemObservations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:problemId:DescribeProblemObservations'</a>,
--   <a>describeProblemObservations_problemId</a> - The ID of the problem.
newDescribeProblemObservations :: Text -> DescribeProblemObservations

-- | The ID of the problem.
describeProblemObservations_problemId :: Lens' DescribeProblemObservations Text

-- | <i>See:</i> <a>newDescribeProblemObservationsResponse</a> smart
--   constructor.
data DescribeProblemObservationsResponse
DescribeProblemObservationsResponse' :: Maybe RelatedObservations -> Int -> DescribeProblemObservationsResponse

-- | Observations related to the problem.
[$sel:relatedObservations:DescribeProblemObservationsResponse'] :: DescribeProblemObservationsResponse -> Maybe RelatedObservations

-- | The response's http status code.
[$sel:httpStatus:DescribeProblemObservationsResponse'] :: DescribeProblemObservationsResponse -> Int

-- | Create a value of <a>DescribeProblemObservationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relatedObservations:DescribeProblemObservationsResponse'</a>,
--   <a>describeProblemObservationsResponse_relatedObservations</a> -
--   Observations related to the problem.
--   
--   <a>$sel:httpStatus:DescribeProblemObservationsResponse'</a>,
--   <a>describeProblemObservationsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeProblemObservationsResponse :: Int -> DescribeProblemObservationsResponse

-- | Observations related to the problem.
describeProblemObservationsResponse_relatedObservations :: Lens' DescribeProblemObservationsResponse (Maybe RelatedObservations)

-- | The response's http status code.
describeProblemObservationsResponse_httpStatus :: Lens' DescribeProblemObservationsResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservationsResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservationsResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservationsResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservationsResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservationsResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeProblemObservations.DescribeProblemObservations


-- | Describes an application problem.
module Amazonka.ApplicationInsights.DescribeProblem

-- | <i>See:</i> <a>newDescribeProblem</a> smart constructor.
data DescribeProblem
DescribeProblem' :: Text -> DescribeProblem

-- | The ID of the problem.
[$sel:problemId:DescribeProblem'] :: DescribeProblem -> Text

-- | Create a value of <a>DescribeProblem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:problemId:DescribeProblem'</a>,
--   <a>describeProblem_problemId</a> - The ID of the problem.
newDescribeProblem :: Text -> DescribeProblem

-- | The ID of the problem.
describeProblem_problemId :: Lens' DescribeProblem Text

-- | <i>See:</i> <a>newDescribeProblemResponse</a> smart constructor.
data DescribeProblemResponse
DescribeProblemResponse' :: Maybe Problem -> Int -> DescribeProblemResponse

-- | Information about the problem.
[$sel:problem:DescribeProblemResponse'] :: DescribeProblemResponse -> Maybe Problem

-- | The response's http status code.
[$sel:httpStatus:DescribeProblemResponse'] :: DescribeProblemResponse -> Int

-- | Create a value of <a>DescribeProblemResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:problem:DescribeProblemResponse'</a>,
--   <a>describeProblemResponse_problem</a> - Information about the
--   problem.
--   
--   <a>$sel:httpStatus:DescribeProblemResponse'</a>,
--   <a>describeProblemResponse_httpStatus</a> - The response's http status
--   code.
newDescribeProblemResponse :: Int -> DescribeProblemResponse

-- | Information about the problem.
describeProblemResponse_problem :: Lens' DescribeProblemResponse (Maybe Problem)

-- | The response's http status code.
describeProblemResponse_httpStatus :: Lens' DescribeProblemResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeProblem.DescribeProblemResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeProblem.DescribeProblemResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeProblem.DescribeProblemResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeProblem.DescribeProblemResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeProblem.DescribeProblemResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeProblem.DescribeProblem


-- | Describes an anomaly or error with the application.
module Amazonka.ApplicationInsights.DescribeObservation

-- | <i>See:</i> <a>newDescribeObservation</a> smart constructor.
data DescribeObservation
DescribeObservation' :: Text -> DescribeObservation

-- | The ID of the observation.
[$sel:observationId:DescribeObservation'] :: DescribeObservation -> Text

-- | Create a value of <a>DescribeObservation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:observationId:DescribeObservation'</a>,
--   <a>describeObservation_observationId</a> - The ID of the observation.
newDescribeObservation :: Text -> DescribeObservation

-- | The ID of the observation.
describeObservation_observationId :: Lens' DescribeObservation Text

-- | <i>See:</i> <a>newDescribeObservationResponse</a> smart constructor.
data DescribeObservationResponse
DescribeObservationResponse' :: Maybe Observation -> Int -> DescribeObservationResponse

-- | Information about the observation.
[$sel:observation:DescribeObservationResponse'] :: DescribeObservationResponse -> Maybe Observation

-- | The response's http status code.
[$sel:httpStatus:DescribeObservationResponse'] :: DescribeObservationResponse -> Int

-- | Create a value of <a>DescribeObservationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:observation:DescribeObservationResponse'</a>,
--   <a>describeObservationResponse_observation</a> - Information about the
--   observation.
--   
--   <a>$sel:httpStatus:DescribeObservationResponse'</a>,
--   <a>describeObservationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeObservationResponse :: Int -> DescribeObservationResponse

-- | Information about the observation.
describeObservationResponse_observation :: Lens' DescribeObservationResponse (Maybe Observation)

-- | The response's http status code.
describeObservationResponse_httpStatus :: Lens' DescribeObservationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeObservation.DescribeObservationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeObservation.DescribeObservationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeObservation.DescribeObservationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeObservation.DescribeObservationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeObservation.DescribeObservationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeObservation.DescribeObservation


-- | Describe a specific log pattern from a <tt>LogPatternSet</tt>.
module Amazonka.ApplicationInsights.DescribeLogPattern

-- | <i>See:</i> <a>newDescribeLogPattern</a> smart constructor.
data DescribeLogPattern
DescribeLogPattern' :: Text -> Text -> Text -> DescribeLogPattern

-- | The name of the resource group.
[$sel:resourceGroupName:DescribeLogPattern'] :: DescribeLogPattern -> Text

-- | The name of the log pattern set.
[$sel:patternSetName:DescribeLogPattern'] :: DescribeLogPattern -> Text

-- | The name of the log pattern.
[$sel:patternName:DescribeLogPattern'] :: DescribeLogPattern -> Text

-- | Create a value of <a>DescribeLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeLogPattern'</a>,
--   <a>describeLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:DescribeLogPattern'</a>,
--   <a>describeLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:DescribeLogPattern'</a>,
--   <a>describeLogPattern_patternName</a> - The name of the log pattern.
newDescribeLogPattern :: Text -> Text -> Text -> DescribeLogPattern

-- | The name of the resource group.
describeLogPattern_resourceGroupName :: Lens' DescribeLogPattern Text

-- | The name of the log pattern set.
describeLogPattern_patternSetName :: Lens' DescribeLogPattern Text

-- | The name of the log pattern.
describeLogPattern_patternName :: Lens' DescribeLogPattern Text

-- | <i>See:</i> <a>newDescribeLogPatternResponse</a> smart constructor.
data DescribeLogPatternResponse
DescribeLogPatternResponse' :: Maybe LogPattern -> Maybe Text -> Int -> DescribeLogPatternResponse

-- | The successfully created log pattern.
[$sel:logPattern:DescribeLogPatternResponse'] :: DescribeLogPatternResponse -> Maybe LogPattern

-- | The name of the resource group.
[$sel:resourceGroupName:DescribeLogPatternResponse'] :: DescribeLogPatternResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeLogPatternResponse'] :: DescribeLogPatternResponse -> Int

-- | Create a value of <a>DescribeLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPattern:DescribeLogPatternResponse'</a>,
--   <a>describeLogPatternResponse_logPattern</a> - The successfully
--   created log pattern.
--   
--   <a>$sel:resourceGroupName:DescribeLogPattern'</a>,
--   <a>describeLogPatternResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:httpStatus:DescribeLogPatternResponse'</a>,
--   <a>describeLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLogPatternResponse :: Int -> DescribeLogPatternResponse

-- | The successfully created log pattern.
describeLogPatternResponse_logPattern :: Lens' DescribeLogPatternResponse (Maybe LogPattern)

-- | The name of the resource group.
describeLogPatternResponse_resourceGroupName :: Lens' DescribeLogPatternResponse (Maybe Text)

-- | The response's http status code.
describeLogPatternResponse_httpStatus :: Lens' DescribeLogPatternResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPatternResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPatternResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPatternResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPatternResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPatternResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeLogPattern.DescribeLogPattern


-- | Describes the recommended monitoring configuration of the component.
module Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation

-- | <i>See:</i> <a>newDescribeComponentConfigurationRecommendation</a>
--   smart constructor.
data DescribeComponentConfigurationRecommendation
DescribeComponentConfigurationRecommendation' :: Text -> Text -> Tier -> DescribeComponentConfigurationRecommendation

-- | The name of the resource group.
[$sel:resourceGroupName:DescribeComponentConfigurationRecommendation'] :: DescribeComponentConfigurationRecommendation -> Text

-- | The name of the component.
[$sel:componentName:DescribeComponentConfigurationRecommendation'] :: DescribeComponentConfigurationRecommendation -> Text

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
[$sel:tier:DescribeComponentConfigurationRecommendation'] :: DescribeComponentConfigurationRecommendation -> Tier

-- | Create a value of <a>DescribeComponentConfigurationRecommendation</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resourceGroupName:DescribeComponentConfigurationRecommendation'</a>,
--   <a>describeComponentConfigurationRecommendation_resourceGroupName</a>
--   - The name of the resource group.
--   
--   
--   <a>$sel:componentName:DescribeComponentConfigurationRecommendation'</a>,
--   <a>describeComponentConfigurationRecommendation_componentName</a> -
--   The name of the component.
--   
--   <a>$sel:tier:DescribeComponentConfigurationRecommendation'</a>,
--   <a>describeComponentConfigurationRecommendation_tier</a> - The tier of
--   the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
newDescribeComponentConfigurationRecommendation :: Text -> Text -> Tier -> DescribeComponentConfigurationRecommendation

-- | The name of the resource group.
describeComponentConfigurationRecommendation_resourceGroupName :: Lens' DescribeComponentConfigurationRecommendation Text

-- | The name of the component.
describeComponentConfigurationRecommendation_componentName :: Lens' DescribeComponentConfigurationRecommendation Text

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
describeComponentConfigurationRecommendation_tier :: Lens' DescribeComponentConfigurationRecommendation Tier

-- | <i>See:</i>
--   <a>newDescribeComponentConfigurationRecommendationResponse</a> smart
--   constructor.
data DescribeComponentConfigurationRecommendationResponse
DescribeComponentConfigurationRecommendationResponse' :: Maybe Text -> Int -> DescribeComponentConfigurationRecommendationResponse

-- | The recommended configuration settings of the component. The value is
--   the escaped JSON of the configuration.
[$sel:componentConfiguration:DescribeComponentConfigurationRecommendationResponse'] :: DescribeComponentConfigurationRecommendationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeComponentConfigurationRecommendationResponse'] :: DescribeComponentConfigurationRecommendationResponse -> Int

-- | Create a value of
--   <a>DescribeComponentConfigurationRecommendationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:componentConfiguration:DescribeComponentConfigurationRecommendationResponse'</a>,
--   <a>describeComponentConfigurationRecommendationResponse_componentConfiguration</a>
--   - The recommended configuration settings of the component. The value
--   is the escaped JSON of the configuration.
--   
--   
--   <a>$sel:httpStatus:DescribeComponentConfigurationRecommendationResponse'</a>,
--   <a>describeComponentConfigurationRecommendationResponse_httpStatus</a>
--   - The response's http status code.
newDescribeComponentConfigurationRecommendationResponse :: Int -> DescribeComponentConfigurationRecommendationResponse

-- | The recommended configuration settings of the component. The value is
--   the escaped JSON of the configuration.
describeComponentConfigurationRecommendationResponse_componentConfiguration :: Lens' DescribeComponentConfigurationRecommendationResponse (Maybe Text)

-- | The response's http status code.
describeComponentConfigurationRecommendationResponse_httpStatus :: Lens' DescribeComponentConfigurationRecommendationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeComponentConfigurationRecommendation.DescribeComponentConfigurationRecommendation


-- | Describes the monitoring configuration of the component.
module Amazonka.ApplicationInsights.DescribeComponentConfiguration

-- | <i>See:</i> <a>newDescribeComponentConfiguration</a> smart
--   constructor.
data DescribeComponentConfiguration
DescribeComponentConfiguration' :: Text -> Text -> DescribeComponentConfiguration

-- | The name of the resource group.
[$sel:resourceGroupName:DescribeComponentConfiguration'] :: DescribeComponentConfiguration -> Text

-- | The name of the component.
[$sel:componentName:DescribeComponentConfiguration'] :: DescribeComponentConfiguration -> Text

-- | Create a value of <a>DescribeComponentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeComponentConfiguration'</a>,
--   <a>describeComponentConfiguration_resourceGroupName</a> - The name of
--   the resource group.
--   
--   <a>$sel:componentName:DescribeComponentConfiguration'</a>,
--   <a>describeComponentConfiguration_componentName</a> - The name of the
--   component.
newDescribeComponentConfiguration :: Text -> Text -> DescribeComponentConfiguration

-- | The name of the resource group.
describeComponentConfiguration_resourceGroupName :: Lens' DescribeComponentConfiguration Text

-- | The name of the component.
describeComponentConfiguration_componentName :: Lens' DescribeComponentConfiguration Text

-- | <i>See:</i> <a>newDescribeComponentConfigurationResponse</a> smart
--   constructor.
data DescribeComponentConfigurationResponse
DescribeComponentConfigurationResponse' :: Maybe Text -> Maybe Bool -> Maybe Tier -> Int -> DescribeComponentConfigurationResponse

-- | The configuration settings of the component. The value is the escaped
--   JSON of the configuration.
[$sel:componentConfiguration:DescribeComponentConfigurationResponse'] :: DescribeComponentConfigurationResponse -> Maybe Text

-- | Indicates whether the application component is monitored.
[$sel:monitor:DescribeComponentConfigurationResponse'] :: DescribeComponentConfigurationResponse -> Maybe Bool

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>
[$sel:tier:DescribeComponentConfigurationResponse'] :: DescribeComponentConfigurationResponse -> Maybe Tier

-- | The response's http status code.
[$sel:httpStatus:DescribeComponentConfigurationResponse'] :: DescribeComponentConfigurationResponse -> Int

-- | Create a value of <a>DescribeComponentConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:componentConfiguration:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_componentConfiguration</a> -
--   The configuration settings of the component. The value is the escaped
--   JSON of the configuration.
--   
--   <a>$sel:monitor:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_monitor</a> - Indicates
--   whether the application component is monitored.
--   
--   <a>$sel:tier:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_tier</a> - The tier of the
--   application component. Supported tiers include <tt>DOT_NET_CORE</tt>,
--   <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>, <tt>SQL_SERVER</tt>,
--   and <tt>DEFAULT</tt>
--   
--   <a>$sel:httpStatus:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeComponentConfigurationResponse :: Int -> DescribeComponentConfigurationResponse

-- | The configuration settings of the component. The value is the escaped
--   JSON of the configuration.
describeComponentConfigurationResponse_componentConfiguration :: Lens' DescribeComponentConfigurationResponse (Maybe Text)

-- | Indicates whether the application component is monitored.
describeComponentConfigurationResponse_monitor :: Lens' DescribeComponentConfigurationResponse (Maybe Bool)

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>
describeComponentConfigurationResponse_tier :: Lens' DescribeComponentConfigurationResponse (Maybe Tier)

-- | The response's http status code.
describeComponentConfigurationResponse_httpStatus :: Lens' DescribeComponentConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfigurationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfigurationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfigurationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeComponentConfiguration.DescribeComponentConfiguration


-- | Describes a component and lists the resources that are grouped
--   together in a component.
module Amazonka.ApplicationInsights.DescribeComponent

-- | <i>See:</i> <a>newDescribeComponent</a> smart constructor.
data DescribeComponent
DescribeComponent' :: Text -> Text -> DescribeComponent

-- | The name of the resource group.
[$sel:resourceGroupName:DescribeComponent'] :: DescribeComponent -> Text

-- | The name of the component.
[$sel:componentName:DescribeComponent'] :: DescribeComponent -> Text

-- | Create a value of <a>DescribeComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeComponent'</a>,
--   <a>describeComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:DescribeComponent'</a>,
--   <a>describeComponent_componentName</a> - The name of the component.
newDescribeComponent :: Text -> Text -> DescribeComponent

-- | The name of the resource group.
describeComponent_resourceGroupName :: Lens' DescribeComponent Text

-- | The name of the component.
describeComponent_componentName :: Lens' DescribeComponent Text

-- | <i>See:</i> <a>newDescribeComponentResponse</a> smart constructor.
data DescribeComponentResponse
DescribeComponentResponse' :: Maybe ApplicationComponent -> Maybe [Text] -> Int -> DescribeComponentResponse
[$sel:applicationComponent:DescribeComponentResponse'] :: DescribeComponentResponse -> Maybe ApplicationComponent

-- | The list of resource ARNs that belong to the component.
[$sel:resourceList:DescribeComponentResponse'] :: DescribeComponentResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:DescribeComponentResponse'] :: DescribeComponentResponse -> Int

-- | Create a value of <a>DescribeComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationComponent:DescribeComponentResponse'</a>,
--   <a>describeComponentResponse_applicationComponent</a> - Undocumented
--   member.
--   
--   <a>$sel:resourceList:DescribeComponentResponse'</a>,
--   <a>describeComponentResponse_resourceList</a> - The list of resource
--   ARNs that belong to the component.
--   
--   <a>$sel:httpStatus:DescribeComponentResponse'</a>,
--   <a>describeComponentResponse_httpStatus</a> - The response's http
--   status code.
newDescribeComponentResponse :: Int -> DescribeComponentResponse

-- | Undocumented member.
describeComponentResponse_applicationComponent :: Lens' DescribeComponentResponse (Maybe ApplicationComponent)

-- | The list of resource ARNs that belong to the component.
describeComponentResponse_resourceList :: Lens' DescribeComponentResponse (Maybe [Text])

-- | The response's http status code.
describeComponentResponse_httpStatus :: Lens' DescribeComponentResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeComponent.DescribeComponentResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeComponent.DescribeComponentResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeComponent.DescribeComponentResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeComponent.DescribeComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeComponent.DescribeComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeComponent.DescribeComponent


-- | Describes the application.
module Amazonka.ApplicationInsights.DescribeApplication

-- | <i>See:</i> <a>newDescribeApplication</a> smart constructor.
data DescribeApplication
DescribeApplication' :: Text -> DescribeApplication

-- | The name of the resource group.
[$sel:resourceGroupName:DescribeApplication'] :: DescribeApplication -> Text

-- | Create a value of <a>DescribeApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeApplication'</a>,
--   <a>describeApplication_resourceGroupName</a> - The name of the
--   resource group.
newDescribeApplication :: Text -> DescribeApplication

-- | The name of the resource group.
describeApplication_resourceGroupName :: Lens' DescribeApplication Text

-- | <i>See:</i> <a>newDescribeApplicationResponse</a> smart constructor.
data DescribeApplicationResponse
DescribeApplicationResponse' :: Maybe ApplicationInfo -> Int -> DescribeApplicationResponse

-- | Information about the application.
[$sel:applicationInfo:DescribeApplicationResponse'] :: DescribeApplicationResponse -> Maybe ApplicationInfo

-- | The response's http status code.
[$sel:httpStatus:DescribeApplicationResponse'] :: DescribeApplicationResponse -> Int

-- | Create a value of <a>DescribeApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInfo:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_applicationInfo</a> - Information about
--   the application.
--   
--   <a>$sel:httpStatus:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeApplicationResponse :: Int -> DescribeApplicationResponse

-- | Information about the application.
describeApplicationResponse_applicationInfo :: Lens' DescribeApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
describeApplicationResponse_httpStatus :: Lens' DescribeApplicationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DescribeApplication.DescribeApplicationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DescribeApplication.DescribeApplicationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DescribeApplication.DescribeApplicationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DescribeApplication.DescribeApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeApplication.DescribeApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DescribeApplication.DescribeApplication


-- | Removes the specified log pattern from a <tt>LogPatternSet</tt>.
module Amazonka.ApplicationInsights.DeleteLogPattern

-- | <i>See:</i> <a>newDeleteLogPattern</a> smart constructor.
data DeleteLogPattern
DeleteLogPattern' :: Text -> Text -> Text -> DeleteLogPattern

-- | The name of the resource group.
[$sel:resourceGroupName:DeleteLogPattern'] :: DeleteLogPattern -> Text

-- | The name of the log pattern set.
[$sel:patternSetName:DeleteLogPattern'] :: DeleteLogPattern -> Text

-- | The name of the log pattern.
[$sel:patternName:DeleteLogPattern'] :: DeleteLogPattern -> Text

-- | Create a value of <a>DeleteLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DeleteLogPattern'</a>,
--   <a>deleteLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:DeleteLogPattern'</a>,
--   <a>deleteLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:DeleteLogPattern'</a>,
--   <a>deleteLogPattern_patternName</a> - The name of the log pattern.
newDeleteLogPattern :: Text -> Text -> Text -> DeleteLogPattern

-- | The name of the resource group.
deleteLogPattern_resourceGroupName :: Lens' DeleteLogPattern Text

-- | The name of the log pattern set.
deleteLogPattern_patternSetName :: Lens' DeleteLogPattern Text

-- | The name of the log pattern.
deleteLogPattern_patternName :: Lens' DeleteLogPattern Text

-- | <i>See:</i> <a>newDeleteLogPatternResponse</a> smart constructor.
data DeleteLogPatternResponse
DeleteLogPatternResponse' :: Int -> DeleteLogPatternResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLogPatternResponse'] :: DeleteLogPatternResponse -> Int

-- | Create a value of <a>DeleteLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLogPatternResponse'</a>,
--   <a>deleteLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLogPatternResponse :: Int -> DeleteLogPatternResponse

-- | The response's http status code.
deleteLogPatternResponse_httpStatus :: Lens' DeleteLogPatternResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance GHC.Show.Show Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance GHC.Read.Read Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPatternResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPatternResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPatternResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPatternResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPatternResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DeleteLogPattern.DeleteLogPattern


-- | Ungroups a custom component. When you ungroup custom components, all
--   applicable monitors that are set up for the component are removed and
--   the instances revert to their standalone status.
module Amazonka.ApplicationInsights.DeleteComponent

-- | <i>See:</i> <a>newDeleteComponent</a> smart constructor.
data DeleteComponent
DeleteComponent' :: Text -> Text -> DeleteComponent

-- | The name of the resource group.
[$sel:resourceGroupName:DeleteComponent'] :: DeleteComponent -> Text

-- | The name of the component.
[$sel:componentName:DeleteComponent'] :: DeleteComponent -> Text

-- | Create a value of <a>DeleteComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DeleteComponent'</a>,
--   <a>deleteComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:DeleteComponent'</a>,
--   <a>deleteComponent_componentName</a> - The name of the component.
newDeleteComponent :: Text -> Text -> DeleteComponent

-- | The name of the resource group.
deleteComponent_resourceGroupName :: Lens' DeleteComponent Text

-- | The name of the component.
deleteComponent_componentName :: Lens' DeleteComponent Text

-- | <i>See:</i> <a>newDeleteComponentResponse</a> smart constructor.
data DeleteComponentResponse
DeleteComponentResponse' :: Int -> DeleteComponentResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteComponentResponse'] :: DeleteComponentResponse -> Int

-- | Create a value of <a>DeleteComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteComponentResponse'</a>,
--   <a>deleteComponentResponse_httpStatus</a> - The response's http status
--   code.
newDeleteComponentResponse :: Int -> DeleteComponentResponse

-- | The response's http status code.
deleteComponentResponse_httpStatus :: Lens' DeleteComponentResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance GHC.Show.Show Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance GHC.Read.Read Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DeleteComponent.DeleteComponentResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DeleteComponent.DeleteComponentResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DeleteComponent.DeleteComponentResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DeleteComponent.DeleteComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DeleteComponent.DeleteComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DeleteComponent.DeleteComponent


-- | Removes the specified application from monitoring. Does not delete the
--   application.
module Amazonka.ApplicationInsights.DeleteApplication

-- | <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> DeleteApplication

-- | The name of the resource group.
[$sel:resourceGroupName:DeleteApplication'] :: DeleteApplication -> Text

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DeleteApplication'</a>,
--   <a>deleteApplication_resourceGroupName</a> - The name of the resource
--   group.
newDeleteApplication :: Text -> DeleteApplication

-- | The name of the resource group.
deleteApplication_resourceGroupName :: Lens' DeleteApplication Text

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: Int -> DeleteApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApplicationResponse'] :: DeleteApplicationResponse -> Int

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationResponse'</a>,
--   <a>deleteApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApplicationResponse :: Int -> DeleteApplicationResponse

-- | The response's http status code.
deleteApplicationResponse_httpStatus :: Lens' DeleteApplicationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance GHC.Show.Show Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance GHC.Read.Read Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance GHC.Generics.Generic Amazonka.ApplicationInsights.DeleteApplication.DeleteApplicationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.DeleteApplication.DeleteApplicationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.DeleteApplication.DeleteApplicationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.DeleteApplication.DeleteApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DeleteApplication.DeleteApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.DeleteApplication.DeleteApplication


-- | Adds an log pattern to a <tt>LogPatternSet</tt>.
module Amazonka.ApplicationInsights.CreateLogPattern

-- | <i>See:</i> <a>newCreateLogPattern</a> smart constructor.
data CreateLogPattern
CreateLogPattern' :: Text -> Text -> Text -> Text -> Int -> CreateLogPattern

-- | The name of the resource group.
[$sel:resourceGroupName:CreateLogPattern'] :: CreateLogPattern -> Text

-- | The name of the log pattern set.
[$sel:patternSetName:CreateLogPattern'] :: CreateLogPattern -> Text

-- | The name of the log pattern.
[$sel:patternName:CreateLogPattern'] :: CreateLogPattern -> Text

-- | The log pattern. The pattern must be DFA compatible. Patterns that
--   utilize forward lookahead or backreference constructions are not
--   supported.
[$sel:pattern':CreateLogPattern'] :: CreateLogPattern -> Text

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
[$sel:rank:CreateLogPattern'] :: CreateLogPattern -> Int

-- | Create a value of <a>CreateLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:CreateLogPattern'</a>,
--   <a>createLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:CreateLogPattern'</a>,
--   <a>createLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:CreateLogPattern'</a>,
--   <a>createLogPattern_patternName</a> - The name of the log pattern.
--   
--   <a>$sel:pattern':CreateLogPattern'</a>,
--   <a>createLogPattern_pattern</a> - The log pattern. The pattern must be
--   DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
--   
--   <a>$sel:rank:CreateLogPattern'</a>, <a>createLogPattern_rank</a> -
--   Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
newCreateLogPattern :: Text -> Text -> Text -> Text -> Int -> CreateLogPattern

-- | The name of the resource group.
createLogPattern_resourceGroupName :: Lens' CreateLogPattern Text

-- | The name of the log pattern set.
createLogPattern_patternSetName :: Lens' CreateLogPattern Text

-- | The name of the log pattern.
createLogPattern_patternName :: Lens' CreateLogPattern Text

-- | The log pattern. The pattern must be DFA compatible. Patterns that
--   utilize forward lookahead or backreference constructions are not
--   supported.
createLogPattern_pattern :: Lens' CreateLogPattern Text

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
createLogPattern_rank :: Lens' CreateLogPattern Int

-- | <i>See:</i> <a>newCreateLogPatternResponse</a> smart constructor.
data CreateLogPatternResponse
CreateLogPatternResponse' :: Maybe LogPattern -> Maybe Text -> Int -> CreateLogPatternResponse

-- | The successfully created log pattern.
[$sel:logPattern:CreateLogPatternResponse'] :: CreateLogPatternResponse -> Maybe LogPattern

-- | The name of the resource group.
[$sel:resourceGroupName:CreateLogPatternResponse'] :: CreateLogPatternResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateLogPatternResponse'] :: CreateLogPatternResponse -> Int

-- | Create a value of <a>CreateLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPattern:CreateLogPatternResponse'</a>,
--   <a>createLogPatternResponse_logPattern</a> - The successfully created
--   log pattern.
--   
--   <a>$sel:resourceGroupName:CreateLogPattern'</a>,
--   <a>createLogPatternResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:httpStatus:CreateLogPatternResponse'</a>,
--   <a>createLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newCreateLogPatternResponse :: Int -> CreateLogPatternResponse

-- | The successfully created log pattern.
createLogPatternResponse_logPattern :: Lens' CreateLogPatternResponse (Maybe LogPattern)

-- | The name of the resource group.
createLogPatternResponse_resourceGroupName :: Lens' CreateLogPatternResponse (Maybe Text)

-- | The response's http status code.
createLogPatternResponse_httpStatus :: Lens' CreateLogPatternResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance GHC.Show.Show Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance GHC.Read.Read Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance GHC.Classes.Eq Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance GHC.Generics.Generic Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPatternResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPatternResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPatternResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPatternResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPatternResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.CreateLogPattern.CreateLogPattern


-- | Creates a custom component by grouping similar standalone instances to
--   monitor.
module Amazonka.ApplicationInsights.CreateComponent

-- | <i>See:</i> <a>newCreateComponent</a> smart constructor.
data CreateComponent
CreateComponent' :: Text -> Text -> [Text] -> CreateComponent

-- | The name of the resource group.
[$sel:resourceGroupName:CreateComponent'] :: CreateComponent -> Text

-- | The name of the component.
[$sel:componentName:CreateComponent'] :: CreateComponent -> Text

-- | The list of resource ARNs that belong to the component.
[$sel:resourceList:CreateComponent'] :: CreateComponent -> [Text]

-- | Create a value of <a>CreateComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:CreateComponent'</a>,
--   <a>createComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:CreateComponent'</a>,
--   <a>createComponent_componentName</a> - The name of the component.
--   
--   <a>$sel:resourceList:CreateComponent'</a>,
--   <a>createComponent_resourceList</a> - The list of resource ARNs that
--   belong to the component.
newCreateComponent :: Text -> Text -> CreateComponent

-- | The name of the resource group.
createComponent_resourceGroupName :: Lens' CreateComponent Text

-- | The name of the component.
createComponent_componentName :: Lens' CreateComponent Text

-- | The list of resource ARNs that belong to the component.
createComponent_resourceList :: Lens' CreateComponent [Text]

-- | <i>See:</i> <a>newCreateComponentResponse</a> smart constructor.
data CreateComponentResponse
CreateComponentResponse' :: Int -> CreateComponentResponse

-- | The response's http status code.
[$sel:httpStatus:CreateComponentResponse'] :: CreateComponentResponse -> Int

-- | Create a value of <a>CreateComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateComponentResponse'</a>,
--   <a>createComponentResponse_httpStatus</a> - The response's http status
--   code.
newCreateComponentResponse :: Int -> CreateComponentResponse

-- | The response's http status code.
createComponentResponse_httpStatus :: Lens' CreateComponentResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance GHC.Show.Show Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance GHC.Read.Read Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance GHC.Classes.Eq Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance GHC.Generics.Generic Amazonka.ApplicationInsights.CreateComponent.CreateComponentResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.CreateComponent.CreateComponentResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.CreateComponent.CreateComponentResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.CreateComponent.CreateComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.CreateComponent.CreateComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.CreateComponent.CreateComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.CreateComponent.CreateComponent


-- | Adds an application that is created from a resource group.
module Amazonka.ApplicationInsights.CreateApplication

-- | <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe [Tag] -> Text -> CreateApplication

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
[$sel:cWEMonitorEnabled:CreateApplication'] :: CreateApplication -> Maybe Bool

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItem. Allows you to receive notifications for updates
--   to the opsItem.
[$sel:opsItemSNSTopicArn:CreateApplication'] :: CreateApplication -> Maybe Text

-- | When set to <tt>true</tt>, creates opsItems for any problems detected
--   on an application.
[$sel:opsCenterEnabled:CreateApplication'] :: CreateApplication -> Maybe Bool

-- | List of tags to add to the application. tag key (<tt>Key</tt>) and an
--   associated tag value (<tt>Value</tt>). The maximum length of a tag key
--   is 128 characters. The maximum length of a tag value is 256
--   characters.
[$sel:tags:CreateApplication'] :: CreateApplication -> Maybe [Tag]

-- | The name of the resource group.
[$sel:resourceGroupName:CreateApplication'] :: CreateApplication -> Text

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cWEMonitorEnabled:CreateApplication'</a>,
--   <a>createApplication_cWEMonitorEnabled</a> - Indicates whether
--   Application Insights can listen to CloudWatch events for the
--   application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
--   
--   <a>$sel:opsItemSNSTopicArn:CreateApplication'</a>,
--   <a>createApplication_opsItemSNSTopicArn</a> - The SNS topic provided
--   to Application Insights that is associated to the created opsItem.
--   Allows you to receive notifications for updates to the opsItem.
--   
--   <a>$sel:opsCenterEnabled:CreateApplication'</a>,
--   <a>createApplication_opsCenterEnabled</a> - When set to <tt>true</tt>,
--   creates opsItems for any problems detected on an application.
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> -
--   List of tags to add to the application. tag key (<tt>Key</tt>) and an
--   associated tag value (<tt>Value</tt>). The maximum length of a tag key
--   is 128 characters. The maximum length of a tag value is 256
--   characters.
--   
--   <a>$sel:resourceGroupName:CreateApplication'</a>,
--   <a>createApplication_resourceGroupName</a> - The name of the resource
--   group.
newCreateApplication :: Text -> CreateApplication

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
createApplication_cWEMonitorEnabled :: Lens' CreateApplication (Maybe Bool)

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItem. Allows you to receive notifications for updates
--   to the opsItem.
createApplication_opsItemSNSTopicArn :: Lens' CreateApplication (Maybe Text)

-- | When set to <tt>true</tt>, creates opsItems for any problems detected
--   on an application.
createApplication_opsCenterEnabled :: Lens' CreateApplication (Maybe Bool)

-- | List of tags to add to the application. tag key (<tt>Key</tt>) and an
--   associated tag value (<tt>Value</tt>). The maximum length of a tag key
--   is 128 characters. The maximum length of a tag value is 256
--   characters.
createApplication_tags :: Lens' CreateApplication (Maybe [Tag])

-- | The name of the resource group.
createApplication_resourceGroupName :: Lens' CreateApplication Text

-- | <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Maybe ApplicationInfo -> Int -> CreateApplicationResponse

-- | Information about the application.
[$sel:applicationInfo:CreateApplicationResponse'] :: CreateApplicationResponse -> Maybe ApplicationInfo

-- | The response's http status code.
[$sel:httpStatus:CreateApplicationResponse'] :: CreateApplicationResponse -> Int

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInfo:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_applicationInfo</a> - Information about
--   the application.
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApplicationResponse :: Int -> CreateApplicationResponse

-- | Information about the application.
createApplicationResponse_applicationInfo :: Lens' CreateApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance GHC.Show.Show Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance GHC.Read.Read Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance GHC.Classes.Eq Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance GHC.Generics.Generic Amazonka.ApplicationInsights.CreateApplication.CreateApplicationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.CreateApplication.CreateApplicationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.CreateApplication.CreateApplicationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.CreateApplication.CreateApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.CreateApplication.CreateApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.CreateApplication.CreateApplication
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.CreateApplication.CreateApplication


-- | Remove one or more tags (keys and values) from a specified
--   application.
module Amazonka.ApplicationInsights.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the application that you want to
--   remove one or more tags from.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The tags (tag keys) that you want to remove from the resource. When
--   you specify a tag key, the action removes both that key and its
--   associated tag value.
--   
--   To remove more than one tag from the application, append the
--   <tt>TagKeys</tt> parameter and argument for each additional tag to
--   remove, separated by an ampersand.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name (ARN) of
--   the application that you want to remove one or more tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tags (tag keys) that you want to remove from the resource. When you
--   specify a tag key, the action removes both that key and its associated
--   tag value.
--   
--   To remove more than one tag from the application, append the
--   <tt>TagKeys</tt> parameter and argument for each additional tag to
--   remove, separated by an ampersand.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the application that you want to
--   remove one or more tags from.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The tags (tag keys) that you want to remove from the resource. When
--   you specify a tag key, the action removes both that key and its
--   associated tag value.
--   
--   To remove more than one tag from the application, append the
--   <tt>TagKeys</tt> parameter and argument for each additional tag to
--   remove, separated by an ampersand.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.ApplicationInsights.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.ApplicationInsights.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.UntagResource.UntagResource


-- | Updates the application.
module Amazonka.ApplicationInsights.UpdateApplication

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Bool -> Text -> UpdateApplication

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
[$sel:cWEMonitorEnabled:UpdateApplication'] :: UpdateApplication -> Maybe Bool

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItem. Allows you to receive notifications for updates
--   to the opsItem.
[$sel:opsItemSNSTopicArn:UpdateApplication'] :: UpdateApplication -> Maybe Text

-- | Disassociates the SNS topic from the opsItem created for detected
--   problems.
[$sel:removeSNSTopic:UpdateApplication'] :: UpdateApplication -> Maybe Bool

-- | When set to <tt>true</tt>, creates opsItems for any problems detected
--   on an application.
[$sel:opsCenterEnabled:UpdateApplication'] :: UpdateApplication -> Maybe Bool

-- | The name of the resource group.
[$sel:resourceGroupName:UpdateApplication'] :: UpdateApplication -> Text

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cWEMonitorEnabled:UpdateApplication'</a>,
--   <a>updateApplication_cWEMonitorEnabled</a> - Indicates whether
--   Application Insights can listen to CloudWatch events for the
--   application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
--   
--   <a>$sel:opsItemSNSTopicArn:UpdateApplication'</a>,
--   <a>updateApplication_opsItemSNSTopicArn</a> - The SNS topic provided
--   to Application Insights that is associated to the created opsItem.
--   Allows you to receive notifications for updates to the opsItem.
--   
--   <a>$sel:removeSNSTopic:UpdateApplication'</a>,
--   <a>updateApplication_removeSNSTopic</a> - Disassociates the SNS topic
--   from the opsItem created for detected problems.
--   
--   <a>$sel:opsCenterEnabled:UpdateApplication'</a>,
--   <a>updateApplication_opsCenterEnabled</a> - When set to <tt>true</tt>,
--   creates opsItems for any problems detected on an application.
--   
--   <a>$sel:resourceGroupName:UpdateApplication'</a>,
--   <a>updateApplication_resourceGroupName</a> - The name of the resource
--   group.
newUpdateApplication :: Text -> UpdateApplication

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
updateApplication_cWEMonitorEnabled :: Lens' UpdateApplication (Maybe Bool)

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItem. Allows you to receive notifications for updates
--   to the opsItem.
updateApplication_opsItemSNSTopicArn :: Lens' UpdateApplication (Maybe Text)

-- | Disassociates the SNS topic from the opsItem created for detected
--   problems.
updateApplication_removeSNSTopic :: Lens' UpdateApplication (Maybe Bool)

-- | When set to <tt>true</tt>, creates opsItems for any problems detected
--   on an application.
updateApplication_opsCenterEnabled :: Lens' UpdateApplication (Maybe Bool)

-- | The name of the resource group.
updateApplication_resourceGroupName :: Lens' UpdateApplication Text

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: Maybe ApplicationInfo -> Int -> UpdateApplicationResponse

-- | Information about the application.
[$sel:applicationInfo:UpdateApplicationResponse'] :: UpdateApplicationResponse -> Maybe ApplicationInfo

-- | The response's http status code.
[$sel:httpStatus:UpdateApplicationResponse'] :: UpdateApplicationResponse -> Int

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInfo:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_applicationInfo</a> - Information about
--   the application.
--   
--   <a>$sel:httpStatus:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApplicationResponse :: Int -> UpdateApplicationResponse

-- | Information about the application.
updateApplicationResponse_applicationInfo :: Lens' UpdateApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
updateApplicationResponse_httpStatus :: Lens' UpdateApplicationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateApplication.UpdateApplicationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateApplication.UpdateApplicationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateApplication.UpdateApplicationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateApplication.UpdateApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateApplication.UpdateApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.UpdateApplication.UpdateApplication


-- | Updates the custom component name and/or the list of resources that
--   make up the component.
module Amazonka.ApplicationInsights.UpdateComponent

-- | <i>See:</i> <a>newUpdateComponent</a> smart constructor.
data UpdateComponent
UpdateComponent' :: Maybe Text -> Maybe [Text] -> Text -> Text -> UpdateComponent

-- | The new name of the component.
[$sel:newComponentName':UpdateComponent'] :: UpdateComponent -> Maybe Text

-- | The list of resource ARNs that belong to the component.
[$sel:resourceList:UpdateComponent'] :: UpdateComponent -> Maybe [Text]

-- | The name of the resource group.
[$sel:resourceGroupName:UpdateComponent'] :: UpdateComponent -> Text

-- | The name of the component.
[$sel:componentName:UpdateComponent'] :: UpdateComponent -> Text

-- | Create a value of <a>UpdateComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newComponentName':UpdateComponent'</a>,
--   <a>updateComponent_newComponentName</a> - The new name of the
--   component.
--   
--   <a>$sel:resourceList:UpdateComponent'</a>,
--   <a>updateComponent_resourceList</a> - The list of resource ARNs that
--   belong to the component.
--   
--   <a>$sel:resourceGroupName:UpdateComponent'</a>,
--   <a>updateComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:UpdateComponent'</a>,
--   <a>updateComponent_componentName</a> - The name of the component.
newUpdateComponent :: Text -> Text -> UpdateComponent

-- | The new name of the component.
updateComponent_newComponentName :: Lens' UpdateComponent (Maybe Text)

-- | The list of resource ARNs that belong to the component.
updateComponent_resourceList :: Lens' UpdateComponent (Maybe [Text])

-- | The name of the resource group.
updateComponent_resourceGroupName :: Lens' UpdateComponent Text

-- | The name of the component.
updateComponent_componentName :: Lens' UpdateComponent Text

-- | <i>See:</i> <a>newUpdateComponentResponse</a> smart constructor.
data UpdateComponentResponse
UpdateComponentResponse' :: Int -> UpdateComponentResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateComponentResponse'] :: UpdateComponentResponse -> Int

-- | Create a value of <a>UpdateComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateComponentResponse'</a>,
--   <a>updateComponentResponse_httpStatus</a> - The response's http status
--   code.
newUpdateComponentResponse :: Int -> UpdateComponentResponse

-- | The response's http status code.
updateComponentResponse_httpStatus :: Lens' UpdateComponentResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateComponent.UpdateComponentResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateComponent.UpdateComponentResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateComponent.UpdateComponentResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateComponent.UpdateComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateComponent.UpdateComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.UpdateComponent.UpdateComponent


-- | Updates the monitoring configurations for the component. The
--   configuration input parameter is an escaped JSON of the configuration
--   and should match the schema of what is returned by
--   <tt>DescribeComponentConfigurationRecommendation</tt>.
module Amazonka.ApplicationInsights.UpdateComponentConfiguration

-- | <i>See:</i> <a>newUpdateComponentConfiguration</a> smart constructor.
data UpdateComponentConfiguration
UpdateComponentConfiguration' :: Maybe Text -> Maybe Bool -> Maybe Tier -> Text -> Text -> UpdateComponentConfiguration

-- | The configuration settings of the component. The value is the escaped
--   JSON of the configuration. For more information about the JSON format,
--   see <a>Working with JSON</a>. You can send a request to
--   <tt>DescribeComponentConfigurationRecommendation</tt> to see the
--   recommended configuration for a component. For the complete format of
--   the component configuration file, see <a>Component Configuration</a>.
[$sel:componentConfiguration:UpdateComponentConfiguration'] :: UpdateComponentConfiguration -> Maybe Text

-- | Indicates whether the application component is monitored.
[$sel:monitor:UpdateComponentConfiguration'] :: UpdateComponentConfiguration -> Maybe Bool

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>, <tt>DOT_NET_CORE</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
[$sel:tier:UpdateComponentConfiguration'] :: UpdateComponentConfiguration -> Maybe Tier

-- | The name of the resource group.
[$sel:resourceGroupName:UpdateComponentConfiguration'] :: UpdateComponentConfiguration -> Text

-- | The name of the component.
[$sel:componentName:UpdateComponentConfiguration'] :: UpdateComponentConfiguration -> Text

-- | Create a value of <a>UpdateComponentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentConfiguration:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_componentConfiguration</a> - The
--   configuration settings of the component. The value is the escaped JSON
--   of the configuration. For more information about the JSON format, see
--   <a>Working with JSON</a>. You can send a request to
--   <tt>DescribeComponentConfigurationRecommendation</tt> to see the
--   recommended configuration for a component. For the complete format of
--   the component configuration file, see <a>Component Configuration</a>.
--   
--   <a>$sel:monitor:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_monitor</a> - Indicates whether the
--   application component is monitored.
--   
--   <a>$sel:tier:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_tier</a> - The tier of the application
--   component. Supported tiers include <tt>DOT_NET_WORKER</tt>,
--   <tt>DOT_NET_WEB</tt>, <tt>DOT_NET_CORE</tt>, <tt>SQL_SERVER</tt>, and
--   <tt>DEFAULT</tt>.
--   
--   <a>$sel:resourceGroupName:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_resourceGroupName</a> - The name of
--   the resource group.
--   
--   <a>$sel:componentName:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_componentName</a> - The name of the
--   component.
newUpdateComponentConfiguration :: Text -> Text -> UpdateComponentConfiguration

-- | The configuration settings of the component. The value is the escaped
--   JSON of the configuration. For more information about the JSON format,
--   see <a>Working with JSON</a>. You can send a request to
--   <tt>DescribeComponentConfigurationRecommendation</tt> to see the
--   recommended configuration for a component. For the complete format of
--   the component configuration file, see <a>Component Configuration</a>.
updateComponentConfiguration_componentConfiguration :: Lens' UpdateComponentConfiguration (Maybe Text)

-- | Indicates whether the application component is monitored.
updateComponentConfiguration_monitor :: Lens' UpdateComponentConfiguration (Maybe Bool)

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>, <tt>DOT_NET_CORE</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
updateComponentConfiguration_tier :: Lens' UpdateComponentConfiguration (Maybe Tier)

-- | The name of the resource group.
updateComponentConfiguration_resourceGroupName :: Lens' UpdateComponentConfiguration Text

-- | The name of the component.
updateComponentConfiguration_componentName :: Lens' UpdateComponentConfiguration Text

-- | <i>See:</i> <a>newUpdateComponentConfigurationResponse</a> smart
--   constructor.
data UpdateComponentConfigurationResponse
UpdateComponentConfigurationResponse' :: Int -> UpdateComponentConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateComponentConfigurationResponse'] :: UpdateComponentConfigurationResponse -> Int

-- | Create a value of <a>UpdateComponentConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateComponentConfigurationResponse'</a>,
--   <a>updateComponentConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateComponentConfigurationResponse :: Int -> UpdateComponentConfigurationResponse

-- | The response's http status code.
updateComponentConfigurationResponse_httpStatus :: Lens' UpdateComponentConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfigurationResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfigurationResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfigurationResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.UpdateComponentConfiguration.UpdateComponentConfiguration


-- | Adds a log pattern to a <tt>LogPatternSet</tt>.
module Amazonka.ApplicationInsights.UpdateLogPattern

-- | <i>See:</i> <a>newUpdateLogPattern</a> smart constructor.
data UpdateLogPattern
UpdateLogPattern' :: Maybe Text -> Maybe Int -> Text -> Text -> Text -> UpdateLogPattern

-- | The log pattern. The pattern must be DFA compatible. Patterns that
--   utilize forward lookahead or backreference constructions are not
--   supported.
[$sel:pattern':UpdateLogPattern'] :: UpdateLogPattern -> Maybe Text

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
[$sel:rank:UpdateLogPattern'] :: UpdateLogPattern -> Maybe Int

-- | The name of the resource group.
[$sel:resourceGroupName:UpdateLogPattern'] :: UpdateLogPattern -> Text

-- | The name of the log pattern set.
[$sel:patternSetName:UpdateLogPattern'] :: UpdateLogPattern -> Text

-- | The name of the log pattern.
[$sel:patternName:UpdateLogPattern'] :: UpdateLogPattern -> Text

-- | Create a value of <a>UpdateLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':UpdateLogPattern'</a>,
--   <a>updateLogPattern_pattern</a> - The log pattern. The pattern must be
--   DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
--   
--   <a>$sel:rank:UpdateLogPattern'</a>, <a>updateLogPattern_rank</a> -
--   Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
--   
--   <a>$sel:resourceGroupName:UpdateLogPattern'</a>,
--   <a>updateLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:UpdateLogPattern'</a>,
--   <a>updateLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:UpdateLogPattern'</a>,
--   <a>updateLogPattern_patternName</a> - The name of the log pattern.
newUpdateLogPattern :: Text -> Text -> Text -> UpdateLogPattern

-- | The log pattern. The pattern must be DFA compatible. Patterns that
--   utilize forward lookahead or backreference constructions are not
--   supported.
updateLogPattern_pattern :: Lens' UpdateLogPattern (Maybe Text)

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
updateLogPattern_rank :: Lens' UpdateLogPattern (Maybe Int)

-- | The name of the resource group.
updateLogPattern_resourceGroupName :: Lens' UpdateLogPattern Text

-- | The name of the log pattern set.
updateLogPattern_patternSetName :: Lens' UpdateLogPattern Text

-- | The name of the log pattern.
updateLogPattern_patternName :: Lens' UpdateLogPattern Text

-- | <i>See:</i> <a>newUpdateLogPatternResponse</a> smart constructor.
data UpdateLogPatternResponse
UpdateLogPatternResponse' :: Maybe LogPattern -> Maybe Text -> Int -> UpdateLogPatternResponse

-- | The successfully created log pattern.
[$sel:logPattern:UpdateLogPatternResponse'] :: UpdateLogPatternResponse -> Maybe LogPattern

-- | The name of the resource group.
[$sel:resourceGroupName:UpdateLogPatternResponse'] :: UpdateLogPatternResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateLogPatternResponse'] :: UpdateLogPatternResponse -> Int

-- | Create a value of <a>UpdateLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPattern:UpdateLogPatternResponse'</a>,
--   <a>updateLogPatternResponse_logPattern</a> - The successfully created
--   log pattern.
--   
--   <a>$sel:resourceGroupName:UpdateLogPattern'</a>,
--   <a>updateLogPatternResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:httpStatus:UpdateLogPatternResponse'</a>,
--   <a>updateLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLogPatternResponse :: Int -> UpdateLogPatternResponse

-- | The successfully created log pattern.
updateLogPatternResponse_logPattern :: Lens' UpdateLogPatternResponse (Maybe LogPattern)

-- | The name of the resource group.
updateLogPatternResponse_resourceGroupName :: Lens' UpdateLogPatternResponse (Maybe Text)

-- | The response's http status code.
updateLogPatternResponse_httpStatus :: Lens' UpdateLogPatternResponse Int
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance GHC.Generics.Generic Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPatternResponse
instance GHC.Show.Show Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPatternResponse
instance GHC.Read.Read Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPatternResponse
instance GHC.Classes.Eq Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPatternResponse
instance Amazonka.Types.AWSRequest Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPatternResponse
instance Data.Hashable.Class.Hashable Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance Control.DeepSeq.NFData Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance Amazonka.Data.Headers.ToHeaders Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance Amazonka.Data.Path.ToPath Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern
instance Amazonka.Data.Query.ToQuery Amazonka.ApplicationInsights.UpdateLogPattern.UpdateLogPattern


module Amazonka.ApplicationInsights.Lens

-- | The name of the resource group.
describeApplication_resourceGroupName :: Lens' DescribeApplication Text

-- | Information about the application.
describeApplicationResponse_applicationInfo :: Lens' DescribeApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
describeApplicationResponse_httpStatus :: Lens' DescribeApplicationResponse Int

-- | The name of the resource group.
describeComponent_resourceGroupName :: Lens' DescribeComponent Text

-- | The name of the component.
describeComponent_componentName :: Lens' DescribeComponent Text

-- | Undocumented member.
describeComponentResponse_applicationComponent :: Lens' DescribeComponentResponse (Maybe ApplicationComponent)

-- | The list of resource ARNs that belong to the component.
describeComponentResponse_resourceList :: Lens' DescribeComponentResponse (Maybe [Text])

-- | The response's http status code.
describeComponentResponse_httpStatus :: Lens' DescribeComponentResponse Int

-- | The Amazon Resource Name (ARN) of the application that you want to
--   retrieve tag information for.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | An array that lists all the tags that are associated with the
--   application. Each tag consists of a required tag key (<tt>Key</tt>)
--   and an associated tag value (<tt>Value</tt>).
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The name of the resource group.
deleteApplication_resourceGroupName :: Lens' DeleteApplication Text

-- | The response's http status code.
deleteApplicationResponse_httpStatus :: Lens' DeleteApplicationResponse Int

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
updateApplication_cWEMonitorEnabled :: Lens' UpdateApplication (Maybe Bool)

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItem. Allows you to receive notifications for updates
--   to the opsItem.
updateApplication_opsItemSNSTopicArn :: Lens' UpdateApplication (Maybe Text)

-- | Disassociates the SNS topic from the opsItem created for detected
--   problems.
updateApplication_removeSNSTopic :: Lens' UpdateApplication (Maybe Bool)

-- | When set to <tt>true</tt>, creates opsItems for any problems detected
--   on an application.
updateApplication_opsCenterEnabled :: Lens' UpdateApplication (Maybe Bool)

-- | The name of the resource group.
updateApplication_resourceGroupName :: Lens' UpdateApplication Text

-- | Information about the application.
updateApplicationResponse_applicationInfo :: Lens' UpdateApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
updateApplicationResponse_httpStatus :: Lens' UpdateApplicationResponse Int

-- | The name of the resource group.
describeComponentConfigurationRecommendation_resourceGroupName :: Lens' DescribeComponentConfigurationRecommendation Text

-- | The name of the component.
describeComponentConfigurationRecommendation_componentName :: Lens' DescribeComponentConfigurationRecommendation Text

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
describeComponentConfigurationRecommendation_tier :: Lens' DescribeComponentConfigurationRecommendation Tier

-- | The recommended configuration settings of the component. The value is
--   the escaped JSON of the configuration.
describeComponentConfigurationRecommendationResponse_componentConfiguration :: Lens' DescribeComponentConfigurationRecommendationResponse (Maybe Text)

-- | The response's http status code.
describeComponentConfigurationRecommendationResponse_httpStatus :: Lens' DescribeComponentConfigurationRecommendationResponse Int

-- | The ID of the problem.
describeProblem_problemId :: Lens' DescribeProblem Text

-- | Information about the problem.
describeProblemResponse_problem :: Lens' DescribeProblemResponse (Maybe Problem)

-- | The response's http status code.
describeProblemResponse_httpStatus :: Lens' DescribeProblemResponse Int

-- | The configuration settings of the component. The value is the escaped
--   JSON of the configuration. For more information about the JSON format,
--   see <a>Working with JSON</a>. You can send a request to
--   <tt>DescribeComponentConfigurationRecommendation</tt> to see the
--   recommended configuration for a component. For the complete format of
--   the component configuration file, see <a>Component Configuration</a>.
updateComponentConfiguration_componentConfiguration :: Lens' UpdateComponentConfiguration (Maybe Text)

-- | Indicates whether the application component is monitored.
updateComponentConfiguration_monitor :: Lens' UpdateComponentConfiguration (Maybe Bool)

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>, <tt>DOT_NET_CORE</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
updateComponentConfiguration_tier :: Lens' UpdateComponentConfiguration (Maybe Tier)

-- | The name of the resource group.
updateComponentConfiguration_resourceGroupName :: Lens' UpdateComponentConfiguration Text

-- | The name of the component.
updateComponentConfiguration_componentName :: Lens' UpdateComponentConfiguration Text

-- | The response's http status code.
updateComponentConfigurationResponse_httpStatus :: Lens' UpdateComponentConfigurationResponse Int

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
createApplication_cWEMonitorEnabled :: Lens' CreateApplication (Maybe Bool)

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItem. Allows you to receive notifications for updates
--   to the opsItem.
createApplication_opsItemSNSTopicArn :: Lens' CreateApplication (Maybe Text)

-- | When set to <tt>true</tt>, creates opsItems for any problems detected
--   on an application.
createApplication_opsCenterEnabled :: Lens' CreateApplication (Maybe Bool)

-- | List of tags to add to the application. tag key (<tt>Key</tt>) and an
--   associated tag value (<tt>Value</tt>). The maximum length of a tag key
--   is 128 characters. The maximum length of a tag value is 256
--   characters.
createApplication_tags :: Lens' CreateApplication (Maybe [Tag])

-- | The name of the resource group.
createApplication_resourceGroupName :: Lens' CreateApplication Text

-- | Information about the application.
createApplicationResponse_applicationInfo :: Lens' CreateApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int

-- | The ID of the problem.
describeProblemObservations_problemId :: Lens' DescribeProblemObservations Text

-- | Observations related to the problem.
describeProblemObservationsResponse_relatedObservations :: Lens' DescribeProblemObservationsResponse (Maybe RelatedObservations)

-- | The response's http status code.
describeProblemObservationsResponse_httpStatus :: Lens' DescribeProblemObservationsResponse Int

-- | The ID of the observation.
describeObservation_observationId :: Lens' DescribeObservation Text

-- | Information about the observation.
describeObservationResponse_observation :: Lens' DescribeObservationResponse (Maybe Observation)

-- | The response's http status code.
describeObservationResponse_httpStatus :: Lens' DescribeObservationResponse Int

-- | The token to request the next page of results.
listLogPatternSets_nextToken :: Lens' ListLogPatternSets (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listLogPatternSets_maxResults :: Lens' ListLogPatternSets (Maybe Natural)

-- | The name of the resource group.
listLogPatternSets_resourceGroupName :: Lens' ListLogPatternSets Text

-- | The name of the resource group.
listLogPatternSetsResponse_resourceGroupName :: Lens' ListLogPatternSetsResponse (Maybe Text)

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listLogPatternSetsResponse_nextToken :: Lens' ListLogPatternSetsResponse (Maybe Text)

-- | The list of log pattern sets.
listLogPatternSetsResponse_logPatternSets :: Lens' ListLogPatternSetsResponse (Maybe [Text])

-- | The response's http status code.
listLogPatternSetsResponse_httpStatus :: Lens' ListLogPatternSetsResponse Int

-- | The name of the resource group.
describeComponentConfiguration_resourceGroupName :: Lens' DescribeComponentConfiguration Text

-- | The name of the component.
describeComponentConfiguration_componentName :: Lens' DescribeComponentConfiguration Text

-- | The configuration settings of the component. The value is the escaped
--   JSON of the configuration.
describeComponentConfigurationResponse_componentConfiguration :: Lens' DescribeComponentConfigurationResponse (Maybe Text)

-- | Indicates whether the application component is monitored.
describeComponentConfigurationResponse_monitor :: Lens' DescribeComponentConfigurationResponse (Maybe Bool)

-- | The tier of the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>
describeComponentConfigurationResponse_tier :: Lens' DescribeComponentConfigurationResponse (Maybe Tier)

-- | The response's http status code.
describeComponentConfigurationResponse_httpStatus :: Lens' DescribeComponentConfigurationResponse Int

-- | The name of the resource group.
listProblems_resourceGroupName :: Lens' ListProblems (Maybe Text)

-- | The time when the problem was detected, in epoch seconds. If you don't
--   specify a time frame for the request, problems within the past seven
--   days are returned.
listProblems_startTime :: Lens' ListProblems (Maybe UTCTime)

-- | The token to request the next page of results.
listProblems_nextToken :: Lens' ListProblems (Maybe Text)

-- | The time when the problem ended, in epoch seconds. If not specified,
--   problems within the past seven days are returned.
listProblems_endTime :: Lens' ListProblems (Maybe UTCTime)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listProblems_maxResults :: Lens' ListProblems (Maybe Natural)

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listProblemsResponse_nextToken :: Lens' ListProblemsResponse (Maybe Text)

-- | The list of problems.
listProblemsResponse_problemList :: Lens' ListProblemsResponse (Maybe [Problem])

-- | The response's http status code.
listProblemsResponse_httpStatus :: Lens' ListProblemsResponse Int

-- | The token to request the next page of results.
listLogPatterns_nextToken :: Lens' ListLogPatterns (Maybe Text)

-- | The name of the log pattern set.
listLogPatterns_patternSetName :: Lens' ListLogPatterns (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listLogPatterns_maxResults :: Lens' ListLogPatterns (Maybe Natural)

-- | The name of the resource group.
listLogPatterns_resourceGroupName :: Lens' ListLogPatterns Text

-- | The name of the resource group.
listLogPatternsResponse_resourceGroupName :: Lens' ListLogPatternsResponse (Maybe Text)

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listLogPatternsResponse_nextToken :: Lens' ListLogPatternsResponse (Maybe Text)

-- | The list of log patterns.
listLogPatternsResponse_logPatterns :: Lens' ListLogPatternsResponse (Maybe [LogPattern])

-- | The response's http status code.
listLogPatternsResponse_httpStatus :: Lens' ListLogPatternsResponse Int

-- | The name of the resource group.
deleteLogPattern_resourceGroupName :: Lens' DeleteLogPattern Text

-- | The name of the log pattern set.
deleteLogPattern_patternSetName :: Lens' DeleteLogPattern Text

-- | The name of the log pattern.
deleteLogPattern_patternName :: Lens' DeleteLogPattern Text

-- | The response's http status code.
deleteLogPatternResponse_httpStatus :: Lens' DeleteLogPatternResponse Int

-- | The log pattern. The pattern must be DFA compatible. Patterns that
--   utilize forward lookahead or backreference constructions are not
--   supported.
updateLogPattern_pattern :: Lens' UpdateLogPattern (Maybe Text)

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
updateLogPattern_rank :: Lens' UpdateLogPattern (Maybe Int)

-- | The name of the resource group.
updateLogPattern_resourceGroupName :: Lens' UpdateLogPattern Text

-- | The name of the log pattern set.
updateLogPattern_patternSetName :: Lens' UpdateLogPattern Text

-- | The name of the log pattern.
updateLogPattern_patternName :: Lens' UpdateLogPattern Text

-- | The successfully created log pattern.
updateLogPatternResponse_logPattern :: Lens' UpdateLogPatternResponse (Maybe LogPattern)

-- | The name of the resource group.
updateLogPatternResponse_resourceGroupName :: Lens' UpdateLogPatternResponse (Maybe Text)

-- | The response's http status code.
updateLogPatternResponse_httpStatus :: Lens' UpdateLogPatternResponse Int

-- | The name of the resource group.
createLogPattern_resourceGroupName :: Lens' CreateLogPattern Text

-- | The name of the log pattern set.
createLogPattern_patternSetName :: Lens' CreateLogPattern Text

-- | The name of the log pattern.
createLogPattern_patternName :: Lens' CreateLogPattern Text

-- | The log pattern. The pattern must be DFA compatible. Patterns that
--   utilize forward lookahead or backreference constructions are not
--   supported.
createLogPattern_pattern :: Lens' CreateLogPattern Text

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
createLogPattern_rank :: Lens' CreateLogPattern Int

-- | The successfully created log pattern.
createLogPatternResponse_logPattern :: Lens' CreateLogPatternResponse (Maybe LogPattern)

-- | The name of the resource group.
createLogPatternResponse_resourceGroupName :: Lens' CreateLogPatternResponse (Maybe Text)

-- | The response's http status code.
createLogPatternResponse_httpStatus :: Lens' CreateLogPatternResponse Int

-- | Resource group to which the application belongs.
listConfigurationHistory_resourceGroupName :: Lens' ListConfigurationHistory (Maybe Text)

-- | The start time of the event.
listConfigurationHistory_startTime :: Lens' ListConfigurationHistory (Maybe UTCTime)

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
listConfigurationHistory_eventStatus :: Lens' ListConfigurationHistory (Maybe ConfigurationEventStatus)

-- | The <tt>NextToken</tt> value returned from a previous paginated
--   <tt>ListConfigurationHistory</tt> request where <tt>MaxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>NextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
listConfigurationHistory_nextToken :: Lens' ListConfigurationHistory (Maybe Text)

-- | The end time of the event.
listConfigurationHistory_endTime :: Lens' ListConfigurationHistory (Maybe UTCTime)

-- | The maximum number of results returned by
--   <tt>ListConfigurationHistory</tt> in paginated output. When this
--   parameter is used, <tt>ListConfigurationHistory</tt> returns only
--   <tt>MaxResults</tt> in a single page along with a <tt>NextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListConfigurationHistory</tt> request with
--   the returned <tt>NextToken</tt> value. If this parameter is not used,
--   then <tt>ListConfigurationHistory</tt> returns all results.
listConfigurationHistory_maxResults :: Lens' ListConfigurationHistory (Maybe Natural)

-- | The <tt>NextToken</tt> value to include in a future
--   <tt>ListConfigurationHistory</tt> request. When the results of a
--   <tt>ListConfigurationHistory</tt> request exceed <tt>MaxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
listConfigurationHistoryResponse_nextToken :: Lens' ListConfigurationHistoryResponse (Maybe Text)

-- | The list of configuration events and their corresponding details.
listConfigurationHistoryResponse_eventList :: Lens' ListConfigurationHistoryResponse (Maybe [ConfigurationEvent])

-- | The response's http status code.
listConfigurationHistoryResponse_httpStatus :: Lens' ListConfigurationHistoryResponse Int

-- | The Amazon Resource Name (ARN) of the application that you want to add
--   one or more tags to.
tagResource_resourceARN :: Lens' TagResource Text

-- | A list of tags that to add to the application. A tag consists of a
--   required tag key (<tt>Key</tt>) and an associated tag value
--   (<tt>Value</tt>). The maximum length of a tag key is 128 characters.
--   The maximum length of a tag value is 256 characters.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The token to request the next page of results.
listApplications_nextToken :: Lens' ListApplications (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listApplications_maxResults :: Lens' ListApplications (Maybe Natural)

-- | The token used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listApplicationsResponse_nextToken :: Lens' ListApplicationsResponse (Maybe Text)

-- | The list of applications.
listApplicationsResponse_applicationInfoList :: Lens' ListApplicationsResponse (Maybe [ApplicationInfo])

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int

-- | The Amazon Resource Name (ARN) of the application that you want to
--   remove one or more tags from.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The tags (tag keys) that you want to remove from the resource. When
--   you specify a tag key, the action removes both that key and its
--   associated tag value.
--   
--   To remove more than one tag from the application, append the
--   <tt>TagKeys</tt> parameter and argument for each additional tag to
--   remove, separated by an ampersand.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The name of the resource group.
createComponent_resourceGroupName :: Lens' CreateComponent Text

-- | The name of the component.
createComponent_componentName :: Lens' CreateComponent Text

-- | The list of resource ARNs that belong to the component.
createComponent_resourceList :: Lens' CreateComponent [Text]

-- | The response's http status code.
createComponentResponse_httpStatus :: Lens' CreateComponentResponse Int

-- | The token to request the next page of results.
listComponents_nextToken :: Lens' ListComponents (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
listComponents_maxResults :: Lens' ListComponents (Maybe Natural)

-- | The name of the resource group.
listComponents_resourceGroupName :: Lens' ListComponents Text

-- | The list of application components.
listComponentsResponse_applicationComponentList :: Lens' ListComponentsResponse (Maybe [ApplicationComponent])

-- | The token to request the next page of results.
listComponentsResponse_nextToken :: Lens' ListComponentsResponse (Maybe Text)

-- | The response's http status code.
listComponentsResponse_httpStatus :: Lens' ListComponentsResponse Int

-- | The name of the resource group.
deleteComponent_resourceGroupName :: Lens' DeleteComponent Text

-- | The name of the component.
deleteComponent_componentName :: Lens' DeleteComponent Text

-- | The response's http status code.
deleteComponentResponse_httpStatus :: Lens' DeleteComponentResponse Int

-- | The new name of the component.
updateComponent_newComponentName :: Lens' UpdateComponent (Maybe Text)

-- | The list of resource ARNs that belong to the component.
updateComponent_resourceList :: Lens' UpdateComponent (Maybe [Text])

-- | The name of the resource group.
updateComponent_resourceGroupName :: Lens' UpdateComponent Text

-- | The name of the component.
updateComponent_componentName :: Lens' UpdateComponent Text

-- | The response's http status code.
updateComponentResponse_httpStatus :: Lens' UpdateComponentResponse Int

-- | The name of the resource group.
describeLogPattern_resourceGroupName :: Lens' DescribeLogPattern Text

-- | The name of the log pattern set.
describeLogPattern_patternSetName :: Lens' DescribeLogPattern Text

-- | The name of the log pattern.
describeLogPattern_patternName :: Lens' DescribeLogPattern Text

-- | The successfully created log pattern.
describeLogPatternResponse_logPattern :: Lens' DescribeLogPatternResponse (Maybe LogPattern)

-- | The name of the resource group.
describeLogPatternResponse_resourceGroupName :: Lens' DescribeLogPatternResponse (Maybe Text)

-- | The response's http status code.
describeLogPatternResponse_httpStatus :: Lens' DescribeLogPatternResponse Int

-- | The operating system of the component.
applicationComponent_osType :: Lens' ApplicationComponent (Maybe OsType)

-- | The resource type. Supported resource types include EC2 instances,
--   Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.
applicationComponent_resourceType :: Lens' ApplicationComponent (Maybe Text)

-- | Workloads detected in the application component.
applicationComponent_detectedWorkload :: Lens' ApplicationComponent (Maybe (HashMap Tier (HashMap Text Text)))

-- | Indicates whether the application component is monitored.
applicationComponent_monitor :: Lens' ApplicationComponent (Maybe Bool)

-- | The stack tier of the application component.
applicationComponent_tier :: Lens' ApplicationComponent (Maybe Tier)

-- | The name of the component.
applicationComponent_componentName :: Lens' ApplicationComponent (Maybe Text)

-- | If logging is supported for the resource type, indicates whether the
--   component has configured logs to be monitored.
applicationComponent_componentRemarks :: Lens' ApplicationComponent (Maybe Text)

-- | The name of the resource group used for the application.
applicationInfo_resourceGroupName :: Lens' ApplicationInfo (Maybe Text)

-- | Indicates whether Application Insights can listen to CloudWatch events
--   for the application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
applicationInfo_cWEMonitorEnabled :: Lens' ApplicationInfo (Maybe Bool)

-- | The SNS topic provided to Application Insights that is associated to
--   the created opsItems to receive SNS notifications for opsItem updates.
applicationInfo_opsItemSNSTopicArn :: Lens' ApplicationInfo (Maybe Text)

-- | The lifecycle of the application.
applicationInfo_lifeCycle :: Lens' ApplicationInfo (Maybe Text)

-- | Indicates whether Application Insights will create opsItems for any
--   problem detected by Application Insights for an application.
applicationInfo_opsCenterEnabled :: Lens' ApplicationInfo (Maybe Bool)

-- | The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
applicationInfo_remarks :: Lens' ApplicationInfo (Maybe Text)

-- | The resource monitored by Application Insights.
configurationEvent_monitoredResourceARN :: Lens' ConfigurationEvent (Maybe Text)

-- | The status of the configuration update event. Possible values include
--   INFO, WARN, and ERROR.
configurationEvent_eventStatus :: Lens' ConfigurationEvent (Maybe ConfigurationEventStatus)

-- | The name of the resource Application Insights attempted to configure.
configurationEvent_eventResourceName :: Lens' ConfigurationEvent (Maybe Text)

-- | The timestamp of the event.
configurationEvent_eventTime :: Lens' ConfigurationEvent (Maybe UTCTime)

-- | The details of the event in plain text.
configurationEvent_eventDetail :: Lens' ConfigurationEvent (Maybe Text)

-- | The resource type that Application Insights attempted to configure,
--   for example, CLOUDWATCH_ALARM.
configurationEvent_eventResourceType :: Lens' ConfigurationEvent (Maybe ConfigurationEventResourceType)

-- | A regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
logPattern_pattern :: Lens' LogPattern (Maybe Text)

-- | The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
logPattern_patternName :: Lens' LogPattern (Maybe Text)

-- | The name of the log pattern. A log pattern name can contain as many as
--   30 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
logPattern_patternSetName :: Lens' LogPattern (Maybe Text)

-- | Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
logPattern_rank :: Lens' LogPattern (Maybe Int)

-- | The CodeDeploy application to which the deployment belongs.
observation_codeDeployApplication :: Lens' Observation (Maybe Text)

-- | The message of an RDS event.
observation_rdsEventMessage :: Lens' Observation (Maybe Text)

-- | The deployment ID of the CodeDeploy-based observation related to the
--   detected problem.
observation_codeDeployDeploymentId :: Lens' Observation (Maybe Text)

-- | The time when the observation was first detected, in epoch seconds.
observation_startTime :: Lens' Observation (Maybe UTCTime)

-- | The source type of the observation.
observation_sourceType :: Lens' Observation (Maybe Text)

-- | The source resource ARN of the observation.
observation_sourceARN :: Lens' Observation (Maybe Text)

-- | The X-Ray node request average latency for this node.
observation_xRayRequestAverageLatency :: Lens' Observation (Maybe Integer)

-- | The status of the step function-related observation.
observation_statesStatus :: Lens' Observation (Maybe Text)

-- | The deployment group to which the CodeDeploy deployment belongs.
observation_codeDeployDeploymentGroup :: Lens' Observation (Maybe Text)

-- | The category of the AWS Health event, such as <tt>issue</tt>.
observation_healthEventTypeCategory :: Lens' Observation (Maybe Text)

-- | The X-Ray request count for this node.
observation_xRayRequestCount :: Lens' Observation (Maybe Int)

-- | The name of the S3 CloudWatch Event-based observation.
observation_s3EventName :: Lens' Observation (Maybe Text)

-- | The name of the observation metric.
observation_metricName :: Lens' Observation (Maybe Text)

-- | The state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
observation_ec2State :: Lens' Observation (Maybe Text)

-- | The log group name.
observation_logGroup :: Lens' Observation (Maybe Text)

-- | The value of the source observation metric.
observation_value :: Lens' Observation (Maybe Double)

-- | The description of the AWS Health event provided by the service, such
--   as Amazon EC2.
observation_healthEventDescription :: Lens' Observation (Maybe Text)

-- | The source of the CloudWatch Event.
observation_cloudWatchEventSource :: Lens' Observation (Maybe CloudWatchEventSource)

-- | The status of the CodeDeploy deployment, for example <tt>SUCCESS</tt>
--   or <tt> FAILURE</tt>.
observation_codeDeployState :: Lens' Observation (Maybe Text)

-- | The X-Ray request error percentage for this node.
observation_xRayErrorPercent :: Lens' Observation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the step function-based observation.
observation_statesArn :: Lens' Observation (Maybe Text)

-- | The ID of the CloudWatch Event-based observation related to the
--   detected problem.
observation_cloudWatchEventId :: Lens' Observation (Maybe Text)

-- | The log text of the observation.
observation_logText :: Lens' Observation (Maybe Text)

-- | The log filter of the observation.
observation_logFilter :: Lens' Observation (Maybe LogFilter)

-- | The namespace of the observation metric.
observation_metricNamespace :: Lens' Observation (Maybe Text)

-- | The category of an RDS event.
observation_rdsEventCategories :: Lens' Observation (Maybe Text)

-- | The type of the X-Ray node.
observation_xRayNodeType :: Lens' Observation (Maybe Text)

-- | The time when the observation ended, in epoch seconds.
observation_endTime :: Lens' Observation (Maybe UTCTime)

-- | The input to the step function-based observation.
observation_statesInput :: Lens' Observation (Maybe Text)

-- | The name of the X-Ray node.
observation_xRayNodeName :: Lens' Observation (Maybe Text)

-- | The ID of the observation type.
observation_id :: Lens' Observation (Maybe Text)

-- | The Amazon Resource Name (ARN) of the AWS Health Event-based
--   observation.
observation_healthEventArn :: Lens' Observation (Maybe Text)

-- | The type of the AWS Health event, for example,
--   <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
observation_healthEventTypeCode :: Lens' Observation (Maybe Text)

-- | The result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
observation_ebsResult :: Lens' Observation (Maybe Text)

-- | The detail type of the CloudWatch Event-based observation, for
--   example, <tt>EC2 Instance State-change Notification</tt>.
observation_cloudWatchEventDetailType :: Lens' Observation (Maybe Text)

-- | The instance group to which the CodeDeploy instance belongs.
observation_codeDeployInstanceGroupId :: Lens' Observation (Maybe Text)

-- | The cause of an EBS CloudWatch event.
observation_ebsCause :: Lens' Observation (Maybe Text)

-- | The type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
observation_ebsEvent :: Lens' Observation (Maybe Text)

-- | The request ID of an EBS CloudWatch event.
observation_ebsRequestId :: Lens' Observation (Maybe Text)

-- | The X-Ray request fault percentage for this node.
observation_xRayFaultPercent :: Lens' Observation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the step function execution-based
--   observation.
observation_statesExecutionArn :: Lens' Observation (Maybe Text)

-- | The timestamp in the CloudWatch Logs that specifies when the matched
--   line occurred.
observation_lineTime :: Lens' Observation (Maybe UTCTime)

-- | The unit of the source observation metric.
observation_unit :: Lens' Observation (Maybe Text)

-- | The X-Ray request throttle percentage for this node.
observation_xRayThrottlePercent :: Lens' Observation (Maybe Int)

-- | The service to which the AWS Health Event belongs, such as EC2.
observation_healthService :: Lens' Observation (Maybe Text)

-- | The status of the problem.
problem_status :: Lens' Problem (Maybe Status)

-- | The name of the resource group affected by the problem.
problem_resourceGroupName :: Lens' Problem (Maybe Text)

-- | The time when the problem started, in epoch seconds.
problem_startTime :: Lens' Problem (Maybe UTCTime)

-- | A detailed analysis of the problem using machine learning.
problem_insights :: Lens' Problem (Maybe Text)

-- | The time when the problem ended, in epoch seconds.
problem_endTime :: Lens' Problem (Maybe UTCTime)

-- | The ID of the problem.
problem_id :: Lens' Problem (Maybe Text)

-- | A measure of the level of impact of the problem.
problem_severityLevel :: Lens' Problem (Maybe SeverityLevel)

-- | The name of the problem.
problem_title :: Lens' Problem (Maybe Text)

-- | The resource affected by the problem.
problem_affectedResource :: Lens' Problem (Maybe Text)

-- | Feedback provided by the user about the problem.
problem_feedback :: Lens' Problem (Maybe (HashMap FeedbackKey FeedbackValue))

-- | The list of observations related to the problem.
relatedObservations_observationList :: Lens' RelatedObservations (Maybe [Observation])

-- | One part of a key-value pair that defines a tag. The maximum length of
--   a tag key is 128 characters. The minimum length is 1 character.
tag_key :: Lens' Tag Text

-- | The optional part of a key-value pair that defines a tag. The maximum
--   length of a tag value is 256 characters. The minimum length is 0
--   characters. If you don't want an application to have a specific tag
--   value, don't specify a value for this parameter.
tag_value :: Lens' Tag Text


module Amazonka.ApplicationInsights.Waiters


-- | Derived from API version <tt>2018-11-25</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon CloudWatch Application Insights
--   
--   Amazon CloudWatch Application Insights is a service that helps you
--   detect common problems with your applications. It enables you to
--   pinpoint the source of issues in your applications (built with
--   technologies such as Microsoft IIS, .NET, and Microsoft SQL Server),
--   by providing key insights into detected problems.
--   
--   After you onboard your application, CloudWatch Application Insights
--   identifies, recommends, and sets up metrics and logs. It continuously
--   analyzes and correlates your metrics and logs for unusual behavior to
--   surface actionable problems with your application. For example, if
--   your application is slow and unresponsive and leading to HTTP 500
--   errors in your Application Load Balancer (ALB), Application Insights
--   informs you that a memory pressure problem with your SQL Server
--   database is occurring. It bases this analysis on impactful metrics and
--   log errors.
module Amazonka.ApplicationInsights

-- | API version <tt>2018-11-25</tt> of the Amazon CloudWatch Application
--   Insights SDK configuration.
defaultService :: Service

-- | The parameter is not valid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | User does not have permissions to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Tags are already registered for the specified application ARN.
_TagsAlreadyExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of the provided tags is beyond the limit, or the number of
--   total tags you are trying to attach to the specified resource exceeds
--   the limit.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The server encountered an internal error and is unable to complete the
--   request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource does not exist in the customer account.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is not understood by the server.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is already created or in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeApplication</a> smart constructor.
data DescribeApplication
DescribeApplication' :: Text -> DescribeApplication

-- | Create a value of <a>DescribeApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeApplication'</a>,
--   <a>describeApplication_resourceGroupName</a> - The name of the
--   resource group.
newDescribeApplication :: Text -> DescribeApplication

-- | <i>See:</i> <a>newDescribeApplicationResponse</a> smart constructor.
data DescribeApplicationResponse
DescribeApplicationResponse' :: Maybe ApplicationInfo -> Int -> DescribeApplicationResponse

-- | Create a value of <a>DescribeApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInfo:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_applicationInfo</a> - Information about
--   the application.
--   
--   <a>$sel:httpStatus:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeApplicationResponse :: Int -> DescribeApplicationResponse

-- | <i>See:</i> <a>newDescribeComponent</a> smart constructor.
data DescribeComponent
DescribeComponent' :: Text -> Text -> DescribeComponent

-- | Create a value of <a>DescribeComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeComponent'</a>,
--   <a>describeComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:DescribeComponent'</a>,
--   <a>describeComponent_componentName</a> - The name of the component.
newDescribeComponent :: Text -> Text -> DescribeComponent

-- | <i>See:</i> <a>newDescribeComponentResponse</a> smart constructor.
data DescribeComponentResponse
DescribeComponentResponse' :: Maybe ApplicationComponent -> Maybe [Text] -> Int -> DescribeComponentResponse

-- | Create a value of <a>DescribeComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationComponent:DescribeComponentResponse'</a>,
--   <a>describeComponentResponse_applicationComponent</a> - Undocumented
--   member.
--   
--   <a>$sel:resourceList:DescribeComponentResponse'</a>,
--   <a>describeComponentResponse_resourceList</a> - The list of resource
--   ARNs that belong to the component.
--   
--   <a>$sel:httpStatus:DescribeComponentResponse'</a>,
--   <a>describeComponentResponse_httpStatus</a> - The response's http
--   status code.
newDescribeComponentResponse :: Int -> DescribeComponentResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (ARN) of the application that you want to retrieve tag information
--   for.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - An array that lists all the
--   tags that are associated with the application. Each tag consists of a
--   required tag key (<tt>Key</tt>) and an associated tag value
--   (<tt>Value</tt>).
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> DeleteApplication

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DeleteApplication'</a>,
--   <a>deleteApplication_resourceGroupName</a> - The name of the resource
--   group.
newDeleteApplication :: Text -> DeleteApplication

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: Int -> DeleteApplicationResponse

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationResponse'</a>,
--   <a>deleteApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApplicationResponse :: Int -> DeleteApplicationResponse

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Bool -> Text -> UpdateApplication

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cWEMonitorEnabled:UpdateApplication'</a>,
--   <a>updateApplication_cWEMonitorEnabled</a> - Indicates whether
--   Application Insights can listen to CloudWatch events for the
--   application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
--   
--   <a>$sel:opsItemSNSTopicArn:UpdateApplication'</a>,
--   <a>updateApplication_opsItemSNSTopicArn</a> - The SNS topic provided
--   to Application Insights that is associated to the created opsItem.
--   Allows you to receive notifications for updates to the opsItem.
--   
--   <a>$sel:removeSNSTopic:UpdateApplication'</a>,
--   <a>updateApplication_removeSNSTopic</a> - Disassociates the SNS topic
--   from the opsItem created for detected problems.
--   
--   <a>$sel:opsCenterEnabled:UpdateApplication'</a>,
--   <a>updateApplication_opsCenterEnabled</a> - When set to <tt>true</tt>,
--   creates opsItems for any problems detected on an application.
--   
--   <a>$sel:resourceGroupName:UpdateApplication'</a>,
--   <a>updateApplication_resourceGroupName</a> - The name of the resource
--   group.
newUpdateApplication :: Text -> UpdateApplication

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: Maybe ApplicationInfo -> Int -> UpdateApplicationResponse

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInfo:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_applicationInfo</a> - Information about
--   the application.
--   
--   <a>$sel:httpStatus:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApplicationResponse :: Int -> UpdateApplicationResponse

-- | <i>See:</i> <a>newDescribeComponentConfigurationRecommendation</a>
--   smart constructor.
data DescribeComponentConfigurationRecommendation
DescribeComponentConfigurationRecommendation' :: Text -> Text -> Tier -> DescribeComponentConfigurationRecommendation

-- | Create a value of <a>DescribeComponentConfigurationRecommendation</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resourceGroupName:DescribeComponentConfigurationRecommendation'</a>,
--   <a>describeComponentConfigurationRecommendation_resourceGroupName</a>
--   - The name of the resource group.
--   
--   
--   <a>$sel:componentName:DescribeComponentConfigurationRecommendation'</a>,
--   <a>describeComponentConfigurationRecommendation_componentName</a> -
--   The name of the component.
--   
--   <a>$sel:tier:DescribeComponentConfigurationRecommendation'</a>,
--   <a>describeComponentConfigurationRecommendation_tier</a> - The tier of
--   the application component. Supported tiers include
--   <tt>DOT_NET_CORE</tt>, <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>,
--   <tt>SQL_SERVER</tt>, and <tt>DEFAULT</tt>.
newDescribeComponentConfigurationRecommendation :: Text -> Text -> Tier -> DescribeComponentConfigurationRecommendation

-- | <i>See:</i>
--   <a>newDescribeComponentConfigurationRecommendationResponse</a> smart
--   constructor.
data DescribeComponentConfigurationRecommendationResponse
DescribeComponentConfigurationRecommendationResponse' :: Maybe Text -> Int -> DescribeComponentConfigurationRecommendationResponse

-- | Create a value of
--   <a>DescribeComponentConfigurationRecommendationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:componentConfiguration:DescribeComponentConfigurationRecommendationResponse'</a>,
--   <a>describeComponentConfigurationRecommendationResponse_componentConfiguration</a>
--   - The recommended configuration settings of the component. The value
--   is the escaped JSON of the configuration.
--   
--   
--   <a>$sel:httpStatus:DescribeComponentConfigurationRecommendationResponse'</a>,
--   <a>describeComponentConfigurationRecommendationResponse_httpStatus</a>
--   - The response's http status code.
newDescribeComponentConfigurationRecommendationResponse :: Int -> DescribeComponentConfigurationRecommendationResponse

-- | <i>See:</i> <a>newDescribeProblem</a> smart constructor.
data DescribeProblem
DescribeProblem' :: Text -> DescribeProblem

-- | Create a value of <a>DescribeProblem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:problemId:DescribeProblem'</a>,
--   <a>describeProblem_problemId</a> - The ID of the problem.
newDescribeProblem :: Text -> DescribeProblem

-- | <i>See:</i> <a>newDescribeProblemResponse</a> smart constructor.
data DescribeProblemResponse
DescribeProblemResponse' :: Maybe Problem -> Int -> DescribeProblemResponse

-- | Create a value of <a>DescribeProblemResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:problem:DescribeProblemResponse'</a>,
--   <a>describeProblemResponse_problem</a> - Information about the
--   problem.
--   
--   <a>$sel:httpStatus:DescribeProblemResponse'</a>,
--   <a>describeProblemResponse_httpStatus</a> - The response's http status
--   code.
newDescribeProblemResponse :: Int -> DescribeProblemResponse

-- | <i>See:</i> <a>newUpdateComponentConfiguration</a> smart constructor.
data UpdateComponentConfiguration
UpdateComponentConfiguration' :: Maybe Text -> Maybe Bool -> Maybe Tier -> Text -> Text -> UpdateComponentConfiguration

-- | Create a value of <a>UpdateComponentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentConfiguration:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_componentConfiguration</a> - The
--   configuration settings of the component. The value is the escaped JSON
--   of the configuration. For more information about the JSON format, see
--   <a>Working with JSON</a>. You can send a request to
--   <tt>DescribeComponentConfigurationRecommendation</tt> to see the
--   recommended configuration for a component. For the complete format of
--   the component configuration file, see <a>Component Configuration</a>.
--   
--   <a>$sel:monitor:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_monitor</a> - Indicates whether the
--   application component is monitored.
--   
--   <a>$sel:tier:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_tier</a> - The tier of the application
--   component. Supported tiers include <tt>DOT_NET_WORKER</tt>,
--   <tt>DOT_NET_WEB</tt>, <tt>DOT_NET_CORE</tt>, <tt>SQL_SERVER</tt>, and
--   <tt>DEFAULT</tt>.
--   
--   <a>$sel:resourceGroupName:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_resourceGroupName</a> - The name of
--   the resource group.
--   
--   <a>$sel:componentName:UpdateComponentConfiguration'</a>,
--   <a>updateComponentConfiguration_componentName</a> - The name of the
--   component.
newUpdateComponentConfiguration :: Text -> Text -> UpdateComponentConfiguration

-- | <i>See:</i> <a>newUpdateComponentConfigurationResponse</a> smart
--   constructor.
data UpdateComponentConfigurationResponse
UpdateComponentConfigurationResponse' :: Int -> UpdateComponentConfigurationResponse

-- | Create a value of <a>UpdateComponentConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateComponentConfigurationResponse'</a>,
--   <a>updateComponentConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateComponentConfigurationResponse :: Int -> UpdateComponentConfigurationResponse

-- | <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe [Tag] -> Text -> CreateApplication

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cWEMonitorEnabled:CreateApplication'</a>,
--   <a>createApplication_cWEMonitorEnabled</a> - Indicates whether
--   Application Insights can listen to CloudWatch events for the
--   application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
--   
--   <a>$sel:opsItemSNSTopicArn:CreateApplication'</a>,
--   <a>createApplication_opsItemSNSTopicArn</a> - The SNS topic provided
--   to Application Insights that is associated to the created opsItem.
--   Allows you to receive notifications for updates to the opsItem.
--   
--   <a>$sel:opsCenterEnabled:CreateApplication'</a>,
--   <a>createApplication_opsCenterEnabled</a> - When set to <tt>true</tt>,
--   creates opsItems for any problems detected on an application.
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> -
--   List of tags to add to the application. tag key (<tt>Key</tt>) and an
--   associated tag value (<tt>Value</tt>). The maximum length of a tag key
--   is 128 characters. The maximum length of a tag value is 256
--   characters.
--   
--   <a>$sel:resourceGroupName:CreateApplication'</a>,
--   <a>createApplication_resourceGroupName</a> - The name of the resource
--   group.
newCreateApplication :: Text -> CreateApplication

-- | <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Maybe ApplicationInfo -> Int -> CreateApplicationResponse

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInfo:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_applicationInfo</a> - Information about
--   the application.
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApplicationResponse :: Int -> CreateApplicationResponse

-- | <i>See:</i> <a>newDescribeProblemObservations</a> smart constructor.
data DescribeProblemObservations
DescribeProblemObservations' :: Text -> DescribeProblemObservations

-- | Create a value of <a>DescribeProblemObservations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:problemId:DescribeProblemObservations'</a>,
--   <a>describeProblemObservations_problemId</a> - The ID of the problem.
newDescribeProblemObservations :: Text -> DescribeProblemObservations

-- | <i>See:</i> <a>newDescribeProblemObservationsResponse</a> smart
--   constructor.
data DescribeProblemObservationsResponse
DescribeProblemObservationsResponse' :: Maybe RelatedObservations -> Int -> DescribeProblemObservationsResponse

-- | Create a value of <a>DescribeProblemObservationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relatedObservations:DescribeProblemObservationsResponse'</a>,
--   <a>describeProblemObservationsResponse_relatedObservations</a> -
--   Observations related to the problem.
--   
--   <a>$sel:httpStatus:DescribeProblemObservationsResponse'</a>,
--   <a>describeProblemObservationsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeProblemObservationsResponse :: Int -> DescribeProblemObservationsResponse

-- | <i>See:</i> <a>newDescribeObservation</a> smart constructor.
data DescribeObservation
DescribeObservation' :: Text -> DescribeObservation

-- | Create a value of <a>DescribeObservation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:observationId:DescribeObservation'</a>,
--   <a>describeObservation_observationId</a> - The ID of the observation.
newDescribeObservation :: Text -> DescribeObservation

-- | <i>See:</i> <a>newDescribeObservationResponse</a> smart constructor.
data DescribeObservationResponse
DescribeObservationResponse' :: Maybe Observation -> Int -> DescribeObservationResponse

-- | Create a value of <a>DescribeObservationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:observation:DescribeObservationResponse'</a>,
--   <a>describeObservationResponse_observation</a> - Information about the
--   observation.
--   
--   <a>$sel:httpStatus:DescribeObservationResponse'</a>,
--   <a>describeObservationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeObservationResponse :: Int -> DescribeObservationResponse

-- | <i>See:</i> <a>newListLogPatternSets</a> smart constructor.
data ListLogPatternSets
ListLogPatternSets' :: Maybe Text -> Maybe Natural -> Text -> ListLogPatternSets

-- | Create a value of <a>ListLogPatternSets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLogPatternSets'</a>,
--   <a>listLogPatternSets_nextToken</a> - The token to request the next
--   page of results.
--   
--   <a>$sel:maxResults:ListLogPatternSets'</a>,
--   <a>listLogPatternSets_maxResults</a> - The maximum number of results
--   to return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
--   
--   <a>$sel:resourceGroupName:ListLogPatternSets'</a>,
--   <a>listLogPatternSets_resourceGroupName</a> - The name of the resource
--   group.
newListLogPatternSets :: Text -> ListLogPatternSets

-- | <i>See:</i> <a>newListLogPatternSetsResponse</a> smart constructor.
data ListLogPatternSetsResponse
ListLogPatternSetsResponse' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Int -> ListLogPatternSetsResponse

-- | Create a value of <a>ListLogPatternSetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListLogPatternSets'</a>,
--   <a>listLogPatternSetsResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:nextToken:ListLogPatternSets'</a>,
--   <a>listLogPatternSetsResponse_nextToken</a> - The token used to
--   retrieve the next page of results. This value is <tt>null</tt> when
--   there are no more results to return.
--   
--   <a>$sel:logPatternSets:ListLogPatternSetsResponse'</a>,
--   <a>listLogPatternSetsResponse_logPatternSets</a> - The list of log
--   pattern sets.
--   
--   <a>$sel:httpStatus:ListLogPatternSetsResponse'</a>,
--   <a>listLogPatternSetsResponse_httpStatus</a> - The response's http
--   status code.
newListLogPatternSetsResponse :: Int -> ListLogPatternSetsResponse

-- | <i>See:</i> <a>newDescribeComponentConfiguration</a> smart
--   constructor.
data DescribeComponentConfiguration
DescribeComponentConfiguration' :: Text -> Text -> DescribeComponentConfiguration

-- | Create a value of <a>DescribeComponentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeComponentConfiguration'</a>,
--   <a>describeComponentConfiguration_resourceGroupName</a> - The name of
--   the resource group.
--   
--   <a>$sel:componentName:DescribeComponentConfiguration'</a>,
--   <a>describeComponentConfiguration_componentName</a> - The name of the
--   component.
newDescribeComponentConfiguration :: Text -> Text -> DescribeComponentConfiguration

-- | <i>See:</i> <a>newDescribeComponentConfigurationResponse</a> smart
--   constructor.
data DescribeComponentConfigurationResponse
DescribeComponentConfigurationResponse' :: Maybe Text -> Maybe Bool -> Maybe Tier -> Int -> DescribeComponentConfigurationResponse

-- | Create a value of <a>DescribeComponentConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:componentConfiguration:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_componentConfiguration</a> -
--   The configuration settings of the component. The value is the escaped
--   JSON of the configuration.
--   
--   <a>$sel:monitor:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_monitor</a> - Indicates
--   whether the application component is monitored.
--   
--   <a>$sel:tier:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_tier</a> - The tier of the
--   application component. Supported tiers include <tt>DOT_NET_CORE</tt>,
--   <tt>DOT_NET_WORKER</tt>, <tt>DOT_NET_WEB</tt>, <tt>SQL_SERVER</tt>,
--   and <tt>DEFAULT</tt>
--   
--   <a>$sel:httpStatus:DescribeComponentConfigurationResponse'</a>,
--   <a>describeComponentConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeComponentConfigurationResponse :: Int -> DescribeComponentConfigurationResponse

-- | <i>See:</i> <a>newListProblems</a> smart constructor.
data ListProblems
ListProblems' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Natural -> ListProblems

-- | Create a value of <a>ListProblems</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListProblems'</a>,
--   <a>listProblems_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:startTime:ListProblems'</a>, <a>listProblems_startTime</a> -
--   The time when the problem was detected, in epoch seconds. If you don't
--   specify a time frame for the request, problems within the past seven
--   days are returned.
--   
--   <a>$sel:nextToken:ListProblems'</a>, <a>listProblems_nextToken</a> -
--   The token to request the next page of results.
--   
--   <a>$sel:endTime:ListProblems'</a>, <a>listProblems_endTime</a> - The
--   time when the problem ended, in epoch seconds. If not specified,
--   problems within the past seven days are returned.
--   
--   <a>$sel:maxResults:ListProblems'</a>, <a>listProblems_maxResults</a> -
--   The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
newListProblems :: ListProblems

-- | <i>See:</i> <a>newListProblemsResponse</a> smart constructor.
data ListProblemsResponse
ListProblemsResponse' :: Maybe Text -> Maybe [Problem] -> Int -> ListProblemsResponse

-- | Create a value of <a>ListProblemsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProblems'</a>,
--   <a>listProblemsResponse_nextToken</a> - The token used to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
--   
--   <a>$sel:problemList:ListProblemsResponse'</a>,
--   <a>listProblemsResponse_problemList</a> - The list of problems.
--   
--   <a>$sel:httpStatus:ListProblemsResponse'</a>,
--   <a>listProblemsResponse_httpStatus</a> - The response's http status
--   code.
newListProblemsResponse :: Int -> ListProblemsResponse

-- | <i>See:</i> <a>newListLogPatterns</a> smart constructor.
data ListLogPatterns
ListLogPatterns' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListLogPatterns

-- | Create a value of <a>ListLogPatterns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLogPatterns'</a>,
--   <a>listLogPatterns_nextToken</a> - The token to request the next page
--   of results.
--   
--   <a>$sel:patternSetName:ListLogPatterns'</a>,
--   <a>listLogPatterns_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:maxResults:ListLogPatterns'</a>,
--   <a>listLogPatterns_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
--   
--   <a>$sel:resourceGroupName:ListLogPatterns'</a>,
--   <a>listLogPatterns_resourceGroupName</a> - The name of the resource
--   group.
newListLogPatterns :: Text -> ListLogPatterns

-- | <i>See:</i> <a>newListLogPatternsResponse</a> smart constructor.
data ListLogPatternsResponse
ListLogPatternsResponse' :: Maybe Text -> Maybe Text -> Maybe [LogPattern] -> Int -> ListLogPatternsResponse

-- | Create a value of <a>ListLogPatternsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListLogPatterns'</a>,
--   <a>listLogPatternsResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:nextToken:ListLogPatterns'</a>,
--   <a>listLogPatternsResponse_nextToken</a> - The token used to retrieve
--   the next page of results. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   <a>$sel:logPatterns:ListLogPatternsResponse'</a>,
--   <a>listLogPatternsResponse_logPatterns</a> - The list of log patterns.
--   
--   <a>$sel:httpStatus:ListLogPatternsResponse'</a>,
--   <a>listLogPatternsResponse_httpStatus</a> - The response's http status
--   code.
newListLogPatternsResponse :: Int -> ListLogPatternsResponse

-- | <i>See:</i> <a>newDeleteLogPattern</a> smart constructor.
data DeleteLogPattern
DeleteLogPattern' :: Text -> Text -> Text -> DeleteLogPattern

-- | Create a value of <a>DeleteLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DeleteLogPattern'</a>,
--   <a>deleteLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:DeleteLogPattern'</a>,
--   <a>deleteLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:DeleteLogPattern'</a>,
--   <a>deleteLogPattern_patternName</a> - The name of the log pattern.
newDeleteLogPattern :: Text -> Text -> Text -> DeleteLogPattern

-- | <i>See:</i> <a>newDeleteLogPatternResponse</a> smart constructor.
data DeleteLogPatternResponse
DeleteLogPatternResponse' :: Int -> DeleteLogPatternResponse

-- | Create a value of <a>DeleteLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLogPatternResponse'</a>,
--   <a>deleteLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLogPatternResponse :: Int -> DeleteLogPatternResponse

-- | <i>See:</i> <a>newUpdateLogPattern</a> smart constructor.
data UpdateLogPattern
UpdateLogPattern' :: Maybe Text -> Maybe Int -> Text -> Text -> Text -> UpdateLogPattern

-- | Create a value of <a>UpdateLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':UpdateLogPattern'</a>,
--   <a>updateLogPattern_pattern</a> - The log pattern. The pattern must be
--   DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
--   
--   <a>$sel:rank:UpdateLogPattern'</a>, <a>updateLogPattern_rank</a> -
--   Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
--   
--   <a>$sel:resourceGroupName:UpdateLogPattern'</a>,
--   <a>updateLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:UpdateLogPattern'</a>,
--   <a>updateLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:UpdateLogPattern'</a>,
--   <a>updateLogPattern_patternName</a> - The name of the log pattern.
newUpdateLogPattern :: Text -> Text -> Text -> UpdateLogPattern

-- | <i>See:</i> <a>newUpdateLogPatternResponse</a> smart constructor.
data UpdateLogPatternResponse
UpdateLogPatternResponse' :: Maybe LogPattern -> Maybe Text -> Int -> UpdateLogPatternResponse

-- | Create a value of <a>UpdateLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPattern:UpdateLogPatternResponse'</a>,
--   <a>updateLogPatternResponse_logPattern</a> - The successfully created
--   log pattern.
--   
--   <a>$sel:resourceGroupName:UpdateLogPattern'</a>,
--   <a>updateLogPatternResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:httpStatus:UpdateLogPatternResponse'</a>,
--   <a>updateLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLogPatternResponse :: Int -> UpdateLogPatternResponse

-- | <i>See:</i> <a>newCreateLogPattern</a> smart constructor.
data CreateLogPattern
CreateLogPattern' :: Text -> Text -> Text -> Text -> Int -> CreateLogPattern

-- | Create a value of <a>CreateLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:CreateLogPattern'</a>,
--   <a>createLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:CreateLogPattern'</a>,
--   <a>createLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:CreateLogPattern'</a>,
--   <a>createLogPattern_patternName</a> - The name of the log pattern.
--   
--   <a>$sel:pattern':CreateLogPattern'</a>,
--   <a>createLogPattern_pattern</a> - The log pattern. The pattern must be
--   DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
--   
--   <a>$sel:rank:CreateLogPattern'</a>, <a>createLogPattern_rank</a> -
--   Rank of the log pattern. Must be a value between <tt>1</tt> and
--   <tt>1,000,000</tt>. The patterns are sorted by rank, so we recommend
--   that you set your highest priority patterns with the lowest rank. A
--   pattern of rank <tt>1</tt> will be the first to get matched to a log
--   line. A pattern of rank <tt>1,000,000</tt> will be last to get
--   matched. When you configure custom log patterns from the console, a
--   <tt>Low</tt> severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
newCreateLogPattern :: Text -> Text -> Text -> Text -> Int -> CreateLogPattern

-- | <i>See:</i> <a>newCreateLogPatternResponse</a> smart constructor.
data CreateLogPatternResponse
CreateLogPatternResponse' :: Maybe LogPattern -> Maybe Text -> Int -> CreateLogPatternResponse

-- | Create a value of <a>CreateLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPattern:CreateLogPatternResponse'</a>,
--   <a>createLogPatternResponse_logPattern</a> - The successfully created
--   log pattern.
--   
--   <a>$sel:resourceGroupName:CreateLogPattern'</a>,
--   <a>createLogPatternResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:httpStatus:CreateLogPatternResponse'</a>,
--   <a>createLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newCreateLogPatternResponse :: Int -> CreateLogPatternResponse

-- | <i>See:</i> <a>newListConfigurationHistory</a> smart constructor.
data ListConfigurationHistory
ListConfigurationHistory' :: Maybe Text -> Maybe POSIX -> Maybe ConfigurationEventStatus -> Maybe Text -> Maybe POSIX -> Maybe Natural -> ListConfigurationHistory

-- | Create a value of <a>ListConfigurationHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_resourceGroupName</a> - Resource group to
--   which the application belongs.
--   
--   <a>$sel:startTime:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_startTime</a> - The start time of the
--   event.
--   
--   <a>$sel:eventStatus:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_eventStatus</a> - The status of the
--   configuration update event. Possible values include INFO, WARN, and
--   ERROR.
--   
--   <a>$sel:nextToken:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_nextToken</a> - The <tt>NextToken</tt>
--   value returned from a previous paginated
--   <tt>ListConfigurationHistory</tt> request where <tt>MaxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>NextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
--   
--   <a>$sel:endTime:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_endTime</a> - The end time of the event.
--   
--   <a>$sel:maxResults:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistory_maxResults</a> - The maximum number of
--   results returned by <tt>ListConfigurationHistory</tt> in paginated
--   output. When this parameter is used, <tt>ListConfigurationHistory</tt>
--   returns only <tt>MaxResults</tt> in a single page along with a
--   <tt>NextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListConfigurationHistory</tt> request with the returned
--   <tt>NextToken</tt> value. If this parameter is not used, then
--   <tt>ListConfigurationHistory</tt> returns all results.
newListConfigurationHistory :: ListConfigurationHistory

-- | <i>See:</i> <a>newListConfigurationHistoryResponse</a> smart
--   constructor.
data ListConfigurationHistoryResponse
ListConfigurationHistoryResponse' :: Maybe Text -> Maybe [ConfigurationEvent] -> Int -> ListConfigurationHistoryResponse

-- | Create a value of <a>ListConfigurationHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationHistory'</a>,
--   <a>listConfigurationHistoryResponse_nextToken</a> - The
--   <tt>NextToken</tt> value to include in a future
--   <tt>ListConfigurationHistory</tt> request. When the results of a
--   <tt>ListConfigurationHistory</tt> request exceed <tt>MaxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:eventList:ListConfigurationHistoryResponse'</a>,
--   <a>listConfigurationHistoryResponse_eventList</a> - The list of
--   configuration events and their corresponding details.
--   
--   <a>$sel:httpStatus:ListConfigurationHistoryResponse'</a>,
--   <a>listConfigurationHistoryResponse_httpStatus</a> - The response's
--   http status code.
newListConfigurationHistoryResponse :: Int -> ListConfigurationHistoryResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (ARN) of the application that you want to add
--   one or more tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags that to add to the application. A tag consists of a required tag
--   key (<tt>Key</tt>) and an associated tag value (<tt>Value</tt>). The
--   maximum length of a tag key is 128 characters. The maximum length of a
--   tag value is 256 characters.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Text -> Maybe Natural -> ListApplications

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplications_nextToken</a> - The token to request the next page
--   of results.
--   
--   <a>$sel:maxResults:ListApplications'</a>,
--   <a>listApplications_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
newListApplications :: ListApplications

-- | <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Maybe Text -> Maybe [ApplicationInfo] -> Int -> ListApplicationsResponse

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplicationsResponse_nextToken</a> - The token used to retrieve
--   the next page of results. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   <a>$sel:applicationInfoList:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_applicationInfoList</a> - The list of
--   applications.
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListApplicationsResponse :: Int -> ListApplicationsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name (ARN) of
--   the application that you want to remove one or more tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tags (tag keys) that you want to remove from the resource. When you
--   specify a tag key, the action removes both that key and its associated
--   tag value.
--   
--   To remove more than one tag from the application, append the
--   <tt>TagKeys</tt> parameter and argument for each additional tag to
--   remove, separated by an ampersand.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newCreateComponent</a> smart constructor.
data CreateComponent
CreateComponent' :: Text -> Text -> [Text] -> CreateComponent

-- | Create a value of <a>CreateComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:CreateComponent'</a>,
--   <a>createComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:CreateComponent'</a>,
--   <a>createComponent_componentName</a> - The name of the component.
--   
--   <a>$sel:resourceList:CreateComponent'</a>,
--   <a>createComponent_resourceList</a> - The list of resource ARNs that
--   belong to the component.
newCreateComponent :: Text -> Text -> CreateComponent

-- | <i>See:</i> <a>newCreateComponentResponse</a> smart constructor.
data CreateComponentResponse
CreateComponentResponse' :: Int -> CreateComponentResponse

-- | Create a value of <a>CreateComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateComponentResponse'</a>,
--   <a>createComponentResponse_httpStatus</a> - The response's http status
--   code.
newCreateComponentResponse :: Int -> CreateComponentResponse

-- | <i>See:</i> <a>newListComponents</a> smart constructor.
data ListComponents
ListComponents' :: Maybe Text -> Maybe Natural -> Text -> ListComponents

-- | Create a value of <a>ListComponents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListComponents'</a>, <a>listComponents_nextToken</a>
--   - The token to request the next page of results.
--   
--   <a>$sel:maxResults:ListComponents'</a>,
--   <a>listComponents_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>NextToken</tt> value.
--   
--   <a>$sel:resourceGroupName:ListComponents'</a>,
--   <a>listComponents_resourceGroupName</a> - The name of the resource
--   group.
newListComponents :: Text -> ListComponents

-- | <i>See:</i> <a>newListComponentsResponse</a> smart constructor.
data ListComponentsResponse
ListComponentsResponse' :: Maybe [ApplicationComponent] -> Maybe Text -> Int -> ListComponentsResponse

-- | Create a value of <a>ListComponentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationComponentList:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_applicationComponentList</a> - The list of
--   application components.
--   
--   <a>$sel:nextToken:ListComponents'</a>,
--   <a>listComponentsResponse_nextToken</a> - The token to request the
--   next page of results.
--   
--   <a>$sel:httpStatus:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_httpStatus</a> - The response's http status
--   code.
newListComponentsResponse :: Int -> ListComponentsResponse

-- | <i>See:</i> <a>newDeleteComponent</a> smart constructor.
data DeleteComponent
DeleteComponent' :: Text -> Text -> DeleteComponent

-- | Create a value of <a>DeleteComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DeleteComponent'</a>,
--   <a>deleteComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:DeleteComponent'</a>,
--   <a>deleteComponent_componentName</a> - The name of the component.
newDeleteComponent :: Text -> Text -> DeleteComponent

-- | <i>See:</i> <a>newDeleteComponentResponse</a> smart constructor.
data DeleteComponentResponse
DeleteComponentResponse' :: Int -> DeleteComponentResponse

-- | Create a value of <a>DeleteComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteComponentResponse'</a>,
--   <a>deleteComponentResponse_httpStatus</a> - The response's http status
--   code.
newDeleteComponentResponse :: Int -> DeleteComponentResponse

-- | <i>See:</i> <a>newUpdateComponent</a> smart constructor.
data UpdateComponent
UpdateComponent' :: Maybe Text -> Maybe [Text] -> Text -> Text -> UpdateComponent

-- | Create a value of <a>UpdateComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newComponentName':UpdateComponent'</a>,
--   <a>updateComponent_newComponentName</a> - The new name of the
--   component.
--   
--   <a>$sel:resourceList:UpdateComponent'</a>,
--   <a>updateComponent_resourceList</a> - The list of resource ARNs that
--   belong to the component.
--   
--   <a>$sel:resourceGroupName:UpdateComponent'</a>,
--   <a>updateComponent_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:componentName:UpdateComponent'</a>,
--   <a>updateComponent_componentName</a> - The name of the component.
newUpdateComponent :: Text -> Text -> UpdateComponent

-- | <i>See:</i> <a>newUpdateComponentResponse</a> smart constructor.
data UpdateComponentResponse
UpdateComponentResponse' :: Int -> UpdateComponentResponse

-- | Create a value of <a>UpdateComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateComponentResponse'</a>,
--   <a>updateComponentResponse_httpStatus</a> - The response's http status
--   code.
newUpdateComponentResponse :: Int -> UpdateComponentResponse

-- | <i>See:</i> <a>newDescribeLogPattern</a> smart constructor.
data DescribeLogPattern
DescribeLogPattern' :: Text -> Text -> Text -> DescribeLogPattern

-- | Create a value of <a>DescribeLogPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:DescribeLogPattern'</a>,
--   <a>describeLogPattern_resourceGroupName</a> - The name of the resource
--   group.
--   
--   <a>$sel:patternSetName:DescribeLogPattern'</a>,
--   <a>describeLogPattern_patternSetName</a> - The name of the log pattern
--   set.
--   
--   <a>$sel:patternName:DescribeLogPattern'</a>,
--   <a>describeLogPattern_patternName</a> - The name of the log pattern.
newDescribeLogPattern :: Text -> Text -> Text -> DescribeLogPattern

-- | <i>See:</i> <a>newDescribeLogPatternResponse</a> smart constructor.
data DescribeLogPatternResponse
DescribeLogPatternResponse' :: Maybe LogPattern -> Maybe Text -> Int -> DescribeLogPatternResponse

-- | Create a value of <a>DescribeLogPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPattern:DescribeLogPatternResponse'</a>,
--   <a>describeLogPatternResponse_logPattern</a> - The successfully
--   created log pattern.
--   
--   <a>$sel:resourceGroupName:DescribeLogPattern'</a>,
--   <a>describeLogPatternResponse_resourceGroupName</a> - The name of the
--   resource group.
--   
--   <a>$sel:httpStatus:DescribeLogPatternResponse'</a>,
--   <a>describeLogPatternResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLogPatternResponse :: Int -> DescribeLogPatternResponse
newtype CloudWatchEventSource
CloudWatchEventSource' :: Text -> CloudWatchEventSource
[fromCloudWatchEventSource] :: CloudWatchEventSource -> Text
pattern CloudWatchEventSource_CODE_DEPLOY :: CloudWatchEventSource
pattern CloudWatchEventSource_EC2 :: CloudWatchEventSource
pattern CloudWatchEventSource_HEALTH :: CloudWatchEventSource
pattern CloudWatchEventSource_RDS :: CloudWatchEventSource
newtype ConfigurationEventResourceType
ConfigurationEventResourceType' :: Text -> ConfigurationEventResourceType
[fromConfigurationEventResourceType] :: ConfigurationEventResourceType -> Text
pattern ConfigurationEventResourceType_CLOUDFORMATION :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_CLOUDWATCH_ALARM :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_CLOUDWATCH_LOG :: ConfigurationEventResourceType
pattern ConfigurationEventResourceType_SSM_ASSOCIATION :: ConfigurationEventResourceType
newtype ConfigurationEventStatus
ConfigurationEventStatus' :: Text -> ConfigurationEventStatus
[fromConfigurationEventStatus] :: ConfigurationEventStatus -> Text
pattern ConfigurationEventStatus_ERROR :: ConfigurationEventStatus
pattern ConfigurationEventStatus_INFO :: ConfigurationEventStatus
pattern ConfigurationEventStatus_WARN :: ConfigurationEventStatus
newtype FeedbackKey
FeedbackKey' :: Text -> FeedbackKey
[fromFeedbackKey] :: FeedbackKey -> Text
pattern FeedbackKey_INSIGHTS_FEEDBACK :: FeedbackKey
newtype FeedbackValue
FeedbackValue' :: Text -> FeedbackValue
[fromFeedbackValue] :: FeedbackValue -> Text
pattern FeedbackValue_NOT_SPECIFIED :: FeedbackValue
pattern FeedbackValue_NOT_USEFUL :: FeedbackValue
pattern FeedbackValue_USEFUL :: FeedbackValue
newtype LogFilter
LogFilter' :: Text -> LogFilter
[fromLogFilter] :: LogFilter -> Text
pattern LogFilter_ERROR :: LogFilter
pattern LogFilter_INFO :: LogFilter
pattern LogFilter_WARN :: LogFilter
newtype OsType
OsType' :: Text -> OsType
[fromOsType] :: OsType -> Text
pattern OsType_LINUX :: OsType
pattern OsType_WINDOWS :: OsType
newtype SeverityLevel
SeverityLevel' :: Text -> SeverityLevel
[fromSeverityLevel] :: SeverityLevel -> Text
pattern SeverityLevel_High :: SeverityLevel
pattern SeverityLevel_Low :: SeverityLevel
pattern SeverityLevel_Medium :: SeverityLevel
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_IGNORE :: Status
pattern Status_PENDING :: Status
pattern Status_RESOLVED :: Status
newtype Tier
Tier' :: Text -> Tier
[fromTier] :: Tier -> Text
pattern Tier_CUSTOM :: Tier
pattern Tier_DEFAULT :: Tier
pattern Tier_DOT_NET_CORE :: Tier
pattern Tier_DOT_NET_WEB :: Tier
pattern Tier_DOT_NET_WEB_TIER :: Tier
pattern Tier_DOT_NET_WORKER :: Tier
pattern Tier_JAVA_JMX :: Tier
pattern Tier_MYSQL :: Tier
pattern Tier_ORACLE :: Tier
pattern Tier_POSTGRESQL :: Tier
pattern Tier_SQL_SERVER :: Tier
pattern Tier_SQL_SERVER_ALWAYSON_AVAILABILITY_GROUP :: Tier

-- | Describes a standalone resource or similarly grouped resources that
--   the application is made up of.
--   
--   <i>See:</i> <a>newApplicationComponent</a> smart constructor.
data ApplicationComponent
ApplicationComponent' :: Maybe OsType -> Maybe Text -> Maybe (HashMap Tier (HashMap Text Text)) -> Maybe Bool -> Maybe Tier -> Maybe Text -> Maybe Text -> ApplicationComponent

-- | Create a value of <a>ApplicationComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:osType:ApplicationComponent'</a>,
--   <a>applicationComponent_osType</a> - The operating system of the
--   component.
--   
--   <a>$sel:resourceType:ApplicationComponent'</a>,
--   <a>applicationComponent_resourceType</a> - The resource type.
--   Supported resource types include EC2 instances, Auto Scaling group,
--   Classic ELB, Application ELB, and SQS Queue.
--   
--   <a>$sel:detectedWorkload:ApplicationComponent'</a>,
--   <a>applicationComponent_detectedWorkload</a> - Workloads detected in
--   the application component.
--   
--   <a>$sel:monitor:ApplicationComponent'</a>,
--   <a>applicationComponent_monitor</a> - Indicates whether the
--   application component is monitored.
--   
--   <a>$sel:tier:ApplicationComponent'</a>,
--   <a>applicationComponent_tier</a> - The stack tier of the application
--   component.
--   
--   <a>$sel:componentName:ApplicationComponent'</a>,
--   <a>applicationComponent_componentName</a> - The name of the component.
--   
--   <a>$sel:componentRemarks:ApplicationComponent'</a>,
--   <a>applicationComponent_componentRemarks</a> - If logging is supported
--   for the resource type, indicates whether the component has configured
--   logs to be monitored.
newApplicationComponent :: ApplicationComponent

-- | Describes the status of the application.
--   
--   <i>See:</i> <a>newApplicationInfo</a> smart constructor.
data ApplicationInfo
ApplicationInfo' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> ApplicationInfo

-- | Create a value of <a>ApplicationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceGroupName:ApplicationInfo'</a>,
--   <a>applicationInfo_resourceGroupName</a> - The name of the resource
--   group used for the application.
--   
--   <a>$sel:cWEMonitorEnabled:ApplicationInfo'</a>,
--   <a>applicationInfo_cWEMonitorEnabled</a> - Indicates whether
--   Application Insights can listen to CloudWatch events for the
--   application resources, such as <tt>instance terminated</tt>,
--   <tt>failed deployment</tt>, and others.
--   
--   <a>$sel:opsItemSNSTopicArn:ApplicationInfo'</a>,
--   <a>applicationInfo_opsItemSNSTopicArn</a> - The SNS topic provided to
--   Application Insights that is associated to the created opsItems to
--   receive SNS notifications for opsItem updates.
--   
--   <a>$sel:lifeCycle:ApplicationInfo'</a>,
--   <a>applicationInfo_lifeCycle</a> - The lifecycle of the application.
--   
--   <a>$sel:opsCenterEnabled:ApplicationInfo'</a>,
--   <a>applicationInfo_opsCenterEnabled</a> - Indicates whether
--   Application Insights will create opsItems for any problem detected by
--   Application Insights for an application.
--   
--   <a>$sel:remarks:ApplicationInfo'</a>, <a>applicationInfo_remarks</a> -
--   The issues on the user side that block Application Insights from
--   successfully monitoring an application. Example remarks include:
--   
--   <ul>
--   <li>“Configuring application, detected 1 Errors, 3 Warnings”</li>
--   <li>“Configuring application, detected 1 Unconfigured Components”</li>
--   </ul>
newApplicationInfo :: ApplicationInfo

-- | The event information.
--   
--   <i>See:</i> <a>newConfigurationEvent</a> smart constructor.
data ConfigurationEvent
ConfigurationEvent' :: Maybe Text -> Maybe ConfigurationEventStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ConfigurationEventResourceType -> ConfigurationEvent

-- | Create a value of <a>ConfigurationEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitoredResourceARN:ConfigurationEvent'</a>,
--   <a>configurationEvent_monitoredResourceARN</a> - The resource
--   monitored by Application Insights.
--   
--   <a>$sel:eventStatus:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventStatus</a> - The status of the
--   configuration update event. Possible values include INFO, WARN, and
--   ERROR.
--   
--   <a>$sel:eventResourceName:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventResourceName</a> - The name of the resource
--   Application Insights attempted to configure.
--   
--   <a>$sel:eventTime:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventTime</a> - The timestamp of the event.
--   
--   <a>$sel:eventDetail:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventDetail</a> - The details of the event in
--   plain text.
--   
--   <a>$sel:eventResourceType:ConfigurationEvent'</a>,
--   <a>configurationEvent_eventResourceType</a> - The resource type that
--   Application Insights attempted to configure, for example,
--   CLOUDWATCH_ALARM.
newConfigurationEvent :: ConfigurationEvent

-- | An object that defines the log patterns that belongs to a
--   <tt>LogPatternSet</tt>.
--   
--   <i>See:</i> <a>newLogPattern</a> smart constructor.
data LogPattern
LogPattern' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> LogPattern

-- | Create a value of <a>LogPattern</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':LogPattern'</a>, <a>logPattern_pattern</a> - A
--   regular expression that defines the log pattern. A log pattern can
--   contain as many as 50 characters, and it cannot be empty. The pattern
--   must be DFA compatible. Patterns that utilize forward lookahead or
--   backreference constructions are not supported.
--   
--   <a>$sel:patternName:LogPattern'</a>, <a>logPattern_patternName</a> -
--   The name of the log pattern. A log pattern name can contain as many as
--   50 characters, and it cannot be empty. The characters can be Unicode
--   letters, digits, or one of the following symbols: period, dash,
--   underscore.
--   
--   <a>$sel:patternSetName:LogPattern'</a>,
--   <a>logPattern_patternSetName</a> - The name of the log pattern. A log
--   pattern name can contain as many as 30 characters, and it cannot be
--   empty. The characters can be Unicode letters, digits, or one of the
--   following symbols: period, dash, underscore.
--   
--   <a>$sel:rank:LogPattern'</a>, <a>logPattern_rank</a> - Rank of the log
--   pattern. Must be a value between <tt>1</tt> and <tt>1,000,000</tt>.
--   The patterns are sorted by rank, so we recommend that you set your
--   highest priority patterns with the lowest rank. A pattern of rank
--   <tt>1</tt> will be the first to get matched to a log line. A pattern
--   of rank <tt>1,000,000</tt> will be last to get matched. When you
--   configure custom log patterns from the console, a <tt>Low</tt>
--   severity pattern translates to a <tt>750,000</tt> rank. A
--   <tt>Medium</tt> severity pattern translates to a <tt>500,000</tt>
--   rank. And a <tt>High</tt> severity pattern translates to a
--   <tt>250,000</tt> rank. Rank values less than <tt>1</tt> or greater
--   than <tt>1,000,000</tt> are reserved for AWS-provided patterns.
newLogPattern :: LogPattern

-- | Describes an anomaly or error with the application.
--   
--   <i>See:</i> <a>newObservation</a> smart constructor.
data Observation
Observation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Double -> Maybe Text -> Maybe CloudWatchEventSource -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LogFilter -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Observation

-- | Create a value of <a>Observation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeployApplication:Observation'</a>,
--   <a>observation_codeDeployApplication</a> - The CodeDeploy application
--   to which the deployment belongs.
--   
--   <a>$sel:rdsEventMessage:Observation'</a>,
--   <a>observation_rdsEventMessage</a> - The message of an RDS event.
--   
--   <a>$sel:codeDeployDeploymentId:Observation'</a>,
--   <a>observation_codeDeployDeploymentId</a> - The deployment ID of the
--   CodeDeploy-based observation related to the detected problem.
--   
--   <a>$sel:startTime:Observation'</a>, <a>observation_startTime</a> - The
--   time when the observation was first detected, in epoch seconds.
--   
--   <a>$sel:sourceType:Observation'</a>, <a>observation_sourceType</a> -
--   The source type of the observation.
--   
--   <a>$sel:sourceARN:Observation'</a>, <a>observation_sourceARN</a> - The
--   source resource ARN of the observation.
--   
--   <a>$sel:xRayRequestAverageLatency:Observation'</a>,
--   <a>observation_xRayRequestAverageLatency</a> - The X-Ray node request
--   average latency for this node.
--   
--   <a>$sel:statesStatus:Observation'</a>, <a>observation_statesStatus</a>
--   - The status of the step function-related observation.
--   
--   <a>$sel:codeDeployDeploymentGroup:Observation'</a>,
--   <a>observation_codeDeployDeploymentGroup</a> - The deployment group to
--   which the CodeDeploy deployment belongs.
--   
--   <a>$sel:healthEventTypeCategory:Observation'</a>,
--   <a>observation_healthEventTypeCategory</a> - The category of the AWS
--   Health event, such as <tt>issue</tt>.
--   
--   <a>$sel:xRayRequestCount:Observation'</a>,
--   <a>observation_xRayRequestCount</a> - The X-Ray request count for this
--   node.
--   
--   <a>$sel:s3EventName:Observation'</a>, <a>observation_s3EventName</a> -
--   The name of the S3 CloudWatch Event-based observation.
--   
--   <a>$sel:metricName:Observation'</a>, <a>observation_metricName</a> -
--   The name of the observation metric.
--   
--   <a>$sel:ec2State:Observation'</a>, <a>observation_ec2State</a> - The
--   state of the instance, such as <tt>STOPPING</tt> or
--   <tt>TERMINATING</tt>.
--   
--   <a>$sel:logGroup:Observation'</a>, <a>observation_logGroup</a> - The
--   log group name.
--   
--   <a>$sel:value:Observation'</a>, <a>observation_value</a> - The value
--   of the source observation metric.
--   
--   <a>$sel:healthEventDescription:Observation'</a>,
--   <a>observation_healthEventDescription</a> - The description of the AWS
--   Health event provided by the service, such as Amazon EC2.
--   
--   <a>$sel:cloudWatchEventSource:Observation'</a>,
--   <a>observation_cloudWatchEventSource</a> - The source of the
--   CloudWatch Event.
--   
--   <a>$sel:codeDeployState:Observation'</a>,
--   <a>observation_codeDeployState</a> - The status of the CodeDeploy
--   deployment, for example <tt>SUCCESS</tt> or <tt> FAILURE</tt>.
--   
--   <a>$sel:xRayErrorPercent:Observation'</a>,
--   <a>observation_xRayErrorPercent</a> - The X-Ray request error
--   percentage for this node.
--   
--   <a>$sel:statesArn:Observation'</a>, <a>observation_statesArn</a> - The
--   Amazon Resource Name (ARN) of the step function-based observation.
--   
--   <a>$sel:cloudWatchEventId:Observation'</a>,
--   <a>observation_cloudWatchEventId</a> - The ID of the CloudWatch
--   Event-based observation related to the detected problem.
--   
--   <a>$sel:logText:Observation'</a>, <a>observation_logText</a> - The log
--   text of the observation.
--   
--   <a>$sel:logFilter:Observation'</a>, <a>observation_logFilter</a> - The
--   log filter of the observation.
--   
--   <a>$sel:metricNamespace:Observation'</a>,
--   <a>observation_metricNamespace</a> - The namespace of the observation
--   metric.
--   
--   <a>$sel:rdsEventCategories:Observation'</a>,
--   <a>observation_rdsEventCategories</a> - The category of an RDS event.
--   
--   <a>$sel:xRayNodeType:Observation'</a>, <a>observation_xRayNodeType</a>
--   - The type of the X-Ray node.
--   
--   <a>$sel:endTime:Observation'</a>, <a>observation_endTime</a> - The
--   time when the observation ended, in epoch seconds.
--   
--   <a>$sel:statesInput:Observation'</a>, <a>observation_statesInput</a> -
--   The input to the step function-based observation.
--   
--   <a>$sel:xRayNodeName:Observation'</a>, <a>observation_xRayNodeName</a>
--   - The name of the X-Ray node.
--   
--   <a>$sel:id:Observation'</a>, <a>observation_id</a> - The ID of the
--   observation type.
--   
--   <a>$sel:healthEventArn:Observation'</a>,
--   <a>observation_healthEventArn</a> - The Amazon Resource Name (ARN) of
--   the AWS Health Event-based observation.
--   
--   <a>$sel:healthEventTypeCode:Observation'</a>,
--   <a>observation_healthEventTypeCode</a> - The type of the AWS Health
--   event, for example, <tt>AWS_EC2_POWER_CONNECTIVITY_ISSUE</tt>.
--   
--   <a>$sel:ebsResult:Observation'</a>, <a>observation_ebsResult</a> - The
--   result of an EBS CloudWatch event, such as <tt>failed</tt> or
--   <tt>succeeded</tt>.
--   
--   <a>$sel:cloudWatchEventDetailType:Observation'</a>,
--   <a>observation_cloudWatchEventDetailType</a> - The detail type of the
--   CloudWatch Event-based observation, for example, <tt>EC2 Instance
--   State-change Notification</tt>.
--   
--   <a>$sel:codeDeployInstanceGroupId:Observation'</a>,
--   <a>observation_codeDeployInstanceGroupId</a> - The instance group to
--   which the CodeDeploy instance belongs.
--   
--   <a>$sel:ebsCause:Observation'</a>, <a>observation_ebsCause</a> - The
--   cause of an EBS CloudWatch event.
--   
--   <a>$sel:ebsEvent:Observation'</a>, <a>observation_ebsEvent</a> - The
--   type of EBS CloudWatch event, such as <tt>createVolume</tt>,
--   <tt>deleteVolume</tt> or <tt>attachVolume</tt>.
--   
--   <a>$sel:ebsRequestId:Observation'</a>, <a>observation_ebsRequestId</a>
--   - The request ID of an EBS CloudWatch event.
--   
--   <a>$sel:xRayFaultPercent:Observation'</a>,
--   <a>observation_xRayFaultPercent</a> - The X-Ray request fault
--   percentage for this node.
--   
--   <a>$sel:statesExecutionArn:Observation'</a>,
--   <a>observation_statesExecutionArn</a> - The Amazon Resource Name (ARN)
--   of the step function execution-based observation.
--   
--   <a>$sel:lineTime:Observation'</a>, <a>observation_lineTime</a> - The
--   timestamp in the CloudWatch Logs that specifies when the matched line
--   occurred.
--   
--   <a>$sel:unit:Observation'</a>, <a>observation_unit</a> - The unit of
--   the source observation metric.
--   
--   <a>$sel:xRayThrottlePercent:Observation'</a>,
--   <a>observation_xRayThrottlePercent</a> - The X-Ray request throttle
--   percentage for this node.
--   
--   <a>$sel:healthService:Observation'</a>,
--   <a>observation_healthService</a> - The service to which the AWS Health
--   Event belongs, such as EC2.
newObservation :: Observation

-- | Describes a problem that is detected by correlating observations.
--   
--   <i>See:</i> <a>newProblem</a> smart constructor.
data Problem
Problem' :: Maybe Status -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe SeverityLevel -> Maybe Text -> Maybe Text -> Maybe (HashMap FeedbackKey FeedbackValue) -> Problem

-- | Create a value of <a>Problem</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Problem'</a>, <a>problem_status</a> - The status of the
--   problem.
--   
--   <a>$sel:resourceGroupName:Problem'</a>,
--   <a>problem_resourceGroupName</a> - The name of the resource group
--   affected by the problem.
--   
--   <a>$sel:startTime:Problem'</a>, <a>problem_startTime</a> - The time
--   when the problem started, in epoch seconds.
--   
--   <a>$sel:insights:Problem'</a>, <a>problem_insights</a> - A detailed
--   analysis of the problem using machine learning.
--   
--   <a>$sel:endTime:Problem'</a>, <a>problem_endTime</a> - The time when
--   the problem ended, in epoch seconds.
--   
--   <a>$sel:id:Problem'</a>, <a>problem_id</a> - The ID of the problem.
--   
--   <a>$sel:severityLevel:Problem'</a>, <a>problem_severityLevel</a> - A
--   measure of the level of impact of the problem.
--   
--   <a>$sel:title:Problem'</a>, <a>problem_title</a> - The name of the
--   problem.
--   
--   <a>$sel:affectedResource:Problem'</a>, <a>problem_affectedResource</a>
--   - The resource affected by the problem.
--   
--   <a>$sel:feedback:Problem'</a>, <a>problem_feedback</a> - Feedback
--   provided by the user about the problem.
newProblem :: Problem

-- | Describes observations related to the problem.
--   
--   <i>See:</i> <a>newRelatedObservations</a> smart constructor.
data RelatedObservations
RelatedObservations' :: Maybe [Observation] -> RelatedObservations

-- | Create a value of <a>RelatedObservations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:observationList:RelatedObservations'</a>,
--   <a>relatedObservations_observationList</a> - The list of observations
--   related to the problem.
newRelatedObservations :: RelatedObservations

-- | An object that defines the tags associated with an application. A
--   <i>tag</i> is a label that you optionally define and associate with an
--   application. Tags can help you categorize and manage resources in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
--   
--   Each tag consists of a required <i>tag key</i> and an associated
--   <i>tag value</i>, both of which you define. A tag key is a general
--   label that acts as a category for a more specific tag value. A tag
--   value acts as a descriptor within a tag key. A tag key can contain as
--   many as 128 characters. A tag value can contain as many as 256
--   characters. The characters can be Unicode letters, digits, white
--   space, or one of the following symbols: _ . : / = + -. The following
--   additional restrictions apply to tags:
--   
--   <ul>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>For each associated resource, each tag key must be unique and it
--   can have only one value.</li>
--   <li>The <tt>aws:</tt> prefix is reserved for use by AWS; you can’t use
--   it in any tag keys or values that you define. In addition, you can't
--   edit or remove tag keys or values that use this prefix.</li>
--   </ul>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that defines a tag. The maximum length of a tag key is 128 characters.
--   The minimum length is 1 character.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that defines a tag. The maximum length of a tag value
--   is 256 characters. The minimum length is 0 characters. If you don't
--   want an application to have a specific tag value, don't specify a
--   value for this parameter.
newTag :: Text -> Text -> Tag
