-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-databrewZSamazonka-databrew
@version 2.0


module Amazonka.DataBrew.Types.ColumnSelector

-- | Selector of a column from a dataset for profile job configuration. One
--   selector includes either a column name or a regular expression.
--   
--   <i>See:</i> <a>newColumnSelector</a> smart constructor.
data ColumnSelector
ColumnSelector' :: Maybe Text -> Maybe Text -> ColumnSelector

-- | A regular expression for selecting a column from a dataset.
[$sel:regex:ColumnSelector'] :: ColumnSelector -> Maybe Text

-- | The name of a column from a dataset.
[$sel:name:ColumnSelector'] :: ColumnSelector -> Maybe Text

-- | Create a value of <a>ColumnSelector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regex:ColumnSelector'</a>, <a>columnSelector_regex</a> - A
--   regular expression for selecting a column from a dataset.
--   
--   <a>$sel:name:ColumnSelector'</a>, <a>columnSelector_name</a> - The
--   name of a column from a dataset.
newColumnSelector :: ColumnSelector

-- | A regular expression for selecting a column from a dataset.
columnSelector_regex :: Lens' ColumnSelector (Maybe Text)

-- | The name of a column from a dataset.
columnSelector_name :: Lens' ColumnSelector (Maybe Text)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector
instance GHC.Show.Show Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector
instance GHC.Read.Read Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector
instance GHC.Classes.Eq Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.ColumnSelector.ColumnSelector


module Amazonka.DataBrew.Types.CompressionFormat
newtype CompressionFormat
CompressionFormat' :: Text -> CompressionFormat
[fromCompressionFormat] :: CompressionFormat -> Text
pattern CompressionFormat_BROTLI :: CompressionFormat
pattern CompressionFormat_BZIP2 :: CompressionFormat
pattern CompressionFormat_DEFLATE :: CompressionFormat
pattern CompressionFormat_GZIP :: CompressionFormat
pattern CompressionFormat_LZ4 :: CompressionFormat
pattern CompressionFormat_LZO :: CompressionFormat
pattern CompressionFormat_SNAPPY :: CompressionFormat
pattern CompressionFormat_ZLIB :: CompressionFormat
pattern CompressionFormat_ZSTD :: CompressionFormat
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance GHC.Generics.Generic Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance GHC.Classes.Ord Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance GHC.Classes.Eq Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance GHC.Read.Read Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat
instance GHC.Show.Show Amazonka.DataBrew.Types.CompressionFormat.CompressionFormat


module Amazonka.DataBrew.Types.ConditionExpression

-- | Represents an individual condition that evaluates to true or false.
--   
--   Conditions are used with recipe actions. The action is only performed
--   for column values where the condition evaluates to true.
--   
--   If a recipe requires more than one condition, then the recipe must
--   specify multiple <tt>ConditionExpression</tt> elements. Each condition
--   is applied to the rows in a dataset first, before the recipe action is
--   performed.
--   
--   <i>See:</i> <a>newConditionExpression</a> smart constructor.
data ConditionExpression
ConditionExpression' :: Maybe Text -> Text -> Text -> ConditionExpression

-- | A value that the condition must evaluate to for the condition to
--   succeed.
[$sel:value:ConditionExpression'] :: ConditionExpression -> Maybe Text

-- | A specific condition to apply to a recipe action. For more
--   information, see <a>Recipe structure</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
[$sel:condition:ConditionExpression'] :: ConditionExpression -> Text

-- | A column to apply this condition to.
[$sel:targetColumn:ConditionExpression'] :: ConditionExpression -> Text

-- | Create a value of <a>ConditionExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ConditionExpression'</a>,
--   <a>conditionExpression_value</a> - A value that the condition must
--   evaluate to for the condition to succeed.
--   
--   <a>$sel:condition:ConditionExpression'</a>,
--   <a>conditionExpression_condition</a> - A specific condition to apply
--   to a recipe action. For more information, see <a>Recipe structure</a>
--   in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:targetColumn:ConditionExpression'</a>,
--   <a>conditionExpression_targetColumn</a> - A column to apply this
--   condition to.
newConditionExpression :: Text -> Text -> ConditionExpression

-- | A value that the condition must evaluate to for the condition to
--   succeed.
conditionExpression_value :: Lens' ConditionExpression (Maybe Text)

-- | A specific condition to apply to a recipe action. For more
--   information, see <a>Recipe structure</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
conditionExpression_condition :: Lens' ConditionExpression Text

-- | A column to apply this condition to.
conditionExpression_targetColumn :: Lens' ConditionExpression Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression
instance GHC.Show.Show Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression
instance GHC.Read.Read Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression
instance GHC.Classes.Eq Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.ConditionExpression.ConditionExpression


module Amazonka.DataBrew.Types.CsvOptions

-- | Represents a set of options that define how DataBrew will read a
--   comma-separated value (CSV) file when creating a dataset from that
--   file.
--   
--   <i>See:</i> <a>newCsvOptions</a> smart constructor.
data CsvOptions
CsvOptions' :: Maybe Bool -> Maybe Text -> CsvOptions

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
[$sel:headerRow:CsvOptions'] :: CsvOptions -> Maybe Bool

-- | A single character that specifies the delimiter being used in the CSV
--   file.
[$sel:delimiter:CsvOptions'] :: CsvOptions -> Maybe Text

-- | Create a value of <a>CsvOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerRow:CsvOptions'</a>, <a>csvOptions_headerRow</a> - A
--   variable that specifies whether the first row in the file is parsed as
--   the header. If this value is false, column names are auto-generated.
--   
--   <a>$sel:delimiter:CsvOptions'</a>, <a>csvOptions_delimiter</a> - A
--   single character that specifies the delimiter being used in the CSV
--   file.
newCsvOptions :: CsvOptions

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
csvOptions_headerRow :: Lens' CsvOptions (Maybe Bool)

-- | A single character that specifies the delimiter being used in the CSV
--   file.
csvOptions_delimiter :: Lens' CsvOptions (Maybe Text)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.CsvOptions.CsvOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.CsvOptions.CsvOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.CsvOptions.CsvOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.CsvOptions.CsvOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.CsvOptions.CsvOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.CsvOptions.CsvOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.CsvOptions.CsvOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.CsvOptions.CsvOptions


module Amazonka.DataBrew.Types.CsvOutputOptions

-- | Represents a set of options that define how DataBrew will write a
--   comma-separated value (CSV) file.
--   
--   <i>See:</i> <a>newCsvOutputOptions</a> smart constructor.
data CsvOutputOptions
CsvOutputOptions' :: Maybe Text -> CsvOutputOptions

-- | A single character that specifies the delimiter used to create CSV job
--   output.
[$sel:delimiter:CsvOutputOptions'] :: CsvOutputOptions -> Maybe Text

-- | Create a value of <a>CsvOutputOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:delimiter:CsvOutputOptions'</a>,
--   <a>csvOutputOptions_delimiter</a> - A single character that specifies
--   the delimiter used to create CSV job output.
newCsvOutputOptions :: CsvOutputOptions

-- | A single character that specifies the delimiter used to create CSV job
--   output.
csvOutputOptions_delimiter :: Lens' CsvOutputOptions (Maybe Text)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.CsvOutputOptions.CsvOutputOptions


module Amazonka.DataBrew.Types.DatabaseOutputMode
newtype DatabaseOutputMode
DatabaseOutputMode' :: Text -> DatabaseOutputMode
[fromDatabaseOutputMode] :: DatabaseOutputMode -> Text
pattern DatabaseOutputMode_NEW_TABLE :: DatabaseOutputMode
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance GHC.Classes.Ord Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance GHC.Read.Read Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode
instance GHC.Show.Show Amazonka.DataBrew.Types.DatabaseOutputMode.DatabaseOutputMode


module Amazonka.DataBrew.Types.DatetimeOptions

-- | Represents additional options for correct interpretation of datetime
--   parameters used in the Amazon S3 path of a dataset.
--   
--   <i>See:</i> <a>newDatetimeOptions</a> smart constructor.
data DatetimeOptions
DatetimeOptions' :: Maybe Text -> Maybe Text -> Text -> DatetimeOptions

-- | Optional value for a timezone offset of the datetime parameter value
--   in the Amazon S3 path. Shouldn't be used if Format for this parameter
--   includes timezone fields. If no offset specified, UTC is assumed.
[$sel:timezoneOffset:DatetimeOptions'] :: DatetimeOptions -> Maybe Text

-- | Optional value for a non-US locale code, needed for correct
--   interpretation of some date formats.
[$sel:localeCode:DatetimeOptions'] :: DatetimeOptions -> Maybe Text

-- | Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
[$sel:format:DatetimeOptions'] :: DatetimeOptions -> Text

-- | Create a value of <a>DatetimeOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timezoneOffset:DatetimeOptions'</a>,
--   <a>datetimeOptions_timezoneOffset</a> - Optional value for a timezone
--   offset of the datetime parameter value in the Amazon S3 path.
--   Shouldn't be used if Format for this parameter includes timezone
--   fields. If no offset specified, UTC is assumed.
--   
--   <a>$sel:localeCode:DatetimeOptions'</a>,
--   <a>datetimeOptions_localeCode</a> - Optional value for a non-US locale
--   code, needed for correct interpretation of some date formats.
--   
--   <a>$sel:format:DatetimeOptions'</a>, <a>datetimeOptions_format</a> -
--   Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
newDatetimeOptions :: Text -> DatetimeOptions

-- | Optional value for a timezone offset of the datetime parameter value
--   in the Amazon S3 path. Shouldn't be used if Format for this parameter
--   includes timezone fields. If no offset specified, UTC is assumed.
datetimeOptions_timezoneOffset :: Lens' DatetimeOptions (Maybe Text)

-- | Optional value for a non-US locale code, needed for correct
--   interpretation of some date formats.
datetimeOptions_localeCode :: Lens' DatetimeOptions (Maybe Text)

-- | Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
datetimeOptions_format :: Lens' DatetimeOptions Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DatetimeOptions.DatetimeOptions


module Amazonka.DataBrew.Types.EncryptionMode
newtype EncryptionMode
EncryptionMode' :: Text -> EncryptionMode
[fromEncryptionMode] :: EncryptionMode -> Text
pattern EncryptionMode_SSE_KMS :: EncryptionMode
pattern EncryptionMode_SSE_S3 :: EncryptionMode
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance GHC.Generics.Generic Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance GHC.Classes.Ord Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance GHC.Classes.Eq Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance GHC.Read.Read Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode
instance GHC.Show.Show Amazonka.DataBrew.Types.EncryptionMode.EncryptionMode


module Amazonka.DataBrew.Types.ExcelOptions

-- | Represents a set of options that define how DataBrew will interpret a
--   Microsoft Excel file when creating a dataset from that file.
--   
--   <i>See:</i> <a>newExcelOptions</a> smart constructor.
data ExcelOptions
ExcelOptions' :: Maybe (NonEmpty Natural) -> Maybe (NonEmpty Text) -> Maybe Bool -> ExcelOptions

-- | One or more sheet numbers in the Excel file that will be included in
--   the dataset.
[$sel:sheetIndexes:ExcelOptions'] :: ExcelOptions -> Maybe (NonEmpty Natural)

-- | One or more named sheets in the Excel file that will be included in
--   the dataset.
[$sel:sheetNames:ExcelOptions'] :: ExcelOptions -> Maybe (NonEmpty Text)

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
[$sel:headerRow:ExcelOptions'] :: ExcelOptions -> Maybe Bool

-- | Create a value of <a>ExcelOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sheetIndexes:ExcelOptions'</a>,
--   <a>excelOptions_sheetIndexes</a> - One or more sheet numbers in the
--   Excel file that will be included in the dataset.
--   
--   <a>$sel:sheetNames:ExcelOptions'</a>, <a>excelOptions_sheetNames</a> -
--   One or more named sheets in the Excel file that will be included in
--   the dataset.
--   
--   <a>$sel:headerRow:ExcelOptions'</a>, <a>excelOptions_headerRow</a> - A
--   variable that specifies whether the first row in the file is parsed as
--   the header. If this value is false, column names are auto-generated.
newExcelOptions :: ExcelOptions

-- | One or more sheet numbers in the Excel file that will be included in
--   the dataset.
excelOptions_sheetIndexes :: Lens' ExcelOptions (Maybe (NonEmpty Natural))

-- | One or more named sheets in the Excel file that will be included in
--   the dataset.
excelOptions_sheetNames :: Lens' ExcelOptions (Maybe (NonEmpty Text))

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
excelOptions_headerRow :: Lens' ExcelOptions (Maybe Bool)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.ExcelOptions.ExcelOptions


module Amazonka.DataBrew.Types.FilterExpression

-- | Represents a structure for defining parameter conditions. Supported
--   conditions are described here: <a>Supported conditions for dynamic
--   datasets</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <i>See:</i> <a>newFilterExpression</a> smart constructor.
data FilterExpression
FilterExpression' :: Text -> HashMap Text Text -> FilterExpression

-- | The expression which includes condition names followed by substitution
--   variables, possibly grouped and combined with other conditions. For
--   example, "(starts_with :prefix1 or starts_with :prefix2) and
--   (ends_with :suffix1 or ends_with :suffix2)". Substitution variables
--   should start with ':' symbol.
[$sel:expression:FilterExpression'] :: FilterExpression -> Text

-- | The map of substitution variable names to their values used in this
--   filter expression.
[$sel:valuesMap:FilterExpression'] :: FilterExpression -> HashMap Text Text

-- | Create a value of <a>FilterExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:FilterExpression'</a>,
--   <a>filterExpression_expression</a> - The expression which includes
--   condition names followed by substitution variables, possibly grouped
--   and combined with other conditions. For example, "(starts_with
--   :prefix1 or starts_with :prefix2) and (ends_with :suffix1 or ends_with
--   :suffix2)". Substitution variables should start with ':' symbol.
--   
--   <a>$sel:valuesMap:FilterExpression'</a>,
--   <a>filterExpression_valuesMap</a> - The map of substitution variable
--   names to their values used in this filter expression.
newFilterExpression :: Text -> FilterExpression

-- | The expression which includes condition names followed by substitution
--   variables, possibly grouped and combined with other conditions. For
--   example, "(starts_with :prefix1 or starts_with :prefix2) and
--   (ends_with :suffix1 or ends_with :suffix2)". Substitution variables
--   should start with ':' symbol.
filterExpression_expression :: Lens' FilterExpression Text

-- | The map of substitution variable names to their values used in this
--   filter expression.
filterExpression_valuesMap :: Lens' FilterExpression (HashMap Text Text)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.FilterExpression.FilterExpression
instance GHC.Show.Show Amazonka.DataBrew.Types.FilterExpression.FilterExpression
instance GHC.Read.Read Amazonka.DataBrew.Types.FilterExpression.FilterExpression
instance GHC.Classes.Eq Amazonka.DataBrew.Types.FilterExpression.FilterExpression
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.FilterExpression.FilterExpression
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.FilterExpression.FilterExpression
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.FilterExpression.FilterExpression
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.FilterExpression.FilterExpression


module Amazonka.DataBrew.Types.InputFormat
newtype InputFormat
InputFormat' :: Text -> InputFormat
[fromInputFormat] :: InputFormat -> Text
pattern InputFormat_CSV :: InputFormat
pattern InputFormat_EXCEL :: InputFormat
pattern InputFormat_JSON :: InputFormat
pattern InputFormat_PARQUET :: InputFormat
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.InputFormat.InputFormat
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.InputFormat.InputFormat
instance GHC.Generics.Generic Amazonka.DataBrew.Types.InputFormat.InputFormat
instance GHC.Classes.Ord Amazonka.DataBrew.Types.InputFormat.InputFormat
instance GHC.Classes.Eq Amazonka.DataBrew.Types.InputFormat.InputFormat
instance GHC.Read.Read Amazonka.DataBrew.Types.InputFormat.InputFormat
instance GHC.Show.Show Amazonka.DataBrew.Types.InputFormat.InputFormat


module Amazonka.DataBrew.Types.JobRunState
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_STARTING :: JobRunState
pattern JobRunState_STOPPED :: JobRunState
pattern JobRunState_STOPPING :: JobRunState
pattern JobRunState_SUCCEEDED :: JobRunState
pattern JobRunState_TIMEOUT :: JobRunState
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.JobRunState.JobRunState
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.JobRunState.JobRunState
instance GHC.Generics.Generic Amazonka.DataBrew.Types.JobRunState.JobRunState
instance GHC.Classes.Ord Amazonka.DataBrew.Types.JobRunState.JobRunState
instance GHC.Classes.Eq Amazonka.DataBrew.Types.JobRunState.JobRunState
instance GHC.Read.Read Amazonka.DataBrew.Types.JobRunState.JobRunState
instance GHC.Show.Show Amazonka.DataBrew.Types.JobRunState.JobRunState


module Amazonka.DataBrew.Types.JobType
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_PROFILE :: JobType
pattern JobType_RECIPE :: JobType
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.JobType.JobType
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.JobType.JobType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.JobType.JobType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.JobType.JobType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.JobType.JobType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.JobType.JobType
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.JobType.JobType
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.JobType.JobType
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.JobType.JobType
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.JobType.JobType
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.JobType.JobType
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.JobType.JobType
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.JobType.JobType
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.JobType.JobType
instance GHC.Generics.Generic Amazonka.DataBrew.Types.JobType.JobType
instance GHC.Classes.Ord Amazonka.DataBrew.Types.JobType.JobType
instance GHC.Classes.Eq Amazonka.DataBrew.Types.JobType.JobType
instance GHC.Read.Read Amazonka.DataBrew.Types.JobType.JobType
instance GHC.Show.Show Amazonka.DataBrew.Types.JobType.JobType


module Amazonka.DataBrew.Types.JsonOptions

-- | Represents the JSON-specific options that define how input is to be
--   interpreted by Glue DataBrew.
--   
--   <i>See:</i> <a>newJsonOptions</a> smart constructor.
data JsonOptions
JsonOptions' :: Maybe Bool -> JsonOptions

-- | A value that specifies whether JSON input contains embedded new line
--   characters.
[$sel:multiLine:JsonOptions'] :: JsonOptions -> Maybe Bool

-- | Create a value of <a>JsonOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:multiLine:JsonOptions'</a>, <a>jsonOptions_multiLine</a> - A
--   value that specifies whether JSON input contains embedded new line
--   characters.
newJsonOptions :: JsonOptions

-- | A value that specifies whether JSON input contains embedded new line
--   characters.
jsonOptions_multiLine :: Lens' JsonOptions (Maybe Bool)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.JsonOptions.JsonOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.JsonOptions.JsonOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.JsonOptions.JsonOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.JsonOptions.JsonOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.JsonOptions.JsonOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.JsonOptions.JsonOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.JsonOptions.JsonOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.JsonOptions.JsonOptions


module Amazonka.DataBrew.Types.FormatOptions

-- | Represents a set of options that define the structure of either
--   comma-separated value (CSV), Excel, or JSON input.
--   
--   <i>See:</i> <a>newFormatOptions</a> smart constructor.
data FormatOptions
FormatOptions' :: Maybe JsonOptions -> Maybe CsvOptions -> Maybe ExcelOptions -> FormatOptions

-- | Options that define how JSON input is to be interpreted by DataBrew.
[$sel:json:FormatOptions'] :: FormatOptions -> Maybe JsonOptions

-- | Options that define how CSV input is to be interpreted by DataBrew.
[$sel:csv:FormatOptions'] :: FormatOptions -> Maybe CsvOptions

-- | Options that define how Excel input is to be interpreted by DataBrew.
[$sel:excel:FormatOptions'] :: FormatOptions -> Maybe ExcelOptions

-- | Create a value of <a>FormatOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:json:FormatOptions'</a>, <a>formatOptions_json</a> - Options
--   that define how JSON input is to be interpreted by DataBrew.
--   
--   <a>$sel:csv:FormatOptions'</a>, <a>formatOptions_csv</a> - Options
--   that define how CSV input is to be interpreted by DataBrew.
--   
--   <a>$sel:excel:FormatOptions'</a>, <a>formatOptions_excel</a> - Options
--   that define how Excel input is to be interpreted by DataBrew.
newFormatOptions :: FormatOptions

-- | Options that define how JSON input is to be interpreted by DataBrew.
formatOptions_json :: Lens' FormatOptions (Maybe JsonOptions)

-- | Options that define how CSV input is to be interpreted by DataBrew.
formatOptions_csv :: Lens' FormatOptions (Maybe CsvOptions)

-- | Options that define how Excel input is to be interpreted by DataBrew.
formatOptions_excel :: Lens' FormatOptions (Maybe ExcelOptions)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.FormatOptions.FormatOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.FormatOptions.FormatOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.FormatOptions.FormatOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.FormatOptions.FormatOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.FormatOptions.FormatOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.FormatOptions.FormatOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.FormatOptions.FormatOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.FormatOptions.FormatOptions


module Amazonka.DataBrew.Types.LogSubscription
newtype LogSubscription
LogSubscription' :: Text -> LogSubscription
[fromLogSubscription] :: LogSubscription -> Text
pattern LogSubscription_DISABLE :: LogSubscription
pattern LogSubscription_ENABLE :: LogSubscription
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance GHC.Generics.Generic Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance GHC.Classes.Ord Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance GHC.Classes.Eq Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance GHC.Read.Read Amazonka.DataBrew.Types.LogSubscription.LogSubscription
instance GHC.Show.Show Amazonka.DataBrew.Types.LogSubscription.LogSubscription


module Amazonka.DataBrew.Types.Order
newtype Order
Order' :: Text -> Order
[fromOrder] :: Order -> Text
pattern Order_ASCENDING :: Order
pattern Order_DESCENDING :: Order
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.Order.Order
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.Order.Order
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.Order.Order
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.Order.Order
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.Order.Order
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Order.Order
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.Order.Order
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.Order.Order
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.Order.Order
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.Order.Order
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.Order.Order
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.Order.Order
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Order.Order
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Order.Order
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Order.Order
instance GHC.Classes.Ord Amazonka.DataBrew.Types.Order.Order
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Order.Order
instance GHC.Read.Read Amazonka.DataBrew.Types.Order.Order
instance GHC.Show.Show Amazonka.DataBrew.Types.Order.Order


module Amazonka.DataBrew.Types.OrderedBy
newtype OrderedBy
OrderedBy' :: Text -> OrderedBy
[fromOrderedBy] :: OrderedBy -> Text
pattern OrderedBy_LAST_MODIFIED_DATE :: OrderedBy
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance GHC.Generics.Generic Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance GHC.Classes.Ord Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance GHC.Classes.Eq Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance GHC.Read.Read Amazonka.DataBrew.Types.OrderedBy.OrderedBy
instance GHC.Show.Show Amazonka.DataBrew.Types.OrderedBy.OrderedBy


module Amazonka.DataBrew.Types.FilesLimit

-- | Represents a limit imposed on number of Amazon S3 files that should be
--   selected for a dataset from a connected Amazon S3 path.
--   
--   <i>See:</i> <a>newFilesLimit</a> smart constructor.
data FilesLimit
FilesLimit' :: Maybe OrderedBy -> Maybe Order -> Natural -> FilesLimit

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently
--   it's the only allowed value.
[$sel:orderedBy:FilesLimit'] :: FilesLimit -> Maybe OrderedBy

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses DESCENDING order, i.e. most recent files are selected
--   first. Anotherpossible value is ASCENDING.
[$sel:order:FilesLimit'] :: FilesLimit -> Maybe Order

-- | The number of Amazon S3 files to select.
[$sel:maxFiles:FilesLimit'] :: FilesLimit -> Natural

-- | Create a value of <a>FilesLimit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderedBy:FilesLimit'</a>, <a>filesLimit_orderedBy</a> - A
--   criteria to use for Amazon S3 files sorting before their selection. By
--   default uses LAST_MODIFIED_DATE as a sorting criteria. Currently it's
--   the only allowed value.
--   
--   <a>$sel:order:FilesLimit'</a>, <a>filesLimit_order</a> - A criteria to
--   use for Amazon S3 files sorting before their selection. By default
--   uses DESCENDING order, i.e. most recent files are selected first.
--   Anotherpossible value is ASCENDING.
--   
--   <a>$sel:maxFiles:FilesLimit'</a>, <a>filesLimit_maxFiles</a> - The
--   number of Amazon S3 files to select.
newFilesLimit :: Natural -> FilesLimit

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently
--   it's the only allowed value.
filesLimit_orderedBy :: Lens' FilesLimit (Maybe OrderedBy)

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses DESCENDING order, i.e. most recent files are selected
--   first. Anotherpossible value is ASCENDING.
filesLimit_order :: Lens' FilesLimit (Maybe Order)

-- | The number of Amazon S3 files to select.
filesLimit_maxFiles :: Lens' FilesLimit Natural
instance GHC.Generics.Generic Amazonka.DataBrew.Types.FilesLimit.FilesLimit
instance GHC.Show.Show Amazonka.DataBrew.Types.FilesLimit.FilesLimit
instance GHC.Read.Read Amazonka.DataBrew.Types.FilesLimit.FilesLimit
instance GHC.Classes.Eq Amazonka.DataBrew.Types.FilesLimit.FilesLimit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.FilesLimit.FilesLimit
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.FilesLimit.FilesLimit
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.FilesLimit.FilesLimit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.FilesLimit.FilesLimit


module Amazonka.DataBrew.Types.OutputFormat
newtype OutputFormat
OutputFormat' :: Text -> OutputFormat
[fromOutputFormat] :: OutputFormat -> Text
pattern OutputFormat_AVRO :: OutputFormat
pattern OutputFormat_CSV :: OutputFormat
pattern OutputFormat_GLUEPARQUET :: OutputFormat
pattern OutputFormat_JSON :: OutputFormat
pattern OutputFormat_ORC :: OutputFormat
pattern OutputFormat_PARQUET :: OutputFormat
pattern OutputFormat_TABLEAUHYPER :: OutputFormat
pattern OutputFormat_XML :: OutputFormat
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance GHC.Generics.Generic Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance GHC.Classes.Ord Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance GHC.Classes.Eq Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance GHC.Read.Read Amazonka.DataBrew.Types.OutputFormat.OutputFormat
instance GHC.Show.Show Amazonka.DataBrew.Types.OutputFormat.OutputFormat


module Amazonka.DataBrew.Types.OutputFormatOptions

-- | Represents a set of options that define the structure of
--   comma-separated (CSV) job output.
--   
--   <i>See:</i> <a>newOutputFormatOptions</a> smart constructor.
data OutputFormatOptions
OutputFormatOptions' :: Maybe CsvOutputOptions -> OutputFormatOptions

-- | Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
[$sel:csv:OutputFormatOptions'] :: OutputFormatOptions -> Maybe CsvOutputOptions

-- | Create a value of <a>OutputFormatOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csv:OutputFormatOptions'</a>, <a>outputFormatOptions_csv</a> -
--   Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
newOutputFormatOptions :: OutputFormatOptions

-- | Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
outputFormatOptions_csv :: Lens' OutputFormatOptions (Maybe CsvOutputOptions)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.OutputFormatOptions.OutputFormatOptions


module Amazonka.DataBrew.Types.ParameterType
newtype ParameterType
ParameterType' :: Text -> ParameterType
[fromParameterType] :: ParameterType -> Text
pattern ParameterType_Datetime :: ParameterType
pattern ParameterType_Number :: ParameterType
pattern ParameterType_String :: ParameterType
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.ParameterType.ParameterType
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.ParameterType.ParameterType
instance GHC.Generics.Generic Amazonka.DataBrew.Types.ParameterType.ParameterType
instance GHC.Classes.Ord Amazonka.DataBrew.Types.ParameterType.ParameterType
instance GHC.Classes.Eq Amazonka.DataBrew.Types.ParameterType.ParameterType
instance GHC.Read.Read Amazonka.DataBrew.Types.ParameterType.ParameterType
instance GHC.Show.Show Amazonka.DataBrew.Types.ParameterType.ParameterType


module Amazonka.DataBrew.Types.DatasetParameter

-- | Represents a dataset paramater that defines type and conditions for a
--   parameter in the Amazon S3 path of the dataset.
--   
--   <i>See:</i> <a>newDatasetParameter</a> smart constructor.
data DatasetParameter
DatasetParameter' :: Maybe Bool -> Maybe FilterExpression -> Maybe DatetimeOptions -> Text -> ParameterType -> DatasetParameter

-- | Optional boolean value that defines whether the captured value of this
--   parameter should be used to create a new column in a dataset.
[$sel:createColumn:DatasetParameter'] :: DatasetParameter -> Maybe Bool

-- | The optional filter expression structure to apply additional matching
--   criteria to the parameter.
[$sel:filter':DatasetParameter'] :: DatasetParameter -> Maybe FilterExpression

-- | Additional parameter options such as a format and a timezone. Required
--   for datetime parameters.
[$sel:datetimeOptions:DatasetParameter'] :: DatasetParameter -> Maybe DatetimeOptions

-- | The name of the parameter that is used in the dataset's Amazon S3
--   path.
[$sel:name:DatasetParameter'] :: DatasetParameter -> Text

-- | The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
[$sel:type':DatasetParameter'] :: DatasetParameter -> ParameterType

-- | Create a value of <a>DatasetParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createColumn:DatasetParameter'</a>,
--   <a>datasetParameter_createColumn</a> - Optional boolean value that
--   defines whether the captured value of this parameter should be used to
--   create a new column in a dataset.
--   
--   <a>$sel:filter':DatasetParameter'</a>, <a>datasetParameter_filter</a>
--   - The optional filter expression structure to apply additional
--   matching criteria to the parameter.
--   
--   <a>$sel:datetimeOptions:DatasetParameter'</a>,
--   <a>datasetParameter_datetimeOptions</a> - Additional parameter options
--   such as a format and a timezone. Required for datetime parameters.
--   
--   <a>$sel:name:DatasetParameter'</a>, <a>datasetParameter_name</a> - The
--   name of the parameter that is used in the dataset's Amazon S3 path.
--   
--   <a>$sel:type':DatasetParameter'</a>, <a>datasetParameter_type</a> -
--   The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
newDatasetParameter :: Text -> ParameterType -> DatasetParameter

-- | Optional boolean value that defines whether the captured value of this
--   parameter should be used to create a new column in a dataset.
datasetParameter_createColumn :: Lens' DatasetParameter (Maybe Bool)

-- | The optional filter expression structure to apply additional matching
--   criteria to the parameter.
datasetParameter_filter :: Lens' DatasetParameter (Maybe FilterExpression)

-- | Additional parameter options such as a format and a timezone. Required
--   for datetime parameters.
datasetParameter_datetimeOptions :: Lens' DatasetParameter (Maybe DatetimeOptions)

-- | The name of the parameter that is used in the dataset's Amazon S3
--   path.
datasetParameter_name :: Lens' DatasetParameter Text

-- | The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
datasetParameter_type :: Lens' DatasetParameter ParameterType
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter
instance GHC.Show.Show Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter
instance GHC.Read.Read Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DatasetParameter.DatasetParameter


module Amazonka.DataBrew.Types.PathOptions

-- | Represents a set of options that define how DataBrew selects files for
--   a given Amazon S3 path in a dataset.
--   
--   <i>See:</i> <a>newPathOptions</a> smart constructor.
data PathOptions
PathOptions' :: Maybe FilterExpression -> Maybe (HashMap Text DatasetParameter) -> Maybe FilesLimit -> PathOptions

-- | If provided, this structure defines a date range for matching Amazon
--   S3 objects based on their LastModifiedDate attribute in Amazon S3.
[$sel:lastModifiedDateCondition:PathOptions'] :: PathOptions -> Maybe FilterExpression

-- | A structure that maps names of parameters used in the Amazon S3 path
--   of a dataset to their definitions.
[$sel:parameters:PathOptions'] :: PathOptions -> Maybe (HashMap Text DatasetParameter)

-- | If provided, this structure imposes a limit on a number of files that
--   should be selected.
[$sel:filesLimit:PathOptions'] :: PathOptions -> Maybe FilesLimit

-- | Create a value of <a>PathOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDateCondition:PathOptions'</a>,
--   <a>pathOptions_lastModifiedDateCondition</a> - If provided, this
--   structure defines a date range for matching Amazon S3 objects based on
--   their LastModifiedDate attribute in Amazon S3.
--   
--   <a>$sel:parameters:PathOptions'</a>, <a>pathOptions_parameters</a> - A
--   structure that maps names of parameters used in the Amazon S3 path of
--   a dataset to their definitions.
--   
--   <a>$sel:filesLimit:PathOptions'</a>, <a>pathOptions_filesLimit</a> -
--   If provided, this structure imposes a limit on a number of files that
--   should be selected.
newPathOptions :: PathOptions

-- | If provided, this structure defines a date range for matching Amazon
--   S3 objects based on their LastModifiedDate attribute in Amazon S3.
pathOptions_lastModifiedDateCondition :: Lens' PathOptions (Maybe FilterExpression)

-- | A structure that maps names of parameters used in the Amazon S3 path
--   of a dataset to their definitions.
pathOptions_parameters :: Lens' PathOptions (Maybe (HashMap Text DatasetParameter))

-- | If provided, this structure imposes a limit on a number of files that
--   should be selected.
pathOptions_filesLimit :: Lens' PathOptions (Maybe FilesLimit)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.PathOptions.PathOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.PathOptions.PathOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.PathOptions.PathOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.PathOptions.PathOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.PathOptions.PathOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.PathOptions.PathOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.PathOptions.PathOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.PathOptions.PathOptions


module Amazonka.DataBrew.Types.RecipeAction

-- | Represents a transformation and associated parameters that are used to
--   apply a change to a DataBrew dataset. For more information, see
--   <a>Recipe actions reference</a>.
--   
--   <i>See:</i> <a>newRecipeAction</a> smart constructor.
data RecipeAction
RecipeAction' :: Maybe (HashMap Text Text) -> Text -> RecipeAction

-- | Contextual parameters for the transformation.
[$sel:parameters:RecipeAction'] :: RecipeAction -> Maybe (HashMap Text Text)

-- | The name of a valid DataBrew transformation to be performed on the
--   data.
[$sel:operation:RecipeAction'] :: RecipeAction -> Text

-- | Create a value of <a>RecipeAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:RecipeAction'</a>, <a>recipeAction_parameters</a> -
--   Contextual parameters for the transformation.
--   
--   <a>$sel:operation:RecipeAction'</a>, <a>recipeAction_operation</a> -
--   The name of a valid DataBrew transformation to be performed on the
--   data.
newRecipeAction :: Text -> RecipeAction

-- | Contextual parameters for the transformation.
recipeAction_parameters :: Lens' RecipeAction (Maybe (HashMap Text Text))

-- | The name of a valid DataBrew transformation to be performed on the
--   data.
recipeAction_operation :: Lens' RecipeAction Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.RecipeAction.RecipeAction
instance GHC.Show.Show Amazonka.DataBrew.Types.RecipeAction.RecipeAction
instance GHC.Read.Read Amazonka.DataBrew.Types.RecipeAction.RecipeAction
instance GHC.Classes.Eq Amazonka.DataBrew.Types.RecipeAction.RecipeAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.RecipeAction.RecipeAction
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.RecipeAction.RecipeAction
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.RecipeAction.RecipeAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.RecipeAction.RecipeAction


module Amazonka.DataBrew.Types.RecipeReference

-- | Represents the name and version of a DataBrew recipe.
--   
--   <i>See:</i> <a>newRecipeReference</a> smart constructor.
data RecipeReference
RecipeReference' :: Maybe Text -> Text -> RecipeReference

-- | The identifier for the version for the recipe.
[$sel:recipeVersion:RecipeReference'] :: RecipeReference -> Maybe Text

-- | The name of the recipe.
[$sel:name:RecipeReference'] :: RecipeReference -> Text

-- | Create a value of <a>RecipeReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:RecipeReference'</a>,
--   <a>recipeReference_recipeVersion</a> - The identifier for the version
--   for the recipe.
--   
--   <a>$sel:name:RecipeReference'</a>, <a>recipeReference_name</a> - The
--   name of the recipe.
newRecipeReference :: Text -> RecipeReference

-- | The identifier for the version for the recipe.
recipeReference_recipeVersion :: Lens' RecipeReference (Maybe Text)

-- | The name of the recipe.
recipeReference_name :: Lens' RecipeReference Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.RecipeReference.RecipeReference
instance GHC.Show.Show Amazonka.DataBrew.Types.RecipeReference.RecipeReference
instance GHC.Read.Read Amazonka.DataBrew.Types.RecipeReference.RecipeReference
instance GHC.Classes.Eq Amazonka.DataBrew.Types.RecipeReference.RecipeReference
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.RecipeReference.RecipeReference
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.RecipeReference.RecipeReference
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.RecipeReference.RecipeReference
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.RecipeReference.RecipeReference


module Amazonka.DataBrew.Types.RecipeStep

-- | Represents a single step from a DataBrew recipe to be performed.
--   
--   <i>See:</i> <a>newRecipeStep</a> smart constructor.
data RecipeStep
RecipeStep' :: Maybe [ConditionExpression] -> RecipeAction -> RecipeStep

-- | One or more conditions that must be met for the recipe step to
--   succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
[$sel:conditionExpressions:RecipeStep'] :: RecipeStep -> Maybe [ConditionExpression]

-- | The particular action to be performed in the recipe step.
[$sel:action:RecipeStep'] :: RecipeStep -> RecipeAction

-- | Create a value of <a>RecipeStep</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conditionExpressions:RecipeStep'</a>,
--   <a>recipeStep_conditionExpressions</a> - One or more conditions that
--   must be met for the recipe step to succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
--   
--   <a>$sel:action:RecipeStep'</a>, <a>recipeStep_action</a> - The
--   particular action to be performed in the recipe step.
newRecipeStep :: RecipeAction -> RecipeStep

-- | One or more conditions that must be met for the recipe step to
--   succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
recipeStep_conditionExpressions :: Lens' RecipeStep (Maybe [ConditionExpression])

-- | The particular action to be performed in the recipe step.
recipeStep_action :: Lens' RecipeStep RecipeAction
instance GHC.Generics.Generic Amazonka.DataBrew.Types.RecipeStep.RecipeStep
instance GHC.Show.Show Amazonka.DataBrew.Types.RecipeStep.RecipeStep
instance GHC.Read.Read Amazonka.DataBrew.Types.RecipeStep.RecipeStep
instance GHC.Classes.Eq Amazonka.DataBrew.Types.RecipeStep.RecipeStep
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.RecipeStep.RecipeStep
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.RecipeStep.RecipeStep
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.RecipeStep.RecipeStep
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.RecipeStep.RecipeStep


module Amazonka.DataBrew.Types.Recipe

-- | Represents one or more actions to be performed on a DataBrew dataset.
--   
--   <i>See:</i> <a>newRecipe</a> smart constructor.
data Recipe
Recipe' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [RecipeStep] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Recipe

-- | The last modification date and time of the recipe.
[$sel:lastModifiedDate:Recipe'] :: Recipe -> Maybe POSIX

-- | The date and time that the recipe was created.
[$sel:createDate:Recipe'] :: Recipe -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the user who published the recipe.
[$sel:publishedBy:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who created the recipe.
[$sel:createdBy:Recipe'] :: Recipe -> Maybe Text

-- | A list of steps that are defined by the recipe.
[$sel:steps:Recipe'] :: Recipe -> Maybe [RecipeStep]

-- | The date and time when the recipe was published.
[$sel:publishedDate:Recipe'] :: Recipe -> Maybe POSIX

-- | The Amazon Resource Name (ARN) for the recipe.
[$sel:resourceArn:Recipe'] :: Recipe -> Maybe Text

-- | The identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
[$sel:recipeVersion:Recipe'] :: Recipe -> Maybe Text

-- | The name of the project that the recipe is associated with.
[$sel:projectName:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   recipe.
[$sel:lastModifiedBy:Recipe'] :: Recipe -> Maybe Text

-- | The description of the recipe.
[$sel:description:Recipe'] :: Recipe -> Maybe Text

-- | Metadata tags that have been applied to the recipe.
[$sel:tags:Recipe'] :: Recipe -> Maybe (HashMap Text Text)

-- | The unique name for the recipe.
[$sel:name:Recipe'] :: Recipe -> Text

-- | Create a value of <a>Recipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Recipe'</a>, <a>recipe_lastModifiedDate</a> -
--   The last modification date and time of the recipe.
--   
--   <a>$sel:createDate:Recipe'</a>, <a>recipe_createDate</a> - The date
--   and time that the recipe was created.
--   
--   <a>$sel:publishedBy:Recipe'</a>, <a>recipe_publishedBy</a> - The
--   Amazon Resource Name (ARN) of the user who published the recipe.
--   
--   <a>$sel:createdBy:Recipe'</a>, <a>recipe_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who created the recipe.
--   
--   <a>$sel:steps:Recipe'</a>, <a>recipe_steps</a> - A list of steps that
--   are defined by the recipe.
--   
--   <a>$sel:publishedDate:Recipe'</a>, <a>recipe_publishedDate</a> - The
--   date and time when the recipe was published.
--   
--   <a>$sel:resourceArn:Recipe'</a>, <a>recipe_resourceArn</a> - The
--   Amazon Resource Name (ARN) for the recipe.
--   
--   <a>$sel:recipeVersion:Recipe'</a>, <a>recipe_recipeVersion</a> - The
--   identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
--   
--   <a>$sel:projectName:Recipe'</a>, <a>recipe_projectName</a> - The name
--   of the project that the recipe is associated with.
--   
--   <a>$sel:lastModifiedBy:Recipe'</a>, <a>recipe_lastModifiedBy</a> - The
--   Amazon Resource Name (ARN) of the user who last modified the recipe.
--   
--   <a>$sel:description:Recipe'</a>, <a>recipe_description</a> - The
--   description of the recipe.
--   
--   <a>$sel:tags:Recipe'</a>, <a>recipe_tags</a> - Metadata tags that have
--   been applied to the recipe.
--   
--   <a>$sel:name:Recipe'</a>, <a>recipe_name</a> - The unique name for the
--   recipe.
newRecipe :: Text -> Recipe

-- | The last modification date and time of the recipe.
recipe_lastModifiedDate :: Lens' Recipe (Maybe UTCTime)

-- | The date and time that the recipe was created.
recipe_createDate :: Lens' Recipe (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who published the recipe.
recipe_publishedBy :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who created the recipe.
recipe_createdBy :: Lens' Recipe (Maybe Text)

-- | A list of steps that are defined by the recipe.
recipe_steps :: Lens' Recipe (Maybe [RecipeStep])

-- | The date and time when the recipe was published.
recipe_publishedDate :: Lens' Recipe (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) for the recipe.
recipe_resourceArn :: Lens' Recipe (Maybe Text)

-- | The identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
recipe_recipeVersion :: Lens' Recipe (Maybe Text)

-- | The name of the project that the recipe is associated with.
recipe_projectName :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   recipe.
recipe_lastModifiedBy :: Lens' Recipe (Maybe Text)

-- | The description of the recipe.
recipe_description :: Lens' Recipe (Maybe Text)

-- | Metadata tags that have been applied to the recipe.
recipe_tags :: Lens' Recipe (Maybe (HashMap Text Text))

-- | The unique name for the recipe.
recipe_name :: Lens' Recipe Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Recipe.Recipe
instance GHC.Show.Show Amazonka.DataBrew.Types.Recipe.Recipe
instance GHC.Read.Read Amazonka.DataBrew.Types.Recipe.Recipe
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Recipe.Recipe
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Recipe.Recipe
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Recipe.Recipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Recipe.Recipe


module Amazonka.DataBrew.Types.RecipeVersionErrorDetail

-- | Represents any errors encountered when attempting to delete multiple
--   recipe versions.
--   
--   <i>See:</i> <a>newRecipeVersionErrorDetail</a> smart constructor.
data RecipeVersionErrorDetail
RecipeVersionErrorDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> RecipeVersionErrorDetail

-- | The identifier for the recipe version associated with this error.
[$sel:recipeVersion:RecipeVersionErrorDetail'] :: RecipeVersionErrorDetail -> Maybe Text

-- | The HTTP status code for the error.
[$sel:errorCode:RecipeVersionErrorDetail'] :: RecipeVersionErrorDetail -> Maybe Text

-- | The text of the error message.
[$sel:errorMessage:RecipeVersionErrorDetail'] :: RecipeVersionErrorDetail -> Maybe Text

-- | Create a value of <a>RecipeVersionErrorDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_recipeVersion</a> - The identifier for the
--   recipe version associated with this error.
--   
--   <a>$sel:errorCode:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_errorCode</a> - The HTTP status code for
--   the error.
--   
--   <a>$sel:errorMessage:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_errorMessage</a> - The text of the error
--   message.
newRecipeVersionErrorDetail :: RecipeVersionErrorDetail

-- | The identifier for the recipe version associated with this error.
recipeVersionErrorDetail_recipeVersion :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | The HTTP status code for the error.
recipeVersionErrorDetail_errorCode :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | The text of the error message.
recipeVersionErrorDetail_errorMessage :: Lens' RecipeVersionErrorDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.RecipeVersionErrorDetail.RecipeVersionErrorDetail
instance GHC.Show.Show Amazonka.DataBrew.Types.RecipeVersionErrorDetail.RecipeVersionErrorDetail
instance GHC.Read.Read Amazonka.DataBrew.Types.RecipeVersionErrorDetail.RecipeVersionErrorDetail
instance GHC.Classes.Eq Amazonka.DataBrew.Types.RecipeVersionErrorDetail.RecipeVersionErrorDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.RecipeVersionErrorDetail.RecipeVersionErrorDetail
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.RecipeVersionErrorDetail.RecipeVersionErrorDetail
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.RecipeVersionErrorDetail.RecipeVersionErrorDetail


module Amazonka.DataBrew.Types.S3Location

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can read input data, or write output from a job.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Text -> S3Location

-- | The unique name of the object in the bucket.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | The Amazon S3 bucket name.
[$sel:bucket:S3Location'] :: S3Location -> Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The unique name
--   of the object in the bucket.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The Amazon
--   S3 bucket name.
newS3Location :: Text -> S3Location

-- | The unique name of the object in the bucket.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The Amazon S3 bucket name.
s3Location_bucket :: Lens' S3Location Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.S3Location.S3Location
instance GHC.Show.Show Amazonka.DataBrew.Types.S3Location.S3Location
instance GHC.Read.Read Amazonka.DataBrew.Types.S3Location.S3Location
instance GHC.Classes.Eq Amazonka.DataBrew.Types.S3Location.S3Location
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.S3Location.S3Location
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.S3Location.S3Location
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.S3Location.S3Location
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.S3Location.S3Location


module Amazonka.DataBrew.Types.Output

-- | Represents options that specify how and where in Amazon S3 DataBrew
--   writes the output generated by recipe jobs or profile jobs.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe [Text] -> Maybe OutputFormatOptions -> Maybe OutputFormat -> Maybe CompressionFormat -> Maybe Bool -> S3Location -> Output

-- | The names of one or more partition columns for the output of the job.
[$sel:partitionColumns:Output'] :: Output -> Maybe [Text]

-- | Represents options that define how DataBrew formats job output files.
[$sel:formatOptions:Output'] :: Output -> Maybe OutputFormatOptions

-- | The data format of the output of the job.
[$sel:format:Output'] :: Output -> Maybe OutputFormat

-- | The compression algorithm used to compress the output text of the job.
[$sel:compressionFormat:Output'] :: Output -> Maybe CompressionFormat

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output.
[$sel:overwrite:Output'] :: Output -> Maybe Bool

-- | The location in Amazon S3 where the job writes its output.
[$sel:location:Output'] :: Output -> S3Location

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionColumns:Output'</a>, <a>output_partitionColumns</a> -
--   The names of one or more partition columns for the output of the job.
--   
--   <a>$sel:formatOptions:Output'</a>, <a>output_formatOptions</a> -
--   Represents options that define how DataBrew formats job output files.
--   
--   <a>$sel:format:Output'</a>, <a>output_format</a> - The data format of
--   the output of the job.
--   
--   <a>$sel:compressionFormat:Output'</a>, <a>output_compressionFormat</a>
--   - The compression algorithm used to compress the output text of the
--   job.
--   
--   <a>$sel:overwrite:Output'</a>, <a>output_overwrite</a> - A value that,
--   if true, means that any data in the location specified for output is
--   overwritten with new output.
--   
--   <a>$sel:location:Output'</a>, <a>output_location</a> - The location in
--   Amazon S3 where the job writes its output.
newOutput :: S3Location -> Output

-- | The names of one or more partition columns for the output of the job.
output_partitionColumns :: Lens' Output (Maybe [Text])

-- | Represents options that define how DataBrew formats job output files.
output_formatOptions :: Lens' Output (Maybe OutputFormatOptions)

-- | The data format of the output of the job.
output_format :: Lens' Output (Maybe OutputFormat)

-- | The compression algorithm used to compress the output text of the job.
output_compressionFormat :: Lens' Output (Maybe CompressionFormat)

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output.
output_overwrite :: Lens' Output (Maybe Bool)

-- | The location in Amazon S3 where the job writes its output.
output_location :: Lens' Output S3Location
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Output.Output
instance GHC.Show.Show Amazonka.DataBrew.Types.Output.Output
instance GHC.Read.Read Amazonka.DataBrew.Types.Output.Output
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Output.Output
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Output.Output
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Output.Output
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Output.Output
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.Output.Output


module Amazonka.DataBrew.Types.DatabaseTableOutputOptions

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
--   
--   <i>See:</i> <a>newDatabaseTableOutputOptions</a> smart constructor.
data DatabaseTableOutputOptions
DatabaseTableOutputOptions' :: Maybe S3Location -> Text -> DatabaseTableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can store intermediate results.
[$sel:tempDirectory:DatabaseTableOutputOptions'] :: DatabaseTableOutputOptions -> Maybe S3Location

-- | A prefix for the name of a table DataBrew will create in the database.
[$sel:tableName:DatabaseTableOutputOptions'] :: DatabaseTableOutputOptions -> Text

-- | Create a value of <a>DatabaseTableOutputOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DatabaseTableOutputOptions'</a>,
--   <a>databaseTableOutputOptions_tempDirectory</a> - Represents an Amazon
--   S3 location (bucket name and object key) where DataBrew can store
--   intermediate results.
--   
--   <a>$sel:tableName:DatabaseTableOutputOptions'</a>,
--   <a>databaseTableOutputOptions_tableName</a> - A prefix for the name of
--   a table DataBrew will create in the database.
newDatabaseTableOutputOptions :: Text -> DatabaseTableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can store intermediate results.
databaseTableOutputOptions_tempDirectory :: Lens' DatabaseTableOutputOptions (Maybe S3Location)

-- | A prefix for the name of a table DataBrew will create in the database.
databaseTableOutputOptions_tableName :: Lens' DatabaseTableOutputOptions Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DatabaseTableOutputOptions.DatabaseTableOutputOptions


module Amazonka.DataBrew.Types.DatabaseOutput

-- | Represents a JDBC database output object which defines the output
--   destination for a DataBrew recipe job to write into.
--   
--   <i>See:</i> <a>newDatabaseOutput</a> smart constructor.
data DatabaseOutput
DatabaseOutput' :: Maybe DatabaseOutputMode -> Text -> DatabaseTableOutputOptions -> DatabaseOutput

-- | The output mode to write into the database. Currently supported
--   option: NEW_TABLE.
[$sel:databaseOutputMode:DatabaseOutput'] :: DatabaseOutput -> Maybe DatabaseOutputMode

-- | The Glue connection that stores the connection information for the
--   target database.
[$sel:glueConnectionName:DatabaseOutput'] :: DatabaseOutput -> Text

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
[$sel:databaseOptions:DatabaseOutput'] :: DatabaseOutput -> DatabaseTableOutputOptions

-- | Create a value of <a>DatabaseOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseOutputMode:DatabaseOutput'</a>,
--   <a>databaseOutput_databaseOutputMode</a> - The output mode to write
--   into the database. Currently supported option: NEW_TABLE.
--   
--   <a>$sel:glueConnectionName:DatabaseOutput'</a>,
--   <a>databaseOutput_glueConnectionName</a> - The Glue connection that
--   stores the connection information for the target database.
--   
--   <a>$sel:databaseOptions:DatabaseOutput'</a>,
--   <a>databaseOutput_databaseOptions</a> - Represents options that
--   specify how and where DataBrew writes the database output generated by
--   recipe jobs.
newDatabaseOutput :: Text -> DatabaseTableOutputOptions -> DatabaseOutput

-- | The output mode to write into the database. Currently supported
--   option: NEW_TABLE.
databaseOutput_databaseOutputMode :: Lens' DatabaseOutput (Maybe DatabaseOutputMode)

-- | The Glue connection that stores the connection information for the
--   target database.
databaseOutput_glueConnectionName :: Lens' DatabaseOutput Text

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
databaseOutput_databaseOptions :: Lens' DatabaseOutput DatabaseTableOutputOptions
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput
instance GHC.Show.Show Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput
instance GHC.Read.Read Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DatabaseOutput.DatabaseOutput


module Amazonka.DataBrew.Types.DatabaseInputDefinition

-- | Connection information for dataset input files stored in a database.
--   
--   <i>See:</i> <a>newDatabaseInputDefinition</a> smart constructor.
data DatabaseInputDefinition
DatabaseInputDefinition' :: Maybe S3Location -> Text -> Text -> DatabaseInputDefinition
[$sel:tempDirectory:DatabaseInputDefinition'] :: DatabaseInputDefinition -> Maybe S3Location

-- | The Glue Connection that stores the connection information for the
--   target database.
[$sel:glueConnectionName:DatabaseInputDefinition'] :: DatabaseInputDefinition -> Text

-- | The table within the target database.
[$sel:databaseTableName:DatabaseInputDefinition'] :: DatabaseInputDefinition -> Text

-- | Create a value of <a>DatabaseInputDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_tempDirectory</a> - Undocumented member.
--   
--   <a>$sel:glueConnectionName:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_glueConnectionName</a> - The Glue
--   Connection that stores the connection information for the target
--   database.
--   
--   <a>$sel:databaseTableName:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_databaseTableName</a> - The table within
--   the target database.
newDatabaseInputDefinition :: Text -> Text -> DatabaseInputDefinition

-- | Undocumented member.
databaseInputDefinition_tempDirectory :: Lens' DatabaseInputDefinition (Maybe S3Location)

-- | The Glue Connection that stores the connection information for the
--   target database.
databaseInputDefinition_glueConnectionName :: Lens' DatabaseInputDefinition Text

-- | The table within the target database.
databaseInputDefinition_databaseTableName :: Lens' DatabaseInputDefinition Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition
instance GHC.Show.Show Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition
instance GHC.Read.Read Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DatabaseInputDefinition.DatabaseInputDefinition


module Amazonka.DataBrew.Types.DataCatalogInputDefinition

-- | Represents how metadata stored in the Glue Data Catalog is defined in
--   a DataBrew dataset.
--   
--   <i>See:</i> <a>newDataCatalogInputDefinition</a> smart constructor.
data DataCatalogInputDefinition
DataCatalogInputDefinition' :: Maybe S3Location -> Maybe Text -> Text -> Text -> DataCatalogInputDefinition

-- | Represents an Amazon location where DataBrew can store intermediate
--   results.
[$sel:tempDirectory:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Maybe S3Location

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
[$sel:catalogId:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Maybe Text

-- | The name of a database in the Data Catalog.
[$sel:databaseName:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Text

-- | The name of a database table in the Data Catalog. This table
--   corresponds to a DataBrew dataset.
[$sel:tableName:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Text

-- | Create a value of <a>DataCatalogInputDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_tempDirectory</a> - Represents an Amazon
--   location where DataBrew can store intermediate results.
--   
--   <a>$sel:catalogId:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_catalogId</a> - The unique identifier of
--   the Amazon Web Services account that holds the Data Catalog that
--   stores the data.
--   
--   <a>$sel:databaseName:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_databaseName</a> - The name of a
--   database in the Data Catalog.
--   
--   <a>$sel:tableName:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_tableName</a> - The name of a database
--   table in the Data Catalog. This table corresponds to a DataBrew
--   dataset.
newDataCatalogInputDefinition :: Text -> Text -> DataCatalogInputDefinition

-- | Represents an Amazon location where DataBrew can store intermediate
--   results.
dataCatalogInputDefinition_tempDirectory :: Lens' DataCatalogInputDefinition (Maybe S3Location)

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
dataCatalogInputDefinition_catalogId :: Lens' DataCatalogInputDefinition (Maybe Text)

-- | The name of a database in the Data Catalog.
dataCatalogInputDefinition_databaseName :: Lens' DataCatalogInputDefinition Text

-- | The name of a database table in the Data Catalog. This table
--   corresponds to a DataBrew dataset.
dataCatalogInputDefinition_tableName :: Lens' DataCatalogInputDefinition Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition
instance GHC.Show.Show Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition
instance GHC.Read.Read Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DataCatalogInputDefinition.DataCatalogInputDefinition


module Amazonka.DataBrew.Types.Input

-- | Represents information on how DataBrew can find data, in either the
--   Glue Data Catalog or Amazon S3.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe DataCatalogInputDefinition -> Maybe S3Location -> Maybe DatabaseInputDefinition -> Input

-- | The Glue Data Catalog parameters for the data.
[$sel:dataCatalogInputDefinition:Input'] :: Input -> Maybe DataCatalogInputDefinition

-- | The Amazon S3 location where the data is stored.
[$sel:s3InputDefinition:Input'] :: Input -> Maybe S3Location

-- | Connection information for dataset input files stored in a database.
[$sel:databaseInputDefinition:Input'] :: Input -> Maybe DatabaseInputDefinition

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogInputDefinition:Input'</a>,
--   <a>input_dataCatalogInputDefinition</a> - The Glue Data Catalog
--   parameters for the data.
--   
--   <a>$sel:s3InputDefinition:Input'</a>, <a>input_s3InputDefinition</a> -
--   The Amazon S3 location where the data is stored.
--   
--   <a>$sel:databaseInputDefinition:Input'</a>,
--   <a>input_databaseInputDefinition</a> - Connection information for
--   dataset input files stored in a database.
newInput :: Input

-- | The Glue Data Catalog parameters for the data.
input_dataCatalogInputDefinition :: Lens' Input (Maybe DataCatalogInputDefinition)

-- | The Amazon S3 location where the data is stored.
input_s3InputDefinition :: Lens' Input (Maybe S3Location)

-- | Connection information for dataset input files stored in a database.
input_databaseInputDefinition :: Lens' Input (Maybe DatabaseInputDefinition)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Input.Input
instance GHC.Show.Show Amazonka.DataBrew.Types.Input.Input
instance GHC.Read.Read Amazonka.DataBrew.Types.Input.Input
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Input.Input
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Input.Input
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Input.Input
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Input.Input
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.Input.Input


module Amazonka.DataBrew.Types.S3TableOutputOptions

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
--   
--   <i>See:</i> <a>newS3TableOutputOptions</a> smart constructor.
data S3TableOutputOptions
S3TableOutputOptions' :: S3Location -> S3TableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can write output from a job.
[$sel:location:S3TableOutputOptions'] :: S3TableOutputOptions -> S3Location

-- | Create a value of <a>S3TableOutputOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:S3TableOutputOptions'</a>,
--   <a>s3TableOutputOptions_location</a> - Represents an Amazon S3
--   location (bucket name and object key) where DataBrew can write output
--   from a job.
newS3TableOutputOptions :: S3Location -> S3TableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can write output from a job.
s3TableOutputOptions_location :: Lens' S3TableOutputOptions S3Location
instance GHC.Generics.Generic Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions
instance GHC.Show.Show Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions
instance GHC.Read.Read Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions
instance GHC.Classes.Eq Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.S3TableOutputOptions.S3TableOutputOptions


module Amazonka.DataBrew.Types.DataCatalogOutput

-- | Represents options that specify how and where in the Glue Data Catalog
--   DataBrew writes the output generated by recipe jobs.
--   
--   <i>See:</i> <a>newDataCatalogOutput</a> smart constructor.
data DataCatalogOutput
DataCatalogOutput' :: Maybe DatabaseTableOutputOptions -> Maybe S3TableOutputOptions -> Maybe Text -> Maybe Bool -> Text -> Text -> DataCatalogOutput

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
[$sel:databaseOptions:DataCatalogOutput'] :: DataCatalogOutput -> Maybe DatabaseTableOutputOptions

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
[$sel:s3Options:DataCatalogOutput'] :: DataCatalogOutput -> Maybe S3TableOutputOptions

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
[$sel:catalogId:DataCatalogOutput'] :: DataCatalogOutput -> Maybe Text

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output. Not supported with
--   DatabaseOptions.
[$sel:overwrite:DataCatalogOutput'] :: DataCatalogOutput -> Maybe Bool

-- | The name of a database in the Data Catalog.
[$sel:databaseName:DataCatalogOutput'] :: DataCatalogOutput -> Text

-- | The name of a table in the Data Catalog.
[$sel:tableName:DataCatalogOutput'] :: DataCatalogOutput -> Text

-- | Create a value of <a>DataCatalogOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseOptions:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_databaseOptions</a> - Represents options that
--   specify how and where DataBrew writes the database output generated by
--   recipe jobs.
--   
--   <a>$sel:s3Options:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_s3Options</a> - Represents options that specify
--   how and where DataBrew writes the Amazon S3 output generated by recipe
--   jobs.
--   
--   <a>$sel:catalogId:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_catalogId</a> - The unique identifier of the
--   Amazon Web Services account that holds the Data Catalog that stores
--   the data.
--   
--   <a>$sel:overwrite:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_overwrite</a> - A value that, if true, means that
--   any data in the location specified for output is overwritten with new
--   output. Not supported with DatabaseOptions.
--   
--   <a>$sel:databaseName:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_databaseName</a> - The name of a database in the
--   Data Catalog.
--   
--   <a>$sel:tableName:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_tableName</a> - The name of a table in the Data
--   Catalog.
newDataCatalogOutput :: Text -> Text -> DataCatalogOutput

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
dataCatalogOutput_databaseOptions :: Lens' DataCatalogOutput (Maybe DatabaseTableOutputOptions)

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
dataCatalogOutput_s3Options :: Lens' DataCatalogOutput (Maybe S3TableOutputOptions)

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
dataCatalogOutput_catalogId :: Lens' DataCatalogOutput (Maybe Text)

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output. Not supported with
--   DatabaseOptions.
dataCatalogOutput_overwrite :: Lens' DataCatalogOutput (Maybe Bool)

-- | The name of a database in the Data Catalog.
dataCatalogOutput_databaseName :: Lens' DataCatalogOutput Text

-- | The name of a table in the Data Catalog.
dataCatalogOutput_tableName :: Lens' DataCatalogOutput Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput
instance GHC.Show.Show Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput
instance GHC.Read.Read Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput
instance GHC.Classes.Eq Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.DataCatalogOutput.DataCatalogOutput


module Amazonka.DataBrew.Types.SampleMode
newtype SampleMode
SampleMode' :: Text -> SampleMode
[fromSampleMode] :: SampleMode -> Text
pattern SampleMode_CUSTOM_ROWS :: SampleMode
pattern SampleMode_FULL_DATASET :: SampleMode
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.SampleMode.SampleMode
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.SampleMode.SampleMode
instance GHC.Generics.Generic Amazonka.DataBrew.Types.SampleMode.SampleMode
instance GHC.Classes.Ord Amazonka.DataBrew.Types.SampleMode.SampleMode
instance GHC.Classes.Eq Amazonka.DataBrew.Types.SampleMode.SampleMode
instance GHC.Read.Read Amazonka.DataBrew.Types.SampleMode.SampleMode
instance GHC.Show.Show Amazonka.DataBrew.Types.SampleMode.SampleMode


module Amazonka.DataBrew.Types.JobSample

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
--   
--   <i>See:</i> <a>newJobSample</a> smart constructor.
data JobSample
JobSample' :: Maybe Integer -> Maybe SampleMode -> JobSample

-- | The <tt>Size</tt> parameter is only required when the mode is
--   CUSTOM_ROWS. The profile job is run on the specified number of rows.
--   The maximum value for size is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
[$sel:size:JobSample'] :: JobSample -> Maybe Integer

-- | A value that determines whether the profile job is run on the entire
--   dataset or a specified number of rows. This value must be one of the
--   following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
[$sel:mode:JobSample'] :: JobSample -> Maybe SampleMode

-- | Create a value of <a>JobSample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:JobSample'</a>, <a>jobSample_size</a> - The <tt>Size</tt>
--   parameter is only required when the mode is CUSTOM_ROWS. The profile
--   job is run on the specified number of rows. The maximum value for size
--   is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
--   
--   <a>$sel:mode:JobSample'</a>, <a>jobSample_mode</a> - A value that
--   determines whether the profile job is run on the entire dataset or a
--   specified number of rows. This value must be one of the following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
newJobSample :: JobSample

-- | The <tt>Size</tt> parameter is only required when the mode is
--   CUSTOM_ROWS. The profile job is run on the specified number of rows.
--   The maximum value for size is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
jobSample_size :: Lens' JobSample (Maybe Integer)

-- | A value that determines whether the profile job is run on the entire
--   dataset or a specified number of rows. This value must be one of the
--   following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
jobSample_mode :: Lens' JobSample (Maybe SampleMode)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.JobSample.JobSample
instance GHC.Show.Show Amazonka.DataBrew.Types.JobSample.JobSample
instance GHC.Read.Read Amazonka.DataBrew.Types.JobSample.JobSample
instance GHC.Classes.Eq Amazonka.DataBrew.Types.JobSample.JobSample
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.JobSample.JobSample
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.JobSample.JobSample
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.JobSample.JobSample
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.JobSample.JobSample


module Amazonka.DataBrew.Types.JobRun

-- | Represents one run of a DataBrew job.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe POSIX -> Maybe JobRunState -> Maybe (NonEmpty DataCatalogOutput) -> Maybe Text -> Maybe POSIX -> Maybe RecipeReference -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe Int -> Maybe LogSubscription -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobSample -> JobRun

-- | The date and time when the job completed processing.
[$sel:completedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The current state of the job run entity itself.
[$sel:state:JobRun'] :: JobRun -> Maybe JobRunState

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:JobRun'] :: JobRun -> Maybe (NonEmpty DataCatalogOutput)

-- | The name of the job being processed during this run.
[$sel:jobName:JobRun'] :: JobRun -> Maybe Text

-- | The date and time when the job run began.
[$sel:startedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The set of steps processed by the job.
[$sel:recipeReference:JobRun'] :: JobRun -> Maybe RecipeReference

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
[$sel:databaseOutputs:JobRun'] :: JobRun -> Maybe (NonEmpty DatabaseOutput)

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
[$sel:logGroupName:JobRun'] :: JobRun -> Maybe Text

-- | One or more output artifacts from a job run.
[$sel:outputs:JobRun'] :: JobRun -> Maybe (NonEmpty Output)

-- | The unique identifier of the job run.
[$sel:runId:JobRun'] :: JobRun -> Maybe Text

-- | The amount of time, in seconds, during which a job run consumed
--   resources.
[$sel:executionTime:JobRun'] :: JobRun -> Maybe Int

-- | The current status of Amazon CloudWatch logging for the job run.
[$sel:logSubscription:JobRun'] :: JobRun -> Maybe LogSubscription

-- | The Amazon Resource Name (ARN) of the user who initiated the job run.
[$sel:startedBy:JobRun'] :: JobRun -> Maybe Text

-- | The name of the dataset for the job to process.
[$sel:datasetName:JobRun'] :: JobRun -> Maybe Text

-- | The number of times that DataBrew has attempted to run the job.
[$sel:attempt:JobRun'] :: JobRun -> Maybe Int

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
[$sel:errorMessage:JobRun'] :: JobRun -> Maybe Text

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
[$sel:jobSample:JobRun'] :: JobRun -> Maybe JobSample

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:JobRun'</a>, <a>jobRun_completedOn</a> - The date
--   and time when the job completed processing.
--   
--   <a>$sel:state:JobRun'</a>, <a>jobRun_state</a> - The current state of
--   the job run entity itself.
--   
--   <a>$sel:dataCatalogOutputs:JobRun'</a>,
--   <a>jobRun_dataCatalogOutputs</a> - One or more artifacts that
--   represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:jobName:JobRun'</a>, <a>jobRun_jobName</a> - The name of the
--   job being processed during this run.
--   
--   <a>$sel:startedOn:JobRun'</a>, <a>jobRun_startedOn</a> - The date and
--   time when the job run began.
--   
--   <a>$sel:recipeReference:JobRun'</a>, <a>jobRun_recipeReference</a> -
--   The set of steps processed by the job.
--   
--   <a>$sel:databaseOutputs:JobRun'</a>, <a>jobRun_databaseOutputs</a> -
--   Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
--   
--   <a>$sel:logGroupName:JobRun'</a>, <a>jobRun_logGroupName</a> - The
--   name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
--   
--   <a>$sel:outputs:JobRun'</a>, <a>jobRun_outputs</a> - One or more
--   output artifacts from a job run.
--   
--   <a>$sel:runId:JobRun'</a>, <a>jobRun_runId</a> - The unique identifier
--   of the job run.
--   
--   <a>$sel:executionTime:JobRun'</a>, <a>jobRun_executionTime</a> - The
--   amount of time, in seconds, during which a job run consumed resources.
--   
--   <a>$sel:logSubscription:JobRun'</a>, <a>jobRun_logSubscription</a> -
--   The current status of Amazon CloudWatch logging for the job run.
--   
--   <a>$sel:startedBy:JobRun'</a>, <a>jobRun_startedBy</a> - The Amazon
--   Resource Name (ARN) of the user who initiated the job run.
--   
--   <a>$sel:datasetName:JobRun'</a>, <a>jobRun_datasetName</a> - The name
--   of the dataset for the job to process.
--   
--   <a>$sel:attempt:JobRun'</a>, <a>jobRun_attempt</a> - The number of
--   times that DataBrew has attempted to run the job.
--   
--   <a>$sel:errorMessage:JobRun'</a>, <a>jobRun_errorMessage</a> - A
--   message indicating an error (if any) that was encountered when the job
--   ran.
--   
--   <a>$sel:jobSample:JobRun'</a>, <a>jobRun_jobSample</a> - A sample
--   configuration for profile jobs only, which determines the number of
--   rows on which the profile job is run. If a <tt>JobSample</tt> value
--   isn't provided, the default is used. The default value is CUSTOM_ROWS
--   for the mode parameter and 20,000 for the size parameter.
newJobRun :: JobRun

-- | The date and time when the job completed processing.
jobRun_completedOn :: Lens' JobRun (Maybe UTCTime)

-- | The current state of the job run entity itself.
jobRun_state :: Lens' JobRun (Maybe JobRunState)

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
jobRun_dataCatalogOutputs :: Lens' JobRun (Maybe (NonEmpty DataCatalogOutput))

-- | The name of the job being processed during this run.
jobRun_jobName :: Lens' JobRun (Maybe Text)

-- | The date and time when the job run began.
jobRun_startedOn :: Lens' JobRun (Maybe UTCTime)

-- | The set of steps processed by the job.
jobRun_recipeReference :: Lens' JobRun (Maybe RecipeReference)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
jobRun_databaseOutputs :: Lens' JobRun (Maybe (NonEmpty DatabaseOutput))

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
jobRun_logGroupName :: Lens' JobRun (Maybe Text)

-- | One or more output artifacts from a job run.
jobRun_outputs :: Lens' JobRun (Maybe (NonEmpty Output))

-- | The unique identifier of the job run.
jobRun_runId :: Lens' JobRun (Maybe Text)

-- | The amount of time, in seconds, during which a job run consumed
--   resources.
jobRun_executionTime :: Lens' JobRun (Maybe Int)

-- | The current status of Amazon CloudWatch logging for the job run.
jobRun_logSubscription :: Lens' JobRun (Maybe LogSubscription)

-- | The Amazon Resource Name (ARN) of the user who initiated the job run.
jobRun_startedBy :: Lens' JobRun (Maybe Text)

-- | The name of the dataset for the job to process.
jobRun_datasetName :: Lens' JobRun (Maybe Text)

-- | The number of times that DataBrew has attempted to run the job.
jobRun_attempt :: Lens' JobRun (Maybe Int)

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
jobRun_errorMessage :: Lens' JobRun (Maybe Text)

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
jobRun_jobSample :: Lens' JobRun (Maybe JobSample)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.JobRun.JobRun
instance GHC.Show.Show Amazonka.DataBrew.Types.JobRun.JobRun
instance GHC.Read.Read Amazonka.DataBrew.Types.JobRun.JobRun
instance GHC.Classes.Eq Amazonka.DataBrew.Types.JobRun.JobRun
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.JobRun.JobRun
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.JobRun.JobRun
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.JobRun.JobRun


module Amazonka.DataBrew.Types.Job

-- | Represents all of the attributes of a DataBrew job.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe POSIX -> Maybe POSIX -> Maybe RecipeReference -> Maybe Text -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe LogSubscription -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobType -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe JobSample -> Text -> Job

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:Job'] :: Job -> Maybe (NonEmpty DataCatalogOutput)

-- | The modification date and time of the job.
[$sel:lastModifiedDate:Job'] :: Job -> Maybe POSIX

-- | The date and time that the job was created.
[$sel:createDate:Job'] :: Job -> Maybe POSIX

-- | A set of steps that the job runs.
[$sel:recipeReference:Job'] :: Job -> Maybe RecipeReference

-- | The Amazon Resource Name (ARN) of the user who created the job.
[$sel:createdBy:Job'] :: Job -> Maybe Text

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
[$sel:databaseOutputs:Job'] :: Job -> Maybe (NonEmpty DatabaseOutput)

-- | The ID of the Amazon Web Services account that owns the job.
[$sel:accountId:Job'] :: Job -> Maybe Text

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
[$sel:encryptionMode:Job'] :: Job -> Maybe EncryptionMode

-- | One or more artifacts that represent output from running the job.
[$sel:outputs:Job'] :: Job -> Maybe (NonEmpty Output)

-- | The unique Amazon Resource Name (ARN) for the job.
[$sel:resourceArn:Job'] :: Job -> Maybe Text

-- | The current status of Amazon CloudWatch logging for the job.
[$sel:logSubscription:Job'] :: Job -> Maybe LogSubscription

-- | The name of the project that the job is associated with.
[$sel:projectName:Job'] :: Job -> Maybe Text

-- | The maximum number of times to retry the job after a job run fails.
[$sel:maxRetries:Job'] :: Job -> Maybe Natural

-- | A dataset that the job is to process.
[$sel:datasetName:Job'] :: Job -> Maybe Text

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
[$sel:encryptionKeyArn:Job'] :: Job -> Maybe Text

-- | The maximum number of nodes that can be consumed when the job
--   processes data.
[$sel:maxCapacity:Job'] :: Job -> Maybe Int

-- | The Amazon Resource Name (ARN) of the user who last modified the job.
[$sel:lastModifiedBy:Job'] :: Job -> Maybe Text

-- | The job type of the job, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
[$sel:type':Job'] :: Job -> Maybe JobType

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
[$sel:timeout:Job'] :: Job -> Maybe Natural

-- | Metadata tags that have been applied to the job.
[$sel:tags:Job'] :: Job -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the role to be assumed for this job.
[$sel:roleArn:Job'] :: Job -> Maybe Text

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default value is used.
--   The default value is CUSTOM_ROWS for the mode parameter and 20,000 for
--   the size parameter.
[$sel:jobSample:Job'] :: Job -> Maybe JobSample

-- | The unique name of the job.
[$sel:name:Job'] :: Job -> Text

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:Job'</a>, <a>job_dataCatalogOutputs</a> -
--   One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
--   
--   <a>$sel:lastModifiedDate:Job'</a>, <a>job_lastModifiedDate</a> - The
--   modification date and time of the job.
--   
--   <a>$sel:createDate:Job'</a>, <a>job_createDate</a> - The date and time
--   that the job was created.
--   
--   <a>$sel:recipeReference:Job'</a>, <a>job_recipeReference</a> - A set
--   of steps that the job runs.
--   
--   <a>$sel:createdBy:Job'</a>, <a>job_createdBy</a> - The Amazon Resource
--   Name (ARN) of the user who created the job.
--   
--   <a>$sel:databaseOutputs:Job'</a>, <a>job_databaseOutputs</a> -
--   Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
--   
--   <a>$sel:accountId:Job'</a>, <a>job_accountId</a> - The ID of the
--   Amazon Web Services account that owns the job.
--   
--   <a>$sel:encryptionMode:Job'</a>, <a>job_encryptionMode</a> - The
--   encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:Job'</a>, <a>job_outputs</a> - One or more artifacts
--   that represent output from running the job.
--   
--   <a>$sel:resourceArn:Job'</a>, <a>job_resourceArn</a> - The unique
--   Amazon Resource Name (ARN) for the job.
--   
--   <a>$sel:logSubscription:Job'</a>, <a>job_logSubscription</a> - The
--   current status of Amazon CloudWatch logging for the job.
--   
--   <a>$sel:projectName:Job'</a>, <a>job_projectName</a> - The name of the
--   project that the job is associated with.
--   
--   <a>$sel:maxRetries:Job'</a>, <a>job_maxRetries</a> - The maximum
--   number of times to retry the job after a job run fails.
--   
--   <a>$sel:datasetName:Job'</a>, <a>job_datasetName</a> - A dataset that
--   the job is to process.
--   
--   <a>$sel:encryptionKeyArn:Job'</a>, <a>job_encryptionKeyArn</a> - The
--   Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
--   
--   <a>$sel:maxCapacity:Job'</a>, <a>job_maxCapacity</a> - The maximum
--   number of nodes that can be consumed when the job processes data.
--   
--   <a>$sel:lastModifiedBy:Job'</a>, <a>job_lastModifiedBy</a> - The
--   Amazon Resource Name (ARN) of the user who last modified the job.
--   
--   <a>$sel:type':Job'</a>, <a>job_type</a> - The job type of the job,
--   which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
--   
--   <a>$sel:timeout:Job'</a>, <a>job_timeout</a> - The job's timeout in
--   minutes. A job that attempts to run longer than this timeout period
--   ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:Job'</a>, <a>job_tags</a> - Metadata tags that have been
--   applied to the job.
--   
--   <a>$sel:roleArn:Job'</a>, <a>job_roleArn</a> - The Amazon Resource
--   Name (ARN) of the role to be assumed for this job.
--   
--   <a>$sel:jobSample:Job'</a>, <a>job_jobSample</a> - A sample
--   configuration for profile jobs only, which determines the number of
--   rows on which the profile job is run. If a <tt>JobSample</tt> value
--   isn't provided, the default value is used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The unique name of the job.
newJob :: Text -> Job

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
job_dataCatalogOutputs :: Lens' Job (Maybe (NonEmpty DataCatalogOutput))

-- | The modification date and time of the job.
job_lastModifiedDate :: Lens' Job (Maybe UTCTime)

-- | The date and time that the job was created.
job_createDate :: Lens' Job (Maybe UTCTime)

-- | A set of steps that the job runs.
job_recipeReference :: Lens' Job (Maybe RecipeReference)

-- | The Amazon Resource Name (ARN) of the user who created the job.
job_createdBy :: Lens' Job (Maybe Text)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
job_databaseOutputs :: Lens' Job (Maybe (NonEmpty DatabaseOutput))

-- | The ID of the Amazon Web Services account that owns the job.
job_accountId :: Lens' Job (Maybe Text)

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
job_encryptionMode :: Lens' Job (Maybe EncryptionMode)

-- | One or more artifacts that represent output from running the job.
job_outputs :: Lens' Job (Maybe (NonEmpty Output))

-- | The unique Amazon Resource Name (ARN) for the job.
job_resourceArn :: Lens' Job (Maybe Text)

-- | The current status of Amazon CloudWatch logging for the job.
job_logSubscription :: Lens' Job (Maybe LogSubscription)

-- | The name of the project that the job is associated with.
job_projectName :: Lens' Job (Maybe Text)

-- | The maximum number of times to retry the job after a job run fails.
job_maxRetries :: Lens' Job (Maybe Natural)

-- | A dataset that the job is to process.
job_datasetName :: Lens' Job (Maybe Text)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
job_encryptionKeyArn :: Lens' Job (Maybe Text)

-- | The maximum number of nodes that can be consumed when the job
--   processes data.
job_maxCapacity :: Lens' Job (Maybe Int)

-- | The Amazon Resource Name (ARN) of the user who last modified the job.
job_lastModifiedBy :: Lens' Job (Maybe Text)

-- | The job type of the job, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
job_type :: Lens' Job (Maybe JobType)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
job_timeout :: Lens' Job (Maybe Natural)

-- | Metadata tags that have been applied to the job.
job_tags :: Lens' Job (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role to be assumed for this job.
job_roleArn :: Lens' Job (Maybe Text)

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default value is used.
--   The default value is CUSTOM_ROWS for the mode parameter and 20,000 for
--   the size parameter.
job_jobSample :: Lens' Job (Maybe JobSample)

-- | The unique name of the job.
job_name :: Lens' Job Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Job.Job
instance GHC.Show.Show Amazonka.DataBrew.Types.Job.Job
instance GHC.Read.Read Amazonka.DataBrew.Types.Job.Job
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Job.Job
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Job.Job
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Job.Job
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Job.Job


module Amazonka.DataBrew.Types.SampleType
newtype SampleType
SampleType' :: Text -> SampleType
[fromSampleType] :: SampleType -> Text
pattern SampleType_FIRST_N :: SampleType
pattern SampleType_LAST_N :: SampleType
pattern SampleType_RANDOM :: SampleType
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.SampleType.SampleType
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.SampleType.SampleType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.SampleType.SampleType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.SampleType.SampleType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.SampleType.SampleType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.SampleType.SampleType
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.SampleType.SampleType
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.SampleType.SampleType
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.SampleType.SampleType
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.SampleType.SampleType
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.SampleType.SampleType
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.SampleType.SampleType
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.SampleType.SampleType
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.SampleType.SampleType
instance GHC.Generics.Generic Amazonka.DataBrew.Types.SampleType.SampleType
instance GHC.Classes.Ord Amazonka.DataBrew.Types.SampleType.SampleType
instance GHC.Classes.Eq Amazonka.DataBrew.Types.SampleType.SampleType
instance GHC.Read.Read Amazonka.DataBrew.Types.SampleType.SampleType
instance GHC.Show.Show Amazonka.DataBrew.Types.SampleType.SampleType


module Amazonka.DataBrew.Types.Sample

-- | Represents the sample size and sampling type for DataBrew to use for
--   interactive data analysis.
--   
--   <i>See:</i> <a>newSample</a> smart constructor.
data Sample
Sample' :: Maybe Natural -> SampleType -> Sample

-- | The number of rows in the sample.
[$sel:size:Sample'] :: Sample -> Maybe Natural

-- | The way in which DataBrew obtains rows from a dataset.
[$sel:type':Sample'] :: Sample -> SampleType

-- | Create a value of <a>Sample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:Sample'</a>, <a>sample_size</a> - The number of rows in
--   the sample.
--   
--   <a>$sel:type':Sample'</a>, <a>sample_type</a> - The way in which
--   DataBrew obtains rows from a dataset.
newSample :: SampleType -> Sample

-- | The number of rows in the sample.
sample_size :: Lens' Sample (Maybe Natural)

-- | The way in which DataBrew obtains rows from a dataset.
sample_type :: Lens' Sample SampleType
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Sample.Sample
instance GHC.Show.Show Amazonka.DataBrew.Types.Sample.Sample
instance GHC.Read.Read Amazonka.DataBrew.Types.Sample.Sample
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Sample.Sample
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Sample.Sample
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Sample.Sample
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Sample.Sample
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.Sample.Sample


module Amazonka.DataBrew.Types.Project

-- | Represents all of the attributes of a DataBrew project.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Sample -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Text -> Project

-- | The last modification date and time for the project.
[$sel:lastModifiedDate:Project'] :: Project -> Maybe POSIX

-- | The date and time when the project was opened.
[$sel:openDate:Project'] :: Project -> Maybe POSIX

-- | The date and time that the project was created.
[$sel:createDate:Project'] :: Project -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the user who crated the project.
[$sel:createdBy:Project'] :: Project -> Maybe Text

-- | The ID of the Amazon Web Services account that owns the project.
[$sel:accountId:Project'] :: Project -> Maybe Text

-- | The Amazon Resource Name (ARN) for the project.
[$sel:resourceArn:Project'] :: Project -> Maybe Text

-- | The dataset that the project is to act upon.
[$sel:datasetName:Project'] :: Project -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   project.
[$sel:lastModifiedBy:Project'] :: Project -> Maybe Text

-- | The sample size and sampling type to apply to the data. If this
--   parameter isn't specified, then the sample consists of the first 500
--   rows from the dataset.
[$sel:sample:Project'] :: Project -> Maybe Sample

-- | The Amazon Resource Name (ARN) of the user that opened the project for
--   use.
[$sel:openedBy:Project'] :: Project -> Maybe Text

-- | Metadata tags that have been applied to the project.
[$sel:tags:Project'] :: Project -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the role that will be assumed for
--   this project.
[$sel:roleArn:Project'] :: Project -> Maybe Text

-- | The unique name of a project.
[$sel:name:Project'] :: Project -> Text

-- | The name of a recipe that will be developed during a project session.
[$sel:recipeName:Project'] :: Project -> Text

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Project'</a>, <a>project_lastModifiedDate</a>
--   - The last modification date and time for the project.
--   
--   <a>$sel:openDate:Project'</a>, <a>project_openDate</a> - The date and
--   time when the project was opened.
--   
--   <a>$sel:createDate:Project'</a>, <a>project_createDate</a> - The date
--   and time that the project was created.
--   
--   <a>$sel:createdBy:Project'</a>, <a>project_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who crated the project.
--   
--   <a>$sel:accountId:Project'</a>, <a>project_accountId</a> - The ID of
--   the Amazon Web Services account that owns the project.
--   
--   <a>$sel:resourceArn:Project'</a>, <a>project_resourceArn</a> - The
--   Amazon Resource Name (ARN) for the project.
--   
--   <a>$sel:datasetName:Project'</a>, <a>project_datasetName</a> - The
--   dataset that the project is to act upon.
--   
--   <a>$sel:lastModifiedBy:Project'</a>, <a>project_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   project.
--   
--   <a>$sel:sample:Project'</a>, <a>project_sample</a> - The sample size
--   and sampling type to apply to the data. If this parameter isn't
--   specified, then the sample consists of the first 500 rows from the
--   dataset.
--   
--   <a>$sel:openedBy:Project'</a>, <a>project_openedBy</a> - The Amazon
--   Resource Name (ARN) of the user that opened the project for use.
--   
--   <a>$sel:tags:Project'</a>, <a>project_tags</a> - Metadata tags that
--   have been applied to the project.
--   
--   <a>$sel:roleArn:Project'</a>, <a>project_roleArn</a> - The Amazon
--   Resource Name (ARN) of the role that will be assumed for this project.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The unique name of a
--   project.
--   
--   <a>$sel:recipeName:Project'</a>, <a>project_recipeName</a> - The name
--   of a recipe that will be developed during a project session.
newProject :: Text -> Text -> Project

-- | The last modification date and time for the project.
project_lastModifiedDate :: Lens' Project (Maybe UTCTime)

-- | The date and time when the project was opened.
project_openDate :: Lens' Project (Maybe UTCTime)

-- | The date and time that the project was created.
project_createDate :: Lens' Project (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who crated the project.
project_createdBy :: Lens' Project (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the project.
project_accountId :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) for the project.
project_resourceArn :: Lens' Project (Maybe Text)

-- | The dataset that the project is to act upon.
project_datasetName :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   project.
project_lastModifiedBy :: Lens' Project (Maybe Text)

-- | The sample size and sampling type to apply to the data. If this
--   parameter isn't specified, then the sample consists of the first 500
--   rows from the dataset.
project_sample :: Lens' Project (Maybe Sample)

-- | The Amazon Resource Name (ARN) of the user that opened the project for
--   use.
project_openedBy :: Lens' Project (Maybe Text)

-- | Metadata tags that have been applied to the project.
project_tags :: Lens' Project (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role that will be assumed for
--   this project.
project_roleArn :: Lens' Project (Maybe Text)

-- | The unique name of a project.
project_name :: Lens' Project Text

-- | The name of a recipe that will be developed during a project session.
project_recipeName :: Lens' Project Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Project.Project
instance GHC.Show.Show Amazonka.DataBrew.Types.Project.Project
instance GHC.Read.Read Amazonka.DataBrew.Types.Project.Project
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Project.Project
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Project.Project
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Project.Project
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Project.Project


module Amazonka.DataBrew.Types.Schedule

-- | Represents one or more dates and times when a job is to run.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe (HashMap Text Text) -> Text -> Schedule

-- | The date and time when the schedule was last modified.
[$sel:lastModifiedDate:Schedule'] :: Schedule -> Maybe POSIX

-- | The date and time that the schedule was created.
[$sel:createDate:Schedule'] :: Schedule -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the user who created the schedule.
[$sel:createdBy:Schedule'] :: Schedule -> Maybe Text

-- | The ID of the Amazon Web Services account that owns the schedule.
[$sel:accountId:Schedule'] :: Schedule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schedule.
[$sel:resourceArn:Schedule'] :: Schedule -> Maybe Text

-- | The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
[$sel:cronExpression:Schedule'] :: Schedule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
[$sel:lastModifiedBy:Schedule'] :: Schedule -> Maybe Text

-- | A list of jobs to be run, according to the schedule.
[$sel:jobNames:Schedule'] :: Schedule -> Maybe [Text]

-- | Metadata tags that have been applied to the schedule.
[$sel:tags:Schedule'] :: Schedule -> Maybe (HashMap Text Text)

-- | The name of the schedule.
[$sel:name:Schedule'] :: Schedule -> Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Schedule'</a>,
--   <a>schedule_lastModifiedDate</a> - The date and time when the schedule
--   was last modified.
--   
--   <a>$sel:createDate:Schedule'</a>, <a>schedule_createDate</a> - The
--   date and time that the schedule was created.
--   
--   <a>$sel:createdBy:Schedule'</a>, <a>schedule_createdBy</a> - The
--   Amazon Resource Name (ARN) of the user who created the schedule.
--   
--   <a>$sel:accountId:Schedule'</a>, <a>schedule_accountId</a> - The ID of
--   the Amazon Web Services account that owns the schedule.
--   
--   <a>$sel:resourceArn:Schedule'</a>, <a>schedule_resourceArn</a> - The
--   Amazon Resource Name (ARN) of the schedule.
--   
--   <a>$sel:cronExpression:Schedule'</a>, <a>schedule_cronExpression</a> -
--   The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:lastModifiedBy:Schedule'</a>, <a>schedule_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
--   
--   <a>$sel:jobNames:Schedule'</a>, <a>schedule_jobNames</a> - A list of
--   jobs to be run, according to the schedule.
--   
--   <a>$sel:tags:Schedule'</a>, <a>schedule_tags</a> - Metadata tags that
--   have been applied to the schedule.
--   
--   <a>$sel:name:Schedule'</a>, <a>schedule_name</a> - The name of the
--   schedule.
newSchedule :: Text -> Schedule

-- | The date and time when the schedule was last modified.
schedule_lastModifiedDate :: Lens' Schedule (Maybe UTCTime)

-- | The date and time that the schedule was created.
schedule_createDate :: Lens' Schedule (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who created the schedule.
schedule_createdBy :: Lens' Schedule (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the schedule.
schedule_accountId :: Lens' Schedule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schedule.
schedule_resourceArn :: Lens' Schedule (Maybe Text)

-- | The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
schedule_cronExpression :: Lens' Schedule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
schedule_lastModifiedBy :: Lens' Schedule (Maybe Text)

-- | A list of jobs to be run, according to the schedule.
schedule_jobNames :: Lens' Schedule (Maybe [Text])

-- | Metadata tags that have been applied to the schedule.
schedule_tags :: Lens' Schedule (Maybe (HashMap Text Text))

-- | The name of the schedule.
schedule_name :: Lens' Schedule Text
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Schedule.Schedule
instance GHC.Show.Show Amazonka.DataBrew.Types.Schedule.Schedule
instance GHC.Read.Read Amazonka.DataBrew.Types.Schedule.Schedule
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Schedule.Schedule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Schedule.Schedule
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Schedule.Schedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Schedule.Schedule


module Amazonka.DataBrew.Types.SessionStatus
newtype SessionStatus
SessionStatus' :: Text -> SessionStatus
[fromSessionStatus] :: SessionStatus -> Text
pattern SessionStatus_ASSIGNED :: SessionStatus
pattern SessionStatus_FAILED :: SessionStatus
pattern SessionStatus_INITIALIZING :: SessionStatus
pattern SessionStatus_PROVISIONING :: SessionStatus
pattern SessionStatus_READY :: SessionStatus
pattern SessionStatus_RECYCLING :: SessionStatus
pattern SessionStatus_ROTATING :: SessionStatus
pattern SessionStatus_TERMINATED :: SessionStatus
pattern SessionStatus_TERMINATING :: SessionStatus
pattern SessionStatus_UPDATING :: SessionStatus
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance GHC.Generics.Generic Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance GHC.Classes.Ord Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance GHC.Classes.Eq Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance GHC.Read.Read Amazonka.DataBrew.Types.SessionStatus.SessionStatus
instance GHC.Show.Show Amazonka.DataBrew.Types.SessionStatus.SessionStatus


module Amazonka.DataBrew.Types.Source
newtype Source
Source' :: Text -> Source
[fromSource] :: Source -> Text
pattern Source_DATABASE :: Source
pattern Source_DATA_CATALOG :: Source
pattern Source_S3 :: Source
instance Amazonka.Data.XML.ToXML Amazonka.DataBrew.Types.Source.Source
instance Amazonka.Data.XML.FromXML Amazonka.DataBrew.Types.Source.Source
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.DataBrew.Types.Source.Source
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.Source.Source
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.DataBrew.Types.Source.Source
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Source.Source
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.Types.Source.Source
instance Amazonka.Data.Headers.ToHeader Amazonka.DataBrew.Types.Source.Source
instance Amazonka.Data.Log.ToLog Amazonka.DataBrew.Types.Source.Source
instance Amazonka.Data.ByteString.ToByteString Amazonka.DataBrew.Types.Source.Source
instance Amazonka.Data.Text.ToText Amazonka.DataBrew.Types.Source.Source
instance Amazonka.Data.Text.FromText Amazonka.DataBrew.Types.Source.Source
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Source.Source
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Source.Source
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Source.Source
instance GHC.Classes.Ord Amazonka.DataBrew.Types.Source.Source
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Source.Source
instance GHC.Read.Read Amazonka.DataBrew.Types.Source.Source
instance GHC.Show.Show Amazonka.DataBrew.Types.Source.Source


module Amazonka.DataBrew.Types.Dataset

-- | Represents a dataset that can be processed by DataBrew.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe POSIX -> Maybe PathOptions -> Maybe POSIX -> Maybe FormatOptions -> Maybe InputFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Source -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Input -> Dataset

-- | The last modification date and time of the dataset.
[$sel:lastModifiedDate:Dataset'] :: Dataset -> Maybe POSIX

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
[$sel:pathOptions:Dataset'] :: Dataset -> Maybe PathOptions

-- | The date and time that the dataset was created.
[$sel:createDate:Dataset'] :: Dataset -> Maybe POSIX

-- | A set of options that define how DataBrew interprets the data in the
--   dataset.
[$sel:formatOptions:Dataset'] :: Dataset -> Maybe FormatOptions

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
[$sel:format:Dataset'] :: Dataset -> Maybe InputFormat

-- | The Amazon Resource Name (ARN) of the user who created the dataset.
[$sel:createdBy:Dataset'] :: Dataset -> Maybe Text

-- | The ID of the Amazon Web Services account that owns the dataset.
[$sel:accountId:Dataset'] :: Dataset -> Maybe Text

-- | The unique Amazon Resource Name (ARN) for the dataset.
[$sel:resourceArn:Dataset'] :: Dataset -> Maybe Text

-- | The location of the data for the dataset, either Amazon S3 or the Glue
--   Data Catalog.
[$sel:source:Dataset'] :: Dataset -> Maybe Source

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
[$sel:lastModifiedBy:Dataset'] :: Dataset -> Maybe Text

-- | Metadata tags that have been applied to the dataset.
[$sel:tags:Dataset'] :: Dataset -> Maybe (HashMap Text Text)

-- | The unique name of the dataset.
[$sel:name:Dataset'] :: Dataset -> Text

-- | Information on how DataBrew can find the dataset, in either the Glue
--   Data Catalog or Amazon S3.
[$sel:input:Dataset'] :: Dataset -> Input

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Dataset'</a>, <a>dataset_lastModifiedDate</a>
--   - The last modification date and time of the dataset.
--   
--   <a>$sel:pathOptions:Dataset'</a>, <a>dataset_pathOptions</a> - A set
--   of options that defines how DataBrew interprets an Amazon S3 path of
--   the dataset.
--   
--   <a>$sel:createDate:Dataset'</a>, <a>dataset_createDate</a> - The date
--   and time that the dataset was created.
--   
--   <a>$sel:formatOptions:Dataset'</a>, <a>dataset_formatOptions</a> - A
--   set of options that define how DataBrew interprets the data in the
--   dataset.
--   
--   <a>$sel:format:Dataset'</a>, <a>dataset_format</a> - The file format
--   of a dataset that is created from an Amazon S3 file or folder.
--   
--   <a>$sel:createdBy:Dataset'</a>, <a>dataset_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who created the dataset.
--   
--   <a>$sel:accountId:Dataset'</a>, <a>dataset_accountId</a> - The ID of
--   the Amazon Web Services account that owns the dataset.
--   
--   <a>$sel:resourceArn:Dataset'</a>, <a>dataset_resourceArn</a> - The
--   unique Amazon Resource Name (ARN) for the dataset.
--   
--   <a>$sel:source:Dataset'</a>, <a>dataset_source</a> - The location of
--   the data for the dataset, either Amazon S3 or the Glue Data Catalog.
--   
--   <a>$sel:lastModifiedBy:Dataset'</a>, <a>dataset_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
--   
--   <a>$sel:tags:Dataset'</a>, <a>dataset_tags</a> - Metadata tags that
--   have been applied to the dataset.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The unique name of
--   the dataset.
--   
--   <a>$sel:input:Dataset'</a>, <a>dataset_input</a> - Information on how
--   DataBrew can find the dataset, in either the Glue Data Catalog or
--   Amazon S3.
newDataset :: Text -> Input -> Dataset

-- | The last modification date and time of the dataset.
dataset_lastModifiedDate :: Lens' Dataset (Maybe UTCTime)

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
dataset_pathOptions :: Lens' Dataset (Maybe PathOptions)

-- | The date and time that the dataset was created.
dataset_createDate :: Lens' Dataset (Maybe UTCTime)

-- | A set of options that define how DataBrew interprets the data in the
--   dataset.
dataset_formatOptions :: Lens' Dataset (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
dataset_format :: Lens' Dataset (Maybe InputFormat)

-- | The Amazon Resource Name (ARN) of the user who created the dataset.
dataset_createdBy :: Lens' Dataset (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the dataset.
dataset_accountId :: Lens' Dataset (Maybe Text)

-- | The unique Amazon Resource Name (ARN) for the dataset.
dataset_resourceArn :: Lens' Dataset (Maybe Text)

-- | The location of the data for the dataset, either Amazon S3 or the Glue
--   Data Catalog.
dataset_source :: Lens' Dataset (Maybe Source)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
dataset_lastModifiedBy :: Lens' Dataset (Maybe Text)

-- | Metadata tags that have been applied to the dataset.
dataset_tags :: Lens' Dataset (Maybe (HashMap Text Text))

-- | The unique name of the dataset.
dataset_name :: Lens' Dataset Text

-- | Information on how DataBrew can find the dataset, in either the Glue
--   Data Catalog or Amazon S3.
dataset_input :: Lens' Dataset Input
instance GHC.Generics.Generic Amazonka.DataBrew.Types.Dataset.Dataset
instance GHC.Show.Show Amazonka.DataBrew.Types.Dataset.Dataset
instance GHC.Read.Read Amazonka.DataBrew.Types.Dataset.Dataset
instance GHC.Classes.Eq Amazonka.DataBrew.Types.Dataset.Dataset
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.Dataset.Dataset
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.Dataset.Dataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.Dataset.Dataset


module Amazonka.DataBrew.Types.StatisticOverride

-- | Override of a particular evaluation for a profile job.
--   
--   <i>See:</i> <a>newStatisticOverride</a> smart constructor.
data StatisticOverride
StatisticOverride' :: Text -> HashMap Text Text -> StatisticOverride

-- | The name of an evaluation
[$sel:statistic:StatisticOverride'] :: StatisticOverride -> Text

-- | A map that includes overrides of an evaluation’s parameters.
[$sel:parameters:StatisticOverride'] :: StatisticOverride -> HashMap Text Text

-- | Create a value of <a>StatisticOverride</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statistic:StatisticOverride'</a>,
--   <a>statisticOverride_statistic</a> - The name of an evaluation
--   
--   <a>$sel:parameters:StatisticOverride'</a>,
--   <a>statisticOverride_parameters</a> - A map that includes overrides of
--   an evaluation’s parameters.
newStatisticOverride :: Text -> StatisticOverride

-- | The name of an evaluation
statisticOverride_statistic :: Lens' StatisticOverride Text

-- | A map that includes overrides of an evaluation’s parameters.
statisticOverride_parameters :: Lens' StatisticOverride (HashMap Text Text)
instance GHC.Generics.Generic Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride
instance GHC.Show.Show Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride
instance GHC.Read.Read Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride
instance GHC.Classes.Eq Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.StatisticOverride.StatisticOverride


module Amazonka.DataBrew.Types.StatisticsConfiguration

-- | Configuration of evaluations for a profile job. This configuration can
--   be used to select evaluations and override the parameters of selected
--   evaluations.
--   
--   <i>See:</i> <a>newStatisticsConfiguration</a> smart constructor.
data StatisticsConfiguration
StatisticsConfiguration' :: Maybe (NonEmpty StatisticOverride) -> Maybe (NonEmpty Text) -> StatisticsConfiguration

-- | List of overrides for evaluations.
[$sel:overrides:StatisticsConfiguration'] :: StatisticsConfiguration -> Maybe (NonEmpty StatisticOverride)

-- | List of included evaluations. When the list is undefined, all
--   supported evaluations will be included.
[$sel:includedStatistics:StatisticsConfiguration'] :: StatisticsConfiguration -> Maybe (NonEmpty Text)

-- | Create a value of <a>StatisticsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrides:StatisticsConfiguration'</a>,
--   <a>statisticsConfiguration_overrides</a> - List of overrides for
--   evaluations.
--   
--   <a>$sel:includedStatistics:StatisticsConfiguration'</a>,
--   <a>statisticsConfiguration_includedStatistics</a> - List of included
--   evaluations. When the list is undefined, all supported evaluations
--   will be included.
newStatisticsConfiguration :: StatisticsConfiguration

-- | List of overrides for evaluations.
statisticsConfiguration_overrides :: Lens' StatisticsConfiguration (Maybe (NonEmpty StatisticOverride))

-- | List of included evaluations. When the list is undefined, all
--   supported evaluations will be included.
statisticsConfiguration_includedStatistics :: Lens' StatisticsConfiguration (Maybe (NonEmpty Text))
instance GHC.Generics.Generic Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration
instance GHC.Show.Show Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration
instance GHC.Read.Read Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration
instance GHC.Classes.Eq Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.StatisticsConfiguration.StatisticsConfiguration


module Amazonka.DataBrew.Types.ColumnStatisticsConfiguration

-- | Configuration for column evaluations for a profile job.
--   ColumnStatisticsConfiguration can be used to select evaluations and
--   override parameters of evaluations for particular columns.
--   
--   <i>See:</i> <a>newColumnStatisticsConfiguration</a> smart constructor.
data ColumnStatisticsConfiguration
ColumnStatisticsConfiguration' :: Maybe (NonEmpty ColumnSelector) -> StatisticsConfiguration -> ColumnStatisticsConfiguration

-- | List of column selectors. Selectors can be used to select columns from
--   the dataset. When selectors are undefined, configuration will be
--   applied to all supported columns.
[$sel:selectors:ColumnStatisticsConfiguration'] :: ColumnStatisticsConfiguration -> Maybe (NonEmpty ColumnSelector)

-- | Configuration for evaluations. Statistics can be used to select
--   evaluations and override parameters of evaluations.
[$sel:statistics:ColumnStatisticsConfiguration'] :: ColumnStatisticsConfiguration -> StatisticsConfiguration

-- | Create a value of <a>ColumnStatisticsConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectors:ColumnStatisticsConfiguration'</a>,
--   <a>columnStatisticsConfiguration_selectors</a> - List of column
--   selectors. Selectors can be used to select columns from the dataset.
--   When selectors are undefined, configuration will be applied to all
--   supported columns.
--   
--   <a>$sel:statistics:ColumnStatisticsConfiguration'</a>,
--   <a>columnStatisticsConfiguration_statistics</a> - Configuration for
--   evaluations. Statistics can be used to select evaluations and override
--   parameters of evaluations.
newColumnStatisticsConfiguration :: StatisticsConfiguration -> ColumnStatisticsConfiguration

-- | List of column selectors. Selectors can be used to select columns from
--   the dataset. When selectors are undefined, configuration will be
--   applied to all supported columns.
columnStatisticsConfiguration_selectors :: Lens' ColumnStatisticsConfiguration (Maybe (NonEmpty ColumnSelector))

-- | Configuration for evaluations. Statistics can be used to select
--   evaluations and override parameters of evaluations.
columnStatisticsConfiguration_statistics :: Lens' ColumnStatisticsConfiguration StatisticsConfiguration
instance GHC.Generics.Generic Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration
instance GHC.Show.Show Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration
instance GHC.Read.Read Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration
instance GHC.Classes.Eq Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.ColumnStatisticsConfiguration.ColumnStatisticsConfiguration


module Amazonka.DataBrew.Types.ProfileConfiguration

-- | Configuration for profile jobs. Configuration can be used to select
--   columns, do evaluations, and override default parameters of
--   evaluations. When configuration is undefined, the profile job will
--   apply default settings to all supported columns.
--   
--   <i>See:</i> <a>newProfileConfiguration</a> smart constructor.
data ProfileConfiguration
ProfileConfiguration' :: Maybe StatisticsConfiguration -> Maybe (NonEmpty ColumnStatisticsConfiguration) -> Maybe (NonEmpty ColumnSelector) -> ProfileConfiguration

-- | Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
[$sel:datasetStatisticsConfiguration:ProfileConfiguration'] :: ProfileConfiguration -> Maybe StatisticsConfiguration

-- | List of configurations for column evaluations.
--   ColumnStatisticsConfigurations are used to select evaluations and
--   override parameters of evaluations for particular columns. When
--   ColumnStatisticsConfigurations is undefined, the profile job will
--   profile all supported columns and run all supported evaluations.
[$sel:columnStatisticsConfigurations:ProfileConfiguration'] :: ProfileConfiguration -> Maybe (NonEmpty ColumnStatisticsConfiguration)

-- | List of column selectors. ProfileColumns can be used to select columns
--   from the dataset. When ProfileColumns is undefined, the profile job
--   will profile all supported columns.
[$sel:profileColumns:ProfileConfiguration'] :: ProfileConfiguration -> Maybe (NonEmpty ColumnSelector)

-- | Create a value of <a>ProfileConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetStatisticsConfiguration:ProfileConfiguration'</a>,
--   <a>profileConfiguration_datasetStatisticsConfiguration</a> -
--   Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
--   
--   <a>$sel:columnStatisticsConfigurations:ProfileConfiguration'</a>,
--   <a>profileConfiguration_columnStatisticsConfigurations</a> - List of
--   configurations for column evaluations. ColumnStatisticsConfigurations
--   are used to select evaluations and override parameters of evaluations
--   for particular columns. When ColumnStatisticsConfigurations is
--   undefined, the profile job will profile all supported columns and run
--   all supported evaluations.
--   
--   <a>$sel:profileColumns:ProfileConfiguration'</a>,
--   <a>profileConfiguration_profileColumns</a> - List of column selectors.
--   ProfileColumns can be used to select columns from the dataset. When
--   ProfileColumns is undefined, the profile job will profile all
--   supported columns.
newProfileConfiguration :: ProfileConfiguration

-- | Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
profileConfiguration_datasetStatisticsConfiguration :: Lens' ProfileConfiguration (Maybe StatisticsConfiguration)

-- | List of configurations for column evaluations.
--   ColumnStatisticsConfigurations are used to select evaluations and
--   override parameters of evaluations for particular columns. When
--   ColumnStatisticsConfigurations is undefined, the profile job will
--   profile all supported columns and run all supported evaluations.
profileConfiguration_columnStatisticsConfigurations :: Lens' ProfileConfiguration (Maybe (NonEmpty ColumnStatisticsConfiguration))

-- | List of column selectors. ProfileColumns can be used to select columns
--   from the dataset. When ProfileColumns is undefined, the profile job
--   will profile all supported columns.
profileConfiguration_profileColumns :: Lens' ProfileConfiguration (Maybe (NonEmpty ColumnSelector))
instance GHC.Generics.Generic Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration
instance GHC.Show.Show Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration
instance GHC.Read.Read Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration
instance GHC.Classes.Eq Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.ProfileConfiguration.ProfileConfiguration


module Amazonka.DataBrew.Types.ViewFrame

-- | Represents the data being transformed during an action.
--   
--   <i>See:</i> <a>newViewFrame</a> smart constructor.
data ViewFrame
ViewFrame' :: Maybe [Text] -> Maybe Natural -> Natural -> ViewFrame

-- | A list of columns to hide in the view frame.
[$sel:hiddenColumns:ViewFrame'] :: ViewFrame -> Maybe [Text]

-- | The number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
[$sel:columnRange:ViewFrame'] :: ViewFrame -> Maybe Natural

-- | The starting index for the range of columns to return in the view
--   frame.
[$sel:startColumnIndex:ViewFrame'] :: ViewFrame -> Natural

-- | Create a value of <a>ViewFrame</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hiddenColumns:ViewFrame'</a>, <a>viewFrame_hiddenColumns</a> -
--   A list of columns to hide in the view frame.
--   
--   <a>$sel:columnRange:ViewFrame'</a>, <a>viewFrame_columnRange</a> - The
--   number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
--   
--   <a>$sel:startColumnIndex:ViewFrame'</a>,
--   <a>viewFrame_startColumnIndex</a> - The starting index for the range
--   of columns to return in the view frame.
newViewFrame :: Natural -> ViewFrame

-- | A list of columns to hide in the view frame.
viewFrame_hiddenColumns :: Lens' ViewFrame (Maybe [Text])

-- | The number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
viewFrame_columnRange :: Lens' ViewFrame (Maybe Natural)

-- | The starting index for the range of columns to return in the view
--   frame.
viewFrame_startColumnIndex :: Lens' ViewFrame Natural
instance GHC.Generics.Generic Amazonka.DataBrew.Types.ViewFrame.ViewFrame
instance GHC.Show.Show Amazonka.DataBrew.Types.ViewFrame.ViewFrame
instance GHC.Read.Read Amazonka.DataBrew.Types.ViewFrame.ViewFrame
instance GHC.Classes.Eq Amazonka.DataBrew.Types.ViewFrame.ViewFrame
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.Types.ViewFrame.ViewFrame
instance Control.DeepSeq.NFData Amazonka.DataBrew.Types.ViewFrame.ViewFrame
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.Types.ViewFrame.ViewFrame


module Amazonka.DataBrew.Types

-- | API version <tt>2017-07-25</tt> of the Amazon Glue DataBrew SDK
--   configuration.
defaultService :: Service

-- | The input parameters for this request failed validation.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access to the specified resource was denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Updating or deleting a resource can cause an inconsistent state.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A service quota is exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service failure occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more resources can't be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype CompressionFormat
CompressionFormat' :: Text -> CompressionFormat
[fromCompressionFormat] :: CompressionFormat -> Text
pattern CompressionFormat_BROTLI :: CompressionFormat
pattern CompressionFormat_BZIP2 :: CompressionFormat
pattern CompressionFormat_DEFLATE :: CompressionFormat
pattern CompressionFormat_GZIP :: CompressionFormat
pattern CompressionFormat_LZ4 :: CompressionFormat
pattern CompressionFormat_LZO :: CompressionFormat
pattern CompressionFormat_SNAPPY :: CompressionFormat
pattern CompressionFormat_ZLIB :: CompressionFormat
pattern CompressionFormat_ZSTD :: CompressionFormat
newtype DatabaseOutputMode
DatabaseOutputMode' :: Text -> DatabaseOutputMode
[fromDatabaseOutputMode] :: DatabaseOutputMode -> Text
pattern DatabaseOutputMode_NEW_TABLE :: DatabaseOutputMode
newtype EncryptionMode
EncryptionMode' :: Text -> EncryptionMode
[fromEncryptionMode] :: EncryptionMode -> Text
pattern EncryptionMode_SSE_KMS :: EncryptionMode
pattern EncryptionMode_SSE_S3 :: EncryptionMode
newtype InputFormat
InputFormat' :: Text -> InputFormat
[fromInputFormat] :: InputFormat -> Text
pattern InputFormat_CSV :: InputFormat
pattern InputFormat_EXCEL :: InputFormat
pattern InputFormat_JSON :: InputFormat
pattern InputFormat_PARQUET :: InputFormat
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_STARTING :: JobRunState
pattern JobRunState_STOPPED :: JobRunState
pattern JobRunState_STOPPING :: JobRunState
pattern JobRunState_SUCCEEDED :: JobRunState
pattern JobRunState_TIMEOUT :: JobRunState
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_PROFILE :: JobType
pattern JobType_RECIPE :: JobType
newtype LogSubscription
LogSubscription' :: Text -> LogSubscription
[fromLogSubscription] :: LogSubscription -> Text
pattern LogSubscription_DISABLE :: LogSubscription
pattern LogSubscription_ENABLE :: LogSubscription
newtype Order
Order' :: Text -> Order
[fromOrder] :: Order -> Text
pattern Order_ASCENDING :: Order
pattern Order_DESCENDING :: Order
newtype OrderedBy
OrderedBy' :: Text -> OrderedBy
[fromOrderedBy] :: OrderedBy -> Text
pattern OrderedBy_LAST_MODIFIED_DATE :: OrderedBy
newtype OutputFormat
OutputFormat' :: Text -> OutputFormat
[fromOutputFormat] :: OutputFormat -> Text
pattern OutputFormat_AVRO :: OutputFormat
pattern OutputFormat_CSV :: OutputFormat
pattern OutputFormat_GLUEPARQUET :: OutputFormat
pattern OutputFormat_JSON :: OutputFormat
pattern OutputFormat_ORC :: OutputFormat
pattern OutputFormat_PARQUET :: OutputFormat
pattern OutputFormat_TABLEAUHYPER :: OutputFormat
pattern OutputFormat_XML :: OutputFormat
newtype ParameterType
ParameterType' :: Text -> ParameterType
[fromParameterType] :: ParameterType -> Text
pattern ParameterType_Datetime :: ParameterType
pattern ParameterType_Number :: ParameterType
pattern ParameterType_String :: ParameterType
newtype SampleMode
SampleMode' :: Text -> SampleMode
[fromSampleMode] :: SampleMode -> Text
pattern SampleMode_CUSTOM_ROWS :: SampleMode
pattern SampleMode_FULL_DATASET :: SampleMode
newtype SampleType
SampleType' :: Text -> SampleType
[fromSampleType] :: SampleType -> Text
pattern SampleType_FIRST_N :: SampleType
pattern SampleType_LAST_N :: SampleType
pattern SampleType_RANDOM :: SampleType
newtype SessionStatus
SessionStatus' :: Text -> SessionStatus
[fromSessionStatus] :: SessionStatus -> Text
pattern SessionStatus_ASSIGNED :: SessionStatus
pattern SessionStatus_FAILED :: SessionStatus
pattern SessionStatus_INITIALIZING :: SessionStatus
pattern SessionStatus_PROVISIONING :: SessionStatus
pattern SessionStatus_READY :: SessionStatus
pattern SessionStatus_RECYCLING :: SessionStatus
pattern SessionStatus_ROTATING :: SessionStatus
pattern SessionStatus_TERMINATED :: SessionStatus
pattern SessionStatus_TERMINATING :: SessionStatus
pattern SessionStatus_UPDATING :: SessionStatus
newtype Source
Source' :: Text -> Source
[fromSource] :: Source -> Text
pattern Source_DATABASE :: Source
pattern Source_DATA_CATALOG :: Source
pattern Source_S3 :: Source

-- | Selector of a column from a dataset for profile job configuration. One
--   selector includes either a column name or a regular expression.
--   
--   <i>See:</i> <a>newColumnSelector</a> smart constructor.
data ColumnSelector
ColumnSelector' :: Maybe Text -> Maybe Text -> ColumnSelector

-- | A regular expression for selecting a column from a dataset.
[$sel:regex:ColumnSelector'] :: ColumnSelector -> Maybe Text

-- | The name of a column from a dataset.
[$sel:name:ColumnSelector'] :: ColumnSelector -> Maybe Text

-- | Create a value of <a>ColumnSelector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regex:ColumnSelector'</a>, <a>columnSelector_regex</a> - A
--   regular expression for selecting a column from a dataset.
--   
--   <a>$sel:name:ColumnSelector'</a>, <a>columnSelector_name</a> - The
--   name of a column from a dataset.
newColumnSelector :: ColumnSelector

-- | A regular expression for selecting a column from a dataset.
columnSelector_regex :: Lens' ColumnSelector (Maybe Text)

-- | The name of a column from a dataset.
columnSelector_name :: Lens' ColumnSelector (Maybe Text)

-- | Configuration for column evaluations for a profile job.
--   ColumnStatisticsConfiguration can be used to select evaluations and
--   override parameters of evaluations for particular columns.
--   
--   <i>See:</i> <a>newColumnStatisticsConfiguration</a> smart constructor.
data ColumnStatisticsConfiguration
ColumnStatisticsConfiguration' :: Maybe (NonEmpty ColumnSelector) -> StatisticsConfiguration -> ColumnStatisticsConfiguration

-- | List of column selectors. Selectors can be used to select columns from
--   the dataset. When selectors are undefined, configuration will be
--   applied to all supported columns.
[$sel:selectors:ColumnStatisticsConfiguration'] :: ColumnStatisticsConfiguration -> Maybe (NonEmpty ColumnSelector)

-- | Configuration for evaluations. Statistics can be used to select
--   evaluations and override parameters of evaluations.
[$sel:statistics:ColumnStatisticsConfiguration'] :: ColumnStatisticsConfiguration -> StatisticsConfiguration

-- | Create a value of <a>ColumnStatisticsConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectors:ColumnStatisticsConfiguration'</a>,
--   <a>columnStatisticsConfiguration_selectors</a> - List of column
--   selectors. Selectors can be used to select columns from the dataset.
--   When selectors are undefined, configuration will be applied to all
--   supported columns.
--   
--   <a>$sel:statistics:ColumnStatisticsConfiguration'</a>,
--   <a>columnStatisticsConfiguration_statistics</a> - Configuration for
--   evaluations. Statistics can be used to select evaluations and override
--   parameters of evaluations.
newColumnStatisticsConfiguration :: StatisticsConfiguration -> ColumnStatisticsConfiguration

-- | List of column selectors. Selectors can be used to select columns from
--   the dataset. When selectors are undefined, configuration will be
--   applied to all supported columns.
columnStatisticsConfiguration_selectors :: Lens' ColumnStatisticsConfiguration (Maybe (NonEmpty ColumnSelector))

-- | Configuration for evaluations. Statistics can be used to select
--   evaluations and override parameters of evaluations.
columnStatisticsConfiguration_statistics :: Lens' ColumnStatisticsConfiguration StatisticsConfiguration

-- | Represents an individual condition that evaluates to true or false.
--   
--   Conditions are used with recipe actions. The action is only performed
--   for column values where the condition evaluates to true.
--   
--   If a recipe requires more than one condition, then the recipe must
--   specify multiple <tt>ConditionExpression</tt> elements. Each condition
--   is applied to the rows in a dataset first, before the recipe action is
--   performed.
--   
--   <i>See:</i> <a>newConditionExpression</a> smart constructor.
data ConditionExpression
ConditionExpression' :: Maybe Text -> Text -> Text -> ConditionExpression

-- | A value that the condition must evaluate to for the condition to
--   succeed.
[$sel:value:ConditionExpression'] :: ConditionExpression -> Maybe Text

-- | A specific condition to apply to a recipe action. For more
--   information, see <a>Recipe structure</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
[$sel:condition:ConditionExpression'] :: ConditionExpression -> Text

-- | A column to apply this condition to.
[$sel:targetColumn:ConditionExpression'] :: ConditionExpression -> Text

-- | Create a value of <a>ConditionExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ConditionExpression'</a>,
--   <a>conditionExpression_value</a> - A value that the condition must
--   evaluate to for the condition to succeed.
--   
--   <a>$sel:condition:ConditionExpression'</a>,
--   <a>conditionExpression_condition</a> - A specific condition to apply
--   to a recipe action. For more information, see <a>Recipe structure</a>
--   in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:targetColumn:ConditionExpression'</a>,
--   <a>conditionExpression_targetColumn</a> - A column to apply this
--   condition to.
newConditionExpression :: Text -> Text -> ConditionExpression

-- | A value that the condition must evaluate to for the condition to
--   succeed.
conditionExpression_value :: Lens' ConditionExpression (Maybe Text)

-- | A specific condition to apply to a recipe action. For more
--   information, see <a>Recipe structure</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
conditionExpression_condition :: Lens' ConditionExpression Text

-- | A column to apply this condition to.
conditionExpression_targetColumn :: Lens' ConditionExpression Text

-- | Represents a set of options that define how DataBrew will read a
--   comma-separated value (CSV) file when creating a dataset from that
--   file.
--   
--   <i>See:</i> <a>newCsvOptions</a> smart constructor.
data CsvOptions
CsvOptions' :: Maybe Bool -> Maybe Text -> CsvOptions

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
[$sel:headerRow:CsvOptions'] :: CsvOptions -> Maybe Bool

-- | A single character that specifies the delimiter being used in the CSV
--   file.
[$sel:delimiter:CsvOptions'] :: CsvOptions -> Maybe Text

-- | Create a value of <a>CsvOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerRow:CsvOptions'</a>, <a>csvOptions_headerRow</a> - A
--   variable that specifies whether the first row in the file is parsed as
--   the header. If this value is false, column names are auto-generated.
--   
--   <a>$sel:delimiter:CsvOptions'</a>, <a>csvOptions_delimiter</a> - A
--   single character that specifies the delimiter being used in the CSV
--   file.
newCsvOptions :: CsvOptions

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
csvOptions_headerRow :: Lens' CsvOptions (Maybe Bool)

-- | A single character that specifies the delimiter being used in the CSV
--   file.
csvOptions_delimiter :: Lens' CsvOptions (Maybe Text)

-- | Represents a set of options that define how DataBrew will write a
--   comma-separated value (CSV) file.
--   
--   <i>See:</i> <a>newCsvOutputOptions</a> smart constructor.
data CsvOutputOptions
CsvOutputOptions' :: Maybe Text -> CsvOutputOptions

-- | A single character that specifies the delimiter used to create CSV job
--   output.
[$sel:delimiter:CsvOutputOptions'] :: CsvOutputOptions -> Maybe Text

-- | Create a value of <a>CsvOutputOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:delimiter:CsvOutputOptions'</a>,
--   <a>csvOutputOptions_delimiter</a> - A single character that specifies
--   the delimiter used to create CSV job output.
newCsvOutputOptions :: CsvOutputOptions

-- | A single character that specifies the delimiter used to create CSV job
--   output.
csvOutputOptions_delimiter :: Lens' CsvOutputOptions (Maybe Text)

-- | Represents how metadata stored in the Glue Data Catalog is defined in
--   a DataBrew dataset.
--   
--   <i>See:</i> <a>newDataCatalogInputDefinition</a> smart constructor.
data DataCatalogInputDefinition
DataCatalogInputDefinition' :: Maybe S3Location -> Maybe Text -> Text -> Text -> DataCatalogInputDefinition

-- | Represents an Amazon location where DataBrew can store intermediate
--   results.
[$sel:tempDirectory:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Maybe S3Location

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
[$sel:catalogId:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Maybe Text

-- | The name of a database in the Data Catalog.
[$sel:databaseName:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Text

-- | The name of a database table in the Data Catalog. This table
--   corresponds to a DataBrew dataset.
[$sel:tableName:DataCatalogInputDefinition'] :: DataCatalogInputDefinition -> Text

-- | Create a value of <a>DataCatalogInputDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_tempDirectory</a> - Represents an Amazon
--   location where DataBrew can store intermediate results.
--   
--   <a>$sel:catalogId:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_catalogId</a> - The unique identifier of
--   the Amazon Web Services account that holds the Data Catalog that
--   stores the data.
--   
--   <a>$sel:databaseName:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_databaseName</a> - The name of a
--   database in the Data Catalog.
--   
--   <a>$sel:tableName:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_tableName</a> - The name of a database
--   table in the Data Catalog. This table corresponds to a DataBrew
--   dataset.
newDataCatalogInputDefinition :: Text -> Text -> DataCatalogInputDefinition

-- | Represents an Amazon location where DataBrew can store intermediate
--   results.
dataCatalogInputDefinition_tempDirectory :: Lens' DataCatalogInputDefinition (Maybe S3Location)

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
dataCatalogInputDefinition_catalogId :: Lens' DataCatalogInputDefinition (Maybe Text)

-- | The name of a database in the Data Catalog.
dataCatalogInputDefinition_databaseName :: Lens' DataCatalogInputDefinition Text

-- | The name of a database table in the Data Catalog. This table
--   corresponds to a DataBrew dataset.
dataCatalogInputDefinition_tableName :: Lens' DataCatalogInputDefinition Text

-- | Represents options that specify how and where in the Glue Data Catalog
--   DataBrew writes the output generated by recipe jobs.
--   
--   <i>See:</i> <a>newDataCatalogOutput</a> smart constructor.
data DataCatalogOutput
DataCatalogOutput' :: Maybe DatabaseTableOutputOptions -> Maybe S3TableOutputOptions -> Maybe Text -> Maybe Bool -> Text -> Text -> DataCatalogOutput

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
[$sel:databaseOptions:DataCatalogOutput'] :: DataCatalogOutput -> Maybe DatabaseTableOutputOptions

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
[$sel:s3Options:DataCatalogOutput'] :: DataCatalogOutput -> Maybe S3TableOutputOptions

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
[$sel:catalogId:DataCatalogOutput'] :: DataCatalogOutput -> Maybe Text

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output. Not supported with
--   DatabaseOptions.
[$sel:overwrite:DataCatalogOutput'] :: DataCatalogOutput -> Maybe Bool

-- | The name of a database in the Data Catalog.
[$sel:databaseName:DataCatalogOutput'] :: DataCatalogOutput -> Text

-- | The name of a table in the Data Catalog.
[$sel:tableName:DataCatalogOutput'] :: DataCatalogOutput -> Text

-- | Create a value of <a>DataCatalogOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseOptions:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_databaseOptions</a> - Represents options that
--   specify how and where DataBrew writes the database output generated by
--   recipe jobs.
--   
--   <a>$sel:s3Options:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_s3Options</a> - Represents options that specify
--   how and where DataBrew writes the Amazon S3 output generated by recipe
--   jobs.
--   
--   <a>$sel:catalogId:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_catalogId</a> - The unique identifier of the
--   Amazon Web Services account that holds the Data Catalog that stores
--   the data.
--   
--   <a>$sel:overwrite:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_overwrite</a> - A value that, if true, means that
--   any data in the location specified for output is overwritten with new
--   output. Not supported with DatabaseOptions.
--   
--   <a>$sel:databaseName:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_databaseName</a> - The name of a database in the
--   Data Catalog.
--   
--   <a>$sel:tableName:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_tableName</a> - The name of a table in the Data
--   Catalog.
newDataCatalogOutput :: Text -> Text -> DataCatalogOutput

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
dataCatalogOutput_databaseOptions :: Lens' DataCatalogOutput (Maybe DatabaseTableOutputOptions)

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
dataCatalogOutput_s3Options :: Lens' DataCatalogOutput (Maybe S3TableOutputOptions)

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
dataCatalogOutput_catalogId :: Lens' DataCatalogOutput (Maybe Text)

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output. Not supported with
--   DatabaseOptions.
dataCatalogOutput_overwrite :: Lens' DataCatalogOutput (Maybe Bool)

-- | The name of a database in the Data Catalog.
dataCatalogOutput_databaseName :: Lens' DataCatalogOutput Text

-- | The name of a table in the Data Catalog.
dataCatalogOutput_tableName :: Lens' DataCatalogOutput Text

-- | Connection information for dataset input files stored in a database.
--   
--   <i>See:</i> <a>newDatabaseInputDefinition</a> smart constructor.
data DatabaseInputDefinition
DatabaseInputDefinition' :: Maybe S3Location -> Text -> Text -> DatabaseInputDefinition
[$sel:tempDirectory:DatabaseInputDefinition'] :: DatabaseInputDefinition -> Maybe S3Location

-- | The Glue Connection that stores the connection information for the
--   target database.
[$sel:glueConnectionName:DatabaseInputDefinition'] :: DatabaseInputDefinition -> Text

-- | The table within the target database.
[$sel:databaseTableName:DatabaseInputDefinition'] :: DatabaseInputDefinition -> Text

-- | Create a value of <a>DatabaseInputDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_tempDirectory</a> - Undocumented member.
--   
--   <a>$sel:glueConnectionName:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_glueConnectionName</a> - The Glue
--   Connection that stores the connection information for the target
--   database.
--   
--   <a>$sel:databaseTableName:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_databaseTableName</a> - The table within
--   the target database.
newDatabaseInputDefinition :: Text -> Text -> DatabaseInputDefinition

-- | Undocumented member.
databaseInputDefinition_tempDirectory :: Lens' DatabaseInputDefinition (Maybe S3Location)

-- | The Glue Connection that stores the connection information for the
--   target database.
databaseInputDefinition_glueConnectionName :: Lens' DatabaseInputDefinition Text

-- | The table within the target database.
databaseInputDefinition_databaseTableName :: Lens' DatabaseInputDefinition Text

-- | Represents a JDBC database output object which defines the output
--   destination for a DataBrew recipe job to write into.
--   
--   <i>See:</i> <a>newDatabaseOutput</a> smart constructor.
data DatabaseOutput
DatabaseOutput' :: Maybe DatabaseOutputMode -> Text -> DatabaseTableOutputOptions -> DatabaseOutput

-- | The output mode to write into the database. Currently supported
--   option: NEW_TABLE.
[$sel:databaseOutputMode:DatabaseOutput'] :: DatabaseOutput -> Maybe DatabaseOutputMode

-- | The Glue connection that stores the connection information for the
--   target database.
[$sel:glueConnectionName:DatabaseOutput'] :: DatabaseOutput -> Text

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
[$sel:databaseOptions:DatabaseOutput'] :: DatabaseOutput -> DatabaseTableOutputOptions

-- | Create a value of <a>DatabaseOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseOutputMode:DatabaseOutput'</a>,
--   <a>databaseOutput_databaseOutputMode</a> - The output mode to write
--   into the database. Currently supported option: NEW_TABLE.
--   
--   <a>$sel:glueConnectionName:DatabaseOutput'</a>,
--   <a>databaseOutput_glueConnectionName</a> - The Glue connection that
--   stores the connection information for the target database.
--   
--   <a>$sel:databaseOptions:DatabaseOutput'</a>,
--   <a>databaseOutput_databaseOptions</a> - Represents options that
--   specify how and where DataBrew writes the database output generated by
--   recipe jobs.
newDatabaseOutput :: Text -> DatabaseTableOutputOptions -> DatabaseOutput

-- | The output mode to write into the database. Currently supported
--   option: NEW_TABLE.
databaseOutput_databaseOutputMode :: Lens' DatabaseOutput (Maybe DatabaseOutputMode)

-- | The Glue connection that stores the connection information for the
--   target database.
databaseOutput_glueConnectionName :: Lens' DatabaseOutput Text

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
databaseOutput_databaseOptions :: Lens' DatabaseOutput DatabaseTableOutputOptions

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
--   
--   <i>See:</i> <a>newDatabaseTableOutputOptions</a> smart constructor.
data DatabaseTableOutputOptions
DatabaseTableOutputOptions' :: Maybe S3Location -> Text -> DatabaseTableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can store intermediate results.
[$sel:tempDirectory:DatabaseTableOutputOptions'] :: DatabaseTableOutputOptions -> Maybe S3Location

-- | A prefix for the name of a table DataBrew will create in the database.
[$sel:tableName:DatabaseTableOutputOptions'] :: DatabaseTableOutputOptions -> Text

-- | Create a value of <a>DatabaseTableOutputOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DatabaseTableOutputOptions'</a>,
--   <a>databaseTableOutputOptions_tempDirectory</a> - Represents an Amazon
--   S3 location (bucket name and object key) where DataBrew can store
--   intermediate results.
--   
--   <a>$sel:tableName:DatabaseTableOutputOptions'</a>,
--   <a>databaseTableOutputOptions_tableName</a> - A prefix for the name of
--   a table DataBrew will create in the database.
newDatabaseTableOutputOptions :: Text -> DatabaseTableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can store intermediate results.
databaseTableOutputOptions_tempDirectory :: Lens' DatabaseTableOutputOptions (Maybe S3Location)

-- | A prefix for the name of a table DataBrew will create in the database.
databaseTableOutputOptions_tableName :: Lens' DatabaseTableOutputOptions Text

-- | Represents a dataset that can be processed by DataBrew.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe POSIX -> Maybe PathOptions -> Maybe POSIX -> Maybe FormatOptions -> Maybe InputFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Source -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Input -> Dataset

-- | The last modification date and time of the dataset.
[$sel:lastModifiedDate:Dataset'] :: Dataset -> Maybe POSIX

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
[$sel:pathOptions:Dataset'] :: Dataset -> Maybe PathOptions

-- | The date and time that the dataset was created.
[$sel:createDate:Dataset'] :: Dataset -> Maybe POSIX

-- | A set of options that define how DataBrew interprets the data in the
--   dataset.
[$sel:formatOptions:Dataset'] :: Dataset -> Maybe FormatOptions

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
[$sel:format:Dataset'] :: Dataset -> Maybe InputFormat

-- | The Amazon Resource Name (ARN) of the user who created the dataset.
[$sel:createdBy:Dataset'] :: Dataset -> Maybe Text

-- | The ID of the Amazon Web Services account that owns the dataset.
[$sel:accountId:Dataset'] :: Dataset -> Maybe Text

-- | The unique Amazon Resource Name (ARN) for the dataset.
[$sel:resourceArn:Dataset'] :: Dataset -> Maybe Text

-- | The location of the data for the dataset, either Amazon S3 or the Glue
--   Data Catalog.
[$sel:source:Dataset'] :: Dataset -> Maybe Source

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
[$sel:lastModifiedBy:Dataset'] :: Dataset -> Maybe Text

-- | Metadata tags that have been applied to the dataset.
[$sel:tags:Dataset'] :: Dataset -> Maybe (HashMap Text Text)

-- | The unique name of the dataset.
[$sel:name:Dataset'] :: Dataset -> Text

-- | Information on how DataBrew can find the dataset, in either the Glue
--   Data Catalog or Amazon S3.
[$sel:input:Dataset'] :: Dataset -> Input

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Dataset'</a>, <a>dataset_lastModifiedDate</a>
--   - The last modification date and time of the dataset.
--   
--   <a>$sel:pathOptions:Dataset'</a>, <a>dataset_pathOptions</a> - A set
--   of options that defines how DataBrew interprets an Amazon S3 path of
--   the dataset.
--   
--   <a>$sel:createDate:Dataset'</a>, <a>dataset_createDate</a> - The date
--   and time that the dataset was created.
--   
--   <a>$sel:formatOptions:Dataset'</a>, <a>dataset_formatOptions</a> - A
--   set of options that define how DataBrew interprets the data in the
--   dataset.
--   
--   <a>$sel:format:Dataset'</a>, <a>dataset_format</a> - The file format
--   of a dataset that is created from an Amazon S3 file or folder.
--   
--   <a>$sel:createdBy:Dataset'</a>, <a>dataset_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who created the dataset.
--   
--   <a>$sel:accountId:Dataset'</a>, <a>dataset_accountId</a> - The ID of
--   the Amazon Web Services account that owns the dataset.
--   
--   <a>$sel:resourceArn:Dataset'</a>, <a>dataset_resourceArn</a> - The
--   unique Amazon Resource Name (ARN) for the dataset.
--   
--   <a>$sel:source:Dataset'</a>, <a>dataset_source</a> - The location of
--   the data for the dataset, either Amazon S3 or the Glue Data Catalog.
--   
--   <a>$sel:lastModifiedBy:Dataset'</a>, <a>dataset_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
--   
--   <a>$sel:tags:Dataset'</a>, <a>dataset_tags</a> - Metadata tags that
--   have been applied to the dataset.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The unique name of
--   the dataset.
--   
--   <a>$sel:input:Dataset'</a>, <a>dataset_input</a> - Information on how
--   DataBrew can find the dataset, in either the Glue Data Catalog or
--   Amazon S3.
newDataset :: Text -> Input -> Dataset

-- | The last modification date and time of the dataset.
dataset_lastModifiedDate :: Lens' Dataset (Maybe UTCTime)

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
dataset_pathOptions :: Lens' Dataset (Maybe PathOptions)

-- | The date and time that the dataset was created.
dataset_createDate :: Lens' Dataset (Maybe UTCTime)

-- | A set of options that define how DataBrew interprets the data in the
--   dataset.
dataset_formatOptions :: Lens' Dataset (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
dataset_format :: Lens' Dataset (Maybe InputFormat)

-- | The Amazon Resource Name (ARN) of the user who created the dataset.
dataset_createdBy :: Lens' Dataset (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the dataset.
dataset_accountId :: Lens' Dataset (Maybe Text)

-- | The unique Amazon Resource Name (ARN) for the dataset.
dataset_resourceArn :: Lens' Dataset (Maybe Text)

-- | The location of the data for the dataset, either Amazon S3 or the Glue
--   Data Catalog.
dataset_source :: Lens' Dataset (Maybe Source)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
dataset_lastModifiedBy :: Lens' Dataset (Maybe Text)

-- | Metadata tags that have been applied to the dataset.
dataset_tags :: Lens' Dataset (Maybe (HashMap Text Text))

-- | The unique name of the dataset.
dataset_name :: Lens' Dataset Text

-- | Information on how DataBrew can find the dataset, in either the Glue
--   Data Catalog or Amazon S3.
dataset_input :: Lens' Dataset Input

-- | Represents a dataset paramater that defines type and conditions for a
--   parameter in the Amazon S3 path of the dataset.
--   
--   <i>See:</i> <a>newDatasetParameter</a> smart constructor.
data DatasetParameter
DatasetParameter' :: Maybe Bool -> Maybe FilterExpression -> Maybe DatetimeOptions -> Text -> ParameterType -> DatasetParameter

-- | Optional boolean value that defines whether the captured value of this
--   parameter should be used to create a new column in a dataset.
[$sel:createColumn:DatasetParameter'] :: DatasetParameter -> Maybe Bool

-- | The optional filter expression structure to apply additional matching
--   criteria to the parameter.
[$sel:filter':DatasetParameter'] :: DatasetParameter -> Maybe FilterExpression

-- | Additional parameter options such as a format and a timezone. Required
--   for datetime parameters.
[$sel:datetimeOptions:DatasetParameter'] :: DatasetParameter -> Maybe DatetimeOptions

-- | The name of the parameter that is used in the dataset's Amazon S3
--   path.
[$sel:name:DatasetParameter'] :: DatasetParameter -> Text

-- | The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
[$sel:type':DatasetParameter'] :: DatasetParameter -> ParameterType

-- | Create a value of <a>DatasetParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createColumn:DatasetParameter'</a>,
--   <a>datasetParameter_createColumn</a> - Optional boolean value that
--   defines whether the captured value of this parameter should be used to
--   create a new column in a dataset.
--   
--   <a>$sel:filter':DatasetParameter'</a>, <a>datasetParameter_filter</a>
--   - The optional filter expression structure to apply additional
--   matching criteria to the parameter.
--   
--   <a>$sel:datetimeOptions:DatasetParameter'</a>,
--   <a>datasetParameter_datetimeOptions</a> - Additional parameter options
--   such as a format and a timezone. Required for datetime parameters.
--   
--   <a>$sel:name:DatasetParameter'</a>, <a>datasetParameter_name</a> - The
--   name of the parameter that is used in the dataset's Amazon S3 path.
--   
--   <a>$sel:type':DatasetParameter'</a>, <a>datasetParameter_type</a> -
--   The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
newDatasetParameter :: Text -> ParameterType -> DatasetParameter

-- | Optional boolean value that defines whether the captured value of this
--   parameter should be used to create a new column in a dataset.
datasetParameter_createColumn :: Lens' DatasetParameter (Maybe Bool)

-- | The optional filter expression structure to apply additional matching
--   criteria to the parameter.
datasetParameter_filter :: Lens' DatasetParameter (Maybe FilterExpression)

-- | Additional parameter options such as a format and a timezone. Required
--   for datetime parameters.
datasetParameter_datetimeOptions :: Lens' DatasetParameter (Maybe DatetimeOptions)

-- | The name of the parameter that is used in the dataset's Amazon S3
--   path.
datasetParameter_name :: Lens' DatasetParameter Text

-- | The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
datasetParameter_type :: Lens' DatasetParameter ParameterType

-- | Represents additional options for correct interpretation of datetime
--   parameters used in the Amazon S3 path of a dataset.
--   
--   <i>See:</i> <a>newDatetimeOptions</a> smart constructor.
data DatetimeOptions
DatetimeOptions' :: Maybe Text -> Maybe Text -> Text -> DatetimeOptions

-- | Optional value for a timezone offset of the datetime parameter value
--   in the Amazon S3 path. Shouldn't be used if Format for this parameter
--   includes timezone fields. If no offset specified, UTC is assumed.
[$sel:timezoneOffset:DatetimeOptions'] :: DatetimeOptions -> Maybe Text

-- | Optional value for a non-US locale code, needed for correct
--   interpretation of some date formats.
[$sel:localeCode:DatetimeOptions'] :: DatetimeOptions -> Maybe Text

-- | Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
[$sel:format:DatetimeOptions'] :: DatetimeOptions -> Text

-- | Create a value of <a>DatetimeOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timezoneOffset:DatetimeOptions'</a>,
--   <a>datetimeOptions_timezoneOffset</a> - Optional value for a timezone
--   offset of the datetime parameter value in the Amazon S3 path.
--   Shouldn't be used if Format for this parameter includes timezone
--   fields. If no offset specified, UTC is assumed.
--   
--   <a>$sel:localeCode:DatetimeOptions'</a>,
--   <a>datetimeOptions_localeCode</a> - Optional value for a non-US locale
--   code, needed for correct interpretation of some date formats.
--   
--   <a>$sel:format:DatetimeOptions'</a>, <a>datetimeOptions_format</a> -
--   Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
newDatetimeOptions :: Text -> DatetimeOptions

-- | Optional value for a timezone offset of the datetime parameter value
--   in the Amazon S3 path. Shouldn't be used if Format for this parameter
--   includes timezone fields. If no offset specified, UTC is assumed.
datetimeOptions_timezoneOffset :: Lens' DatetimeOptions (Maybe Text)

-- | Optional value for a non-US locale code, needed for correct
--   interpretation of some date formats.
datetimeOptions_localeCode :: Lens' DatetimeOptions (Maybe Text)

-- | Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
datetimeOptions_format :: Lens' DatetimeOptions Text

-- | Represents a set of options that define how DataBrew will interpret a
--   Microsoft Excel file when creating a dataset from that file.
--   
--   <i>See:</i> <a>newExcelOptions</a> smart constructor.
data ExcelOptions
ExcelOptions' :: Maybe (NonEmpty Natural) -> Maybe (NonEmpty Text) -> Maybe Bool -> ExcelOptions

-- | One or more sheet numbers in the Excel file that will be included in
--   the dataset.
[$sel:sheetIndexes:ExcelOptions'] :: ExcelOptions -> Maybe (NonEmpty Natural)

-- | One or more named sheets in the Excel file that will be included in
--   the dataset.
[$sel:sheetNames:ExcelOptions'] :: ExcelOptions -> Maybe (NonEmpty Text)

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
[$sel:headerRow:ExcelOptions'] :: ExcelOptions -> Maybe Bool

-- | Create a value of <a>ExcelOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sheetIndexes:ExcelOptions'</a>,
--   <a>excelOptions_sheetIndexes</a> - One or more sheet numbers in the
--   Excel file that will be included in the dataset.
--   
--   <a>$sel:sheetNames:ExcelOptions'</a>, <a>excelOptions_sheetNames</a> -
--   One or more named sheets in the Excel file that will be included in
--   the dataset.
--   
--   <a>$sel:headerRow:ExcelOptions'</a>, <a>excelOptions_headerRow</a> - A
--   variable that specifies whether the first row in the file is parsed as
--   the header. If this value is false, column names are auto-generated.
newExcelOptions :: ExcelOptions

-- | One or more sheet numbers in the Excel file that will be included in
--   the dataset.
excelOptions_sheetIndexes :: Lens' ExcelOptions (Maybe (NonEmpty Natural))

-- | One or more named sheets in the Excel file that will be included in
--   the dataset.
excelOptions_sheetNames :: Lens' ExcelOptions (Maybe (NonEmpty Text))

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
excelOptions_headerRow :: Lens' ExcelOptions (Maybe Bool)

-- | Represents a limit imposed on number of Amazon S3 files that should be
--   selected for a dataset from a connected Amazon S3 path.
--   
--   <i>See:</i> <a>newFilesLimit</a> smart constructor.
data FilesLimit
FilesLimit' :: Maybe OrderedBy -> Maybe Order -> Natural -> FilesLimit

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently
--   it's the only allowed value.
[$sel:orderedBy:FilesLimit'] :: FilesLimit -> Maybe OrderedBy

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses DESCENDING order, i.e. most recent files are selected
--   first. Anotherpossible value is ASCENDING.
[$sel:order:FilesLimit'] :: FilesLimit -> Maybe Order

-- | The number of Amazon S3 files to select.
[$sel:maxFiles:FilesLimit'] :: FilesLimit -> Natural

-- | Create a value of <a>FilesLimit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderedBy:FilesLimit'</a>, <a>filesLimit_orderedBy</a> - A
--   criteria to use for Amazon S3 files sorting before their selection. By
--   default uses LAST_MODIFIED_DATE as a sorting criteria. Currently it's
--   the only allowed value.
--   
--   <a>$sel:order:FilesLimit'</a>, <a>filesLimit_order</a> - A criteria to
--   use for Amazon S3 files sorting before their selection. By default
--   uses DESCENDING order, i.e. most recent files are selected first.
--   Anotherpossible value is ASCENDING.
--   
--   <a>$sel:maxFiles:FilesLimit'</a>, <a>filesLimit_maxFiles</a> - The
--   number of Amazon S3 files to select.
newFilesLimit :: Natural -> FilesLimit

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently
--   it's the only allowed value.
filesLimit_orderedBy :: Lens' FilesLimit (Maybe OrderedBy)

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses DESCENDING order, i.e. most recent files are selected
--   first. Anotherpossible value is ASCENDING.
filesLimit_order :: Lens' FilesLimit (Maybe Order)

-- | The number of Amazon S3 files to select.
filesLimit_maxFiles :: Lens' FilesLimit Natural

-- | Represents a structure for defining parameter conditions. Supported
--   conditions are described here: <a>Supported conditions for dynamic
--   datasets</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <i>See:</i> <a>newFilterExpression</a> smart constructor.
data FilterExpression
FilterExpression' :: Text -> HashMap Text Text -> FilterExpression

-- | The expression which includes condition names followed by substitution
--   variables, possibly grouped and combined with other conditions. For
--   example, "(starts_with :prefix1 or starts_with :prefix2) and
--   (ends_with :suffix1 or ends_with :suffix2)". Substitution variables
--   should start with ':' symbol.
[$sel:expression:FilterExpression'] :: FilterExpression -> Text

-- | The map of substitution variable names to their values used in this
--   filter expression.
[$sel:valuesMap:FilterExpression'] :: FilterExpression -> HashMap Text Text

-- | Create a value of <a>FilterExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:FilterExpression'</a>,
--   <a>filterExpression_expression</a> - The expression which includes
--   condition names followed by substitution variables, possibly grouped
--   and combined with other conditions. For example, "(starts_with
--   :prefix1 or starts_with :prefix2) and (ends_with :suffix1 or ends_with
--   :suffix2)". Substitution variables should start with ':' symbol.
--   
--   <a>$sel:valuesMap:FilterExpression'</a>,
--   <a>filterExpression_valuesMap</a> - The map of substitution variable
--   names to their values used in this filter expression.
newFilterExpression :: Text -> FilterExpression

-- | The expression which includes condition names followed by substitution
--   variables, possibly grouped and combined with other conditions. For
--   example, "(starts_with :prefix1 or starts_with :prefix2) and
--   (ends_with :suffix1 or ends_with :suffix2)". Substitution variables
--   should start with ':' symbol.
filterExpression_expression :: Lens' FilterExpression Text

-- | The map of substitution variable names to their values used in this
--   filter expression.
filterExpression_valuesMap :: Lens' FilterExpression (HashMap Text Text)

-- | Represents a set of options that define the structure of either
--   comma-separated value (CSV), Excel, or JSON input.
--   
--   <i>See:</i> <a>newFormatOptions</a> smart constructor.
data FormatOptions
FormatOptions' :: Maybe JsonOptions -> Maybe CsvOptions -> Maybe ExcelOptions -> FormatOptions

-- | Options that define how JSON input is to be interpreted by DataBrew.
[$sel:json:FormatOptions'] :: FormatOptions -> Maybe JsonOptions

-- | Options that define how CSV input is to be interpreted by DataBrew.
[$sel:csv:FormatOptions'] :: FormatOptions -> Maybe CsvOptions

-- | Options that define how Excel input is to be interpreted by DataBrew.
[$sel:excel:FormatOptions'] :: FormatOptions -> Maybe ExcelOptions

-- | Create a value of <a>FormatOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:json:FormatOptions'</a>, <a>formatOptions_json</a> - Options
--   that define how JSON input is to be interpreted by DataBrew.
--   
--   <a>$sel:csv:FormatOptions'</a>, <a>formatOptions_csv</a> - Options
--   that define how CSV input is to be interpreted by DataBrew.
--   
--   <a>$sel:excel:FormatOptions'</a>, <a>formatOptions_excel</a> - Options
--   that define how Excel input is to be interpreted by DataBrew.
newFormatOptions :: FormatOptions

-- | Options that define how JSON input is to be interpreted by DataBrew.
formatOptions_json :: Lens' FormatOptions (Maybe JsonOptions)

-- | Options that define how CSV input is to be interpreted by DataBrew.
formatOptions_csv :: Lens' FormatOptions (Maybe CsvOptions)

-- | Options that define how Excel input is to be interpreted by DataBrew.
formatOptions_excel :: Lens' FormatOptions (Maybe ExcelOptions)

-- | Represents information on how DataBrew can find data, in either the
--   Glue Data Catalog or Amazon S3.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe DataCatalogInputDefinition -> Maybe S3Location -> Maybe DatabaseInputDefinition -> Input

-- | The Glue Data Catalog parameters for the data.
[$sel:dataCatalogInputDefinition:Input'] :: Input -> Maybe DataCatalogInputDefinition

-- | The Amazon S3 location where the data is stored.
[$sel:s3InputDefinition:Input'] :: Input -> Maybe S3Location

-- | Connection information for dataset input files stored in a database.
[$sel:databaseInputDefinition:Input'] :: Input -> Maybe DatabaseInputDefinition

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogInputDefinition:Input'</a>,
--   <a>input_dataCatalogInputDefinition</a> - The Glue Data Catalog
--   parameters for the data.
--   
--   <a>$sel:s3InputDefinition:Input'</a>, <a>input_s3InputDefinition</a> -
--   The Amazon S3 location where the data is stored.
--   
--   <a>$sel:databaseInputDefinition:Input'</a>,
--   <a>input_databaseInputDefinition</a> - Connection information for
--   dataset input files stored in a database.
newInput :: Input

-- | The Glue Data Catalog parameters for the data.
input_dataCatalogInputDefinition :: Lens' Input (Maybe DataCatalogInputDefinition)

-- | The Amazon S3 location where the data is stored.
input_s3InputDefinition :: Lens' Input (Maybe S3Location)

-- | Connection information for dataset input files stored in a database.
input_databaseInputDefinition :: Lens' Input (Maybe DatabaseInputDefinition)

-- | Represents all of the attributes of a DataBrew job.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe POSIX -> Maybe POSIX -> Maybe RecipeReference -> Maybe Text -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe LogSubscription -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobType -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe JobSample -> Text -> Job

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:Job'] :: Job -> Maybe (NonEmpty DataCatalogOutput)

-- | The modification date and time of the job.
[$sel:lastModifiedDate:Job'] :: Job -> Maybe POSIX

-- | The date and time that the job was created.
[$sel:createDate:Job'] :: Job -> Maybe POSIX

-- | A set of steps that the job runs.
[$sel:recipeReference:Job'] :: Job -> Maybe RecipeReference

-- | The Amazon Resource Name (ARN) of the user who created the job.
[$sel:createdBy:Job'] :: Job -> Maybe Text

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
[$sel:databaseOutputs:Job'] :: Job -> Maybe (NonEmpty DatabaseOutput)

-- | The ID of the Amazon Web Services account that owns the job.
[$sel:accountId:Job'] :: Job -> Maybe Text

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
[$sel:encryptionMode:Job'] :: Job -> Maybe EncryptionMode

-- | One or more artifacts that represent output from running the job.
[$sel:outputs:Job'] :: Job -> Maybe (NonEmpty Output)

-- | The unique Amazon Resource Name (ARN) for the job.
[$sel:resourceArn:Job'] :: Job -> Maybe Text

-- | The current status of Amazon CloudWatch logging for the job.
[$sel:logSubscription:Job'] :: Job -> Maybe LogSubscription

-- | The name of the project that the job is associated with.
[$sel:projectName:Job'] :: Job -> Maybe Text

-- | The maximum number of times to retry the job after a job run fails.
[$sel:maxRetries:Job'] :: Job -> Maybe Natural

-- | A dataset that the job is to process.
[$sel:datasetName:Job'] :: Job -> Maybe Text

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
[$sel:encryptionKeyArn:Job'] :: Job -> Maybe Text

-- | The maximum number of nodes that can be consumed when the job
--   processes data.
[$sel:maxCapacity:Job'] :: Job -> Maybe Int

-- | The Amazon Resource Name (ARN) of the user who last modified the job.
[$sel:lastModifiedBy:Job'] :: Job -> Maybe Text

-- | The job type of the job, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
[$sel:type':Job'] :: Job -> Maybe JobType

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
[$sel:timeout:Job'] :: Job -> Maybe Natural

-- | Metadata tags that have been applied to the job.
[$sel:tags:Job'] :: Job -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the role to be assumed for this job.
[$sel:roleArn:Job'] :: Job -> Maybe Text

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default value is used.
--   The default value is CUSTOM_ROWS for the mode parameter and 20,000 for
--   the size parameter.
[$sel:jobSample:Job'] :: Job -> Maybe JobSample

-- | The unique name of the job.
[$sel:name:Job'] :: Job -> Text

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:Job'</a>, <a>job_dataCatalogOutputs</a> -
--   One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
--   
--   <a>$sel:lastModifiedDate:Job'</a>, <a>job_lastModifiedDate</a> - The
--   modification date and time of the job.
--   
--   <a>$sel:createDate:Job'</a>, <a>job_createDate</a> - The date and time
--   that the job was created.
--   
--   <a>$sel:recipeReference:Job'</a>, <a>job_recipeReference</a> - A set
--   of steps that the job runs.
--   
--   <a>$sel:createdBy:Job'</a>, <a>job_createdBy</a> - The Amazon Resource
--   Name (ARN) of the user who created the job.
--   
--   <a>$sel:databaseOutputs:Job'</a>, <a>job_databaseOutputs</a> -
--   Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
--   
--   <a>$sel:accountId:Job'</a>, <a>job_accountId</a> - The ID of the
--   Amazon Web Services account that owns the job.
--   
--   <a>$sel:encryptionMode:Job'</a>, <a>job_encryptionMode</a> - The
--   encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:Job'</a>, <a>job_outputs</a> - One or more artifacts
--   that represent output from running the job.
--   
--   <a>$sel:resourceArn:Job'</a>, <a>job_resourceArn</a> - The unique
--   Amazon Resource Name (ARN) for the job.
--   
--   <a>$sel:logSubscription:Job'</a>, <a>job_logSubscription</a> - The
--   current status of Amazon CloudWatch logging for the job.
--   
--   <a>$sel:projectName:Job'</a>, <a>job_projectName</a> - The name of the
--   project that the job is associated with.
--   
--   <a>$sel:maxRetries:Job'</a>, <a>job_maxRetries</a> - The maximum
--   number of times to retry the job after a job run fails.
--   
--   <a>$sel:datasetName:Job'</a>, <a>job_datasetName</a> - A dataset that
--   the job is to process.
--   
--   <a>$sel:encryptionKeyArn:Job'</a>, <a>job_encryptionKeyArn</a> - The
--   Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
--   
--   <a>$sel:maxCapacity:Job'</a>, <a>job_maxCapacity</a> - The maximum
--   number of nodes that can be consumed when the job processes data.
--   
--   <a>$sel:lastModifiedBy:Job'</a>, <a>job_lastModifiedBy</a> - The
--   Amazon Resource Name (ARN) of the user who last modified the job.
--   
--   <a>$sel:type':Job'</a>, <a>job_type</a> - The job type of the job,
--   which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
--   
--   <a>$sel:timeout:Job'</a>, <a>job_timeout</a> - The job's timeout in
--   minutes. A job that attempts to run longer than this timeout period
--   ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:Job'</a>, <a>job_tags</a> - Metadata tags that have been
--   applied to the job.
--   
--   <a>$sel:roleArn:Job'</a>, <a>job_roleArn</a> - The Amazon Resource
--   Name (ARN) of the role to be assumed for this job.
--   
--   <a>$sel:jobSample:Job'</a>, <a>job_jobSample</a> - A sample
--   configuration for profile jobs only, which determines the number of
--   rows on which the profile job is run. If a <tt>JobSample</tt> value
--   isn't provided, the default value is used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The unique name of the job.
newJob :: Text -> Job

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
job_dataCatalogOutputs :: Lens' Job (Maybe (NonEmpty DataCatalogOutput))

-- | The modification date and time of the job.
job_lastModifiedDate :: Lens' Job (Maybe UTCTime)

-- | The date and time that the job was created.
job_createDate :: Lens' Job (Maybe UTCTime)

-- | A set of steps that the job runs.
job_recipeReference :: Lens' Job (Maybe RecipeReference)

-- | The Amazon Resource Name (ARN) of the user who created the job.
job_createdBy :: Lens' Job (Maybe Text)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
job_databaseOutputs :: Lens' Job (Maybe (NonEmpty DatabaseOutput))

-- | The ID of the Amazon Web Services account that owns the job.
job_accountId :: Lens' Job (Maybe Text)

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
job_encryptionMode :: Lens' Job (Maybe EncryptionMode)

-- | One or more artifacts that represent output from running the job.
job_outputs :: Lens' Job (Maybe (NonEmpty Output))

-- | The unique Amazon Resource Name (ARN) for the job.
job_resourceArn :: Lens' Job (Maybe Text)

-- | The current status of Amazon CloudWatch logging for the job.
job_logSubscription :: Lens' Job (Maybe LogSubscription)

-- | The name of the project that the job is associated with.
job_projectName :: Lens' Job (Maybe Text)

-- | The maximum number of times to retry the job after a job run fails.
job_maxRetries :: Lens' Job (Maybe Natural)

-- | A dataset that the job is to process.
job_datasetName :: Lens' Job (Maybe Text)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
job_encryptionKeyArn :: Lens' Job (Maybe Text)

-- | The maximum number of nodes that can be consumed when the job
--   processes data.
job_maxCapacity :: Lens' Job (Maybe Int)

-- | The Amazon Resource Name (ARN) of the user who last modified the job.
job_lastModifiedBy :: Lens' Job (Maybe Text)

-- | The job type of the job, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
job_type :: Lens' Job (Maybe JobType)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
job_timeout :: Lens' Job (Maybe Natural)

-- | Metadata tags that have been applied to the job.
job_tags :: Lens' Job (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role to be assumed for this job.
job_roleArn :: Lens' Job (Maybe Text)

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default value is used.
--   The default value is CUSTOM_ROWS for the mode parameter and 20,000 for
--   the size parameter.
job_jobSample :: Lens' Job (Maybe JobSample)

-- | The unique name of the job.
job_name :: Lens' Job Text

-- | Represents one run of a DataBrew job.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe POSIX -> Maybe JobRunState -> Maybe (NonEmpty DataCatalogOutput) -> Maybe Text -> Maybe POSIX -> Maybe RecipeReference -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe Int -> Maybe LogSubscription -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobSample -> JobRun

-- | The date and time when the job completed processing.
[$sel:completedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The current state of the job run entity itself.
[$sel:state:JobRun'] :: JobRun -> Maybe JobRunState

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:JobRun'] :: JobRun -> Maybe (NonEmpty DataCatalogOutput)

-- | The name of the job being processed during this run.
[$sel:jobName:JobRun'] :: JobRun -> Maybe Text

-- | The date and time when the job run began.
[$sel:startedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The set of steps processed by the job.
[$sel:recipeReference:JobRun'] :: JobRun -> Maybe RecipeReference

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
[$sel:databaseOutputs:JobRun'] :: JobRun -> Maybe (NonEmpty DatabaseOutput)

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
[$sel:logGroupName:JobRun'] :: JobRun -> Maybe Text

-- | One or more output artifacts from a job run.
[$sel:outputs:JobRun'] :: JobRun -> Maybe (NonEmpty Output)

-- | The unique identifier of the job run.
[$sel:runId:JobRun'] :: JobRun -> Maybe Text

-- | The amount of time, in seconds, during which a job run consumed
--   resources.
[$sel:executionTime:JobRun'] :: JobRun -> Maybe Int

-- | The current status of Amazon CloudWatch logging for the job run.
[$sel:logSubscription:JobRun'] :: JobRun -> Maybe LogSubscription

-- | The Amazon Resource Name (ARN) of the user who initiated the job run.
[$sel:startedBy:JobRun'] :: JobRun -> Maybe Text

-- | The name of the dataset for the job to process.
[$sel:datasetName:JobRun'] :: JobRun -> Maybe Text

-- | The number of times that DataBrew has attempted to run the job.
[$sel:attempt:JobRun'] :: JobRun -> Maybe Int

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
[$sel:errorMessage:JobRun'] :: JobRun -> Maybe Text

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
[$sel:jobSample:JobRun'] :: JobRun -> Maybe JobSample

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:JobRun'</a>, <a>jobRun_completedOn</a> - The date
--   and time when the job completed processing.
--   
--   <a>$sel:state:JobRun'</a>, <a>jobRun_state</a> - The current state of
--   the job run entity itself.
--   
--   <a>$sel:dataCatalogOutputs:JobRun'</a>,
--   <a>jobRun_dataCatalogOutputs</a> - One or more artifacts that
--   represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:jobName:JobRun'</a>, <a>jobRun_jobName</a> - The name of the
--   job being processed during this run.
--   
--   <a>$sel:startedOn:JobRun'</a>, <a>jobRun_startedOn</a> - The date and
--   time when the job run began.
--   
--   <a>$sel:recipeReference:JobRun'</a>, <a>jobRun_recipeReference</a> -
--   The set of steps processed by the job.
--   
--   <a>$sel:databaseOutputs:JobRun'</a>, <a>jobRun_databaseOutputs</a> -
--   Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
--   
--   <a>$sel:logGroupName:JobRun'</a>, <a>jobRun_logGroupName</a> - The
--   name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
--   
--   <a>$sel:outputs:JobRun'</a>, <a>jobRun_outputs</a> - One or more
--   output artifacts from a job run.
--   
--   <a>$sel:runId:JobRun'</a>, <a>jobRun_runId</a> - The unique identifier
--   of the job run.
--   
--   <a>$sel:executionTime:JobRun'</a>, <a>jobRun_executionTime</a> - The
--   amount of time, in seconds, during which a job run consumed resources.
--   
--   <a>$sel:logSubscription:JobRun'</a>, <a>jobRun_logSubscription</a> -
--   The current status of Amazon CloudWatch logging for the job run.
--   
--   <a>$sel:startedBy:JobRun'</a>, <a>jobRun_startedBy</a> - The Amazon
--   Resource Name (ARN) of the user who initiated the job run.
--   
--   <a>$sel:datasetName:JobRun'</a>, <a>jobRun_datasetName</a> - The name
--   of the dataset for the job to process.
--   
--   <a>$sel:attempt:JobRun'</a>, <a>jobRun_attempt</a> - The number of
--   times that DataBrew has attempted to run the job.
--   
--   <a>$sel:errorMessage:JobRun'</a>, <a>jobRun_errorMessage</a> - A
--   message indicating an error (if any) that was encountered when the job
--   ran.
--   
--   <a>$sel:jobSample:JobRun'</a>, <a>jobRun_jobSample</a> - A sample
--   configuration for profile jobs only, which determines the number of
--   rows on which the profile job is run. If a <tt>JobSample</tt> value
--   isn't provided, the default is used. The default value is CUSTOM_ROWS
--   for the mode parameter and 20,000 for the size parameter.
newJobRun :: JobRun

-- | The date and time when the job completed processing.
jobRun_completedOn :: Lens' JobRun (Maybe UTCTime)

-- | The current state of the job run entity itself.
jobRun_state :: Lens' JobRun (Maybe JobRunState)

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
jobRun_dataCatalogOutputs :: Lens' JobRun (Maybe (NonEmpty DataCatalogOutput))

-- | The name of the job being processed during this run.
jobRun_jobName :: Lens' JobRun (Maybe Text)

-- | The date and time when the job run began.
jobRun_startedOn :: Lens' JobRun (Maybe UTCTime)

-- | The set of steps processed by the job.
jobRun_recipeReference :: Lens' JobRun (Maybe RecipeReference)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
jobRun_databaseOutputs :: Lens' JobRun (Maybe (NonEmpty DatabaseOutput))

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
jobRun_logGroupName :: Lens' JobRun (Maybe Text)

-- | One or more output artifacts from a job run.
jobRun_outputs :: Lens' JobRun (Maybe (NonEmpty Output))

-- | The unique identifier of the job run.
jobRun_runId :: Lens' JobRun (Maybe Text)

-- | The amount of time, in seconds, during which a job run consumed
--   resources.
jobRun_executionTime :: Lens' JobRun (Maybe Int)

-- | The current status of Amazon CloudWatch logging for the job run.
jobRun_logSubscription :: Lens' JobRun (Maybe LogSubscription)

-- | The Amazon Resource Name (ARN) of the user who initiated the job run.
jobRun_startedBy :: Lens' JobRun (Maybe Text)

-- | The name of the dataset for the job to process.
jobRun_datasetName :: Lens' JobRun (Maybe Text)

-- | The number of times that DataBrew has attempted to run the job.
jobRun_attempt :: Lens' JobRun (Maybe Int)

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
jobRun_errorMessage :: Lens' JobRun (Maybe Text)

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
jobRun_jobSample :: Lens' JobRun (Maybe JobSample)

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
--   
--   <i>See:</i> <a>newJobSample</a> smart constructor.
data JobSample
JobSample' :: Maybe Integer -> Maybe SampleMode -> JobSample

-- | The <tt>Size</tt> parameter is only required when the mode is
--   CUSTOM_ROWS. The profile job is run on the specified number of rows.
--   The maximum value for size is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
[$sel:size:JobSample'] :: JobSample -> Maybe Integer

-- | A value that determines whether the profile job is run on the entire
--   dataset or a specified number of rows. This value must be one of the
--   following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
[$sel:mode:JobSample'] :: JobSample -> Maybe SampleMode

-- | Create a value of <a>JobSample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:JobSample'</a>, <a>jobSample_size</a> - The <tt>Size</tt>
--   parameter is only required when the mode is CUSTOM_ROWS. The profile
--   job is run on the specified number of rows. The maximum value for size
--   is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
--   
--   <a>$sel:mode:JobSample'</a>, <a>jobSample_mode</a> - A value that
--   determines whether the profile job is run on the entire dataset or a
--   specified number of rows. This value must be one of the following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
newJobSample :: JobSample

-- | The <tt>Size</tt> parameter is only required when the mode is
--   CUSTOM_ROWS. The profile job is run on the specified number of rows.
--   The maximum value for size is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
jobSample_size :: Lens' JobSample (Maybe Integer)

-- | A value that determines whether the profile job is run on the entire
--   dataset or a specified number of rows. This value must be one of the
--   following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
jobSample_mode :: Lens' JobSample (Maybe SampleMode)

-- | Represents the JSON-specific options that define how input is to be
--   interpreted by Glue DataBrew.
--   
--   <i>See:</i> <a>newJsonOptions</a> smart constructor.
data JsonOptions
JsonOptions' :: Maybe Bool -> JsonOptions

-- | A value that specifies whether JSON input contains embedded new line
--   characters.
[$sel:multiLine:JsonOptions'] :: JsonOptions -> Maybe Bool

-- | Create a value of <a>JsonOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:multiLine:JsonOptions'</a>, <a>jsonOptions_multiLine</a> - A
--   value that specifies whether JSON input contains embedded new line
--   characters.
newJsonOptions :: JsonOptions

-- | A value that specifies whether JSON input contains embedded new line
--   characters.
jsonOptions_multiLine :: Lens' JsonOptions (Maybe Bool)

-- | Represents options that specify how and where in Amazon S3 DataBrew
--   writes the output generated by recipe jobs or profile jobs.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe [Text] -> Maybe OutputFormatOptions -> Maybe OutputFormat -> Maybe CompressionFormat -> Maybe Bool -> S3Location -> Output

-- | The names of one or more partition columns for the output of the job.
[$sel:partitionColumns:Output'] :: Output -> Maybe [Text]

-- | Represents options that define how DataBrew formats job output files.
[$sel:formatOptions:Output'] :: Output -> Maybe OutputFormatOptions

-- | The data format of the output of the job.
[$sel:format:Output'] :: Output -> Maybe OutputFormat

-- | The compression algorithm used to compress the output text of the job.
[$sel:compressionFormat:Output'] :: Output -> Maybe CompressionFormat

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output.
[$sel:overwrite:Output'] :: Output -> Maybe Bool

-- | The location in Amazon S3 where the job writes its output.
[$sel:location:Output'] :: Output -> S3Location

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionColumns:Output'</a>, <a>output_partitionColumns</a> -
--   The names of one or more partition columns for the output of the job.
--   
--   <a>$sel:formatOptions:Output'</a>, <a>output_formatOptions</a> -
--   Represents options that define how DataBrew formats job output files.
--   
--   <a>$sel:format:Output'</a>, <a>output_format</a> - The data format of
--   the output of the job.
--   
--   <a>$sel:compressionFormat:Output'</a>, <a>output_compressionFormat</a>
--   - The compression algorithm used to compress the output text of the
--   job.
--   
--   <a>$sel:overwrite:Output'</a>, <a>output_overwrite</a> - A value that,
--   if true, means that any data in the location specified for output is
--   overwritten with new output.
--   
--   <a>$sel:location:Output'</a>, <a>output_location</a> - The location in
--   Amazon S3 where the job writes its output.
newOutput :: S3Location -> Output

-- | The names of one or more partition columns for the output of the job.
output_partitionColumns :: Lens' Output (Maybe [Text])

-- | Represents options that define how DataBrew formats job output files.
output_formatOptions :: Lens' Output (Maybe OutputFormatOptions)

-- | The data format of the output of the job.
output_format :: Lens' Output (Maybe OutputFormat)

-- | The compression algorithm used to compress the output text of the job.
output_compressionFormat :: Lens' Output (Maybe CompressionFormat)

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output.
output_overwrite :: Lens' Output (Maybe Bool)

-- | The location in Amazon S3 where the job writes its output.
output_location :: Lens' Output S3Location

-- | Represents a set of options that define the structure of
--   comma-separated (CSV) job output.
--   
--   <i>See:</i> <a>newOutputFormatOptions</a> smart constructor.
data OutputFormatOptions
OutputFormatOptions' :: Maybe CsvOutputOptions -> OutputFormatOptions

-- | Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
[$sel:csv:OutputFormatOptions'] :: OutputFormatOptions -> Maybe CsvOutputOptions

-- | Create a value of <a>OutputFormatOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csv:OutputFormatOptions'</a>, <a>outputFormatOptions_csv</a> -
--   Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
newOutputFormatOptions :: OutputFormatOptions

-- | Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
outputFormatOptions_csv :: Lens' OutputFormatOptions (Maybe CsvOutputOptions)

-- | Represents a set of options that define how DataBrew selects files for
--   a given Amazon S3 path in a dataset.
--   
--   <i>See:</i> <a>newPathOptions</a> smart constructor.
data PathOptions
PathOptions' :: Maybe FilterExpression -> Maybe (HashMap Text DatasetParameter) -> Maybe FilesLimit -> PathOptions

-- | If provided, this structure defines a date range for matching Amazon
--   S3 objects based on their LastModifiedDate attribute in Amazon S3.
[$sel:lastModifiedDateCondition:PathOptions'] :: PathOptions -> Maybe FilterExpression

-- | A structure that maps names of parameters used in the Amazon S3 path
--   of a dataset to their definitions.
[$sel:parameters:PathOptions'] :: PathOptions -> Maybe (HashMap Text DatasetParameter)

-- | If provided, this structure imposes a limit on a number of files that
--   should be selected.
[$sel:filesLimit:PathOptions'] :: PathOptions -> Maybe FilesLimit

-- | Create a value of <a>PathOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDateCondition:PathOptions'</a>,
--   <a>pathOptions_lastModifiedDateCondition</a> - If provided, this
--   structure defines a date range for matching Amazon S3 objects based on
--   their LastModifiedDate attribute in Amazon S3.
--   
--   <a>$sel:parameters:PathOptions'</a>, <a>pathOptions_parameters</a> - A
--   structure that maps names of parameters used in the Amazon S3 path of
--   a dataset to their definitions.
--   
--   <a>$sel:filesLimit:PathOptions'</a>, <a>pathOptions_filesLimit</a> -
--   If provided, this structure imposes a limit on a number of files that
--   should be selected.
newPathOptions :: PathOptions

-- | If provided, this structure defines a date range for matching Amazon
--   S3 objects based on their LastModifiedDate attribute in Amazon S3.
pathOptions_lastModifiedDateCondition :: Lens' PathOptions (Maybe FilterExpression)

-- | A structure that maps names of parameters used in the Amazon S3 path
--   of a dataset to their definitions.
pathOptions_parameters :: Lens' PathOptions (Maybe (HashMap Text DatasetParameter))

-- | If provided, this structure imposes a limit on a number of files that
--   should be selected.
pathOptions_filesLimit :: Lens' PathOptions (Maybe FilesLimit)

-- | Configuration for profile jobs. Configuration can be used to select
--   columns, do evaluations, and override default parameters of
--   evaluations. When configuration is undefined, the profile job will
--   apply default settings to all supported columns.
--   
--   <i>See:</i> <a>newProfileConfiguration</a> smart constructor.
data ProfileConfiguration
ProfileConfiguration' :: Maybe StatisticsConfiguration -> Maybe (NonEmpty ColumnStatisticsConfiguration) -> Maybe (NonEmpty ColumnSelector) -> ProfileConfiguration

-- | Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
[$sel:datasetStatisticsConfiguration:ProfileConfiguration'] :: ProfileConfiguration -> Maybe StatisticsConfiguration

-- | List of configurations for column evaluations.
--   ColumnStatisticsConfigurations are used to select evaluations and
--   override parameters of evaluations for particular columns. When
--   ColumnStatisticsConfigurations is undefined, the profile job will
--   profile all supported columns and run all supported evaluations.
[$sel:columnStatisticsConfigurations:ProfileConfiguration'] :: ProfileConfiguration -> Maybe (NonEmpty ColumnStatisticsConfiguration)

-- | List of column selectors. ProfileColumns can be used to select columns
--   from the dataset. When ProfileColumns is undefined, the profile job
--   will profile all supported columns.
[$sel:profileColumns:ProfileConfiguration'] :: ProfileConfiguration -> Maybe (NonEmpty ColumnSelector)

-- | Create a value of <a>ProfileConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetStatisticsConfiguration:ProfileConfiguration'</a>,
--   <a>profileConfiguration_datasetStatisticsConfiguration</a> -
--   Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
--   
--   <a>$sel:columnStatisticsConfigurations:ProfileConfiguration'</a>,
--   <a>profileConfiguration_columnStatisticsConfigurations</a> - List of
--   configurations for column evaluations. ColumnStatisticsConfigurations
--   are used to select evaluations and override parameters of evaluations
--   for particular columns. When ColumnStatisticsConfigurations is
--   undefined, the profile job will profile all supported columns and run
--   all supported evaluations.
--   
--   <a>$sel:profileColumns:ProfileConfiguration'</a>,
--   <a>profileConfiguration_profileColumns</a> - List of column selectors.
--   ProfileColumns can be used to select columns from the dataset. When
--   ProfileColumns is undefined, the profile job will profile all
--   supported columns.
newProfileConfiguration :: ProfileConfiguration

-- | Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
profileConfiguration_datasetStatisticsConfiguration :: Lens' ProfileConfiguration (Maybe StatisticsConfiguration)

-- | List of configurations for column evaluations.
--   ColumnStatisticsConfigurations are used to select evaluations and
--   override parameters of evaluations for particular columns. When
--   ColumnStatisticsConfigurations is undefined, the profile job will
--   profile all supported columns and run all supported evaluations.
profileConfiguration_columnStatisticsConfigurations :: Lens' ProfileConfiguration (Maybe (NonEmpty ColumnStatisticsConfiguration))

-- | List of column selectors. ProfileColumns can be used to select columns
--   from the dataset. When ProfileColumns is undefined, the profile job
--   will profile all supported columns.
profileConfiguration_profileColumns :: Lens' ProfileConfiguration (Maybe (NonEmpty ColumnSelector))

-- | Represents all of the attributes of a DataBrew project.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Sample -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Text -> Project

-- | The last modification date and time for the project.
[$sel:lastModifiedDate:Project'] :: Project -> Maybe POSIX

-- | The date and time when the project was opened.
[$sel:openDate:Project'] :: Project -> Maybe POSIX

-- | The date and time that the project was created.
[$sel:createDate:Project'] :: Project -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the user who crated the project.
[$sel:createdBy:Project'] :: Project -> Maybe Text

-- | The ID of the Amazon Web Services account that owns the project.
[$sel:accountId:Project'] :: Project -> Maybe Text

-- | The Amazon Resource Name (ARN) for the project.
[$sel:resourceArn:Project'] :: Project -> Maybe Text

-- | The dataset that the project is to act upon.
[$sel:datasetName:Project'] :: Project -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   project.
[$sel:lastModifiedBy:Project'] :: Project -> Maybe Text

-- | The sample size and sampling type to apply to the data. If this
--   parameter isn't specified, then the sample consists of the first 500
--   rows from the dataset.
[$sel:sample:Project'] :: Project -> Maybe Sample

-- | The Amazon Resource Name (ARN) of the user that opened the project for
--   use.
[$sel:openedBy:Project'] :: Project -> Maybe Text

-- | Metadata tags that have been applied to the project.
[$sel:tags:Project'] :: Project -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the role that will be assumed for
--   this project.
[$sel:roleArn:Project'] :: Project -> Maybe Text

-- | The unique name of a project.
[$sel:name:Project'] :: Project -> Text

-- | The name of a recipe that will be developed during a project session.
[$sel:recipeName:Project'] :: Project -> Text

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Project'</a>, <a>project_lastModifiedDate</a>
--   - The last modification date and time for the project.
--   
--   <a>$sel:openDate:Project'</a>, <a>project_openDate</a> - The date and
--   time when the project was opened.
--   
--   <a>$sel:createDate:Project'</a>, <a>project_createDate</a> - The date
--   and time that the project was created.
--   
--   <a>$sel:createdBy:Project'</a>, <a>project_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who crated the project.
--   
--   <a>$sel:accountId:Project'</a>, <a>project_accountId</a> - The ID of
--   the Amazon Web Services account that owns the project.
--   
--   <a>$sel:resourceArn:Project'</a>, <a>project_resourceArn</a> - The
--   Amazon Resource Name (ARN) for the project.
--   
--   <a>$sel:datasetName:Project'</a>, <a>project_datasetName</a> - The
--   dataset that the project is to act upon.
--   
--   <a>$sel:lastModifiedBy:Project'</a>, <a>project_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   project.
--   
--   <a>$sel:sample:Project'</a>, <a>project_sample</a> - The sample size
--   and sampling type to apply to the data. If this parameter isn't
--   specified, then the sample consists of the first 500 rows from the
--   dataset.
--   
--   <a>$sel:openedBy:Project'</a>, <a>project_openedBy</a> - The Amazon
--   Resource Name (ARN) of the user that opened the project for use.
--   
--   <a>$sel:tags:Project'</a>, <a>project_tags</a> - Metadata tags that
--   have been applied to the project.
--   
--   <a>$sel:roleArn:Project'</a>, <a>project_roleArn</a> - The Amazon
--   Resource Name (ARN) of the role that will be assumed for this project.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The unique name of a
--   project.
--   
--   <a>$sel:recipeName:Project'</a>, <a>project_recipeName</a> - The name
--   of a recipe that will be developed during a project session.
newProject :: Text -> Text -> Project

-- | The last modification date and time for the project.
project_lastModifiedDate :: Lens' Project (Maybe UTCTime)

-- | The date and time when the project was opened.
project_openDate :: Lens' Project (Maybe UTCTime)

-- | The date and time that the project was created.
project_createDate :: Lens' Project (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who crated the project.
project_createdBy :: Lens' Project (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the project.
project_accountId :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) for the project.
project_resourceArn :: Lens' Project (Maybe Text)

-- | The dataset that the project is to act upon.
project_datasetName :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   project.
project_lastModifiedBy :: Lens' Project (Maybe Text)

-- | The sample size and sampling type to apply to the data. If this
--   parameter isn't specified, then the sample consists of the first 500
--   rows from the dataset.
project_sample :: Lens' Project (Maybe Sample)

-- | The Amazon Resource Name (ARN) of the user that opened the project for
--   use.
project_openedBy :: Lens' Project (Maybe Text)

-- | Metadata tags that have been applied to the project.
project_tags :: Lens' Project (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role that will be assumed for
--   this project.
project_roleArn :: Lens' Project (Maybe Text)

-- | The unique name of a project.
project_name :: Lens' Project Text

-- | The name of a recipe that will be developed during a project session.
project_recipeName :: Lens' Project Text

-- | Represents one or more actions to be performed on a DataBrew dataset.
--   
--   <i>See:</i> <a>newRecipe</a> smart constructor.
data Recipe
Recipe' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [RecipeStep] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Recipe

-- | The last modification date and time of the recipe.
[$sel:lastModifiedDate:Recipe'] :: Recipe -> Maybe POSIX

-- | The date and time that the recipe was created.
[$sel:createDate:Recipe'] :: Recipe -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the user who published the recipe.
[$sel:publishedBy:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who created the recipe.
[$sel:createdBy:Recipe'] :: Recipe -> Maybe Text

-- | A list of steps that are defined by the recipe.
[$sel:steps:Recipe'] :: Recipe -> Maybe [RecipeStep]

-- | The date and time when the recipe was published.
[$sel:publishedDate:Recipe'] :: Recipe -> Maybe POSIX

-- | The Amazon Resource Name (ARN) for the recipe.
[$sel:resourceArn:Recipe'] :: Recipe -> Maybe Text

-- | The identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
[$sel:recipeVersion:Recipe'] :: Recipe -> Maybe Text

-- | The name of the project that the recipe is associated with.
[$sel:projectName:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   recipe.
[$sel:lastModifiedBy:Recipe'] :: Recipe -> Maybe Text

-- | The description of the recipe.
[$sel:description:Recipe'] :: Recipe -> Maybe Text

-- | Metadata tags that have been applied to the recipe.
[$sel:tags:Recipe'] :: Recipe -> Maybe (HashMap Text Text)

-- | The unique name for the recipe.
[$sel:name:Recipe'] :: Recipe -> Text

-- | Create a value of <a>Recipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Recipe'</a>, <a>recipe_lastModifiedDate</a> -
--   The last modification date and time of the recipe.
--   
--   <a>$sel:createDate:Recipe'</a>, <a>recipe_createDate</a> - The date
--   and time that the recipe was created.
--   
--   <a>$sel:publishedBy:Recipe'</a>, <a>recipe_publishedBy</a> - The
--   Amazon Resource Name (ARN) of the user who published the recipe.
--   
--   <a>$sel:createdBy:Recipe'</a>, <a>recipe_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who created the recipe.
--   
--   <a>$sel:steps:Recipe'</a>, <a>recipe_steps</a> - A list of steps that
--   are defined by the recipe.
--   
--   <a>$sel:publishedDate:Recipe'</a>, <a>recipe_publishedDate</a> - The
--   date and time when the recipe was published.
--   
--   <a>$sel:resourceArn:Recipe'</a>, <a>recipe_resourceArn</a> - The
--   Amazon Resource Name (ARN) for the recipe.
--   
--   <a>$sel:recipeVersion:Recipe'</a>, <a>recipe_recipeVersion</a> - The
--   identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
--   
--   <a>$sel:projectName:Recipe'</a>, <a>recipe_projectName</a> - The name
--   of the project that the recipe is associated with.
--   
--   <a>$sel:lastModifiedBy:Recipe'</a>, <a>recipe_lastModifiedBy</a> - The
--   Amazon Resource Name (ARN) of the user who last modified the recipe.
--   
--   <a>$sel:description:Recipe'</a>, <a>recipe_description</a> - The
--   description of the recipe.
--   
--   <a>$sel:tags:Recipe'</a>, <a>recipe_tags</a> - Metadata tags that have
--   been applied to the recipe.
--   
--   <a>$sel:name:Recipe'</a>, <a>recipe_name</a> - The unique name for the
--   recipe.
newRecipe :: Text -> Recipe

-- | The last modification date and time of the recipe.
recipe_lastModifiedDate :: Lens' Recipe (Maybe UTCTime)

-- | The date and time that the recipe was created.
recipe_createDate :: Lens' Recipe (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who published the recipe.
recipe_publishedBy :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who created the recipe.
recipe_createdBy :: Lens' Recipe (Maybe Text)

-- | A list of steps that are defined by the recipe.
recipe_steps :: Lens' Recipe (Maybe [RecipeStep])

-- | The date and time when the recipe was published.
recipe_publishedDate :: Lens' Recipe (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) for the recipe.
recipe_resourceArn :: Lens' Recipe (Maybe Text)

-- | The identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
recipe_recipeVersion :: Lens' Recipe (Maybe Text)

-- | The name of the project that the recipe is associated with.
recipe_projectName :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   recipe.
recipe_lastModifiedBy :: Lens' Recipe (Maybe Text)

-- | The description of the recipe.
recipe_description :: Lens' Recipe (Maybe Text)

-- | Metadata tags that have been applied to the recipe.
recipe_tags :: Lens' Recipe (Maybe (HashMap Text Text))

-- | The unique name for the recipe.
recipe_name :: Lens' Recipe Text

-- | Represents a transformation and associated parameters that are used to
--   apply a change to a DataBrew dataset. For more information, see
--   <a>Recipe actions reference</a>.
--   
--   <i>See:</i> <a>newRecipeAction</a> smart constructor.
data RecipeAction
RecipeAction' :: Maybe (HashMap Text Text) -> Text -> RecipeAction

-- | Contextual parameters for the transformation.
[$sel:parameters:RecipeAction'] :: RecipeAction -> Maybe (HashMap Text Text)

-- | The name of a valid DataBrew transformation to be performed on the
--   data.
[$sel:operation:RecipeAction'] :: RecipeAction -> Text

-- | Create a value of <a>RecipeAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:RecipeAction'</a>, <a>recipeAction_parameters</a> -
--   Contextual parameters for the transformation.
--   
--   <a>$sel:operation:RecipeAction'</a>, <a>recipeAction_operation</a> -
--   The name of a valid DataBrew transformation to be performed on the
--   data.
newRecipeAction :: Text -> RecipeAction

-- | Contextual parameters for the transformation.
recipeAction_parameters :: Lens' RecipeAction (Maybe (HashMap Text Text))

-- | The name of a valid DataBrew transformation to be performed on the
--   data.
recipeAction_operation :: Lens' RecipeAction Text

-- | Represents the name and version of a DataBrew recipe.
--   
--   <i>See:</i> <a>newRecipeReference</a> smart constructor.
data RecipeReference
RecipeReference' :: Maybe Text -> Text -> RecipeReference

-- | The identifier for the version for the recipe.
[$sel:recipeVersion:RecipeReference'] :: RecipeReference -> Maybe Text

-- | The name of the recipe.
[$sel:name:RecipeReference'] :: RecipeReference -> Text

-- | Create a value of <a>RecipeReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:RecipeReference'</a>,
--   <a>recipeReference_recipeVersion</a> - The identifier for the version
--   for the recipe.
--   
--   <a>$sel:name:RecipeReference'</a>, <a>recipeReference_name</a> - The
--   name of the recipe.
newRecipeReference :: Text -> RecipeReference

-- | The identifier for the version for the recipe.
recipeReference_recipeVersion :: Lens' RecipeReference (Maybe Text)

-- | The name of the recipe.
recipeReference_name :: Lens' RecipeReference Text

-- | Represents a single step from a DataBrew recipe to be performed.
--   
--   <i>See:</i> <a>newRecipeStep</a> smart constructor.
data RecipeStep
RecipeStep' :: Maybe [ConditionExpression] -> RecipeAction -> RecipeStep

-- | One or more conditions that must be met for the recipe step to
--   succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
[$sel:conditionExpressions:RecipeStep'] :: RecipeStep -> Maybe [ConditionExpression]

-- | The particular action to be performed in the recipe step.
[$sel:action:RecipeStep'] :: RecipeStep -> RecipeAction

-- | Create a value of <a>RecipeStep</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conditionExpressions:RecipeStep'</a>,
--   <a>recipeStep_conditionExpressions</a> - One or more conditions that
--   must be met for the recipe step to succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
--   
--   <a>$sel:action:RecipeStep'</a>, <a>recipeStep_action</a> - The
--   particular action to be performed in the recipe step.
newRecipeStep :: RecipeAction -> RecipeStep

-- | One or more conditions that must be met for the recipe step to
--   succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
recipeStep_conditionExpressions :: Lens' RecipeStep (Maybe [ConditionExpression])

-- | The particular action to be performed in the recipe step.
recipeStep_action :: Lens' RecipeStep RecipeAction

-- | Represents any errors encountered when attempting to delete multiple
--   recipe versions.
--   
--   <i>See:</i> <a>newRecipeVersionErrorDetail</a> smart constructor.
data RecipeVersionErrorDetail
RecipeVersionErrorDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> RecipeVersionErrorDetail

-- | The identifier for the recipe version associated with this error.
[$sel:recipeVersion:RecipeVersionErrorDetail'] :: RecipeVersionErrorDetail -> Maybe Text

-- | The HTTP status code for the error.
[$sel:errorCode:RecipeVersionErrorDetail'] :: RecipeVersionErrorDetail -> Maybe Text

-- | The text of the error message.
[$sel:errorMessage:RecipeVersionErrorDetail'] :: RecipeVersionErrorDetail -> Maybe Text

-- | Create a value of <a>RecipeVersionErrorDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_recipeVersion</a> - The identifier for the
--   recipe version associated with this error.
--   
--   <a>$sel:errorCode:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_errorCode</a> - The HTTP status code for
--   the error.
--   
--   <a>$sel:errorMessage:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_errorMessage</a> - The text of the error
--   message.
newRecipeVersionErrorDetail :: RecipeVersionErrorDetail

-- | The identifier for the recipe version associated with this error.
recipeVersionErrorDetail_recipeVersion :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | The HTTP status code for the error.
recipeVersionErrorDetail_errorCode :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | The text of the error message.
recipeVersionErrorDetail_errorMessage :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can read input data, or write output from a job.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Text -> S3Location

-- | The unique name of the object in the bucket.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | The Amazon S3 bucket name.
[$sel:bucket:S3Location'] :: S3Location -> Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The unique name
--   of the object in the bucket.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The Amazon
--   S3 bucket name.
newS3Location :: Text -> S3Location

-- | The unique name of the object in the bucket.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The Amazon S3 bucket name.
s3Location_bucket :: Lens' S3Location Text

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
--   
--   <i>See:</i> <a>newS3TableOutputOptions</a> smart constructor.
data S3TableOutputOptions
S3TableOutputOptions' :: S3Location -> S3TableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can write output from a job.
[$sel:location:S3TableOutputOptions'] :: S3TableOutputOptions -> S3Location

-- | Create a value of <a>S3TableOutputOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:S3TableOutputOptions'</a>,
--   <a>s3TableOutputOptions_location</a> - Represents an Amazon S3
--   location (bucket name and object key) where DataBrew can write output
--   from a job.
newS3TableOutputOptions :: S3Location -> S3TableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can write output from a job.
s3TableOutputOptions_location :: Lens' S3TableOutputOptions S3Location

-- | Represents the sample size and sampling type for DataBrew to use for
--   interactive data analysis.
--   
--   <i>See:</i> <a>newSample</a> smart constructor.
data Sample
Sample' :: Maybe Natural -> SampleType -> Sample

-- | The number of rows in the sample.
[$sel:size:Sample'] :: Sample -> Maybe Natural

-- | The way in which DataBrew obtains rows from a dataset.
[$sel:type':Sample'] :: Sample -> SampleType

-- | Create a value of <a>Sample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:Sample'</a>, <a>sample_size</a> - The number of rows in
--   the sample.
--   
--   <a>$sel:type':Sample'</a>, <a>sample_type</a> - The way in which
--   DataBrew obtains rows from a dataset.
newSample :: SampleType -> Sample

-- | The number of rows in the sample.
sample_size :: Lens' Sample (Maybe Natural)

-- | The way in which DataBrew obtains rows from a dataset.
sample_type :: Lens' Sample SampleType

-- | Represents one or more dates and times when a job is to run.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe (HashMap Text Text) -> Text -> Schedule

-- | The date and time when the schedule was last modified.
[$sel:lastModifiedDate:Schedule'] :: Schedule -> Maybe POSIX

-- | The date and time that the schedule was created.
[$sel:createDate:Schedule'] :: Schedule -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the user who created the schedule.
[$sel:createdBy:Schedule'] :: Schedule -> Maybe Text

-- | The ID of the Amazon Web Services account that owns the schedule.
[$sel:accountId:Schedule'] :: Schedule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schedule.
[$sel:resourceArn:Schedule'] :: Schedule -> Maybe Text

-- | The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
[$sel:cronExpression:Schedule'] :: Schedule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
[$sel:lastModifiedBy:Schedule'] :: Schedule -> Maybe Text

-- | A list of jobs to be run, according to the schedule.
[$sel:jobNames:Schedule'] :: Schedule -> Maybe [Text]

-- | Metadata tags that have been applied to the schedule.
[$sel:tags:Schedule'] :: Schedule -> Maybe (HashMap Text Text)

-- | The name of the schedule.
[$sel:name:Schedule'] :: Schedule -> Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Schedule'</a>,
--   <a>schedule_lastModifiedDate</a> - The date and time when the schedule
--   was last modified.
--   
--   <a>$sel:createDate:Schedule'</a>, <a>schedule_createDate</a> - The
--   date and time that the schedule was created.
--   
--   <a>$sel:createdBy:Schedule'</a>, <a>schedule_createdBy</a> - The
--   Amazon Resource Name (ARN) of the user who created the schedule.
--   
--   <a>$sel:accountId:Schedule'</a>, <a>schedule_accountId</a> - The ID of
--   the Amazon Web Services account that owns the schedule.
--   
--   <a>$sel:resourceArn:Schedule'</a>, <a>schedule_resourceArn</a> - The
--   Amazon Resource Name (ARN) of the schedule.
--   
--   <a>$sel:cronExpression:Schedule'</a>, <a>schedule_cronExpression</a> -
--   The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:lastModifiedBy:Schedule'</a>, <a>schedule_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
--   
--   <a>$sel:jobNames:Schedule'</a>, <a>schedule_jobNames</a> - A list of
--   jobs to be run, according to the schedule.
--   
--   <a>$sel:tags:Schedule'</a>, <a>schedule_tags</a> - Metadata tags that
--   have been applied to the schedule.
--   
--   <a>$sel:name:Schedule'</a>, <a>schedule_name</a> - The name of the
--   schedule.
newSchedule :: Text -> Schedule

-- | The date and time when the schedule was last modified.
schedule_lastModifiedDate :: Lens' Schedule (Maybe UTCTime)

-- | The date and time that the schedule was created.
schedule_createDate :: Lens' Schedule (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who created the schedule.
schedule_createdBy :: Lens' Schedule (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the schedule.
schedule_accountId :: Lens' Schedule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schedule.
schedule_resourceArn :: Lens' Schedule (Maybe Text)

-- | The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
schedule_cronExpression :: Lens' Schedule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
schedule_lastModifiedBy :: Lens' Schedule (Maybe Text)

-- | A list of jobs to be run, according to the schedule.
schedule_jobNames :: Lens' Schedule (Maybe [Text])

-- | Metadata tags that have been applied to the schedule.
schedule_tags :: Lens' Schedule (Maybe (HashMap Text Text))

-- | The name of the schedule.
schedule_name :: Lens' Schedule Text

-- | Override of a particular evaluation for a profile job.
--   
--   <i>See:</i> <a>newStatisticOverride</a> smart constructor.
data StatisticOverride
StatisticOverride' :: Text -> HashMap Text Text -> StatisticOverride

-- | The name of an evaluation
[$sel:statistic:StatisticOverride'] :: StatisticOverride -> Text

-- | A map that includes overrides of an evaluation’s parameters.
[$sel:parameters:StatisticOverride'] :: StatisticOverride -> HashMap Text Text

-- | Create a value of <a>StatisticOverride</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statistic:StatisticOverride'</a>,
--   <a>statisticOverride_statistic</a> - The name of an evaluation
--   
--   <a>$sel:parameters:StatisticOverride'</a>,
--   <a>statisticOverride_parameters</a> - A map that includes overrides of
--   an evaluation’s parameters.
newStatisticOverride :: Text -> StatisticOverride

-- | The name of an evaluation
statisticOverride_statistic :: Lens' StatisticOverride Text

-- | A map that includes overrides of an evaluation’s parameters.
statisticOverride_parameters :: Lens' StatisticOverride (HashMap Text Text)

-- | Configuration of evaluations for a profile job. This configuration can
--   be used to select evaluations and override the parameters of selected
--   evaluations.
--   
--   <i>See:</i> <a>newStatisticsConfiguration</a> smart constructor.
data StatisticsConfiguration
StatisticsConfiguration' :: Maybe (NonEmpty StatisticOverride) -> Maybe (NonEmpty Text) -> StatisticsConfiguration

-- | List of overrides for evaluations.
[$sel:overrides:StatisticsConfiguration'] :: StatisticsConfiguration -> Maybe (NonEmpty StatisticOverride)

-- | List of included evaluations. When the list is undefined, all
--   supported evaluations will be included.
[$sel:includedStatistics:StatisticsConfiguration'] :: StatisticsConfiguration -> Maybe (NonEmpty Text)

-- | Create a value of <a>StatisticsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrides:StatisticsConfiguration'</a>,
--   <a>statisticsConfiguration_overrides</a> - List of overrides for
--   evaluations.
--   
--   <a>$sel:includedStatistics:StatisticsConfiguration'</a>,
--   <a>statisticsConfiguration_includedStatistics</a> - List of included
--   evaluations. When the list is undefined, all supported evaluations
--   will be included.
newStatisticsConfiguration :: StatisticsConfiguration

-- | List of overrides for evaluations.
statisticsConfiguration_overrides :: Lens' StatisticsConfiguration (Maybe (NonEmpty StatisticOverride))

-- | List of included evaluations. When the list is undefined, all
--   supported evaluations will be included.
statisticsConfiguration_includedStatistics :: Lens' StatisticsConfiguration (Maybe (NonEmpty Text))

-- | Represents the data being transformed during an action.
--   
--   <i>See:</i> <a>newViewFrame</a> smart constructor.
data ViewFrame
ViewFrame' :: Maybe [Text] -> Maybe Natural -> Natural -> ViewFrame

-- | A list of columns to hide in the view frame.
[$sel:hiddenColumns:ViewFrame'] :: ViewFrame -> Maybe [Text]

-- | The number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
[$sel:columnRange:ViewFrame'] :: ViewFrame -> Maybe Natural

-- | The starting index for the range of columns to return in the view
--   frame.
[$sel:startColumnIndex:ViewFrame'] :: ViewFrame -> Natural

-- | Create a value of <a>ViewFrame</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hiddenColumns:ViewFrame'</a>, <a>viewFrame_hiddenColumns</a> -
--   A list of columns to hide in the view frame.
--   
--   <a>$sel:columnRange:ViewFrame'</a>, <a>viewFrame_columnRange</a> - The
--   number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
--   
--   <a>$sel:startColumnIndex:ViewFrame'</a>,
--   <a>viewFrame_startColumnIndex</a> - The starting index for the range
--   of columns to return in the view frame.
newViewFrame :: Natural -> ViewFrame

-- | A list of columns to hide in the view frame.
viewFrame_hiddenColumns :: Lens' ViewFrame (Maybe [Text])

-- | The number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
viewFrame_columnRange :: Lens' ViewFrame (Maybe Natural)

-- | The starting index for the range of columns to return in the view
--   frame.
viewFrame_startColumnIndex :: Lens' ViewFrame Natural


-- | Adds metadata tags to a DataBrew resource, such as a dataset, project,
--   recipe, job, or schedule.
module Amazonka.DataBrew.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The DataBrew resource to which tags should be added. The value for
--   this parameter is an Amazon Resource Name (ARN). For DataBrew, you can
--   tag a dataset, a job, a project, or a recipe.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | One or more tags to be assigned to the resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The DataBrew resource to which tags should be added. The value for
--   this parameter is an Amazon Resource Name (ARN). For DataBrew, you can
--   tag a dataset, a job, a project, or a recipe.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - One or more
--   tags to be assigned to the resource.
newTagResource :: Text -> TagResource

-- | The DataBrew resource to which tags should be added. The value for
--   this parameter is an Amazon Resource Name (ARN). For DataBrew, you can
--   tag a dataset, a job, a project, or a recipe.
tagResource_resourceArn :: Lens' TagResource Text

-- | One or more tags to be assigned to the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.DataBrew.TagResource.TagResource
instance GHC.Show.Show Amazonka.DataBrew.TagResource.TagResource
instance GHC.Read.Read Amazonka.DataBrew.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.DataBrew.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.DataBrew.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.DataBrew.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.DataBrew.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.DataBrew.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.DataBrew.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.DataBrew.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.TagResource.TagResource


-- | Stops a particular run of a job.
module Amazonka.DataBrew.StopJobRun

-- | <i>See:</i> <a>newStopJobRun</a> smart constructor.
data StopJobRun
StopJobRun' :: Text -> Text -> StopJobRun

-- | The name of the job to be stopped.
[$sel:name:StopJobRun'] :: StopJobRun -> Text

-- | The ID of the job run to be stopped.
[$sel:runId:StopJobRun'] :: StopJobRun -> Text

-- | Create a value of <a>StopJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopJobRun'</a>, <a>stopJobRun_name</a> - The name of the
--   job to be stopped.
--   
--   <a>$sel:runId:StopJobRun'</a>, <a>stopJobRun_runId</a> - The ID of the
--   job run to be stopped.
newStopJobRun :: Text -> Text -> StopJobRun

-- | The name of the job to be stopped.
stopJobRun_name :: Lens' StopJobRun Text

-- | The ID of the job run to be stopped.
stopJobRun_runId :: Lens' StopJobRun Text

-- | <i>See:</i> <a>newStopJobRunResponse</a> smart constructor.
data StopJobRunResponse
StopJobRunResponse' :: Int -> Text -> StopJobRunResponse

-- | The response's http status code.
[$sel:httpStatus:StopJobRunResponse'] :: StopJobRunResponse -> Int

-- | The ID of the job run that you stopped.
[$sel:runId:StopJobRunResponse'] :: StopJobRunResponse -> Text

-- | Create a value of <a>StopJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopJobRunResponse'</a>,
--   <a>stopJobRunResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:runId:StopJobRun'</a>, <a>stopJobRunResponse_runId</a> - The
--   ID of the job run that you stopped.
newStopJobRunResponse :: Int -> Text -> StopJobRunResponse

-- | The response's http status code.
stopJobRunResponse_httpStatus :: Lens' StopJobRunResponse Int

-- | The ID of the job run that you stopped.
stopJobRunResponse_runId :: Lens' StopJobRunResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.StopJobRun.StopJobRun
instance GHC.Show.Show Amazonka.DataBrew.StopJobRun.StopJobRun
instance GHC.Read.Read Amazonka.DataBrew.StopJobRun.StopJobRun
instance GHC.Classes.Eq Amazonka.DataBrew.StopJobRun.StopJobRun
instance GHC.Generics.Generic Amazonka.DataBrew.StopJobRun.StopJobRunResponse
instance GHC.Show.Show Amazonka.DataBrew.StopJobRun.StopJobRunResponse
instance GHC.Read.Read Amazonka.DataBrew.StopJobRun.StopJobRunResponse
instance GHC.Classes.Eq Amazonka.DataBrew.StopJobRun.StopJobRunResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.StopJobRun.StopJobRun
instance Control.DeepSeq.NFData Amazonka.DataBrew.StopJobRun.StopJobRunResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.StopJobRun.StopJobRun
instance Control.DeepSeq.NFData Amazonka.DataBrew.StopJobRun.StopJobRun
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.StopJobRun.StopJobRun
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.StopJobRun.StopJobRun
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.StopJobRun.StopJobRun
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.StopJobRun.StopJobRun


-- | Creates an interactive session, enabling you to manipulate data in a
--   DataBrew project.
module Amazonka.DataBrew.StartProjectSession

-- | <i>See:</i> <a>newStartProjectSession</a> smart constructor.
data StartProjectSession
StartProjectSession' :: Maybe Bool -> Text -> StartProjectSession

-- | A value that, if true, enables you to take control of a session, even
--   if a different client is currently accessing the project.
[$sel:assumeControl:StartProjectSession'] :: StartProjectSession -> Maybe Bool

-- | The name of the project to act upon.
[$sel:name:StartProjectSession'] :: StartProjectSession -> Text

-- | Create a value of <a>StartProjectSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assumeControl:StartProjectSession'</a>,
--   <a>startProjectSession_assumeControl</a> - A value that, if true,
--   enables you to take control of a session, even if a different client
--   is currently accessing the project.
--   
--   <a>$sel:name:StartProjectSession'</a>, <a>startProjectSession_name</a>
--   - The name of the project to act upon.
newStartProjectSession :: Text -> StartProjectSession

-- | A value that, if true, enables you to take control of a session, even
--   if a different client is currently accessing the project.
startProjectSession_assumeControl :: Lens' StartProjectSession (Maybe Bool)

-- | The name of the project to act upon.
startProjectSession_name :: Lens' StartProjectSession Text

-- | <i>See:</i> <a>newStartProjectSessionResponse</a> smart constructor.
data StartProjectSessionResponse
StartProjectSessionResponse' :: Maybe Text -> Int -> Text -> StartProjectSessionResponse

-- | A system-generated identifier for the session.
[$sel:clientSessionId:StartProjectSessionResponse'] :: StartProjectSessionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartProjectSessionResponse'] :: StartProjectSessionResponse -> Int

-- | The name of the project to be acted upon.
[$sel:name:StartProjectSessionResponse'] :: StartProjectSessionResponse -> Text

-- | Create a value of <a>StartProjectSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientSessionId:StartProjectSessionResponse'</a>,
--   <a>startProjectSessionResponse_clientSessionId</a> - A
--   system-generated identifier for the session.
--   
--   <a>$sel:httpStatus:StartProjectSessionResponse'</a>,
--   <a>startProjectSessionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:StartProjectSession'</a>,
--   <a>startProjectSessionResponse_name</a> - The name of the project to
--   be acted upon.
newStartProjectSessionResponse :: Int -> Text -> StartProjectSessionResponse

-- | A system-generated identifier for the session.
startProjectSessionResponse_clientSessionId :: Lens' StartProjectSessionResponse (Maybe Text)

-- | The response's http status code.
startProjectSessionResponse_httpStatus :: Lens' StartProjectSessionResponse Int

-- | The name of the project to be acted upon.
startProjectSessionResponse_name :: Lens' StartProjectSessionResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance GHC.Show.Show Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance GHC.Read.Read Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance GHC.Classes.Eq Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance GHC.Generics.Generic Amazonka.DataBrew.StartProjectSession.StartProjectSessionResponse
instance GHC.Show.Show Amazonka.DataBrew.StartProjectSession.StartProjectSessionResponse
instance GHC.Read.Read Amazonka.DataBrew.StartProjectSession.StartProjectSessionResponse
instance GHC.Classes.Eq Amazonka.DataBrew.StartProjectSession.StartProjectSessionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance Control.DeepSeq.NFData Amazonka.DataBrew.StartProjectSession.StartProjectSessionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance Control.DeepSeq.NFData Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.StartProjectSession.StartProjectSession
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.StartProjectSession.StartProjectSession


-- | Runs a DataBrew job.
module Amazonka.DataBrew.StartJobRun

-- | <i>See:</i> <a>newStartJobRun</a> smart constructor.
data StartJobRun
StartJobRun' :: Text -> StartJobRun

-- | The name of the job to be run.
[$sel:name:StartJobRun'] :: StartJobRun -> Text

-- | Create a value of <a>StartJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartJobRun'</a>, <a>startJobRun_name</a> - The name of
--   the job to be run.
newStartJobRun :: Text -> StartJobRun

-- | The name of the job to be run.
startJobRun_name :: Lens' StartJobRun Text

-- | <i>See:</i> <a>newStartJobRunResponse</a> smart constructor.
data StartJobRunResponse
StartJobRunResponse' :: Int -> Text -> StartJobRunResponse

-- | The response's http status code.
[$sel:httpStatus:StartJobRunResponse'] :: StartJobRunResponse -> Int

-- | A system-generated identifier for this particular job run.
[$sel:runId:StartJobRunResponse'] :: StartJobRunResponse -> Text

-- | Create a value of <a>StartJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:runId:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_runId</a> - A system-generated identifier for
--   this particular job run.
newStartJobRunResponse :: Int -> Text -> StartJobRunResponse

-- | The response's http status code.
startJobRunResponse_httpStatus :: Lens' StartJobRunResponse Int

-- | A system-generated identifier for this particular job run.
startJobRunResponse_runId :: Lens' StartJobRunResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.StartJobRun.StartJobRun
instance GHC.Show.Show Amazonka.DataBrew.StartJobRun.StartJobRun
instance GHC.Read.Read Amazonka.DataBrew.StartJobRun.StartJobRun
instance GHC.Classes.Eq Amazonka.DataBrew.StartJobRun.StartJobRun
instance GHC.Generics.Generic Amazonka.DataBrew.StartJobRun.StartJobRunResponse
instance GHC.Show.Show Amazonka.DataBrew.StartJobRun.StartJobRunResponse
instance GHC.Read.Read Amazonka.DataBrew.StartJobRun.StartJobRunResponse
instance GHC.Classes.Eq Amazonka.DataBrew.StartJobRun.StartJobRunResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.StartJobRun.StartJobRun
instance Control.DeepSeq.NFData Amazonka.DataBrew.StartJobRun.StartJobRunResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.StartJobRun.StartJobRun
instance Control.DeepSeq.NFData Amazonka.DataBrew.StartJobRun.StartJobRun
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.StartJobRun.StartJobRun
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.StartJobRun.StartJobRun
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.StartJobRun.StartJobRun
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.StartJobRun.StartJobRun


-- | Performs a recipe step within an interactive DataBrew session that's
--   currently open.
module Amazonka.DataBrew.SendProjectSessionAction

-- | <i>See:</i> <a>newSendProjectSessionAction</a> smart constructor.
data SendProjectSessionAction
SendProjectSessionAction' :: Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe RecipeStep -> Maybe ViewFrame -> Text -> SendProjectSessionAction

-- | The index from which to preview a step. This index is used to preview
--   the result of steps that have already been applied, so that the
--   resulting view frame is from earlier in the view frame stack.
[$sel:stepIndex:SendProjectSessionAction'] :: SendProjectSessionAction -> Maybe Natural

-- | If true, the result of the recipe step will be returned, but not
--   applied.
[$sel:preview:SendProjectSessionAction'] :: SendProjectSessionAction -> Maybe Bool

-- | A unique identifier for an interactive session that's currently open
--   and ready for work. The action will be performed on this session.
[$sel:clientSessionId:SendProjectSessionAction'] :: SendProjectSessionAction -> Maybe Text
[$sel:recipeStep:SendProjectSessionAction'] :: SendProjectSessionAction -> Maybe RecipeStep
[$sel:viewFrame:SendProjectSessionAction'] :: SendProjectSessionAction -> Maybe ViewFrame

-- | The name of the project to apply the action to.
[$sel:name:SendProjectSessionAction'] :: SendProjectSessionAction -> Text

-- | Create a value of <a>SendProjectSessionAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepIndex:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_stepIndex</a> - The index from which to
--   preview a step. This index is used to preview the result of steps that
--   have already been applied, so that the resulting view frame is from
--   earlier in the view frame stack.
--   
--   <a>$sel:preview:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_preview</a> - If true, the result of the
--   recipe step will be returned, but not applied.
--   
--   <a>$sel:clientSessionId:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_clientSessionId</a> - A unique identifier
--   for an interactive session that's currently open and ready for work.
--   The action will be performed on this session.
--   
--   <a>$sel:recipeStep:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_recipeStep</a> - Undocumented member.
--   
--   <a>$sel:viewFrame:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_viewFrame</a> - Undocumented member.
--   
--   <a>$sel:name:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_name</a> - The name of the project to
--   apply the action to.
newSendProjectSessionAction :: Text -> SendProjectSessionAction

-- | The index from which to preview a step. This index is used to preview
--   the result of steps that have already been applied, so that the
--   resulting view frame is from earlier in the view frame stack.
sendProjectSessionAction_stepIndex :: Lens' SendProjectSessionAction (Maybe Natural)

-- | If true, the result of the recipe step will be returned, but not
--   applied.
sendProjectSessionAction_preview :: Lens' SendProjectSessionAction (Maybe Bool)

-- | A unique identifier for an interactive session that's currently open
--   and ready for work. The action will be performed on this session.
sendProjectSessionAction_clientSessionId :: Lens' SendProjectSessionAction (Maybe Text)

-- | Undocumented member.
sendProjectSessionAction_recipeStep :: Lens' SendProjectSessionAction (Maybe RecipeStep)

-- | Undocumented member.
sendProjectSessionAction_viewFrame :: Lens' SendProjectSessionAction (Maybe ViewFrame)

-- | The name of the project to apply the action to.
sendProjectSessionAction_name :: Lens' SendProjectSessionAction Text

-- | <i>See:</i> <a>newSendProjectSessionActionResponse</a> smart
--   constructor.
data SendProjectSessionActionResponse
SendProjectSessionActionResponse' :: Maybe Int -> Maybe Text -> Int -> Text -> SendProjectSessionActionResponse

-- | A unique identifier for the action that was performed.
[$sel:actionId:SendProjectSessionActionResponse'] :: SendProjectSessionActionResponse -> Maybe Int

-- | A message indicating the result of performing the action.
[$sel:result:SendProjectSessionActionResponse'] :: SendProjectSessionActionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SendProjectSessionActionResponse'] :: SendProjectSessionActionResponse -> Int

-- | The name of the project that was affected by the action.
[$sel:name:SendProjectSessionActionResponse'] :: SendProjectSessionActionResponse -> Text

-- | Create a value of <a>SendProjectSessionActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionId:SendProjectSessionActionResponse'</a>,
--   <a>sendProjectSessionActionResponse_actionId</a> - A unique identifier
--   for the action that was performed.
--   
--   <a>$sel:result:SendProjectSessionActionResponse'</a>,
--   <a>sendProjectSessionActionResponse_result</a> - A message indicating
--   the result of performing the action.
--   
--   <a>$sel:httpStatus:SendProjectSessionActionResponse'</a>,
--   <a>sendProjectSessionActionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:name:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionActionResponse_name</a> - The name of the project
--   that was affected by the action.
newSendProjectSessionActionResponse :: Int -> Text -> SendProjectSessionActionResponse

-- | A unique identifier for the action that was performed.
sendProjectSessionActionResponse_actionId :: Lens' SendProjectSessionActionResponse (Maybe Int)

-- | A message indicating the result of performing the action.
sendProjectSessionActionResponse_result :: Lens' SendProjectSessionActionResponse (Maybe Text)

-- | The response's http status code.
sendProjectSessionActionResponse_httpStatus :: Lens' SendProjectSessionActionResponse Int

-- | The name of the project that was affected by the action.
sendProjectSessionActionResponse_name :: Lens' SendProjectSessionActionResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance GHC.Show.Show Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance GHC.Read.Read Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance GHC.Classes.Eq Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance GHC.Generics.Generic Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionActionResponse
instance GHC.Show.Show Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionActionResponse
instance GHC.Read.Read Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionActionResponse
instance GHC.Classes.Eq Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionActionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance Control.DeepSeq.NFData Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionActionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance Control.DeepSeq.NFData Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.SendProjectSessionAction.SendProjectSessionAction


-- | Publishes a new version of a DataBrew recipe.
module Amazonka.DataBrew.PublishRecipe

-- | <i>See:</i> <a>newPublishRecipe</a> smart constructor.
data PublishRecipe
PublishRecipe' :: Maybe Text -> Text -> PublishRecipe

-- | A description of the recipe to be published, for this version of the
--   recipe.
[$sel:description:PublishRecipe'] :: PublishRecipe -> Maybe Text

-- | The name of the recipe to be published.
[$sel:name:PublishRecipe'] :: PublishRecipe -> Text

-- | Create a value of <a>PublishRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PublishRecipe'</a>,
--   <a>publishRecipe_description</a> - A description of the recipe to be
--   published, for this version of the recipe.
--   
--   <a>$sel:name:PublishRecipe'</a>, <a>publishRecipe_name</a> - The name
--   of the recipe to be published.
newPublishRecipe :: Text -> PublishRecipe

-- | A description of the recipe to be published, for this version of the
--   recipe.
publishRecipe_description :: Lens' PublishRecipe (Maybe Text)

-- | The name of the recipe to be published.
publishRecipe_name :: Lens' PublishRecipe Text

-- | <i>See:</i> <a>newPublishRecipeResponse</a> smart constructor.
data PublishRecipeResponse
PublishRecipeResponse' :: Int -> Text -> PublishRecipeResponse

-- | The response's http status code.
[$sel:httpStatus:PublishRecipeResponse'] :: PublishRecipeResponse -> Int

-- | The name of the recipe that you published.
[$sel:name:PublishRecipeResponse'] :: PublishRecipeResponse -> Text

-- | Create a value of <a>PublishRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PublishRecipeResponse'</a>,
--   <a>publishRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:PublishRecipe'</a>, <a>publishRecipeResponse_name</a> -
--   The name of the recipe that you published.
newPublishRecipeResponse :: Int -> Text -> PublishRecipeResponse

-- | The response's http status code.
publishRecipeResponse_httpStatus :: Lens' PublishRecipeResponse Int

-- | The name of the recipe that you published.
publishRecipeResponse_name :: Lens' PublishRecipeResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance GHC.Show.Show Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance GHC.Read.Read Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance GHC.Classes.Eq Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance GHC.Generics.Generic Amazonka.DataBrew.PublishRecipe.PublishRecipeResponse
instance GHC.Show.Show Amazonka.DataBrew.PublishRecipe.PublishRecipeResponse
instance GHC.Read.Read Amazonka.DataBrew.PublishRecipe.PublishRecipeResponse
instance GHC.Classes.Eq Amazonka.DataBrew.PublishRecipe.PublishRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.PublishRecipe.PublishRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.PublishRecipe.PublishRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.PublishRecipe.PublishRecipe


-- | Lists all the tags for a DataBrew resource.
module Amazonka.DataBrew.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) string that uniquely identifies the
--   DataBrew resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) string that uniquely identifies the DataBrew resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) string that uniquely identifies the
--   DataBrew resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | A list of tags associated with the DataBrew resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags associated
--   with the DataBrew resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A list of tags associated with the DataBrew resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.DataBrew.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.DataBrew.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.DataBrew.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListTagsForResource.ListTagsForResource


-- | Lists the DataBrew schedules that are defined.
--   
--   This operation returns paginated results.
module Amazonka.DataBrew.ListSchedules

-- | <i>See:</i> <a>newListSchedules</a> smart constructor.
data ListSchedules
ListSchedules' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListSchedules

-- | The name of the job that these schedules apply to.
[$sel:jobName:ListSchedules'] :: ListSchedules -> Maybe Text

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListSchedules'] :: ListSchedules -> Maybe Text

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListSchedules'] :: ListSchedules -> Maybe Natural

-- | Create a value of <a>ListSchedules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:ListSchedules'</a>, <a>listSchedules_jobName</a> - The
--   name of the job that these schedules apply to.
--   
--   <a>$sel:nextToken:ListSchedules'</a>, <a>listSchedules_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListSchedules'</a>, <a>listSchedules_maxResults</a>
--   - The maximum number of results to return in this request.
newListSchedules :: ListSchedules

-- | The name of the job that these schedules apply to.
listSchedules_jobName :: Lens' ListSchedules (Maybe Text)

-- | The token returned by a previous call to retrieve the next set of
--   results.
listSchedules_nextToken :: Lens' ListSchedules (Maybe Text)

-- | The maximum number of results to return in this request.
listSchedules_maxResults :: Lens' ListSchedules (Maybe Natural)

-- | <i>See:</i> <a>newListSchedulesResponse</a> smart constructor.
data ListSchedulesResponse
ListSchedulesResponse' :: Maybe Text -> Int -> [Schedule] -> ListSchedulesResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
[$sel:nextToken:ListSchedulesResponse'] :: ListSchedulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSchedulesResponse'] :: ListSchedulesResponse -> Int

-- | A list of schedules that are defined.
[$sel:schedules:ListSchedulesResponse'] :: ListSchedulesResponse -> [Schedule]

-- | Create a value of <a>ListSchedulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSchedules'</a>,
--   <a>listSchedulesResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListSchedulesResponse'</a>,
--   <a>listSchedulesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:schedules:ListSchedulesResponse'</a>,
--   <a>listSchedulesResponse_schedules</a> - A list of schedules that are
--   defined.
newListSchedulesResponse :: Int -> ListSchedulesResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listSchedulesResponse_nextToken :: Lens' ListSchedulesResponse (Maybe Text)

-- | The response's http status code.
listSchedulesResponse_httpStatus :: Lens' ListSchedulesResponse Int

-- | A list of schedules that are defined.
listSchedulesResponse_schedules :: Lens' ListSchedulesResponse [Schedule]
instance GHC.Generics.Generic Amazonka.DataBrew.ListSchedules.ListSchedules
instance GHC.Show.Show Amazonka.DataBrew.ListSchedules.ListSchedules
instance GHC.Read.Read Amazonka.DataBrew.ListSchedules.ListSchedules
instance GHC.Classes.Eq Amazonka.DataBrew.ListSchedules.ListSchedules
instance GHC.Generics.Generic Amazonka.DataBrew.ListSchedules.ListSchedulesResponse
instance GHC.Show.Show Amazonka.DataBrew.ListSchedules.ListSchedulesResponse
instance GHC.Read.Read Amazonka.DataBrew.ListSchedules.ListSchedulesResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListSchedules.ListSchedulesResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListSchedules.ListSchedules
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListSchedules.ListSchedulesResponse
instance Amazonka.Pager.AWSPager Amazonka.DataBrew.ListSchedules.ListSchedules
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListSchedules.ListSchedules
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListSchedules.ListSchedules
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListSchedules.ListSchedules
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListSchedules.ListSchedules
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListSchedules.ListSchedules


-- | Lists all of the DataBrew recipes that are defined.
--   
--   This operation returns paginated results.
module Amazonka.DataBrew.ListRecipes

-- | <i>See:</i> <a>newListRecipes</a> smart constructor.
data ListRecipes
ListRecipes' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListRecipes

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListRecipes'] :: ListRecipes -> Maybe Text

-- | Return only those recipes with a version identifier of
--   <tt>LATEST_WORKING</tt> or <tt>LATEST_PUBLISHED</tt>. If
--   <tt>RecipeVersion</tt> is omitted, <tt>ListRecipes</tt> returns all of
--   the <tt>LATEST_PUBLISHED</tt> recipe versions.
--   
--   Valid values: <tt>LATEST_WORKING</tt> | <tt>LATEST_PUBLISHED</tt>
[$sel:recipeVersion:ListRecipes'] :: ListRecipes -> Maybe Text

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListRecipes'] :: ListRecipes -> Maybe Natural

-- | Create a value of <a>ListRecipes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>, <a>listRecipes_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:recipeVersion:ListRecipes'</a>,
--   <a>listRecipes_recipeVersion</a> - Return only those recipes with a
--   version identifier of <tt>LATEST_WORKING</tt> or
--   <tt>LATEST_PUBLISHED</tt>. If <tt>RecipeVersion</tt> is omitted,
--   <tt>ListRecipes</tt> returns all of the <tt>LATEST_PUBLISHED</tt>
--   recipe versions.
--   
--   Valid values: <tt>LATEST_WORKING</tt> | <tt>LATEST_PUBLISHED</tt>
--   
--   <a>$sel:maxResults:ListRecipes'</a>, <a>listRecipes_maxResults</a> -
--   The maximum number of results to return in this request.
newListRecipes :: ListRecipes

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRecipes_nextToken :: Lens' ListRecipes (Maybe Text)

-- | Return only those recipes with a version identifier of
--   <tt>LATEST_WORKING</tt> or <tt>LATEST_PUBLISHED</tt>. If
--   <tt>RecipeVersion</tt> is omitted, <tt>ListRecipes</tt> returns all of
--   the <tt>LATEST_PUBLISHED</tt> recipe versions.
--   
--   Valid values: <tt>LATEST_WORKING</tt> | <tt>LATEST_PUBLISHED</tt>
listRecipes_recipeVersion :: Lens' ListRecipes (Maybe Text)

-- | The maximum number of results to return in this request.
listRecipes_maxResults :: Lens' ListRecipes (Maybe Natural)

-- | <i>See:</i> <a>newListRecipesResponse</a> smart constructor.
data ListRecipesResponse
ListRecipesResponse' :: Maybe Text -> Int -> [Recipe] -> ListRecipesResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
[$sel:nextToken:ListRecipesResponse'] :: ListRecipesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRecipesResponse'] :: ListRecipesResponse -> Int

-- | A list of recipes that are defined.
[$sel:recipes:ListRecipesResponse'] :: ListRecipesResponse -> [Recipe]

-- | Create a value of <a>ListRecipesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>,
--   <a>listRecipesResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:recipes:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_recipes</a> - A list of recipes that are
--   defined.
newListRecipesResponse :: Int -> ListRecipesResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listRecipesResponse_nextToken :: Lens' ListRecipesResponse (Maybe Text)

-- | The response's http status code.
listRecipesResponse_httpStatus :: Lens' ListRecipesResponse Int

-- | A list of recipes that are defined.
listRecipesResponse_recipes :: Lens' ListRecipesResponse [Recipe]
instance GHC.Generics.Generic Amazonka.DataBrew.ListRecipes.ListRecipes
instance GHC.Show.Show Amazonka.DataBrew.ListRecipes.ListRecipes
instance GHC.Read.Read Amazonka.DataBrew.ListRecipes.ListRecipes
instance GHC.Classes.Eq Amazonka.DataBrew.ListRecipes.ListRecipes
instance GHC.Generics.Generic Amazonka.DataBrew.ListRecipes.ListRecipesResponse
instance GHC.Show.Show Amazonka.DataBrew.ListRecipes.ListRecipesResponse
instance GHC.Read.Read Amazonka.DataBrew.ListRecipes.ListRecipesResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListRecipes.ListRecipesResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListRecipes.ListRecipes
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListRecipes.ListRecipesResponse
instance Amazonka.Pager.AWSPager Amazonka.DataBrew.ListRecipes.ListRecipes
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListRecipes.ListRecipes
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListRecipes.ListRecipes
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListRecipes.ListRecipes
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListRecipes.ListRecipes
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListRecipes.ListRecipes


-- | Lists the versions of a particular DataBrew recipe, except for
--   <tt>LATEST_WORKING</tt>.
--   
--   This operation returns paginated results.
module Amazonka.DataBrew.ListRecipeVersions

-- | <i>See:</i> <a>newListRecipeVersions</a> smart constructor.
data ListRecipeVersions
ListRecipeVersions' :: Maybe Text -> Maybe Natural -> Text -> ListRecipeVersions

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListRecipeVersions'] :: ListRecipeVersions -> Maybe Text

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListRecipeVersions'] :: ListRecipeVersions -> Maybe Natural

-- | The name of the recipe for which to return version information.
[$sel:name:ListRecipeVersions'] :: ListRecipeVersions -> Text

-- | Create a value of <a>ListRecipeVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipeVersions'</a>,
--   <a>listRecipeVersions_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListRecipeVersions'</a>,
--   <a>listRecipeVersions_maxResults</a> - The maximum number of results
--   to return in this request.
--   
--   <a>$sel:name:ListRecipeVersions'</a>, <a>listRecipeVersions_name</a> -
--   The name of the recipe for which to return version information.
newListRecipeVersions :: Text -> ListRecipeVersions

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRecipeVersions_nextToken :: Lens' ListRecipeVersions (Maybe Text)

-- | The maximum number of results to return in this request.
listRecipeVersions_maxResults :: Lens' ListRecipeVersions (Maybe Natural)

-- | The name of the recipe for which to return version information.
listRecipeVersions_name :: Lens' ListRecipeVersions Text

-- | <i>See:</i> <a>newListRecipeVersionsResponse</a> smart constructor.
data ListRecipeVersionsResponse
ListRecipeVersionsResponse' :: Maybe Text -> Int -> [Recipe] -> ListRecipeVersionsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
[$sel:nextToken:ListRecipeVersionsResponse'] :: ListRecipeVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRecipeVersionsResponse'] :: ListRecipeVersionsResponse -> Int

-- | A list of versions for the specified recipe.
[$sel:recipes:ListRecipeVersionsResponse'] :: ListRecipeVersionsResponse -> [Recipe]

-- | Create a value of <a>ListRecipeVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipeVersions'</a>,
--   <a>listRecipeVersionsResponse_nextToken</a> - A token that you can use
--   in a subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListRecipeVersionsResponse'</a>,
--   <a>listRecipeVersionsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:recipes:ListRecipeVersionsResponse'</a>,
--   <a>listRecipeVersionsResponse_recipes</a> - A list of versions for the
--   specified recipe.
newListRecipeVersionsResponse :: Int -> ListRecipeVersionsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listRecipeVersionsResponse_nextToken :: Lens' ListRecipeVersionsResponse (Maybe Text)

-- | The response's http status code.
listRecipeVersionsResponse_httpStatus :: Lens' ListRecipeVersionsResponse Int

-- | A list of versions for the specified recipe.
listRecipeVersionsResponse_recipes :: Lens' ListRecipeVersionsResponse [Recipe]
instance GHC.Generics.Generic Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance GHC.Show.Show Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance GHC.Read.Read Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance GHC.Classes.Eq Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance GHC.Generics.Generic Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersionsResponse
instance GHC.Show.Show Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersionsResponse
instance GHC.Read.Read Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersionsResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersionsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListRecipeVersions.ListRecipeVersions


-- | Lists all of the DataBrew projects that are defined.
--   
--   This operation returns paginated results.
module Amazonka.DataBrew.ListProjects

-- | <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe Text -> Maybe Natural -> ListProjects

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListProjects'] :: ListProjects -> Maybe Text

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListProjects'] :: ListProjects -> Maybe Natural

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListProjects'</a>, <a>listProjects_maxResults</a> -
--   The maximum number of results to return in this request.
newListProjects :: ListProjects

-- | The token returned by a previous call to retrieve the next set of
--   results.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | The maximum number of results to return in this request.
listProjects_maxResults :: Lens' ListProjects (Maybe Natural)

-- | <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Int -> [Project] -> ListProjectsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
[$sel:nextToken:ListProjectsResponse'] :: ListProjectsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListProjectsResponse'] :: ListProjectsResponse -> Int

-- | A list of projects that are defined .
[$sel:projects:ListProjectsResponse'] :: ListProjectsResponse -> [Project]

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - A list of projects that are
--   defined .
newListProjectsResponse :: Int -> ListProjectsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int

-- | A list of projects that are defined .
listProjectsResponse_projects :: Lens' ListProjectsResponse [Project]
instance GHC.Generics.Generic Amazonka.DataBrew.ListProjects.ListProjects
instance GHC.Show.Show Amazonka.DataBrew.ListProjects.ListProjects
instance GHC.Read.Read Amazonka.DataBrew.ListProjects.ListProjects
instance GHC.Classes.Eq Amazonka.DataBrew.ListProjects.ListProjects
instance GHC.Generics.Generic Amazonka.DataBrew.ListProjects.ListProjectsResponse
instance GHC.Show.Show Amazonka.DataBrew.ListProjects.ListProjectsResponse
instance GHC.Read.Read Amazonka.DataBrew.ListProjects.ListProjectsResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListProjects.ListProjectsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListProjects.ListProjects
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListProjects.ListProjectsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataBrew.ListProjects.ListProjects
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListProjects.ListProjects
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListProjects.ListProjects
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListProjects.ListProjects
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListProjects.ListProjects
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListProjects.ListProjects


-- | Lists all of the DataBrew jobs that are defined.
--   
--   This operation returns paginated results.
module Amazonka.DataBrew.ListJobs

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListJobs

-- | A token generated by DataBrew that specifies where to continue
--   pagination if a previous request was truncated. To get the next set of
--   pages, pass in the NextToken value from the response object of the
--   previous page call.
[$sel:nextToken:ListJobs'] :: ListJobs -> Maybe Text

-- | The name of a project. Using this parameter indicates to return only
--   those jobs that are associated with the specified project.
[$sel:projectName:ListJobs'] :: ListJobs -> Maybe Text

-- | The name of a dataset. Using this parameter indicates to return only
--   those jobs that act on the specified dataset.
[$sel:datasetName:ListJobs'] :: ListJobs -> Maybe Text

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListJobs'] :: ListJobs -> Maybe Natural

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - A token
--   generated by DataBrew that specifies where to continue pagination if a
--   previous request was truncated. To get the next set of pages, pass in
--   the NextToken value from the response object of the previous page
--   call.
--   
--   <a>$sel:projectName:ListJobs'</a>, <a>listJobs_projectName</a> - The
--   name of a project. Using this parameter indicates to return only those
--   jobs that are associated with the specified project.
--   
--   <a>$sel:datasetName:ListJobs'</a>, <a>listJobs_datasetName</a> - The
--   name of a dataset. Using this parameter indicates to return only those
--   jobs that act on the specified dataset.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum number of results to return in this request.
newListJobs :: ListJobs

-- | A token generated by DataBrew that specifies where to continue
--   pagination if a previous request was truncated. To get the next set of
--   pages, pass in the NextToken value from the response object of the
--   previous page call.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The name of a project. Using this parameter indicates to return only
--   those jobs that are associated with the specified project.
listJobs_projectName :: Lens' ListJobs (Maybe Text)

-- | The name of a dataset. Using this parameter indicates to return only
--   those jobs that act on the specified dataset.
listJobs_datasetName :: Lens' ListJobs (Maybe Text)

-- | The maximum number of results to return in this request.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Int -> [Job] -> ListJobsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
[$sel:nextToken:ListJobsResponse'] :: ListJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListJobsResponse'] :: ListJobsResponse -> Int

-- | A list of jobs that are defined.
[$sel:jobs:ListJobsResponse'] :: ListJobsResponse -> [Job]

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> - A
--   token that you can use in a subsequent call to retrieve the next set
--   of results.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:jobs:ListJobsResponse'</a>, <a>listJobsResponse_jobs</a> - A
--   list of jobs that are defined.
newListJobsResponse :: Int -> ListJobsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | A list of jobs that are defined.
listJobsResponse_jobs :: Lens' ListJobsResponse [Job]
instance GHC.Generics.Generic Amazonka.DataBrew.ListJobs.ListJobs
instance GHC.Show.Show Amazonka.DataBrew.ListJobs.ListJobs
instance GHC.Read.Read Amazonka.DataBrew.ListJobs.ListJobs
instance GHC.Classes.Eq Amazonka.DataBrew.ListJobs.ListJobs
instance GHC.Generics.Generic Amazonka.DataBrew.ListJobs.ListJobsResponse
instance GHC.Show.Show Amazonka.DataBrew.ListJobs.ListJobsResponse
instance GHC.Read.Read Amazonka.DataBrew.ListJobs.ListJobsResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListJobs.ListJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListJobs.ListJobs
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListJobs.ListJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataBrew.ListJobs.ListJobs
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListJobs.ListJobs
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListJobs.ListJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListJobs.ListJobs
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListJobs.ListJobs
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListJobs.ListJobs


-- | Lists all of the previous runs of a particular DataBrew job.
--   
--   This operation returns paginated results.
module Amazonka.DataBrew.ListJobRuns

-- | <i>See:</i> <a>newListJobRuns</a> smart constructor.
data ListJobRuns
ListJobRuns' :: Maybe Text -> Maybe Natural -> Text -> ListJobRuns

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListJobRuns'] :: ListJobRuns -> Maybe Text

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListJobRuns'] :: ListJobRuns -> Maybe Natural

-- | The name of the job.
[$sel:name:ListJobRuns'] :: ListJobRuns -> Text

-- | Create a value of <a>ListJobRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobRuns'</a>, <a>listJobRuns_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListJobRuns'</a>, <a>listJobRuns_maxResults</a> -
--   The maximum number of results to return in this request.
--   
--   <a>$sel:name:ListJobRuns'</a>, <a>listJobRuns_name</a> - The name of
--   the job.
newListJobRuns :: Text -> ListJobRuns

-- | The token returned by a previous call to retrieve the next set of
--   results.
listJobRuns_nextToken :: Lens' ListJobRuns (Maybe Text)

-- | The maximum number of results to return in this request.
listJobRuns_maxResults :: Lens' ListJobRuns (Maybe Natural)

-- | The name of the job.
listJobRuns_name :: Lens' ListJobRuns Text

-- | <i>See:</i> <a>newListJobRunsResponse</a> smart constructor.
data ListJobRunsResponse
ListJobRunsResponse' :: Maybe Text -> Int -> [JobRun] -> ListJobRunsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
[$sel:nextToken:ListJobRunsResponse'] :: ListJobRunsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListJobRunsResponse'] :: ListJobRunsResponse -> Int

-- | A list of job runs that have occurred for the specified job.
[$sel:jobRuns:ListJobRunsResponse'] :: ListJobRunsResponse -> [JobRun]

-- | Create a value of <a>ListJobRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobRuns'</a>,
--   <a>listJobRunsResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:jobRuns:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_jobRuns</a> - A list of job runs that have
--   occurred for the specified job.
newListJobRunsResponse :: Int -> ListJobRunsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listJobRunsResponse_nextToken :: Lens' ListJobRunsResponse (Maybe Text)

-- | The response's http status code.
listJobRunsResponse_httpStatus :: Lens' ListJobRunsResponse Int

-- | A list of job runs that have occurred for the specified job.
listJobRunsResponse_jobRuns :: Lens' ListJobRunsResponse [JobRun]
instance GHC.Generics.Generic Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance GHC.Show.Show Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance GHC.Read.Read Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance GHC.Classes.Eq Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance GHC.Generics.Generic Amazonka.DataBrew.ListJobRuns.ListJobRunsResponse
instance GHC.Show.Show Amazonka.DataBrew.ListJobRuns.ListJobRunsResponse
instance GHC.Read.Read Amazonka.DataBrew.ListJobRuns.ListJobRunsResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListJobRuns.ListJobRunsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListJobRuns.ListJobRunsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListJobRuns.ListJobRuns
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListJobRuns.ListJobRuns


-- | Lists all of the DataBrew datasets.
--   
--   This operation returns paginated results.
module Amazonka.DataBrew.ListDatasets

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Natural -> ListDatasets

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListDatasets'] :: ListDatasets -> Maybe Text

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListDatasets'] :: ListDatasets -> Maybe Natural

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   The maximum number of results to return in this request.
newListDatasets :: ListDatasets

-- | The token returned by a previous call to retrieve the next set of
--   results.
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The maximum number of results to return in this request.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Int -> [Dataset] -> ListDatasetsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
[$sel:nextToken:ListDatasetsResponse'] :: ListDatasetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDatasetsResponse'] :: ListDatasetsResponse -> Int

-- | A list of datasets that are defined.
[$sel:datasets:ListDatasetsResponse'] :: ListDatasetsResponse -> [Dataset]

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:datasets:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasets</a> - A list of datasets that are
--   defined.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int

-- | A list of datasets that are defined.
listDatasetsResponse_datasets :: Lens' ListDatasetsResponse [Dataset]
instance GHC.Generics.Generic Amazonka.DataBrew.ListDatasets.ListDatasets
instance GHC.Show.Show Amazonka.DataBrew.ListDatasets.ListDatasets
instance GHC.Read.Read Amazonka.DataBrew.ListDatasets.ListDatasets
instance GHC.Classes.Eq Amazonka.DataBrew.ListDatasets.ListDatasets
instance GHC.Generics.Generic Amazonka.DataBrew.ListDatasets.ListDatasetsResponse
instance GHC.Show.Show Amazonka.DataBrew.ListDatasets.ListDatasetsResponse
instance GHC.Read.Read Amazonka.DataBrew.ListDatasets.ListDatasetsResponse
instance GHC.Classes.Eq Amazonka.DataBrew.ListDatasets.ListDatasetsResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListDatasets.ListDatasetsResponse
instance Amazonka.Pager.AWSPager Amazonka.DataBrew.ListDatasets.ListDatasets
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Amazonka.DataBrew.ListDatasets.ListDatasets
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.ListDatasets.ListDatasets
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.ListDatasets.ListDatasets
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.ListDatasets.ListDatasets


-- | Returns the definition of a specific DataBrew schedule.
module Amazonka.DataBrew.DescribeSchedule

-- | <i>See:</i> <a>newDescribeSchedule</a> smart constructor.
data DescribeSchedule
DescribeSchedule' :: Text -> DescribeSchedule

-- | The name of the schedule to be described.
[$sel:name:DescribeSchedule'] :: DescribeSchedule -> Text

-- | Create a value of <a>DescribeSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeSchedule'</a>, <a>describeSchedule_name</a> - The
--   name of the schedule to be described.
newDescribeSchedule :: Text -> DescribeSchedule

-- | The name of the schedule to be described.
describeSchedule_name :: Lens' DescribeSchedule Text

-- | <i>See:</i> <a>newDescribeScheduleResponse</a> smart constructor.
data DescribeScheduleResponse
DescribeScheduleResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe (HashMap Text Text) -> Int -> Text -> DescribeScheduleResponse

-- | The date and time that the schedule was last modified.
[$sel:lastModifiedDate:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe POSIX

-- | The date and time that the schedule was created.
[$sel:createDate:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe POSIX

-- | The identifier (user name) of the user who created the schedule.
[$sel:createdBy:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schedule.
[$sel:resourceArn:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe Text

-- | The date or dates and time or times when the jobs are to be run for
--   the schedule. For more information, see <a>Cron expressions</a> in the
--   <i>Glue DataBrew Developer Guide</i>.
[$sel:cronExpression:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe Text

-- | The identifier (user name) of the user who last modified the schedule.
[$sel:lastModifiedBy:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe Text

-- | The name or names of one or more jobs to be run by using the schedule.
[$sel:jobNames:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe [Text]

-- | Metadata tags associated with this schedule.
[$sel:tags:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Int

-- | The name of the schedule.
[$sel:name:DescribeScheduleResponse'] :: DescribeScheduleResponse -> Text

-- | Create a value of <a>DescribeScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_lastModifiedDate</a> - The date and time
--   that the schedule was last modified.
--   
--   <a>$sel:createDate:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_createDate</a> - The date and time that
--   the schedule was created.
--   
--   <a>$sel:createdBy:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_createdBy</a> - The identifier (user name)
--   of the user who created the schedule.
--   
--   <a>$sel:resourceArn:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the schedule.
--   
--   <a>$sel:cronExpression:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_cronExpression</a> - The date or dates and
--   time or times when the jobs are to be run for the schedule. For more
--   information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
--   
--   <a>$sel:lastModifiedBy:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the schedule.
--   
--   <a>$sel:jobNames:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_jobNames</a> - The name or names of one or
--   more jobs to be run by using the schedule.
--   
--   <a>$sel:tags:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_tags</a> - Metadata tags associated with
--   this schedule.
--   
--   <a>$sel:httpStatus:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:DescribeSchedule'</a>,
--   <a>describeScheduleResponse_name</a> - The name of the schedule.
newDescribeScheduleResponse :: Int -> Text -> DescribeScheduleResponse

-- | The date and time that the schedule was last modified.
describeScheduleResponse_lastModifiedDate :: Lens' DescribeScheduleResponse (Maybe UTCTime)

-- | The date and time that the schedule was created.
describeScheduleResponse_createDate :: Lens' DescribeScheduleResponse (Maybe UTCTime)

-- | The identifier (user name) of the user who created the schedule.
describeScheduleResponse_createdBy :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schedule.
describeScheduleResponse_resourceArn :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The date or dates and time or times when the jobs are to be run for
--   the schedule. For more information, see <a>Cron expressions</a> in the
--   <i>Glue DataBrew Developer Guide</i>.
describeScheduleResponse_cronExpression :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The identifier (user name) of the user who last modified the schedule.
describeScheduleResponse_lastModifiedBy :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The name or names of one or more jobs to be run by using the schedule.
describeScheduleResponse_jobNames :: Lens' DescribeScheduleResponse (Maybe [Text])

-- | Metadata tags associated with this schedule.
describeScheduleResponse_tags :: Lens' DescribeScheduleResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeScheduleResponse_httpStatus :: Lens' DescribeScheduleResponse Int

-- | The name of the schedule.
describeScheduleResponse_name :: Lens' DescribeScheduleResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance GHC.Show.Show Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance GHC.Read.Read Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeSchedule.DescribeScheduleResponse
instance GHC.Show.Show Amazonka.DataBrew.DescribeSchedule.DescribeScheduleResponse
instance GHC.Read.Read Amazonka.DataBrew.DescribeSchedule.DescribeScheduleResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeSchedule.DescribeScheduleResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeSchedule.DescribeScheduleResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DescribeSchedule.DescribeSchedule
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DescribeSchedule.DescribeSchedule


-- | Returns the definition of a specific DataBrew recipe corresponding to
--   a particular version.
module Amazonka.DataBrew.DescribeRecipe

-- | <i>See:</i> <a>newDescribeRecipe</a> smart constructor.
data DescribeRecipe
DescribeRecipe' :: Maybe Text -> Text -> DescribeRecipe

-- | The recipe version identifier. If this parameter isn't specified, then
--   the latest published version is returned.
[$sel:recipeVersion:DescribeRecipe'] :: DescribeRecipe -> Maybe Text

-- | The name of the recipe to be described.
[$sel:name:DescribeRecipe'] :: DescribeRecipe -> Text

-- | Create a value of <a>DescribeRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:DescribeRecipe'</a>,
--   <a>describeRecipe_recipeVersion</a> - The recipe version identifier.
--   If this parameter isn't specified, then the latest published version
--   is returned.
--   
--   <a>$sel:name:DescribeRecipe'</a>, <a>describeRecipe_name</a> - The
--   name of the recipe to be described.
newDescribeRecipe :: Text -> DescribeRecipe

-- | The recipe version identifier. If this parameter isn't specified, then
--   the latest published version is returned.
describeRecipe_recipeVersion :: Lens' DescribeRecipe (Maybe Text)

-- | The name of the recipe to be described.
describeRecipe_name :: Lens' DescribeRecipe Text

-- | <i>See:</i> <a>newDescribeRecipeResponse</a> smart constructor.
data DescribeRecipeResponse
DescribeRecipeResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [RecipeStep] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> Text -> DescribeRecipeResponse

-- | The date and time that the recipe was last modified.
[$sel:lastModifiedDate:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe POSIX

-- | The date and time that the recipe was created.
[$sel:createDate:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe POSIX

-- | The identifier (user name) of the user who last published the recipe.
[$sel:publishedBy:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Text

-- | The identifier (user name) of the user who created the recipe.
[$sel:createdBy:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Text

-- | One or more steps to be performed by the recipe. Each step consists of
--   an action, and the conditions under which the action should succeed.
[$sel:steps:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe [RecipeStep]

-- | The date and time when the recipe was last published.
[$sel:publishedDate:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe POSIX

-- | The ARN of the recipe.
[$sel:resourceArn:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Text

-- | The recipe version identifier.
[$sel:recipeVersion:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Text

-- | The name of the project associated with this recipe.
[$sel:projectName:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Text

-- | The identifier (user name) of the user who last modified the recipe.
[$sel:lastModifiedBy:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Text

-- | The description of the recipe.
[$sel:description:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Text

-- | Metadata tags associated with this project.
[$sel:tags:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Int

-- | The name of the recipe.
[$sel:name:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Text

-- | Create a value of <a>DescribeRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_lastModifiedDate</a> - The date and time
--   that the recipe was last modified.
--   
--   <a>$sel:createDate:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_createDate</a> - The date and time that the
--   recipe was created.
--   
--   <a>$sel:publishedBy:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_publishedBy</a> - The identifier (user name)
--   of the user who last published the recipe.
--   
--   <a>$sel:createdBy:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_createdBy</a> - The identifier (user name)
--   of the user who created the recipe.
--   
--   <a>$sel:steps:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_steps</a> - One or more steps to be
--   performed by the recipe. Each step consists of an action, and the
--   conditions under which the action should succeed.
--   
--   <a>$sel:publishedDate:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_publishedDate</a> - The date and time when
--   the recipe was last published.
--   
--   <a>$sel:resourceArn:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_resourceArn</a> - The ARN of the recipe.
--   
--   <a>$sel:recipeVersion:DescribeRecipe'</a>,
--   <a>describeRecipeResponse_recipeVersion</a> - The recipe version
--   identifier.
--   
--   <a>$sel:projectName:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_projectName</a> - The name of the project
--   associated with this recipe.
--   
--   <a>$sel:lastModifiedBy:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the recipe.
--   
--   <a>$sel:description:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_description</a> - The description of the
--   recipe.
--   
--   <a>$sel:tags:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_tags</a> - Metadata tags associated with
--   this project.
--   
--   <a>$sel:httpStatus:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeRecipe'</a>, <a>describeRecipeResponse_name</a> -
--   The name of the recipe.
newDescribeRecipeResponse :: Int -> Text -> DescribeRecipeResponse

-- | The date and time that the recipe was last modified.
describeRecipeResponse_lastModifiedDate :: Lens' DescribeRecipeResponse (Maybe UTCTime)

-- | The date and time that the recipe was created.
describeRecipeResponse_createDate :: Lens' DescribeRecipeResponse (Maybe UTCTime)

-- | The identifier (user name) of the user who last published the recipe.
describeRecipeResponse_publishedBy :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The identifier (user name) of the user who created the recipe.
describeRecipeResponse_createdBy :: Lens' DescribeRecipeResponse (Maybe Text)

-- | One or more steps to be performed by the recipe. Each step consists of
--   an action, and the conditions under which the action should succeed.
describeRecipeResponse_steps :: Lens' DescribeRecipeResponse (Maybe [RecipeStep])

-- | The date and time when the recipe was last published.
describeRecipeResponse_publishedDate :: Lens' DescribeRecipeResponse (Maybe UTCTime)

-- | The ARN of the recipe.
describeRecipeResponse_resourceArn :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The recipe version identifier.
describeRecipeResponse_recipeVersion :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The name of the project associated with this recipe.
describeRecipeResponse_projectName :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The identifier (user name) of the user who last modified the recipe.
describeRecipeResponse_lastModifiedBy :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The description of the recipe.
describeRecipeResponse_description :: Lens' DescribeRecipeResponse (Maybe Text)

-- | Metadata tags associated with this project.
describeRecipeResponse_tags :: Lens' DescribeRecipeResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRecipeResponse_httpStatus :: Lens' DescribeRecipeResponse Int

-- | The name of the recipe.
describeRecipeResponse_name :: Lens' DescribeRecipeResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance GHC.Show.Show Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance GHC.Read.Read Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeRecipe.DescribeRecipeResponse
instance GHC.Show.Show Amazonka.DataBrew.DescribeRecipe.DescribeRecipeResponse
instance GHC.Read.Read Amazonka.DataBrew.DescribeRecipe.DescribeRecipeResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeRecipe.DescribeRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeRecipe.DescribeRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DescribeRecipe.DescribeRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DescribeRecipe.DescribeRecipe


-- | Returns the definition of a specific DataBrew project.
module Amazonka.DataBrew.DescribeProject

-- | <i>See:</i> <a>newDescribeProject</a> smart constructor.
data DescribeProject
DescribeProject' :: Text -> DescribeProject

-- | The name of the project to be described.
[$sel:name:DescribeProject'] :: DescribeProject -> Text

-- | Create a value of <a>DescribeProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeProject'</a>, <a>describeProject_name</a> - The
--   name of the project to be described.
newDescribeProject :: Text -> DescribeProject

-- | The name of the project to be described.
describeProject_name :: Lens' DescribeProject Text

-- | <i>See:</i> <a>newDescribeProjectResponse</a> smart constructor.
data DescribeProjectResponse
DescribeProjectResponse' :: Maybe POSIX -> Maybe SessionStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Sample -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> Text -> DescribeProjectResponse

-- | The date and time that the project was last modified.
[$sel:lastModifiedDate:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe POSIX

-- | Describes the current state of the session:
--   
--   <ul>
--   <li><tt>PROVISIONING</tt> - allocating resources for the session.</li>
--   <li><tt>INITIALIZING</tt> - getting the session ready for first
--   use.</li>
--   <li><tt>ASSIGNED</tt> - the session is ready for use.</li>
--   </ul>
[$sel:sessionStatus:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe SessionStatus

-- | The date and time when the project was opened.
[$sel:openDate:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe POSIX

-- | The date and time that the project was created.
[$sel:createDate:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe POSIX

-- | The identifier (user name) of the user who created the project.
[$sel:createdBy:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the project.
[$sel:resourceArn:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Text

-- | The recipe associated with this job.
[$sel:recipeName:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Text

-- | The dataset associated with the project.
[$sel:datasetName:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Text

-- | The identifier (user name) of the user who last modified the project.
[$sel:lastModifiedBy:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Text
[$sel:sample:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Sample

-- | The identifier (user name) of the user that opened the project for
--   use.
[$sel:openedBy:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Text

-- | Metadata tags associated with this project.
[$sel:tags:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe (HashMap Text Text)

-- | The ARN of the Identity and Access Management (IAM) role to be assumed
--   when DataBrew runs the job.
[$sel:roleArn:DescribeProjectResponse'] :: DescribeProjectResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeProjectResponse'] :: DescribeProjectResponse -> Int

-- | The name of the project.
[$sel:name:DescribeProjectResponse'] :: DescribeProjectResponse -> Text

-- | Create a value of <a>DescribeProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_lastModifiedDate</a> - The date and time
--   that the project was last modified.
--   
--   <a>$sel:sessionStatus:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_sessionStatus</a> - Describes the current
--   state of the session:
--   
--   <ul>
--   <li><tt>PROVISIONING</tt> - allocating resources for the session.</li>
--   <li><tt>INITIALIZING</tt> - getting the session ready for first
--   use.</li>
--   <li><tt>ASSIGNED</tt> - the session is ready for use.</li>
--   </ul>
--   
--   <a>$sel:openDate:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_openDate</a> - The date and time when the
--   project was opened.
--   
--   <a>$sel:createDate:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_createDate</a> - The date and time that the
--   project was created.
--   
--   <a>$sel:createdBy:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_createdBy</a> - The identifier (user name)
--   of the user who created the project.
--   
--   <a>$sel:resourceArn:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the project.
--   
--   <a>$sel:recipeName:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_recipeName</a> - The recipe associated with
--   this job.
--   
--   <a>$sel:datasetName:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_datasetName</a> - The dataset associated
--   with the project.
--   
--   <a>$sel:lastModifiedBy:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the project.
--   
--   <a>$sel:sample:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_sample</a> - Undocumented member.
--   
--   <a>$sel:openedBy:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_openedBy</a> - The identifier (user name)
--   of the user that opened the project for use.
--   
--   <a>$sel:tags:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_tags</a> - Metadata tags associated with
--   this project.
--   
--   <a>$sel:roleArn:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_roleArn</a> - The ARN of the Identity and
--   Access Management (IAM) role to be assumed when DataBrew runs the job.
--   
--   <a>$sel:httpStatus:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeProject'</a>, <a>describeProjectResponse_name</a>
--   - The name of the project.
newDescribeProjectResponse :: Int -> Text -> DescribeProjectResponse

-- | The date and time that the project was last modified.
describeProjectResponse_lastModifiedDate :: Lens' DescribeProjectResponse (Maybe UTCTime)

-- | Describes the current state of the session:
--   
--   <ul>
--   <li><tt>PROVISIONING</tt> - allocating resources for the session.</li>
--   <li><tt>INITIALIZING</tt> - getting the session ready for first
--   use.</li>
--   <li><tt>ASSIGNED</tt> - the session is ready for use.</li>
--   </ul>
describeProjectResponse_sessionStatus :: Lens' DescribeProjectResponse (Maybe SessionStatus)

-- | The date and time when the project was opened.
describeProjectResponse_openDate :: Lens' DescribeProjectResponse (Maybe UTCTime)

-- | The date and time that the project was created.
describeProjectResponse_createDate :: Lens' DescribeProjectResponse (Maybe UTCTime)

-- | The identifier (user name) of the user who created the project.
describeProjectResponse_createdBy :: Lens' DescribeProjectResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project.
describeProjectResponse_resourceArn :: Lens' DescribeProjectResponse (Maybe Text)

-- | The recipe associated with this job.
describeProjectResponse_recipeName :: Lens' DescribeProjectResponse (Maybe Text)

-- | The dataset associated with the project.
describeProjectResponse_datasetName :: Lens' DescribeProjectResponse (Maybe Text)

-- | The identifier (user name) of the user who last modified the project.
describeProjectResponse_lastModifiedBy :: Lens' DescribeProjectResponse (Maybe Text)

-- | Undocumented member.
describeProjectResponse_sample :: Lens' DescribeProjectResponse (Maybe Sample)

-- | The identifier (user name) of the user that opened the project for
--   use.
describeProjectResponse_openedBy :: Lens' DescribeProjectResponse (Maybe Text)

-- | Metadata tags associated with this project.
describeProjectResponse_tags :: Lens' DescribeProjectResponse (Maybe (HashMap Text Text))

-- | The ARN of the Identity and Access Management (IAM) role to be assumed
--   when DataBrew runs the job.
describeProjectResponse_roleArn :: Lens' DescribeProjectResponse (Maybe Text)

-- | The response's http status code.
describeProjectResponse_httpStatus :: Lens' DescribeProjectResponse Int

-- | The name of the project.
describeProjectResponse_name :: Lens' DescribeProjectResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeProject.DescribeProject
instance GHC.Show.Show Amazonka.DataBrew.DescribeProject.DescribeProject
instance GHC.Read.Read Amazonka.DataBrew.DescribeProject.DescribeProject
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeProject.DescribeProject
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeProject.DescribeProjectResponse
instance GHC.Show.Show Amazonka.DataBrew.DescribeProject.DescribeProjectResponse
instance GHC.Read.Read Amazonka.DataBrew.DescribeProject.DescribeProjectResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeProject.DescribeProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DescribeProject.DescribeProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeProject.DescribeProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DescribeProject.DescribeProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeProject.DescribeProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DescribeProject.DescribeProject
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DescribeProject.DescribeProject
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DescribeProject.DescribeProject


-- | Represents one run of a DataBrew job.
module Amazonka.DataBrew.DescribeJobRun

-- | <i>See:</i> <a>newDescribeJobRun</a> smart constructor.
data DescribeJobRun
DescribeJobRun' :: Text -> Text -> DescribeJobRun

-- | The name of the job being processed during this run.
[$sel:name:DescribeJobRun'] :: DescribeJobRun -> Text

-- | The unique identifier of the job run.
[$sel:runId:DescribeJobRun'] :: DescribeJobRun -> Text

-- | Create a value of <a>DescribeJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeJobRun'</a>, <a>describeJobRun_name</a> - The
--   name of the job being processed during this run.
--   
--   <a>$sel:runId:DescribeJobRun'</a>, <a>describeJobRun_runId</a> - The
--   unique identifier of the job run.
newDescribeJobRun :: Text -> Text -> DescribeJobRun

-- | The name of the job being processed during this run.
describeJobRun_name :: Lens' DescribeJobRun Text

-- | The unique identifier of the job run.
describeJobRun_runId :: Lens' DescribeJobRun Text

-- | <i>See:</i> <a>newDescribeJobRunResponse</a> smart constructor.
data DescribeJobRunResponse
DescribeJobRunResponse' :: Maybe POSIX -> Maybe JobRunState -> Maybe (NonEmpty DataCatalogOutput) -> Maybe POSIX -> Maybe RecipeReference -> Maybe ProfileConfiguration -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe Int -> Maybe LogSubscription -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobSample -> Int -> Text -> DescribeJobRunResponse

-- | The date and time when the job completed processing.
[$sel:completedOn:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe POSIX

-- | The current state of the job run entity itself.
[$sel:state:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe JobRunState

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe (NonEmpty DataCatalogOutput)

-- | The date and time when the job run began.
[$sel:startedOn:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe POSIX
[$sel:recipeReference:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe RecipeReference

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
[$sel:profileConfiguration:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe ProfileConfiguration

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
[$sel:databaseOutputs:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe (NonEmpty DatabaseOutput)

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
[$sel:logGroupName:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe Text

-- | One or more output artifacts from a job run.
[$sel:outputs:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe (NonEmpty Output)

-- | The unique identifier of the job run.
[$sel:runId:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe Text

-- | The amount of time, in seconds, during which the job run consumed
--   resources.
[$sel:executionTime:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe Int

-- | The current status of Amazon CloudWatch logging for the job run.
[$sel:logSubscription:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe LogSubscription

-- | The Amazon Resource Name (ARN) of the user who started the job run.
[$sel:startedBy:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe Text

-- | The name of the dataset for the job to process.
[$sel:datasetName:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe Text

-- | The number of times that DataBrew has attempted to run the job.
[$sel:attempt:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe Int

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
[$sel:errorMessage:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe Text

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed. If a JobSample value
--   is not provided, the default value will be used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
[$sel:jobSample:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe JobSample

-- | The response's http status code.
[$sel:httpStatus:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Int

-- | The name of the job being processed during this run.
[$sel:jobName:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Text

-- | Create a value of <a>DescribeJobRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_completedOn</a> - The date and time when the
--   job completed processing.
--   
--   <a>$sel:state:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_state</a> - The current state of the job run
--   entity itself.
--   
--   <a>$sel:dataCatalogOutputs:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_dataCatalogOutputs</a> - One or more
--   artifacts that represent the Glue Data Catalog output from running the
--   job.
--   
--   <a>$sel:startedOn:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_startedOn</a> - The date and time when the
--   job run began.
--   
--   <a>$sel:recipeReference:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_recipeReference</a> - Undocumented member.
--   
--   <a>$sel:profileConfiguration:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_profileConfiguration</a> - Configuration for
--   profile jobs. Used to select columns, do evaluations, and override
--   default parameters of evaluations. When configuration is null, the
--   profile job will run with default settings.
--   
--   <a>$sel:databaseOutputs:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_databaseOutputs</a> - Represents a list of
--   JDBC database output objects which defines the output destination for
--   a DataBrew recipe job to write into.
--   
--   <a>$sel:logGroupName:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_logGroupName</a> - The name of an Amazon
--   CloudWatch log group, where the job writes diagnostic messages when it
--   runs.
--   
--   <a>$sel:outputs:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_outputs</a> - One or more output artifacts
--   from a job run.
--   
--   <a>$sel:runId:DescribeJobRun'</a>, <a>describeJobRunResponse_runId</a>
--   - The unique identifier of the job run.
--   
--   <a>$sel:executionTime:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_executionTime</a> - The amount of time, in
--   seconds, during which the job run consumed resources.
--   
--   <a>$sel:logSubscription:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_logSubscription</a> - The current status of
--   Amazon CloudWatch logging for the job run.
--   
--   <a>$sel:startedBy:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_startedBy</a> - The Amazon Resource Name
--   (ARN) of the user who started the job run.
--   
--   <a>$sel:datasetName:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_datasetName</a> - The name of the dataset
--   for the job to process.
--   
--   <a>$sel:attempt:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_attempt</a> - The number of times that
--   DataBrew has attempted to run the job.
--   
--   <a>$sel:errorMessage:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_errorMessage</a> - A message indicating an
--   error (if any) that was encountered when the job ran.
--   
--   <a>$sel:jobSample:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_jobSample</a> - Sample configuration for
--   profile jobs only. Determines the number of rows on which the profile
--   job will be executed. If a JobSample value is not provided, the
--   default value will be used. The default value is CUSTOM_ROWS for the
--   mode parameter and 20000 for the size parameter.
--   
--   <a>$sel:httpStatus:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:jobName:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_jobName</a> - The name of the job being
--   processed during this run.
newDescribeJobRunResponse :: Int -> Text -> DescribeJobRunResponse

-- | The date and time when the job completed processing.
describeJobRunResponse_completedOn :: Lens' DescribeJobRunResponse (Maybe UTCTime)

-- | The current state of the job run entity itself.
describeJobRunResponse_state :: Lens' DescribeJobRunResponse (Maybe JobRunState)

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
describeJobRunResponse_dataCatalogOutputs :: Lens' DescribeJobRunResponse (Maybe (NonEmpty DataCatalogOutput))

-- | The date and time when the job run began.
describeJobRunResponse_startedOn :: Lens' DescribeJobRunResponse (Maybe UTCTime)

-- | Undocumented member.
describeJobRunResponse_recipeReference :: Lens' DescribeJobRunResponse (Maybe RecipeReference)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
describeJobRunResponse_profileConfiguration :: Lens' DescribeJobRunResponse (Maybe ProfileConfiguration)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
describeJobRunResponse_databaseOutputs :: Lens' DescribeJobRunResponse (Maybe (NonEmpty DatabaseOutput))

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
describeJobRunResponse_logGroupName :: Lens' DescribeJobRunResponse (Maybe Text)

-- | One or more output artifacts from a job run.
describeJobRunResponse_outputs :: Lens' DescribeJobRunResponse (Maybe (NonEmpty Output))

-- | The unique identifier of the job run.
describeJobRunResponse_runId :: Lens' DescribeJobRunResponse (Maybe Text)

-- | The amount of time, in seconds, during which the job run consumed
--   resources.
describeJobRunResponse_executionTime :: Lens' DescribeJobRunResponse (Maybe Int)

-- | The current status of Amazon CloudWatch logging for the job run.
describeJobRunResponse_logSubscription :: Lens' DescribeJobRunResponse (Maybe LogSubscription)

-- | The Amazon Resource Name (ARN) of the user who started the job run.
describeJobRunResponse_startedBy :: Lens' DescribeJobRunResponse (Maybe Text)

-- | The name of the dataset for the job to process.
describeJobRunResponse_datasetName :: Lens' DescribeJobRunResponse (Maybe Text)

-- | The number of times that DataBrew has attempted to run the job.
describeJobRunResponse_attempt :: Lens' DescribeJobRunResponse (Maybe Int)

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
describeJobRunResponse_errorMessage :: Lens' DescribeJobRunResponse (Maybe Text)

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed. If a JobSample value
--   is not provided, the default value will be used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
describeJobRunResponse_jobSample :: Lens' DescribeJobRunResponse (Maybe JobSample)

-- | The response's http status code.
describeJobRunResponse_httpStatus :: Lens' DescribeJobRunResponse Int

-- | The name of the job being processed during this run.
describeJobRunResponse_jobName :: Lens' DescribeJobRunResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance GHC.Show.Show Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance GHC.Read.Read Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeJobRun.DescribeJobRunResponse
instance GHC.Show.Show Amazonka.DataBrew.DescribeJobRun.DescribeJobRunResponse
instance GHC.Read.Read Amazonka.DataBrew.DescribeJobRun.DescribeJobRunResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeJobRun.DescribeJobRunResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeJobRun.DescribeJobRunResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DescribeJobRun.DescribeJobRun
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DescribeJobRun.DescribeJobRun


-- | Returns the definition of a specific DataBrew job.
module Amazonka.DataBrew.DescribeJob

-- | <i>See:</i> <a>newDescribeJob</a> smart constructor.
data DescribeJob
DescribeJob' :: Text -> DescribeJob

-- | The name of the job to be described.
[$sel:name:DescribeJob'] :: DescribeJob -> Text

-- | Create a value of <a>DescribeJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeJob'</a>, <a>describeJob_name</a> - The name of
--   the job to be described.
newDescribeJob :: Text -> DescribeJob

-- | The name of the job to be described.
describeJob_name :: Lens' DescribeJob Text

-- | <i>See:</i> <a>newDescribeJobResponse</a> smart constructor.
data DescribeJobResponse
DescribeJobResponse' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe POSIX -> Maybe POSIX -> Maybe RecipeReference -> Maybe ProfileConfiguration -> Maybe Text -> Maybe (NonEmpty DatabaseOutput) -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe LogSubscription -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobType -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe JobSample -> Int -> Text -> DescribeJobResponse

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:DescribeJobResponse'] :: DescribeJobResponse -> Maybe (NonEmpty DataCatalogOutput)

-- | The date and time that the job was last modified.
[$sel:lastModifiedDate:DescribeJobResponse'] :: DescribeJobResponse -> Maybe POSIX

-- | The date and time that the job was created.
[$sel:createDate:DescribeJobResponse'] :: DescribeJobResponse -> Maybe POSIX
[$sel:recipeReference:DescribeJobResponse'] :: DescribeJobResponse -> Maybe RecipeReference

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
[$sel:profileConfiguration:DescribeJobResponse'] :: DescribeJobResponse -> Maybe ProfileConfiguration

-- | The identifier (user name) of the user associated with the creation of
--   the job.
[$sel:createdBy:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Text

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
[$sel:databaseOutputs:DescribeJobResponse'] :: DescribeJobResponse -> Maybe (NonEmpty DatabaseOutput)

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
[$sel:encryptionMode:DescribeJobResponse'] :: DescribeJobResponse -> Maybe EncryptionMode

-- | One or more artifacts that represent the output from running the job.
[$sel:outputs:DescribeJobResponse'] :: DescribeJobResponse -> Maybe (NonEmpty Output)

-- | The Amazon Resource Name (ARN) of the job.
[$sel:resourceArn:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Text

-- | Indicates whether Amazon CloudWatch logging is enabled for this job.
[$sel:logSubscription:DescribeJobResponse'] :: DescribeJobResponse -> Maybe LogSubscription

-- | The DataBrew project associated with this job.
[$sel:projectName:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Text

-- | The maximum number of times to retry the job after a job run fails.
[$sel:maxRetries:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Natural

-- | The dataset that the job acts upon.
[$sel:datasetName:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
[$sel:encryptionKeyArn:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Text

-- | The maximum number of compute nodes that DataBrew can consume when the
--   job processes data.
[$sel:maxCapacity:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Int

-- | The identifier (user name) of the user who last modified the job.
[$sel:lastModifiedBy:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Text

-- | The job type, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - The job analyzes the dataset to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - The job applies one or more transformations to a
--   dataset.</li>
--   </ul>
[$sel:type':DescribeJobResponse'] :: DescribeJobResponse -> Maybe JobType

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
[$sel:timeout:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Natural

-- | Metadata tags associated with this job.
[$sel:tags:DescribeJobResponse'] :: DescribeJobResponse -> Maybe (HashMap Text Text)

-- | The ARN of the Identity and Access Management (IAM) role to be assumed
--   when DataBrew runs the job.
[$sel:roleArn:DescribeJobResponse'] :: DescribeJobResponse -> Maybe Text

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed.
[$sel:jobSample:DescribeJobResponse'] :: DescribeJobResponse -> Maybe JobSample

-- | The response's http status code.
[$sel:httpStatus:DescribeJobResponse'] :: DescribeJobResponse -> Int

-- | The name of the job.
[$sel:name:DescribeJobResponse'] :: DescribeJobResponse -> Text

-- | Create a value of <a>DescribeJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:DescribeJobResponse'</a>,
--   <a>describeJobResponse_dataCatalogOutputs</a> - One or more artifacts
--   that represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:lastModifiedDate:DescribeJobResponse'</a>,
--   <a>describeJobResponse_lastModifiedDate</a> - The date and time that
--   the job was last modified.
--   
--   <a>$sel:createDate:DescribeJobResponse'</a>,
--   <a>describeJobResponse_createDate</a> - The date and time that the job
--   was created.
--   
--   <a>$sel:recipeReference:DescribeJobResponse'</a>,
--   <a>describeJobResponse_recipeReference</a> - Undocumented member.
--   
--   <a>$sel:profileConfiguration:DescribeJobResponse'</a>,
--   <a>describeJobResponse_profileConfiguration</a> - Configuration for
--   profile jobs. Used to select columns, do evaluations, and override
--   default parameters of evaluations. When configuration is null, the
--   profile job will run with default settings.
--   
--   <a>$sel:createdBy:DescribeJobResponse'</a>,
--   <a>describeJobResponse_createdBy</a> - The identifier (user name) of
--   the user associated with the creation of the job.
--   
--   <a>$sel:databaseOutputs:DescribeJobResponse'</a>,
--   <a>describeJobResponse_databaseOutputs</a> - Represents a list of JDBC
--   database output objects which defines the output destination for a
--   DataBrew recipe job to write into.
--   
--   <a>$sel:encryptionMode:DescribeJobResponse'</a>,
--   <a>describeJobResponse_encryptionMode</a> - The encryption mode for
--   the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:DescribeJobResponse'</a>,
--   <a>describeJobResponse_outputs</a> - One or more artifacts that
--   represent the output from running the job.
--   
--   <a>$sel:resourceArn:DescribeJobResponse'</a>,
--   <a>describeJobResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the job.
--   
--   <a>$sel:logSubscription:DescribeJobResponse'</a>,
--   <a>describeJobResponse_logSubscription</a> - Indicates whether Amazon
--   CloudWatch logging is enabled for this job.
--   
--   <a>$sel:projectName:DescribeJobResponse'</a>,
--   <a>describeJobResponse_projectName</a> - The DataBrew project
--   associated with this job.
--   
--   <a>$sel:maxRetries:DescribeJobResponse'</a>,
--   <a>describeJobResponse_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:datasetName:DescribeJobResponse'</a>,
--   <a>describeJobResponse_datasetName</a> - The dataset that the job acts
--   upon.
--   
--   <a>$sel:encryptionKeyArn:DescribeJobResponse'</a>,
--   <a>describeJobResponse_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:DescribeJobResponse'</a>,
--   <a>describeJobResponse_maxCapacity</a> - The maximum number of compute
--   nodes that DataBrew can consume when the job processes data.
--   
--   <a>$sel:lastModifiedBy:DescribeJobResponse'</a>,
--   <a>describeJobResponse_lastModifiedBy</a> - The identifier (user name)
--   of the user who last modified the job.
--   
--   <a>$sel:type':DescribeJobResponse'</a>,
--   <a>describeJobResponse_type</a> - The job type, which must be one of
--   the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - The job analyzes the dataset to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - The job applies one or more transformations to a
--   dataset.</li>
--   </ul>
--   
--   <a>$sel:timeout:DescribeJobResponse'</a>,
--   <a>describeJobResponse_timeout</a> - The job's timeout in minutes. A
--   job that attempts to run longer than this timeout period ends with a
--   status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:DescribeJobResponse'</a>, <a>describeJobResponse_tags</a>
--   - Metadata tags associated with this job.
--   
--   <a>$sel:roleArn:DescribeJobResponse'</a>,
--   <a>describeJobResponse_roleArn</a> - The ARN of the Identity and
--   Access Management (IAM) role to be assumed when DataBrew runs the job.
--   
--   <a>$sel:jobSample:DescribeJobResponse'</a>,
--   <a>describeJobResponse_jobSample</a> - Sample configuration for
--   profile jobs only. Determines the number of rows on which the profile
--   job will be executed.
--   
--   <a>$sel:httpStatus:DescribeJobResponse'</a>,
--   <a>describeJobResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeJob'</a>, <a>describeJobResponse_name</a> - The
--   name of the job.
newDescribeJobResponse :: Int -> Text -> DescribeJobResponse

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
describeJobResponse_dataCatalogOutputs :: Lens' DescribeJobResponse (Maybe (NonEmpty DataCatalogOutput))

-- | The date and time that the job was last modified.
describeJobResponse_lastModifiedDate :: Lens' DescribeJobResponse (Maybe UTCTime)

-- | The date and time that the job was created.
describeJobResponse_createDate :: Lens' DescribeJobResponse (Maybe UTCTime)

-- | Undocumented member.
describeJobResponse_recipeReference :: Lens' DescribeJobResponse (Maybe RecipeReference)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
describeJobResponse_profileConfiguration :: Lens' DescribeJobResponse (Maybe ProfileConfiguration)

-- | The identifier (user name) of the user associated with the creation of
--   the job.
describeJobResponse_createdBy :: Lens' DescribeJobResponse (Maybe Text)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
describeJobResponse_databaseOutputs :: Lens' DescribeJobResponse (Maybe (NonEmpty DatabaseOutput))

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
describeJobResponse_encryptionMode :: Lens' DescribeJobResponse (Maybe EncryptionMode)

-- | One or more artifacts that represent the output from running the job.
describeJobResponse_outputs :: Lens' DescribeJobResponse (Maybe (NonEmpty Output))

-- | The Amazon Resource Name (ARN) of the job.
describeJobResponse_resourceArn :: Lens' DescribeJobResponse (Maybe Text)

-- | Indicates whether Amazon CloudWatch logging is enabled for this job.
describeJobResponse_logSubscription :: Lens' DescribeJobResponse (Maybe LogSubscription)

-- | The DataBrew project associated with this job.
describeJobResponse_projectName :: Lens' DescribeJobResponse (Maybe Text)

-- | The maximum number of times to retry the job after a job run fails.
describeJobResponse_maxRetries :: Lens' DescribeJobResponse (Maybe Natural)

-- | The dataset that the job acts upon.
describeJobResponse_datasetName :: Lens' DescribeJobResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
describeJobResponse_encryptionKeyArn :: Lens' DescribeJobResponse (Maybe Text)

-- | The maximum number of compute nodes that DataBrew can consume when the
--   job processes data.
describeJobResponse_maxCapacity :: Lens' DescribeJobResponse (Maybe Int)

-- | The identifier (user name) of the user who last modified the job.
describeJobResponse_lastModifiedBy :: Lens' DescribeJobResponse (Maybe Text)

-- | The job type, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - The job analyzes the dataset to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - The job applies one or more transformations to a
--   dataset.</li>
--   </ul>
describeJobResponse_type :: Lens' DescribeJobResponse (Maybe JobType)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
describeJobResponse_timeout :: Lens' DescribeJobResponse (Maybe Natural)

-- | Metadata tags associated with this job.
describeJobResponse_tags :: Lens' DescribeJobResponse (Maybe (HashMap Text Text))

-- | The ARN of the Identity and Access Management (IAM) role to be assumed
--   when DataBrew runs the job.
describeJobResponse_roleArn :: Lens' DescribeJobResponse (Maybe Text)

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed.
describeJobResponse_jobSample :: Lens' DescribeJobResponse (Maybe JobSample)

-- | The response's http status code.
describeJobResponse_httpStatus :: Lens' DescribeJobResponse Int

-- | The name of the job.
describeJobResponse_name :: Lens' DescribeJobResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeJob.DescribeJob
instance GHC.Show.Show Amazonka.DataBrew.DescribeJob.DescribeJob
instance GHC.Read.Read Amazonka.DataBrew.DescribeJob.DescribeJob
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeJob.DescribeJob
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeJob.DescribeJobResponse
instance GHC.Show.Show Amazonka.DataBrew.DescribeJob.DescribeJobResponse
instance GHC.Read.Read Amazonka.DataBrew.DescribeJob.DescribeJobResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeJob.DescribeJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DescribeJob.DescribeJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeJob.DescribeJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DescribeJob.DescribeJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeJob.DescribeJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DescribeJob.DescribeJob
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DescribeJob.DescribeJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DescribeJob.DescribeJob


-- | Returns the definition of a specific DataBrew dataset.
module Amazonka.DataBrew.DescribeDataset

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | The name of the dataset to be described.
[$sel:name:DescribeDataset'] :: DescribeDataset -> Text

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeDataset'</a>, <a>describeDataset_name</a> - The
--   name of the dataset to be described.
newDescribeDataset :: Text -> DescribeDataset

-- | The name of the dataset to be described.
describeDataset_name :: Lens' DescribeDataset Text

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe POSIX -> Maybe PathOptions -> Maybe POSIX -> Maybe FormatOptions -> Maybe InputFormat -> Maybe Text -> Maybe Text -> Maybe Source -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> Text -> Input -> DescribeDatasetResponse

-- | The date and time that the dataset was last modified.
[$sel:lastModifiedDate:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe POSIX

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
[$sel:pathOptions:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe PathOptions

-- | The date and time that the dataset was created.
[$sel:createDate:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe POSIX
[$sel:formatOptions:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe FormatOptions

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
[$sel:format:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe InputFormat

-- | The identifier (user name) of the user who created the dataset.
[$sel:createdBy:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset.
[$sel:resourceArn:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Text

-- | The location of the data for this dataset, Amazon S3 or the Glue Data
--   Catalog.
[$sel:source:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Source

-- | The identifier (user name) of the user who last modified the dataset.
[$sel:lastModifiedBy:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Text

-- | Metadata tags associated with this dataset.
[$sel:tags:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Int

-- | The name of the dataset.
[$sel:name:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Text
[$sel:input:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Input

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_lastModifiedDate</a> - The date and time
--   that the dataset was last modified.
--   
--   <a>$sel:pathOptions:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_pathOptions</a> - A set of options that
--   defines how DataBrew interprets an Amazon S3 path of the dataset.
--   
--   <a>$sel:createDate:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_createDate</a> - The date and time that the
--   dataset was created.
--   
--   <a>$sel:formatOptions:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_formatOptions</a> - Undocumented member.
--   
--   <a>$sel:format:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_format</a> - The file format of a dataset
--   that is created from an Amazon S3 file or folder.
--   
--   <a>$sel:createdBy:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_createdBy</a> - The identifier (user name)
--   of the user who created the dataset.
--   
--   <a>$sel:resourceArn:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the dataset.
--   
--   <a>$sel:source:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_source</a> - The location of the data for
--   this dataset, Amazon S3 or the Glue Data Catalog.
--   
--   <a>$sel:lastModifiedBy:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the dataset.
--   
--   <a>$sel:tags:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_tags</a> - Metadata tags associated with
--   this dataset.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeDataset'</a>, <a>describeDatasetResponse_name</a>
--   - The name of the dataset.
--   
--   <a>$sel:input:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_input</a> - Undocumented member.
newDescribeDatasetResponse :: Int -> Text -> Input -> DescribeDatasetResponse

-- | The date and time that the dataset was last modified.
describeDatasetResponse_lastModifiedDate :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
describeDatasetResponse_pathOptions :: Lens' DescribeDatasetResponse (Maybe PathOptions)

-- | The date and time that the dataset was created.
describeDatasetResponse_createDate :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | Undocumented member.
describeDatasetResponse_formatOptions :: Lens' DescribeDatasetResponse (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
describeDatasetResponse_format :: Lens' DescribeDatasetResponse (Maybe InputFormat)

-- | The identifier (user name) of the user who created the dataset.
describeDatasetResponse_createdBy :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset.
describeDatasetResponse_resourceArn :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The location of the data for this dataset, Amazon S3 or the Glue Data
--   Catalog.
describeDatasetResponse_source :: Lens' DescribeDatasetResponse (Maybe Source)

-- | The identifier (user name) of the user who last modified the dataset.
describeDatasetResponse_lastModifiedBy :: Lens' DescribeDatasetResponse (Maybe Text)

-- | Metadata tags associated with this dataset.
describeDatasetResponse_tags :: Lens' DescribeDatasetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int

-- | The name of the dataset.
describeDatasetResponse_name :: Lens' DescribeDatasetResponse Text

-- | Undocumented member.
describeDatasetResponse_input :: Lens' DescribeDatasetResponse Input
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance GHC.Show.Show Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance GHC.Read.Read Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance GHC.Generics.Generic Amazonka.DataBrew.DescribeDataset.DescribeDatasetResponse
instance GHC.Show.Show Amazonka.DataBrew.DescribeDataset.DescribeDatasetResponse
instance GHC.Read.Read Amazonka.DataBrew.DescribeDataset.DescribeDatasetResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DescribeDataset.DescribeDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeDataset.DescribeDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DescribeDataset.DescribeDataset
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DescribeDataset.DescribeDataset


-- | Deletes the specified DataBrew schedule.
module Amazonka.DataBrew.DeleteSchedule

-- | <i>See:</i> <a>newDeleteSchedule</a> smart constructor.
data DeleteSchedule
DeleteSchedule' :: Text -> DeleteSchedule

-- | The name of the schedule to be deleted.
[$sel:name:DeleteSchedule'] :: DeleteSchedule -> Text

-- | Create a value of <a>DeleteSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSchedule'</a>, <a>deleteSchedule_name</a> - The
--   name of the schedule to be deleted.
newDeleteSchedule :: Text -> DeleteSchedule

-- | The name of the schedule to be deleted.
deleteSchedule_name :: Lens' DeleteSchedule Text

-- | <i>See:</i> <a>newDeleteScheduleResponse</a> smart constructor.
data DeleteScheduleResponse
DeleteScheduleResponse' :: Int -> Text -> DeleteScheduleResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteScheduleResponse'] :: DeleteScheduleResponse -> Int

-- | The name of the schedule that was deleted.
[$sel:name:DeleteScheduleResponse'] :: DeleteScheduleResponse -> Text

-- | Create a value of <a>DeleteScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScheduleResponse'</a>,
--   <a>deleteScheduleResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DeleteSchedule'</a>, <a>deleteScheduleResponse_name</a> -
--   The name of the schedule that was deleted.
newDeleteScheduleResponse :: Int -> Text -> DeleteScheduleResponse

-- | The response's http status code.
deleteScheduleResponse_httpStatus :: Lens' DeleteScheduleResponse Int

-- | The name of the schedule that was deleted.
deleteScheduleResponse_name :: Lens' DeleteScheduleResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance GHC.Show.Show Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance GHC.Read.Read Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteSchedule.DeleteScheduleResponse
instance GHC.Show.Show Amazonka.DataBrew.DeleteSchedule.DeleteScheduleResponse
instance GHC.Read.Read Amazonka.DataBrew.DeleteSchedule.DeleteScheduleResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteSchedule.DeleteScheduleResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteSchedule.DeleteScheduleResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DeleteSchedule.DeleteSchedule
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DeleteSchedule.DeleteSchedule


-- | Deletes a single version of a DataBrew recipe.
module Amazonka.DataBrew.DeleteRecipeVersion

-- | <i>See:</i> <a>newDeleteRecipeVersion</a> smart constructor.
data DeleteRecipeVersion
DeleteRecipeVersion' :: Text -> Text -> DeleteRecipeVersion

-- | The name of the recipe.
[$sel:name:DeleteRecipeVersion'] :: DeleteRecipeVersion -> Text

-- | The version of the recipe to be deleted. You can specify a numeric
--   versions (<tt>X.Y</tt>) or <tt>LATEST_WORKING</tt>.
--   <tt>LATEST_PUBLISHED</tt> is not supported.
[$sel:recipeVersion:DeleteRecipeVersion'] :: DeleteRecipeVersion -> Text

-- | Create a value of <a>DeleteRecipeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteRecipeVersion'</a>, <a>deleteRecipeVersion_name</a>
--   - The name of the recipe.
--   
--   <a>$sel:recipeVersion:DeleteRecipeVersion'</a>,
--   <a>deleteRecipeVersion_recipeVersion</a> - The version of the recipe
--   to be deleted. You can specify a numeric versions (<tt>X.Y</tt>) or
--   <tt>LATEST_WORKING</tt>. <tt>LATEST_PUBLISHED</tt> is not supported.
newDeleteRecipeVersion :: Text -> Text -> DeleteRecipeVersion

-- | The name of the recipe.
deleteRecipeVersion_name :: Lens' DeleteRecipeVersion Text

-- | The version of the recipe to be deleted. You can specify a numeric
--   versions (<tt>X.Y</tt>) or <tt>LATEST_WORKING</tt>.
--   <tt>LATEST_PUBLISHED</tt> is not supported.
deleteRecipeVersion_recipeVersion :: Lens' DeleteRecipeVersion Text

-- | <i>See:</i> <a>newDeleteRecipeVersionResponse</a> smart constructor.
data DeleteRecipeVersionResponse
DeleteRecipeVersionResponse' :: Int -> Text -> Text -> DeleteRecipeVersionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRecipeVersionResponse'] :: DeleteRecipeVersionResponse -> Int

-- | The name of the recipe that was deleted.
[$sel:name:DeleteRecipeVersionResponse'] :: DeleteRecipeVersionResponse -> Text

-- | The version of the recipe that was deleted.
[$sel:recipeVersion:DeleteRecipeVersionResponse'] :: DeleteRecipeVersionResponse -> Text

-- | Create a value of <a>DeleteRecipeVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRecipeVersionResponse'</a>,
--   <a>deleteRecipeVersionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:DeleteRecipeVersion'</a>,
--   <a>deleteRecipeVersionResponse_name</a> - The name of the recipe that
--   was deleted.
--   
--   <a>$sel:recipeVersion:DeleteRecipeVersion'</a>,
--   <a>deleteRecipeVersionResponse_recipeVersion</a> - The version of the
--   recipe that was deleted.
newDeleteRecipeVersionResponse :: Int -> Text -> Text -> DeleteRecipeVersionResponse

-- | The response's http status code.
deleteRecipeVersionResponse_httpStatus :: Lens' DeleteRecipeVersionResponse Int

-- | The name of the recipe that was deleted.
deleteRecipeVersionResponse_name :: Lens' DeleteRecipeVersionResponse Text

-- | The version of the recipe that was deleted.
deleteRecipeVersionResponse_recipeVersion :: Lens' DeleteRecipeVersionResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance GHC.Show.Show Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance GHC.Read.Read Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersionResponse
instance GHC.Show.Show Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersionResponse
instance GHC.Read.Read Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersionResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DeleteRecipeVersion.DeleteRecipeVersion


-- | Deletes an existing DataBrew project.
module Amazonka.DataBrew.DeleteProject

-- | <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | The name of the project to be deleted.
[$sel:name:DeleteProject'] :: DeleteProject -> Text

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteProject'</a>, <a>deleteProject_name</a> - The name
--   of the project to be deleted.
newDeleteProject :: Text -> DeleteProject

-- | The name of the project to be deleted.
deleteProject_name :: Lens' DeleteProject Text

-- | <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> Text -> DeleteProjectResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteProjectResponse'] :: DeleteProjectResponse -> Int

-- | The name of the project that you deleted.
[$sel:name:DeleteProjectResponse'] :: DeleteProjectResponse -> Text

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DeleteProject'</a>, <a>deleteProjectResponse_name</a> -
--   The name of the project that you deleted.
newDeleteProjectResponse :: Int -> Text -> DeleteProjectResponse

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int

-- | The name of the project that you deleted.
deleteProjectResponse_name :: Lens' DeleteProjectResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteProject.DeleteProject
instance GHC.Show.Show Amazonka.DataBrew.DeleteProject.DeleteProject
instance GHC.Read.Read Amazonka.DataBrew.DeleteProject.DeleteProject
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteProject.DeleteProject
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteProject.DeleteProjectResponse
instance GHC.Show.Show Amazonka.DataBrew.DeleteProject.DeleteProjectResponse
instance GHC.Read.Read Amazonka.DataBrew.DeleteProject.DeleteProjectResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteProject.DeleteProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteProject.DeleteProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteProject.DeleteProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DeleteProject.DeleteProject
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DeleteProject.DeleteProject
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DeleteProject.DeleteProject


-- | Deletes the specified DataBrew job.
module Amazonka.DataBrew.DeleteJob

-- | <i>See:</i> <a>newDeleteJob</a> smart constructor.
data DeleteJob
DeleteJob' :: Text -> DeleteJob

-- | The name of the job to be deleted.
[$sel:name:DeleteJob'] :: DeleteJob -> Text

-- | Create a value of <a>DeleteJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteJob'</a>, <a>deleteJob_name</a> - The name of the
--   job to be deleted.
newDeleteJob :: Text -> DeleteJob

-- | The name of the job to be deleted.
deleteJob_name :: Lens' DeleteJob Text

-- | <i>See:</i> <a>newDeleteJobResponse</a> smart constructor.
data DeleteJobResponse
DeleteJobResponse' :: Int -> Text -> DeleteJobResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteJobResponse'] :: DeleteJobResponse -> Int

-- | The name of the job that you deleted.
[$sel:name:DeleteJobResponse'] :: DeleteJobResponse -> Text

-- | Create a value of <a>DeleteJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteJobResponse'</a>,
--   <a>deleteJobResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:name:DeleteJob'</a>, <a>deleteJobResponse_name</a> - The name
--   of the job that you deleted.
newDeleteJobResponse :: Int -> Text -> DeleteJobResponse

-- | The response's http status code.
deleteJobResponse_httpStatus :: Lens' DeleteJobResponse Int

-- | The name of the job that you deleted.
deleteJobResponse_name :: Lens' DeleteJobResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteJob.DeleteJob
instance GHC.Show.Show Amazonka.DataBrew.DeleteJob.DeleteJob
instance GHC.Read.Read Amazonka.DataBrew.DeleteJob.DeleteJob
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteJob.DeleteJob
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteJob.DeleteJobResponse
instance GHC.Show.Show Amazonka.DataBrew.DeleteJob.DeleteJobResponse
instance GHC.Read.Read Amazonka.DataBrew.DeleteJob.DeleteJobResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteJob.DeleteJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DeleteJob.DeleteJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteJob.DeleteJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DeleteJob.DeleteJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteJob.DeleteJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DeleteJob.DeleteJob
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DeleteJob.DeleteJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DeleteJob.DeleteJob


-- | Deletes a dataset from DataBrew.
module Amazonka.DataBrew.DeleteDataset

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | The name of the dataset to be deleted.
[$sel:name:DeleteDataset'] :: DeleteDataset -> Text

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteDataset'</a>, <a>deleteDataset_name</a> - The name
--   of the dataset to be deleted.
newDeleteDataset :: Text -> DeleteDataset

-- | The name of the dataset to be deleted.
deleteDataset_name :: Lens' DeleteDataset Text

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: Int -> Text -> DeleteDatasetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDatasetResponse'] :: DeleteDatasetResponse -> Int

-- | The name of the dataset that you deleted.
[$sel:name:DeleteDatasetResponse'] :: DeleteDatasetResponse -> Text

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDatasetResponse'</a>,
--   <a>deleteDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DeleteDataset'</a>, <a>deleteDatasetResponse_name</a> -
--   The name of the dataset that you deleted.
newDeleteDatasetResponse :: Int -> Text -> DeleteDatasetResponse

-- | The response's http status code.
deleteDatasetResponse_httpStatus :: Lens' DeleteDatasetResponse Int

-- | The name of the dataset that you deleted.
deleteDatasetResponse_name :: Lens' DeleteDatasetResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance GHC.Show.Show Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance GHC.Read.Read Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance GHC.Generics.Generic Amazonka.DataBrew.DeleteDataset.DeleteDatasetResponse
instance GHC.Show.Show Amazonka.DataBrew.DeleteDataset.DeleteDatasetResponse
instance GHC.Read.Read Amazonka.DataBrew.DeleteDataset.DeleteDatasetResponse
instance GHC.Classes.Eq Amazonka.DataBrew.DeleteDataset.DeleteDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteDataset.DeleteDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.DeleteDataset.DeleteDataset
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.DeleteDataset.DeleteDataset


-- | Creates a new schedule for one or more DataBrew jobs. Jobs can be run
--   at a specific date and time, or at regular intervals.
module Amazonka.DataBrew.CreateSchedule

-- | <i>See:</i> <a>newCreateSchedule</a> smart constructor.
data CreateSchedule
CreateSchedule' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Text -> Text -> CreateSchedule

-- | The name or names of one or more jobs to be run.
[$sel:jobNames:CreateSchedule'] :: CreateSchedule -> Maybe [Text]

-- | Metadata tags to apply to this schedule.
[$sel:tags:CreateSchedule'] :: CreateSchedule -> Maybe (HashMap Text Text)

-- | The date or dates and time or times when the jobs are to be run. For
--   more information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
[$sel:cronExpression:CreateSchedule'] :: CreateSchedule -> Text

-- | A unique name for the schedule. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
[$sel:name:CreateSchedule'] :: CreateSchedule -> Text

-- | Create a value of <a>CreateSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobNames:CreateSchedule'</a>, <a>createSchedule_jobNames</a> -
--   The name or names of one or more jobs to be run.
--   
--   <a>$sel:tags:CreateSchedule'</a>, <a>createSchedule_tags</a> -
--   Metadata tags to apply to this schedule.
--   
--   <a>$sel:cronExpression:CreateSchedule'</a>,
--   <a>createSchedule_cronExpression</a> - The date or dates and time or
--   times when the jobs are to be run. For more information, see <a>Cron
--   expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:name:CreateSchedule'</a>, <a>createSchedule_name</a> - A
--   unique name for the schedule. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
newCreateSchedule :: Text -> Text -> CreateSchedule

-- | The name or names of one or more jobs to be run.
createSchedule_jobNames :: Lens' CreateSchedule (Maybe [Text])

-- | Metadata tags to apply to this schedule.
createSchedule_tags :: Lens' CreateSchedule (Maybe (HashMap Text Text))

-- | The date or dates and time or times when the jobs are to be run. For
--   more information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
createSchedule_cronExpression :: Lens' CreateSchedule Text

-- | A unique name for the schedule. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createSchedule_name :: Lens' CreateSchedule Text

-- | <i>See:</i> <a>newCreateScheduleResponse</a> smart constructor.
data CreateScheduleResponse
CreateScheduleResponse' :: Int -> Text -> CreateScheduleResponse

-- | The response's http status code.
[$sel:httpStatus:CreateScheduleResponse'] :: CreateScheduleResponse -> Int

-- | The name of the schedule that was created.
[$sel:name:CreateScheduleResponse'] :: CreateScheduleResponse -> Text

-- | Create a value of <a>CreateScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateScheduleResponse'</a>,
--   <a>createScheduleResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateSchedule'</a>, <a>createScheduleResponse_name</a> -
--   The name of the schedule that was created.
newCreateScheduleResponse :: Int -> Text -> CreateScheduleResponse

-- | The response's http status code.
createScheduleResponse_httpStatus :: Lens' CreateScheduleResponse Int

-- | The name of the schedule that was created.
createScheduleResponse_name :: Lens' CreateScheduleResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance GHC.Show.Show Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance GHC.Read.Read Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance GHC.Classes.Eq Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance GHC.Generics.Generic Amazonka.DataBrew.CreateSchedule.CreateScheduleResponse
instance GHC.Show.Show Amazonka.DataBrew.CreateSchedule.CreateScheduleResponse
instance GHC.Read.Read Amazonka.DataBrew.CreateSchedule.CreateScheduleResponse
instance GHC.Classes.Eq Amazonka.DataBrew.CreateSchedule.CreateScheduleResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateSchedule.CreateScheduleResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.CreateSchedule.CreateSchedule
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.CreateSchedule.CreateSchedule


-- | Creates a new job to transform input data, using steps defined in an
--   existing Glue DataBrew recipe
module Amazonka.DataBrew.CreateRecipeJob

-- | <i>See:</i> <a>newCreateRecipeJob</a> smart constructor.
data CreateRecipeJob
CreateRecipeJob' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe RecipeReference -> Maybe (NonEmpty DatabaseOutput) -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe LogSubscription -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe (HashMap Text Text) -> Text -> Text -> CreateRecipeJob

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:CreateRecipeJob'] :: CreateRecipeJob -> Maybe (NonEmpty DataCatalogOutput)
[$sel:recipeReference:CreateRecipeJob'] :: CreateRecipeJob -> Maybe RecipeReference

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write to.
[$sel:databaseOutputs:CreateRecipeJob'] :: CreateRecipeJob -> Maybe (NonEmpty DatabaseOutput)

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
[$sel:encryptionMode:CreateRecipeJob'] :: CreateRecipeJob -> Maybe EncryptionMode

-- | One or more artifacts that represent the output from running the job.
[$sel:outputs:CreateRecipeJob'] :: CreateRecipeJob -> Maybe (NonEmpty Output)

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
[$sel:logSubscription:CreateRecipeJob'] :: CreateRecipeJob -> Maybe LogSubscription

-- | Either the name of an existing project, or a combination of a recipe
--   and a dataset to associate with the recipe.
[$sel:projectName:CreateRecipeJob'] :: CreateRecipeJob -> Maybe Text

-- | The maximum number of times to retry the job after a job run fails.
[$sel:maxRetries:CreateRecipeJob'] :: CreateRecipeJob -> Maybe Natural

-- | The name of the dataset that this job processes.
[$sel:datasetName:CreateRecipeJob'] :: CreateRecipeJob -> Maybe Text

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
[$sel:encryptionKeyArn:CreateRecipeJob'] :: CreateRecipeJob -> Maybe Text

-- | The maximum number of nodes that DataBrew can consume when the job
--   processes data.
[$sel:maxCapacity:CreateRecipeJob'] :: CreateRecipeJob -> Maybe Int

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
[$sel:timeout:CreateRecipeJob'] :: CreateRecipeJob -> Maybe Natural

-- | Metadata tags to apply to this job.
[$sel:tags:CreateRecipeJob'] :: CreateRecipeJob -> Maybe (HashMap Text Text)

-- | A unique name for the job. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
[$sel:name:CreateRecipeJob'] :: CreateRecipeJob -> Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
[$sel:roleArn:CreateRecipeJob'] :: CreateRecipeJob -> Text

-- | Create a value of <a>CreateRecipeJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:CreateRecipeJob'</a>,
--   <a>createRecipeJob_dataCatalogOutputs</a> - One or more artifacts that
--   represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:recipeReference:CreateRecipeJob'</a>,
--   <a>createRecipeJob_recipeReference</a> - Undocumented member.
--   
--   <a>$sel:databaseOutputs:CreateRecipeJob'</a>,
--   <a>createRecipeJob_databaseOutputs</a> - Represents a list of JDBC
--   database output objects which defines the output destination for a
--   DataBrew recipe job to write to.
--   
--   <a>$sel:encryptionMode:CreateRecipeJob'</a>,
--   <a>createRecipeJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:CreateRecipeJob'</a>, <a>createRecipeJob_outputs</a> -
--   One or more artifacts that represent the output from running the job.
--   
--   <a>$sel:logSubscription:CreateRecipeJob'</a>,
--   <a>createRecipeJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:projectName:CreateRecipeJob'</a>,
--   <a>createRecipeJob_projectName</a> - Either the name of an existing
--   project, or a combination of a recipe and a dataset to associate with
--   the recipe.
--   
--   <a>$sel:maxRetries:CreateRecipeJob'</a>,
--   <a>createRecipeJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:datasetName:CreateRecipeJob'</a>,
--   <a>createRecipeJob_datasetName</a> - The name of the dataset that this
--   job processes.
--   
--   <a>$sel:encryptionKeyArn:CreateRecipeJob'</a>,
--   <a>createRecipeJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:CreateRecipeJob'</a>,
--   <a>createRecipeJob_maxCapacity</a> - The maximum number of nodes that
--   DataBrew can consume when the job processes data.
--   
--   <a>$sel:timeout:CreateRecipeJob'</a>, <a>createRecipeJob_timeout</a> -
--   The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:CreateRecipeJob'</a>, <a>createRecipeJob_tags</a> -
--   Metadata tags to apply to this job.
--   
--   <a>$sel:name:CreateRecipeJob'</a>, <a>createRecipeJob_name</a> - A
--   unique name for the job. Valid characters are alphanumeric (A-Z, a-z,
--   0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:roleArn:CreateRecipeJob'</a>, <a>createRecipeJob_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newCreateRecipeJob :: Text -> Text -> CreateRecipeJob

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
createRecipeJob_dataCatalogOutputs :: Lens' CreateRecipeJob (Maybe (NonEmpty DataCatalogOutput))

-- | Undocumented member.
createRecipeJob_recipeReference :: Lens' CreateRecipeJob (Maybe RecipeReference)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write to.
createRecipeJob_databaseOutputs :: Lens' CreateRecipeJob (Maybe (NonEmpty DatabaseOutput))

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
createRecipeJob_encryptionMode :: Lens' CreateRecipeJob (Maybe EncryptionMode)

-- | One or more artifacts that represent the output from running the job.
createRecipeJob_outputs :: Lens' CreateRecipeJob (Maybe (NonEmpty Output))

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
createRecipeJob_logSubscription :: Lens' CreateRecipeJob (Maybe LogSubscription)

-- | Either the name of an existing project, or a combination of a recipe
--   and a dataset to associate with the recipe.
createRecipeJob_projectName :: Lens' CreateRecipeJob (Maybe Text)

-- | The maximum number of times to retry the job after a job run fails.
createRecipeJob_maxRetries :: Lens' CreateRecipeJob (Maybe Natural)

-- | The name of the dataset that this job processes.
createRecipeJob_datasetName :: Lens' CreateRecipeJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
createRecipeJob_encryptionKeyArn :: Lens' CreateRecipeJob (Maybe Text)

-- | The maximum number of nodes that DataBrew can consume when the job
--   processes data.
createRecipeJob_maxCapacity :: Lens' CreateRecipeJob (Maybe Int)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
createRecipeJob_timeout :: Lens' CreateRecipeJob (Maybe Natural)

-- | Metadata tags to apply to this job.
createRecipeJob_tags :: Lens' CreateRecipeJob (Maybe (HashMap Text Text))

-- | A unique name for the job. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
createRecipeJob_name :: Lens' CreateRecipeJob Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
createRecipeJob_roleArn :: Lens' CreateRecipeJob Text

-- | <i>See:</i> <a>newCreateRecipeJobResponse</a> smart constructor.
data CreateRecipeJobResponse
CreateRecipeJobResponse' :: Int -> Text -> CreateRecipeJobResponse

-- | The response's http status code.
[$sel:httpStatus:CreateRecipeJobResponse'] :: CreateRecipeJobResponse -> Int

-- | The name of the job that you created.
[$sel:name:CreateRecipeJobResponse'] :: CreateRecipeJobResponse -> Text

-- | Create a value of <a>CreateRecipeJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRecipeJobResponse'</a>,
--   <a>createRecipeJobResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateRecipeJob'</a>, <a>createRecipeJobResponse_name</a>
--   - The name of the job that you created.
newCreateRecipeJobResponse :: Int -> Text -> CreateRecipeJobResponse

-- | The response's http status code.
createRecipeJobResponse_httpStatus :: Lens' CreateRecipeJobResponse Int

-- | The name of the job that you created.
createRecipeJobResponse_name :: Lens' CreateRecipeJobResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance GHC.Show.Show Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance GHC.Read.Read Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance GHC.Classes.Eq Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance GHC.Generics.Generic Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJobResponse
instance GHC.Show.Show Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJobResponse
instance GHC.Read.Read Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJobResponse
instance GHC.Classes.Eq Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.CreateRecipeJob.CreateRecipeJob


-- | Creates a new DataBrew recipe.
module Amazonka.DataBrew.CreateRecipe

-- | <i>See:</i> <a>newCreateRecipe</a> smart constructor.
data CreateRecipe
CreateRecipe' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> [RecipeStep] -> CreateRecipe

-- | A description for the recipe.
[$sel:description:CreateRecipe'] :: CreateRecipe -> Maybe Text

-- | Metadata tags to apply to this recipe.
[$sel:tags:CreateRecipe'] :: CreateRecipe -> Maybe (HashMap Text Text)

-- | A unique name for the recipe. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
[$sel:name:CreateRecipe'] :: CreateRecipe -> Text

-- | An array containing the steps to be performed by the recipe. Each
--   recipe step consists of one recipe action and (optionally) an array of
--   condition expressions.
[$sel:steps:CreateRecipe'] :: CreateRecipe -> [RecipeStep]

-- | Create a value of <a>CreateRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRecipe'</a>, <a>createRecipe_description</a>
--   - A description for the recipe.
--   
--   <a>$sel:tags:CreateRecipe'</a>, <a>createRecipe_tags</a> - Metadata
--   tags to apply to this recipe.
--   
--   <a>$sel:name:CreateRecipe'</a>, <a>createRecipe_name</a> - A unique
--   name for the recipe. Valid characters are alphanumeric (A-Z, a-z,
--   0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:steps:CreateRecipe'</a>, <a>createRecipe_steps</a> - An array
--   containing the steps to be performed by the recipe. Each recipe step
--   consists of one recipe action and (optionally) an array of condition
--   expressions.
newCreateRecipe :: Text -> CreateRecipe

-- | A description for the recipe.
createRecipe_description :: Lens' CreateRecipe (Maybe Text)

-- | Metadata tags to apply to this recipe.
createRecipe_tags :: Lens' CreateRecipe (Maybe (HashMap Text Text))

-- | A unique name for the recipe. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
createRecipe_name :: Lens' CreateRecipe Text

-- | An array containing the steps to be performed by the recipe. Each
--   recipe step consists of one recipe action and (optionally) an array of
--   condition expressions.
createRecipe_steps :: Lens' CreateRecipe [RecipeStep]

-- | <i>See:</i> <a>newCreateRecipeResponse</a> smart constructor.
data CreateRecipeResponse
CreateRecipeResponse' :: Int -> Text -> CreateRecipeResponse

-- | The response's http status code.
[$sel:httpStatus:CreateRecipeResponse'] :: CreateRecipeResponse -> Int

-- | The name of the recipe that you created.
[$sel:name:CreateRecipeResponse'] :: CreateRecipeResponse -> Text

-- | Create a value of <a>CreateRecipeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRecipeResponse'</a>,
--   <a>createRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateRecipe'</a>, <a>createRecipeResponse_name</a> - The
--   name of the recipe that you created.
newCreateRecipeResponse :: Int -> Text -> CreateRecipeResponse

-- | The response's http status code.
createRecipeResponse_httpStatus :: Lens' CreateRecipeResponse Int

-- | The name of the recipe that you created.
createRecipeResponse_name :: Lens' CreateRecipeResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance GHC.Show.Show Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance GHC.Read.Read Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance GHC.Classes.Eq Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance GHC.Generics.Generic Amazonka.DataBrew.CreateRecipe.CreateRecipeResponse
instance GHC.Show.Show Amazonka.DataBrew.CreateRecipe.CreateRecipeResponse
instance GHC.Read.Read Amazonka.DataBrew.CreateRecipe.CreateRecipeResponse
instance GHC.Classes.Eq Amazonka.DataBrew.CreateRecipe.CreateRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateRecipe.CreateRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.CreateRecipe.CreateRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.CreateRecipe.CreateRecipe


-- | Creates a new DataBrew project.
module Amazonka.DataBrew.CreateProject

-- | <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe Sample -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> CreateProject
[$sel:sample:CreateProject'] :: CreateProject -> Maybe Sample

-- | Metadata tags to apply to this project.
[$sel:tags:CreateProject'] :: CreateProject -> Maybe (HashMap Text Text)

-- | The name of an existing dataset to associate this project with.
[$sel:datasetName:CreateProject'] :: CreateProject -> Text

-- | A unique name for the new project. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
[$sel:name:CreateProject'] :: CreateProject -> Text

-- | The name of an existing recipe to associate with the project.
[$sel:recipeName:CreateProject'] :: CreateProject -> Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed for this request.
[$sel:roleArn:CreateProject'] :: CreateProject -> Text

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sample:CreateProject'</a>, <a>createProject_sample</a> -
--   Undocumented member.
--   
--   <a>$sel:tags:CreateProject'</a>, <a>createProject_tags</a> - Metadata
--   tags to apply to this project.
--   
--   <a>$sel:datasetName:CreateProject'</a>,
--   <a>createProject_datasetName</a> - The name of an existing dataset to
--   associate this project with.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProject_name</a> - A unique
--   name for the new project. Valid characters are alphanumeric (A-Z, a-z,
--   0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:recipeName:CreateProject'</a>, <a>createProject_recipeName</a>
--   - The name of an existing recipe to associate with the project.
--   
--   <a>$sel:roleArn:CreateProject'</a>, <a>createProject_roleArn</a> - The
--   Amazon Resource Name (ARN) of the Identity and Access Management (IAM)
--   role to be assumed for this request.
newCreateProject :: Text -> Text -> Text -> Text -> CreateProject

-- | Undocumented member.
createProject_sample :: Lens' CreateProject (Maybe Sample)

-- | Metadata tags to apply to this project.
createProject_tags :: Lens' CreateProject (Maybe (HashMap Text Text))

-- | The name of an existing dataset to associate this project with.
createProject_datasetName :: Lens' CreateProject Text

-- | A unique name for the new project. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createProject_name :: Lens' CreateProject Text

-- | The name of an existing recipe to associate with the project.
createProject_recipeName :: Lens' CreateProject Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed for this request.
createProject_roleArn :: Lens' CreateProject Text

-- | <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Int -> Text -> CreateProjectResponse

-- | The response's http status code.
[$sel:httpStatus:CreateProjectResponse'] :: CreateProjectResponse -> Int

-- | The name of the project that you created.
[$sel:name:CreateProjectResponse'] :: CreateProjectResponse -> Text

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProjectResponse_name</a> -
--   The name of the project that you created.
newCreateProjectResponse :: Int -> Text -> CreateProjectResponse

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int

-- | The name of the project that you created.
createProjectResponse_name :: Lens' CreateProjectResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.CreateProject.CreateProject
instance GHC.Show.Show Amazonka.DataBrew.CreateProject.CreateProject
instance GHC.Read.Read Amazonka.DataBrew.CreateProject.CreateProject
instance GHC.Classes.Eq Amazonka.DataBrew.CreateProject.CreateProject
instance GHC.Generics.Generic Amazonka.DataBrew.CreateProject.CreateProjectResponse
instance GHC.Show.Show Amazonka.DataBrew.CreateProject.CreateProjectResponse
instance GHC.Read.Read Amazonka.DataBrew.CreateProject.CreateProjectResponse
instance GHC.Classes.Eq Amazonka.DataBrew.CreateProject.CreateProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.CreateProject.CreateProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateProject.CreateProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.CreateProject.CreateProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateProject.CreateProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.CreateProject.CreateProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.CreateProject.CreateProject
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.CreateProject.CreateProject
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.CreateProject.CreateProject


-- | Creates a new job to analyze a dataset and create its data profile.
module Amazonka.DataBrew.CreateProfileJob

-- | <i>See:</i> <a>newCreateProfileJob</a> smart constructor.
data CreateProfileJob
CreateProfileJob' :: Maybe EncryptionMode -> Maybe LogSubscription -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe ProfileConfiguration -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe JobSample -> Text -> Text -> S3Location -> Text -> CreateProfileJob

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - <tt>SSE-KMS</tt> - Server-side encryption with
--   KMS-managed keys.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
[$sel:encryptionMode:CreateProfileJob'] :: CreateProfileJob -> Maybe EncryptionMode

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
[$sel:logSubscription:CreateProfileJob'] :: CreateProfileJob -> Maybe LogSubscription

-- | The maximum number of times to retry the job after a job run fails.
[$sel:maxRetries:CreateProfileJob'] :: CreateProfileJob -> Maybe Natural

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
[$sel:encryptionKeyArn:CreateProfileJob'] :: CreateProfileJob -> Maybe Text

-- | The maximum number of nodes that DataBrew can use when the job
--   processes data.
[$sel:maxCapacity:CreateProfileJob'] :: CreateProfileJob -> Maybe Int

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
[$sel:configuration:CreateProfileJob'] :: CreateProfileJob -> Maybe ProfileConfiguration

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
[$sel:timeout:CreateProfileJob'] :: CreateProfileJob -> Maybe Natural

-- | Metadata tags to apply to this job.
[$sel:tags:CreateProfileJob'] :: CreateProfileJob -> Maybe (HashMap Text Text)

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed. If a JobSample value
--   is not provided, the default value will be used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
[$sel:jobSample:CreateProfileJob'] :: CreateProfileJob -> Maybe JobSample

-- | The name of the dataset that this job is to act upon.
[$sel:datasetName:CreateProfileJob'] :: CreateProfileJob -> Text

-- | The name of the job to be created. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
[$sel:name:CreateProfileJob'] :: CreateProfileJob -> Text
[$sel:outputLocation:CreateProfileJob'] :: CreateProfileJob -> S3Location

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
[$sel:roleArn:CreateProfileJob'] :: CreateProfileJob -> Text

-- | Create a value of <a>CreateProfileJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionMode:CreateProfileJob'</a>,
--   <a>createProfileJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - <tt>SSE-KMS</tt> - Server-side encryption with
--   KMS-managed keys.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:logSubscription:CreateProfileJob'</a>,
--   <a>createProfileJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:maxRetries:CreateProfileJob'</a>,
--   <a>createProfileJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:encryptionKeyArn:CreateProfileJob'</a>,
--   <a>createProfileJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:CreateProfileJob'</a>,
--   <a>createProfileJob_maxCapacity</a> - The maximum number of nodes that
--   DataBrew can use when the job processes data.
--   
--   <a>$sel:configuration:CreateProfileJob'</a>,
--   <a>createProfileJob_configuration</a> - Configuration for profile
--   jobs. Used to select columns, do evaluations, and override default
--   parameters of evaluations. When configuration is null, the profile job
--   will run with default settings.
--   
--   <a>$sel:timeout:CreateProfileJob'</a>, <a>createProfileJob_timeout</a>
--   - The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:CreateProfileJob'</a>, <a>createProfileJob_tags</a> -
--   Metadata tags to apply to this job.
--   
--   <a>$sel:jobSample:CreateProfileJob'</a>,
--   <a>createProfileJob_jobSample</a> - Sample configuration for profile
--   jobs only. Determines the number of rows on which the profile job will
--   be executed. If a JobSample value is not provided, the default value
--   will be used. The default value is CUSTOM_ROWS for the mode parameter
--   and 20000 for the size parameter.
--   
--   <a>$sel:datasetName:CreateProfileJob'</a>,
--   <a>createProfileJob_datasetName</a> - The name of the dataset that
--   this job is to act upon.
--   
--   <a>$sel:name:CreateProfileJob'</a>, <a>createProfileJob_name</a> - The
--   name of the job to be created. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:outputLocation:CreateProfileJob'</a>,
--   <a>createProfileJob_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:roleArn:CreateProfileJob'</a>, <a>createProfileJob_roleArn</a>
--   - The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newCreateProfileJob :: Text -> Text -> S3Location -> Text -> CreateProfileJob

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - <tt>SSE-KMS</tt> - Server-side encryption with
--   KMS-managed keys.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
createProfileJob_encryptionMode :: Lens' CreateProfileJob (Maybe EncryptionMode)

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
createProfileJob_logSubscription :: Lens' CreateProfileJob (Maybe LogSubscription)

-- | The maximum number of times to retry the job after a job run fails.
createProfileJob_maxRetries :: Lens' CreateProfileJob (Maybe Natural)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
createProfileJob_encryptionKeyArn :: Lens' CreateProfileJob (Maybe Text)

-- | The maximum number of nodes that DataBrew can use when the job
--   processes data.
createProfileJob_maxCapacity :: Lens' CreateProfileJob (Maybe Int)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
createProfileJob_configuration :: Lens' CreateProfileJob (Maybe ProfileConfiguration)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
createProfileJob_timeout :: Lens' CreateProfileJob (Maybe Natural)

-- | Metadata tags to apply to this job.
createProfileJob_tags :: Lens' CreateProfileJob (Maybe (HashMap Text Text))

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed. If a JobSample value
--   is not provided, the default value will be used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
createProfileJob_jobSample :: Lens' CreateProfileJob (Maybe JobSample)

-- | The name of the dataset that this job is to act upon.
createProfileJob_datasetName :: Lens' CreateProfileJob Text

-- | The name of the job to be created. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createProfileJob_name :: Lens' CreateProfileJob Text

-- | Undocumented member.
createProfileJob_outputLocation :: Lens' CreateProfileJob S3Location

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
createProfileJob_roleArn :: Lens' CreateProfileJob Text

-- | <i>See:</i> <a>newCreateProfileJobResponse</a> smart constructor.
data CreateProfileJobResponse
CreateProfileJobResponse' :: Int -> Text -> CreateProfileJobResponse

-- | The response's http status code.
[$sel:httpStatus:CreateProfileJobResponse'] :: CreateProfileJobResponse -> Int

-- | The name of the job that was created.
[$sel:name:CreateProfileJobResponse'] :: CreateProfileJobResponse -> Text

-- | Create a value of <a>CreateProfileJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateProfileJobResponse'</a>,
--   <a>createProfileJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:CreateProfileJob'</a>,
--   <a>createProfileJobResponse_name</a> - The name of the job that was
--   created.
newCreateProfileJobResponse :: Int -> Text -> CreateProfileJobResponse

-- | The response's http status code.
createProfileJobResponse_httpStatus :: Lens' CreateProfileJobResponse Int

-- | The name of the job that was created.
createProfileJobResponse_name :: Lens' CreateProfileJobResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance GHC.Show.Show Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance GHC.Read.Read Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance GHC.Classes.Eq Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance GHC.Generics.Generic Amazonka.DataBrew.CreateProfileJob.CreateProfileJobResponse
instance GHC.Show.Show Amazonka.DataBrew.CreateProfileJob.CreateProfileJobResponse
instance GHC.Read.Read Amazonka.DataBrew.CreateProfileJob.CreateProfileJobResponse
instance GHC.Classes.Eq Amazonka.DataBrew.CreateProfileJob.CreateProfileJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateProfileJob.CreateProfileJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.CreateProfileJob.CreateProfileJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.CreateProfileJob.CreateProfileJob


-- | Creates a new DataBrew dataset.
module Amazonka.DataBrew.CreateDataset

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Maybe PathOptions -> Maybe FormatOptions -> Maybe InputFormat -> Maybe (HashMap Text Text) -> Text -> Input -> CreateDataset

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
[$sel:pathOptions:CreateDataset'] :: CreateDataset -> Maybe PathOptions
[$sel:formatOptions:CreateDataset'] :: CreateDataset -> Maybe FormatOptions

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
[$sel:format:CreateDataset'] :: CreateDataset -> Maybe InputFormat

-- | Metadata tags to apply to this dataset.
[$sel:tags:CreateDataset'] :: CreateDataset -> Maybe (HashMap Text Text)

-- | The name of the dataset to be created. Valid characters are
--   alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
[$sel:name:CreateDataset'] :: CreateDataset -> Text
[$sel:input:CreateDataset'] :: CreateDataset -> Input

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathOptions:CreateDataset'</a>,
--   <a>createDataset_pathOptions</a> - A set of options that defines how
--   DataBrew interprets an Amazon S3 path of the dataset.
--   
--   <a>$sel:formatOptions:CreateDataset'</a>,
--   <a>createDataset_formatOptions</a> - Undocumented member.
--   
--   <a>$sel:format:CreateDataset'</a>, <a>createDataset_format</a> - The
--   file format of a dataset that is created from an Amazon S3 file or
--   folder.
--   
--   <a>$sel:tags:CreateDataset'</a>, <a>createDataset_tags</a> - Metadata
--   tags to apply to this dataset.
--   
--   <a>$sel:name:CreateDataset'</a>, <a>createDataset_name</a> - The name
--   of the dataset to be created. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:input:CreateDataset'</a>, <a>createDataset_input</a> -
--   Undocumented member.
newCreateDataset :: Text -> Input -> CreateDataset

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
createDataset_pathOptions :: Lens' CreateDataset (Maybe PathOptions)

-- | Undocumented member.
createDataset_formatOptions :: Lens' CreateDataset (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
createDataset_format :: Lens' CreateDataset (Maybe InputFormat)

-- | Metadata tags to apply to this dataset.
createDataset_tags :: Lens' CreateDataset (Maybe (HashMap Text Text))

-- | The name of the dataset to be created. Valid characters are
--   alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createDataset_name :: Lens' CreateDataset Text

-- | Undocumented member.
createDataset_input :: Lens' CreateDataset Input

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Int -> Text -> CreateDatasetResponse

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetResponse'] :: CreateDatasetResponse -> Int

-- | The name of the dataset that you created.
[$sel:name:CreateDatasetResponse'] :: CreateDatasetResponse -> Text

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateDataset'</a>, <a>createDatasetResponse_name</a> -
--   The name of the dataset that you created.
newCreateDatasetResponse :: Int -> Text -> CreateDatasetResponse

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int

-- | The name of the dataset that you created.
createDatasetResponse_name :: Lens' CreateDatasetResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.CreateDataset.CreateDataset
instance GHC.Show.Show Amazonka.DataBrew.CreateDataset.CreateDataset
instance GHC.Read.Read Amazonka.DataBrew.CreateDataset.CreateDataset
instance GHC.Classes.Eq Amazonka.DataBrew.CreateDataset.CreateDataset
instance GHC.Generics.Generic Amazonka.DataBrew.CreateDataset.CreateDatasetResponse
instance GHC.Show.Show Amazonka.DataBrew.CreateDataset.CreateDatasetResponse
instance GHC.Read.Read Amazonka.DataBrew.CreateDataset.CreateDatasetResponse
instance GHC.Classes.Eq Amazonka.DataBrew.CreateDataset.CreateDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateDataset.CreateDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.CreateDataset.CreateDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.CreateDataset.CreateDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.CreateDataset.CreateDataset
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.CreateDataset.CreateDataset
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.CreateDataset.CreateDataset


-- | Deletes one or more versions of a recipe at a time.
--   
--   The entire request will be rejected if:
--   
--   <ul>
--   <li>The recipe does not exist.</li>
--   <li>There is an invalid version identifier in the list of
--   versions.</li>
--   <li>The version list is empty.</li>
--   <li>The version list size exceeds 50.</li>
--   <li>The version list contains duplicate entries.</li>
--   </ul>
--   
--   The request will complete successfully, but with partial failures, if:
--   
--   <ul>
--   <li>A version does not exist.</li>
--   <li>A version is being used by a job.</li>
--   <li>You specify <tt>LATEST_WORKING</tt>, but it's being used by a
--   project.</li>
--   <li>The version fails to be deleted.</li>
--   </ul>
--   
--   The <tt>LATEST_WORKING</tt> version will only be deleted if the recipe
--   has no other versions. If you try to delete <tt>LATEST_WORKING</tt>
--   while other versions exist (or if they can't be deleted), then
--   <tt>LATEST_WORKING</tt> will be listed as partial failure in the
--   response.
module Amazonka.DataBrew.BatchDeleteRecipeVersion

-- | <i>See:</i> <a>newBatchDeleteRecipeVersion</a> smart constructor.
data BatchDeleteRecipeVersion
BatchDeleteRecipeVersion' :: Text -> NonEmpty Text -> BatchDeleteRecipeVersion

-- | The name of the recipe whose versions are to be deleted.
[$sel:name:BatchDeleteRecipeVersion'] :: BatchDeleteRecipeVersion -> Text

-- | An array of version identifiers, for the recipe versions to be
--   deleted. You can specify numeric versions (<tt>X.Y</tt>) or
--   <tt>LATEST_WORKING</tt>. <tt>LATEST_PUBLISHED</tt> is not supported.
[$sel:recipeVersions:BatchDeleteRecipeVersion'] :: BatchDeleteRecipeVersion -> NonEmpty Text

-- | Create a value of <a>BatchDeleteRecipeVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchDeleteRecipeVersion'</a>,
--   <a>batchDeleteRecipeVersion_name</a> - The name of the recipe whose
--   versions are to be deleted.
--   
--   <a>$sel:recipeVersions:BatchDeleteRecipeVersion'</a>,
--   <a>batchDeleteRecipeVersion_recipeVersions</a> - An array of version
--   identifiers, for the recipe versions to be deleted. You can specify
--   numeric versions (<tt>X.Y</tt>) or <tt>LATEST_WORKING</tt>.
--   <tt>LATEST_PUBLISHED</tt> is not supported.
newBatchDeleteRecipeVersion :: Text -> NonEmpty Text -> BatchDeleteRecipeVersion

-- | The name of the recipe whose versions are to be deleted.
batchDeleteRecipeVersion_name :: Lens' BatchDeleteRecipeVersion Text

-- | An array of version identifiers, for the recipe versions to be
--   deleted. You can specify numeric versions (<tt>X.Y</tt>) or
--   <tt>LATEST_WORKING</tt>. <tt>LATEST_PUBLISHED</tt> is not supported.
batchDeleteRecipeVersion_recipeVersions :: Lens' BatchDeleteRecipeVersion (NonEmpty Text)

-- | <i>See:</i> <a>newBatchDeleteRecipeVersionResponse</a> smart
--   constructor.
data BatchDeleteRecipeVersionResponse
BatchDeleteRecipeVersionResponse' :: Maybe [RecipeVersionErrorDetail] -> Int -> Text -> BatchDeleteRecipeVersionResponse

-- | Errors, if any, that occurred while attempting to delete the recipe
--   versions.
[$sel:errors:BatchDeleteRecipeVersionResponse'] :: BatchDeleteRecipeVersionResponse -> Maybe [RecipeVersionErrorDetail]

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteRecipeVersionResponse'] :: BatchDeleteRecipeVersionResponse -> Int

-- | The name of the recipe that was modified.
[$sel:name:BatchDeleteRecipeVersionResponse'] :: BatchDeleteRecipeVersionResponse -> Text

-- | Create a value of <a>BatchDeleteRecipeVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteRecipeVersionResponse'</a>,
--   <a>batchDeleteRecipeVersionResponse_errors</a> - Errors, if any, that
--   occurred while attempting to delete the recipe versions.
--   
--   <a>$sel:httpStatus:BatchDeleteRecipeVersionResponse'</a>,
--   <a>batchDeleteRecipeVersionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:name:BatchDeleteRecipeVersion'</a>,
--   <a>batchDeleteRecipeVersionResponse_name</a> - The name of the recipe
--   that was modified.
newBatchDeleteRecipeVersionResponse :: Int -> Text -> BatchDeleteRecipeVersionResponse

-- | Errors, if any, that occurred while attempting to delete the recipe
--   versions.
batchDeleteRecipeVersionResponse_errors :: Lens' BatchDeleteRecipeVersionResponse (Maybe [RecipeVersionErrorDetail])

-- | The response's http status code.
batchDeleteRecipeVersionResponse_httpStatus :: Lens' BatchDeleteRecipeVersionResponse Int

-- | The name of the recipe that was modified.
batchDeleteRecipeVersionResponse_name :: Lens' BatchDeleteRecipeVersionResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance GHC.Show.Show Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance GHC.Read.Read Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance GHC.Classes.Eq Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance GHC.Generics.Generic Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersionResponse
instance GHC.Show.Show Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersionResponse
instance GHC.Read.Read Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersionResponse
instance GHC.Classes.Eq Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance Control.DeepSeq.NFData Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance Control.DeepSeq.NFData Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.BatchDeleteRecipeVersion.BatchDeleteRecipeVersion


-- | Removes metadata tags from a DataBrew resource.
module Amazonka.DataBrew.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | A DataBrew resource from which you want to remove a tag or tags. The
--   value for this parameter is an Amazon Resource Name (ARN).
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys (names) of one or more tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - A DataBrew resource from which you
--   want to remove a tag or tags. The value for this parameter is an
--   Amazon Resource Name (ARN).
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys (names) of one or more tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | A DataBrew resource from which you want to remove a tag or tags. The
--   value for this parameter is an Amazon Resource Name (ARN).
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys (names) of one or more tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.DataBrew.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.DataBrew.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.DataBrew.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.DataBrew.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.DataBrew.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.DataBrew.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.DataBrew.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.DataBrew.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.DataBrew.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.DataBrew.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.UntagResource.UntagResource


-- | Modifies the definition of an existing DataBrew dataset.
module Amazonka.DataBrew.UpdateDataset

-- | <i>See:</i> <a>newUpdateDataset</a> smart constructor.
data UpdateDataset
UpdateDataset' :: Maybe PathOptions -> Maybe FormatOptions -> Maybe InputFormat -> Text -> Input -> UpdateDataset

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
[$sel:pathOptions:UpdateDataset'] :: UpdateDataset -> Maybe PathOptions
[$sel:formatOptions:UpdateDataset'] :: UpdateDataset -> Maybe FormatOptions

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
[$sel:format:UpdateDataset'] :: UpdateDataset -> Maybe InputFormat

-- | The name of the dataset to be updated.
[$sel:name:UpdateDataset'] :: UpdateDataset -> Text
[$sel:input:UpdateDataset'] :: UpdateDataset -> Input

-- | Create a value of <a>UpdateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathOptions:UpdateDataset'</a>,
--   <a>updateDataset_pathOptions</a> - A set of options that defines how
--   DataBrew interprets an Amazon S3 path of the dataset.
--   
--   <a>$sel:formatOptions:UpdateDataset'</a>,
--   <a>updateDataset_formatOptions</a> - Undocumented member.
--   
--   <a>$sel:format:UpdateDataset'</a>, <a>updateDataset_format</a> - The
--   file format of a dataset that is created from an Amazon S3 file or
--   folder.
--   
--   <a>$sel:name:UpdateDataset'</a>, <a>updateDataset_name</a> - The name
--   of the dataset to be updated.
--   
--   <a>$sel:input:UpdateDataset'</a>, <a>updateDataset_input</a> -
--   Undocumented member.
newUpdateDataset :: Text -> Input -> UpdateDataset

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
updateDataset_pathOptions :: Lens' UpdateDataset (Maybe PathOptions)

-- | Undocumented member.
updateDataset_formatOptions :: Lens' UpdateDataset (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
updateDataset_format :: Lens' UpdateDataset (Maybe InputFormat)

-- | The name of the dataset to be updated.
updateDataset_name :: Lens' UpdateDataset Text

-- | Undocumented member.
updateDataset_input :: Lens' UpdateDataset Input

-- | <i>See:</i> <a>newUpdateDatasetResponse</a> smart constructor.
data UpdateDatasetResponse
UpdateDatasetResponse' :: Int -> Text -> UpdateDatasetResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDatasetResponse'] :: UpdateDatasetResponse -> Int

-- | The name of the dataset that you updated.
[$sel:name:UpdateDatasetResponse'] :: UpdateDatasetResponse -> Text

-- | Create a value of <a>UpdateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDatasetResponse'</a>,
--   <a>updateDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateDataset'</a>, <a>updateDatasetResponse_name</a> -
--   The name of the dataset that you updated.
newUpdateDatasetResponse :: Int -> Text -> UpdateDatasetResponse

-- | The response's http status code.
updateDatasetResponse_httpStatus :: Lens' UpdateDatasetResponse Int

-- | The name of the dataset that you updated.
updateDatasetResponse_name :: Lens' UpdateDatasetResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance GHC.Show.Show Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance GHC.Read.Read Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateDataset.UpdateDatasetResponse
instance GHC.Show.Show Amazonka.DataBrew.UpdateDataset.UpdateDatasetResponse
instance GHC.Read.Read Amazonka.DataBrew.UpdateDataset.UpdateDatasetResponse
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateDataset.UpdateDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateDataset.UpdateDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.UpdateDataset.UpdateDataset
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.UpdateDataset.UpdateDataset


-- | Modifies the definition of an existing profile job.
module Amazonka.DataBrew.UpdateProfileJob

-- | <i>See:</i> <a>newUpdateProfileJob</a> smart constructor.
data UpdateProfileJob
UpdateProfileJob' :: Maybe EncryptionMode -> Maybe LogSubscription -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe ProfileConfiguration -> Maybe Natural -> Maybe JobSample -> Text -> S3Location -> Text -> UpdateProfileJob

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
[$sel:encryptionMode:UpdateProfileJob'] :: UpdateProfileJob -> Maybe EncryptionMode

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
[$sel:logSubscription:UpdateProfileJob'] :: UpdateProfileJob -> Maybe LogSubscription

-- | The maximum number of times to retry the job after a job run fails.
[$sel:maxRetries:UpdateProfileJob'] :: UpdateProfileJob -> Maybe Natural

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
[$sel:encryptionKeyArn:UpdateProfileJob'] :: UpdateProfileJob -> Maybe Text

-- | The maximum number of compute nodes that DataBrew can use when the job
--   processes data.
[$sel:maxCapacity:UpdateProfileJob'] :: UpdateProfileJob -> Maybe Int

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
[$sel:configuration:UpdateProfileJob'] :: UpdateProfileJob -> Maybe ProfileConfiguration

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
[$sel:timeout:UpdateProfileJob'] :: UpdateProfileJob -> Maybe Natural

-- | Sample configuration for Profile Jobs only. Determines the number of
--   rows on which the Profile job will be executed. If a JobSample value
--   is not provided for profile jobs, the default value will be used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20000 for the
--   size parameter.
[$sel:jobSample:UpdateProfileJob'] :: UpdateProfileJob -> Maybe JobSample

-- | The name of the job to be updated.
[$sel:name:UpdateProfileJob'] :: UpdateProfileJob -> Text
[$sel:outputLocation:UpdateProfileJob'] :: UpdateProfileJob -> S3Location

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
[$sel:roleArn:UpdateProfileJob'] :: UpdateProfileJob -> Text

-- | Create a value of <a>UpdateProfileJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionMode:UpdateProfileJob'</a>,
--   <a>updateProfileJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:logSubscription:UpdateProfileJob'</a>,
--   <a>updateProfileJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:maxRetries:UpdateProfileJob'</a>,
--   <a>updateProfileJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:encryptionKeyArn:UpdateProfileJob'</a>,
--   <a>updateProfileJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:UpdateProfileJob'</a>,
--   <a>updateProfileJob_maxCapacity</a> - The maximum number of compute
--   nodes that DataBrew can use when the job processes data.
--   
--   <a>$sel:configuration:UpdateProfileJob'</a>,
--   <a>updateProfileJob_configuration</a> - Configuration for profile
--   jobs. Used to select columns, do evaluations, and override default
--   parameters of evaluations. When configuration is null, the profile job
--   will run with default settings.
--   
--   <a>$sel:timeout:UpdateProfileJob'</a>, <a>updateProfileJob_timeout</a>
--   - The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:jobSample:UpdateProfileJob'</a>,
--   <a>updateProfileJob_jobSample</a> - Sample configuration for Profile
--   Jobs only. Determines the number of rows on which the Profile job will
--   be executed. If a JobSample value is not provided for profile jobs,
--   the default value will be used. The default value is CUSTOM_ROWS for
--   the mode parameter and 20000 for the size parameter.
--   
--   <a>$sel:name:UpdateProfileJob'</a>, <a>updateProfileJob_name</a> - The
--   name of the job to be updated.
--   
--   <a>$sel:outputLocation:UpdateProfileJob'</a>,
--   <a>updateProfileJob_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:roleArn:UpdateProfileJob'</a>, <a>updateProfileJob_roleArn</a>
--   - The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newUpdateProfileJob :: Text -> S3Location -> Text -> UpdateProfileJob

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
updateProfileJob_encryptionMode :: Lens' UpdateProfileJob (Maybe EncryptionMode)

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
updateProfileJob_logSubscription :: Lens' UpdateProfileJob (Maybe LogSubscription)

-- | The maximum number of times to retry the job after a job run fails.
updateProfileJob_maxRetries :: Lens' UpdateProfileJob (Maybe Natural)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
updateProfileJob_encryptionKeyArn :: Lens' UpdateProfileJob (Maybe Text)

-- | The maximum number of compute nodes that DataBrew can use when the job
--   processes data.
updateProfileJob_maxCapacity :: Lens' UpdateProfileJob (Maybe Int)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
updateProfileJob_configuration :: Lens' UpdateProfileJob (Maybe ProfileConfiguration)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
updateProfileJob_timeout :: Lens' UpdateProfileJob (Maybe Natural)

-- | Sample configuration for Profile Jobs only. Determines the number of
--   rows on which the Profile job will be executed. If a JobSample value
--   is not provided for profile jobs, the default value will be used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20000 for the
--   size parameter.
updateProfileJob_jobSample :: Lens' UpdateProfileJob (Maybe JobSample)

-- | The name of the job to be updated.
updateProfileJob_name :: Lens' UpdateProfileJob Text

-- | Undocumented member.
updateProfileJob_outputLocation :: Lens' UpdateProfileJob S3Location

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
updateProfileJob_roleArn :: Lens' UpdateProfileJob Text

-- | <i>See:</i> <a>newUpdateProfileJobResponse</a> smart constructor.
data UpdateProfileJobResponse
UpdateProfileJobResponse' :: Int -> Text -> UpdateProfileJobResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateProfileJobResponse'] :: UpdateProfileJobResponse -> Int

-- | The name of the job that was updated.
[$sel:name:UpdateProfileJobResponse'] :: UpdateProfileJobResponse -> Text

-- | Create a value of <a>UpdateProfileJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateProfileJobResponse'</a>,
--   <a>updateProfileJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:UpdateProfileJob'</a>,
--   <a>updateProfileJobResponse_name</a> - The name of the job that was
--   updated.
newUpdateProfileJobResponse :: Int -> Text -> UpdateProfileJobResponse

-- | The response's http status code.
updateProfileJobResponse_httpStatus :: Lens' UpdateProfileJobResponse Int

-- | The name of the job that was updated.
updateProfileJobResponse_name :: Lens' UpdateProfileJobResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance GHC.Show.Show Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance GHC.Read.Read Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJobResponse
instance GHC.Show.Show Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJobResponse
instance GHC.Read.Read Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJobResponse
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.UpdateProfileJob.UpdateProfileJob


-- | Modifies the definition of an existing DataBrew project.
module Amazonka.DataBrew.UpdateProject

-- | <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe Sample -> Text -> Text -> UpdateProject
[$sel:sample:UpdateProject'] :: UpdateProject -> Maybe Sample

-- | The Amazon Resource Name (ARN) of the IAM role to be assumed for this
--   request.
[$sel:roleArn:UpdateProject'] :: UpdateProject -> Text

-- | The name of the project to be updated.
[$sel:name:UpdateProject'] :: UpdateProject -> Text

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sample:UpdateProject'</a>, <a>updateProject_sample</a> -
--   Undocumented member.
--   
--   <a>$sel:roleArn:UpdateProject'</a>, <a>updateProject_roleArn</a> - The
--   Amazon Resource Name (ARN) of the IAM role to be assumed for this
--   request.
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProject_name</a> - The name
--   of the project to be updated.
newUpdateProject :: Text -> Text -> UpdateProject

-- | Undocumented member.
updateProject_sample :: Lens' UpdateProject (Maybe Sample)

-- | The Amazon Resource Name (ARN) of the IAM role to be assumed for this
--   request.
updateProject_roleArn :: Lens' UpdateProject Text

-- | The name of the project to be updated.
updateProject_name :: Lens' UpdateProject Text

-- | <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Maybe POSIX -> Int -> Text -> UpdateProjectResponse

-- | The date and time that the project was last modified.
[$sel:lastModifiedDate:UpdateProjectResponse'] :: UpdateProjectResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:UpdateProjectResponse'] :: UpdateProjectResponse -> Int

-- | The name of the project that you updated.
[$sel:name:UpdateProjectResponse'] :: UpdateProjectResponse -> Text

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_lastModifiedDate</a> - The date and time that
--   the project was last modified.
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProjectResponse_name</a> -
--   The name of the project that you updated.
newUpdateProjectResponse :: Int -> Text -> UpdateProjectResponse

-- | The date and time that the project was last modified.
updateProjectResponse_lastModifiedDate :: Lens' UpdateProjectResponse (Maybe UTCTime)

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int

-- | The name of the project that you updated.
updateProjectResponse_name :: Lens' UpdateProjectResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateProject.UpdateProject
instance GHC.Show.Show Amazonka.DataBrew.UpdateProject.UpdateProject
instance GHC.Read.Read Amazonka.DataBrew.UpdateProject.UpdateProject
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateProject.UpdateProject
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateProject.UpdateProjectResponse
instance GHC.Show.Show Amazonka.DataBrew.UpdateProject.UpdateProjectResponse
instance GHC.Read.Read Amazonka.DataBrew.UpdateProject.UpdateProjectResponse
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateProject.UpdateProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateProject.UpdateProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateProject.UpdateProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.UpdateProject.UpdateProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.UpdateProject.UpdateProject
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.UpdateProject.UpdateProject
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.UpdateProject.UpdateProject


-- | Modifies the definition of the <tt>LATEST_WORKING</tt> version of a
--   DataBrew recipe.
module Amazonka.DataBrew.UpdateRecipe

-- | <i>See:</i> <a>newUpdateRecipe</a> smart constructor.
data UpdateRecipe
UpdateRecipe' :: Maybe [RecipeStep] -> Maybe Text -> Text -> UpdateRecipe

-- | One or more steps to be performed by the recipe. Each step consists of
--   an action, and the conditions under which the action should succeed.
[$sel:steps:UpdateRecipe'] :: UpdateRecipe -> Maybe [RecipeStep]

-- | A description of the recipe.
[$sel:description:UpdateRecipe'] :: UpdateRecipe -> Maybe Text

-- | The name of the recipe to be updated.
[$sel:name:UpdateRecipe'] :: UpdateRecipe -> Text

-- | Create a value of <a>UpdateRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:steps:UpdateRecipe'</a>, <a>updateRecipe_steps</a> - One or
--   more steps to be performed by the recipe. Each step consists of an
--   action, and the conditions under which the action should succeed.
--   
--   <a>$sel:description:UpdateRecipe'</a>, <a>updateRecipe_description</a>
--   - A description of the recipe.
--   
--   <a>$sel:name:UpdateRecipe'</a>, <a>updateRecipe_name</a> - The name of
--   the recipe to be updated.
newUpdateRecipe :: Text -> UpdateRecipe

-- | One or more steps to be performed by the recipe. Each step consists of
--   an action, and the conditions under which the action should succeed.
updateRecipe_steps :: Lens' UpdateRecipe (Maybe [RecipeStep])

-- | A description of the recipe.
updateRecipe_description :: Lens' UpdateRecipe (Maybe Text)

-- | The name of the recipe to be updated.
updateRecipe_name :: Lens' UpdateRecipe Text

-- | <i>See:</i> <a>newUpdateRecipeResponse</a> smart constructor.
data UpdateRecipeResponse
UpdateRecipeResponse' :: Int -> Text -> UpdateRecipeResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateRecipeResponse'] :: UpdateRecipeResponse -> Int

-- | The name of the recipe that was updated.
[$sel:name:UpdateRecipeResponse'] :: UpdateRecipeResponse -> Text

-- | Create a value of <a>UpdateRecipeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRecipeResponse'</a>,
--   <a>updateRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateRecipe'</a>, <a>updateRecipeResponse_name</a> - The
--   name of the recipe that was updated.
newUpdateRecipeResponse :: Int -> Text -> UpdateRecipeResponse

-- | The response's http status code.
updateRecipeResponse_httpStatus :: Lens' UpdateRecipeResponse Int

-- | The name of the recipe that was updated.
updateRecipeResponse_name :: Lens' UpdateRecipeResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance GHC.Show.Show Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance GHC.Read.Read Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateRecipe.UpdateRecipeResponse
instance GHC.Show.Show Amazonka.DataBrew.UpdateRecipe.UpdateRecipeResponse
instance GHC.Read.Read Amazonka.DataBrew.UpdateRecipe.UpdateRecipeResponse
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateRecipe.UpdateRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateRecipe.UpdateRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.UpdateRecipe.UpdateRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.UpdateRecipe.UpdateRecipe


-- | Modifies the definition of an existing DataBrew recipe job.
module Amazonka.DataBrew.UpdateRecipeJob

-- | <i>See:</i> <a>newUpdateRecipeJob</a> smart constructor.
data UpdateRecipeJob
UpdateRecipeJob' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe (NonEmpty DatabaseOutput) -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe LogSubscription -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Text -> Text -> UpdateRecipeJob

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
[$sel:dataCatalogOutputs:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe (NonEmpty DataCatalogOutput)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
[$sel:databaseOutputs:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe (NonEmpty DatabaseOutput)

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
[$sel:encryptionMode:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe EncryptionMode

-- | One or more artifacts that represent the output from running the job.
[$sel:outputs:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe (NonEmpty Output)

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
[$sel:logSubscription:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe LogSubscription

-- | The maximum number of times to retry the job after a job run fails.
[$sel:maxRetries:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe Natural

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
[$sel:encryptionKeyArn:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe Text

-- | The maximum number of nodes that DataBrew can consume when the job
--   processes data.
[$sel:maxCapacity:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe Int

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
[$sel:timeout:UpdateRecipeJob'] :: UpdateRecipeJob -> Maybe Natural

-- | The name of the job to update.
[$sel:name:UpdateRecipeJob'] :: UpdateRecipeJob -> Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
[$sel:roleArn:UpdateRecipeJob'] :: UpdateRecipeJob -> Text

-- | Create a value of <a>UpdateRecipeJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_dataCatalogOutputs</a> - One or more artifacts that
--   represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:databaseOutputs:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_databaseOutputs</a> - Represents a list of JDBC
--   database output objects which defines the output destination for a
--   DataBrew recipe job to write into.
--   
--   <a>$sel:encryptionMode:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:UpdateRecipeJob'</a>, <a>updateRecipeJob_outputs</a> -
--   One or more artifacts that represent the output from running the job.
--   
--   <a>$sel:logSubscription:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:maxRetries:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:encryptionKeyArn:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_maxCapacity</a> - The maximum number of nodes that
--   DataBrew can consume when the job processes data.
--   
--   <a>$sel:timeout:UpdateRecipeJob'</a>, <a>updateRecipeJob_timeout</a> -
--   The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:name:UpdateRecipeJob'</a>, <a>updateRecipeJob_name</a> - The
--   name of the job to update.
--   
--   <a>$sel:roleArn:UpdateRecipeJob'</a>, <a>updateRecipeJob_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newUpdateRecipeJob :: Text -> Text -> UpdateRecipeJob

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
updateRecipeJob_dataCatalogOutputs :: Lens' UpdateRecipeJob (Maybe (NonEmpty DataCatalogOutput))

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
updateRecipeJob_databaseOutputs :: Lens' UpdateRecipeJob (Maybe (NonEmpty DatabaseOutput))

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
updateRecipeJob_encryptionMode :: Lens' UpdateRecipeJob (Maybe EncryptionMode)

-- | One or more artifacts that represent the output from running the job.
updateRecipeJob_outputs :: Lens' UpdateRecipeJob (Maybe (NonEmpty Output))

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
updateRecipeJob_logSubscription :: Lens' UpdateRecipeJob (Maybe LogSubscription)

-- | The maximum number of times to retry the job after a job run fails.
updateRecipeJob_maxRetries :: Lens' UpdateRecipeJob (Maybe Natural)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
updateRecipeJob_encryptionKeyArn :: Lens' UpdateRecipeJob (Maybe Text)

-- | The maximum number of nodes that DataBrew can consume when the job
--   processes data.
updateRecipeJob_maxCapacity :: Lens' UpdateRecipeJob (Maybe Int)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
updateRecipeJob_timeout :: Lens' UpdateRecipeJob (Maybe Natural)

-- | The name of the job to update.
updateRecipeJob_name :: Lens' UpdateRecipeJob Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
updateRecipeJob_roleArn :: Lens' UpdateRecipeJob Text

-- | <i>See:</i> <a>newUpdateRecipeJobResponse</a> smart constructor.
data UpdateRecipeJobResponse
UpdateRecipeJobResponse' :: Int -> Text -> UpdateRecipeJobResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateRecipeJobResponse'] :: UpdateRecipeJobResponse -> Int

-- | The name of the job that you updated.
[$sel:name:UpdateRecipeJobResponse'] :: UpdateRecipeJobResponse -> Text

-- | Create a value of <a>UpdateRecipeJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRecipeJobResponse'</a>,
--   <a>updateRecipeJobResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateRecipeJob'</a>, <a>updateRecipeJobResponse_name</a>
--   - The name of the job that you updated.
newUpdateRecipeJobResponse :: Int -> Text -> UpdateRecipeJobResponse

-- | The response's http status code.
updateRecipeJobResponse_httpStatus :: Lens' UpdateRecipeJobResponse Int

-- | The name of the job that you updated.
updateRecipeJobResponse_name :: Lens' UpdateRecipeJobResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance GHC.Show.Show Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance GHC.Read.Read Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJobResponse
instance GHC.Show.Show Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJobResponse
instance GHC.Read.Read Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJobResponse
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJobResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJobResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.UpdateRecipeJob.UpdateRecipeJob


-- | Modifies the definition of an existing DataBrew schedule.
module Amazonka.DataBrew.UpdateSchedule

-- | <i>See:</i> <a>newUpdateSchedule</a> smart constructor.
data UpdateSchedule
UpdateSchedule' :: Maybe [Text] -> Text -> Text -> UpdateSchedule

-- | The name or names of one or more jobs to be run for this schedule.
[$sel:jobNames:UpdateSchedule'] :: UpdateSchedule -> Maybe [Text]

-- | The date or dates and time or times when the jobs are to be run. For
--   more information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
[$sel:cronExpression:UpdateSchedule'] :: UpdateSchedule -> Text

-- | The name of the schedule to update.
[$sel:name:UpdateSchedule'] :: UpdateSchedule -> Text

-- | Create a value of <a>UpdateSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobNames:UpdateSchedule'</a>, <a>updateSchedule_jobNames</a> -
--   The name or names of one or more jobs to be run for this schedule.
--   
--   <a>$sel:cronExpression:UpdateSchedule'</a>,
--   <a>updateSchedule_cronExpression</a> - The date or dates and time or
--   times when the jobs are to be run. For more information, see <a>Cron
--   expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:name:UpdateSchedule'</a>, <a>updateSchedule_name</a> - The
--   name of the schedule to update.
newUpdateSchedule :: Text -> Text -> UpdateSchedule

-- | The name or names of one or more jobs to be run for this schedule.
updateSchedule_jobNames :: Lens' UpdateSchedule (Maybe [Text])

-- | The date or dates and time or times when the jobs are to be run. For
--   more information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
updateSchedule_cronExpression :: Lens' UpdateSchedule Text

-- | The name of the schedule to update.
updateSchedule_name :: Lens' UpdateSchedule Text

-- | <i>See:</i> <a>newUpdateScheduleResponse</a> smart constructor.
data UpdateScheduleResponse
UpdateScheduleResponse' :: Int -> Text -> UpdateScheduleResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateScheduleResponse'] :: UpdateScheduleResponse -> Int

-- | The name of the schedule that was updated.
[$sel:name:UpdateScheduleResponse'] :: UpdateScheduleResponse -> Text

-- | Create a value of <a>UpdateScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateScheduleResponse'</a>,
--   <a>updateScheduleResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateSchedule'</a>, <a>updateScheduleResponse_name</a> -
--   The name of the schedule that was updated.
newUpdateScheduleResponse :: Int -> Text -> UpdateScheduleResponse

-- | The response's http status code.
updateScheduleResponse_httpStatus :: Lens' UpdateScheduleResponse Int

-- | The name of the schedule that was updated.
updateScheduleResponse_name :: Lens' UpdateScheduleResponse Text
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance GHC.Show.Show Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance GHC.Read.Read Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance GHC.Generics.Generic Amazonka.DataBrew.UpdateSchedule.UpdateScheduleResponse
instance GHC.Show.Show Amazonka.DataBrew.UpdateSchedule.UpdateScheduleResponse
instance GHC.Read.Read Amazonka.DataBrew.UpdateSchedule.UpdateScheduleResponse
instance GHC.Classes.Eq Amazonka.DataBrew.UpdateSchedule.UpdateScheduleResponse
instance Amazonka.Types.AWSRequest Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateSchedule.UpdateScheduleResponse
instance Data.Hashable.Class.Hashable Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance Control.DeepSeq.NFData Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance Amazonka.Data.Headers.ToHeaders Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance Amazonka.Data.Path.ToPath Amazonka.DataBrew.UpdateSchedule.UpdateSchedule
instance Amazonka.Data.Query.ToQuery Amazonka.DataBrew.UpdateSchedule.UpdateSchedule


module Amazonka.DataBrew.Lens

-- | The token returned by a previous call to retrieve the next set of
--   results.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | The maximum number of results to return in this request.
listProjects_maxResults :: Lens' ListProjects (Maybe Natural)

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int

-- | A list of projects that are defined .
listProjectsResponse_projects :: Lens' ListProjectsResponse [Project]

-- | The name of the project to be deleted.
deleteProject_name :: Lens' DeleteProject Text

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int

-- | The name of the project that you deleted.
deleteProjectResponse_name :: Lens' DeleteProjectResponse Text

-- | Undocumented member.
updateProject_sample :: Lens' UpdateProject (Maybe Sample)

-- | The Amazon Resource Name (ARN) of the IAM role to be assumed for this
--   request.
updateProject_roleArn :: Lens' UpdateProject Text

-- | The name of the project to be updated.
updateProject_name :: Lens' UpdateProject Text

-- | The date and time that the project was last modified.
updateProjectResponse_lastModifiedDate :: Lens' UpdateProjectResponse (Maybe UTCTime)

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int

-- | The name of the project that you updated.
updateProjectResponse_name :: Lens' UpdateProjectResponse Text

-- | The name of the job that these schedules apply to.
listSchedules_jobName :: Lens' ListSchedules (Maybe Text)

-- | The token returned by a previous call to retrieve the next set of
--   results.
listSchedules_nextToken :: Lens' ListSchedules (Maybe Text)

-- | The maximum number of results to return in this request.
listSchedules_maxResults :: Lens' ListSchedules (Maybe Natural)

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listSchedulesResponse_nextToken :: Lens' ListSchedulesResponse (Maybe Text)

-- | The response's http status code.
listSchedulesResponse_httpStatus :: Lens' ListSchedulesResponse Int

-- | A list of schedules that are defined.
listSchedulesResponse_schedules :: Lens' ListSchedulesResponse [Schedule]

-- | The name of the dataset to be described.
describeDataset_name :: Lens' DescribeDataset Text

-- | The date and time that the dataset was last modified.
describeDatasetResponse_lastModifiedDate :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
describeDatasetResponse_pathOptions :: Lens' DescribeDatasetResponse (Maybe PathOptions)

-- | The date and time that the dataset was created.
describeDatasetResponse_createDate :: Lens' DescribeDatasetResponse (Maybe UTCTime)

-- | Undocumented member.
describeDatasetResponse_formatOptions :: Lens' DescribeDatasetResponse (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
describeDatasetResponse_format :: Lens' DescribeDatasetResponse (Maybe InputFormat)

-- | The identifier (user name) of the user who created the dataset.
describeDatasetResponse_createdBy :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset.
describeDatasetResponse_resourceArn :: Lens' DescribeDatasetResponse (Maybe Text)

-- | The location of the data for this dataset, Amazon S3 or the Glue Data
--   Catalog.
describeDatasetResponse_source :: Lens' DescribeDatasetResponse (Maybe Source)

-- | The identifier (user name) of the user who last modified the dataset.
describeDatasetResponse_lastModifiedBy :: Lens' DescribeDatasetResponse (Maybe Text)

-- | Metadata tags associated with this dataset.
describeDatasetResponse_tags :: Lens' DescribeDatasetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int

-- | The name of the dataset.
describeDatasetResponse_name :: Lens' DescribeDatasetResponse Text

-- | Undocumented member.
describeDatasetResponse_input :: Lens' DescribeDatasetResponse Input

-- | The Amazon Resource Name (ARN) string that uniquely identifies the
--   DataBrew resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A list of tags associated with the DataBrew resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The name of the project to be described.
describeProject_name :: Lens' DescribeProject Text

-- | The date and time that the project was last modified.
describeProjectResponse_lastModifiedDate :: Lens' DescribeProjectResponse (Maybe UTCTime)

-- | Describes the current state of the session:
--   
--   <ul>
--   <li><tt>PROVISIONING</tt> - allocating resources for the session.</li>
--   <li><tt>INITIALIZING</tt> - getting the session ready for first
--   use.</li>
--   <li><tt>ASSIGNED</tt> - the session is ready for use.</li>
--   </ul>
describeProjectResponse_sessionStatus :: Lens' DescribeProjectResponse (Maybe SessionStatus)

-- | The date and time when the project was opened.
describeProjectResponse_openDate :: Lens' DescribeProjectResponse (Maybe UTCTime)

-- | The date and time that the project was created.
describeProjectResponse_createDate :: Lens' DescribeProjectResponse (Maybe UTCTime)

-- | The identifier (user name) of the user who created the project.
describeProjectResponse_createdBy :: Lens' DescribeProjectResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project.
describeProjectResponse_resourceArn :: Lens' DescribeProjectResponse (Maybe Text)

-- | The recipe associated with this job.
describeProjectResponse_recipeName :: Lens' DescribeProjectResponse (Maybe Text)

-- | The dataset associated with the project.
describeProjectResponse_datasetName :: Lens' DescribeProjectResponse (Maybe Text)

-- | The identifier (user name) of the user who last modified the project.
describeProjectResponse_lastModifiedBy :: Lens' DescribeProjectResponse (Maybe Text)

-- | Undocumented member.
describeProjectResponse_sample :: Lens' DescribeProjectResponse (Maybe Sample)

-- | The identifier (user name) of the user that opened the project for
--   use.
describeProjectResponse_openedBy :: Lens' DescribeProjectResponse (Maybe Text)

-- | Metadata tags associated with this project.
describeProjectResponse_tags :: Lens' DescribeProjectResponse (Maybe (HashMap Text Text))

-- | The ARN of the Identity and Access Management (IAM) role to be assumed
--   when DataBrew runs the job.
describeProjectResponse_roleArn :: Lens' DescribeProjectResponse (Maybe Text)

-- | The response's http status code.
describeProjectResponse_httpStatus :: Lens' DescribeProjectResponse Int

-- | The name of the project.
describeProjectResponse_name :: Lens' DescribeProjectResponse Text

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
createRecipeJob_dataCatalogOutputs :: Lens' CreateRecipeJob (Maybe (NonEmpty DataCatalogOutput))

-- | Undocumented member.
createRecipeJob_recipeReference :: Lens' CreateRecipeJob (Maybe RecipeReference)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write to.
createRecipeJob_databaseOutputs :: Lens' CreateRecipeJob (Maybe (NonEmpty DatabaseOutput))

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
createRecipeJob_encryptionMode :: Lens' CreateRecipeJob (Maybe EncryptionMode)

-- | One or more artifacts that represent the output from running the job.
createRecipeJob_outputs :: Lens' CreateRecipeJob (Maybe (NonEmpty Output))

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
createRecipeJob_logSubscription :: Lens' CreateRecipeJob (Maybe LogSubscription)

-- | Either the name of an existing project, or a combination of a recipe
--   and a dataset to associate with the recipe.
createRecipeJob_projectName :: Lens' CreateRecipeJob (Maybe Text)

-- | The maximum number of times to retry the job after a job run fails.
createRecipeJob_maxRetries :: Lens' CreateRecipeJob (Maybe Natural)

-- | The name of the dataset that this job processes.
createRecipeJob_datasetName :: Lens' CreateRecipeJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
createRecipeJob_encryptionKeyArn :: Lens' CreateRecipeJob (Maybe Text)

-- | The maximum number of nodes that DataBrew can consume when the job
--   processes data.
createRecipeJob_maxCapacity :: Lens' CreateRecipeJob (Maybe Int)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
createRecipeJob_timeout :: Lens' CreateRecipeJob (Maybe Natural)

-- | Metadata tags to apply to this job.
createRecipeJob_tags :: Lens' CreateRecipeJob (Maybe (HashMap Text Text))

-- | A unique name for the job. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
createRecipeJob_name :: Lens' CreateRecipeJob Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
createRecipeJob_roleArn :: Lens' CreateRecipeJob Text

-- | The response's http status code.
createRecipeJobResponse_httpStatus :: Lens' CreateRecipeJobResponse Int

-- | The name of the job that you created.
createRecipeJobResponse_name :: Lens' CreateRecipeJobResponse Text

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRecipeVersions_nextToken :: Lens' ListRecipeVersions (Maybe Text)

-- | The maximum number of results to return in this request.
listRecipeVersions_maxResults :: Lens' ListRecipeVersions (Maybe Natural)

-- | The name of the recipe for which to return version information.
listRecipeVersions_name :: Lens' ListRecipeVersions Text

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listRecipeVersionsResponse_nextToken :: Lens' ListRecipeVersionsResponse (Maybe Text)

-- | The response's http status code.
listRecipeVersionsResponse_httpStatus :: Lens' ListRecipeVersionsResponse Int

-- | A list of versions for the specified recipe.
listRecipeVersionsResponse_recipes :: Lens' ListRecipeVersionsResponse [Recipe]

-- | The name of the dataset to be deleted.
deleteDataset_name :: Lens' DeleteDataset Text

-- | The response's http status code.
deleteDatasetResponse_httpStatus :: Lens' DeleteDatasetResponse Int

-- | The name of the dataset that you deleted.
deleteDatasetResponse_name :: Lens' DeleteDatasetResponse Text

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
updateDataset_pathOptions :: Lens' UpdateDataset (Maybe PathOptions)

-- | Undocumented member.
updateDataset_formatOptions :: Lens' UpdateDataset (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
updateDataset_format :: Lens' UpdateDataset (Maybe InputFormat)

-- | The name of the dataset to be updated.
updateDataset_name :: Lens' UpdateDataset Text

-- | Undocumented member.
updateDataset_input :: Lens' UpdateDataset Input

-- | The response's http status code.
updateDatasetResponse_httpStatus :: Lens' UpdateDatasetResponse Int

-- | The name of the dataset that you updated.
updateDatasetResponse_name :: Lens' UpdateDatasetResponse Text

-- | The name of the job to be stopped.
stopJobRun_name :: Lens' StopJobRun Text

-- | The ID of the job run to be stopped.
stopJobRun_runId :: Lens' StopJobRun Text

-- | The response's http status code.
stopJobRunResponse_httpStatus :: Lens' StopJobRunResponse Int

-- | The ID of the job run that you stopped.
stopJobRunResponse_runId :: Lens' StopJobRunResponse Text

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
updateRecipeJob_dataCatalogOutputs :: Lens' UpdateRecipeJob (Maybe (NonEmpty DataCatalogOutput))

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
updateRecipeJob_databaseOutputs :: Lens' UpdateRecipeJob (Maybe (NonEmpty DatabaseOutput))

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
updateRecipeJob_encryptionMode :: Lens' UpdateRecipeJob (Maybe EncryptionMode)

-- | One or more artifacts that represent the output from running the job.
updateRecipeJob_outputs :: Lens' UpdateRecipeJob (Maybe (NonEmpty Output))

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
updateRecipeJob_logSubscription :: Lens' UpdateRecipeJob (Maybe LogSubscription)

-- | The maximum number of times to retry the job after a job run fails.
updateRecipeJob_maxRetries :: Lens' UpdateRecipeJob (Maybe Natural)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
updateRecipeJob_encryptionKeyArn :: Lens' UpdateRecipeJob (Maybe Text)

-- | The maximum number of nodes that DataBrew can consume when the job
--   processes data.
updateRecipeJob_maxCapacity :: Lens' UpdateRecipeJob (Maybe Int)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
updateRecipeJob_timeout :: Lens' UpdateRecipeJob (Maybe Natural)

-- | The name of the job to update.
updateRecipeJob_name :: Lens' UpdateRecipeJob Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
updateRecipeJob_roleArn :: Lens' UpdateRecipeJob Text

-- | The response's http status code.
updateRecipeJobResponse_httpStatus :: Lens' UpdateRecipeJobResponse Int

-- | The name of the job that you updated.
updateRecipeJobResponse_name :: Lens' UpdateRecipeJobResponse Text

-- | A token generated by DataBrew that specifies where to continue
--   pagination if a previous request was truncated. To get the next set of
--   pages, pass in the NextToken value from the response object of the
--   previous page call.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The name of a project. Using this parameter indicates to return only
--   those jobs that are associated with the specified project.
listJobs_projectName :: Lens' ListJobs (Maybe Text)

-- | The name of a dataset. Using this parameter indicates to return only
--   those jobs that act on the specified dataset.
listJobs_datasetName :: Lens' ListJobs (Maybe Text)

-- | The maximum number of results to return in this request.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | A list of jobs that are defined.
listJobsResponse_jobs :: Lens' ListJobsResponse [Job]

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
createDataset_pathOptions :: Lens' CreateDataset (Maybe PathOptions)

-- | Undocumented member.
createDataset_formatOptions :: Lens' CreateDataset (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
createDataset_format :: Lens' CreateDataset (Maybe InputFormat)

-- | Metadata tags to apply to this dataset.
createDataset_tags :: Lens' CreateDataset (Maybe (HashMap Text Text))

-- | The name of the dataset to be created. Valid characters are
--   alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createDataset_name :: Lens' CreateDataset Text

-- | Undocumented member.
createDataset_input :: Lens' CreateDataset Input

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int

-- | The name of the dataset that you created.
createDatasetResponse_name :: Lens' CreateDatasetResponse Text

-- | The name of the job to be deleted.
deleteJob_name :: Lens' DeleteJob Text

-- | The response's http status code.
deleteJobResponse_httpStatus :: Lens' DeleteJobResponse Int

-- | The name of the job that you deleted.
deleteJobResponse_name :: Lens' DeleteJobResponse Text

-- | A description for the recipe.
createRecipe_description :: Lens' CreateRecipe (Maybe Text)

-- | Metadata tags to apply to this recipe.
createRecipe_tags :: Lens' CreateRecipe (Maybe (HashMap Text Text))

-- | A unique name for the recipe. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
createRecipe_name :: Lens' CreateRecipe Text

-- | An array containing the steps to be performed by the recipe. Each
--   recipe step consists of one recipe action and (optionally) an array of
--   condition expressions.
createRecipe_steps :: Lens' CreateRecipe [RecipeStep]

-- | The response's http status code.
createRecipeResponse_httpStatus :: Lens' CreateRecipeResponse Int

-- | The name of the recipe that you created.
createRecipeResponse_name :: Lens' CreateRecipeResponse Text

-- | The name or names of one or more jobs to be run for this schedule.
updateSchedule_jobNames :: Lens' UpdateSchedule (Maybe [Text])

-- | The date or dates and time or times when the jobs are to be run. For
--   more information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
updateSchedule_cronExpression :: Lens' UpdateSchedule Text

-- | The name of the schedule to update.
updateSchedule_name :: Lens' UpdateSchedule Text

-- | The response's http status code.
updateScheduleResponse_httpStatus :: Lens' UpdateScheduleResponse Int

-- | The name of the schedule that was updated.
updateScheduleResponse_name :: Lens' UpdateScheduleResponse Text

-- | The name of the schedule to be deleted.
deleteSchedule_name :: Lens' DeleteSchedule Text

-- | The response's http status code.
deleteScheduleResponse_httpStatus :: Lens' DeleteScheduleResponse Int

-- | The name of the schedule that was deleted.
deleteScheduleResponse_name :: Lens' DeleteScheduleResponse Text

-- | The name of the recipe whose versions are to be deleted.
batchDeleteRecipeVersion_name :: Lens' BatchDeleteRecipeVersion Text

-- | An array of version identifiers, for the recipe versions to be
--   deleted. You can specify numeric versions (<tt>X.Y</tt>) or
--   <tt>LATEST_WORKING</tt>. <tt>LATEST_PUBLISHED</tt> is not supported.
batchDeleteRecipeVersion_recipeVersions :: Lens' BatchDeleteRecipeVersion (NonEmpty Text)

-- | Errors, if any, that occurred while attempting to delete the recipe
--   versions.
batchDeleteRecipeVersionResponse_errors :: Lens' BatchDeleteRecipeVersionResponse (Maybe [RecipeVersionErrorDetail])

-- | The response's http status code.
batchDeleteRecipeVersionResponse_httpStatus :: Lens' BatchDeleteRecipeVersionResponse Int

-- | The name of the recipe that was modified.
batchDeleteRecipeVersionResponse_name :: Lens' BatchDeleteRecipeVersionResponse Text

-- | The token returned by a previous call to retrieve the next set of
--   results.
listJobRuns_nextToken :: Lens' ListJobRuns (Maybe Text)

-- | The maximum number of results to return in this request.
listJobRuns_maxResults :: Lens' ListJobRuns (Maybe Natural)

-- | The name of the job.
listJobRuns_name :: Lens' ListJobRuns Text

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listJobRunsResponse_nextToken :: Lens' ListJobRunsResponse (Maybe Text)

-- | The response's http status code.
listJobRunsResponse_httpStatus :: Lens' ListJobRunsResponse Int

-- | A list of job runs that have occurred for the specified job.
listJobRunsResponse_jobRuns :: Lens' ListJobRunsResponse [JobRun]

-- | The name of the job to be described.
describeJob_name :: Lens' DescribeJob Text

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
describeJobResponse_dataCatalogOutputs :: Lens' DescribeJobResponse (Maybe (NonEmpty DataCatalogOutput))

-- | The date and time that the job was last modified.
describeJobResponse_lastModifiedDate :: Lens' DescribeJobResponse (Maybe UTCTime)

-- | The date and time that the job was created.
describeJobResponse_createDate :: Lens' DescribeJobResponse (Maybe UTCTime)

-- | Undocumented member.
describeJobResponse_recipeReference :: Lens' DescribeJobResponse (Maybe RecipeReference)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
describeJobResponse_profileConfiguration :: Lens' DescribeJobResponse (Maybe ProfileConfiguration)

-- | The identifier (user name) of the user associated with the creation of
--   the job.
describeJobResponse_createdBy :: Lens' DescribeJobResponse (Maybe Text)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
describeJobResponse_databaseOutputs :: Lens' DescribeJobResponse (Maybe (NonEmpty DatabaseOutput))

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
describeJobResponse_encryptionMode :: Lens' DescribeJobResponse (Maybe EncryptionMode)

-- | One or more artifacts that represent the output from running the job.
describeJobResponse_outputs :: Lens' DescribeJobResponse (Maybe (NonEmpty Output))

-- | The Amazon Resource Name (ARN) of the job.
describeJobResponse_resourceArn :: Lens' DescribeJobResponse (Maybe Text)

-- | Indicates whether Amazon CloudWatch logging is enabled for this job.
describeJobResponse_logSubscription :: Lens' DescribeJobResponse (Maybe LogSubscription)

-- | The DataBrew project associated with this job.
describeJobResponse_projectName :: Lens' DescribeJobResponse (Maybe Text)

-- | The maximum number of times to retry the job after a job run fails.
describeJobResponse_maxRetries :: Lens' DescribeJobResponse (Maybe Natural)

-- | The dataset that the job acts upon.
describeJobResponse_datasetName :: Lens' DescribeJobResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
describeJobResponse_encryptionKeyArn :: Lens' DescribeJobResponse (Maybe Text)

-- | The maximum number of compute nodes that DataBrew can consume when the
--   job processes data.
describeJobResponse_maxCapacity :: Lens' DescribeJobResponse (Maybe Int)

-- | The identifier (user name) of the user who last modified the job.
describeJobResponse_lastModifiedBy :: Lens' DescribeJobResponse (Maybe Text)

-- | The job type, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - The job analyzes the dataset to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - The job applies one or more transformations to a
--   dataset.</li>
--   </ul>
describeJobResponse_type :: Lens' DescribeJobResponse (Maybe JobType)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
describeJobResponse_timeout :: Lens' DescribeJobResponse (Maybe Natural)

-- | Metadata tags associated with this job.
describeJobResponse_tags :: Lens' DescribeJobResponse (Maybe (HashMap Text Text))

-- | The ARN of the Identity and Access Management (IAM) role to be assumed
--   when DataBrew runs the job.
describeJobResponse_roleArn :: Lens' DescribeJobResponse (Maybe Text)

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed.
describeJobResponse_jobSample :: Lens' DescribeJobResponse (Maybe JobSample)

-- | The response's http status code.
describeJobResponse_httpStatus :: Lens' DescribeJobResponse Int

-- | The name of the job.
describeJobResponse_name :: Lens' DescribeJobResponse Text

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
updateProfileJob_encryptionMode :: Lens' UpdateProfileJob (Maybe EncryptionMode)

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
updateProfileJob_logSubscription :: Lens' UpdateProfileJob (Maybe LogSubscription)

-- | The maximum number of times to retry the job after a job run fails.
updateProfileJob_maxRetries :: Lens' UpdateProfileJob (Maybe Natural)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
updateProfileJob_encryptionKeyArn :: Lens' UpdateProfileJob (Maybe Text)

-- | The maximum number of compute nodes that DataBrew can use when the job
--   processes data.
updateProfileJob_maxCapacity :: Lens' UpdateProfileJob (Maybe Int)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
updateProfileJob_configuration :: Lens' UpdateProfileJob (Maybe ProfileConfiguration)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
updateProfileJob_timeout :: Lens' UpdateProfileJob (Maybe Natural)

-- | Sample configuration for Profile Jobs only. Determines the number of
--   rows on which the Profile job will be executed. If a JobSample value
--   is not provided for profile jobs, the default value will be used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20000 for the
--   size parameter.
updateProfileJob_jobSample :: Lens' UpdateProfileJob (Maybe JobSample)

-- | The name of the job to be updated.
updateProfileJob_name :: Lens' UpdateProfileJob Text

-- | Undocumented member.
updateProfileJob_outputLocation :: Lens' UpdateProfileJob S3Location

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
updateProfileJob_roleArn :: Lens' UpdateProfileJob Text

-- | The response's http status code.
updateProfileJobResponse_httpStatus :: Lens' UpdateProfileJobResponse Int

-- | The name of the job that was updated.
updateProfileJobResponse_name :: Lens' UpdateProfileJobResponse Text

-- | The recipe version identifier. If this parameter isn't specified, then
--   the latest published version is returned.
describeRecipe_recipeVersion :: Lens' DescribeRecipe (Maybe Text)

-- | The name of the recipe to be described.
describeRecipe_name :: Lens' DescribeRecipe Text

-- | The date and time that the recipe was last modified.
describeRecipeResponse_lastModifiedDate :: Lens' DescribeRecipeResponse (Maybe UTCTime)

-- | The date and time that the recipe was created.
describeRecipeResponse_createDate :: Lens' DescribeRecipeResponse (Maybe UTCTime)

-- | The identifier (user name) of the user who last published the recipe.
describeRecipeResponse_publishedBy :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The identifier (user name) of the user who created the recipe.
describeRecipeResponse_createdBy :: Lens' DescribeRecipeResponse (Maybe Text)

-- | One or more steps to be performed by the recipe. Each step consists of
--   an action, and the conditions under which the action should succeed.
describeRecipeResponse_steps :: Lens' DescribeRecipeResponse (Maybe [RecipeStep])

-- | The date and time when the recipe was last published.
describeRecipeResponse_publishedDate :: Lens' DescribeRecipeResponse (Maybe UTCTime)

-- | The ARN of the recipe.
describeRecipeResponse_resourceArn :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The recipe version identifier.
describeRecipeResponse_recipeVersion :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The name of the project associated with this recipe.
describeRecipeResponse_projectName :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The identifier (user name) of the user who last modified the recipe.
describeRecipeResponse_lastModifiedBy :: Lens' DescribeRecipeResponse (Maybe Text)

-- | The description of the recipe.
describeRecipeResponse_description :: Lens' DescribeRecipeResponse (Maybe Text)

-- | Metadata tags associated with this project.
describeRecipeResponse_tags :: Lens' DescribeRecipeResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRecipeResponse_httpStatus :: Lens' DescribeRecipeResponse Int

-- | The name of the recipe.
describeRecipeResponse_name :: Lens' DescribeRecipeResponse Text

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - <tt>SSE-KMS</tt> - Server-side encryption with
--   KMS-managed keys.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
createProfileJob_encryptionMode :: Lens' CreateProfileJob (Maybe EncryptionMode)

-- | Enables or disables Amazon CloudWatch logging for the job. If logging
--   is enabled, CloudWatch writes one log stream for each job run.
createProfileJob_logSubscription :: Lens' CreateProfileJob (Maybe LogSubscription)

-- | The maximum number of times to retry the job after a job run fails.
createProfileJob_maxRetries :: Lens' CreateProfileJob (Maybe Natural)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job.
createProfileJob_encryptionKeyArn :: Lens' CreateProfileJob (Maybe Text)

-- | The maximum number of nodes that DataBrew can use when the job
--   processes data.
createProfileJob_maxCapacity :: Lens' CreateProfileJob (Maybe Int)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
createProfileJob_configuration :: Lens' CreateProfileJob (Maybe ProfileConfiguration)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
createProfileJob_timeout :: Lens' CreateProfileJob (Maybe Natural)

-- | Metadata tags to apply to this job.
createProfileJob_tags :: Lens' CreateProfileJob (Maybe (HashMap Text Text))

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed. If a JobSample value
--   is not provided, the default value will be used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
createProfileJob_jobSample :: Lens' CreateProfileJob (Maybe JobSample)

-- | The name of the dataset that this job is to act upon.
createProfileJob_datasetName :: Lens' CreateProfileJob Text

-- | The name of the job to be created. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createProfileJob_name :: Lens' CreateProfileJob Text

-- | Undocumented member.
createProfileJob_outputLocation :: Lens' CreateProfileJob S3Location

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
createProfileJob_roleArn :: Lens' CreateProfileJob Text

-- | The response's http status code.
createProfileJobResponse_httpStatus :: Lens' CreateProfileJobResponse Int

-- | The name of the job that was created.
createProfileJobResponse_name :: Lens' CreateProfileJobResponse Text

-- | The DataBrew resource to which tags should be added. The value for
--   this parameter is an Amazon Resource Name (ARN). For DataBrew, you can
--   tag a dataset, a job, a project, or a recipe.
tagResource_resourceArn :: Lens' TagResource Text

-- | One or more tags to be assigned to the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The name of the schedule to be described.
describeSchedule_name :: Lens' DescribeSchedule Text

-- | The date and time that the schedule was last modified.
describeScheduleResponse_lastModifiedDate :: Lens' DescribeScheduleResponse (Maybe UTCTime)

-- | The date and time that the schedule was created.
describeScheduleResponse_createDate :: Lens' DescribeScheduleResponse (Maybe UTCTime)

-- | The identifier (user name) of the user who created the schedule.
describeScheduleResponse_createdBy :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schedule.
describeScheduleResponse_resourceArn :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The date or dates and time or times when the jobs are to be run for
--   the schedule. For more information, see <a>Cron expressions</a> in the
--   <i>Glue DataBrew Developer Guide</i>.
describeScheduleResponse_cronExpression :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The identifier (user name) of the user who last modified the schedule.
describeScheduleResponse_lastModifiedBy :: Lens' DescribeScheduleResponse (Maybe Text)

-- | The name or names of one or more jobs to be run by using the schedule.
describeScheduleResponse_jobNames :: Lens' DescribeScheduleResponse (Maybe [Text])

-- | Metadata tags associated with this schedule.
describeScheduleResponse_tags :: Lens' DescribeScheduleResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeScheduleResponse_httpStatus :: Lens' DescribeScheduleResponse Int

-- | The name of the schedule.
describeScheduleResponse_name :: Lens' DescribeScheduleResponse Text

-- | The name of the job being processed during this run.
describeJobRun_name :: Lens' DescribeJobRun Text

-- | The unique identifier of the job run.
describeJobRun_runId :: Lens' DescribeJobRun Text

-- | The date and time when the job completed processing.
describeJobRunResponse_completedOn :: Lens' DescribeJobRunResponse (Maybe UTCTime)

-- | The current state of the job run entity itself.
describeJobRunResponse_state :: Lens' DescribeJobRunResponse (Maybe JobRunState)

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
describeJobRunResponse_dataCatalogOutputs :: Lens' DescribeJobRunResponse (Maybe (NonEmpty DataCatalogOutput))

-- | The date and time when the job run began.
describeJobRunResponse_startedOn :: Lens' DescribeJobRunResponse (Maybe UTCTime)

-- | Undocumented member.
describeJobRunResponse_recipeReference :: Lens' DescribeJobRunResponse (Maybe RecipeReference)

-- | Configuration for profile jobs. Used to select columns, do
--   evaluations, and override default parameters of evaluations. When
--   configuration is null, the profile job will run with default settings.
describeJobRunResponse_profileConfiguration :: Lens' DescribeJobRunResponse (Maybe ProfileConfiguration)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
describeJobRunResponse_databaseOutputs :: Lens' DescribeJobRunResponse (Maybe (NonEmpty DatabaseOutput))

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
describeJobRunResponse_logGroupName :: Lens' DescribeJobRunResponse (Maybe Text)

-- | One or more output artifacts from a job run.
describeJobRunResponse_outputs :: Lens' DescribeJobRunResponse (Maybe (NonEmpty Output))

-- | The unique identifier of the job run.
describeJobRunResponse_runId :: Lens' DescribeJobRunResponse (Maybe Text)

-- | The amount of time, in seconds, during which the job run consumed
--   resources.
describeJobRunResponse_executionTime :: Lens' DescribeJobRunResponse (Maybe Int)

-- | The current status of Amazon CloudWatch logging for the job run.
describeJobRunResponse_logSubscription :: Lens' DescribeJobRunResponse (Maybe LogSubscription)

-- | The Amazon Resource Name (ARN) of the user who started the job run.
describeJobRunResponse_startedBy :: Lens' DescribeJobRunResponse (Maybe Text)

-- | The name of the dataset for the job to process.
describeJobRunResponse_datasetName :: Lens' DescribeJobRunResponse (Maybe Text)

-- | The number of times that DataBrew has attempted to run the job.
describeJobRunResponse_attempt :: Lens' DescribeJobRunResponse (Maybe Int)

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
describeJobRunResponse_errorMessage :: Lens' DescribeJobRunResponse (Maybe Text)

-- | Sample configuration for profile jobs only. Determines the number of
--   rows on which the profile job will be executed. If a JobSample value
--   is not provided, the default value will be used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
describeJobRunResponse_jobSample :: Lens' DescribeJobRunResponse (Maybe JobSample)

-- | The response's http status code.
describeJobRunResponse_httpStatus :: Lens' DescribeJobRunResponse Int

-- | The name of the job being processed during this run.
describeJobRunResponse_jobName :: Lens' DescribeJobRunResponse Text

-- | A value that, if true, enables you to take control of a session, even
--   if a different client is currently accessing the project.
startProjectSession_assumeControl :: Lens' StartProjectSession (Maybe Bool)

-- | The name of the project to act upon.
startProjectSession_name :: Lens' StartProjectSession Text

-- | A system-generated identifier for the session.
startProjectSessionResponse_clientSessionId :: Lens' StartProjectSessionResponse (Maybe Text)

-- | The response's http status code.
startProjectSessionResponse_httpStatus :: Lens' StartProjectSessionResponse Int

-- | The name of the project to be acted upon.
startProjectSessionResponse_name :: Lens' StartProjectSessionResponse Text

-- | The name of the recipe.
deleteRecipeVersion_name :: Lens' DeleteRecipeVersion Text

-- | The version of the recipe to be deleted. You can specify a numeric
--   versions (<tt>X.Y</tt>) or <tt>LATEST_WORKING</tt>.
--   <tt>LATEST_PUBLISHED</tt> is not supported.
deleteRecipeVersion_recipeVersion :: Lens' DeleteRecipeVersion Text

-- | The response's http status code.
deleteRecipeVersionResponse_httpStatus :: Lens' DeleteRecipeVersionResponse Int

-- | The name of the recipe that was deleted.
deleteRecipeVersionResponse_name :: Lens' DeleteRecipeVersionResponse Text

-- | The version of the recipe that was deleted.
deleteRecipeVersionResponse_recipeVersion :: Lens' DeleteRecipeVersionResponse Text

-- | The token returned by a previous call to retrieve the next set of
--   results.
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The maximum number of results to return in this request.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int

-- | A list of datasets that are defined.
listDatasetsResponse_datasets :: Lens' ListDatasetsResponse [Dataset]

-- | A DataBrew resource from which you want to remove a tag or tags. The
--   value for this parameter is an Amazon Resource Name (ARN).
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys (names) of one or more tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The name of the job to be run.
startJobRun_name :: Lens' StartJobRun Text

-- | The response's http status code.
startJobRunResponse_httpStatus :: Lens' StartJobRunResponse Int

-- | A system-generated identifier for this particular job run.
startJobRunResponse_runId :: Lens' StartJobRunResponse Text

-- | One or more steps to be performed by the recipe. Each step consists of
--   an action, and the conditions under which the action should succeed.
updateRecipe_steps :: Lens' UpdateRecipe (Maybe [RecipeStep])

-- | A description of the recipe.
updateRecipe_description :: Lens' UpdateRecipe (Maybe Text)

-- | The name of the recipe to be updated.
updateRecipe_name :: Lens' UpdateRecipe Text

-- | The response's http status code.
updateRecipeResponse_httpStatus :: Lens' UpdateRecipeResponse Int

-- | The name of the recipe that was updated.
updateRecipeResponse_name :: Lens' UpdateRecipeResponse Text

-- | The name or names of one or more jobs to be run.
createSchedule_jobNames :: Lens' CreateSchedule (Maybe [Text])

-- | Metadata tags to apply to this schedule.
createSchedule_tags :: Lens' CreateSchedule (Maybe (HashMap Text Text))

-- | The date or dates and time or times when the jobs are to be run. For
--   more information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
createSchedule_cronExpression :: Lens' CreateSchedule Text

-- | A unique name for the schedule. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createSchedule_name :: Lens' CreateSchedule Text

-- | The response's http status code.
createScheduleResponse_httpStatus :: Lens' CreateScheduleResponse Int

-- | The name of the schedule that was created.
createScheduleResponse_name :: Lens' CreateScheduleResponse Text

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRecipes_nextToken :: Lens' ListRecipes (Maybe Text)

-- | Return only those recipes with a version identifier of
--   <tt>LATEST_WORKING</tt> or <tt>LATEST_PUBLISHED</tt>. If
--   <tt>RecipeVersion</tt> is omitted, <tt>ListRecipes</tt> returns all of
--   the <tt>LATEST_PUBLISHED</tt> recipe versions.
--   
--   Valid values: <tt>LATEST_WORKING</tt> | <tt>LATEST_PUBLISHED</tt>
listRecipes_recipeVersion :: Lens' ListRecipes (Maybe Text)

-- | The maximum number of results to return in this request.
listRecipes_maxResults :: Lens' ListRecipes (Maybe Natural)

-- | A token that you can use in a subsequent call to retrieve the next set
--   of results.
listRecipesResponse_nextToken :: Lens' ListRecipesResponse (Maybe Text)

-- | The response's http status code.
listRecipesResponse_httpStatus :: Lens' ListRecipesResponse Int

-- | A list of recipes that are defined.
listRecipesResponse_recipes :: Lens' ListRecipesResponse [Recipe]

-- | A description of the recipe to be published, for this version of the
--   recipe.
publishRecipe_description :: Lens' PublishRecipe (Maybe Text)

-- | The name of the recipe to be published.
publishRecipe_name :: Lens' PublishRecipe Text

-- | The response's http status code.
publishRecipeResponse_httpStatus :: Lens' PublishRecipeResponse Int

-- | The name of the recipe that you published.
publishRecipeResponse_name :: Lens' PublishRecipeResponse Text

-- | Undocumented member.
createProject_sample :: Lens' CreateProject (Maybe Sample)

-- | Metadata tags to apply to this project.
createProject_tags :: Lens' CreateProject (Maybe (HashMap Text Text))

-- | The name of an existing dataset to associate this project with.
createProject_datasetName :: Lens' CreateProject Text

-- | A unique name for the new project. Valid characters are alphanumeric
--   (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
createProject_name :: Lens' CreateProject Text

-- | The name of an existing recipe to associate with the project.
createProject_recipeName :: Lens' CreateProject Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed for this request.
createProject_roleArn :: Lens' CreateProject Text

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int

-- | The name of the project that you created.
createProjectResponse_name :: Lens' CreateProjectResponse Text

-- | The index from which to preview a step. This index is used to preview
--   the result of steps that have already been applied, so that the
--   resulting view frame is from earlier in the view frame stack.
sendProjectSessionAction_stepIndex :: Lens' SendProjectSessionAction (Maybe Natural)

-- | If true, the result of the recipe step will be returned, but not
--   applied.
sendProjectSessionAction_preview :: Lens' SendProjectSessionAction (Maybe Bool)

-- | A unique identifier for an interactive session that's currently open
--   and ready for work. The action will be performed on this session.
sendProjectSessionAction_clientSessionId :: Lens' SendProjectSessionAction (Maybe Text)

-- | Undocumented member.
sendProjectSessionAction_recipeStep :: Lens' SendProjectSessionAction (Maybe RecipeStep)

-- | Undocumented member.
sendProjectSessionAction_viewFrame :: Lens' SendProjectSessionAction (Maybe ViewFrame)

-- | The name of the project to apply the action to.
sendProjectSessionAction_name :: Lens' SendProjectSessionAction Text

-- | A unique identifier for the action that was performed.
sendProjectSessionActionResponse_actionId :: Lens' SendProjectSessionActionResponse (Maybe Int)

-- | A message indicating the result of performing the action.
sendProjectSessionActionResponse_result :: Lens' SendProjectSessionActionResponse (Maybe Text)

-- | The response's http status code.
sendProjectSessionActionResponse_httpStatus :: Lens' SendProjectSessionActionResponse Int

-- | The name of the project that was affected by the action.
sendProjectSessionActionResponse_name :: Lens' SendProjectSessionActionResponse Text

-- | A regular expression for selecting a column from a dataset.
columnSelector_regex :: Lens' ColumnSelector (Maybe Text)

-- | The name of a column from a dataset.
columnSelector_name :: Lens' ColumnSelector (Maybe Text)

-- | List of column selectors. Selectors can be used to select columns from
--   the dataset. When selectors are undefined, configuration will be
--   applied to all supported columns.
columnStatisticsConfiguration_selectors :: Lens' ColumnStatisticsConfiguration (Maybe (NonEmpty ColumnSelector))

-- | Configuration for evaluations. Statistics can be used to select
--   evaluations and override parameters of evaluations.
columnStatisticsConfiguration_statistics :: Lens' ColumnStatisticsConfiguration StatisticsConfiguration

-- | A value that the condition must evaluate to for the condition to
--   succeed.
conditionExpression_value :: Lens' ConditionExpression (Maybe Text)

-- | A specific condition to apply to a recipe action. For more
--   information, see <a>Recipe structure</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
conditionExpression_condition :: Lens' ConditionExpression Text

-- | A column to apply this condition to.
conditionExpression_targetColumn :: Lens' ConditionExpression Text

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
csvOptions_headerRow :: Lens' CsvOptions (Maybe Bool)

-- | A single character that specifies the delimiter being used in the CSV
--   file.
csvOptions_delimiter :: Lens' CsvOptions (Maybe Text)

-- | A single character that specifies the delimiter used to create CSV job
--   output.
csvOutputOptions_delimiter :: Lens' CsvOutputOptions (Maybe Text)

-- | Represents an Amazon location where DataBrew can store intermediate
--   results.
dataCatalogInputDefinition_tempDirectory :: Lens' DataCatalogInputDefinition (Maybe S3Location)

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
dataCatalogInputDefinition_catalogId :: Lens' DataCatalogInputDefinition (Maybe Text)

-- | The name of a database in the Data Catalog.
dataCatalogInputDefinition_databaseName :: Lens' DataCatalogInputDefinition Text

-- | The name of a database table in the Data Catalog. This table
--   corresponds to a DataBrew dataset.
dataCatalogInputDefinition_tableName :: Lens' DataCatalogInputDefinition Text

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
dataCatalogOutput_databaseOptions :: Lens' DataCatalogOutput (Maybe DatabaseTableOutputOptions)

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
dataCatalogOutput_s3Options :: Lens' DataCatalogOutput (Maybe S3TableOutputOptions)

-- | The unique identifier of the Amazon Web Services account that holds
--   the Data Catalog that stores the data.
dataCatalogOutput_catalogId :: Lens' DataCatalogOutput (Maybe Text)

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output. Not supported with
--   DatabaseOptions.
dataCatalogOutput_overwrite :: Lens' DataCatalogOutput (Maybe Bool)

-- | The name of a database in the Data Catalog.
dataCatalogOutput_databaseName :: Lens' DataCatalogOutput Text

-- | The name of a table in the Data Catalog.
dataCatalogOutput_tableName :: Lens' DataCatalogOutput Text

-- | Undocumented member.
databaseInputDefinition_tempDirectory :: Lens' DatabaseInputDefinition (Maybe S3Location)

-- | The Glue Connection that stores the connection information for the
--   target database.
databaseInputDefinition_glueConnectionName :: Lens' DatabaseInputDefinition Text

-- | The table within the target database.
databaseInputDefinition_databaseTableName :: Lens' DatabaseInputDefinition Text

-- | The output mode to write into the database. Currently supported
--   option: NEW_TABLE.
databaseOutput_databaseOutputMode :: Lens' DatabaseOutput (Maybe DatabaseOutputMode)

-- | The Glue connection that stores the connection information for the
--   target database.
databaseOutput_glueConnectionName :: Lens' DatabaseOutput Text

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
databaseOutput_databaseOptions :: Lens' DatabaseOutput DatabaseTableOutputOptions

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can store intermediate results.
databaseTableOutputOptions_tempDirectory :: Lens' DatabaseTableOutputOptions (Maybe S3Location)

-- | A prefix for the name of a table DataBrew will create in the database.
databaseTableOutputOptions_tableName :: Lens' DatabaseTableOutputOptions Text

-- | The last modification date and time of the dataset.
dataset_lastModifiedDate :: Lens' Dataset (Maybe UTCTime)

-- | A set of options that defines how DataBrew interprets an Amazon S3
--   path of the dataset.
dataset_pathOptions :: Lens' Dataset (Maybe PathOptions)

-- | The date and time that the dataset was created.
dataset_createDate :: Lens' Dataset (Maybe UTCTime)

-- | A set of options that define how DataBrew interprets the data in the
--   dataset.
dataset_formatOptions :: Lens' Dataset (Maybe FormatOptions)

-- | The file format of a dataset that is created from an Amazon S3 file or
--   folder.
dataset_format :: Lens' Dataset (Maybe InputFormat)

-- | The Amazon Resource Name (ARN) of the user who created the dataset.
dataset_createdBy :: Lens' Dataset (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the dataset.
dataset_accountId :: Lens' Dataset (Maybe Text)

-- | The unique Amazon Resource Name (ARN) for the dataset.
dataset_resourceArn :: Lens' Dataset (Maybe Text)

-- | The location of the data for the dataset, either Amazon S3 or the Glue
--   Data Catalog.
dataset_source :: Lens' Dataset (Maybe Source)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
dataset_lastModifiedBy :: Lens' Dataset (Maybe Text)

-- | Metadata tags that have been applied to the dataset.
dataset_tags :: Lens' Dataset (Maybe (HashMap Text Text))

-- | The unique name of the dataset.
dataset_name :: Lens' Dataset Text

-- | Information on how DataBrew can find the dataset, in either the Glue
--   Data Catalog or Amazon S3.
dataset_input :: Lens' Dataset Input

-- | Optional boolean value that defines whether the captured value of this
--   parameter should be used to create a new column in a dataset.
datasetParameter_createColumn :: Lens' DatasetParameter (Maybe Bool)

-- | The optional filter expression structure to apply additional matching
--   criteria to the parameter.
datasetParameter_filter :: Lens' DatasetParameter (Maybe FilterExpression)

-- | Additional parameter options such as a format and a timezone. Required
--   for datetime parameters.
datasetParameter_datetimeOptions :: Lens' DatasetParameter (Maybe DatetimeOptions)

-- | The name of the parameter that is used in the dataset's Amazon S3
--   path.
datasetParameter_name :: Lens' DatasetParameter Text

-- | The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
datasetParameter_type :: Lens' DatasetParameter ParameterType

-- | Optional value for a timezone offset of the datetime parameter value
--   in the Amazon S3 path. Shouldn't be used if Format for this parameter
--   includes timezone fields. If no offset specified, UTC is assumed.
datetimeOptions_timezoneOffset :: Lens' DatetimeOptions (Maybe Text)

-- | Optional value for a non-US locale code, needed for correct
--   interpretation of some date formats.
datetimeOptions_localeCode :: Lens' DatetimeOptions (Maybe Text)

-- | Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
datetimeOptions_format :: Lens' DatetimeOptions Text

-- | One or more sheet numbers in the Excel file that will be included in
--   the dataset.
excelOptions_sheetIndexes :: Lens' ExcelOptions (Maybe (NonEmpty Natural))

-- | One or more named sheets in the Excel file that will be included in
--   the dataset.
excelOptions_sheetNames :: Lens' ExcelOptions (Maybe (NonEmpty Text))

-- | A variable that specifies whether the first row in the file is parsed
--   as the header. If this value is false, column names are
--   auto-generated.
excelOptions_headerRow :: Lens' ExcelOptions (Maybe Bool)

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently
--   it's the only allowed value.
filesLimit_orderedBy :: Lens' FilesLimit (Maybe OrderedBy)

-- | A criteria to use for Amazon S3 files sorting before their selection.
--   By default uses DESCENDING order, i.e. most recent files are selected
--   first. Anotherpossible value is ASCENDING.
filesLimit_order :: Lens' FilesLimit (Maybe Order)

-- | The number of Amazon S3 files to select.
filesLimit_maxFiles :: Lens' FilesLimit Natural

-- | The expression which includes condition names followed by substitution
--   variables, possibly grouped and combined with other conditions. For
--   example, "(starts_with :prefix1 or starts_with :prefix2) and
--   (ends_with :suffix1 or ends_with :suffix2)". Substitution variables
--   should start with ':' symbol.
filterExpression_expression :: Lens' FilterExpression Text

-- | The map of substitution variable names to their values used in this
--   filter expression.
filterExpression_valuesMap :: Lens' FilterExpression (HashMap Text Text)

-- | Options that define how JSON input is to be interpreted by DataBrew.
formatOptions_json :: Lens' FormatOptions (Maybe JsonOptions)

-- | Options that define how CSV input is to be interpreted by DataBrew.
formatOptions_csv :: Lens' FormatOptions (Maybe CsvOptions)

-- | Options that define how Excel input is to be interpreted by DataBrew.
formatOptions_excel :: Lens' FormatOptions (Maybe ExcelOptions)

-- | The Glue Data Catalog parameters for the data.
input_dataCatalogInputDefinition :: Lens' Input (Maybe DataCatalogInputDefinition)

-- | The Amazon S3 location where the data is stored.
input_s3InputDefinition :: Lens' Input (Maybe S3Location)

-- | Connection information for dataset input files stored in a database.
input_databaseInputDefinition :: Lens' Input (Maybe DatabaseInputDefinition)

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
job_dataCatalogOutputs :: Lens' Job (Maybe (NonEmpty DataCatalogOutput))

-- | The modification date and time of the job.
job_lastModifiedDate :: Lens' Job (Maybe UTCTime)

-- | The date and time that the job was created.
job_createDate :: Lens' Job (Maybe UTCTime)

-- | A set of steps that the job runs.
job_recipeReference :: Lens' Job (Maybe RecipeReference)

-- | The Amazon Resource Name (ARN) of the user who created the job.
job_createdBy :: Lens' Job (Maybe Text)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
job_databaseOutputs :: Lens' Job (Maybe (NonEmpty DatabaseOutput))

-- | The ID of the Amazon Web Services account that owns the job.
job_accountId :: Lens' Job (Maybe Text)

-- | The encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
job_encryptionMode :: Lens' Job (Maybe EncryptionMode)

-- | One or more artifacts that represent output from running the job.
job_outputs :: Lens' Job (Maybe (NonEmpty Output))

-- | The unique Amazon Resource Name (ARN) for the job.
job_resourceArn :: Lens' Job (Maybe Text)

-- | The current status of Amazon CloudWatch logging for the job.
job_logSubscription :: Lens' Job (Maybe LogSubscription)

-- | The name of the project that the job is associated with.
job_projectName :: Lens' Job (Maybe Text)

-- | The maximum number of times to retry the job after a job run fails.
job_maxRetries :: Lens' Job (Maybe Natural)

-- | A dataset that the job is to process.
job_datasetName :: Lens' Job (Maybe Text)

-- | The Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
job_encryptionKeyArn :: Lens' Job (Maybe Text)

-- | The maximum number of nodes that can be consumed when the job
--   processes data.
job_maxCapacity :: Lens' Job (Maybe Int)

-- | The Amazon Resource Name (ARN) of the user who last modified the job.
job_lastModifiedBy :: Lens' Job (Maybe Text)

-- | The job type of the job, which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
job_type :: Lens' Job (Maybe JobType)

-- | The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
job_timeout :: Lens' Job (Maybe Natural)

-- | Metadata tags that have been applied to the job.
job_tags :: Lens' Job (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role to be assumed for this job.
job_roleArn :: Lens' Job (Maybe Text)

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default value is used.
--   The default value is CUSTOM_ROWS for the mode parameter and 20,000 for
--   the size parameter.
job_jobSample :: Lens' Job (Maybe JobSample)

-- | The unique name of the job.
job_name :: Lens' Job Text

-- | The date and time when the job completed processing.
jobRun_completedOn :: Lens' JobRun (Maybe UTCTime)

-- | The current state of the job run entity itself.
jobRun_state :: Lens' JobRun (Maybe JobRunState)

-- | One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
jobRun_dataCatalogOutputs :: Lens' JobRun (Maybe (NonEmpty DataCatalogOutput))

-- | The name of the job being processed during this run.
jobRun_jobName :: Lens' JobRun (Maybe Text)

-- | The date and time when the job run began.
jobRun_startedOn :: Lens' JobRun (Maybe UTCTime)

-- | The set of steps processed by the job.
jobRun_recipeReference :: Lens' JobRun (Maybe RecipeReference)

-- | Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
jobRun_databaseOutputs :: Lens' JobRun (Maybe (NonEmpty DatabaseOutput))

-- | The name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
jobRun_logGroupName :: Lens' JobRun (Maybe Text)

-- | One or more output artifacts from a job run.
jobRun_outputs :: Lens' JobRun (Maybe (NonEmpty Output))

-- | The unique identifier of the job run.
jobRun_runId :: Lens' JobRun (Maybe Text)

-- | The amount of time, in seconds, during which a job run consumed
--   resources.
jobRun_executionTime :: Lens' JobRun (Maybe Int)

-- | The current status of Amazon CloudWatch logging for the job run.
jobRun_logSubscription :: Lens' JobRun (Maybe LogSubscription)

-- | The Amazon Resource Name (ARN) of the user who initiated the job run.
jobRun_startedBy :: Lens' JobRun (Maybe Text)

-- | The name of the dataset for the job to process.
jobRun_datasetName :: Lens' JobRun (Maybe Text)

-- | The number of times that DataBrew has attempted to run the job.
jobRun_attempt :: Lens' JobRun (Maybe Int)

-- | A message indicating an error (if any) that was encountered when the
--   job ran.
jobRun_errorMessage :: Lens' JobRun (Maybe Text)

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
jobRun_jobSample :: Lens' JobRun (Maybe JobSample)

-- | The <tt>Size</tt> parameter is only required when the mode is
--   CUSTOM_ROWS. The profile job is run on the specified number of rows.
--   The maximum value for size is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
jobSample_size :: Lens' JobSample (Maybe Integer)

-- | A value that determines whether the profile job is run on the entire
--   dataset or a specified number of rows. This value must be one of the
--   following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
jobSample_mode :: Lens' JobSample (Maybe SampleMode)

-- | A value that specifies whether JSON input contains embedded new line
--   characters.
jsonOptions_multiLine :: Lens' JsonOptions (Maybe Bool)

-- | The names of one or more partition columns for the output of the job.
output_partitionColumns :: Lens' Output (Maybe [Text])

-- | Represents options that define how DataBrew formats job output files.
output_formatOptions :: Lens' Output (Maybe OutputFormatOptions)

-- | The data format of the output of the job.
output_format :: Lens' Output (Maybe OutputFormat)

-- | The compression algorithm used to compress the output text of the job.
output_compressionFormat :: Lens' Output (Maybe CompressionFormat)

-- | A value that, if true, means that any data in the location specified
--   for output is overwritten with new output.
output_overwrite :: Lens' Output (Maybe Bool)

-- | The location in Amazon S3 where the job writes its output.
output_location :: Lens' Output S3Location

-- | Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
outputFormatOptions_csv :: Lens' OutputFormatOptions (Maybe CsvOutputOptions)

-- | If provided, this structure defines a date range for matching Amazon
--   S3 objects based on their LastModifiedDate attribute in Amazon S3.
pathOptions_lastModifiedDateCondition :: Lens' PathOptions (Maybe FilterExpression)

-- | A structure that maps names of parameters used in the Amazon S3 path
--   of a dataset to their definitions.
pathOptions_parameters :: Lens' PathOptions (Maybe (HashMap Text DatasetParameter))

-- | If provided, this structure imposes a limit on a number of files that
--   should be selected.
pathOptions_filesLimit :: Lens' PathOptions (Maybe FilesLimit)

-- | Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
profileConfiguration_datasetStatisticsConfiguration :: Lens' ProfileConfiguration (Maybe StatisticsConfiguration)

-- | List of configurations for column evaluations.
--   ColumnStatisticsConfigurations are used to select evaluations and
--   override parameters of evaluations for particular columns. When
--   ColumnStatisticsConfigurations is undefined, the profile job will
--   profile all supported columns and run all supported evaluations.
profileConfiguration_columnStatisticsConfigurations :: Lens' ProfileConfiguration (Maybe (NonEmpty ColumnStatisticsConfiguration))

-- | List of column selectors. ProfileColumns can be used to select columns
--   from the dataset. When ProfileColumns is undefined, the profile job
--   will profile all supported columns.
profileConfiguration_profileColumns :: Lens' ProfileConfiguration (Maybe (NonEmpty ColumnSelector))

-- | The last modification date and time for the project.
project_lastModifiedDate :: Lens' Project (Maybe UTCTime)

-- | The date and time when the project was opened.
project_openDate :: Lens' Project (Maybe UTCTime)

-- | The date and time that the project was created.
project_createDate :: Lens' Project (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who crated the project.
project_createdBy :: Lens' Project (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the project.
project_accountId :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) for the project.
project_resourceArn :: Lens' Project (Maybe Text)

-- | The dataset that the project is to act upon.
project_datasetName :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   project.
project_lastModifiedBy :: Lens' Project (Maybe Text)

-- | The sample size and sampling type to apply to the data. If this
--   parameter isn't specified, then the sample consists of the first 500
--   rows from the dataset.
project_sample :: Lens' Project (Maybe Sample)

-- | The Amazon Resource Name (ARN) of the user that opened the project for
--   use.
project_openedBy :: Lens' Project (Maybe Text)

-- | Metadata tags that have been applied to the project.
project_tags :: Lens' Project (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role that will be assumed for
--   this project.
project_roleArn :: Lens' Project (Maybe Text)

-- | The unique name of a project.
project_name :: Lens' Project Text

-- | The name of a recipe that will be developed during a project session.
project_recipeName :: Lens' Project Text

-- | The last modification date and time of the recipe.
recipe_lastModifiedDate :: Lens' Recipe (Maybe UTCTime)

-- | The date and time that the recipe was created.
recipe_createDate :: Lens' Recipe (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who published the recipe.
recipe_publishedBy :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who created the recipe.
recipe_createdBy :: Lens' Recipe (Maybe Text)

-- | A list of steps that are defined by the recipe.
recipe_steps :: Lens' Recipe (Maybe [RecipeStep])

-- | The date and time when the recipe was published.
recipe_publishedDate :: Lens' Recipe (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) for the recipe.
recipe_resourceArn :: Lens' Recipe (Maybe Text)

-- | The identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
recipe_recipeVersion :: Lens' Recipe (Maybe Text)

-- | The name of the project that the recipe is associated with.
recipe_projectName :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   recipe.
recipe_lastModifiedBy :: Lens' Recipe (Maybe Text)

-- | The description of the recipe.
recipe_description :: Lens' Recipe (Maybe Text)

-- | Metadata tags that have been applied to the recipe.
recipe_tags :: Lens' Recipe (Maybe (HashMap Text Text))

-- | The unique name for the recipe.
recipe_name :: Lens' Recipe Text

-- | Contextual parameters for the transformation.
recipeAction_parameters :: Lens' RecipeAction (Maybe (HashMap Text Text))

-- | The name of a valid DataBrew transformation to be performed on the
--   data.
recipeAction_operation :: Lens' RecipeAction Text

-- | The identifier for the version for the recipe.
recipeReference_recipeVersion :: Lens' RecipeReference (Maybe Text)

-- | The name of the recipe.
recipeReference_name :: Lens' RecipeReference Text

-- | One or more conditions that must be met for the recipe step to
--   succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
recipeStep_conditionExpressions :: Lens' RecipeStep (Maybe [ConditionExpression])

-- | The particular action to be performed in the recipe step.
recipeStep_action :: Lens' RecipeStep RecipeAction

-- | The identifier for the recipe version associated with this error.
recipeVersionErrorDetail_recipeVersion :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | The HTTP status code for the error.
recipeVersionErrorDetail_errorCode :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | The text of the error message.
recipeVersionErrorDetail_errorMessage :: Lens' RecipeVersionErrorDetail (Maybe Text)

-- | The unique name of the object in the bucket.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The Amazon S3 bucket name.
s3Location_bucket :: Lens' S3Location Text

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can write output from a job.
s3TableOutputOptions_location :: Lens' S3TableOutputOptions S3Location

-- | The number of rows in the sample.
sample_size :: Lens' Sample (Maybe Natural)

-- | The way in which DataBrew obtains rows from a dataset.
sample_type :: Lens' Sample SampleType

-- | The date and time when the schedule was last modified.
schedule_lastModifiedDate :: Lens' Schedule (Maybe UTCTime)

-- | The date and time that the schedule was created.
schedule_createDate :: Lens' Schedule (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the user who created the schedule.
schedule_createdBy :: Lens' Schedule (Maybe Text)

-- | The ID of the Amazon Web Services account that owns the schedule.
schedule_accountId :: Lens' Schedule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schedule.
schedule_resourceArn :: Lens' Schedule (Maybe Text)

-- | The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
schedule_cronExpression :: Lens' Schedule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
schedule_lastModifiedBy :: Lens' Schedule (Maybe Text)

-- | A list of jobs to be run, according to the schedule.
schedule_jobNames :: Lens' Schedule (Maybe [Text])

-- | Metadata tags that have been applied to the schedule.
schedule_tags :: Lens' Schedule (Maybe (HashMap Text Text))

-- | The name of the schedule.
schedule_name :: Lens' Schedule Text

-- | The name of an evaluation
statisticOverride_statistic :: Lens' StatisticOverride Text

-- | A map that includes overrides of an evaluation’s parameters.
statisticOverride_parameters :: Lens' StatisticOverride (HashMap Text Text)

-- | List of overrides for evaluations.
statisticsConfiguration_overrides :: Lens' StatisticsConfiguration (Maybe (NonEmpty StatisticOverride))

-- | List of included evaluations. When the list is undefined, all
--   supported evaluations will be included.
statisticsConfiguration_includedStatistics :: Lens' StatisticsConfiguration (Maybe (NonEmpty Text))

-- | A list of columns to hide in the view frame.
viewFrame_hiddenColumns :: Lens' ViewFrame (Maybe [Text])

-- | The number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
viewFrame_columnRange :: Lens' ViewFrame (Maybe Natural)

-- | The starting index for the range of columns to return in the view
--   frame.
viewFrame_startColumnIndex :: Lens' ViewFrame Natural


module Amazonka.DataBrew.Waiters


-- | Derived from API version <tt>2017-07-25</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Glue DataBrew is a visual, cloud-scale data-preparation service.
--   DataBrew simplifies data preparation tasks, targeting data issues that
--   are hard to spot and time-consuming to fix. DataBrew empowers users of
--   all technical levels to visualize the data and perform one-click data
--   transformations, with no coding required.
module Amazonka.DataBrew

-- | API version <tt>2017-07-25</tt> of the Amazon Glue DataBrew SDK
--   configuration.
defaultService :: Service

-- | The input parameters for this request failed validation.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access to the specified resource was denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Updating or deleting a resource can cause an inconsistent state.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A service quota is exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service failure occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more resources can't be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe Text -> Maybe Natural -> ListProjects

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListProjects'</a>, <a>listProjects_maxResults</a> -
--   The maximum number of results to return in this request.
newListProjects :: ListProjects

-- | <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Int -> [Project] -> ListProjectsResponse

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - A list of projects that are
--   defined .
newListProjectsResponse :: Int -> ListProjectsResponse

-- | <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteProject'</a>, <a>deleteProject_name</a> - The name
--   of the project to be deleted.
newDeleteProject :: Text -> DeleteProject

-- | <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> Text -> DeleteProjectResponse

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DeleteProject'</a>, <a>deleteProjectResponse_name</a> -
--   The name of the project that you deleted.
newDeleteProjectResponse :: Int -> Text -> DeleteProjectResponse

-- | <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe Sample -> Text -> Text -> UpdateProject

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sample:UpdateProject'</a>, <a>updateProject_sample</a> -
--   Undocumented member.
--   
--   <a>$sel:roleArn:UpdateProject'</a>, <a>updateProject_roleArn</a> - The
--   Amazon Resource Name (ARN) of the IAM role to be assumed for this
--   request.
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProject_name</a> - The name
--   of the project to be updated.
newUpdateProject :: Text -> Text -> UpdateProject

-- | <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Maybe POSIX -> Int -> Text -> UpdateProjectResponse

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_lastModifiedDate</a> - The date and time that
--   the project was last modified.
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProjectResponse_name</a> -
--   The name of the project that you updated.
newUpdateProjectResponse :: Int -> Text -> UpdateProjectResponse

-- | <i>See:</i> <a>newListSchedules</a> smart constructor.
data ListSchedules
ListSchedules' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListSchedules

-- | Create a value of <a>ListSchedules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:ListSchedules'</a>, <a>listSchedules_jobName</a> - The
--   name of the job that these schedules apply to.
--   
--   <a>$sel:nextToken:ListSchedules'</a>, <a>listSchedules_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListSchedules'</a>, <a>listSchedules_maxResults</a>
--   - The maximum number of results to return in this request.
newListSchedules :: ListSchedules

-- | <i>See:</i> <a>newListSchedulesResponse</a> smart constructor.
data ListSchedulesResponse
ListSchedulesResponse' :: Maybe Text -> Int -> [Schedule] -> ListSchedulesResponse

-- | Create a value of <a>ListSchedulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSchedules'</a>,
--   <a>listSchedulesResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListSchedulesResponse'</a>,
--   <a>listSchedulesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:schedules:ListSchedulesResponse'</a>,
--   <a>listSchedulesResponse_schedules</a> - A list of schedules that are
--   defined.
newListSchedulesResponse :: Int -> ListSchedulesResponse

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeDataset'</a>, <a>describeDataset_name</a> - The
--   name of the dataset to be described.
newDescribeDataset :: Text -> DescribeDataset

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe POSIX -> Maybe PathOptions -> Maybe POSIX -> Maybe FormatOptions -> Maybe InputFormat -> Maybe Text -> Maybe Text -> Maybe Source -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> Text -> Input -> DescribeDatasetResponse

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_lastModifiedDate</a> - The date and time
--   that the dataset was last modified.
--   
--   <a>$sel:pathOptions:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_pathOptions</a> - A set of options that
--   defines how DataBrew interprets an Amazon S3 path of the dataset.
--   
--   <a>$sel:createDate:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_createDate</a> - The date and time that the
--   dataset was created.
--   
--   <a>$sel:formatOptions:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_formatOptions</a> - Undocumented member.
--   
--   <a>$sel:format:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_format</a> - The file format of a dataset
--   that is created from an Amazon S3 file or folder.
--   
--   <a>$sel:createdBy:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_createdBy</a> - The identifier (user name)
--   of the user who created the dataset.
--   
--   <a>$sel:resourceArn:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the dataset.
--   
--   <a>$sel:source:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_source</a> - The location of the data for
--   this dataset, Amazon S3 or the Glue Data Catalog.
--   
--   <a>$sel:lastModifiedBy:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the dataset.
--   
--   <a>$sel:tags:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_tags</a> - Metadata tags associated with
--   this dataset.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeDataset'</a>, <a>describeDatasetResponse_name</a>
--   - The name of the dataset.
--   
--   <a>$sel:input:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_input</a> - Undocumented member.
newDescribeDatasetResponse :: Int -> Text -> Input -> DescribeDatasetResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) string that uniquely identifies the DataBrew resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags associated
--   with the DataBrew resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDescribeProject</a> smart constructor.
data DescribeProject
DescribeProject' :: Text -> DescribeProject

-- | Create a value of <a>DescribeProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeProject'</a>, <a>describeProject_name</a> - The
--   name of the project to be described.
newDescribeProject :: Text -> DescribeProject

-- | <i>See:</i> <a>newDescribeProjectResponse</a> smart constructor.
data DescribeProjectResponse
DescribeProjectResponse' :: Maybe POSIX -> Maybe SessionStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Sample -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> Text -> DescribeProjectResponse

-- | Create a value of <a>DescribeProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_lastModifiedDate</a> - The date and time
--   that the project was last modified.
--   
--   <a>$sel:sessionStatus:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_sessionStatus</a> - Describes the current
--   state of the session:
--   
--   <ul>
--   <li><tt>PROVISIONING</tt> - allocating resources for the session.</li>
--   <li><tt>INITIALIZING</tt> - getting the session ready for first
--   use.</li>
--   <li><tt>ASSIGNED</tt> - the session is ready for use.</li>
--   </ul>
--   
--   <a>$sel:openDate:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_openDate</a> - The date and time when the
--   project was opened.
--   
--   <a>$sel:createDate:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_createDate</a> - The date and time that the
--   project was created.
--   
--   <a>$sel:createdBy:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_createdBy</a> - The identifier (user name)
--   of the user who created the project.
--   
--   <a>$sel:resourceArn:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the project.
--   
--   <a>$sel:recipeName:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_recipeName</a> - The recipe associated with
--   this job.
--   
--   <a>$sel:datasetName:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_datasetName</a> - The dataset associated
--   with the project.
--   
--   <a>$sel:lastModifiedBy:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the project.
--   
--   <a>$sel:sample:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_sample</a> - Undocumented member.
--   
--   <a>$sel:openedBy:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_openedBy</a> - The identifier (user name)
--   of the user that opened the project for use.
--   
--   <a>$sel:tags:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_tags</a> - Metadata tags associated with
--   this project.
--   
--   <a>$sel:roleArn:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_roleArn</a> - The ARN of the Identity and
--   Access Management (IAM) role to be assumed when DataBrew runs the job.
--   
--   <a>$sel:httpStatus:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeProject'</a>, <a>describeProjectResponse_name</a>
--   - The name of the project.
newDescribeProjectResponse :: Int -> Text -> DescribeProjectResponse

-- | <i>See:</i> <a>newCreateRecipeJob</a> smart constructor.
data CreateRecipeJob
CreateRecipeJob' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe RecipeReference -> Maybe (NonEmpty DatabaseOutput) -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe LogSubscription -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Natural -> Maybe (HashMap Text Text) -> Text -> Text -> CreateRecipeJob

-- | Create a value of <a>CreateRecipeJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:CreateRecipeJob'</a>,
--   <a>createRecipeJob_dataCatalogOutputs</a> - One or more artifacts that
--   represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:recipeReference:CreateRecipeJob'</a>,
--   <a>createRecipeJob_recipeReference</a> - Undocumented member.
--   
--   <a>$sel:databaseOutputs:CreateRecipeJob'</a>,
--   <a>createRecipeJob_databaseOutputs</a> - Represents a list of JDBC
--   database output objects which defines the output destination for a
--   DataBrew recipe job to write to.
--   
--   <a>$sel:encryptionMode:CreateRecipeJob'</a>,
--   <a>createRecipeJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:CreateRecipeJob'</a>, <a>createRecipeJob_outputs</a> -
--   One or more artifacts that represent the output from running the job.
--   
--   <a>$sel:logSubscription:CreateRecipeJob'</a>,
--   <a>createRecipeJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:projectName:CreateRecipeJob'</a>,
--   <a>createRecipeJob_projectName</a> - Either the name of an existing
--   project, or a combination of a recipe and a dataset to associate with
--   the recipe.
--   
--   <a>$sel:maxRetries:CreateRecipeJob'</a>,
--   <a>createRecipeJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:datasetName:CreateRecipeJob'</a>,
--   <a>createRecipeJob_datasetName</a> - The name of the dataset that this
--   job processes.
--   
--   <a>$sel:encryptionKeyArn:CreateRecipeJob'</a>,
--   <a>createRecipeJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:CreateRecipeJob'</a>,
--   <a>createRecipeJob_maxCapacity</a> - The maximum number of nodes that
--   DataBrew can consume when the job processes data.
--   
--   <a>$sel:timeout:CreateRecipeJob'</a>, <a>createRecipeJob_timeout</a> -
--   The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:CreateRecipeJob'</a>, <a>createRecipeJob_tags</a> -
--   Metadata tags to apply to this job.
--   
--   <a>$sel:name:CreateRecipeJob'</a>, <a>createRecipeJob_name</a> - A
--   unique name for the job. Valid characters are alphanumeric (A-Z, a-z,
--   0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:roleArn:CreateRecipeJob'</a>, <a>createRecipeJob_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newCreateRecipeJob :: Text -> Text -> CreateRecipeJob

-- | <i>See:</i> <a>newCreateRecipeJobResponse</a> smart constructor.
data CreateRecipeJobResponse
CreateRecipeJobResponse' :: Int -> Text -> CreateRecipeJobResponse

-- | Create a value of <a>CreateRecipeJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRecipeJobResponse'</a>,
--   <a>createRecipeJobResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateRecipeJob'</a>, <a>createRecipeJobResponse_name</a>
--   - The name of the job that you created.
newCreateRecipeJobResponse :: Int -> Text -> CreateRecipeJobResponse

-- | <i>See:</i> <a>newListRecipeVersions</a> smart constructor.
data ListRecipeVersions
ListRecipeVersions' :: Maybe Text -> Maybe Natural -> Text -> ListRecipeVersions

-- | Create a value of <a>ListRecipeVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipeVersions'</a>,
--   <a>listRecipeVersions_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListRecipeVersions'</a>,
--   <a>listRecipeVersions_maxResults</a> - The maximum number of results
--   to return in this request.
--   
--   <a>$sel:name:ListRecipeVersions'</a>, <a>listRecipeVersions_name</a> -
--   The name of the recipe for which to return version information.
newListRecipeVersions :: Text -> ListRecipeVersions

-- | <i>See:</i> <a>newListRecipeVersionsResponse</a> smart constructor.
data ListRecipeVersionsResponse
ListRecipeVersionsResponse' :: Maybe Text -> Int -> [Recipe] -> ListRecipeVersionsResponse

-- | Create a value of <a>ListRecipeVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipeVersions'</a>,
--   <a>listRecipeVersionsResponse_nextToken</a> - A token that you can use
--   in a subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListRecipeVersionsResponse'</a>,
--   <a>listRecipeVersionsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:recipes:ListRecipeVersionsResponse'</a>,
--   <a>listRecipeVersionsResponse_recipes</a> - A list of versions for the
--   specified recipe.
newListRecipeVersionsResponse :: Int -> ListRecipeVersionsResponse

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteDataset'</a>, <a>deleteDataset_name</a> - The name
--   of the dataset to be deleted.
newDeleteDataset :: Text -> DeleteDataset

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: Int -> Text -> DeleteDatasetResponse

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDatasetResponse'</a>,
--   <a>deleteDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DeleteDataset'</a>, <a>deleteDatasetResponse_name</a> -
--   The name of the dataset that you deleted.
newDeleteDatasetResponse :: Int -> Text -> DeleteDatasetResponse

-- | <i>See:</i> <a>newUpdateDataset</a> smart constructor.
data UpdateDataset
UpdateDataset' :: Maybe PathOptions -> Maybe FormatOptions -> Maybe InputFormat -> Text -> Input -> UpdateDataset

-- | Create a value of <a>UpdateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathOptions:UpdateDataset'</a>,
--   <a>updateDataset_pathOptions</a> - A set of options that defines how
--   DataBrew interprets an Amazon S3 path of the dataset.
--   
--   <a>$sel:formatOptions:UpdateDataset'</a>,
--   <a>updateDataset_formatOptions</a> - Undocumented member.
--   
--   <a>$sel:format:UpdateDataset'</a>, <a>updateDataset_format</a> - The
--   file format of a dataset that is created from an Amazon S3 file or
--   folder.
--   
--   <a>$sel:name:UpdateDataset'</a>, <a>updateDataset_name</a> - The name
--   of the dataset to be updated.
--   
--   <a>$sel:input:UpdateDataset'</a>, <a>updateDataset_input</a> -
--   Undocumented member.
newUpdateDataset :: Text -> Input -> UpdateDataset

-- | <i>See:</i> <a>newUpdateDatasetResponse</a> smart constructor.
data UpdateDatasetResponse
UpdateDatasetResponse' :: Int -> Text -> UpdateDatasetResponse

-- | Create a value of <a>UpdateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDatasetResponse'</a>,
--   <a>updateDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateDataset'</a>, <a>updateDatasetResponse_name</a> -
--   The name of the dataset that you updated.
newUpdateDatasetResponse :: Int -> Text -> UpdateDatasetResponse

-- | <i>See:</i> <a>newStopJobRun</a> smart constructor.
data StopJobRun
StopJobRun' :: Text -> Text -> StopJobRun

-- | Create a value of <a>StopJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopJobRun'</a>, <a>stopJobRun_name</a> - The name of the
--   job to be stopped.
--   
--   <a>$sel:runId:StopJobRun'</a>, <a>stopJobRun_runId</a> - The ID of the
--   job run to be stopped.
newStopJobRun :: Text -> Text -> StopJobRun

-- | <i>See:</i> <a>newStopJobRunResponse</a> smart constructor.
data StopJobRunResponse
StopJobRunResponse' :: Int -> Text -> StopJobRunResponse

-- | Create a value of <a>StopJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopJobRunResponse'</a>,
--   <a>stopJobRunResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:runId:StopJobRun'</a>, <a>stopJobRunResponse_runId</a> - The
--   ID of the job run that you stopped.
newStopJobRunResponse :: Int -> Text -> StopJobRunResponse

-- | <i>See:</i> <a>newUpdateRecipeJob</a> smart constructor.
data UpdateRecipeJob
UpdateRecipeJob' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe (NonEmpty DatabaseOutput) -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe LogSubscription -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe Natural -> Text -> Text -> UpdateRecipeJob

-- | Create a value of <a>UpdateRecipeJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_dataCatalogOutputs</a> - One or more artifacts that
--   represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:databaseOutputs:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_databaseOutputs</a> - Represents a list of JDBC
--   database output objects which defines the output destination for a
--   DataBrew recipe job to write into.
--   
--   <a>$sel:encryptionMode:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:UpdateRecipeJob'</a>, <a>updateRecipeJob_outputs</a> -
--   One or more artifacts that represent the output from running the job.
--   
--   <a>$sel:logSubscription:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:maxRetries:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:encryptionKeyArn:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:UpdateRecipeJob'</a>,
--   <a>updateRecipeJob_maxCapacity</a> - The maximum number of nodes that
--   DataBrew can consume when the job processes data.
--   
--   <a>$sel:timeout:UpdateRecipeJob'</a>, <a>updateRecipeJob_timeout</a> -
--   The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:name:UpdateRecipeJob'</a>, <a>updateRecipeJob_name</a> - The
--   name of the job to update.
--   
--   <a>$sel:roleArn:UpdateRecipeJob'</a>, <a>updateRecipeJob_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newUpdateRecipeJob :: Text -> Text -> UpdateRecipeJob

-- | <i>See:</i> <a>newUpdateRecipeJobResponse</a> smart constructor.
data UpdateRecipeJobResponse
UpdateRecipeJobResponse' :: Int -> Text -> UpdateRecipeJobResponse

-- | Create a value of <a>UpdateRecipeJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRecipeJobResponse'</a>,
--   <a>updateRecipeJobResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateRecipeJob'</a>, <a>updateRecipeJobResponse_name</a>
--   - The name of the job that you updated.
newUpdateRecipeJobResponse :: Int -> Text -> UpdateRecipeJobResponse

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListJobs

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - A token
--   generated by DataBrew that specifies where to continue pagination if a
--   previous request was truncated. To get the next set of pages, pass in
--   the NextToken value from the response object of the previous page
--   call.
--   
--   <a>$sel:projectName:ListJobs'</a>, <a>listJobs_projectName</a> - The
--   name of a project. Using this parameter indicates to return only those
--   jobs that are associated with the specified project.
--   
--   <a>$sel:datasetName:ListJobs'</a>, <a>listJobs_datasetName</a> - The
--   name of a dataset. Using this parameter indicates to return only those
--   jobs that act on the specified dataset.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum number of results to return in this request.
newListJobs :: ListJobs

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Int -> [Job] -> ListJobsResponse

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> - A
--   token that you can use in a subsequent call to retrieve the next set
--   of results.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:jobs:ListJobsResponse'</a>, <a>listJobsResponse_jobs</a> - A
--   list of jobs that are defined.
newListJobsResponse :: Int -> ListJobsResponse

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Maybe PathOptions -> Maybe FormatOptions -> Maybe InputFormat -> Maybe (HashMap Text Text) -> Text -> Input -> CreateDataset

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathOptions:CreateDataset'</a>,
--   <a>createDataset_pathOptions</a> - A set of options that defines how
--   DataBrew interprets an Amazon S3 path of the dataset.
--   
--   <a>$sel:formatOptions:CreateDataset'</a>,
--   <a>createDataset_formatOptions</a> - Undocumented member.
--   
--   <a>$sel:format:CreateDataset'</a>, <a>createDataset_format</a> - The
--   file format of a dataset that is created from an Amazon S3 file or
--   folder.
--   
--   <a>$sel:tags:CreateDataset'</a>, <a>createDataset_tags</a> - Metadata
--   tags to apply to this dataset.
--   
--   <a>$sel:name:CreateDataset'</a>, <a>createDataset_name</a> - The name
--   of the dataset to be created. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:input:CreateDataset'</a>, <a>createDataset_input</a> -
--   Undocumented member.
newCreateDataset :: Text -> Input -> CreateDataset

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Int -> Text -> CreateDatasetResponse

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateDataset'</a>, <a>createDatasetResponse_name</a> -
--   The name of the dataset that you created.
newCreateDatasetResponse :: Int -> Text -> CreateDatasetResponse

-- | <i>See:</i> <a>newDeleteJob</a> smart constructor.
data DeleteJob
DeleteJob' :: Text -> DeleteJob

-- | Create a value of <a>DeleteJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteJob'</a>, <a>deleteJob_name</a> - The name of the
--   job to be deleted.
newDeleteJob :: Text -> DeleteJob

-- | <i>See:</i> <a>newDeleteJobResponse</a> smart constructor.
data DeleteJobResponse
DeleteJobResponse' :: Int -> Text -> DeleteJobResponse

-- | Create a value of <a>DeleteJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteJobResponse'</a>,
--   <a>deleteJobResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:name:DeleteJob'</a>, <a>deleteJobResponse_name</a> - The name
--   of the job that you deleted.
newDeleteJobResponse :: Int -> Text -> DeleteJobResponse

-- | <i>See:</i> <a>newCreateRecipe</a> smart constructor.
data CreateRecipe
CreateRecipe' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> [RecipeStep] -> CreateRecipe

-- | Create a value of <a>CreateRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRecipe'</a>, <a>createRecipe_description</a>
--   - A description for the recipe.
--   
--   <a>$sel:tags:CreateRecipe'</a>, <a>createRecipe_tags</a> - Metadata
--   tags to apply to this recipe.
--   
--   <a>$sel:name:CreateRecipe'</a>, <a>createRecipe_name</a> - A unique
--   name for the recipe. Valid characters are alphanumeric (A-Z, a-z,
--   0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:steps:CreateRecipe'</a>, <a>createRecipe_steps</a> - An array
--   containing the steps to be performed by the recipe. Each recipe step
--   consists of one recipe action and (optionally) an array of condition
--   expressions.
newCreateRecipe :: Text -> CreateRecipe

-- | <i>See:</i> <a>newCreateRecipeResponse</a> smart constructor.
data CreateRecipeResponse
CreateRecipeResponse' :: Int -> Text -> CreateRecipeResponse

-- | Create a value of <a>CreateRecipeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRecipeResponse'</a>,
--   <a>createRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateRecipe'</a>, <a>createRecipeResponse_name</a> - The
--   name of the recipe that you created.
newCreateRecipeResponse :: Int -> Text -> CreateRecipeResponse

-- | <i>See:</i> <a>newUpdateSchedule</a> smart constructor.
data UpdateSchedule
UpdateSchedule' :: Maybe [Text] -> Text -> Text -> UpdateSchedule

-- | Create a value of <a>UpdateSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobNames:UpdateSchedule'</a>, <a>updateSchedule_jobNames</a> -
--   The name or names of one or more jobs to be run for this schedule.
--   
--   <a>$sel:cronExpression:UpdateSchedule'</a>,
--   <a>updateSchedule_cronExpression</a> - The date or dates and time or
--   times when the jobs are to be run. For more information, see <a>Cron
--   expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:name:UpdateSchedule'</a>, <a>updateSchedule_name</a> - The
--   name of the schedule to update.
newUpdateSchedule :: Text -> Text -> UpdateSchedule

-- | <i>See:</i> <a>newUpdateScheduleResponse</a> smart constructor.
data UpdateScheduleResponse
UpdateScheduleResponse' :: Int -> Text -> UpdateScheduleResponse

-- | Create a value of <a>UpdateScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateScheduleResponse'</a>,
--   <a>updateScheduleResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateSchedule'</a>, <a>updateScheduleResponse_name</a> -
--   The name of the schedule that was updated.
newUpdateScheduleResponse :: Int -> Text -> UpdateScheduleResponse

-- | <i>See:</i> <a>newDeleteSchedule</a> smart constructor.
data DeleteSchedule
DeleteSchedule' :: Text -> DeleteSchedule

-- | Create a value of <a>DeleteSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSchedule'</a>, <a>deleteSchedule_name</a> - The
--   name of the schedule to be deleted.
newDeleteSchedule :: Text -> DeleteSchedule

-- | <i>See:</i> <a>newDeleteScheduleResponse</a> smart constructor.
data DeleteScheduleResponse
DeleteScheduleResponse' :: Int -> Text -> DeleteScheduleResponse

-- | Create a value of <a>DeleteScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScheduleResponse'</a>,
--   <a>deleteScheduleResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DeleteSchedule'</a>, <a>deleteScheduleResponse_name</a> -
--   The name of the schedule that was deleted.
newDeleteScheduleResponse :: Int -> Text -> DeleteScheduleResponse

-- | <i>See:</i> <a>newBatchDeleteRecipeVersion</a> smart constructor.
data BatchDeleteRecipeVersion
BatchDeleteRecipeVersion' :: Text -> NonEmpty Text -> BatchDeleteRecipeVersion

-- | Create a value of <a>BatchDeleteRecipeVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BatchDeleteRecipeVersion'</a>,
--   <a>batchDeleteRecipeVersion_name</a> - The name of the recipe whose
--   versions are to be deleted.
--   
--   <a>$sel:recipeVersions:BatchDeleteRecipeVersion'</a>,
--   <a>batchDeleteRecipeVersion_recipeVersions</a> - An array of version
--   identifiers, for the recipe versions to be deleted. You can specify
--   numeric versions (<tt>X.Y</tt>) or <tt>LATEST_WORKING</tt>.
--   <tt>LATEST_PUBLISHED</tt> is not supported.
newBatchDeleteRecipeVersion :: Text -> NonEmpty Text -> BatchDeleteRecipeVersion

-- | <i>See:</i> <a>newBatchDeleteRecipeVersionResponse</a> smart
--   constructor.
data BatchDeleteRecipeVersionResponse
BatchDeleteRecipeVersionResponse' :: Maybe [RecipeVersionErrorDetail] -> Int -> Text -> BatchDeleteRecipeVersionResponse

-- | Create a value of <a>BatchDeleteRecipeVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteRecipeVersionResponse'</a>,
--   <a>batchDeleteRecipeVersionResponse_errors</a> - Errors, if any, that
--   occurred while attempting to delete the recipe versions.
--   
--   <a>$sel:httpStatus:BatchDeleteRecipeVersionResponse'</a>,
--   <a>batchDeleteRecipeVersionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:name:BatchDeleteRecipeVersion'</a>,
--   <a>batchDeleteRecipeVersionResponse_name</a> - The name of the recipe
--   that was modified.
newBatchDeleteRecipeVersionResponse :: Int -> Text -> BatchDeleteRecipeVersionResponse

-- | <i>See:</i> <a>newListJobRuns</a> smart constructor.
data ListJobRuns
ListJobRuns' :: Maybe Text -> Maybe Natural -> Text -> ListJobRuns

-- | Create a value of <a>ListJobRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobRuns'</a>, <a>listJobRuns_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListJobRuns'</a>, <a>listJobRuns_maxResults</a> -
--   The maximum number of results to return in this request.
--   
--   <a>$sel:name:ListJobRuns'</a>, <a>listJobRuns_name</a> - The name of
--   the job.
newListJobRuns :: Text -> ListJobRuns

-- | <i>See:</i> <a>newListJobRunsResponse</a> smart constructor.
data ListJobRunsResponse
ListJobRunsResponse' :: Maybe Text -> Int -> [JobRun] -> ListJobRunsResponse

-- | Create a value of <a>ListJobRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobRuns'</a>,
--   <a>listJobRunsResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:jobRuns:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_jobRuns</a> - A list of job runs that have
--   occurred for the specified job.
newListJobRunsResponse :: Int -> ListJobRunsResponse

-- | <i>See:</i> <a>newDescribeJob</a> smart constructor.
data DescribeJob
DescribeJob' :: Text -> DescribeJob

-- | Create a value of <a>DescribeJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeJob'</a>, <a>describeJob_name</a> - The name of
--   the job to be described.
newDescribeJob :: Text -> DescribeJob

-- | <i>See:</i> <a>newDescribeJobResponse</a> smart constructor.
data DescribeJobResponse
DescribeJobResponse' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe POSIX -> Maybe POSIX -> Maybe RecipeReference -> Maybe ProfileConfiguration -> Maybe Text -> Maybe (NonEmpty DatabaseOutput) -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe LogSubscription -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobType -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe JobSample -> Int -> Text -> DescribeJobResponse

-- | Create a value of <a>DescribeJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:DescribeJobResponse'</a>,
--   <a>describeJobResponse_dataCatalogOutputs</a> - One or more artifacts
--   that represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:lastModifiedDate:DescribeJobResponse'</a>,
--   <a>describeJobResponse_lastModifiedDate</a> - The date and time that
--   the job was last modified.
--   
--   <a>$sel:createDate:DescribeJobResponse'</a>,
--   <a>describeJobResponse_createDate</a> - The date and time that the job
--   was created.
--   
--   <a>$sel:recipeReference:DescribeJobResponse'</a>,
--   <a>describeJobResponse_recipeReference</a> - Undocumented member.
--   
--   <a>$sel:profileConfiguration:DescribeJobResponse'</a>,
--   <a>describeJobResponse_profileConfiguration</a> - Configuration for
--   profile jobs. Used to select columns, do evaluations, and override
--   default parameters of evaluations. When configuration is null, the
--   profile job will run with default settings.
--   
--   <a>$sel:createdBy:DescribeJobResponse'</a>,
--   <a>describeJobResponse_createdBy</a> - The identifier (user name) of
--   the user associated with the creation of the job.
--   
--   <a>$sel:databaseOutputs:DescribeJobResponse'</a>,
--   <a>describeJobResponse_databaseOutputs</a> - Represents a list of JDBC
--   database output objects which defines the output destination for a
--   DataBrew recipe job to write into.
--   
--   <a>$sel:encryptionMode:DescribeJobResponse'</a>,
--   <a>describeJobResponse_encryptionMode</a> - The encryption mode for
--   the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:DescribeJobResponse'</a>,
--   <a>describeJobResponse_outputs</a> - One or more artifacts that
--   represent the output from running the job.
--   
--   <a>$sel:resourceArn:DescribeJobResponse'</a>,
--   <a>describeJobResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the job.
--   
--   <a>$sel:logSubscription:DescribeJobResponse'</a>,
--   <a>describeJobResponse_logSubscription</a> - Indicates whether Amazon
--   CloudWatch logging is enabled for this job.
--   
--   <a>$sel:projectName:DescribeJobResponse'</a>,
--   <a>describeJobResponse_projectName</a> - The DataBrew project
--   associated with this job.
--   
--   <a>$sel:maxRetries:DescribeJobResponse'</a>,
--   <a>describeJobResponse_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:datasetName:DescribeJobResponse'</a>,
--   <a>describeJobResponse_datasetName</a> - The dataset that the job acts
--   upon.
--   
--   <a>$sel:encryptionKeyArn:DescribeJobResponse'</a>,
--   <a>describeJobResponse_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:DescribeJobResponse'</a>,
--   <a>describeJobResponse_maxCapacity</a> - The maximum number of compute
--   nodes that DataBrew can consume when the job processes data.
--   
--   <a>$sel:lastModifiedBy:DescribeJobResponse'</a>,
--   <a>describeJobResponse_lastModifiedBy</a> - The identifier (user name)
--   of the user who last modified the job.
--   
--   <a>$sel:type':DescribeJobResponse'</a>,
--   <a>describeJobResponse_type</a> - The job type, which must be one of
--   the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - The job analyzes the dataset to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - The job applies one or more transformations to a
--   dataset.</li>
--   </ul>
--   
--   <a>$sel:timeout:DescribeJobResponse'</a>,
--   <a>describeJobResponse_timeout</a> - The job's timeout in minutes. A
--   job that attempts to run longer than this timeout period ends with a
--   status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:DescribeJobResponse'</a>, <a>describeJobResponse_tags</a>
--   - Metadata tags associated with this job.
--   
--   <a>$sel:roleArn:DescribeJobResponse'</a>,
--   <a>describeJobResponse_roleArn</a> - The ARN of the Identity and
--   Access Management (IAM) role to be assumed when DataBrew runs the job.
--   
--   <a>$sel:jobSample:DescribeJobResponse'</a>,
--   <a>describeJobResponse_jobSample</a> - Sample configuration for
--   profile jobs only. Determines the number of rows on which the profile
--   job will be executed.
--   
--   <a>$sel:httpStatus:DescribeJobResponse'</a>,
--   <a>describeJobResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeJob'</a>, <a>describeJobResponse_name</a> - The
--   name of the job.
newDescribeJobResponse :: Int -> Text -> DescribeJobResponse

-- | <i>See:</i> <a>newUpdateProfileJob</a> smart constructor.
data UpdateProfileJob
UpdateProfileJob' :: Maybe EncryptionMode -> Maybe LogSubscription -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe ProfileConfiguration -> Maybe Natural -> Maybe JobSample -> Text -> S3Location -> Text -> UpdateProfileJob

-- | Create a value of <a>UpdateProfileJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionMode:UpdateProfileJob'</a>,
--   <a>updateProfileJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:logSubscription:UpdateProfileJob'</a>,
--   <a>updateProfileJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:maxRetries:UpdateProfileJob'</a>,
--   <a>updateProfileJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:encryptionKeyArn:UpdateProfileJob'</a>,
--   <a>updateProfileJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:UpdateProfileJob'</a>,
--   <a>updateProfileJob_maxCapacity</a> - The maximum number of compute
--   nodes that DataBrew can use when the job processes data.
--   
--   <a>$sel:configuration:UpdateProfileJob'</a>,
--   <a>updateProfileJob_configuration</a> - Configuration for profile
--   jobs. Used to select columns, do evaluations, and override default
--   parameters of evaluations. When configuration is null, the profile job
--   will run with default settings.
--   
--   <a>$sel:timeout:UpdateProfileJob'</a>, <a>updateProfileJob_timeout</a>
--   - The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:jobSample:UpdateProfileJob'</a>,
--   <a>updateProfileJob_jobSample</a> - Sample configuration for Profile
--   Jobs only. Determines the number of rows on which the Profile job will
--   be executed. If a JobSample value is not provided for profile jobs,
--   the default value will be used. The default value is CUSTOM_ROWS for
--   the mode parameter and 20000 for the size parameter.
--   
--   <a>$sel:name:UpdateProfileJob'</a>, <a>updateProfileJob_name</a> - The
--   name of the job to be updated.
--   
--   <a>$sel:outputLocation:UpdateProfileJob'</a>,
--   <a>updateProfileJob_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:roleArn:UpdateProfileJob'</a>, <a>updateProfileJob_roleArn</a>
--   - The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newUpdateProfileJob :: Text -> S3Location -> Text -> UpdateProfileJob

-- | <i>See:</i> <a>newUpdateProfileJobResponse</a> smart constructor.
data UpdateProfileJobResponse
UpdateProfileJobResponse' :: Int -> Text -> UpdateProfileJobResponse

-- | Create a value of <a>UpdateProfileJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateProfileJobResponse'</a>,
--   <a>updateProfileJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:UpdateProfileJob'</a>,
--   <a>updateProfileJobResponse_name</a> - The name of the job that was
--   updated.
newUpdateProfileJobResponse :: Int -> Text -> UpdateProfileJobResponse

-- | <i>See:</i> <a>newDescribeRecipe</a> smart constructor.
data DescribeRecipe
DescribeRecipe' :: Maybe Text -> Text -> DescribeRecipe

-- | Create a value of <a>DescribeRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:DescribeRecipe'</a>,
--   <a>describeRecipe_recipeVersion</a> - The recipe version identifier.
--   If this parameter isn't specified, then the latest published version
--   is returned.
--   
--   <a>$sel:name:DescribeRecipe'</a>, <a>describeRecipe_name</a> - The
--   name of the recipe to be described.
newDescribeRecipe :: Text -> DescribeRecipe

-- | <i>See:</i> <a>newDescribeRecipeResponse</a> smart constructor.
data DescribeRecipeResponse
DescribeRecipeResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [RecipeStep] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> Text -> DescribeRecipeResponse

-- | Create a value of <a>DescribeRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_lastModifiedDate</a> - The date and time
--   that the recipe was last modified.
--   
--   <a>$sel:createDate:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_createDate</a> - The date and time that the
--   recipe was created.
--   
--   <a>$sel:publishedBy:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_publishedBy</a> - The identifier (user name)
--   of the user who last published the recipe.
--   
--   <a>$sel:createdBy:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_createdBy</a> - The identifier (user name)
--   of the user who created the recipe.
--   
--   <a>$sel:steps:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_steps</a> - One or more steps to be
--   performed by the recipe. Each step consists of an action, and the
--   conditions under which the action should succeed.
--   
--   <a>$sel:publishedDate:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_publishedDate</a> - The date and time when
--   the recipe was last published.
--   
--   <a>$sel:resourceArn:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_resourceArn</a> - The ARN of the recipe.
--   
--   <a>$sel:recipeVersion:DescribeRecipe'</a>,
--   <a>describeRecipeResponse_recipeVersion</a> - The recipe version
--   identifier.
--   
--   <a>$sel:projectName:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_projectName</a> - The name of the project
--   associated with this recipe.
--   
--   <a>$sel:lastModifiedBy:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the recipe.
--   
--   <a>$sel:description:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_description</a> - The description of the
--   recipe.
--   
--   <a>$sel:tags:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_tags</a> - Metadata tags associated with
--   this project.
--   
--   <a>$sel:httpStatus:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:DescribeRecipe'</a>, <a>describeRecipeResponse_name</a> -
--   The name of the recipe.
newDescribeRecipeResponse :: Int -> Text -> DescribeRecipeResponse

-- | <i>See:</i> <a>newCreateProfileJob</a> smart constructor.
data CreateProfileJob
CreateProfileJob' :: Maybe EncryptionMode -> Maybe LogSubscription -> Maybe Natural -> Maybe Text -> Maybe Int -> Maybe ProfileConfiguration -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe JobSample -> Text -> Text -> S3Location -> Text -> CreateProfileJob

-- | Create a value of <a>CreateProfileJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionMode:CreateProfileJob'</a>,
--   <a>createProfileJob_encryptionMode</a> - The encryption mode for the
--   job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - <tt>SSE-KMS</tt> - Server-side encryption with
--   KMS-managed keys.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:logSubscription:CreateProfileJob'</a>,
--   <a>createProfileJob_logSubscription</a> - Enables or disables Amazon
--   CloudWatch logging for the job. If logging is enabled, CloudWatch
--   writes one log stream for each job run.
--   
--   <a>$sel:maxRetries:CreateProfileJob'</a>,
--   <a>createProfileJob_maxRetries</a> - The maximum number of times to
--   retry the job after a job run fails.
--   
--   <a>$sel:encryptionKeyArn:CreateProfileJob'</a>,
--   <a>createProfileJob_encryptionKeyArn</a> - The Amazon Resource Name
--   (ARN) of an encryption key that is used to protect the job.
--   
--   <a>$sel:maxCapacity:CreateProfileJob'</a>,
--   <a>createProfileJob_maxCapacity</a> - The maximum number of nodes that
--   DataBrew can use when the job processes data.
--   
--   <a>$sel:configuration:CreateProfileJob'</a>,
--   <a>createProfileJob_configuration</a> - Configuration for profile
--   jobs. Used to select columns, do evaluations, and override default
--   parameters of evaluations. When configuration is null, the profile job
--   will run with default settings.
--   
--   <a>$sel:timeout:CreateProfileJob'</a>, <a>createProfileJob_timeout</a>
--   - The job's timeout in minutes. A job that attempts to run longer than
--   this timeout period ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:CreateProfileJob'</a>, <a>createProfileJob_tags</a> -
--   Metadata tags to apply to this job.
--   
--   <a>$sel:jobSample:CreateProfileJob'</a>,
--   <a>createProfileJob_jobSample</a> - Sample configuration for profile
--   jobs only. Determines the number of rows on which the profile job will
--   be executed. If a JobSample value is not provided, the default value
--   will be used. The default value is CUSTOM_ROWS for the mode parameter
--   and 20000 for the size parameter.
--   
--   <a>$sel:datasetName:CreateProfileJob'</a>,
--   <a>createProfileJob_datasetName</a> - The name of the dataset that
--   this job is to act upon.
--   
--   <a>$sel:name:CreateProfileJob'</a>, <a>createProfileJob_name</a> - The
--   name of the job to be created. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:outputLocation:CreateProfileJob'</a>,
--   <a>createProfileJob_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:roleArn:CreateProfileJob'</a>, <a>createProfileJob_roleArn</a>
--   - The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) role to be assumed when DataBrew runs the job.
newCreateProfileJob :: Text -> Text -> S3Location -> Text -> CreateProfileJob

-- | <i>See:</i> <a>newCreateProfileJobResponse</a> smart constructor.
data CreateProfileJobResponse
CreateProfileJobResponse' :: Int -> Text -> CreateProfileJobResponse

-- | Create a value of <a>CreateProfileJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateProfileJobResponse'</a>,
--   <a>createProfileJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:CreateProfileJob'</a>,
--   <a>createProfileJobResponse_name</a> - The name of the job that was
--   created.
newCreateProfileJobResponse :: Int -> Text -> CreateProfileJobResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The DataBrew resource to which tags should be added. The value for
--   this parameter is an Amazon Resource Name (ARN). For DataBrew, you can
--   tag a dataset, a job, a project, or a recipe.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - One or more
--   tags to be assigned to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newDescribeSchedule</a> smart constructor.
data DescribeSchedule
DescribeSchedule' :: Text -> DescribeSchedule

-- | Create a value of <a>DescribeSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeSchedule'</a>, <a>describeSchedule_name</a> - The
--   name of the schedule to be described.
newDescribeSchedule :: Text -> DescribeSchedule

-- | <i>See:</i> <a>newDescribeScheduleResponse</a> smart constructor.
data DescribeScheduleResponse
DescribeScheduleResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe (HashMap Text Text) -> Int -> Text -> DescribeScheduleResponse

-- | Create a value of <a>DescribeScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_lastModifiedDate</a> - The date and time
--   that the schedule was last modified.
--   
--   <a>$sel:createDate:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_createDate</a> - The date and time that
--   the schedule was created.
--   
--   <a>$sel:createdBy:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_createdBy</a> - The identifier (user name)
--   of the user who created the schedule.
--   
--   <a>$sel:resourceArn:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the schedule.
--   
--   <a>$sel:cronExpression:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_cronExpression</a> - The date or dates and
--   time or times when the jobs are to be run for the schedule. For more
--   information, see <a>Cron expressions</a> in the <i>Glue DataBrew
--   Developer Guide</i>.
--   
--   <a>$sel:lastModifiedBy:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_lastModifiedBy</a> - The identifier (user
--   name) of the user who last modified the schedule.
--   
--   <a>$sel:jobNames:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_jobNames</a> - The name or names of one or
--   more jobs to be run by using the schedule.
--   
--   <a>$sel:tags:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_tags</a> - Metadata tags associated with
--   this schedule.
--   
--   <a>$sel:httpStatus:DescribeScheduleResponse'</a>,
--   <a>describeScheduleResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:DescribeSchedule'</a>,
--   <a>describeScheduleResponse_name</a> - The name of the schedule.
newDescribeScheduleResponse :: Int -> Text -> DescribeScheduleResponse

-- | <i>See:</i> <a>newDescribeJobRun</a> smart constructor.
data DescribeJobRun
DescribeJobRun' :: Text -> Text -> DescribeJobRun

-- | Create a value of <a>DescribeJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeJobRun'</a>, <a>describeJobRun_name</a> - The
--   name of the job being processed during this run.
--   
--   <a>$sel:runId:DescribeJobRun'</a>, <a>describeJobRun_runId</a> - The
--   unique identifier of the job run.
newDescribeJobRun :: Text -> Text -> DescribeJobRun

-- | <i>See:</i> <a>newDescribeJobRunResponse</a> smart constructor.
data DescribeJobRunResponse
DescribeJobRunResponse' :: Maybe POSIX -> Maybe JobRunState -> Maybe (NonEmpty DataCatalogOutput) -> Maybe POSIX -> Maybe RecipeReference -> Maybe ProfileConfiguration -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe Int -> Maybe LogSubscription -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobSample -> Int -> Text -> DescribeJobRunResponse

-- | Create a value of <a>DescribeJobRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_completedOn</a> - The date and time when the
--   job completed processing.
--   
--   <a>$sel:state:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_state</a> - The current state of the job run
--   entity itself.
--   
--   <a>$sel:dataCatalogOutputs:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_dataCatalogOutputs</a> - One or more
--   artifacts that represent the Glue Data Catalog output from running the
--   job.
--   
--   <a>$sel:startedOn:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_startedOn</a> - The date and time when the
--   job run began.
--   
--   <a>$sel:recipeReference:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_recipeReference</a> - Undocumented member.
--   
--   <a>$sel:profileConfiguration:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_profileConfiguration</a> - Configuration for
--   profile jobs. Used to select columns, do evaluations, and override
--   default parameters of evaluations. When configuration is null, the
--   profile job will run with default settings.
--   
--   <a>$sel:databaseOutputs:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_databaseOutputs</a> - Represents a list of
--   JDBC database output objects which defines the output destination for
--   a DataBrew recipe job to write into.
--   
--   <a>$sel:logGroupName:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_logGroupName</a> - The name of an Amazon
--   CloudWatch log group, where the job writes diagnostic messages when it
--   runs.
--   
--   <a>$sel:outputs:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_outputs</a> - One or more output artifacts
--   from a job run.
--   
--   <a>$sel:runId:DescribeJobRun'</a>, <a>describeJobRunResponse_runId</a>
--   - The unique identifier of the job run.
--   
--   <a>$sel:executionTime:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_executionTime</a> - The amount of time, in
--   seconds, during which the job run consumed resources.
--   
--   <a>$sel:logSubscription:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_logSubscription</a> - The current status of
--   Amazon CloudWatch logging for the job run.
--   
--   <a>$sel:startedBy:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_startedBy</a> - The Amazon Resource Name
--   (ARN) of the user who started the job run.
--   
--   <a>$sel:datasetName:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_datasetName</a> - The name of the dataset
--   for the job to process.
--   
--   <a>$sel:attempt:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_attempt</a> - The number of times that
--   DataBrew has attempted to run the job.
--   
--   <a>$sel:errorMessage:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_errorMessage</a> - A message indicating an
--   error (if any) that was encountered when the job ran.
--   
--   <a>$sel:jobSample:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_jobSample</a> - Sample configuration for
--   profile jobs only. Determines the number of rows on which the profile
--   job will be executed. If a JobSample value is not provided, the
--   default value will be used. The default value is CUSTOM_ROWS for the
--   mode parameter and 20000 for the size parameter.
--   
--   <a>$sel:httpStatus:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:jobName:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_jobName</a> - The name of the job being
--   processed during this run.
newDescribeJobRunResponse :: Int -> Text -> DescribeJobRunResponse

-- | <i>See:</i> <a>newStartProjectSession</a> smart constructor.
data StartProjectSession
StartProjectSession' :: Maybe Bool -> Text -> StartProjectSession

-- | Create a value of <a>StartProjectSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assumeControl:StartProjectSession'</a>,
--   <a>startProjectSession_assumeControl</a> - A value that, if true,
--   enables you to take control of a session, even if a different client
--   is currently accessing the project.
--   
--   <a>$sel:name:StartProjectSession'</a>, <a>startProjectSession_name</a>
--   - The name of the project to act upon.
newStartProjectSession :: Text -> StartProjectSession

-- | <i>See:</i> <a>newStartProjectSessionResponse</a> smart constructor.
data StartProjectSessionResponse
StartProjectSessionResponse' :: Maybe Text -> Int -> Text -> StartProjectSessionResponse

-- | Create a value of <a>StartProjectSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientSessionId:StartProjectSessionResponse'</a>,
--   <a>startProjectSessionResponse_clientSessionId</a> - A
--   system-generated identifier for the session.
--   
--   <a>$sel:httpStatus:StartProjectSessionResponse'</a>,
--   <a>startProjectSessionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:StartProjectSession'</a>,
--   <a>startProjectSessionResponse_name</a> - The name of the project to
--   be acted upon.
newStartProjectSessionResponse :: Int -> Text -> StartProjectSessionResponse

-- | <i>See:</i> <a>newDeleteRecipeVersion</a> smart constructor.
data DeleteRecipeVersion
DeleteRecipeVersion' :: Text -> Text -> DeleteRecipeVersion

-- | Create a value of <a>DeleteRecipeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteRecipeVersion'</a>, <a>deleteRecipeVersion_name</a>
--   - The name of the recipe.
--   
--   <a>$sel:recipeVersion:DeleteRecipeVersion'</a>,
--   <a>deleteRecipeVersion_recipeVersion</a> - The version of the recipe
--   to be deleted. You can specify a numeric versions (<tt>X.Y</tt>) or
--   <tt>LATEST_WORKING</tt>. <tt>LATEST_PUBLISHED</tt> is not supported.
newDeleteRecipeVersion :: Text -> Text -> DeleteRecipeVersion

-- | <i>See:</i> <a>newDeleteRecipeVersionResponse</a> smart constructor.
data DeleteRecipeVersionResponse
DeleteRecipeVersionResponse' :: Int -> Text -> Text -> DeleteRecipeVersionResponse

-- | Create a value of <a>DeleteRecipeVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRecipeVersionResponse'</a>,
--   <a>deleteRecipeVersionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:name:DeleteRecipeVersion'</a>,
--   <a>deleteRecipeVersionResponse_name</a> - The name of the recipe that
--   was deleted.
--   
--   <a>$sel:recipeVersion:DeleteRecipeVersion'</a>,
--   <a>deleteRecipeVersionResponse_recipeVersion</a> - The version of the
--   recipe that was deleted.
newDeleteRecipeVersionResponse :: Int -> Text -> Text -> DeleteRecipeVersionResponse

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Natural -> ListDatasets

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   The maximum number of results to return in this request.
newListDatasets :: ListDatasets

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Int -> [Dataset] -> ListDatasetsResponse

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:datasets:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasets</a> - A list of datasets that are
--   defined.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - A DataBrew resource from which you
--   want to remove a tag or tags. The value for this parameter is an
--   Amazon Resource Name (ARN).
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys (names) of one or more tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newStartJobRun</a> smart constructor.
data StartJobRun
StartJobRun' :: Text -> StartJobRun

-- | Create a value of <a>StartJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartJobRun'</a>, <a>startJobRun_name</a> - The name of
--   the job to be run.
newStartJobRun :: Text -> StartJobRun

-- | <i>See:</i> <a>newStartJobRunResponse</a> smart constructor.
data StartJobRunResponse
StartJobRunResponse' :: Int -> Text -> StartJobRunResponse

-- | Create a value of <a>StartJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:runId:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_runId</a> - A system-generated identifier for
--   this particular job run.
newStartJobRunResponse :: Int -> Text -> StartJobRunResponse

-- | <i>See:</i> <a>newUpdateRecipe</a> smart constructor.
data UpdateRecipe
UpdateRecipe' :: Maybe [RecipeStep] -> Maybe Text -> Text -> UpdateRecipe

-- | Create a value of <a>UpdateRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:steps:UpdateRecipe'</a>, <a>updateRecipe_steps</a> - One or
--   more steps to be performed by the recipe. Each step consists of an
--   action, and the conditions under which the action should succeed.
--   
--   <a>$sel:description:UpdateRecipe'</a>, <a>updateRecipe_description</a>
--   - A description of the recipe.
--   
--   <a>$sel:name:UpdateRecipe'</a>, <a>updateRecipe_name</a> - The name of
--   the recipe to be updated.
newUpdateRecipe :: Text -> UpdateRecipe

-- | <i>See:</i> <a>newUpdateRecipeResponse</a> smart constructor.
data UpdateRecipeResponse
UpdateRecipeResponse' :: Int -> Text -> UpdateRecipeResponse

-- | Create a value of <a>UpdateRecipeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRecipeResponse'</a>,
--   <a>updateRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:UpdateRecipe'</a>, <a>updateRecipeResponse_name</a> - The
--   name of the recipe that was updated.
newUpdateRecipeResponse :: Int -> Text -> UpdateRecipeResponse

-- | <i>See:</i> <a>newCreateSchedule</a> smart constructor.
data CreateSchedule
CreateSchedule' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Text -> Text -> CreateSchedule

-- | Create a value of <a>CreateSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobNames:CreateSchedule'</a>, <a>createSchedule_jobNames</a> -
--   The name or names of one or more jobs to be run.
--   
--   <a>$sel:tags:CreateSchedule'</a>, <a>createSchedule_tags</a> -
--   Metadata tags to apply to this schedule.
--   
--   <a>$sel:cronExpression:CreateSchedule'</a>,
--   <a>createSchedule_cronExpression</a> - The date or dates and time or
--   times when the jobs are to be run. For more information, see <a>Cron
--   expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:name:CreateSchedule'</a>, <a>createSchedule_name</a> - A
--   unique name for the schedule. Valid characters are alphanumeric (A-Z,
--   a-z, 0-9), hyphen (-), period (.), and space.
newCreateSchedule :: Text -> Text -> CreateSchedule

-- | <i>See:</i> <a>newCreateScheduleResponse</a> smart constructor.
data CreateScheduleResponse
CreateScheduleResponse' :: Int -> Text -> CreateScheduleResponse

-- | Create a value of <a>CreateScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateScheduleResponse'</a>,
--   <a>createScheduleResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateSchedule'</a>, <a>createScheduleResponse_name</a> -
--   The name of the schedule that was created.
newCreateScheduleResponse :: Int -> Text -> CreateScheduleResponse

-- | <i>See:</i> <a>newListRecipes</a> smart constructor.
data ListRecipes
ListRecipes' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListRecipes

-- | Create a value of <a>ListRecipes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>, <a>listRecipes_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:recipeVersion:ListRecipes'</a>,
--   <a>listRecipes_recipeVersion</a> - Return only those recipes with a
--   version identifier of <tt>LATEST_WORKING</tt> or
--   <tt>LATEST_PUBLISHED</tt>. If <tt>RecipeVersion</tt> is omitted,
--   <tt>ListRecipes</tt> returns all of the <tt>LATEST_PUBLISHED</tt>
--   recipe versions.
--   
--   Valid values: <tt>LATEST_WORKING</tt> | <tt>LATEST_PUBLISHED</tt>
--   
--   <a>$sel:maxResults:ListRecipes'</a>, <a>listRecipes_maxResults</a> -
--   The maximum number of results to return in this request.
newListRecipes :: ListRecipes

-- | <i>See:</i> <a>newListRecipesResponse</a> smart constructor.
data ListRecipesResponse
ListRecipesResponse' :: Maybe Text -> Int -> [Recipe] -> ListRecipesResponse

-- | Create a value of <a>ListRecipesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>,
--   <a>listRecipesResponse_nextToken</a> - A token that you can use in a
--   subsequent call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:recipes:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_recipes</a> - A list of recipes that are
--   defined.
newListRecipesResponse :: Int -> ListRecipesResponse

-- | <i>See:</i> <a>newPublishRecipe</a> smart constructor.
data PublishRecipe
PublishRecipe' :: Maybe Text -> Text -> PublishRecipe

-- | Create a value of <a>PublishRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PublishRecipe'</a>,
--   <a>publishRecipe_description</a> - A description of the recipe to be
--   published, for this version of the recipe.
--   
--   <a>$sel:name:PublishRecipe'</a>, <a>publishRecipe_name</a> - The name
--   of the recipe to be published.
newPublishRecipe :: Text -> PublishRecipe

-- | <i>See:</i> <a>newPublishRecipeResponse</a> smart constructor.
data PublishRecipeResponse
PublishRecipeResponse' :: Int -> Text -> PublishRecipeResponse

-- | Create a value of <a>PublishRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PublishRecipeResponse'</a>,
--   <a>publishRecipeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:PublishRecipe'</a>, <a>publishRecipeResponse_name</a> -
--   The name of the recipe that you published.
newPublishRecipeResponse :: Int -> Text -> PublishRecipeResponse

-- | <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe Sample -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> CreateProject

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sample:CreateProject'</a>, <a>createProject_sample</a> -
--   Undocumented member.
--   
--   <a>$sel:tags:CreateProject'</a>, <a>createProject_tags</a> - Metadata
--   tags to apply to this project.
--   
--   <a>$sel:datasetName:CreateProject'</a>,
--   <a>createProject_datasetName</a> - The name of an existing dataset to
--   associate this project with.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProject_name</a> - A unique
--   name for the new project. Valid characters are alphanumeric (A-Z, a-z,
--   0-9), hyphen (-), period (.), and space.
--   
--   <a>$sel:recipeName:CreateProject'</a>, <a>createProject_recipeName</a>
--   - The name of an existing recipe to associate with the project.
--   
--   <a>$sel:roleArn:CreateProject'</a>, <a>createProject_roleArn</a> - The
--   Amazon Resource Name (ARN) of the Identity and Access Management (IAM)
--   role to be assumed for this request.
newCreateProject :: Text -> Text -> Text -> Text -> CreateProject

-- | <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Int -> Text -> CreateProjectResponse

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProjectResponse_name</a> -
--   The name of the project that you created.
newCreateProjectResponse :: Int -> Text -> CreateProjectResponse

-- | <i>See:</i> <a>newSendProjectSessionAction</a> smart constructor.
data SendProjectSessionAction
SendProjectSessionAction' :: Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe RecipeStep -> Maybe ViewFrame -> Text -> SendProjectSessionAction

-- | Create a value of <a>SendProjectSessionAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepIndex:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_stepIndex</a> - The index from which to
--   preview a step. This index is used to preview the result of steps that
--   have already been applied, so that the resulting view frame is from
--   earlier in the view frame stack.
--   
--   <a>$sel:preview:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_preview</a> - If true, the result of the
--   recipe step will be returned, but not applied.
--   
--   <a>$sel:clientSessionId:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_clientSessionId</a> - A unique identifier
--   for an interactive session that's currently open and ready for work.
--   The action will be performed on this session.
--   
--   <a>$sel:recipeStep:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_recipeStep</a> - Undocumented member.
--   
--   <a>$sel:viewFrame:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_viewFrame</a> - Undocumented member.
--   
--   <a>$sel:name:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionAction_name</a> - The name of the project to
--   apply the action to.
newSendProjectSessionAction :: Text -> SendProjectSessionAction

-- | <i>See:</i> <a>newSendProjectSessionActionResponse</a> smart
--   constructor.
data SendProjectSessionActionResponse
SendProjectSessionActionResponse' :: Maybe Int -> Maybe Text -> Int -> Text -> SendProjectSessionActionResponse

-- | Create a value of <a>SendProjectSessionActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionId:SendProjectSessionActionResponse'</a>,
--   <a>sendProjectSessionActionResponse_actionId</a> - A unique identifier
--   for the action that was performed.
--   
--   <a>$sel:result:SendProjectSessionActionResponse'</a>,
--   <a>sendProjectSessionActionResponse_result</a> - A message indicating
--   the result of performing the action.
--   
--   <a>$sel:httpStatus:SendProjectSessionActionResponse'</a>,
--   <a>sendProjectSessionActionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:name:SendProjectSessionAction'</a>,
--   <a>sendProjectSessionActionResponse_name</a> - The name of the project
--   that was affected by the action.
newSendProjectSessionActionResponse :: Int -> Text -> SendProjectSessionActionResponse
newtype CompressionFormat
CompressionFormat' :: Text -> CompressionFormat
[fromCompressionFormat] :: CompressionFormat -> Text
pattern CompressionFormat_BROTLI :: CompressionFormat
pattern CompressionFormat_BZIP2 :: CompressionFormat
pattern CompressionFormat_DEFLATE :: CompressionFormat
pattern CompressionFormat_GZIP :: CompressionFormat
pattern CompressionFormat_LZ4 :: CompressionFormat
pattern CompressionFormat_LZO :: CompressionFormat
pattern CompressionFormat_SNAPPY :: CompressionFormat
pattern CompressionFormat_ZLIB :: CompressionFormat
pattern CompressionFormat_ZSTD :: CompressionFormat
newtype DatabaseOutputMode
DatabaseOutputMode' :: Text -> DatabaseOutputMode
[fromDatabaseOutputMode] :: DatabaseOutputMode -> Text
pattern DatabaseOutputMode_NEW_TABLE :: DatabaseOutputMode
newtype EncryptionMode
EncryptionMode' :: Text -> EncryptionMode
[fromEncryptionMode] :: EncryptionMode -> Text
pattern EncryptionMode_SSE_KMS :: EncryptionMode
pattern EncryptionMode_SSE_S3 :: EncryptionMode
newtype InputFormat
InputFormat' :: Text -> InputFormat
[fromInputFormat] :: InputFormat -> Text
pattern InputFormat_CSV :: InputFormat
pattern InputFormat_EXCEL :: InputFormat
pattern InputFormat_JSON :: InputFormat
pattern InputFormat_PARQUET :: InputFormat
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_STARTING :: JobRunState
pattern JobRunState_STOPPED :: JobRunState
pattern JobRunState_STOPPING :: JobRunState
pattern JobRunState_SUCCEEDED :: JobRunState
pattern JobRunState_TIMEOUT :: JobRunState
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_PROFILE :: JobType
pattern JobType_RECIPE :: JobType
newtype LogSubscription
LogSubscription' :: Text -> LogSubscription
[fromLogSubscription] :: LogSubscription -> Text
pattern LogSubscription_DISABLE :: LogSubscription
pattern LogSubscription_ENABLE :: LogSubscription
newtype Order
Order' :: Text -> Order
[fromOrder] :: Order -> Text
pattern Order_ASCENDING :: Order
pattern Order_DESCENDING :: Order
newtype OrderedBy
OrderedBy' :: Text -> OrderedBy
[fromOrderedBy] :: OrderedBy -> Text
pattern OrderedBy_LAST_MODIFIED_DATE :: OrderedBy
newtype OutputFormat
OutputFormat' :: Text -> OutputFormat
[fromOutputFormat] :: OutputFormat -> Text
pattern OutputFormat_AVRO :: OutputFormat
pattern OutputFormat_CSV :: OutputFormat
pattern OutputFormat_GLUEPARQUET :: OutputFormat
pattern OutputFormat_JSON :: OutputFormat
pattern OutputFormat_ORC :: OutputFormat
pattern OutputFormat_PARQUET :: OutputFormat
pattern OutputFormat_TABLEAUHYPER :: OutputFormat
pattern OutputFormat_XML :: OutputFormat
newtype ParameterType
ParameterType' :: Text -> ParameterType
[fromParameterType] :: ParameterType -> Text
pattern ParameterType_Datetime :: ParameterType
pattern ParameterType_Number :: ParameterType
pattern ParameterType_String :: ParameterType
newtype SampleMode
SampleMode' :: Text -> SampleMode
[fromSampleMode] :: SampleMode -> Text
pattern SampleMode_CUSTOM_ROWS :: SampleMode
pattern SampleMode_FULL_DATASET :: SampleMode
newtype SampleType
SampleType' :: Text -> SampleType
[fromSampleType] :: SampleType -> Text
pattern SampleType_FIRST_N :: SampleType
pattern SampleType_LAST_N :: SampleType
pattern SampleType_RANDOM :: SampleType
newtype SessionStatus
SessionStatus' :: Text -> SessionStatus
[fromSessionStatus] :: SessionStatus -> Text
pattern SessionStatus_ASSIGNED :: SessionStatus
pattern SessionStatus_FAILED :: SessionStatus
pattern SessionStatus_INITIALIZING :: SessionStatus
pattern SessionStatus_PROVISIONING :: SessionStatus
pattern SessionStatus_READY :: SessionStatus
pattern SessionStatus_RECYCLING :: SessionStatus
pattern SessionStatus_ROTATING :: SessionStatus
pattern SessionStatus_TERMINATED :: SessionStatus
pattern SessionStatus_TERMINATING :: SessionStatus
pattern SessionStatus_UPDATING :: SessionStatus
newtype Source
Source' :: Text -> Source
[fromSource] :: Source -> Text
pattern Source_DATABASE :: Source
pattern Source_DATA_CATALOG :: Source
pattern Source_S3 :: Source

-- | Selector of a column from a dataset for profile job configuration. One
--   selector includes either a column name or a regular expression.
--   
--   <i>See:</i> <a>newColumnSelector</a> smart constructor.
data ColumnSelector
ColumnSelector' :: Maybe Text -> Maybe Text -> ColumnSelector

-- | Create a value of <a>ColumnSelector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regex:ColumnSelector'</a>, <a>columnSelector_regex</a> - A
--   regular expression for selecting a column from a dataset.
--   
--   <a>$sel:name:ColumnSelector'</a>, <a>columnSelector_name</a> - The
--   name of a column from a dataset.
newColumnSelector :: ColumnSelector

-- | Configuration for column evaluations for a profile job.
--   ColumnStatisticsConfiguration can be used to select evaluations and
--   override parameters of evaluations for particular columns.
--   
--   <i>See:</i> <a>newColumnStatisticsConfiguration</a> smart constructor.
data ColumnStatisticsConfiguration
ColumnStatisticsConfiguration' :: Maybe (NonEmpty ColumnSelector) -> StatisticsConfiguration -> ColumnStatisticsConfiguration

-- | Create a value of <a>ColumnStatisticsConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectors:ColumnStatisticsConfiguration'</a>,
--   <a>columnStatisticsConfiguration_selectors</a> - List of column
--   selectors. Selectors can be used to select columns from the dataset.
--   When selectors are undefined, configuration will be applied to all
--   supported columns.
--   
--   <a>$sel:statistics:ColumnStatisticsConfiguration'</a>,
--   <a>columnStatisticsConfiguration_statistics</a> - Configuration for
--   evaluations. Statistics can be used to select evaluations and override
--   parameters of evaluations.
newColumnStatisticsConfiguration :: StatisticsConfiguration -> ColumnStatisticsConfiguration

-- | Represents an individual condition that evaluates to true or false.
--   
--   Conditions are used with recipe actions. The action is only performed
--   for column values where the condition evaluates to true.
--   
--   If a recipe requires more than one condition, then the recipe must
--   specify multiple <tt>ConditionExpression</tt> elements. Each condition
--   is applied to the rows in a dataset first, before the recipe action is
--   performed.
--   
--   <i>See:</i> <a>newConditionExpression</a> smart constructor.
data ConditionExpression
ConditionExpression' :: Maybe Text -> Text -> Text -> ConditionExpression

-- | Create a value of <a>ConditionExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ConditionExpression'</a>,
--   <a>conditionExpression_value</a> - A value that the condition must
--   evaluate to for the condition to succeed.
--   
--   <a>$sel:condition:ConditionExpression'</a>,
--   <a>conditionExpression_condition</a> - A specific condition to apply
--   to a recipe action. For more information, see <a>Recipe structure</a>
--   in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:targetColumn:ConditionExpression'</a>,
--   <a>conditionExpression_targetColumn</a> - A column to apply this
--   condition to.
newConditionExpression :: Text -> Text -> ConditionExpression

-- | Represents a set of options that define how DataBrew will read a
--   comma-separated value (CSV) file when creating a dataset from that
--   file.
--   
--   <i>See:</i> <a>newCsvOptions</a> smart constructor.
data CsvOptions
CsvOptions' :: Maybe Bool -> Maybe Text -> CsvOptions

-- | Create a value of <a>CsvOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerRow:CsvOptions'</a>, <a>csvOptions_headerRow</a> - A
--   variable that specifies whether the first row in the file is parsed as
--   the header. If this value is false, column names are auto-generated.
--   
--   <a>$sel:delimiter:CsvOptions'</a>, <a>csvOptions_delimiter</a> - A
--   single character that specifies the delimiter being used in the CSV
--   file.
newCsvOptions :: CsvOptions

-- | Represents a set of options that define how DataBrew will write a
--   comma-separated value (CSV) file.
--   
--   <i>See:</i> <a>newCsvOutputOptions</a> smart constructor.
data CsvOutputOptions
CsvOutputOptions' :: Maybe Text -> CsvOutputOptions

-- | Create a value of <a>CsvOutputOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:delimiter:CsvOutputOptions'</a>,
--   <a>csvOutputOptions_delimiter</a> - A single character that specifies
--   the delimiter used to create CSV job output.
newCsvOutputOptions :: CsvOutputOptions

-- | Represents how metadata stored in the Glue Data Catalog is defined in
--   a DataBrew dataset.
--   
--   <i>See:</i> <a>newDataCatalogInputDefinition</a> smart constructor.
data DataCatalogInputDefinition
DataCatalogInputDefinition' :: Maybe S3Location -> Maybe Text -> Text -> Text -> DataCatalogInputDefinition

-- | Create a value of <a>DataCatalogInputDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_tempDirectory</a> - Represents an Amazon
--   location where DataBrew can store intermediate results.
--   
--   <a>$sel:catalogId:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_catalogId</a> - The unique identifier of
--   the Amazon Web Services account that holds the Data Catalog that
--   stores the data.
--   
--   <a>$sel:databaseName:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_databaseName</a> - The name of a
--   database in the Data Catalog.
--   
--   <a>$sel:tableName:DataCatalogInputDefinition'</a>,
--   <a>dataCatalogInputDefinition_tableName</a> - The name of a database
--   table in the Data Catalog. This table corresponds to a DataBrew
--   dataset.
newDataCatalogInputDefinition :: Text -> Text -> DataCatalogInputDefinition

-- | Represents options that specify how and where in the Glue Data Catalog
--   DataBrew writes the output generated by recipe jobs.
--   
--   <i>See:</i> <a>newDataCatalogOutput</a> smart constructor.
data DataCatalogOutput
DataCatalogOutput' :: Maybe DatabaseTableOutputOptions -> Maybe S3TableOutputOptions -> Maybe Text -> Maybe Bool -> Text -> Text -> DataCatalogOutput

-- | Create a value of <a>DataCatalogOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseOptions:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_databaseOptions</a> - Represents options that
--   specify how and where DataBrew writes the database output generated by
--   recipe jobs.
--   
--   <a>$sel:s3Options:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_s3Options</a> - Represents options that specify
--   how and where DataBrew writes the Amazon S3 output generated by recipe
--   jobs.
--   
--   <a>$sel:catalogId:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_catalogId</a> - The unique identifier of the
--   Amazon Web Services account that holds the Data Catalog that stores
--   the data.
--   
--   <a>$sel:overwrite:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_overwrite</a> - A value that, if true, means that
--   any data in the location specified for output is overwritten with new
--   output. Not supported with DatabaseOptions.
--   
--   <a>$sel:databaseName:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_databaseName</a> - The name of a database in the
--   Data Catalog.
--   
--   <a>$sel:tableName:DataCatalogOutput'</a>,
--   <a>dataCatalogOutput_tableName</a> - The name of a table in the Data
--   Catalog.
newDataCatalogOutput :: Text -> Text -> DataCatalogOutput

-- | Connection information for dataset input files stored in a database.
--   
--   <i>See:</i> <a>newDatabaseInputDefinition</a> smart constructor.
data DatabaseInputDefinition
DatabaseInputDefinition' :: Maybe S3Location -> Text -> Text -> DatabaseInputDefinition

-- | Create a value of <a>DatabaseInputDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_tempDirectory</a> - Undocumented member.
--   
--   <a>$sel:glueConnectionName:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_glueConnectionName</a> - The Glue
--   Connection that stores the connection information for the target
--   database.
--   
--   <a>$sel:databaseTableName:DatabaseInputDefinition'</a>,
--   <a>databaseInputDefinition_databaseTableName</a> - The table within
--   the target database.
newDatabaseInputDefinition :: Text -> Text -> DatabaseInputDefinition

-- | Represents a JDBC database output object which defines the output
--   destination for a DataBrew recipe job to write into.
--   
--   <i>See:</i> <a>newDatabaseOutput</a> smart constructor.
data DatabaseOutput
DatabaseOutput' :: Maybe DatabaseOutputMode -> Text -> DatabaseTableOutputOptions -> DatabaseOutput

-- | Create a value of <a>DatabaseOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseOutputMode:DatabaseOutput'</a>,
--   <a>databaseOutput_databaseOutputMode</a> - The output mode to write
--   into the database. Currently supported option: NEW_TABLE.
--   
--   <a>$sel:glueConnectionName:DatabaseOutput'</a>,
--   <a>databaseOutput_glueConnectionName</a> - The Glue connection that
--   stores the connection information for the target database.
--   
--   <a>$sel:databaseOptions:DatabaseOutput'</a>,
--   <a>databaseOutput_databaseOptions</a> - Represents options that
--   specify how and where DataBrew writes the database output generated by
--   recipe jobs.
newDatabaseOutput :: Text -> DatabaseTableOutputOptions -> DatabaseOutput

-- | Represents options that specify how and where DataBrew writes the
--   database output generated by recipe jobs.
--   
--   <i>See:</i> <a>newDatabaseTableOutputOptions</a> smart constructor.
data DatabaseTableOutputOptions
DatabaseTableOutputOptions' :: Maybe S3Location -> Text -> DatabaseTableOutputOptions

-- | Create a value of <a>DatabaseTableOutputOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tempDirectory:DatabaseTableOutputOptions'</a>,
--   <a>databaseTableOutputOptions_tempDirectory</a> - Represents an Amazon
--   S3 location (bucket name and object key) where DataBrew can store
--   intermediate results.
--   
--   <a>$sel:tableName:DatabaseTableOutputOptions'</a>,
--   <a>databaseTableOutputOptions_tableName</a> - A prefix for the name of
--   a table DataBrew will create in the database.
newDatabaseTableOutputOptions :: Text -> DatabaseTableOutputOptions

-- | Represents a dataset that can be processed by DataBrew.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe POSIX -> Maybe PathOptions -> Maybe POSIX -> Maybe FormatOptions -> Maybe InputFormat -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Source -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Input -> Dataset

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Dataset'</a>, <a>dataset_lastModifiedDate</a>
--   - The last modification date and time of the dataset.
--   
--   <a>$sel:pathOptions:Dataset'</a>, <a>dataset_pathOptions</a> - A set
--   of options that defines how DataBrew interprets an Amazon S3 path of
--   the dataset.
--   
--   <a>$sel:createDate:Dataset'</a>, <a>dataset_createDate</a> - The date
--   and time that the dataset was created.
--   
--   <a>$sel:formatOptions:Dataset'</a>, <a>dataset_formatOptions</a> - A
--   set of options that define how DataBrew interprets the data in the
--   dataset.
--   
--   <a>$sel:format:Dataset'</a>, <a>dataset_format</a> - The file format
--   of a dataset that is created from an Amazon S3 file or folder.
--   
--   <a>$sel:createdBy:Dataset'</a>, <a>dataset_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who created the dataset.
--   
--   <a>$sel:accountId:Dataset'</a>, <a>dataset_accountId</a> - The ID of
--   the Amazon Web Services account that owns the dataset.
--   
--   <a>$sel:resourceArn:Dataset'</a>, <a>dataset_resourceArn</a> - The
--   unique Amazon Resource Name (ARN) for the dataset.
--   
--   <a>$sel:source:Dataset'</a>, <a>dataset_source</a> - The location of
--   the data for the dataset, either Amazon S3 or the Glue Data Catalog.
--   
--   <a>$sel:lastModifiedBy:Dataset'</a>, <a>dataset_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   dataset.
--   
--   <a>$sel:tags:Dataset'</a>, <a>dataset_tags</a> - Metadata tags that
--   have been applied to the dataset.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The unique name of
--   the dataset.
--   
--   <a>$sel:input:Dataset'</a>, <a>dataset_input</a> - Information on how
--   DataBrew can find the dataset, in either the Glue Data Catalog or
--   Amazon S3.
newDataset :: Text -> Input -> Dataset

-- | Represents a dataset paramater that defines type and conditions for a
--   parameter in the Amazon S3 path of the dataset.
--   
--   <i>See:</i> <a>newDatasetParameter</a> smart constructor.
data DatasetParameter
DatasetParameter' :: Maybe Bool -> Maybe FilterExpression -> Maybe DatetimeOptions -> Text -> ParameterType -> DatasetParameter

-- | Create a value of <a>DatasetParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createColumn:DatasetParameter'</a>,
--   <a>datasetParameter_createColumn</a> - Optional boolean value that
--   defines whether the captured value of this parameter should be used to
--   create a new column in a dataset.
--   
--   <a>$sel:filter':DatasetParameter'</a>, <a>datasetParameter_filter</a>
--   - The optional filter expression structure to apply additional
--   matching criteria to the parameter.
--   
--   <a>$sel:datetimeOptions:DatasetParameter'</a>,
--   <a>datasetParameter_datetimeOptions</a> - Additional parameter options
--   such as a format and a timezone. Required for datetime parameters.
--   
--   <a>$sel:name:DatasetParameter'</a>, <a>datasetParameter_name</a> - The
--   name of the parameter that is used in the dataset's Amazon S3 path.
--   
--   <a>$sel:type':DatasetParameter'</a>, <a>datasetParameter_type</a> -
--   The type of the dataset parameter, can be one of a 'String', 'Number'
--   or 'Datetime'.
newDatasetParameter :: Text -> ParameterType -> DatasetParameter

-- | Represents additional options for correct interpretation of datetime
--   parameters used in the Amazon S3 path of a dataset.
--   
--   <i>See:</i> <a>newDatetimeOptions</a> smart constructor.
data DatetimeOptions
DatetimeOptions' :: Maybe Text -> Maybe Text -> Text -> DatetimeOptions

-- | Create a value of <a>DatetimeOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timezoneOffset:DatetimeOptions'</a>,
--   <a>datetimeOptions_timezoneOffset</a> - Optional value for a timezone
--   offset of the datetime parameter value in the Amazon S3 path.
--   Shouldn't be used if Format for this parameter includes timezone
--   fields. If no offset specified, UTC is assumed.
--   
--   <a>$sel:localeCode:DatetimeOptions'</a>,
--   <a>datetimeOptions_localeCode</a> - Optional value for a non-US locale
--   code, needed for correct interpretation of some date formats.
--   
--   <a>$sel:format:DatetimeOptions'</a>, <a>datetimeOptions_format</a> -
--   Required option, that defines the datetime format used for a date
--   parameter in the Amazon S3 path. Should use only supported datetime
--   specifiers and separation characters, all literal a-z or A-Z
--   characters should be escaped with single quotes. E.g.
--   "MM.dd.yyyy-'at'-HH:mm".
newDatetimeOptions :: Text -> DatetimeOptions

-- | Represents a set of options that define how DataBrew will interpret a
--   Microsoft Excel file when creating a dataset from that file.
--   
--   <i>See:</i> <a>newExcelOptions</a> smart constructor.
data ExcelOptions
ExcelOptions' :: Maybe (NonEmpty Natural) -> Maybe (NonEmpty Text) -> Maybe Bool -> ExcelOptions

-- | Create a value of <a>ExcelOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sheetIndexes:ExcelOptions'</a>,
--   <a>excelOptions_sheetIndexes</a> - One or more sheet numbers in the
--   Excel file that will be included in the dataset.
--   
--   <a>$sel:sheetNames:ExcelOptions'</a>, <a>excelOptions_sheetNames</a> -
--   One or more named sheets in the Excel file that will be included in
--   the dataset.
--   
--   <a>$sel:headerRow:ExcelOptions'</a>, <a>excelOptions_headerRow</a> - A
--   variable that specifies whether the first row in the file is parsed as
--   the header. If this value is false, column names are auto-generated.
newExcelOptions :: ExcelOptions

-- | Represents a limit imposed on number of Amazon S3 files that should be
--   selected for a dataset from a connected Amazon S3 path.
--   
--   <i>See:</i> <a>newFilesLimit</a> smart constructor.
data FilesLimit
FilesLimit' :: Maybe OrderedBy -> Maybe Order -> Natural -> FilesLimit

-- | Create a value of <a>FilesLimit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderedBy:FilesLimit'</a>, <a>filesLimit_orderedBy</a> - A
--   criteria to use for Amazon S3 files sorting before their selection. By
--   default uses LAST_MODIFIED_DATE as a sorting criteria. Currently it's
--   the only allowed value.
--   
--   <a>$sel:order:FilesLimit'</a>, <a>filesLimit_order</a> - A criteria to
--   use for Amazon S3 files sorting before their selection. By default
--   uses DESCENDING order, i.e. most recent files are selected first.
--   Anotherpossible value is ASCENDING.
--   
--   <a>$sel:maxFiles:FilesLimit'</a>, <a>filesLimit_maxFiles</a> - The
--   number of Amazon S3 files to select.
newFilesLimit :: Natural -> FilesLimit

-- | Represents a structure for defining parameter conditions. Supported
--   conditions are described here: <a>Supported conditions for dynamic
--   datasets</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <i>See:</i> <a>newFilterExpression</a> smart constructor.
data FilterExpression
FilterExpression' :: Text -> HashMap Text Text -> FilterExpression

-- | Create a value of <a>FilterExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:FilterExpression'</a>,
--   <a>filterExpression_expression</a> - The expression which includes
--   condition names followed by substitution variables, possibly grouped
--   and combined with other conditions. For example, "(starts_with
--   :prefix1 or starts_with :prefix2) and (ends_with :suffix1 or ends_with
--   :suffix2)". Substitution variables should start with ':' symbol.
--   
--   <a>$sel:valuesMap:FilterExpression'</a>,
--   <a>filterExpression_valuesMap</a> - The map of substitution variable
--   names to their values used in this filter expression.
newFilterExpression :: Text -> FilterExpression

-- | Represents a set of options that define the structure of either
--   comma-separated value (CSV), Excel, or JSON input.
--   
--   <i>See:</i> <a>newFormatOptions</a> smart constructor.
data FormatOptions
FormatOptions' :: Maybe JsonOptions -> Maybe CsvOptions -> Maybe ExcelOptions -> FormatOptions

-- | Create a value of <a>FormatOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:json:FormatOptions'</a>, <a>formatOptions_json</a> - Options
--   that define how JSON input is to be interpreted by DataBrew.
--   
--   <a>$sel:csv:FormatOptions'</a>, <a>formatOptions_csv</a> - Options
--   that define how CSV input is to be interpreted by DataBrew.
--   
--   <a>$sel:excel:FormatOptions'</a>, <a>formatOptions_excel</a> - Options
--   that define how Excel input is to be interpreted by DataBrew.
newFormatOptions :: FormatOptions

-- | Represents information on how DataBrew can find data, in either the
--   Glue Data Catalog or Amazon S3.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe DataCatalogInputDefinition -> Maybe S3Location -> Maybe DatabaseInputDefinition -> Input

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogInputDefinition:Input'</a>,
--   <a>input_dataCatalogInputDefinition</a> - The Glue Data Catalog
--   parameters for the data.
--   
--   <a>$sel:s3InputDefinition:Input'</a>, <a>input_s3InputDefinition</a> -
--   The Amazon S3 location where the data is stored.
--   
--   <a>$sel:databaseInputDefinition:Input'</a>,
--   <a>input_databaseInputDefinition</a> - Connection information for
--   dataset input files stored in a database.
newInput :: Input

-- | Represents all of the attributes of a DataBrew job.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe (NonEmpty DataCatalogOutput) -> Maybe POSIX -> Maybe POSIX -> Maybe RecipeReference -> Maybe Text -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe EncryptionMode -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe LogSubscription -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobType -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe JobSample -> Text -> Job

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataCatalogOutputs:Job'</a>, <a>job_dataCatalogOutputs</a> -
--   One or more artifacts that represent the Glue Data Catalog output from
--   running the job.
--   
--   <a>$sel:lastModifiedDate:Job'</a>, <a>job_lastModifiedDate</a> - The
--   modification date and time of the job.
--   
--   <a>$sel:createDate:Job'</a>, <a>job_createDate</a> - The date and time
--   that the job was created.
--   
--   <a>$sel:recipeReference:Job'</a>, <a>job_recipeReference</a> - A set
--   of steps that the job runs.
--   
--   <a>$sel:createdBy:Job'</a>, <a>job_createdBy</a> - The Amazon Resource
--   Name (ARN) of the user who created the job.
--   
--   <a>$sel:databaseOutputs:Job'</a>, <a>job_databaseOutputs</a> -
--   Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
--   
--   <a>$sel:accountId:Job'</a>, <a>job_accountId</a> - The ID of the
--   Amazon Web Services account that owns the job.
--   
--   <a>$sel:encryptionMode:Job'</a>, <a>job_encryptionMode</a> - The
--   encryption mode for the job, which can be one of the following:
--   
--   <ul>
--   <li><tt>SSE-KMS</tt> - Server-side encryption with keys managed by
--   KMS.</li>
--   <li><tt>SSE-S3</tt> - Server-side encryption with keys managed by
--   Amazon S3.</li>
--   </ul>
--   
--   <a>$sel:outputs:Job'</a>, <a>job_outputs</a> - One or more artifacts
--   that represent output from running the job.
--   
--   <a>$sel:resourceArn:Job'</a>, <a>job_resourceArn</a> - The unique
--   Amazon Resource Name (ARN) for the job.
--   
--   <a>$sel:logSubscription:Job'</a>, <a>job_logSubscription</a> - The
--   current status of Amazon CloudWatch logging for the job.
--   
--   <a>$sel:projectName:Job'</a>, <a>job_projectName</a> - The name of the
--   project that the job is associated with.
--   
--   <a>$sel:maxRetries:Job'</a>, <a>job_maxRetries</a> - The maximum
--   number of times to retry the job after a job run fails.
--   
--   <a>$sel:datasetName:Job'</a>, <a>job_datasetName</a> - A dataset that
--   the job is to process.
--   
--   <a>$sel:encryptionKeyArn:Job'</a>, <a>job_encryptionKeyArn</a> - The
--   Amazon Resource Name (ARN) of an encryption key that is used to
--   protect the job output. For more information, see <a>Encrypting data
--   written by DataBrew jobs</a>
--   
--   <a>$sel:maxCapacity:Job'</a>, <a>job_maxCapacity</a> - The maximum
--   number of nodes that can be consumed when the job processes data.
--   
--   <a>$sel:lastModifiedBy:Job'</a>, <a>job_lastModifiedBy</a> - The
--   Amazon Resource Name (ARN) of the user who last modified the job.
--   
--   <a>$sel:type':Job'</a>, <a>job_type</a> - The job type of the job,
--   which must be one of the following:
--   
--   <ul>
--   <li><tt>PROFILE</tt> - A job to analyze a dataset, to determine its
--   size, data types, data distribution, and more.</li>
--   <li><tt>RECIPE</tt> - A job to apply one or more transformations to a
--   dataset.</li>
--   </ul>
--   
--   <a>$sel:timeout:Job'</a>, <a>job_timeout</a> - The job's timeout in
--   minutes. A job that attempts to run longer than this timeout period
--   ends with a status of <tt>TIMEOUT</tt>.
--   
--   <a>$sel:tags:Job'</a>, <a>job_tags</a> - Metadata tags that have been
--   applied to the job.
--   
--   <a>$sel:roleArn:Job'</a>, <a>job_roleArn</a> - The Amazon Resource
--   Name (ARN) of the role to be assumed for this job.
--   
--   <a>$sel:jobSample:Job'</a>, <a>job_jobSample</a> - A sample
--   configuration for profile jobs only, which determines the number of
--   rows on which the profile job is run. If a <tt>JobSample</tt> value
--   isn't provided, the default value is used. The default value is
--   CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The unique name of the job.
newJob :: Text -> Job

-- | Represents one run of a DataBrew job.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe POSIX -> Maybe JobRunState -> Maybe (NonEmpty DataCatalogOutput) -> Maybe Text -> Maybe POSIX -> Maybe RecipeReference -> Maybe (NonEmpty DatabaseOutput) -> Maybe Text -> Maybe (NonEmpty Output) -> Maybe Text -> Maybe Int -> Maybe LogSubscription -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe JobSample -> JobRun

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:JobRun'</a>, <a>jobRun_completedOn</a> - The date
--   and time when the job completed processing.
--   
--   <a>$sel:state:JobRun'</a>, <a>jobRun_state</a> - The current state of
--   the job run entity itself.
--   
--   <a>$sel:dataCatalogOutputs:JobRun'</a>,
--   <a>jobRun_dataCatalogOutputs</a> - One or more artifacts that
--   represent the Glue Data Catalog output from running the job.
--   
--   <a>$sel:jobName:JobRun'</a>, <a>jobRun_jobName</a> - The name of the
--   job being processed during this run.
--   
--   <a>$sel:startedOn:JobRun'</a>, <a>jobRun_startedOn</a> - The date and
--   time when the job run began.
--   
--   <a>$sel:recipeReference:JobRun'</a>, <a>jobRun_recipeReference</a> -
--   The set of steps processed by the job.
--   
--   <a>$sel:databaseOutputs:JobRun'</a>, <a>jobRun_databaseOutputs</a> -
--   Represents a list of JDBC database output objects which defines the
--   output destination for a DataBrew recipe job to write into.
--   
--   <a>$sel:logGroupName:JobRun'</a>, <a>jobRun_logGroupName</a> - The
--   name of an Amazon CloudWatch log group, where the job writes
--   diagnostic messages when it runs.
--   
--   <a>$sel:outputs:JobRun'</a>, <a>jobRun_outputs</a> - One or more
--   output artifacts from a job run.
--   
--   <a>$sel:runId:JobRun'</a>, <a>jobRun_runId</a> - The unique identifier
--   of the job run.
--   
--   <a>$sel:executionTime:JobRun'</a>, <a>jobRun_executionTime</a> - The
--   amount of time, in seconds, during which a job run consumed resources.
--   
--   <a>$sel:logSubscription:JobRun'</a>, <a>jobRun_logSubscription</a> -
--   The current status of Amazon CloudWatch logging for the job run.
--   
--   <a>$sel:startedBy:JobRun'</a>, <a>jobRun_startedBy</a> - The Amazon
--   Resource Name (ARN) of the user who initiated the job run.
--   
--   <a>$sel:datasetName:JobRun'</a>, <a>jobRun_datasetName</a> - The name
--   of the dataset for the job to process.
--   
--   <a>$sel:attempt:JobRun'</a>, <a>jobRun_attempt</a> - The number of
--   times that DataBrew has attempted to run the job.
--   
--   <a>$sel:errorMessage:JobRun'</a>, <a>jobRun_errorMessage</a> - A
--   message indicating an error (if any) that was encountered when the job
--   ran.
--   
--   <a>$sel:jobSample:JobRun'</a>, <a>jobRun_jobSample</a> - A sample
--   configuration for profile jobs only, which determines the number of
--   rows on which the profile job is run. If a <tt>JobSample</tt> value
--   isn't provided, the default is used. The default value is CUSTOM_ROWS
--   for the mode parameter and 20,000 for the size parameter.
newJobRun :: JobRun

-- | A sample configuration for profile jobs only, which determines the
--   number of rows on which the profile job is run. If a
--   <tt>JobSample</tt> value isn't provided, the default is used. The
--   default value is CUSTOM_ROWS for the mode parameter and 20,000 for the
--   size parameter.
--   
--   <i>See:</i> <a>newJobSample</a> smart constructor.
data JobSample
JobSample' :: Maybe Integer -> Maybe SampleMode -> JobSample

-- | Create a value of <a>JobSample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:JobSample'</a>, <a>jobSample_size</a> - The <tt>Size</tt>
--   parameter is only required when the mode is CUSTOM_ROWS. The profile
--   job is run on the specified number of rows. The maximum value for size
--   is Long.MAX_VALUE.
--   
--   Long.MAX_VALUE = 9223372036854775807
--   
--   <a>$sel:mode:JobSample'</a>, <a>jobSample_mode</a> - A value that
--   determines whether the profile job is run on the entire dataset or a
--   specified number of rows. This value must be one of the following:
--   
--   <ul>
--   <li>FULL_DATASET - The profile job is run on the entire dataset.</li>
--   <li>CUSTOM_ROWS - The profile job is run on the number of rows
--   specified in the <tt>Size</tt> parameter.</li>
--   </ul>
newJobSample :: JobSample

-- | Represents the JSON-specific options that define how input is to be
--   interpreted by Glue DataBrew.
--   
--   <i>See:</i> <a>newJsonOptions</a> smart constructor.
data JsonOptions
JsonOptions' :: Maybe Bool -> JsonOptions

-- | Create a value of <a>JsonOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:multiLine:JsonOptions'</a>, <a>jsonOptions_multiLine</a> - A
--   value that specifies whether JSON input contains embedded new line
--   characters.
newJsonOptions :: JsonOptions

-- | Represents options that specify how and where in Amazon S3 DataBrew
--   writes the output generated by recipe jobs or profile jobs.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe [Text] -> Maybe OutputFormatOptions -> Maybe OutputFormat -> Maybe CompressionFormat -> Maybe Bool -> S3Location -> Output

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionColumns:Output'</a>, <a>output_partitionColumns</a> -
--   The names of one or more partition columns for the output of the job.
--   
--   <a>$sel:formatOptions:Output'</a>, <a>output_formatOptions</a> -
--   Represents options that define how DataBrew formats job output files.
--   
--   <a>$sel:format:Output'</a>, <a>output_format</a> - The data format of
--   the output of the job.
--   
--   <a>$sel:compressionFormat:Output'</a>, <a>output_compressionFormat</a>
--   - The compression algorithm used to compress the output text of the
--   job.
--   
--   <a>$sel:overwrite:Output'</a>, <a>output_overwrite</a> - A value that,
--   if true, means that any data in the location specified for output is
--   overwritten with new output.
--   
--   <a>$sel:location:Output'</a>, <a>output_location</a> - The location in
--   Amazon S3 where the job writes its output.
newOutput :: S3Location -> Output

-- | Represents a set of options that define the structure of
--   comma-separated (CSV) job output.
--   
--   <i>See:</i> <a>newOutputFormatOptions</a> smart constructor.
data OutputFormatOptions
OutputFormatOptions' :: Maybe CsvOutputOptions -> OutputFormatOptions

-- | Create a value of <a>OutputFormatOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csv:OutputFormatOptions'</a>, <a>outputFormatOptions_csv</a> -
--   Represents a set of options that define the structure of
--   comma-separated value (CSV) job output.
newOutputFormatOptions :: OutputFormatOptions

-- | Represents a set of options that define how DataBrew selects files for
--   a given Amazon S3 path in a dataset.
--   
--   <i>See:</i> <a>newPathOptions</a> smart constructor.
data PathOptions
PathOptions' :: Maybe FilterExpression -> Maybe (HashMap Text DatasetParameter) -> Maybe FilesLimit -> PathOptions

-- | Create a value of <a>PathOptions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDateCondition:PathOptions'</a>,
--   <a>pathOptions_lastModifiedDateCondition</a> - If provided, this
--   structure defines a date range for matching Amazon S3 objects based on
--   their LastModifiedDate attribute in Amazon S3.
--   
--   <a>$sel:parameters:PathOptions'</a>, <a>pathOptions_parameters</a> - A
--   structure that maps names of parameters used in the Amazon S3 path of
--   a dataset to their definitions.
--   
--   <a>$sel:filesLimit:PathOptions'</a>, <a>pathOptions_filesLimit</a> -
--   If provided, this structure imposes a limit on a number of files that
--   should be selected.
newPathOptions :: PathOptions

-- | Configuration for profile jobs. Configuration can be used to select
--   columns, do evaluations, and override default parameters of
--   evaluations. When configuration is undefined, the profile job will
--   apply default settings to all supported columns.
--   
--   <i>See:</i> <a>newProfileConfiguration</a> smart constructor.
data ProfileConfiguration
ProfileConfiguration' :: Maybe StatisticsConfiguration -> Maybe (NonEmpty ColumnStatisticsConfiguration) -> Maybe (NonEmpty ColumnSelector) -> ProfileConfiguration

-- | Create a value of <a>ProfileConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetStatisticsConfiguration:ProfileConfiguration'</a>,
--   <a>profileConfiguration_datasetStatisticsConfiguration</a> -
--   Configuration for inter-column evaluations. Configuration can be used
--   to select evaluations and override parameters of evaluations. When
--   configuration is undefined, the profile job will run all supported
--   inter-column evaluations.
--   
--   <a>$sel:columnStatisticsConfigurations:ProfileConfiguration'</a>,
--   <a>profileConfiguration_columnStatisticsConfigurations</a> - List of
--   configurations for column evaluations. ColumnStatisticsConfigurations
--   are used to select evaluations and override parameters of evaluations
--   for particular columns. When ColumnStatisticsConfigurations is
--   undefined, the profile job will profile all supported columns and run
--   all supported evaluations.
--   
--   <a>$sel:profileColumns:ProfileConfiguration'</a>,
--   <a>profileConfiguration_profileColumns</a> - List of column selectors.
--   ProfileColumns can be used to select columns from the dataset. When
--   ProfileColumns is undefined, the profile job will profile all
--   supported columns.
newProfileConfiguration :: ProfileConfiguration

-- | Represents all of the attributes of a DataBrew project.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Sample -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Text -> Project

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Project'</a>, <a>project_lastModifiedDate</a>
--   - The last modification date and time for the project.
--   
--   <a>$sel:openDate:Project'</a>, <a>project_openDate</a> - The date and
--   time when the project was opened.
--   
--   <a>$sel:createDate:Project'</a>, <a>project_createDate</a> - The date
--   and time that the project was created.
--   
--   <a>$sel:createdBy:Project'</a>, <a>project_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who crated the project.
--   
--   <a>$sel:accountId:Project'</a>, <a>project_accountId</a> - The ID of
--   the Amazon Web Services account that owns the project.
--   
--   <a>$sel:resourceArn:Project'</a>, <a>project_resourceArn</a> - The
--   Amazon Resource Name (ARN) for the project.
--   
--   <a>$sel:datasetName:Project'</a>, <a>project_datasetName</a> - The
--   dataset that the project is to act upon.
--   
--   <a>$sel:lastModifiedBy:Project'</a>, <a>project_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   project.
--   
--   <a>$sel:sample:Project'</a>, <a>project_sample</a> - The sample size
--   and sampling type to apply to the data. If this parameter isn't
--   specified, then the sample consists of the first 500 rows from the
--   dataset.
--   
--   <a>$sel:openedBy:Project'</a>, <a>project_openedBy</a> - The Amazon
--   Resource Name (ARN) of the user that opened the project for use.
--   
--   <a>$sel:tags:Project'</a>, <a>project_tags</a> - Metadata tags that
--   have been applied to the project.
--   
--   <a>$sel:roleArn:Project'</a>, <a>project_roleArn</a> - The Amazon
--   Resource Name (ARN) of the role that will be assumed for this project.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The unique name of a
--   project.
--   
--   <a>$sel:recipeName:Project'</a>, <a>project_recipeName</a> - The name
--   of a recipe that will be developed during a project session.
newProject :: Text -> Text -> Project

-- | Represents one or more actions to be performed on a DataBrew dataset.
--   
--   <i>See:</i> <a>newRecipe</a> smart constructor.
data Recipe
Recipe' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [RecipeStep] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Recipe

-- | Create a value of <a>Recipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Recipe'</a>, <a>recipe_lastModifiedDate</a> -
--   The last modification date and time of the recipe.
--   
--   <a>$sel:createDate:Recipe'</a>, <a>recipe_createDate</a> - The date
--   and time that the recipe was created.
--   
--   <a>$sel:publishedBy:Recipe'</a>, <a>recipe_publishedBy</a> - The
--   Amazon Resource Name (ARN) of the user who published the recipe.
--   
--   <a>$sel:createdBy:Recipe'</a>, <a>recipe_createdBy</a> - The Amazon
--   Resource Name (ARN) of the user who created the recipe.
--   
--   <a>$sel:steps:Recipe'</a>, <a>recipe_steps</a> - A list of steps that
--   are defined by the recipe.
--   
--   <a>$sel:publishedDate:Recipe'</a>, <a>recipe_publishedDate</a> - The
--   date and time when the recipe was published.
--   
--   <a>$sel:resourceArn:Recipe'</a>, <a>recipe_resourceArn</a> - The
--   Amazon Resource Name (ARN) for the recipe.
--   
--   <a>$sel:recipeVersion:Recipe'</a>, <a>recipe_recipeVersion</a> - The
--   identifier for the version for the recipe. Must be one of the
--   following:
--   
--   <ul>
--   <li>Numeric version (<tt>X.Y</tt>) - <tt>X</tt> and <tt>Y</tt> stand
--   for major and minor version numbers. The maximum length of each is 6
--   digits, and neither can be negative values. Both <tt>X</tt> and
--   <tt>Y</tt> are required, and "0.0" isn't a valid version.</li>
--   <li><tt>LATEST_WORKING</tt> - the most recent valid version being
--   developed in a DataBrew project.</li>
--   <li><tt>LATEST_PUBLISHED</tt> - the most recent published
--   version.</li>
--   </ul>
--   
--   <a>$sel:projectName:Recipe'</a>, <a>recipe_projectName</a> - The name
--   of the project that the recipe is associated with.
--   
--   <a>$sel:lastModifiedBy:Recipe'</a>, <a>recipe_lastModifiedBy</a> - The
--   Amazon Resource Name (ARN) of the user who last modified the recipe.
--   
--   <a>$sel:description:Recipe'</a>, <a>recipe_description</a> - The
--   description of the recipe.
--   
--   <a>$sel:tags:Recipe'</a>, <a>recipe_tags</a> - Metadata tags that have
--   been applied to the recipe.
--   
--   <a>$sel:name:Recipe'</a>, <a>recipe_name</a> - The unique name for the
--   recipe.
newRecipe :: Text -> Recipe

-- | Represents a transformation and associated parameters that are used to
--   apply a change to a DataBrew dataset. For more information, see
--   <a>Recipe actions reference</a>.
--   
--   <i>See:</i> <a>newRecipeAction</a> smart constructor.
data RecipeAction
RecipeAction' :: Maybe (HashMap Text Text) -> Text -> RecipeAction

-- | Create a value of <a>RecipeAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:RecipeAction'</a>, <a>recipeAction_parameters</a> -
--   Contextual parameters for the transformation.
--   
--   <a>$sel:operation:RecipeAction'</a>, <a>recipeAction_operation</a> -
--   The name of a valid DataBrew transformation to be performed on the
--   data.
newRecipeAction :: Text -> RecipeAction

-- | Represents the name and version of a DataBrew recipe.
--   
--   <i>See:</i> <a>newRecipeReference</a> smart constructor.
data RecipeReference
RecipeReference' :: Maybe Text -> Text -> RecipeReference

-- | Create a value of <a>RecipeReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:RecipeReference'</a>,
--   <a>recipeReference_recipeVersion</a> - The identifier for the version
--   for the recipe.
--   
--   <a>$sel:name:RecipeReference'</a>, <a>recipeReference_name</a> - The
--   name of the recipe.
newRecipeReference :: Text -> RecipeReference

-- | Represents a single step from a DataBrew recipe to be performed.
--   
--   <i>See:</i> <a>newRecipeStep</a> smart constructor.
data RecipeStep
RecipeStep' :: Maybe [ConditionExpression] -> RecipeAction -> RecipeStep

-- | Create a value of <a>RecipeStep</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conditionExpressions:RecipeStep'</a>,
--   <a>recipeStep_conditionExpressions</a> - One or more conditions that
--   must be met for the recipe step to succeed.
--   
--   All of the conditions in the array must be met. In other words, all of
--   the conditions must be combined using a logical AND operation.
--   
--   <a>$sel:action:RecipeStep'</a>, <a>recipeStep_action</a> - The
--   particular action to be performed in the recipe step.
newRecipeStep :: RecipeAction -> RecipeStep

-- | Represents any errors encountered when attempting to delete multiple
--   recipe versions.
--   
--   <i>See:</i> <a>newRecipeVersionErrorDetail</a> smart constructor.
data RecipeVersionErrorDetail
RecipeVersionErrorDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> RecipeVersionErrorDetail

-- | Create a value of <a>RecipeVersionErrorDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeVersion:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_recipeVersion</a> - The identifier for the
--   recipe version associated with this error.
--   
--   <a>$sel:errorCode:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_errorCode</a> - The HTTP status code for
--   the error.
--   
--   <a>$sel:errorMessage:RecipeVersionErrorDetail'</a>,
--   <a>recipeVersionErrorDetail_errorMessage</a> - The text of the error
--   message.
newRecipeVersionErrorDetail :: RecipeVersionErrorDetail

-- | Represents an Amazon S3 location (bucket name and object key) where
--   DataBrew can read input data, or write output from a job.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Text -> S3Location

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The unique name
--   of the object in the bucket.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The Amazon
--   S3 bucket name.
newS3Location :: Text -> S3Location

-- | Represents options that specify how and where DataBrew writes the
--   Amazon S3 output generated by recipe jobs.
--   
--   <i>See:</i> <a>newS3TableOutputOptions</a> smart constructor.
data S3TableOutputOptions
S3TableOutputOptions' :: S3Location -> S3TableOutputOptions

-- | Create a value of <a>S3TableOutputOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:S3TableOutputOptions'</a>,
--   <a>s3TableOutputOptions_location</a> - Represents an Amazon S3
--   location (bucket name and object key) where DataBrew can write output
--   from a job.
newS3TableOutputOptions :: S3Location -> S3TableOutputOptions

-- | Represents the sample size and sampling type for DataBrew to use for
--   interactive data analysis.
--   
--   <i>See:</i> <a>newSample</a> smart constructor.
data Sample
Sample' :: Maybe Natural -> SampleType -> Sample

-- | Create a value of <a>Sample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:Sample'</a>, <a>sample_size</a> - The number of rows in
--   the sample.
--   
--   <a>$sel:type':Sample'</a>, <a>sample_type</a> - The way in which
--   DataBrew obtains rows from a dataset.
newSample :: SampleType -> Sample

-- | Represents one or more dates and times when a job is to run.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe (HashMap Text Text) -> Text -> Schedule

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Schedule'</a>,
--   <a>schedule_lastModifiedDate</a> - The date and time when the schedule
--   was last modified.
--   
--   <a>$sel:createDate:Schedule'</a>, <a>schedule_createDate</a> - The
--   date and time that the schedule was created.
--   
--   <a>$sel:createdBy:Schedule'</a>, <a>schedule_createdBy</a> - The
--   Amazon Resource Name (ARN) of the user who created the schedule.
--   
--   <a>$sel:accountId:Schedule'</a>, <a>schedule_accountId</a> - The ID of
--   the Amazon Web Services account that owns the schedule.
--   
--   <a>$sel:resourceArn:Schedule'</a>, <a>schedule_resourceArn</a> - The
--   Amazon Resource Name (ARN) of the schedule.
--   
--   <a>$sel:cronExpression:Schedule'</a>, <a>schedule_cronExpression</a> -
--   The dates and times when the job is to run. For more information, see
--   <a>Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
--   
--   <a>$sel:lastModifiedBy:Schedule'</a>, <a>schedule_lastModifiedBy</a> -
--   The Amazon Resource Name (ARN) of the user who last modified the
--   schedule.
--   
--   <a>$sel:jobNames:Schedule'</a>, <a>schedule_jobNames</a> - A list of
--   jobs to be run, according to the schedule.
--   
--   <a>$sel:tags:Schedule'</a>, <a>schedule_tags</a> - Metadata tags that
--   have been applied to the schedule.
--   
--   <a>$sel:name:Schedule'</a>, <a>schedule_name</a> - The name of the
--   schedule.
newSchedule :: Text -> Schedule

-- | Override of a particular evaluation for a profile job.
--   
--   <i>See:</i> <a>newStatisticOverride</a> smart constructor.
data StatisticOverride
StatisticOverride' :: Text -> HashMap Text Text -> StatisticOverride

-- | Create a value of <a>StatisticOverride</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statistic:StatisticOverride'</a>,
--   <a>statisticOverride_statistic</a> - The name of an evaluation
--   
--   <a>$sel:parameters:StatisticOverride'</a>,
--   <a>statisticOverride_parameters</a> - A map that includes overrides of
--   an evaluation’s parameters.
newStatisticOverride :: Text -> StatisticOverride

-- | Configuration of evaluations for a profile job. This configuration can
--   be used to select evaluations and override the parameters of selected
--   evaluations.
--   
--   <i>See:</i> <a>newStatisticsConfiguration</a> smart constructor.
data StatisticsConfiguration
StatisticsConfiguration' :: Maybe (NonEmpty StatisticOverride) -> Maybe (NonEmpty Text) -> StatisticsConfiguration

-- | Create a value of <a>StatisticsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrides:StatisticsConfiguration'</a>,
--   <a>statisticsConfiguration_overrides</a> - List of overrides for
--   evaluations.
--   
--   <a>$sel:includedStatistics:StatisticsConfiguration'</a>,
--   <a>statisticsConfiguration_includedStatistics</a> - List of included
--   evaluations. When the list is undefined, all supported evaluations
--   will be included.
newStatisticsConfiguration :: StatisticsConfiguration

-- | Represents the data being transformed during an action.
--   
--   <i>See:</i> <a>newViewFrame</a> smart constructor.
data ViewFrame
ViewFrame' :: Maybe [Text] -> Maybe Natural -> Natural -> ViewFrame

-- | Create a value of <a>ViewFrame</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hiddenColumns:ViewFrame'</a>, <a>viewFrame_hiddenColumns</a> -
--   A list of columns to hide in the view frame.
--   
--   <a>$sel:columnRange:ViewFrame'</a>, <a>viewFrame_columnRange</a> - The
--   number of columns to include in the view frame, beginning with the
--   <tt>StartColumnIndex</tt> value and ignoring any columns in the
--   <tt>HiddenColumns</tt> list.
--   
--   <a>$sel:startColumnIndex:ViewFrame'</a>,
--   <a>viewFrame_startColumnIndex</a> - The starting index for the range
--   of columns to return in the view frame.
newViewFrame :: Natural -> ViewFrame
